; ModuleID = '../../v8/src/runtime/runtime-regexp.cc'
source_filename = "../../v8/src/runtime/runtime-regexp.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.1153" = type { %"struct.std::__1::__atomic_base.1154" }
%"struct.std::__1::__atomic_base.1154" = type { %"struct.std::__1::__atomic_base.1155" }
%"struct.std::__1::__atomic_base.1155" = type { %"struct.std::__1::__cxx_atomic_impl.1156" }
%"struct.std::__1::__cxx_atomic_impl.1156" = type { %"struct.std::__1::__cxx_atomic_base_impl.1157" }
%"struct.std::__1::__cxx_atomic_base_impl.1157" = type { i32 }
%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.543" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.141", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.21", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.21", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.21", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.21", i64, i64, %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.31", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.148", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.163", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.21", i64, i8, %"struct.std::__1::atomic.21", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.167", %"class.std::__1::vector.167", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.180", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.322", %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.430", %"class.std::__1::unique_ptr.436", %"class.std::__1::unique_ptr.446", %"class.std::__1::unique_ptr.452", %"class.std::__1::unique_ptr.452", %"class.std::__1::unique_ptr.458", %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.470", %"class.std::__1::unique_ptr.476", %"class.std::__1::shared_ptr.482", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.505", %"class.std::__1::unique_ptr.531", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.537", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.550", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.332", i8, [7 x i8], %"class.std::__1::unordered_map.556", %"class.std::__1::unordered_map.582", %"class.std::__1::unordered_map.556", %"class.std::__1::unordered_map.606", %"class.std::__1::vector.634", i8, %"class.std::__1::unique_ptr.641", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.4", %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.18", [4 x i8] }>
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.26", %"struct.std::__1::atomic.26", %"struct.std::__1::atomic.26" }
%"struct.std::__1::atomic.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl.29" }
%"struct.std::__1::__cxx_atomic_impl.29" = type { %"struct.std::__1::__cxx_atomic_base_impl.30" }
%"struct.std::__1::__cxx_atomic_base_impl.30" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.647", %"class.std::__1::unique_ptr.668", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.678", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.817", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.830", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.840", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.851", %"struct.std::__1::atomic.154", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.926", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.969"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.977", i32, i8, i8, i32, i32, %"class.std::__1::vector.983", %"class.std::__1::vector.983", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.990", i64, %"class.std::__1::unordered_map.991", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.543", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.162", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1047", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1085", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1119", %"class.std::__1::vector.1123", %"class.std::__1::vector.1123", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.1", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.1" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.647" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.141", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.648", %"class.std::__1::unique_ptr.662" }
%"class.std::__1::unique_ptr.648" = type { %"class.std::__1::__compressed_pair.649" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.650" }
%"struct.std::__1::__compressed_pair_elem.650" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.651" }
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.std::__1::unique_ptr.653"*, %"class.std::__1::unique_ptr.653"*, %"class.std::__1::__compressed_pair.654" }
%"class.std::__1::unique_ptr.653" = type { %"class.std::__1::__compressed_pair.1138" }
%"class.std::__1::__compressed_pair.1138" = type { %"struct.std::__1::__compressed_pair_elem.1139" }
%"struct.std::__1::__compressed_pair_elem.1139" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"class.std::__1::unique_ptr.653"* }
%"class.std::__1::unique_ptr.662" = type { %"class.std::__1::__compressed_pair.663" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.668" = type { %"class.std::__1::__compressed_pair.669" }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.670" }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.671", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.671" = type { %"struct.std::__1::__atomic_base.672" }
%"struct.std::__1::__atomic_base.672" = type { %"struct.std::__1::__cxx_atomic_impl.673" }
%"struct.std::__1::__cxx_atomic_impl.673" = type { %"struct.std::__1::__cxx_atomic_base_impl.674" }
%"struct.std::__1::__cxx_atomic_base_impl.674" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.678" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.679", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.679" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.680", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.680" = type { %"class.std::__1::__vector_base.681" }
%"class.std::__1::__vector_base.681" = type { %"class.std::__1::unique_ptr.682"*, %"class.std::__1::unique_ptr.682"*, %"class.std::__1::__compressed_pair.683" }
%"class.std::__1::unique_ptr.682" = type opaque
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"class.std::__1::unique_ptr.682"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.688", %"class.std::__1::unique_ptr.694", %"struct.std::__1::atomic.154", %"class.std::__1::unique_ptr.700", %"class.std::__1::unique_ptr.706", %"class.std::__1::unique_ptr.712", %"class.std::__1::unique_ptr.718", %"class.std::__1::unique_ptr.724", %"class.std::__1::set.730", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.688" = type { %"class.std::__1::__compressed_pair.689" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.690" }
%"struct.std::__1::__compressed_pair_elem.690" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.700" = type { %"class.std::__1::__compressed_pair.701" }
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.702" }
%"struct.std::__1::__compressed_pair_elem.702" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.706" = type { %"class.std::__1::__compressed_pair.707" }
%"class.std::__1::__compressed_pair.707" = type { %"struct.std::__1::__compressed_pair_elem.708" }
%"struct.std::__1::__compressed_pair_elem.708" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.712" = type { %"class.std::__1::__compressed_pair.713" }
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.714" }
%"struct.std::__1::__compressed_pair_elem.714" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.718" = type { %"class.std::__1::__compressed_pair.719" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.720" }
%"struct.std::__1::__compressed_pair_elem.720" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.730" = type { %"class.std::__1::__tree.731" }
%"class.std::__1::__tree.731" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.732", %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.732" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.739" }
%"class.v8::internal::TaggedImpl.739" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.738" }
%"class.v8::internal::TaggedImpl.738" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.746", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.746" = type { %"class.std::__1::__compressed_pair.747" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.748" }
%"struct.std::__1::__compressed_pair_elem.748" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.752", %"class.v8::internal::DetachableVector.753", %"class.v8::internal::DetachableVector.752", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.753" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.752" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", %"class.std::__1::unique_ptr.740", %"class.std::__1::unique_ptr.483" }
%"class.std::__1::unique_ptr.740" = type { %"class.std::__1::__compressed_pair.741" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.742" }
%"struct.std::__1::__compressed_pair_elem.742" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.486", %"class.std::__1::set.494" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.486" = type { %"class.std::__1::__tree.487" }
%"class.std::__1::__tree.487" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.488", %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::set.494" = type { %"class.std::__1::__tree.495" }
%"class.std::__1::__tree.495" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.488", %"class.std::__1::__compressed_pair.496" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.754", %"class.std::__1::vector.760", %"class.std::__1::unique_ptr.767", %"class.std::__1::vector.774", %"class.std::__1::unique_ptr.781", i64, %"class.std::__1::vector.787", %"class.std::__1::vector.795", %"class.std::__1::vector.803", i8, i8, i32 }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.760" = type { %"class.std::__1::__vector_base.761" }
%"class.std::__1::__vector_base.761" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.762" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.762" = type { %"struct.std::__1::__compressed_pair_elem.763" }
%"struct.std::__1::__compressed_pair_elem.763" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.769" }
%"struct.std::__1::__compressed_pair_elem.769" = type { %"class.v8::internal::GlobalHandles::NodeSpace.770"* }
%"class.v8::internal::GlobalHandles::NodeSpace.770" = type opaque
%"class.std::__1::vector.774" = type { %"class.std::__1::__vector_base.775" }
%"class.std::__1::__vector_base.775" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.776" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.777" }
%"struct.std::__1::__compressed_pair_elem.777" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.781" = type { %"class.std::__1::__compressed_pair.782" }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.783" }
%"struct.std::__1::__compressed_pair_elem.783" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.787" = type { %"class.std::__1::__vector_base.788" }
%"class.std::__1::__vector_base.788" = type { %"struct.std::__1::pair.789"*, %"struct.std::__1::pair.789"*, %"class.std::__1::__compressed_pair.790" }
%"struct.std::__1::pair.789" = type opaque
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.791" }
%"struct.std::__1::__compressed_pair_elem.791" = type { %"struct.std::__1::pair.789"* }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"struct.std::__1::pair.797"*, %"struct.std::__1::pair.797"*, %"class.std::__1::__compressed_pair.798" }
%"struct.std::__1::pair.797" = type opaque
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.799" = type { %"struct.std::__1::pair.797"* }
%"class.std::__1::vector.803" = type { %"class.std::__1::__vector_base.804" }
%"class.std::__1::__vector_base.804" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.805" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.810", %"class.std::__1::vector.817" }
%"class.std::__1::vector.810" = type { %"class.std::__1::__vector_base.811" }
%"class.std::__1::__vector_base.811" = type { i64**, i64**, %"class.std::__1::__compressed_pair.812" }
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.813" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.824" }
%"class.std::__1::unique_ptr.824" = type { %"class.std::__1::__compressed_pair.825" }
%"class.std::__1::__compressed_pair.825" = type { %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.817" = type { %"class.std::__1::__vector_base.818" }
%"class.std::__1::__vector_base.818" = type { i32*, i32*, %"class.std::__1::__compressed_pair.819" }
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820" }
%"struct.std::__1::__compressed_pair_elem.820" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.830" = type { %"struct.std::__1::__atomic_base.831" }
%"struct.std::__1::__atomic_base.831" = type { %"struct.std::__1::__cxx_atomic_impl.832" }
%"struct.std::__1::__cxx_atomic_impl.832" = type { %"struct.std::__1::__cxx_atomic_base_impl.833" }
%"struct.std::__1::__cxx_atomic_base_impl.833" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.840" = type { %"struct.std::__1::__atomic_base.841" }
%"struct.std::__1::__atomic_base.841" = type { %"struct.std::__1::__cxx_atomic_impl.842" }
%"struct.std::__1::__cxx_atomic_impl.842" = type { %"struct.std::__1::__cxx_atomic_base_impl.843" }
%"struct.std::__1::__cxx_atomic_base_impl.843" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.847 }
%union.anon.847 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.851" = type { %"class.std::__1::__hash_table.852" }
%"class.std::__1::__hash_table.852" = type <{ %"class.std::__1::unique_ptr.853", %"class.std::__1::__compressed_pair.863", %"class.std::__1::__compressed_pair.868", %"class.std::__1::__compressed_pair.871", [4 x i8] }>
%"class.std::__1::unique_ptr.853" = type { %"class.std::__1::__compressed_pair.854" }
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.855", %"struct.std::__1::__compressed_pair_elem.857" }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"struct.std::__1::__hash_node_base.856"** }
%"struct.std::__1::__hash_node_base.856" = type { %"struct.std::__1::__hash_node_base.856"* }
%"struct.std::__1::__compressed_pair_elem.857" = type { %"class.std::__1::__bucket_list_deallocator.858" }
%"class.std::__1::__bucket_list_deallocator.858" = type { %"class.std::__1::__compressed_pair.859" }
%"class.std::__1::__compressed_pair.859" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"struct.std::__1::__hash_node_base.856" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.871" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::atomic.154" = type { %"struct.std::__1::__atomic_base.155" }
%"struct.std::__1::__atomic_base.155" = type { %"struct.std::__1::__cxx_atomic_impl.156" }
%"struct.std::__1::__cxx_atomic_impl.156" = type { %"struct.std::__1::__cxx_atomic_base_impl.157" }
%"struct.std::__1::__cxx_atomic_base_impl.157" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.877", %"class.v8::internal::Handle.883", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.884", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.883" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.884" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.885", %"class.std::__1::vector.891", %"class.std::__1::unique_ptr.899", %"class.std::__1::unique_ptr.905", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.911", %"class.std::__1::vector.917", %"struct.std::__1::pair.925" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.885" = type { %"class.std::__1::__compressed_pair.886" }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.887" }
%"struct.std::__1::__compressed_pair_elem.887" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.891" = type { %"class.std::__1::__vector_base.892" }
%"class.std::__1::__vector_base.892" = type { %"class.std::__1::unique_ptr.893"*, %"class.std::__1::unique_ptr.893"*, %"class.std::__1::__compressed_pair.894" }
%"class.std::__1::unique_ptr.893" = type opaque
%"class.std::__1::__compressed_pair.894" = type { %"struct.std::__1::__compressed_pair_elem.895" }
%"struct.std::__1::__compressed_pair_elem.895" = type { %"class.std::__1::unique_ptr.893"* }
%"class.std::__1::unique_ptr.899" = type { %"class.std::__1::__compressed_pair.900" }
%"class.std::__1::__compressed_pair.900" = type { %"struct.std::__1::__compressed_pair_elem.901" }
%"struct.std::__1::__compressed_pair_elem.901" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.905" = type { %"class.std::__1::__compressed_pair.906" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.907" }
%"struct.std::__1::__compressed_pair_elem.907" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.911" = type { %"class.std::__1::__compressed_pair.912" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.917" = type { %"class.std::__1::__vector_base.918" }
%"class.std::__1::__vector_base.918" = type { %"struct.std::__1::pair.919"*, %"struct.std::__1::pair.919"*, %"class.std::__1::__compressed_pair.920" }
%"struct.std::__1::pair.919" = type opaque
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"struct.std::__1::pair.919"* }
%"struct.std::__1::pair.925" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.2"*, i16, i8*)*, i8* }
%"class.v8::Local.2" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.926" = type { %"class.std::__1::__compressed_pair.927" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.928" }
%"struct.std::__1::__compressed_pair_elem.928" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.929", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.929" = type { %"class.std::__1::__hash_table.930" }
%"class.std::__1::__hash_table.930" = type <{ %"class.std::__1::unique_ptr.931", %"class.std::__1::__compressed_pair.941", %"class.std::__1::__compressed_pair.946", %"class.std::__1::__compressed_pair.950", [4 x i8] }>
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933", %"struct.std::__1::__compressed_pair_elem.935" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"struct.std::__1::__hash_node_base.934"** }
%"struct.std::__1::__hash_node_base.934" = type { %"struct.std::__1::__hash_node_base.934"* }
%"struct.std::__1::__compressed_pair_elem.935" = type { %"class.std::__1::__bucket_list_deallocator.936" }
%"class.std::__1::__bucket_list_deallocator.936" = type { %"class.std::__1::__compressed_pair.937" }
%"class.std::__1::__compressed_pair.937" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.941" = type { %"struct.std::__1::__compressed_pair_elem.942" }
%"struct.std::__1::__compressed_pair_elem.942" = type { %"struct.std::__1::__hash_node_base.934" }
%"class.std::__1::__compressed_pair.946" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.950" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.964" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.958"**, %"struct.std::__1::pair.958"**, %"struct.std::__1::pair.958"**, %"class.std::__1::__compressed_pair.959" }
%"struct.std::__1::pair.958" = type opaque
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.960" }
%"struct.std::__1::__compressed_pair_elem.960" = type { %"struct.std::__1::pair.958"** }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.969" = type { %"class.std::__1::__vector_base.970" }
%"class.std::__1::__vector_base.970" = type { %"class.v8::internal::Handle.971"*, %"class.v8::internal::Handle.971"*, %"class.std::__1::__compressed_pair.972" }
%"class.v8::internal::Handle.971" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"class.v8::internal::Handle.971"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.835", i32, %"class.v8::Local.2" }
%"class.v8::Local.835" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.977" = type { %"class.std::__1::__compressed_pair.978" }
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.979" }
%"struct.std::__1::__compressed_pair_elem.979" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.810", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.983" = type { %"class.std::__1::__vector_base.984" }
%"class.std::__1::__vector_base.984" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.985" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.986" }
%"struct.std::__1::__compressed_pair_elem.986" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.990" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.991" = type { %"class.std::__1::__hash_table.992" }
%"class.std::__1::__hash_table.992" = type <{ %"class.std::__1::unique_ptr.993", %"class.std::__1::__compressed_pair.1003", %"class.std::__1::__compressed_pair.1008", %"class.std::__1::__compressed_pair.1011", [4 x i8] }>
%"class.std::__1::unique_ptr.993" = type { %"class.std::__1::__compressed_pair.994" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.995", %"struct.std::__1::__compressed_pair_elem.997" }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"struct.std::__1::__hash_node_base.996"** }
%"struct.std::__1::__hash_node_base.996" = type { %"struct.std::__1::__hash_node_base.996"* }
%"struct.std::__1::__compressed_pair_elem.997" = type { %"class.std::__1::__bucket_list_deallocator.998" }
%"class.std::__1::__bucket_list_deallocator.998" = type { %"class.std::__1::__compressed_pair.999" }
%"class.std::__1::__compressed_pair.999" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1003" = type { %"struct.std::__1::__compressed_pair_elem.1004" }
%"struct.std::__1::__compressed_pair_elem.1004" = type { %"struct.std::__1::__hash_node_base.996" }
%"class.std::__1::__compressed_pair.1008" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1011" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.162" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1015", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1044", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1045", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1015" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1040, %union.anon.1042, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1040 = type { i64 }
%union.anon.1042 = type { i64 }
%"class.std::__1::weak_ptr.1044" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.21", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.162" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1045" = type { %"class.v8::PersistentBase.1046" }
%"class.v8::PersistentBase.1046" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1016", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1016" = type { %"class.std::__1::__hash_table.1017" }
%"class.std::__1::__hash_table.1017" = type <{ %"class.std::__1::unique_ptr.1018", %"class.std::__1::__compressed_pair.1028", %"class.std::__1::__compressed_pair.1033", %"class.std::__1::__compressed_pair.1036", [4 x i8] }>
%"class.std::__1::unique_ptr.1018" = type { %"class.std::__1::__compressed_pair.1019" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.1020", %"struct.std::__1::__compressed_pair_elem.1022" }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"struct.std::__1::__hash_node_base.1021"** }
%"struct.std::__1::__hash_node_base.1021" = type { %"struct.std::__1::__hash_node_base.1021"* }
%"struct.std::__1::__compressed_pair_elem.1022" = type { %"class.std::__1::__bucket_list_deallocator.1023" }
%"class.std::__1::__bucket_list_deallocator.1023" = type { %"class.std::__1::__compressed_pair.1024" }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.1029" }
%"struct.std::__1::__compressed_pair_elem.1029" = type { %"struct.std::__1::__hash_node_base.1021" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1036" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1047" = type { %"class.std::__1::__compressed_pair.1048" }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.1049" }
%"struct.std::__1::__compressed_pair_elem.1049" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1076", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1052", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1056", %"class.std::__1::unique_ptr.1062", %"class.std::__1::unique_ptr.476", %"class.std::__1::vector.1068", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1052" = type { %"struct.std::__1::__atomic_base.1053" }
%"struct.std::__1::__atomic_base.1053" = type { %"struct.std::__1::__cxx_atomic_impl.1054" }
%"struct.std::__1::__cxx_atomic_impl.1054" = type { %"struct.std::__1::__cxx_atomic_base_impl.1055" }
%"struct.std::__1::__cxx_atomic_base_impl.1055" = type { i32 }
%"class.std::__1::unique_ptr.1056" = type { %"class.std::__1::__compressed_pair.1057" }
%"class.std::__1::__compressed_pair.1057" = type { %"struct.std::__1::__compressed_pair_elem.1058" }
%"struct.std::__1::__compressed_pair_elem.1058" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.810" }
%"class.std::__1::unique_ptr.1062" = type { %"class.std::__1::__compressed_pair.1063" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.1064" }
%"struct.std::__1::__compressed_pair_elem.1064" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1068" = type { %"class.std::__1::__vector_base.1069" }
%"class.std::__1::__vector_base.1069" = type { %"struct.std::__1::pair.1070"*, %"struct.std::__1::pair.1070"*, %"class.std::__1::__compressed_pair.1071" }
%"struct.std::__1::pair.1070" = type opaque
%"class.std::__1::__compressed_pair.1071" = type { %"struct.std::__1::__compressed_pair_elem.1072" }
%"struct.std::__1::__compressed_pair_elem.1072" = type { %"struct.std::__1::pair.1070"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.21"*, %"class.std::__1::unique_ptr.99" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.40", %"class.std::__1::vector.40", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.42" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.47" }
%"class.std::__1::__hash_table.47" = type <{ %"class.std::__1::unique_ptr.48", %"class.std::__1::__compressed_pair.58", %"class.std::__1::__compressed_pair.63", %"class.std::__1::__compressed_pair.65", [4 x i8] }>
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50", %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.std::__1::__hash_node_base.51"** }
%"struct.std::__1::__hash_node_base.51" = type { %"struct.std::__1::__hash_node_base.51"* }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.std::__1::__bucket_list_deallocator.53" }
%"class.std::__1::__bucket_list_deallocator.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"struct.std::__1::__hash_node_base.51" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.26", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.88", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.21"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.26", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.26", %"struct.std::__1::atomic.70", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.70" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__cxx_atomic_impl.72" }
%"struct.std::__1::__cxx_atomic_impl.72" = type { %"struct.std::__1::__cxx_atomic_base_impl.73" }
%"struct.std::__1::__cxx_atomic_base_impl.73" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.74" }
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.76" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.81", %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::atomic.88" = type { %"struct.std::__1::__atomic_base.89" }
%"struct.std::__1::__atomic_base.89" = type { %"struct.std::__1::__cxx_atomic_impl.90" }
%"struct.std::__1::__cxx_atomic_impl.90" = type { %"struct.std::__1::__cxx_atomic_base_impl.91" }
%"struct.std::__1::__cxx_atomic_base_impl.91" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.92", i8, [7 x i8] }>
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { i64*, i64*, %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.21", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1076" = type { %"class.std::__1::__compressed_pair.1077" }
%"class.std::__1::__compressed_pair.1077" = type { %"struct.std::__1::__compressed_pair_elem.1078" }
%"struct.std::__1::__compressed_pair_elem.1078" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1085" = type { %"class.std::__1::__compressed_pair.1086" }
%"class.std::__1::__compressed_pair.1086" = type { %"struct.std::__1::__compressed_pair_elem.1087" }
%"struct.std::__1::__compressed_pair_elem.1087" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.836", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.836" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1093" }
%"class.std::__1::unordered_map.1093" = type { %"class.std::__1::__hash_table.1094" }
%"class.std::__1::__hash_table.1094" = type <{ %"class.std::__1::unique_ptr.1095", %"class.std::__1::__compressed_pair.1105", %"class.std::__1::__compressed_pair.1110", %"class.std::__1::__compressed_pair.1113", [4 x i8] }>
%"class.std::__1::unique_ptr.1095" = type { %"class.std::__1::__compressed_pair.1096" }
%"class.std::__1::__compressed_pair.1096" = type { %"struct.std::__1::__compressed_pair_elem.1097", %"struct.std::__1::__compressed_pair_elem.1099" }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"struct.std::__1::__hash_node_base.1098"** }
%"struct.std::__1::__hash_node_base.1098" = type { %"struct.std::__1::__hash_node_base.1098"* }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"class.std::__1::__bucket_list_deallocator.1100" }
%"class.std::__1::__bucket_list_deallocator.1100" = type { %"class.std::__1::__compressed_pair.1101" }
%"class.std::__1::__compressed_pair.1101" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1105" = type { %"struct.std::__1::__compressed_pair_elem.1106" }
%"struct.std::__1::__compressed_pair_elem.1106" = type { %"struct.std::__1::__hash_node_base.1098" }
%"class.std::__1::__compressed_pair.1110" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1113" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::atomic.1119" = type { %"struct.std::__1::__atomic_base.1120" }
%"struct.std::__1::__atomic_base.1120" = type { %"struct.std::__1::__cxx_atomic_impl.1121" }
%"struct.std::__1::__cxx_atomic_impl.1121" = type { %"struct.std::__1::__cxx_atomic_base_impl.1122" }
%"struct.std::__1::__cxx_atomic_base_impl.1122" = type { %"class.std::__1::vector.1123"* }
%"class.std::__1::vector.1123" = type { %"class.std::__1::__vector_base.1124" }
%"class.std::__1::__vector_base.1124" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1125" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1125" = type { %"struct.std::__1::__compressed_pair_elem.1126" }
%"struct.std::__1::__compressed_pair_elem.1126" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.31" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__cxx_atomic_impl.33" }
%"struct.std::__1::__cxx_atomic_impl.33" = type { %"struct.std::__1::__cxx_atomic_base_impl.34" }
%"struct.std::__1::__cxx_atomic_base_impl.34" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.35" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.105" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.105" = type { %"class.std::__1::__vector_base.106" }
%"class.std::__1::__vector_base.106" = type { %"struct.std::__1::pair.107"*, %"struct.std::__1::pair.107"*, %"class.std::__1::__compressed_pair.108" }
%"struct.std::__1::pair.107" = type { i32, i64 }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.std::__1::pair.107"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.21", i32, %"struct.std::__1::atomic.21", %"class.v8::base::Mutex", %"struct.std::__1::atomic.21" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.113" }
%"class.std::__1::unordered_map.113" = type { %"class.std::__1::__hash_table.114" }
%"class.std::__1::__hash_table.114" = type <{ %"class.std::__1::unique_ptr.115", %"class.std::__1::__compressed_pair.125", %"class.std::__1::__compressed_pair.130", %"class.std::__1::__compressed_pair.135", [4 x i8] }>
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117", %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"struct.std::__1::__hash_node_base.118"** }
%"struct.std::__1::__hash_node_base.118" = type { %"struct.std::__1::__hash_node_base.118"* }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.std::__1::__bucket_list_deallocator.120" }
%"class.std::__1::__bucket_list_deallocator.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.std::__1::__hash_node_base.118" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.154", %"struct.std::__1::atomic.158", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.21" }
%"struct.std::__1::atomic.158" = type { %"struct.std::__1::__atomic_base.159" }
%"struct.std::__1::__atomic_base.159" = type { %"struct.std::__1::__cxx_atomic_impl.160" }
%"struct.std::__1::__cxx_atomic_impl.160" = type { %"struct.std::__1::__cxx_atomic_base_impl.161" }
%"struct.std::__1::__cxx_atomic_base_impl.161" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.163" = type { %"struct.std::__1::__atomic_base.164" }
%"struct.std::__1::__atomic_base.164" = type { %"struct.std::__1::__cxx_atomic_impl.165" }
%"struct.std::__1::__cxx_atomic_impl.165" = type { %"struct.std::__1::__cxx_atomic_base_impl.166" }
%"struct.std::__1::__cxx_atomic_base_impl.166" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.167" = type { %"class.std::__1::__vector_base.168" }
%"class.std::__1::__vector_base.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.169" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.228", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.282", %"class.std::__1::vector.282", %"class.std::__1::vector.282", %"class.std::__1::vector.289", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.183", %"class.std::__1::vector.184", %"class.std::__1::vector.191", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.183" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.184" = type { %"class.std::__1::__vector_base.185" }
%"class.std::__1::__vector_base.185" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.186" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.191" = type { %"class.std::__1::__vector_base.192" }
%"class.std::__1::__vector_base.192" = type { %"class.std::__1::unique_ptr.193"*, %"class.std::__1::unique_ptr.193"*, %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::unique_ptr.193" = type opaque
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.std::__1::unique_ptr.193"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211", %"class.v8::internal::Worklist.213" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.213" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.215", i8, i64 }
%"class.std::__1::vector.215" = type { %"class.std::__1::__vector_base.216" }
%"class.std::__1::__vector_base.216" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.231" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.183"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.231" = type { %"class.std::__1::__hash_table.232" }
%"class.std::__1::__hash_table.232" = type <{ %"class.std::__1::unique_ptr.233", %"class.std::__1::__compressed_pair.243", %"class.std::__1::__compressed_pair.248", %"class.std::__1::__compressed_pair.251", [4 x i8] }>
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235", %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"struct.std::__1::__hash_node_base.236"** }
%"struct.std::__1::__hash_node_base.236" = type { %"struct.std::__1::__hash_node_base.236"* }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.std::__1::__bucket_list_deallocator.238" }
%"class.std::__1::__bucket_list_deallocator.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.std::__1::__hash_node_base.236" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.258" }
%"class.std::__1::unordered_map.258" = type { %"class.std::__1::__hash_table.259" }
%"class.std::__1::__hash_table.259" = type <{ %"class.std::__1::unique_ptr.260", %"class.std::__1::__compressed_pair.270", %"class.std::__1::__compressed_pair.275", %"class.std::__1::__compressed_pair.278", [4 x i8] }>
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262", %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.263"** }
%"struct.std::__1::__hash_node_base.263" = type { %"struct.std::__1::__hash_node_base.263"* }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.std::__1::__bucket_list_deallocator.265" }
%"class.std::__1::__bucket_list_deallocator.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.std::__1::__hash_node_base.263" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::vector.282" = type { %"class.std::__1::__vector_base.283" }
%"class.std::__1::__vector_base.283" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.289" = type { %"class.std::__1::__vector_base.290" }
%"class.std::__1::__vector_base.290" = type { %"struct.std::__1::pair.291"*, %"struct.std::__1::pair.291"*, %"class.std::__1::__compressed_pair.292" }
%"struct.std::__1::pair.291" = type opaque
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"struct.std::__1::pair.291"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.297", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.282"], [3 x %"class.std::__1::vector.282"], i8, %"struct.std::__1::atomic.154", [6 x i8], %"class.std::__1::vector.282", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.307"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.282", %"class.std::__1::vector.282", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.307" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.332", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.325"], %"class.std::__1::unique_ptr.297" }
%"class.std::__1::vector.325" = type { %"class.std::__1::__vector_base.326" }
%"class.std::__1::__vector_base.326" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.364", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.368", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.373" }
%"struct.std::__1::atomic.364" = type { %"struct.std::__1::__atomic_base.365" }
%"struct.std::__1::__atomic_base.365" = type { %"struct.std::__1::__cxx_atomic_impl.366" }
%"struct.std::__1::__cxx_atomic_impl.366" = type { %"struct.std::__1::__cxx_atomic_base_impl.367" }
%"struct.std::__1::__cxx_atomic_base_impl.367" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.368" = type { %"struct.std::__1::__atomic_base.369" }
%"struct.std::__1::__atomic_base.369" = type { %"struct.std::__1::__cxx_atomic_impl.370" }
%"struct.std::__1::__cxx_atomic_impl.370" = type { %"struct.std::__1::__cxx_atomic_base_impl.371" }
%"struct.std::__1::__cxx_atomic_base_impl.371" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.393", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.297", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.154", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.403", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.436" = type { %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.439" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.482" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.501", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.483", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.501" = type { %"struct.std::__1::__atomic_base.502" }
%"struct.std::__1::__atomic_base.502" = type { %"struct.std::__1::__cxx_atomic_impl.503" }
%"struct.std::__1::__cxx_atomic_impl.503" = type { %"struct.std::__1::__cxx_atomic_base_impl.504" }
%"struct.std::__1::__cxx_atomic_base_impl.504" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.505" = type { %"class.std::__1::__hash_table.506" }
%"class.std::__1::__hash_table.506" = type <{ %"class.std::__1::unique_ptr.507", %"class.std::__1::__compressed_pair.517", %"class.std::__1::__compressed_pair.522", %"class.std::__1::__compressed_pair.525", [4 x i8] }>
%"class.std::__1::unique_ptr.507" = type { %"class.std::__1::__compressed_pair.508" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.509", %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"struct.std::__1::__hash_node_base.510"** }
%"struct.std::__1::__hash_node_base.510" = type { %"struct.std::__1::__hash_node_base.510"* }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"class.std::__1::__bucket_list_deallocator.512" }
%"class.std::__1::__bucket_list_deallocator.512" = type { %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"struct.std::__1::__hash_node_base.510" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.531" = type { %"class.std::__1::__compressed_pair.532" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.533" }
%"struct.std::__1::__compressed_pair_elem.533" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.537" = type { %"class.std::__1::__compressed_pair.538" }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.543", %"class.std::__1::vector.543" }
%"class.std::__1::unique_ptr.550" = type { %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.552" }
%"struct.std::__1::__compressed_pair_elem.552" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.332" = type { %"class.std::__1::__hash_table.333" }
%"class.std::__1::__hash_table.333" = type <{ %"class.std::__1::unique_ptr.334", %"class.std::__1::__compressed_pair.344", %"class.std::__1::__compressed_pair.349", %"class.std::__1::__compressed_pair.353", [4 x i8] }>
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336", %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"struct.std::__1::__hash_node_base.337"** }
%"struct.std::__1::__hash_node_base.337" = type { %"struct.std::__1::__hash_node_base.337"* }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.std::__1::__bucket_list_deallocator.339" }
%"class.std::__1::__bucket_list_deallocator.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"struct.std::__1::__hash_node_base.337" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_map.582" = type { %"class.std::__1::__hash_table.583" }
%"class.std::__1::__hash_table.583" = type <{ %"class.std::__1::unique_ptr.584", %"class.std::__1::__compressed_pair.594", %"class.std::__1::__compressed_pair.599", %"class.std::__1::__compressed_pair.602", [4 x i8] }>
%"class.std::__1::unique_ptr.584" = type { %"class.std::__1::__compressed_pair.585" }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.586", %"struct.std::__1::__compressed_pair_elem.588" }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"struct.std::__1::__hash_node_base.587"** }
%"struct.std::__1::__hash_node_base.587" = type { %"struct.std::__1::__hash_node_base.587"* }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"class.std::__1::__bucket_list_deallocator.589" }
%"class.std::__1::__bucket_list_deallocator.589" = type { %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"struct.std::__1::__hash_node_base.587" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_map.556" = type { %"class.std::__1::__hash_table.557" }
%"class.std::__1::__hash_table.557" = type <{ %"class.std::__1::unique_ptr.558", %"class.std::__1::__compressed_pair.568", %"class.std::__1::__compressed_pair.573", %"class.std::__1::__compressed_pair.576", [4 x i8] }>
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560", %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"struct.std::__1::__hash_node_base.561"** }
%"struct.std::__1::__hash_node_base.561" = type { %"struct.std::__1::__hash_node_base.561"* }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.std::__1::__bucket_list_deallocator.563" }
%"class.std::__1::__bucket_list_deallocator.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"struct.std::__1::__hash_node_base.561" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_map.606" = type { %"class.std::__1::__hash_table.607" }
%"class.std::__1::__hash_table.607" = type <{ %"class.std::__1::unique_ptr.608", %"class.std::__1::__compressed_pair.618", %"class.std::__1::__compressed_pair.623", %"class.std::__1::__compressed_pair.628", [4 x i8] }>
%"class.std::__1::unique_ptr.608" = type { %"class.std::__1::__compressed_pair.609" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.610", %"struct.std::__1::__compressed_pair_elem.612" }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"struct.std::__1::__hash_node_base.611"** }
%"struct.std::__1::__hash_node_base.611" = type { %"struct.std::__1::__hash_node_base.611"* }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"class.std::__1::__bucket_list_deallocator.613" }
%"class.std::__1::__bucket_list_deallocator.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.619" }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"struct.std::__1::__hash_node_base.611" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::vector.634" = type { %"class.std::__1::__vector_base.635" }
%"class.std::__1::__vector_base.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.636" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl.24" }
%"struct.std::__1::__cxx_atomic_impl.24" = type { %"struct.std::__1::__cxx_atomic_base_impl.25" }
%"struct.std::__1::__cxx_atomic_base_impl.25" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.21", i64, %"struct.std::__1::atomic.21" }
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.143" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.543" = type { %"class.std::__1::__vector_base.544" }
%"class.std::__1::__vector_base.544" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.545" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.546" }
%"struct.std::__1::__compressed_pair_elem.546" = type { %"class.v8::internal::Object"* }
%"struct.std::nothrow_t" = type { i8 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.v8::internal::CompiledReplacement" = type { %"class.v8::base::SmallVector", %"class.v8::base::SmallVector.0" }
%"class.v8::base::SmallVector" = type { %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.std::__1::aligned_storage<64, 4>::type" }
%"struct.v8::internal::CompiledReplacement::ReplacementPart" = type { i32, i32 }
%"struct.std::__1::aligned_storage<64, 4>::type" = type { [64 x i8] }
%"class.v8::base::SmallVector.0" = type { %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"*, %"struct.std::__1::aligned_storage<64, 8>::type" }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"struct.std::__1::aligned_storage<64, 8>::type" = type { [64 x i8] }
%"class.v8::internal::CombinationAssertScope" = type { i8 }
%"class.v8::internal::String::FlatContent" = type { %union.anon.1134, i32, i32, %"class.v8::internal::CombinationAssertScope"* }
%union.anon.1134 = type { i8* }
%"class.v8::internal::Handle<v8::internal::String>::ObjectRef" = type { %"class.v8::internal::String" }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }
%"class.v8::internal::Factory" = type { i8 }
%"class.std::__1::function.1205" = type { %"class.std::__1::__function::__policy_func.1209" }
%"class.std::__1::__function::__policy_func.1209" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1210", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker.1210" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::String"*)* }
%"class.v8::internal::ReplacementStringBuilder" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::FixedArrayBuilder", %"class.v8::internal::Handle", i32, i8, [3 x i8] }>
%"class.v8::internal::FixedArrayBuilder" = type <{ %"class.v8::internal::Handle.1137", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.1137" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::StringSearch.1236" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Vector.1136", i32 (%"class.v8::internal::StringSearch.1236"*, i8*, i64, i32)*, i32, [4 x i8] }>
%"class.v8::internal::Vector.1136" = type { i16*, i64 }
%"class.v8::internal::StringSearch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Vector.1135", i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)*, i32, [4 x i8] }>
%"class.v8::internal::Vector.1135" = type { i8*, i64 }
%"class.v8::internal::StringSearch.1239" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Vector.1135", i32 (%"class.v8::internal::StringSearch.1239"*, i16*, i64, i32)*, i32, [4 x i8] }>
%"class.v8::internal::StringSearch.1241" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Vector.1136", i32 (%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32)*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1163" = type { %"class.std::__1::__compressed_pair.1164" }
%"class.std::__1::__compressed_pair.1164" = type { %"struct.std::__1::__compressed_pair_elem.1165" }
%"struct.std::__1::__compressed_pair_elem.1165" = type { %"class.v8::ConvertableToTraceFormat"* }
%"class.v8::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.v8::internal::RuntimeCallTimerScope" = type { %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer" }
%"class.v8::internal::RuntimeCallTimer" = type { %"class.v8::internal::RuntimeCallCounter"*, %"class.v8::base::AtomicValue", %"class.v8::base::TimeTicks", %"class.v8::base::TimeDelta" }
%"class.v8::internal::tracing::ScopedTracer" = type { %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data" }
%"struct.v8::internal::tracing::ScopedTracer::Data" = type { i8*, i8*, i64 }
%"class.v8::TracingController" = type { i32 (...)** }
%"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef" = type { %"class.v8::internal::JSRegExp" }
%"class.v8::internal::JSRegExp" = type { %"class.v8::internal::TorqueGeneratedJSRegExp" }
%"class.v8::internal::TorqueGeneratedJSRegExp" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RegExpGlobalCache" = type { i32, i32, i32, i32, i32*, i32, %"class.v8::internal::Handle.1130", %"class.v8::internal::Handle", %"class.v8::internal::Isolate"* }
%"class.v8::internal::Handle.1130" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker" = type { i64 (%"union.std::__1::__function::__policy_storage"*, i32)* }
%"class.v8::Platform" = type { i32 (...)** }
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.v8::internal::IncrementalStringBuilder" = type { %"class.v8::internal::Isolate"*, i32, i8, i32, i32, %"class.v8::internal::Handle", %"class.v8::internal::Handle" }
%"class.v8::internal::ScopedVector" = type { %"class.v8::internal::Vector.1191" }
%"class.v8::internal::Vector.1191" = type { %"class.v8::internal::Handle.1169"*, i64 }
%"class.v8::internal::Handle.1169" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::MessageLocation" = type { %"class.v8::internal::Handle.1197", i32, i32, i32, %"class.v8::internal::Handle.1198" }
%"class.v8::internal::Handle.1197" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1198" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::LookupIterator" = type { i32, i32, i8, i32, %"class.v8::internal::PropertyDetails", %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1188", %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1190", %"class.v8::internal::Handle.1169", i64, %"class.v8::internal::InternalIndex" }
%"class.v8::internal::PropertyDetails" = type { i32 }
%"class.v8::internal::Handle.1188" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1190" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::InternalIndex" = type { i64 }
%"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch" = type { %"class.v8::internal::String::Match", %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle", %"class.v8::internal::Handle.883", i8, %"class.v8::internal::Handle.1137" }
%"class.v8::internal::String::Match" = type { i32 (...)** }
%"class.v8::internal::Handle<v8::internal::Object>::ObjectRef" = type { %"class.v8::internal::Object" }
%"class.v8::base::SmallVector.1203" = type { %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"*, %"struct.std::__1::aligned_storage<64, 8>::type" }
%"class.v8::internal::(anonymous namespace)::VectorBackedMatch" = type { %"class.v8::internal::String::Match", %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle", %"class.v8::internal::Handle", i32, %"class.v8::internal::Vector.1191", i8, %"class.v8::internal::Handle.1190" }
%"class.v8::internal::SharedStringAccessGuardIfNeeded" = type { %"class.v8::base::Optional.1223" }
%"class.v8::base::Optional.1223" = type { %"class.v8::base::internal::OptionalBase.1224" }
%"class.v8::base::internal::OptionalBase.1224" = type { %"struct.v8::base::internal::OptionalStorage.1225" }
%"struct.v8::base::internal::OptionalStorage.1225" = type { %"struct.v8::base::internal::OptionalStorageBase.1226" }
%"struct.v8::base::internal::OptionalStorageBase.1226" = type { i8, %union.anon.1227 }
%union.anon.1227 = type { %"class.v8::base::SharedMutexGuard" }
%"class.v8::base::SharedMutexGuard" = type { %"class.v8::base::SharedMutex"* }
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i8* }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.v8::String::ExternalStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i16* }
%"class.v8::internal::ConsStringIterator" = type <{ [32 x %"class.v8::internal::ConsString"], %"class.v8::internal::ConsString", i32, i32, i32, [4 x i8] }>
%"class.v8::internal::ConsString" = type { %"class.v8::internal::TorqueGeneratedConsString" }
%"class.v8::internal::TorqueGeneratedConsString" = type { %"class.v8::internal::String" }

$_ZN2v88internal19CompiledReplacement23ParseReplacementPatternIKhEEbNS0_6VectorIT_EENS0_10FixedArrayEii = comdat any

$_ZN2v88internal19CompiledReplacement23ParseReplacementPatternIKtEEbNS0_6VectorIT_EENS0_10FixedArrayEii = comdat any

$_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE = comdat any

$_ZN2v88internal8JSObject24EnsureCanContainElementsENS0_6HandleIS1_EENS2_INS0_14FixedArrayBaseEEEjNS0_18EnsureElementsModeE = comdat any

$_ZN2v88internal8JSObject24EnsureCanContainElementsINS0_20CompressedObjectSlotEEEvNS0_6HandleIS1_EET_jNS0_18EnsureElementsModeE = comdat any

$_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE = comdat any

$_ZN2v88internal6String5MatchD2Ev = comdat any

$_ZN2v84base11SmallVectorINS_8internal6HandleINS2_6ObjectEEELm8EE4GrowEv = comdat any

$_ZN2v84base11SmallVectorINS_8internal6HandleINS2_6ObjectEEELm8EE4GrowEm = comdat any

$_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEv = comdat any

$_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEm = comdat any

$_ZNSt3__110__function16__policy_invokerIFbN2v88internal6StringEEE11__call_implINS0_20__default_alloc_funcIZNS3_19CompiledReplacement23ParseReplacementPatternIKhEEbNS3_6VectorIT_EENS3_10FixedArrayEiiEUlS4_E_S5_EEEEbPKNS0_16__policy_storageEOS4_ = comdat any

$_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE0EhEEbNS0_6VectorIKT0_EE = comdat any

$_ZN2v88internal6String23IsConsStringEqualToImplIhEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE = comdat any

$_ZNSt3__110__function16__policy_invokerIFbN2v88internal6StringEEE11__call_implINS0_20__default_alloc_funcIZNS3_19CompiledReplacement23ParseReplacementPatternIKtEEbNS3_6VectorIT_EENS3_10FixedArrayEiiEUlS4_E_S5_EEEEbPKNS0_16__policy_storageEOS4_ = comdat any

$_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE0EtEEbNS0_6VectorIKT0_EE = comdat any

$_ZN2v88internal6String23IsConsStringEqualToImplItEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE = comdat any

$_ZN2v84base11SmallVectorINS_8internal6HandleINS2_6StringEEELm8EE4GrowEv = comdat any

$_ZN2v84base11SmallVectorINS_8internal6HandleINS2_6StringEEELm8EE4GrowEm = comdat any

$_ZN2v88internal12StringSearchIhhE12LinearSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIhhE13InitialSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIhhE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIhhE23PopulateBoyerMooreTableEv = comdat any

$_ZN2v88internal12StringSearchIhhE16BoyerMooreSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIthE10FailSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIthE16SingleCharSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIthE12LinearSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIthE13InitialSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIthE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIthE23PopulateBoyerMooreTableEv = comdat any

$_ZN2v88internal12StringSearchIthE16BoyerMooreSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIhtE12LinearSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIhtE13InitialSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIhtE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIhtE23PopulateBoyerMooreTableEv = comdat any

$_ZN2v88internal12StringSearchIhtE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIttE12LinearSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIttE13InitialSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIttE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIttE23PopulateBoyerMooreTableEv = comdat any

$_ZN2v88internal12StringSearchIttE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal19CompiledReplacement23ParseReplacementPatternIKhEEbNS5_6VectorIT_EENS5_10FixedArrayEiiEUlNS5_6StringEE_FbSD_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal19CompiledReplacement23ParseReplacementPatternIKtEEbNS5_6VectorIT_EENS5_10FixedArrayEiiEUlNS5_6StringEE_FbSD_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

@.str = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZN2v88internal12TracingFlags13runtime_statsE = external local_unnamed_addr global %"struct.std::__1::atomic.1153", align 4
@_ZZN2v88internalL25Stats_Runtime_StringSplitEiPmPNS0_7IsolateEE28trace_event_unique_atomic793 = internal global i64 0, align 8
@.str.1 = private unnamed_addr constant [31 x i8] c"disabled-by-default-v8.runtime\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"V8.Runtime_Runtime_StringSplit\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"args[0].IsString()\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"args[1].IsString()\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"args[2].IsNumber()\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"0 < limit\00", align 1
@.str.8 = private unnamed_addr constant [19 x i8] c"0 < pattern_length\00", align 1
@_ZZN2v88internalL24Stats_Runtime_RegExpExecEiPmPNS0_7IsolateEE28trace_event_unique_atomic904 = internal global i64 0, align 8
@.str.10 = private unnamed_addr constant [30 x i8] c"V8.Runtime_Runtime_RegExpExec\00", align 1
@.str.11 = private unnamed_addr constant [21 x i8] c"args[0].IsJSRegExp()\00", align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"args[2].ToInt32(&index)\00", align 1
@.str.13 = private unnamed_addr constant [28 x i8] c"args[3].IsRegExpMatchInfo()\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"0 <= index\00", align 1
@.str.15 = private unnamed_addr constant [27 x i8] c"subject->length() >= index\00", align 1
@_ZZN2v88internalL48Stats_Runtime_RegExpExecTreatMatchAtEndAsFailureEiPmPNS0_7IsolateEE28trace_event_unique_atomic916 = internal global i64 0, align 8
@.str.16 = private unnamed_addr constant [54 x i8] c"V8.Runtime_Runtime_RegExpExecTreatMatchAtEndAsFailure\00", align 1
@_ZZN2v88internalL43Stats_Runtime_RegExpExperimentalOneshotExecEiPmPNS0_7IsolateEE28trace_event_unique_atomic928 = internal global i64 0, align 8
@.str.17 = private unnamed_addr constant [49 x i8] c"V8.Runtime_Runtime_RegExpExperimentalOneshotExec\00", align 1
@_ZZN2v88internalL67Stats_Runtime_RegExpExperimentalOneshotExecTreatMatchAtEndAsFailureEiPmPNS0_7IsolateEE28trace_event_unique_atomic942 = internal global i64 0, align 8
@.str.18 = private unnamed_addr constant [73 x i8] c"V8.Runtime_Runtime_RegExpExperimentalOneshotExecTreatMatchAtEndAsFailure\00", align 1
@_ZZN2v88internalL32Stats_Runtime_RegExpBuildIndicesEiPmPNS0_7IsolateEE28trace_event_unique_atomic955 = internal global i64 0, align 8
@.str.19 = private unnamed_addr constant [38 x i8] c"V8.Runtime_Runtime_RegExpBuildIndices\00", align 1
@.str.20 = private unnamed_addr constant [28 x i8] c"args[1].IsRegExpMatchInfo()\00", align 1
@_ZZN2v88internalL32Stats_Runtime_RegExpExecMultipleEiPmPNS0_7IsolateEE29trace_event_unique_atomic1455 = internal global i64 0, align 8
@.str.22 = private unnamed_addr constant [38 x i8] c"V8.Runtime_Runtime_RegExpExecMultiple\00", align 1
@.str.23 = private unnamed_addr constant [28 x i8] c"args[2].IsRegExpMatchInfo()\00", align 1
@.str.24 = private unnamed_addr constant [20 x i8] c"args[3].IsJSArray()\00", align 1
@.str.25 = private unnamed_addr constant [34 x i8] c"result_array->HasObjectElements()\00", align 1
@.str.26 = private unnamed_addr constant [39 x i8] c"regexp->GetFlags() & JSRegExp::kGlobal\00", align 1
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@_ZN2v88internal19FLAG_regexp_tier_upE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal25FLAG_trace_regexp_tier_upE = external local_unnamed_addr global i8, align 1
@.str.27 = private unnamed_addr constant [63 x i8] c"Forcing tier-up of JSRegExp object %p in SearchRegExpMultiple\0A\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@.str.28 = private unnamed_addr constant [9 x i8] c"NewArray\00", align 1
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal12_GLOBAL__N_120SearchRegExpMultipleILb1EEENS5_6ObjectEPNS5_7IsolateENS5_6HandleINS5_6StringEEENSB_INS5_8JSRegExpEEENSB_INS5_15RegExpMatchInfoEEENSB_INS5_7JSArrayEEEEUliE_FS8_iEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZZN2v88internalL54Stats_Runtime_StringReplaceNonGlobalRegExpWithFunctionEiPmPNS0_7IsolateEE29trace_event_unique_atomic1482 = internal global i64 0, align 8
@.str.29 = private unnamed_addr constant [60 x i8] c"V8.Runtime_Runtime_StringReplaceNonGlobalRegExpWithFunction\00", align 1
@.str.30 = private unnamed_addr constant [21 x i8] c"args[1].IsJSRegExp()\00", align 1
@.str.31 = private unnamed_addr constant [23 x i8] c"args[2].IsJSReceiver()\00", align 1
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internalL58__RT_impl_Runtime_StringReplaceNonGlobalRegExpWithFunctionENS5_9ArgumentsILNS5_13ArgumentsTypeE0EEEPNS5_7IsolateEEUliE_FNS5_6ObjectEiEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZZN2v88internalL25Stats_Runtime_RegExpSplitEiPmPNS0_7IsolateEE29trace_event_unique_atomic1632 = internal global i64 0, align 8
@.str.32 = private unnamed_addr constant [31 x i8] c"V8.Runtime_Runtime_RegExpSplit\00", align 1
@.str.33 = private unnamed_addr constant [23 x i8] c"args[0].IsJSReceiver()\00", align 1
@_ZZN2v88internalL29Stats_Runtime_RegExpReplaceRTEiPmPNS0_7IsolateEE29trace_event_unique_atomic1786 = internal global i64 0, align 8
@.str.34 = private unnamed_addr constant [35 x i8] c"V8.Runtime_Runtime_RegExpReplaceRT\00", align 1
@.str.35 = private unnamed_addr constant [20 x i8] c"!functional_replace\00", align 1
@.str.36 = private unnamed_addr constant [56 x i8] c"Forcing tier-up of JSRegExp object %p in RegExpReplace\0A\00", align 1
@_ZTVN2v88internal12_GLOBAL__N_120MatchInfoBackedMatchE = internal unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i64* (%"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"*)* @_ZN2v88internal12_GLOBAL__N_120MatchInfoBackedMatch8GetMatchEv to i8*), i8* bitcast (i64* (%"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"*)* @_ZN2v88internal12_GLOBAL__N_120MatchInfoBackedMatch9GetPrefixEv to i8*), i8* bitcast (i64* (%"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"*)* @_ZN2v88internal12_GLOBAL__N_120MatchInfoBackedMatch9GetSuffixEv to i8*), i8* bitcast (i32 (%"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"*)* @_ZN2v88internal12_GLOBAL__N_120MatchInfoBackedMatch12CaptureCountEv to i8*), i8* bitcast (i1 (%"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"*)* @_ZN2v88internal12_GLOBAL__N_120MatchInfoBackedMatch16HasNamedCapturesEv to i8*), i8* bitcast (i64* (%"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"*, i32, i8*)* @_ZN2v88internal12_GLOBAL__N_120MatchInfoBackedMatch10GetCaptureEiPb to i8*), i8* bitcast (i64* (%"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"*, i64*, i32*)* @_ZN2v88internal12_GLOBAL__N_120MatchInfoBackedMatch15GetNamedCaptureENS0_6HandleINS0_6StringEEEPNS4_5Match12CaptureStateE to i8*), i8* bitcast (void (%"class.v8::internal::String::Match"*)* @_ZN2v88internal6String5MatchD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"*)* @_ZN2v88internal12_GLOBAL__N_120MatchInfoBackedMatchD0Ev to i8*)] }, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal12_GLOBAL__N_120MatchInfoBackedMatch15GetNamedCaptureENS5_6HandleINS5_6StringEEEPNS9_5Match12CaptureStateEEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@.str.37 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1
@.str.38 = private unnamed_addr constant [53 x i8] c"Fatal process out of memory: base::SmallVector::Grow\00", align 1
@_ZTVN2v88internal12_GLOBAL__N_117VectorBackedMatchE = internal unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i64* (%"class.v8::internal::(anonymous namespace)::VectorBackedMatch"*)* @_ZN2v88internal12_GLOBAL__N_117VectorBackedMatch8GetMatchEv to i8*), i8* bitcast (i64* (%"class.v8::internal::(anonymous namespace)::VectorBackedMatch"*)* @_ZN2v88internal12_GLOBAL__N_117VectorBackedMatch9GetPrefixEv to i8*), i8* bitcast (i64* (%"class.v8::internal::(anonymous namespace)::VectorBackedMatch"*)* @_ZN2v88internal12_GLOBAL__N_117VectorBackedMatch9GetSuffixEv to i8*), i8* bitcast (i32 (%"class.v8::internal::(anonymous namespace)::VectorBackedMatch"*)* @_ZN2v88internal12_GLOBAL__N_117VectorBackedMatch12CaptureCountEv to i8*), i8* bitcast (i1 (%"class.v8::internal::(anonymous namespace)::VectorBackedMatch"*)* @_ZN2v88internal12_GLOBAL__N_117VectorBackedMatch16HasNamedCapturesEv to i8*), i8* bitcast (i64* (%"class.v8::internal::(anonymous namespace)::VectorBackedMatch"*, i32, i8*)* @_ZN2v88internal12_GLOBAL__N_117VectorBackedMatch10GetCaptureEiPb to i8*), i8* bitcast (i64* (%"class.v8::internal::(anonymous namespace)::VectorBackedMatch"*, i64*, i32*)* @_ZN2v88internal12_GLOBAL__N_117VectorBackedMatch15GetNamedCaptureENS0_6HandleINS0_6StringEEEPNS4_5Match12CaptureStateE to i8*), i8* bitcast (void (%"class.v8::internal::String::Match"*)* @_ZN2v88internal6String5MatchD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::VectorBackedMatch"*)* @_ZN2v88internal12_GLOBAL__N_117VectorBackedMatchD0Ev to i8*)] }, align 8
@_ZZN2v88internalL40Stats_Runtime_RegExpInitializeAndCompileEiPmPNS0_7IsolateEE29trace_event_unique_atomic1984 = internal global i64 0, align 8
@.str.39 = private unnamed_addr constant [46 x i8] c"V8.Runtime_Runtime_RegExpInitializeAndCompile\00", align 1
@.str.40 = private unnamed_addr constant [19 x i8] c"args[2].IsString()\00", align 1
@_ZZN2v88internalL22Stats_Runtime_IsRegExpEiPmPNS0_7IsolateEE29trace_event_unique_atomic2000 = internal global i64 0, align 8
@.str.41 = private unnamed_addr constant [28 x i8] c"V8.Runtime_Runtime_IsRegExp\00", align 1
@_ZZN2v88internalL35Stats_Runtime_RegExpStringFromFlagsEiPmPNS0_7IsolateEE29trace_event_unique_atomic2007 = internal global i64 0, align 8
@.str.43 = private unnamed_addr constant [41 x i8] c"V8.Runtime_Runtime_RegExpStringFromFlags\00", align 1
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal19CompiledReplacement23ParseReplacementPatternIKhEEbNS5_6VectorIT_EENS5_10FixedArrayEiiEUlNS5_6StringEE_FbSD_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal19CompiledReplacement23ParseReplacementPatternIKtEEbNS5_6VectorIT_EENS5_10FixedArrayEiiEUlNS5_6StringEE_FbSD_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal19CompiledReplacement7CompileEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEii(%"class.v8::internal::CompiledReplacement"*, %"class.v8::internal::Isolate"*, i64*, i64*, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.v8::internal::CombinationAssertScope", align 1
  %8 = alloca %"class.v8::internal::String::FlatContent", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %10 = ptrtoint i64* %3 to i64
  %11 = getelementptr inbounds %"class.v8::internal::CombinationAssertScope", %"class.v8::internal::CombinationAssertScope"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #6
  %12 = bitcast %"class.v8::internal::String::FlatContent"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #6
  %13 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #6
  %14 = load i64, i64* %3, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %9, i64 0, i32 0
  call void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* nonnull sret %8, %"class.v8::internal::String"* nonnull %16, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %7) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #6
  %17 = icmp sgt i32 %4, 0
  br i1 %17, label %18, label %45

18:                                               ; preds = %6
  %19 = load i64, i64* %2, align 8
  %20 = and i64 %19, -4294967296
  %21 = add i64 %19, 11
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %20, %24
  %26 = add i64 %25, 43
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %20, %29
  %31 = and i64 %29, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %45, label %33

33:                                               ; preds = %18
  %34 = add i64 %30, -1
  %35 = inttoptr i64 %34 to i32*
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %20, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i16*
  %41 = load atomic i16, i16* %40 monotonic, align 2
  %42 = add i16 %41, -119
  %43 = icmp ult i16 %42, 13
  %44 = select i1 %43, i64 %30, i64 0
  br label %45

45:                                               ; preds = %33, %18, %6
  %46 = phi i64 [ 0, %6 ], [ 0, %18 ], [ %44, %33 ]
  %47 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %8, i64 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %57

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %8, i64 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %8, i64 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = sext i32 %54 to i64
  %56 = call zeroext i1 @_ZN2v88internal19CompiledReplacement23ParseReplacementPatternIKhEEbNS0_6VectorIT_EENS0_10FixedArrayEii(%"class.v8::internal::CompiledReplacement"* %0, i8* %52, i64 %55, i64 %46, i32 %4, i32 %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #6
  br i1 %56, label %126, label %64

57:                                               ; preds = %45
  %58 = bitcast %"class.v8::internal::String::FlatContent"* %8 to i16**
  %59 = load i16*, i16** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %8, i64 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = sext i32 %61 to i64
  %63 = call zeroext i1 @_ZN2v88internal19CompiledReplacement23ParseReplacementPatternIKtEEbNS0_6VectorIT_EENS0_10FixedArrayEii(%"class.v8::internal::CompiledReplacement"* %0, i16* %59, i64 %62, i64 %46, i32 %4, i32 %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #6
  br i1 %63, label %126, label %64

64:                                               ; preds = %50, %57
  %65 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %0, i64 0, i32 0, i32 0
  %66 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %0, i64 0, i32 0, i32 1
  %68 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %67, align 8
  %69 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %66, %68
  br i1 %69, label %126, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %0, i64 0, i32 1, i32 1
  %72 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %0, i64 0, i32 1, i32 2
  %73 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %0, i64 0, i32 1
  %74 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::Factory"*
  br label %75

75:                                               ; preds = %70, %122
  %76 = phi i32 [ 0, %70 ], [ %123, %122 ]
  %77 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %66, %70 ], [ %124, %122 ]
  %78 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %77, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp slt i32 %79, 1
  br i1 %80, label %81, label %106

81:                                               ; preds = %75
  %82 = sub nsw i32 0, %79
  %83 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %77, i64 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %79, 0
  br i1 %85, label %86, label %92

86:                                               ; preds = %81
  %87 = load i64, i64* %3, align 8
  %88 = add i64 %87, 7
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, %84
  br i1 %91, label %95, label %92

92:                                               ; preds = %86, %81
  %93 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %74, i64* %3, i32 %82, i32 %84) #6
  %94 = ptrtoint i64* %93 to i64
  br label %95

95:                                               ; preds = %86, %92
  %96 = phi i64 [ %10, %86 ], [ %94, %92 ]
  %97 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %71, align 8
  %98 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %72, align 8
  %99 = icmp eq %"class.v8::internal::Handle"* %97, %98
  br i1 %99, label %100, label %102, !prof !2

100:                                              ; preds = %95
  %101 = call %"class.v8::internal::Handle"* @_ZN2v84base11SmallVectorINS_8internal6HandleINS2_6StringEEELm8EE4GrowEv(%"class.v8::base::SmallVector.0"* %73) #6
  br label %102

102:                                              ; preds = %95, %100
  %103 = phi %"class.v8::internal::Handle"* [ %101, %100 ], [ %97, %95 ]
  %104 = bitcast %"class.v8::internal::Handle"* %103 to i64*
  store i64 %96, i64* %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %103, i64 1
  store %"class.v8::internal::Handle"* %105, %"class.v8::internal::Handle"** %71, align 8
  store i32 4, i32* %78, align 4
  br label %119

106:                                              ; preds = %75
  %107 = icmp eq i32 %79, 5
  br i1 %107, label %108, label %122

108:                                              ; preds = %106
  %109 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %71, align 8
  %110 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %72, align 8
  %111 = icmp eq %"class.v8::internal::Handle"* %109, %110
  br i1 %111, label %112, label %114, !prof !2

112:                                              ; preds = %108
  %113 = call %"class.v8::internal::Handle"* @_ZN2v84base11SmallVectorINS_8internal6HandleINS2_6StringEEELm8EE4GrowEv(%"class.v8::base::SmallVector.0"* %73) #6
  br label %114

114:                                              ; preds = %108, %112
  %115 = phi %"class.v8::internal::Handle"* [ %113, %112 ], [ %109, %108 ]
  %116 = bitcast %"class.v8::internal::Handle"* %115 to i64*
  store i64 %10, i64* %116, align 8
  %117 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %115, i64 1
  store %"class.v8::internal::Handle"* %117, %"class.v8::internal::Handle"** %71, align 8
  %118 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %77, i64 0, i32 1
  br label %119

119:                                              ; preds = %102, %114
  %120 = phi i32* [ %118, %114 ], [ %83, %102 ]
  store i32 %76, i32* %120, align 4
  %121 = add nsw i32 %76, 1
  br label %122

122:                                              ; preds = %119, %106
  %123 = phi i32 [ %76, %106 ], [ %121, %119 ]
  %124 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %77, i64 1
  %125 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %124, %68
  br i1 %125, label %126, label %75

126:                                              ; preds = %122, %50, %64, %57
  %127 = phi i1 [ true, %57 ], [ false, %64 ], [ true, %50 ], [ false, %122 ]
  ret i1 %127
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* sret, %"class.v8::internal::String"*, %"class.v8::internal::CombinationAssertScope"* dereferenceable(1)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal19CompiledReplacement23ParseReplacementPatternIKhEEbNS0_6VectorIT_EENS0_10FixedArrayEii(%"class.v8::internal::CompiledReplacement"*, i8*, i64, i64, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.v8::internal::String", align 8
  %8 = alloca %"class.std::__1::function.1205", align 8
  %9 = trunc i64 %2 to i32
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %319

11:                                               ; preds = %6
  %12 = trunc i64 %3 to i32
  %13 = icmp eq i32 %12, 0
  %14 = bitcast %"class.std::__1::function.1205"* %8 to i8*
  %15 = getelementptr inbounds %"class.std::__1::function.1205", %"class.std::__1::function.1205"* %8, i64 0, i32 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.std::__1::function.1205", %"class.std::__1::function.1205"* %8, i64 0, i32 0, i32 2
  %17 = getelementptr inbounds %"class.std::__1::function.1205", %"class.std::__1::function.1205"* %8, i64 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::function.1205", %"class.std::__1::function.1205"* %8, i64 0, i32 0, i32 0, i32 1
  %19 = bitcast [8 x i8]* %18 to i64*
  %20 = add i64 %3, 3
  %21 = inttoptr i64 %20 to i32*
  %22 = and i64 %3, -4294967296
  %23 = bitcast %"class.v8::internal::String"* %7 to i8*
  %24 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::function.1205", %"class.std::__1::function.1205"* %8, i64 0, i32 0, i32 0
  %26 = add i64 %3, 7
  %27 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %0, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %0, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %0, i64 0, i32 0
  %30 = zext i32 %5 to i64
  %31 = shl nuw i64 %30, 32
  %32 = or i64 %31, 2
  %33 = add i64 %3, 7
  %34 = inttoptr i64 %33 to i32*
  br label %35

35:                                               ; preds = %11, %314
  %36 = phi i32 [ 0, %11 ], [ %316, %314 ]
  %37 = phi i32 [ 0, %11 ], [ %317, %314 ]
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 36
  br i1 %41, label %42, label %314

42:                                               ; preds = %35
  %43 = add nsw i32 %37, 1
  %44 = icmp eq i32 %43, %9
  br i1 %44, label %319, label %45

45:                                               ; preds = %42
  %46 = sext i32 %43 to i64
  %47 = getelementptr inbounds i8, i8* %1, i64 %46
  %48 = load i8, i8* %47, align 1
  switch i8 %48, label %314 [
    i8 36, label %49
    i8 96, label %67
    i8 39, label %97
    i8 38, label %127
    i8 48, label %157
    i8 49, label %157
    i8 50, label %157
    i8 51, label %157
    i8 52, label %157
    i8 53, label %157
    i8 54, label %157
    i8 55, label %157
    i8 56, label %157
    i8 57, label %157
    i8 60, label %215
  ]

49:                                               ; preds = %45
  %50 = icmp sgt i32 %37, %36
  br i1 %50, label %51, label %314

51:                                               ; preds = %49
  %52 = sub nsw i32 0, %36
  %53 = zext i32 %43 to i64
  %54 = shl nuw i64 %53, 32
  %55 = zext i32 %52 to i64
  %56 = or i64 %54, %55
  %57 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %27, align 8
  %58 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  %59 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %57, %58
  br i1 %59, label %60, label %62, !prof !2

60:                                               ; preds = %51
  %61 = call %"struct.v8::internal::CompiledReplacement::ReplacementPart"* @_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEv(%"class.v8::base::SmallVector"* %29) #6
  br label %62

62:                                               ; preds = %51, %60
  %63 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %61, %60 ], [ %57, %51 ]
  %64 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %63 to i64*
  store i64 %56, i64* %64, align 4
  %65 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %63, i64 1
  store %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %65, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %27, align 8
  %66 = add nsw i32 %37, 2
  br label %314

67:                                               ; preds = %45
  %68 = icmp sgt i32 %37, %36
  br i1 %68, label %71, label %69

69:                                               ; preds = %67
  %70 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %27, align 8
  br label %86

71:                                               ; preds = %67
  %72 = sub nsw i32 0, %36
  %73 = zext i32 %37 to i64
  %74 = shl nuw i64 %73, 32
  %75 = zext i32 %72 to i64
  %76 = or i64 %74, %75
  %77 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %27, align 8
  %78 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  %79 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %77, %78
  br i1 %79, label %80, label %82, !prof !2

80:                                               ; preds = %71
  %81 = call %"struct.v8::internal::CompiledReplacement::ReplacementPart"* @_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEv(%"class.v8::base::SmallVector"* %29) #6
  br label %82

82:                                               ; preds = %71, %80
  %83 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %81, %80 ], [ %77, %71 ]
  %84 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %83 to i64*
  store i64 %76, i64* %84, align 4
  %85 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %83, i64 1
  store %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %85, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %27, align 8
  br label %86

86:                                               ; preds = %69, %82
  %87 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %70, %69 ], [ %85, %82 ]
  %88 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  %89 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %87, %88
  br i1 %89, label %90, label %92, !prof !2

90:                                               ; preds = %86
  %91 = call %"struct.v8::internal::CompiledReplacement::ReplacementPart"* @_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEv(%"class.v8::base::SmallVector"* %29) #6
  br label %92

92:                                               ; preds = %86, %90
  %93 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %91, %90 ], [ %87, %86 ]
  %94 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %93 to i64*
  store i64 1, i64* %94, align 4
  %95 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %93, i64 1
  store %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %95, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %27, align 8
  %96 = add nsw i32 %37, 2
  br label %314

97:                                               ; preds = %45
  %98 = icmp sgt i32 %37, %36
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %27, align 8
  br label %116

101:                                              ; preds = %97
  %102 = sub nsw i32 0, %36
  %103 = zext i32 %37 to i64
  %104 = shl nuw i64 %103, 32
  %105 = zext i32 %102 to i64
  %106 = or i64 %104, %105
  %107 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %27, align 8
  %108 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  %109 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %107, %108
  br i1 %109, label %110, label %112, !prof !2

110:                                              ; preds = %101
  %111 = call %"struct.v8::internal::CompiledReplacement::ReplacementPart"* @_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEv(%"class.v8::base::SmallVector"* %29) #6
  br label %112

112:                                              ; preds = %101, %110
  %113 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %111, %110 ], [ %107, %101 ]
  %114 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %113 to i64*
  store i64 %106, i64* %114, align 4
  %115 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %113, i64 1
  store %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %115, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %27, align 8
  br label %116

116:                                              ; preds = %99, %112
  %117 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %100, %99 ], [ %115, %112 ]
  %118 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  %119 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %117, %118
  br i1 %119, label %120, label %122, !prof !2

120:                                              ; preds = %116
  %121 = call %"struct.v8::internal::CompiledReplacement::ReplacementPart"* @_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEv(%"class.v8::base::SmallVector"* %29) #6
  br label %122

122:                                              ; preds = %116, %120
  %123 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %121, %120 ], [ %117, %116 ]
  %124 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %123 to i64*
  store i64 %32, i64* %124, align 4
  %125 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %123, i64 1
  store %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %125, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %27, align 8
  %126 = add nsw i32 %37, 2
  br label %314

127:                                              ; preds = %45
  %128 = icmp sgt i32 %37, %36
  br i1 %128, label %131, label %129

129:                                              ; preds = %127
  %130 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %27, align 8
  br label %146

131:                                              ; preds = %127
  %132 = sub nsw i32 0, %36
  %133 = zext i32 %37 to i64
  %134 = shl nuw i64 %133, 32
  %135 = zext i32 %132 to i64
  %136 = or i64 %134, %135
  %137 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %27, align 8
  %138 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  %139 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %137, %138
  br i1 %139, label %140, label %142, !prof !2

140:                                              ; preds = %131
  %141 = call %"struct.v8::internal::CompiledReplacement::ReplacementPart"* @_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEv(%"class.v8::base::SmallVector"* %29) #6
  br label %142

142:                                              ; preds = %131, %140
  %143 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %141, %140 ], [ %137, %131 ]
  %144 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %143 to i64*
  store i64 %136, i64* %144, align 4
  %145 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %143, i64 1
  store %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %145, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %27, align 8
  br label %146

146:                                              ; preds = %129, %142
  %147 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %130, %129 ], [ %145, %142 ]
  %148 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  %149 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %147, %148
  br i1 %149, label %150, label %152, !prof !2

150:                                              ; preds = %146
  %151 = call %"struct.v8::internal::CompiledReplacement::ReplacementPart"* @_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEv(%"class.v8::base::SmallVector"* %29) #6
  br label %152

152:                                              ; preds = %146, %150
  %153 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %151, %150 ], [ %147, %146 ]
  %154 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %153 to i64*
  store i64 3, i64* %154, align 4
  %155 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %153, i64 1
  store %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %155, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %27, align 8
  %156 = add nsw i32 %37, 2
  br label %314

157:                                              ; preds = %45, %45, %45, %45, %45, %45, %45, %45, %45, %45
  %158 = zext i8 %48 to i32
  %159 = add nsw i32 %158, -48
  %160 = icmp sgt i32 %159, %4
  br i1 %160, label %314, label %161

161:                                              ; preds = %157
  %162 = add nsw i32 %37, 2
  %163 = icmp slt i32 %162, %9
  br i1 %163, label %164, label %178

164:                                              ; preds = %161
  %165 = sext i32 %162 to i64
  %166 = getelementptr inbounds i8, i8* %1, i64 %165
  %167 = load i8, i8* %166, align 1
  %168 = add i8 %167, -48
  %169 = icmp ult i8 %168, 10
  br i1 %169, label %170, label %178

170:                                              ; preds = %164
  %171 = zext i8 %167 to i32
  %172 = mul nsw i32 %159, 10
  %173 = add nsw i32 %172, -48
  %174 = add nsw i32 %173, %171
  %175 = icmp sgt i32 %174, %4
  %176 = select i1 %175, i32 %159, i32 %174
  %177 = select i1 %175, i32 %43, i32 %162
  br label %178

178:                                              ; preds = %164, %170, %161
  %179 = phi i32 [ %159, %161 ], [ %176, %170 ], [ %159, %164 ]
  %180 = phi i32 [ %43, %161 ], [ %177, %170 ], [ %43, %164 ]
  %181 = icmp sgt i32 %179, 0
  br i1 %181, label %182, label %314

182:                                              ; preds = %178
  %183 = icmp sgt i32 %37, %36
  br i1 %183, label %186, label %184

184:                                              ; preds = %182
  %185 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %27, align 8
  br label %201

186:                                              ; preds = %182
  %187 = sub nsw i32 0, %36
  %188 = zext i32 %37 to i64
  %189 = shl nuw i64 %188, 32
  %190 = zext i32 %187 to i64
  %191 = or i64 %189, %190
  %192 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %27, align 8
  %193 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  %194 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %192, %193
  br i1 %194, label %195, label %197, !prof !2

195:                                              ; preds = %186
  %196 = call %"struct.v8::internal::CompiledReplacement::ReplacementPart"* @_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEv(%"class.v8::base::SmallVector"* %29) #6
  br label %197

197:                                              ; preds = %186, %195
  %198 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %196, %195 ], [ %192, %186 ]
  %199 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %198 to i64*
  store i64 %191, i64* %199, align 4
  %200 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %198, i64 1
  store %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %200, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %27, align 8
  br label %201

201:                                              ; preds = %184, %197
  %202 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %185, %184 ], [ %200, %197 ]
  %203 = zext i32 %179 to i64
  %204 = shl nuw i64 %203, 32
  %205 = or i64 %204, 3
  %206 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  %207 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %202, %206
  br i1 %207, label %208, label %210, !prof !2

208:                                              ; preds = %201
  %209 = call %"struct.v8::internal::CompiledReplacement::ReplacementPart"* @_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEv(%"class.v8::base::SmallVector"* %29) #6
  br label %210

210:                                              ; preds = %201, %208
  %211 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %209, %208 ], [ %202, %201 ]
  %212 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %211 to i64*
  store i64 %205, i64* %212, align 4
  %213 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %211, i64 1
  store %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %213, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %27, align 8
  %214 = add nsw i32 %180, 1
  br label %314

215:                                              ; preds = %45
  br i1 %13, label %314, label %216

216:                                              ; preds = %215
  %217 = add i32 %37, 2
  %218 = icmp slt i32 %217, %9
  br i1 %218, label %219, label %314

219:                                              ; preds = %216
  %220 = sext i32 %217 to i64
  br label %221

221:                                              ; preds = %226, %219
  %222 = phi i64 [ %220, %219 ], [ %227, %226 ]
  %223 = getelementptr inbounds i8, i8* %1, i64 %222
  %224 = load i8, i8* %223, align 1
  %225 = icmp eq i8 %224, 62
  br i1 %225, label %230, label %226

226:                                              ; preds = %221
  %227 = add nsw i64 %222, 1
  %228 = trunc i64 %227 to i32
  %229 = icmp eq i32 %228, %9
  br i1 %229, label %314, label %221

230:                                              ; preds = %221
  %231 = trunc i64 %222 to i32
  %232 = icmp eq i32 %231, -1
  br i1 %232, label %314, label %233

233:                                              ; preds = %230
  %234 = shl i64 %222, 32
  %235 = ashr exact i64 %234, 32
  %236 = getelementptr inbounds i8, i8* %1, i64 %220
  %237 = sub nsw i64 %235, %220
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #6
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::String"*)* @_ZNSt3__110__function16__policy_invokerIFbN2v88internal6StringEEE11__call_implINS0_20__default_alloc_funcIZNS3_19CompiledReplacement23ParseReplacementPatternIKhEEbNS3_6VectorIT_EENS3_10FixedArrayEiiEUlS4_E_S5_EEEEbPKNS0_16__policy_storageEOS4_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::String"*)** %15, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal19CompiledReplacement23ParseReplacementPatternIKhEEbNS5_6VectorIT_EENS5_10FixedArrayEiiEUlNS5_6StringEE_FbSD_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %16, align 8
  store i8* %236, i8** %17, align 8
  store i64 %237, i64* %19, align 8
  %238 = load i32, i32* %21, align 4
  %239 = icmp sgt i32 %238, 3
  br i1 %239, label %240, label %271

240:                                              ; preds = %233
  %241 = lshr i32 %238, 2
  %242 = zext i32 %241 to i64
  %243 = load atomic i32, i32* %34 monotonic, align 4
  %244 = zext i32 %243 to i64
  %245 = or i64 %22, %244
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #6
  store i64 %245, i64* %24, align 8
  %246 = call zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbN2v88internal6StringEEE11__call_implINS0_20__default_alloc_funcIZNS3_19CompiledReplacement23ParseReplacementPatternIKhEEbNS3_6VectorIT_EENS3_10FixedArrayEiiEUlS4_E_S5_EEEEbPKNS0_16__policy_storageEOS4_(%"union.std::__1::__function::__policy_storage"* nonnull %25, %"class.v8::internal::String"* nonnull dereferenceable(8) %7) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #6
  br i1 %246, label %247, label %255

247:                                              ; preds = %259, %240
  %248 = phi i32 [ 0, %240 ], [ %262, %259 ]
  %249 = or i32 %248, 4
  %250 = sext i32 %249 to i64
  %251 = add i64 %26, %250
  %252 = inttoptr i64 %251 to i32*
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = ashr i32 %253, 1
  br label %271

255:                                              ; preds = %240, %259
  %256 = phi i64 [ %257, %259 ], [ 0, %240 ]
  %257 = add nuw nsw i64 %256, 1
  %258 = icmp ult i64 %257, %242
  br i1 %258, label %259, label %271

259:                                              ; preds = %255
  %260 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::String"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::String"*)** %15, align 8
  %261 = trunc i64 %257 to i32
  %262 = shl i32 %261, 3
  %263 = or i32 %262, 7
  %264 = sext i32 %263 to i64
  %265 = add i64 %264, %3
  %266 = inttoptr i64 %265 to i32*
  %267 = load atomic i32, i32* %266 monotonic, align 4
  %268 = zext i32 %267 to i64
  %269 = or i64 %22, %268
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #6
  store i64 %269, i64* %24, align 8
  %270 = call zeroext i1 %260(%"union.std::__1::__function::__policy_storage"* nonnull %25, %"class.v8::internal::String"* nonnull dereferenceable(8) %7) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #6
  br i1 %270, label %247, label %255

271:                                              ; preds = %255, %233, %247
  %272 = phi i32 [ %254, %247 ], [ -1, %233 ], [ -1, %255 ]
  %273 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %16, align 8
  %274 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %273, i64 0, i32 1
  %275 = load void (i8*)*, void (i8*)** %274, align 8
  %276 = icmp eq void (i8*)* %275, null
  br i1 %276, label %279, label %277

277:                                              ; preds = %271
  %278 = load i8*, i8** %17, align 8
  call void %275(i8* %278) #6
  br label %279

279:                                              ; preds = %271, %277
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #6
  %280 = icmp sgt i32 %37, %36
  br i1 %280, label %283, label %281

281:                                              ; preds = %279
  %282 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %27, align 8
  br label %298

283:                                              ; preds = %279
  %284 = sub nsw i32 0, %36
  %285 = zext i32 %37 to i64
  %286 = shl nuw i64 %285, 32
  %287 = zext i32 %284 to i64
  %288 = or i64 %286, %287
  %289 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %27, align 8
  %290 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  %291 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %289, %290
  br i1 %291, label %292, label %294, !prof !2

292:                                              ; preds = %283
  %293 = call %"struct.v8::internal::CompiledReplacement::ReplacementPart"* @_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEv(%"class.v8::base::SmallVector"* %29) #6
  br label %294

294:                                              ; preds = %283, %292
  %295 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %293, %292 ], [ %289, %283 ]
  %296 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %295 to i64*
  store i64 %288, i64* %296, align 4
  %297 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %295, i64 1
  store %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %297, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %27, align 8
  br label %298

298:                                              ; preds = %281, %294
  %299 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %282, %281 ], [ %297, %294 ]
  %300 = icmp eq i32 %272, -1
  %301 = zext i32 %272 to i64
  %302 = shl nuw i64 %301, 32
  %303 = or i64 %302, 3
  %304 = select i1 %300, i64 6, i64 %303
  %305 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  %306 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %299, %305
  br i1 %306, label %307, label %309, !prof !2

307:                                              ; preds = %298
  %308 = call %"struct.v8::internal::CompiledReplacement::ReplacementPart"* @_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEv(%"class.v8::base::SmallVector"* %29) #6
  br label %309

309:                                              ; preds = %298, %307
  %310 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %308, %307 ], [ %299, %298 ]
  %311 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %310 to i64*
  store i64 %304, i64* %311, align 4
  %312 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %310, i64 1
  store %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %312, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %27, align 8
  %313 = add nsw i32 %231, 1
  br label %314

314:                                              ; preds = %226, %216, %178, %210, %92, %122, %152, %49, %62, %215, %230, %309, %45, %157, %35
  %315 = phi i32 [ %37, %35 ], [ %43, %157 ], [ %43, %45 ], [ %43, %230 ], [ %231, %309 ], [ %43, %215 ], [ %43, %62 ], [ %43, %49 ], [ %43, %92 ], [ %43, %122 ], [ %43, %152 ], [ %180, %210 ], [ %180, %178 ], [ %43, %216 ], [ %43, %226 ]
  %316 = phi i32 [ %36, %35 ], [ %36, %157 ], [ %36, %45 ], [ %36, %230 ], [ %313, %309 ], [ %36, %215 ], [ %66, %62 ], [ %43, %49 ], [ %96, %92 ], [ %126, %122 ], [ %156, %152 ], [ %214, %210 ], [ %36, %178 ], [ %36, %216 ], [ %36, %226 ]
  %317 = add nsw i32 %315, 1
  %318 = icmp slt i32 %317, %9
  br i1 %318, label %35, label %319

319:                                              ; preds = %314, %42, %6
  %320 = phi i32 [ 0, %6 ], [ %36, %42 ], [ %316, %314 ]
  %321 = icmp slt i32 %320, %9
  br i1 %321, label %322, label %341

322:                                              ; preds = %319
  %323 = icmp eq i32 %320, 0
  br i1 %323, label %341, label %324

324:                                              ; preds = %322
  %325 = sub nsw i32 0, %320
  %326 = shl i64 %2, 32
  %327 = zext i32 %325 to i64
  %328 = or i64 %326, %327
  %329 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %0, i64 0, i32 0, i32 1
  %330 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %329, align 8
  %331 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %0, i64 0, i32 0, i32 2
  %332 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %331, align 8
  %333 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %330, %332
  br i1 %333, label %334, label %337, !prof !2

334:                                              ; preds = %324
  %335 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %0, i64 0, i32 0
  %336 = call %"struct.v8::internal::CompiledReplacement::ReplacementPart"* @_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEv(%"class.v8::base::SmallVector"* %335) #6
  br label %337

337:                                              ; preds = %324, %334
  %338 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %336, %334 ], [ %330, %324 ]
  %339 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %338 to i64*
  store i64 %328, i64* %339, align 4
  %340 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %338, i64 1
  store %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %340, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %329, align 8
  br label %341

341:                                              ; preds = %319, %337, %322
  %342 = phi i1 [ true, %322 ], [ false, %337 ], [ false, %319 ]
  ret i1 %342
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal19CompiledReplacement23ParseReplacementPatternIKtEEbNS0_6VectorIT_EENS0_10FixedArrayEii(%"class.v8::internal::CompiledReplacement"*, i16*, i64, i64, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.v8::internal::String", align 8
  %8 = alloca %"class.std::__1::function.1205", align 8
  %9 = trunc i64 %2 to i32
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %320

11:                                               ; preds = %6
  %12 = trunc i64 %3 to i32
  %13 = icmp eq i32 %12, 0
  %14 = bitcast %"class.std::__1::function.1205"* %8 to i8*
  %15 = getelementptr inbounds %"class.std::__1::function.1205", %"class.std::__1::function.1205"* %8, i64 0, i32 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.std::__1::function.1205", %"class.std::__1::function.1205"* %8, i64 0, i32 0, i32 2
  %17 = bitcast %"class.std::__1::function.1205"* %8 to i16**
  %18 = getelementptr inbounds %"class.std::__1::function.1205", %"class.std::__1::function.1205"* %8, i64 0, i32 0, i32 0, i32 1
  %19 = bitcast [8 x i8]* %18 to i64*
  %20 = add i64 %3, 3
  %21 = inttoptr i64 %20 to i32*
  %22 = and i64 %3, -4294967296
  %23 = bitcast %"class.v8::internal::String"* %7 to i8*
  %24 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::function.1205", %"class.std::__1::function.1205"* %8, i64 0, i32 0, i32 0
  %26 = add i64 %3, 7
  %27 = getelementptr inbounds %"class.std::__1::function.1205", %"class.std::__1::function.1205"* %8, i64 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %0, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %0, i64 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %0, i64 0, i32 0
  %31 = zext i32 %5 to i64
  %32 = shl nuw i64 %31, 32
  %33 = or i64 %32, 2
  %34 = add i64 %3, 7
  %35 = inttoptr i64 %34 to i32*
  br label %36

36:                                               ; preds = %11, %315
  %37 = phi i32 [ 0, %11 ], [ %317, %315 ]
  %38 = phi i32 [ 0, %11 ], [ %318, %315 ]
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  %41 = load i16, i16* %40, align 2
  %42 = icmp eq i16 %41, 36
  br i1 %42, label %43, label %315

43:                                               ; preds = %36
  %44 = add nsw i32 %38, 1
  %45 = icmp eq i32 %44, %9
  br i1 %45, label %320, label %46

46:                                               ; preds = %43
  %47 = sext i32 %44 to i64
  %48 = getelementptr inbounds i16, i16* %1, i64 %47
  %49 = load i16, i16* %48, align 2
  switch i16 %49, label %315 [
    i16 36, label %50
    i16 96, label %68
    i16 39, label %98
    i16 38, label %128
    i16 48, label %158
    i16 49, label %158
    i16 50, label %158
    i16 51, label %158
    i16 52, label %158
    i16 53, label %158
    i16 54, label %158
    i16 55, label %158
    i16 56, label %158
    i16 57, label %158
    i16 60, label %216
  ]

50:                                               ; preds = %46
  %51 = icmp sgt i32 %38, %37
  br i1 %51, label %52, label %315

52:                                               ; preds = %50
  %53 = sub nsw i32 0, %37
  %54 = zext i32 %44 to i64
  %55 = shl nuw i64 %54, 32
  %56 = zext i32 %53 to i64
  %57 = or i64 %55, %56
  %58 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  %59 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %29, align 8
  %60 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %58, %59
  br i1 %60, label %61, label %63, !prof !2

61:                                               ; preds = %52
  %62 = call %"struct.v8::internal::CompiledReplacement::ReplacementPart"* @_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEv(%"class.v8::base::SmallVector"* %30) #6
  br label %63

63:                                               ; preds = %52, %61
  %64 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %62, %61 ], [ %58, %52 ]
  %65 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %64 to i64*
  store i64 %57, i64* %65, align 4
  %66 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %64, i64 1
  store %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %66, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  %67 = add nsw i32 %38, 2
  br label %315

68:                                               ; preds = %46
  %69 = icmp sgt i32 %38, %37
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  br label %87

72:                                               ; preds = %68
  %73 = sub nsw i32 0, %37
  %74 = zext i32 %38 to i64
  %75 = shl nuw i64 %74, 32
  %76 = zext i32 %73 to i64
  %77 = or i64 %75, %76
  %78 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  %79 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %29, align 8
  %80 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %78, %79
  br i1 %80, label %81, label %83, !prof !2

81:                                               ; preds = %72
  %82 = call %"struct.v8::internal::CompiledReplacement::ReplacementPart"* @_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEv(%"class.v8::base::SmallVector"* %30) #6
  br label %83

83:                                               ; preds = %72, %81
  %84 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %82, %81 ], [ %78, %72 ]
  %85 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %84 to i64*
  store i64 %77, i64* %85, align 4
  %86 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %84, i64 1
  store %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %86, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  br label %87

87:                                               ; preds = %70, %83
  %88 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %71, %70 ], [ %86, %83 ]
  %89 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %29, align 8
  %90 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %88, %89
  br i1 %90, label %91, label %93, !prof !2

91:                                               ; preds = %87
  %92 = call %"struct.v8::internal::CompiledReplacement::ReplacementPart"* @_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEv(%"class.v8::base::SmallVector"* %30) #6
  br label %93

93:                                               ; preds = %87, %91
  %94 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %92, %91 ], [ %88, %87 ]
  %95 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %94 to i64*
  store i64 1, i64* %95, align 4
  %96 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %94, i64 1
  store %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %96, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  %97 = add nsw i32 %38, 2
  br label %315

98:                                               ; preds = %46
  %99 = icmp sgt i32 %38, %37
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  br label %117

102:                                              ; preds = %98
  %103 = sub nsw i32 0, %37
  %104 = zext i32 %38 to i64
  %105 = shl nuw i64 %104, 32
  %106 = zext i32 %103 to i64
  %107 = or i64 %105, %106
  %108 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  %109 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %29, align 8
  %110 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %108, %109
  br i1 %110, label %111, label %113, !prof !2

111:                                              ; preds = %102
  %112 = call %"struct.v8::internal::CompiledReplacement::ReplacementPart"* @_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEv(%"class.v8::base::SmallVector"* %30) #6
  br label %113

113:                                              ; preds = %102, %111
  %114 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %112, %111 ], [ %108, %102 ]
  %115 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %114 to i64*
  store i64 %107, i64* %115, align 4
  %116 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %114, i64 1
  store %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %116, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  br label %117

117:                                              ; preds = %100, %113
  %118 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %101, %100 ], [ %116, %113 ]
  %119 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %29, align 8
  %120 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %118, %119
  br i1 %120, label %121, label %123, !prof !2

121:                                              ; preds = %117
  %122 = call %"struct.v8::internal::CompiledReplacement::ReplacementPart"* @_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEv(%"class.v8::base::SmallVector"* %30) #6
  br label %123

123:                                              ; preds = %117, %121
  %124 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %122, %121 ], [ %118, %117 ]
  %125 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %124 to i64*
  store i64 %33, i64* %125, align 4
  %126 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %124, i64 1
  store %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %126, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  %127 = add nsw i32 %38, 2
  br label %315

128:                                              ; preds = %46
  %129 = icmp sgt i32 %38, %37
  br i1 %129, label %132, label %130

130:                                              ; preds = %128
  %131 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  br label %147

132:                                              ; preds = %128
  %133 = sub nsw i32 0, %37
  %134 = zext i32 %38 to i64
  %135 = shl nuw i64 %134, 32
  %136 = zext i32 %133 to i64
  %137 = or i64 %135, %136
  %138 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  %139 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %29, align 8
  %140 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %138, %139
  br i1 %140, label %141, label %143, !prof !2

141:                                              ; preds = %132
  %142 = call %"struct.v8::internal::CompiledReplacement::ReplacementPart"* @_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEv(%"class.v8::base::SmallVector"* %30) #6
  br label %143

143:                                              ; preds = %132, %141
  %144 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %142, %141 ], [ %138, %132 ]
  %145 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %144 to i64*
  store i64 %137, i64* %145, align 4
  %146 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %144, i64 1
  store %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %146, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  br label %147

147:                                              ; preds = %130, %143
  %148 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %131, %130 ], [ %146, %143 ]
  %149 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %29, align 8
  %150 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %148, %149
  br i1 %150, label %151, label %153, !prof !2

151:                                              ; preds = %147
  %152 = call %"struct.v8::internal::CompiledReplacement::ReplacementPart"* @_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEv(%"class.v8::base::SmallVector"* %30) #6
  br label %153

153:                                              ; preds = %147, %151
  %154 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %152, %151 ], [ %148, %147 ]
  %155 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %154 to i64*
  store i64 3, i64* %155, align 4
  %156 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %154, i64 1
  store %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %156, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  %157 = add nsw i32 %38, 2
  br label %315

158:                                              ; preds = %46, %46, %46, %46, %46, %46, %46, %46, %46, %46
  %159 = zext i16 %49 to i32
  %160 = add nsw i32 %159, -48
  %161 = icmp sgt i32 %160, %4
  br i1 %161, label %315, label %162

162:                                              ; preds = %158
  %163 = add nsw i32 %38, 2
  %164 = icmp slt i32 %163, %9
  br i1 %164, label %165, label %179

165:                                              ; preds = %162
  %166 = sext i32 %163 to i64
  %167 = getelementptr inbounds i16, i16* %1, i64 %166
  %168 = load i16, i16* %167, align 2
  %169 = add i16 %168, -48
  %170 = icmp ult i16 %169, 10
  br i1 %170, label %171, label %179

171:                                              ; preds = %165
  %172 = zext i16 %168 to i32
  %173 = mul nsw i32 %160, 10
  %174 = add nsw i32 %173, -48
  %175 = add nsw i32 %174, %172
  %176 = icmp sgt i32 %175, %4
  %177 = select i1 %176, i32 %160, i32 %175
  %178 = select i1 %176, i32 %44, i32 %163
  br label %179

179:                                              ; preds = %165, %171, %162
  %180 = phi i32 [ %160, %162 ], [ %177, %171 ], [ %160, %165 ]
  %181 = phi i32 [ %44, %162 ], [ %178, %171 ], [ %44, %165 ]
  %182 = icmp sgt i32 %180, 0
  br i1 %182, label %183, label %315

183:                                              ; preds = %179
  %184 = icmp sgt i32 %38, %37
  br i1 %184, label %187, label %185

185:                                              ; preds = %183
  %186 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  br label %202

187:                                              ; preds = %183
  %188 = sub nsw i32 0, %37
  %189 = zext i32 %38 to i64
  %190 = shl nuw i64 %189, 32
  %191 = zext i32 %188 to i64
  %192 = or i64 %190, %191
  %193 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  %194 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %29, align 8
  %195 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %193, %194
  br i1 %195, label %196, label %198, !prof !2

196:                                              ; preds = %187
  %197 = call %"struct.v8::internal::CompiledReplacement::ReplacementPart"* @_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEv(%"class.v8::base::SmallVector"* %30) #6
  br label %198

198:                                              ; preds = %187, %196
  %199 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %197, %196 ], [ %193, %187 ]
  %200 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %199 to i64*
  store i64 %192, i64* %200, align 4
  %201 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %199, i64 1
  store %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %201, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  br label %202

202:                                              ; preds = %185, %198
  %203 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %186, %185 ], [ %201, %198 ]
  %204 = zext i32 %180 to i64
  %205 = shl nuw i64 %204, 32
  %206 = or i64 %205, 3
  %207 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %29, align 8
  %208 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %203, %207
  br i1 %208, label %209, label %211, !prof !2

209:                                              ; preds = %202
  %210 = call %"struct.v8::internal::CompiledReplacement::ReplacementPart"* @_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEv(%"class.v8::base::SmallVector"* %30) #6
  br label %211

211:                                              ; preds = %202, %209
  %212 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %210, %209 ], [ %203, %202 ]
  %213 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %212 to i64*
  store i64 %206, i64* %213, align 4
  %214 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %212, i64 1
  store %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %214, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  %215 = add nsw i32 %181, 1
  br label %315

216:                                              ; preds = %46
  br i1 %13, label %315, label %217

217:                                              ; preds = %216
  %218 = add i32 %38, 2
  %219 = icmp slt i32 %218, %9
  br i1 %219, label %220, label %315

220:                                              ; preds = %217
  %221 = sext i32 %218 to i64
  br label %222

222:                                              ; preds = %227, %220
  %223 = phi i64 [ %221, %220 ], [ %228, %227 ]
  %224 = getelementptr inbounds i16, i16* %1, i64 %223
  %225 = load i16, i16* %224, align 2
  %226 = icmp eq i16 %225, 62
  br i1 %226, label %231, label %227

227:                                              ; preds = %222
  %228 = add nsw i64 %223, 1
  %229 = trunc i64 %228 to i32
  %230 = icmp eq i32 %229, %9
  br i1 %230, label %315, label %222

231:                                              ; preds = %222
  %232 = trunc i64 %223 to i32
  %233 = icmp eq i32 %232, -1
  br i1 %233, label %315, label %234

234:                                              ; preds = %231
  %235 = shl i64 %223, 32
  %236 = ashr exact i64 %235, 32
  %237 = getelementptr inbounds i16, i16* %1, i64 %221
  %238 = sub nsw i64 %236, %221
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #6
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::String"*)* @_ZNSt3__110__function16__policy_invokerIFbN2v88internal6StringEEE11__call_implINS0_20__default_alloc_funcIZNS3_19CompiledReplacement23ParseReplacementPatternIKtEEbNS3_6VectorIT_EENS3_10FixedArrayEiiEUlS4_E_S5_EEEEbPKNS0_16__policy_storageEOS4_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::String"*)** %15, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal19CompiledReplacement23ParseReplacementPatternIKtEEbNS5_6VectorIT_EENS5_10FixedArrayEiiEUlNS5_6StringEE_FbSD_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %16, align 8
  store i16* %237, i16** %17, align 8
  store i64 %238, i64* %19, align 8
  %239 = load i32, i32* %21, align 4
  %240 = icmp sgt i32 %239, 3
  br i1 %240, label %241, label %272

241:                                              ; preds = %234
  %242 = lshr i32 %239, 2
  %243 = zext i32 %242 to i64
  %244 = load atomic i32, i32* %35 monotonic, align 4
  %245 = zext i32 %244 to i64
  %246 = or i64 %22, %245
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #6
  store i64 %246, i64* %24, align 8
  %247 = call zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbN2v88internal6StringEEE11__call_implINS0_20__default_alloc_funcIZNS3_19CompiledReplacement23ParseReplacementPatternIKtEEbNS3_6VectorIT_EENS3_10FixedArrayEiiEUlS4_E_S5_EEEEbPKNS0_16__policy_storageEOS4_(%"union.std::__1::__function::__policy_storage"* nonnull %25, %"class.v8::internal::String"* nonnull dereferenceable(8) %7) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #6
  br i1 %247, label %248, label %256

248:                                              ; preds = %260, %241
  %249 = phi i32 [ 0, %241 ], [ %263, %260 ]
  %250 = or i32 %249, 4
  %251 = sext i32 %250 to i64
  %252 = add i64 %26, %251
  %253 = inttoptr i64 %252 to i32*
  %254 = load atomic i32, i32* %253 monotonic, align 4
  %255 = ashr i32 %254, 1
  br label %272

256:                                              ; preds = %241, %260
  %257 = phi i64 [ %258, %260 ], [ 0, %241 ]
  %258 = add nuw nsw i64 %257, 1
  %259 = icmp ult i64 %258, %243
  br i1 %259, label %260, label %272

260:                                              ; preds = %256
  %261 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::String"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::String"*)** %15, align 8
  %262 = trunc i64 %258 to i32
  %263 = shl i32 %262, 3
  %264 = or i32 %263, 7
  %265 = sext i32 %264 to i64
  %266 = add i64 %265, %3
  %267 = inttoptr i64 %266 to i32*
  %268 = load atomic i32, i32* %267 monotonic, align 4
  %269 = zext i32 %268 to i64
  %270 = or i64 %22, %269
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #6
  store i64 %270, i64* %24, align 8
  %271 = call zeroext i1 %261(%"union.std::__1::__function::__policy_storage"* nonnull %25, %"class.v8::internal::String"* nonnull dereferenceable(8) %7) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #6
  br i1 %271, label %248, label %256

272:                                              ; preds = %256, %234, %248
  %273 = phi i32 [ %255, %248 ], [ -1, %234 ], [ -1, %256 ]
  %274 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %16, align 8
  %275 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %274, i64 0, i32 1
  %276 = load void (i8*)*, void (i8*)** %275, align 8
  %277 = icmp eq void (i8*)* %276, null
  br i1 %277, label %280, label %278

278:                                              ; preds = %272
  %279 = load i8*, i8** %27, align 8
  call void %276(i8* %279) #6
  br label %280

280:                                              ; preds = %272, %278
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #6
  %281 = icmp sgt i32 %38, %37
  br i1 %281, label %284, label %282

282:                                              ; preds = %280
  %283 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  br label %299

284:                                              ; preds = %280
  %285 = sub nsw i32 0, %37
  %286 = zext i32 %38 to i64
  %287 = shl nuw i64 %286, 32
  %288 = zext i32 %285 to i64
  %289 = or i64 %287, %288
  %290 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  %291 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %29, align 8
  %292 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %290, %291
  br i1 %292, label %293, label %295, !prof !2

293:                                              ; preds = %284
  %294 = call %"struct.v8::internal::CompiledReplacement::ReplacementPart"* @_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEv(%"class.v8::base::SmallVector"* %30) #6
  br label %295

295:                                              ; preds = %284, %293
  %296 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %294, %293 ], [ %290, %284 ]
  %297 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %296 to i64*
  store i64 %289, i64* %297, align 4
  %298 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %296, i64 1
  store %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %298, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  br label %299

299:                                              ; preds = %282, %295
  %300 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %283, %282 ], [ %298, %295 ]
  %301 = icmp eq i32 %273, -1
  %302 = zext i32 %273 to i64
  %303 = shl nuw i64 %302, 32
  %304 = or i64 %303, 3
  %305 = select i1 %301, i64 6, i64 %304
  %306 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %29, align 8
  %307 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %300, %306
  br i1 %307, label %308, label %310, !prof !2

308:                                              ; preds = %299
  %309 = call %"struct.v8::internal::CompiledReplacement::ReplacementPart"* @_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEv(%"class.v8::base::SmallVector"* %30) #6
  br label %310

310:                                              ; preds = %299, %308
  %311 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %309, %308 ], [ %300, %299 ]
  %312 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %311 to i64*
  store i64 %305, i64* %312, align 4
  %313 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %311, i64 1
  store %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %313, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %28, align 8
  %314 = add nsw i32 %232, 1
  br label %315

315:                                              ; preds = %227, %217, %179, %211, %93, %123, %153, %50, %63, %216, %231, %310, %46, %158, %36
  %316 = phi i32 [ %38, %36 ], [ %44, %158 ], [ %44, %46 ], [ %44, %231 ], [ %232, %310 ], [ %44, %216 ], [ %44, %63 ], [ %44, %50 ], [ %44, %93 ], [ %44, %123 ], [ %44, %153 ], [ %181, %211 ], [ %181, %179 ], [ %44, %217 ], [ %44, %227 ]
  %317 = phi i32 [ %37, %36 ], [ %37, %158 ], [ %37, %46 ], [ %37, %231 ], [ %314, %310 ], [ %37, %216 ], [ %67, %63 ], [ %44, %50 ], [ %97, %93 ], [ %127, %123 ], [ %157, %153 ], [ %215, %211 ], [ %37, %179 ], [ %37, %217 ], [ %37, %227 ]
  %318 = add nsw i32 %316, 1
  %319 = icmp slt i32 %318, %9
  br i1 %319, label %36, label %320

320:                                              ; preds = %315, %43, %6
  %321 = phi i32 [ 0, %6 ], [ %37, %43 ], [ %317, %315 ]
  %322 = icmp slt i32 %321, %9
  br i1 %322, label %323, label %342

323:                                              ; preds = %320
  %324 = icmp eq i32 %321, 0
  br i1 %324, label %342, label %325

325:                                              ; preds = %323
  %326 = sub nsw i32 0, %321
  %327 = shl i64 %2, 32
  %328 = zext i32 %326 to i64
  %329 = or i64 %327, %328
  %330 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %0, i64 0, i32 0, i32 1
  %331 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %330, align 8
  %332 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %0, i64 0, i32 0, i32 2
  %333 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %332, align 8
  %334 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %331, %333
  br i1 %334, label %335, label %338, !prof !2

335:                                              ; preds = %325
  %336 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %0, i64 0, i32 0
  %337 = call %"struct.v8::internal::CompiledReplacement::ReplacementPart"* @_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEv(%"class.v8::base::SmallVector"* %336) #6
  br label %338

338:                                              ; preds = %325, %335
  %339 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %337, %335 ], [ %331, %325 ]
  %340 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %339 to i64*
  store i64 %329, i64* %340, align 4
  %341 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %339, i64 1
  store %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %341, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %330, align 8
  br label %342

342:                                              ; preds = %320, %338, %323
  %343 = phi i1 [ true, %323 ], [ false, %338 ], [ false, %320 ]
  ret i1 %343
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19CompiledReplacement5ApplyEPNS0_24ReplacementStringBuilderEiiPi(%"class.v8::internal::CompiledReplacement"* nocapture readonly, %"class.v8::internal::ReplacementStringBuilder"*, i32, i32, i32* nocapture readonly) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %0, i64 0, i32 0, i32 0
  %7 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %8, align 8
  %10 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %7, %9
  br i1 %10, label %25, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %0, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.v8::internal::ReplacementStringBuilder", %"class.v8::internal::ReplacementStringBuilder"* %1, i64 0, i32 1
  %14 = getelementptr inbounds %"class.v8::internal::ReplacementStringBuilder", %"class.v8::internal::ReplacementStringBuilder"* %1, i64 0, i32 3
  %15 = icmp ult i32 %3, 524288
  %16 = shl i32 %3, 11
  %17 = icmp sgt i32 %2, 0
  %18 = icmp ult i32 %2, 2048
  %19 = sub nsw i32 0, %2
  %20 = sext i32 %19 to i64
  %21 = shl nsw i64 %20, 1
  %22 = sext i32 %2 to i64
  %23 = shl nsw i64 %22, 1
  %24 = sub nsw i32 536870888, %2
  br label %26

25:                                               ; preds = %105, %5
  ret void

26:                                               ; preds = %11, %105
  %27 = phi %"struct.v8::internal::CompiledReplacement::ReplacementPart"* [ %7, %11 ], [ %106, %105 ]
  %28 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  switch i32 %29, label %104 [
    i32 1, label %30
    i32 2, label %39
    i32 3, label %62
    i32 4, label %97
    i32 5, label %97
    i32 6, label %105
  ]

30:                                               ; preds = %26
  br i1 %17, label %31, label %105

31:                                               ; preds = %30
  tail call void @_ZN2v88internal24ReplacementStringBuilder14EnsureCapacityEi(%"class.v8::internal::ReplacementStringBuilder"* %1, i32 2) #6
  br i1 %18, label %33, label %32

32:                                               ; preds = %31
  tail call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* %13, i64 %21) #6
  br label %33

33:                                               ; preds = %31, %32
  %34 = phi i64 [ 0, %32 ], [ %23, %31 ]
  tail call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* %13, i64 %34) #6
  %35 = load i32, i32* %14, align 8
  %36 = icmp sgt i32 %35, %24
  %37 = add nsw i32 %35, %2
  %38 = select i1 %36, i32 2147483647, i32 %37
  store i32 %38, i32* %14, align 8
  br label %105

39:                                               ; preds = %26
  %40 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %27, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = icmp sgt i32 %41, %3
  br i1 %42, label %43, label %105

43:                                               ; preds = %39
  tail call void @_ZN2v88internal24ReplacementStringBuilder14EnsureCapacityEi(%"class.v8::internal::ReplacementStringBuilder"* %1, i32 2) #6
  %44 = sub nsw i32 %41, %3
  %45 = icmp ult i32 %44, 2048
  %46 = and i1 %15, %45
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = or i32 %44, %16
  br label %53

49:                                               ; preds = %43
  %50 = sub nsw i32 0, %44
  %51 = sext i32 %50 to i64
  %52 = shl nsw i64 %51, 1
  tail call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* %13, i64 %52) #6
  br label %53

53:                                               ; preds = %47, %49
  %54 = phi i32 [ %48, %47 ], [ %3, %49 ]
  %55 = sext i32 %54 to i64
  %56 = shl nsw i64 %55, 1
  tail call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* %13, i64 %56) #6
  %57 = load i32, i32* %14, align 8
  %58 = sub nsw i32 536870888, %44
  %59 = icmp sgt i32 %57, %58
  %60 = add nsw i32 %57, %44
  %61 = select i1 %59, i32 2147483647, i32 %60
  store i32 %61, i32* %14, align 8
  br label %105

62:                                               ; preds = %26
  %63 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %27, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = shl nsw i32 %64, 1
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i32, i32* %4, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = or i32 %65, 1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, i32* %4, i64 %70
  %72 = load i32, i32* %71, align 4
  %73 = icmp sgt i32 %68, -1
  %74 = icmp sgt i32 %72, %68
  %75 = and i1 %73, %74
  br i1 %75, label %76, label %105

76:                                               ; preds = %62
  tail call void @_ZN2v88internal24ReplacementStringBuilder14EnsureCapacityEi(%"class.v8::internal::ReplacementStringBuilder"* %1, i32 2) #6
  %77 = sub nsw i32 %72, %68
  %78 = icmp ult i32 %77, 2048
  %79 = icmp ult i32 %68, 524288
  %80 = and i1 %79, %78
  br i1 %80, label %81, label %84

81:                                               ; preds = %76
  %82 = shl i32 %68, 11
  %83 = or i32 %77, %82
  br label %88

84:                                               ; preds = %76
  %85 = sub nsw i32 0, %77
  %86 = sext i32 %85 to i64
  %87 = shl nsw i64 %86, 1
  tail call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* %13, i64 %87) #6
  br label %88

88:                                               ; preds = %81, %84
  %89 = phi i32 [ %83, %81 ], [ %68, %84 ]
  %90 = sext i32 %89 to i64
  %91 = shl nsw i64 %90, 1
  tail call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* %13, i64 %91) #6
  %92 = load i32, i32* %14, align 8
  %93 = sub nsw i32 536870888, %77
  %94 = icmp sgt i32 %92, %93
  %95 = add nsw i32 %92, %77
  %96 = select i1 %94, i32 2147483647, i32 %95
  store i32 %96, i32* %14, align 8
  br label %105

97:                                               ; preds = %26, %26
  %98 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %27, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = sext i32 %99 to i64
  %101 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %12, align 8
  %102 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %101, i64 %100, i32 0, i32 0
  %103 = load i64*, i64** %102, align 8
  tail call void @_ZN2v88internal24ReplacementStringBuilder9AddStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::ReplacementStringBuilder"* %1, i64* %103) #6
  br label %105

104:                                              ; preds = %26
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #18
  unreachable

105:                                              ; preds = %62, %88, %39, %53, %30, %33, %26, %97
  %106 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %27, i64 1
  %107 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %106, %9
  br i1 %107, label %25, label %26
}

declare void @_ZN2v88internal24ReplacementStringBuilder9AddStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::ReplacementStringBuilder"*, i64*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal24FindOneByteStringIndicesENS0_6VectorIKhEEhPNSt3__16vectorIiNS4_9allocatorIiEEEEj(i8*, i64, i8 zeroext, %"class.std::__1::vector.817"*, i32) local_unnamed_addr #0 {
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %94, label %7

7:                                                ; preds = %5
  %8 = shl i64 %1, 32
  %9 = ashr exact i64 %8, 32
  %10 = getelementptr inbounds i8, i8* %0, i64 %9
  %11 = zext i8 %2 to i32
  %12 = ptrtoint i8* %10 to i64
  %13 = ptrtoint i8* %0 to i64
  %14 = getelementptr inbounds %"class.std::__1::vector.817", %"class.std::__1::vector.817"* %3, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector.817", %"class.std::__1::vector.817"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast i32** %14 to i64*
  %17 = bitcast %"class.std::__1::vector.817"* %3 to i64*
  %18 = bitcast i32** %15 to i64*
  %19 = getelementptr inbounds %"class.std::__1::vector.817", %"class.std::__1::vector.817"* %3, i64 0, i32 0, i32 0
  br label %20

20:                                               ; preds = %7, %90
  %21 = phi i8* [ %0, %7 ], [ %91, %90 ]
  %22 = phi i32 [ %4, %7 ], [ %92, %90 ]
  %23 = ptrtoint i8* %21 to i64
  %24 = sub i64 %12, %23
  %25 = tail call i8* @memchr(i8* %21, i32 %11, i64 %24) #19
  %26 = icmp eq i8* %25, null
  br i1 %26, label %94, label %27

27:                                               ; preds = %20
  %28 = ptrtoint i8* %25 to i64
  %29 = sub i64 %28, %13
  %30 = trunc i64 %29 to i32
  %31 = load i32*, i32** %14, align 8
  %32 = load i32*, i32** %15, align 8
  %33 = icmp ult i32* %31, %32
  %34 = ptrtoint i32* %32 to i64
  br i1 %33, label %35, label %38

35:                                               ; preds = %27
  store i32 %30, i32* %31, align 4
  %36 = getelementptr inbounds i32, i32* %31, i64 1
  %37 = ptrtoint i32* %36 to i64
  store i64 %37, i64* %16, align 8
  br label %90

38:                                               ; preds = %27
  %39 = ptrtoint i32* %31 to i64
  %40 = load i64, i64* %17, align 8
  %41 = sub i64 %39, %40
  %42 = ashr exact i64 %41, 2
  %43 = add nsw i64 %42, 1
  %44 = icmp ugt i64 %43, 4611686018427387903
  br i1 %44, label %45, label %47

45:                                               ; preds = %38
  %46 = bitcast %"class.std::__1::vector.817"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %46) #18
  unreachable

47:                                               ; preds = %38
  %48 = sub i64 %34, %40
  %49 = ashr exact i64 %48, 2
  %50 = icmp ult i64 %49, 2305843009213693951
  br i1 %50, label %51, label %59

51:                                               ; preds = %47
  %52 = ashr exact i64 %48, 1
  %53 = icmp ult i64 %52, %43
  %54 = select i1 %53, i64 %43, i64 %52
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %64, label %56

56:                                               ; preds = %51
  %57 = icmp ugt i64 %54, 4611686018427387903
  br i1 %57, label %58, label %59

58:                                               ; preds = %56
  tail call void @abort() #18
  unreachable

59:                                               ; preds = %56, %47
  %60 = phi i64 [ %54, %56 ], [ 4611686018427387903, %47 ]
  %61 = shl i64 %60, 2
  %62 = tail call i8* @_Znwm(i64 %61) #20
  %63 = bitcast i8* %62 to i32*
  br label %64

64:                                               ; preds = %59, %51
  %65 = phi i64 [ %60, %59 ], [ 0, %51 ]
  %66 = phi i32* [ %63, %59 ], [ null, %51 ]
  %67 = getelementptr inbounds i32, i32* %66, i64 %42
  %68 = getelementptr inbounds i32, i32* %66, i64 %65
  %69 = ptrtoint i32* %68 to i64
  store i32 %30, i32* %67, align 4
  %70 = getelementptr inbounds i32, i32* %67, i64 1
  %71 = ptrtoint i32* %70 to i64
  %72 = load i32*, i32** %19, align 8
  %73 = load i64, i64* %16, align 8
  %74 = ptrtoint i32* %72 to i64
  %75 = sub i64 %73, %74
  %76 = ashr exact i64 %75, 2
  %77 = sub nsw i64 0, %76
  %78 = getelementptr inbounds i32, i32* %67, i64 %77
  %79 = ptrtoint i32* %78 to i64
  %80 = icmp sgt i64 %75, 0
  br i1 %80, label %81, label %85

81:                                               ; preds = %64
  %82 = bitcast i32* %78 to i8*
  %83 = bitcast i32* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %82, i8* align 4 %83, i64 %75, i1 false) #6
  %84 = load i32*, i32** %19, align 8
  br label %85

85:                                               ; preds = %81, %64
  %86 = phi i32* [ %72, %64 ], [ %84, %81 ]
  store i64 %79, i64* %17, align 8
  store i64 %71, i64* %16, align 8
  store i64 %69, i64* %18, align 8
  %87 = icmp eq i32* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %85
  %89 = bitcast i32* %86 to i8*
  tail call void @_ZdlPv(i8* %89) #20
  br label %90

90:                                               ; preds = %35, %85, %88
  %91 = getelementptr inbounds i8, i8* %25, i64 1
  %92 = add i32 %22, -1
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %20

94:                                               ; preds = %20, %90, %5
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal24FindTwoByteStringIndicesENS0_6VectorIKtEEtPNSt3__16vectorIiNS4_9allocatorIiEEEEj(i16*, i64, i16 zeroext, %"class.std::__1::vector.817"*, i32) local_unnamed_addr #0 {
  %6 = shl i64 %1, 32
  %7 = ashr exact i64 %6, 32
  %8 = getelementptr inbounds i16, i16* %0, i64 %7
  %9 = icmp sgt i64 %6, 0
  %10 = icmp ne i32 %4, 0
  %11 = and i1 %10, %9
  br i1 %11, label %12, label %20

12:                                               ; preds = %5
  %13 = ptrtoint i16* %0 to i64
  %14 = getelementptr inbounds %"class.std::__1::vector.817", %"class.std::__1::vector.817"* %3, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector.817", %"class.std::__1::vector.817"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast i32** %14 to i64*
  %17 = bitcast %"class.std::__1::vector.817"* %3 to i64*
  %18 = bitcast i32** %15 to i64*
  %19 = getelementptr inbounds %"class.std::__1::vector.817", %"class.std::__1::vector.817"* %3, i64 0, i32 0, i32 0
  br label %21

20:                                               ; preds = %92, %5
  ret void

21:                                               ; preds = %12, %92
  %22 = phi i16* [ %0, %12 ], [ %94, %92 ]
  %23 = phi i32 [ %4, %12 ], [ %93, %92 ]
  %24 = load i16, i16* %22, align 2
  %25 = icmp eq i16 %24, %2
  br i1 %25, label %26, label %92

26:                                               ; preds = %21
  %27 = ptrtoint i16* %22 to i64
  %28 = sub i64 %27, %13
  %29 = lshr exact i64 %28, 1
  %30 = trunc i64 %29 to i32
  %31 = load i32*, i32** %14, align 8
  %32 = load i32*, i32** %15, align 8
  %33 = icmp ult i32* %31, %32
  %34 = ptrtoint i32* %32 to i64
  br i1 %33, label %35, label %38

35:                                               ; preds = %26
  store i32 %30, i32* %31, align 4
  %36 = getelementptr inbounds i32, i32* %31, i64 1
  %37 = ptrtoint i32* %36 to i64
  store i64 %37, i64* %16, align 8
  br label %90

38:                                               ; preds = %26
  %39 = ptrtoint i32* %31 to i64
  %40 = load i64, i64* %17, align 8
  %41 = sub i64 %39, %40
  %42 = ashr exact i64 %41, 2
  %43 = add nsw i64 %42, 1
  %44 = icmp ugt i64 %43, 4611686018427387903
  br i1 %44, label %45, label %47

45:                                               ; preds = %38
  %46 = bitcast %"class.std::__1::vector.817"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %46) #18
  unreachable

47:                                               ; preds = %38
  %48 = sub i64 %34, %40
  %49 = ashr exact i64 %48, 2
  %50 = icmp ult i64 %49, 2305843009213693951
  br i1 %50, label %51, label %59

51:                                               ; preds = %47
  %52 = ashr exact i64 %48, 1
  %53 = icmp ult i64 %52, %43
  %54 = select i1 %53, i64 %43, i64 %52
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %64, label %56

56:                                               ; preds = %51
  %57 = icmp ugt i64 %54, 4611686018427387903
  br i1 %57, label %58, label %59

58:                                               ; preds = %56
  tail call void @abort() #18
  unreachable

59:                                               ; preds = %56, %47
  %60 = phi i64 [ %54, %56 ], [ 4611686018427387903, %47 ]
  %61 = shl i64 %60, 2
  %62 = tail call i8* @_Znwm(i64 %61) #20
  %63 = bitcast i8* %62 to i32*
  br label %64

64:                                               ; preds = %59, %51
  %65 = phi i64 [ %60, %59 ], [ 0, %51 ]
  %66 = phi i32* [ %63, %59 ], [ null, %51 ]
  %67 = getelementptr inbounds i32, i32* %66, i64 %42
  %68 = getelementptr inbounds i32, i32* %66, i64 %65
  %69 = ptrtoint i32* %68 to i64
  store i32 %30, i32* %67, align 4
  %70 = getelementptr inbounds i32, i32* %67, i64 1
  %71 = ptrtoint i32* %70 to i64
  %72 = load i32*, i32** %19, align 8
  %73 = load i64, i64* %16, align 8
  %74 = ptrtoint i32* %72 to i64
  %75 = sub i64 %73, %74
  %76 = ashr exact i64 %75, 2
  %77 = sub nsw i64 0, %76
  %78 = getelementptr inbounds i32, i32* %67, i64 %77
  %79 = ptrtoint i32* %78 to i64
  %80 = icmp sgt i64 %75, 0
  br i1 %80, label %81, label %85

81:                                               ; preds = %64
  %82 = bitcast i32* %78 to i8*
  %83 = bitcast i32* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %82, i8* align 4 %83, i64 %75, i1 false) #6
  %84 = load i32*, i32** %19, align 8
  br label %85

85:                                               ; preds = %81, %64
  %86 = phi i32* [ %72, %64 ], [ %84, %81 ]
  store i64 %79, i64* %17, align 8
  store i64 %71, i64* %16, align 8
  store i64 %69, i64* %18, align 8
  %87 = icmp eq i32* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %85
  %89 = bitcast i32* %86 to i8*
  tail call void @_ZdlPv(i8* %89) #20
  br label %90

90:                                               ; preds = %35, %85, %88
  %91 = add i32 %23, -1
  br label %92

92:                                               ; preds = %21, %90
  %93 = phi i32 [ %91, %90 ], [ %23, %21 ]
  %94 = getelementptr inbounds i16, i16* %22, i64 1
  %95 = icmp ult i16* %94, %8
  %96 = icmp ne i32 %93, 0
  %97 = and i1 %96, %95
  br i1 %97, label %21, label %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal25FindStringIndicesDispatchEPNS0_7IsolateENS0_6StringES3_PNSt3__16vectorIiNS4_9allocatorIiEEEEj(%"class.v8::internal::Isolate"*, i64, i64, %"class.std::__1::vector.817"*, i32) local_unnamed_addr #0 {
  %6 = alloca %"class.v8::internal::StringSearch.1236", align 8
  %7 = alloca %"class.v8::internal::StringSearch", align 8
  %8 = alloca %"class.v8::internal::StringSearch.1239", align 8
  %9 = alloca %"class.v8::internal::StringSearch.1241", align 8
  %10 = alloca %"class.v8::internal::String", align 8
  %11 = alloca %"class.v8::internal::String", align 8
  %12 = alloca %"class.v8::internal::CombinationAssertScope", align 1
  %13 = alloca %"class.v8::internal::String::FlatContent", align 8
  %14 = alloca %"class.v8::internal::String::FlatContent", align 8
  %15 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::CombinationAssertScope", %"class.v8::internal::CombinationAssertScope"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #6
  %18 = bitcast %"class.v8::internal::String::FlatContent"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #6
  call void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* nonnull sret %13, %"class.v8::internal::String"* nonnull %10, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %12) #6
  %19 = bitcast %"class.v8::internal::String::FlatContent"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #6
  call void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* nonnull sret %14, %"class.v8::internal::String"* nonnull %11, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %12) #6
  %20 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %13, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %307

23:                                               ; preds = %5
  %24 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %13, i64 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %13, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %14, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %135

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %14, i64 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %14, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %40

38:                                               ; preds = %32
  %39 = load i8, i8* %34, align 1
  call void @_ZN2v88internal24FindOneByteStringIndicesENS0_6VectorIKhEEhPNSt3__16vectorIiNS4_9allocatorIiEEEEj(i8* %25, i64 %28, i8 zeroext %39, %"class.std::__1::vector.817"* %3, i32 %4)
  br label %523

40:                                               ; preds = %32
  %41 = sext i32 %36 to i64
  %42 = bitcast %"class.v8::internal::StringSearch"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %42) #6
  %43 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %7, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %7, i64 0, i32 1, i32 0
  store i8* %34, i8** %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %7, i64 0, i32 1, i32 1
  store i64 %41, i64* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %7, i64 0, i32 3
  %47 = icmp sgt i32 %36, 250
  %48 = select i1 %47, i32 %36, i32 250
  %49 = add nsw i32 %48, -250
  store i32 %49, i32* %46, align 8
  %50 = icmp slt i32 %36, 7
  %51 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %7, i64 0, i32 2
  %52 = select i1 %50, i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIhhE12LinearSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIhhE13InitialSearchEPS2_NS0_6VectorIKhEEi
  store i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)* %52, i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)** %51, align 8
  %53 = icmp eq i32 %4, 0
  br i1 %53, label %134, label %54

54:                                               ; preds = %40
  %55 = call i32 %52(%"class.v8::internal::StringSearch"* nonnull %7, i8* %25, i64 %28, i32 0) #6
  %56 = icmp slt i32 %55, 0
  br i1 %56, label %134, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.std::__1::vector.817", %"class.std::__1::vector.817"* %3, i64 0, i32 0, i32 1
  %59 = getelementptr inbounds %"class.std::__1::vector.817", %"class.std::__1::vector.817"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %60 = bitcast i32** %58 to i64*
  %61 = bitcast %"class.std::__1::vector.817"* %3 to i64*
  %62 = bitcast i32** %59 to i64*
  %63 = getelementptr inbounds %"class.std::__1::vector.817", %"class.std::__1::vector.817"* %3, i64 0, i32 0, i32 0
  br label %64

64:                                               ; preds = %57, %129
  %65 = phi i32 [ %55, %57 ], [ %132, %129 ]
  %66 = phi i32 [ %4, %57 ], [ %127, %129 ]
  %67 = load i32*, i32** %58, align 8
  %68 = load i32*, i32** %59, align 8
  %69 = icmp eq i32* %67, %68
  %70 = ptrtoint i32* %68 to i64
  br i1 %69, label %74, label %71

71:                                               ; preds = %64
  store i32 %65, i32* %67, align 4
  %72 = getelementptr inbounds i32, i32* %67, i64 1
  %73 = ptrtoint i32* %72 to i64
  store i64 %73, i64* %60, align 8
  br label %126

74:                                               ; preds = %64
  %75 = ptrtoint i32* %67 to i64
  %76 = load i64, i64* %61, align 8
  %77 = sub i64 %75, %76
  %78 = ashr exact i64 %77, 2
  %79 = add nsw i64 %78, 1
  %80 = icmp ugt i64 %79, 4611686018427387903
  br i1 %80, label %81, label %83

81:                                               ; preds = %74
  %82 = bitcast %"class.std::__1::vector.817"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %82) #18
  unreachable

83:                                               ; preds = %74
  %84 = sub i64 %70, %76
  %85 = ashr exact i64 %84, 2
  %86 = icmp ult i64 %85, 2305843009213693951
  br i1 %86, label %87, label %95

87:                                               ; preds = %83
  %88 = ashr exact i64 %84, 1
  %89 = icmp ult i64 %88, %79
  %90 = select i1 %89, i64 %79, i64 %88
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %100, label %92

92:                                               ; preds = %87
  %93 = icmp ugt i64 %90, 4611686018427387903
  br i1 %93, label %94, label %95

94:                                               ; preds = %92
  call void @abort() #18
  unreachable

95:                                               ; preds = %92, %83
  %96 = phi i64 [ %90, %92 ], [ 4611686018427387903, %83 ]
  %97 = shl i64 %96, 2
  %98 = call i8* @_Znwm(i64 %97) #20
  %99 = bitcast i8* %98 to i32*
  br label %100

100:                                              ; preds = %95, %87
  %101 = phi i64 [ %96, %95 ], [ 0, %87 ]
  %102 = phi i32* [ %99, %95 ], [ null, %87 ]
  %103 = getelementptr inbounds i32, i32* %102, i64 %78
  %104 = getelementptr inbounds i32, i32* %102, i64 %101
  %105 = ptrtoint i32* %104 to i64
  store i32 %65, i32* %103, align 4
  %106 = getelementptr inbounds i32, i32* %103, i64 1
  %107 = ptrtoint i32* %106 to i64
  %108 = load i32*, i32** %63, align 8
  %109 = load i64, i64* %60, align 8
  %110 = ptrtoint i32* %108 to i64
  %111 = sub i64 %109, %110
  %112 = ashr exact i64 %111, 2
  %113 = sub nsw i64 0, %112
  %114 = getelementptr inbounds i32, i32* %103, i64 %113
  %115 = ptrtoint i32* %114 to i64
  %116 = icmp sgt i64 %111, 0
  br i1 %116, label %117, label %121

117:                                              ; preds = %100
  %118 = bitcast i32* %114 to i8*
  %119 = bitcast i32* %108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %118, i8* align 4 %119, i64 %111, i1 false) #6
  %120 = load i32*, i32** %63, align 8
  br label %121

121:                                              ; preds = %117, %100
  %122 = phi i32* [ %108, %100 ], [ %120, %117 ]
  store i64 %115, i64* %61, align 8
  store i64 %107, i64* %60, align 8
  store i64 %105, i64* %62, align 8
  %123 = icmp eq i32* %122, null
  br i1 %123, label %126, label %124

124:                                              ; preds = %121
  %125 = bitcast i32* %122 to i8*
  call void @_ZdlPv(i8* %125) #20
  br label %126

126:                                              ; preds = %71, %121, %124
  %127 = add i32 %66, -1
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %134, label %129

129:                                              ; preds = %126
  %130 = add nsw i32 %65, %36
  %131 = load i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)*, i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)** %51, align 8
  %132 = call i32 %131(%"class.v8::internal::StringSearch"* nonnull %7, i8* %25, i64 %28, i32 %130) #6
  %133 = icmp slt i32 %132, 0
  br i1 %133, label %134, label %64

134:                                              ; preds = %126, %129, %54, %40
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %42) #6
  br label %523

135:                                              ; preds = %23
  %136 = bitcast %"class.v8::internal::String::FlatContent"* %14 to i16**
  %137 = load i16*, i16** %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %14, i64 0, i32 1
  %139 = load i32, i32* %138, align 8
  %140 = sext i32 %139 to i64
  %141 = bitcast %"class.v8::internal::StringSearch.1236"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %141) #6
  %142 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %6, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %142, align 8
  %143 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %6, i64 0, i32 1, i32 0
  store i16* %137, i16** %143, align 8
  %144 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %6, i64 0, i32 1, i32 1
  store i64 %140, i64* %144, align 8
  %145 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %6, i64 0, i32 3
  %146 = icmp sgt i32 %139, 250
  %147 = select i1 %146, i32 %139, i32 250
  %148 = add nsw i32 %147, -250
  store i32 %148, i32* %145, align 8
  %149 = getelementptr inbounds i16, i16* %137, i64 %140
  %150 = icmp ugt i32 %139, 7
  br i1 %150, label %151, label %187

151:                                              ; preds = %135
  %152 = ptrtoint i16* %137 to i64
  %153 = and i64 %152, 7
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %158, label %155

155:                                              ; preds = %151
  %156 = load i16, i16* %137, align 2
  %157 = icmp ugt i16 %156, 255
  br i1 %157, label %167, label %171

158:                                              ; preds = %171, %151
  %159 = phi i16* [ %137, %151 ], [ %173, %171 ]
  %160 = getelementptr inbounds i16, i16* %159, i64 8
  %161 = icmp ugt i16* %160, %149
  br i1 %161, label %187, label %177

162:                                              ; preds = %171
  %163 = load i16, i16* %173, align 2
  %164 = icmp ugt i16 %163, 255
  br i1 %164, label %165, label %171

165:                                              ; preds = %162
  %166 = ptrtoint i16* %173 to i64
  br label %167

167:                                              ; preds = %165, %155
  %168 = phi i64 [ %152, %155 ], [ %166, %165 ]
  %169 = sub i64 %168, %152
  %170 = ashr exact i64 %169, 1
  br label %208

171:                                              ; preds = %155, %162
  %172 = phi i16* [ %173, %162 ], [ %137, %155 ]
  %173 = getelementptr inbounds i16, i16* %172, i64 1
  %174 = ptrtoint i16* %173 to i64
  %175 = and i64 %174, 7
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %158, label %162

177:                                              ; preds = %158, %183
  %178 = phi i16* [ %184, %183 ], [ %159, %158 ]
  %179 = bitcast i16* %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = and i64 %180, -71777214294589696
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %187

183:                                              ; preds = %177
  %184 = getelementptr inbounds i16, i16* %178, i64 4
  %185 = getelementptr inbounds i16, i16* %178, i64 12
  %186 = icmp ugt i16* %185, %149
  br i1 %186, label %187, label %177

187:                                              ; preds = %183, %177, %158, %135
  %188 = phi i16* [ %137, %135 ], [ %159, %158 ], [ %178, %177 ], [ %184, %183 ]
  %189 = icmp ult i16* %188, %149
  br i1 %189, label %190, label %202

190:                                              ; preds = %187, %199
  %191 = phi i16* [ %200, %199 ], [ %188, %187 ]
  %192 = load i16, i16* %191, align 2
  %193 = icmp ugt i16 %192, 255
  br i1 %193, label %194, label %199

194:                                              ; preds = %190
  %195 = ptrtoint i16* %191 to i64
  %196 = ptrtoint i16* %137 to i64
  %197 = sub i64 %195, %196
  %198 = ashr exact i64 %197, 1
  br label %208

199:                                              ; preds = %190
  %200 = getelementptr inbounds i16, i16* %191, i64 1
  %201 = icmp ult i16* %200, %149
  br i1 %201, label %190, label %202

202:                                              ; preds = %199, %187
  %203 = phi i16* [ %188, %187 ], [ %200, %199 ]
  %204 = ptrtoint i16* %203 to i64
  %205 = ptrtoint i16* %137 to i64
  %206 = sub i64 %204, %205
  %207 = lshr exact i64 %206, 1
  br label %208

208:                                              ; preds = %202, %194, %167
  %209 = phi i64 [ %170, %167 ], [ %198, %194 ], [ %207, %202 ]
  %210 = trunc i64 %209 to i32
  %211 = icmp sgt i32 %139, %210
  br i1 %211, label %212, label %214

212:                                              ; preds = %208
  %213 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %6, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1236"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIthE10FailSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch.1236"*, i8*, i64, i32)** %213, align 8
  br label %223

214:                                              ; preds = %208
  %215 = icmp slt i32 %139, 7
  br i1 %215, label %216, label %221

216:                                              ; preds = %214
  %217 = icmp eq i32 %139, 1
  %218 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %6, i64 0, i32 2
  br i1 %217, label %219, label %220

219:                                              ; preds = %216
  store i32 (%"class.v8::internal::StringSearch.1236"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIthE16SingleCharSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch.1236"*, i8*, i64, i32)** %218, align 8
  br label %223

220:                                              ; preds = %216
  store i32 (%"class.v8::internal::StringSearch.1236"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIthE12LinearSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch.1236"*, i8*, i64, i32)** %218, align 8
  br label %223

221:                                              ; preds = %214
  %222 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %6, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1236"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIthE13InitialSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch.1236"*, i8*, i64, i32)** %222, align 8
  br label %223

223:                                              ; preds = %212, %219, %220, %221
  %224 = phi i32 (%"class.v8::internal::StringSearch.1236"*, i8*, i64, i32)* [ @_ZN2v88internal12StringSearchIthE10FailSearchEPS2_NS0_6VectorIKhEEi, %212 ], [ @_ZN2v88internal12StringSearchIthE16SingleCharSearchEPS2_NS0_6VectorIKhEEi, %219 ], [ @_ZN2v88internal12StringSearchIthE12LinearSearchEPS2_NS0_6VectorIKhEEi, %220 ], [ @_ZN2v88internal12StringSearchIthE13InitialSearchEPS2_NS0_6VectorIKhEEi, %221 ]
  %225 = icmp eq i32 %4, 0
  br i1 %225, label %306, label %226

226:                                              ; preds = %223
  %227 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %6, i64 0, i32 2
  %228 = getelementptr inbounds %"class.std::__1::vector.817", %"class.std::__1::vector.817"* %3, i64 0, i32 0, i32 1
  %229 = getelementptr inbounds %"class.std::__1::vector.817", %"class.std::__1::vector.817"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %230 = bitcast i32** %228 to i64*
  %231 = bitcast %"class.std::__1::vector.817"* %3 to i64*
  %232 = bitcast i32** %229 to i64*
  %233 = getelementptr inbounds %"class.std::__1::vector.817", %"class.std::__1::vector.817"* %3, i64 0, i32 0, i32 0
  %234 = call i32 %224(%"class.v8::internal::StringSearch.1236"* nonnull %6, i8* %25, i64 %28, i32 0) #6
  %235 = icmp slt i32 %234, 0
  br i1 %235, label %306, label %236

236:                                              ; preds = %226, %301
  %237 = phi i32 [ %304, %301 ], [ %234, %226 ]
  %238 = phi i32 [ %299, %301 ], [ %4, %226 ]
  %239 = load i32*, i32** %228, align 8
  %240 = load i32*, i32** %229, align 8
  %241 = icmp eq i32* %239, %240
  %242 = ptrtoint i32* %240 to i64
  br i1 %241, label %246, label %243

243:                                              ; preds = %236
  store i32 %237, i32* %239, align 4
  %244 = getelementptr inbounds i32, i32* %239, i64 1
  %245 = ptrtoint i32* %244 to i64
  store i64 %245, i64* %230, align 8
  br label %298

246:                                              ; preds = %236
  %247 = ptrtoint i32* %239 to i64
  %248 = load i64, i64* %231, align 8
  %249 = sub i64 %247, %248
  %250 = ashr exact i64 %249, 2
  %251 = add nsw i64 %250, 1
  %252 = icmp ugt i64 %251, 4611686018427387903
  br i1 %252, label %253, label %255

253:                                              ; preds = %246
  %254 = bitcast %"class.std::__1::vector.817"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %254) #18
  unreachable

255:                                              ; preds = %246
  %256 = sub i64 %242, %248
  %257 = ashr exact i64 %256, 2
  %258 = icmp ult i64 %257, 2305843009213693951
  br i1 %258, label %259, label %267

259:                                              ; preds = %255
  %260 = ashr exact i64 %256, 1
  %261 = icmp ult i64 %260, %251
  %262 = select i1 %261, i64 %251, i64 %260
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %272, label %264

264:                                              ; preds = %259
  %265 = icmp ugt i64 %262, 4611686018427387903
  br i1 %265, label %266, label %267

266:                                              ; preds = %264
  call void @abort() #18
  unreachable

267:                                              ; preds = %264, %255
  %268 = phi i64 [ %262, %264 ], [ 4611686018427387903, %255 ]
  %269 = shl i64 %268, 2
  %270 = call i8* @_Znwm(i64 %269) #20
  %271 = bitcast i8* %270 to i32*
  br label %272

272:                                              ; preds = %267, %259
  %273 = phi i64 [ %268, %267 ], [ 0, %259 ]
  %274 = phi i32* [ %271, %267 ], [ null, %259 ]
  %275 = getelementptr inbounds i32, i32* %274, i64 %250
  %276 = getelementptr inbounds i32, i32* %274, i64 %273
  %277 = ptrtoint i32* %276 to i64
  store i32 %237, i32* %275, align 4
  %278 = getelementptr inbounds i32, i32* %275, i64 1
  %279 = ptrtoint i32* %278 to i64
  %280 = load i32*, i32** %233, align 8
  %281 = load i64, i64* %230, align 8
  %282 = ptrtoint i32* %280 to i64
  %283 = sub i64 %281, %282
  %284 = ashr exact i64 %283, 2
  %285 = sub nsw i64 0, %284
  %286 = getelementptr inbounds i32, i32* %275, i64 %285
  %287 = ptrtoint i32* %286 to i64
  %288 = icmp sgt i64 %283, 0
  br i1 %288, label %289, label %293

289:                                              ; preds = %272
  %290 = bitcast i32* %286 to i8*
  %291 = bitcast i32* %280 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %290, i8* align 4 %291, i64 %283, i1 false) #6
  %292 = load i32*, i32** %233, align 8
  br label %293

293:                                              ; preds = %289, %272
  %294 = phi i32* [ %280, %272 ], [ %292, %289 ]
  store i64 %287, i64* %231, align 8
  store i64 %279, i64* %230, align 8
  store i64 %277, i64* %232, align 8
  %295 = icmp eq i32* %294, null
  br i1 %295, label %298, label %296

296:                                              ; preds = %293
  %297 = bitcast i32* %294 to i8*
  call void @_ZdlPv(i8* %297) #20
  br label %298

298:                                              ; preds = %243, %293, %296
  %299 = add i32 %238, -1
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %306, label %301

301:                                              ; preds = %298
  %302 = add nsw i32 %237, %139
  %303 = load i32 (%"class.v8::internal::StringSearch.1236"*, i8*, i64, i32)*, i32 (%"class.v8::internal::StringSearch.1236"*, i8*, i64, i32)** %227, align 8
  %304 = call i32 %303(%"class.v8::internal::StringSearch.1236"* nonnull %6, i8* %25, i64 %28, i32 %302) #6
  %305 = icmp slt i32 %304, 0
  br i1 %305, label %306, label %236

306:                                              ; preds = %298, %301, %226, %223
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %141) #6
  br label %523

307:                                              ; preds = %5
  %308 = bitcast %"class.v8::internal::String::FlatContent"* %13 to i16**
  %309 = load i16*, i16** %308, align 8
  %310 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %13, i64 0, i32 1
  %311 = load i32, i32* %310, align 8
  %312 = sext i32 %311 to i64
  %313 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %14, i64 0, i32 2
  %314 = load i32, i32* %313, align 4
  %315 = icmp eq i32 %314, 1
  br i1 %315, label %316, label %420

316:                                              ; preds = %307
  %317 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %14, i64 0, i32 0, i32 0
  %318 = load i8*, i8** %317, align 8
  %319 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %14, i64 0, i32 1
  %320 = load i32, i32* %319, align 8
  %321 = icmp eq i32 %320, 1
  br i1 %321, label %322, label %325

322:                                              ; preds = %316
  %323 = load i8, i8* %318, align 1
  %324 = zext i8 %323 to i16
  call void @_ZN2v88internal24FindTwoByteStringIndicesENS0_6VectorIKtEEtPNSt3__16vectorIiNS4_9allocatorIiEEEEj(i16* %309, i64 %312, i16 zeroext %324, %"class.std::__1::vector.817"* %3, i32 %4)
  br label %523

325:                                              ; preds = %316
  %326 = sext i32 %320 to i64
  %327 = bitcast %"class.v8::internal::StringSearch.1239"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %327) #6
  %328 = getelementptr inbounds %"class.v8::internal::StringSearch.1239", %"class.v8::internal::StringSearch.1239"* %8, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %328, align 8
  %329 = getelementptr inbounds %"class.v8::internal::StringSearch.1239", %"class.v8::internal::StringSearch.1239"* %8, i64 0, i32 1, i32 0
  store i8* %318, i8** %329, align 8
  %330 = getelementptr inbounds %"class.v8::internal::StringSearch.1239", %"class.v8::internal::StringSearch.1239"* %8, i64 0, i32 1, i32 1
  store i64 %326, i64* %330, align 8
  %331 = getelementptr inbounds %"class.v8::internal::StringSearch.1239", %"class.v8::internal::StringSearch.1239"* %8, i64 0, i32 3
  %332 = icmp sgt i32 %320, 250
  %333 = select i1 %332, i32 %320, i32 250
  %334 = add nsw i32 %333, -250
  store i32 %334, i32* %331, align 8
  %335 = icmp slt i32 %320, 7
  %336 = getelementptr inbounds %"class.v8::internal::StringSearch.1239", %"class.v8::internal::StringSearch.1239"* %8, i64 0, i32 2
  %337 = select i1 %335, i32 (%"class.v8::internal::StringSearch.1239"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIhtE12LinearSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1239"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIhtE13InitialSearchEPS2_NS0_6VectorIKtEEi
  store i32 (%"class.v8::internal::StringSearch.1239"*, i16*, i64, i32)* %337, i32 (%"class.v8::internal::StringSearch.1239"*, i16*, i64, i32)** %336, align 8
  %338 = icmp eq i32 %4, 0
  br i1 %338, label %419, label %339

339:                                              ; preds = %325
  %340 = call i32 %337(%"class.v8::internal::StringSearch.1239"* nonnull %8, i16* %309, i64 %312, i32 0) #6
  %341 = icmp slt i32 %340, 0
  br i1 %341, label %419, label %342

342:                                              ; preds = %339
  %343 = getelementptr inbounds %"class.std::__1::vector.817", %"class.std::__1::vector.817"* %3, i64 0, i32 0, i32 1
  %344 = getelementptr inbounds %"class.std::__1::vector.817", %"class.std::__1::vector.817"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %345 = bitcast i32** %343 to i64*
  %346 = bitcast %"class.std::__1::vector.817"* %3 to i64*
  %347 = bitcast i32** %344 to i64*
  %348 = getelementptr inbounds %"class.std::__1::vector.817", %"class.std::__1::vector.817"* %3, i64 0, i32 0, i32 0
  br label %349

349:                                              ; preds = %342, %414
  %350 = phi i32 [ %340, %342 ], [ %417, %414 ]
  %351 = phi i32 [ %4, %342 ], [ %412, %414 ]
  %352 = load i32*, i32** %343, align 8
  %353 = load i32*, i32** %344, align 8
  %354 = icmp eq i32* %352, %353
  %355 = ptrtoint i32* %353 to i64
  br i1 %354, label %359, label %356

356:                                              ; preds = %349
  store i32 %350, i32* %352, align 4
  %357 = getelementptr inbounds i32, i32* %352, i64 1
  %358 = ptrtoint i32* %357 to i64
  store i64 %358, i64* %345, align 8
  br label %411

359:                                              ; preds = %349
  %360 = ptrtoint i32* %352 to i64
  %361 = load i64, i64* %346, align 8
  %362 = sub i64 %360, %361
  %363 = ashr exact i64 %362, 2
  %364 = add nsw i64 %363, 1
  %365 = icmp ugt i64 %364, 4611686018427387903
  br i1 %365, label %366, label %368

366:                                              ; preds = %359
  %367 = bitcast %"class.std::__1::vector.817"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %367) #18
  unreachable

368:                                              ; preds = %359
  %369 = sub i64 %355, %361
  %370 = ashr exact i64 %369, 2
  %371 = icmp ult i64 %370, 2305843009213693951
  br i1 %371, label %372, label %380

372:                                              ; preds = %368
  %373 = ashr exact i64 %369, 1
  %374 = icmp ult i64 %373, %364
  %375 = select i1 %374, i64 %364, i64 %373
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %385, label %377

377:                                              ; preds = %372
  %378 = icmp ugt i64 %375, 4611686018427387903
  br i1 %378, label %379, label %380

379:                                              ; preds = %377
  call void @abort() #18
  unreachable

380:                                              ; preds = %377, %368
  %381 = phi i64 [ %375, %377 ], [ 4611686018427387903, %368 ]
  %382 = shl i64 %381, 2
  %383 = call i8* @_Znwm(i64 %382) #20
  %384 = bitcast i8* %383 to i32*
  br label %385

385:                                              ; preds = %380, %372
  %386 = phi i64 [ %381, %380 ], [ 0, %372 ]
  %387 = phi i32* [ %384, %380 ], [ null, %372 ]
  %388 = getelementptr inbounds i32, i32* %387, i64 %363
  %389 = getelementptr inbounds i32, i32* %387, i64 %386
  %390 = ptrtoint i32* %389 to i64
  store i32 %350, i32* %388, align 4
  %391 = getelementptr inbounds i32, i32* %388, i64 1
  %392 = ptrtoint i32* %391 to i64
  %393 = load i32*, i32** %348, align 8
  %394 = load i64, i64* %345, align 8
  %395 = ptrtoint i32* %393 to i64
  %396 = sub i64 %394, %395
  %397 = ashr exact i64 %396, 2
  %398 = sub nsw i64 0, %397
  %399 = getelementptr inbounds i32, i32* %388, i64 %398
  %400 = ptrtoint i32* %399 to i64
  %401 = icmp sgt i64 %396, 0
  br i1 %401, label %402, label %406

402:                                              ; preds = %385
  %403 = bitcast i32* %399 to i8*
  %404 = bitcast i32* %393 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %403, i8* align 4 %404, i64 %396, i1 false) #6
  %405 = load i32*, i32** %348, align 8
  br label %406

406:                                              ; preds = %402, %385
  %407 = phi i32* [ %393, %385 ], [ %405, %402 ]
  store i64 %400, i64* %346, align 8
  store i64 %392, i64* %345, align 8
  store i64 %390, i64* %347, align 8
  %408 = icmp eq i32* %407, null
  br i1 %408, label %411, label %409

409:                                              ; preds = %406
  %410 = bitcast i32* %407 to i8*
  call void @_ZdlPv(i8* %410) #20
  br label %411

411:                                              ; preds = %356, %406, %409
  %412 = add i32 %351, -1
  %413 = icmp eq i32 %412, 0
  br i1 %413, label %419, label %414

414:                                              ; preds = %411
  %415 = add nsw i32 %350, %320
  %416 = load i32 (%"class.v8::internal::StringSearch.1239"*, i16*, i64, i32)*, i32 (%"class.v8::internal::StringSearch.1239"*, i16*, i64, i32)** %336, align 8
  %417 = call i32 %416(%"class.v8::internal::StringSearch.1239"* nonnull %8, i16* %309, i64 %312, i32 %415) #6
  %418 = icmp slt i32 %417, 0
  br i1 %418, label %419, label %349

419:                                              ; preds = %411, %414, %339, %325
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %327) #6
  br label %523

420:                                              ; preds = %307
  %421 = bitcast %"class.v8::internal::String::FlatContent"* %14 to i16**
  %422 = load i16*, i16** %421, align 8
  %423 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %14, i64 0, i32 1
  %424 = load i32, i32* %423, align 8
  %425 = icmp eq i32 %424, 1
  br i1 %425, label %426, label %428

426:                                              ; preds = %420
  %427 = load i16, i16* %422, align 2
  call void @_ZN2v88internal24FindTwoByteStringIndicesENS0_6VectorIKtEEtPNSt3__16vectorIiNS4_9allocatorIiEEEEj(i16* %309, i64 %312, i16 zeroext %427, %"class.std::__1::vector.817"* %3, i32 %4)
  br label %523

428:                                              ; preds = %420
  %429 = sext i32 %424 to i64
  %430 = bitcast %"class.v8::internal::StringSearch.1241"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %430) #6
  %431 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %9, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %431, align 8
  %432 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %9, i64 0, i32 1, i32 0
  store i16* %422, i16** %432, align 8
  %433 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %9, i64 0, i32 1, i32 1
  store i64 %429, i64* %433, align 8
  %434 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %9, i64 0, i32 3
  %435 = icmp sgt i32 %424, 250
  %436 = select i1 %435, i32 %424, i32 250
  %437 = add nsw i32 %436, -250
  store i32 %437, i32* %434, align 8
  %438 = icmp slt i32 %424, 7
  %439 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %9, i64 0, i32 2
  %440 = select i1 %438, i32 (%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIttE12LinearSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIttE13InitialSearchEPS2_NS0_6VectorIKtEEi
  store i32 (%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32)* %440, i32 (%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32)** %439, align 8
  %441 = icmp eq i32 %4, 0
  br i1 %441, label %522, label %442

442:                                              ; preds = %428
  %443 = call i32 %440(%"class.v8::internal::StringSearch.1241"* nonnull %9, i16* %309, i64 %312, i32 0) #6
  %444 = icmp slt i32 %443, 0
  br i1 %444, label %522, label %445

445:                                              ; preds = %442
  %446 = getelementptr inbounds %"class.std::__1::vector.817", %"class.std::__1::vector.817"* %3, i64 0, i32 0, i32 1
  %447 = getelementptr inbounds %"class.std::__1::vector.817", %"class.std::__1::vector.817"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %448 = bitcast i32** %446 to i64*
  %449 = bitcast %"class.std::__1::vector.817"* %3 to i64*
  %450 = bitcast i32** %447 to i64*
  %451 = getelementptr inbounds %"class.std::__1::vector.817", %"class.std::__1::vector.817"* %3, i64 0, i32 0, i32 0
  br label %452

452:                                              ; preds = %445, %517
  %453 = phi i32 [ %443, %445 ], [ %520, %517 ]
  %454 = phi i32 [ %4, %445 ], [ %515, %517 ]
  %455 = load i32*, i32** %446, align 8
  %456 = load i32*, i32** %447, align 8
  %457 = icmp eq i32* %455, %456
  %458 = ptrtoint i32* %456 to i64
  br i1 %457, label %462, label %459

459:                                              ; preds = %452
  store i32 %453, i32* %455, align 4
  %460 = getelementptr inbounds i32, i32* %455, i64 1
  %461 = ptrtoint i32* %460 to i64
  store i64 %461, i64* %448, align 8
  br label %514

462:                                              ; preds = %452
  %463 = ptrtoint i32* %455 to i64
  %464 = load i64, i64* %449, align 8
  %465 = sub i64 %463, %464
  %466 = ashr exact i64 %465, 2
  %467 = add nsw i64 %466, 1
  %468 = icmp ugt i64 %467, 4611686018427387903
  br i1 %468, label %469, label %471

469:                                              ; preds = %462
  %470 = bitcast %"class.std::__1::vector.817"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %470) #18
  unreachable

471:                                              ; preds = %462
  %472 = sub i64 %458, %464
  %473 = ashr exact i64 %472, 2
  %474 = icmp ult i64 %473, 2305843009213693951
  br i1 %474, label %475, label %483

475:                                              ; preds = %471
  %476 = ashr exact i64 %472, 1
  %477 = icmp ult i64 %476, %467
  %478 = select i1 %477, i64 %467, i64 %476
  %479 = icmp eq i64 %478, 0
  br i1 %479, label %488, label %480

480:                                              ; preds = %475
  %481 = icmp ugt i64 %478, 4611686018427387903
  br i1 %481, label %482, label %483

482:                                              ; preds = %480
  call void @abort() #18
  unreachable

483:                                              ; preds = %480, %471
  %484 = phi i64 [ %478, %480 ], [ 4611686018427387903, %471 ]
  %485 = shl i64 %484, 2
  %486 = call i8* @_Znwm(i64 %485) #20
  %487 = bitcast i8* %486 to i32*
  br label %488

488:                                              ; preds = %483, %475
  %489 = phi i64 [ %484, %483 ], [ 0, %475 ]
  %490 = phi i32* [ %487, %483 ], [ null, %475 ]
  %491 = getelementptr inbounds i32, i32* %490, i64 %466
  %492 = getelementptr inbounds i32, i32* %490, i64 %489
  %493 = ptrtoint i32* %492 to i64
  store i32 %453, i32* %491, align 4
  %494 = getelementptr inbounds i32, i32* %491, i64 1
  %495 = ptrtoint i32* %494 to i64
  %496 = load i32*, i32** %451, align 8
  %497 = load i64, i64* %448, align 8
  %498 = ptrtoint i32* %496 to i64
  %499 = sub i64 %497, %498
  %500 = ashr exact i64 %499, 2
  %501 = sub nsw i64 0, %500
  %502 = getelementptr inbounds i32, i32* %491, i64 %501
  %503 = ptrtoint i32* %502 to i64
  %504 = icmp sgt i64 %499, 0
  br i1 %504, label %505, label %509

505:                                              ; preds = %488
  %506 = bitcast i32* %502 to i8*
  %507 = bitcast i32* %496 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %506, i8* align 4 %507, i64 %499, i1 false) #6
  %508 = load i32*, i32** %451, align 8
  br label %509

509:                                              ; preds = %505, %488
  %510 = phi i32* [ %496, %488 ], [ %508, %505 ]
  store i64 %503, i64* %449, align 8
  store i64 %495, i64* %448, align 8
  store i64 %493, i64* %450, align 8
  %511 = icmp eq i32* %510, null
  br i1 %511, label %514, label %512

512:                                              ; preds = %509
  %513 = bitcast i32* %510 to i8*
  call void @_ZdlPv(i8* %513) #20
  br label %514

514:                                              ; preds = %459, %509, %512
  %515 = add i32 %454, -1
  %516 = icmp eq i32 %515, 0
  br i1 %516, label %522, label %517

517:                                              ; preds = %514
  %518 = add nsw i32 %453, %424
  %519 = load i32 (%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32)*, i32 (%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32)** %439, align 8
  %520 = call i32 %519(%"class.v8::internal::StringSearch.1241"* nonnull %9, i16* %309, i64 %312, i32 %518) #6
  %521 = icmp slt i32 %520, 0
  br i1 %521, label %522, label %452

522:                                              ; preds = %514, %517, %442, %428
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %430) #6
  br label %523

523:                                              ; preds = %426, %522, %322, %419, %38, %134, %306
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal19Runtime_StringSplitEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = alloca %"class.v8::internal::FixedArray", align 8
  %5 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1153", %"struct.std::__1::atomic.1153"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !3

7:                                                ; preds = %3
  %8 = tail call fastcc i64 @_ZN2v88internalL25Stats_Runtime_StringSplitEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %531

9:                                                ; preds = %3
  %10 = ptrtoint i64* %1 to i64
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %12 = bitcast %"struct.v8::internal::HandleScopeData"* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %16, align 8
  %19 = load i64, i64* %1, align 8
  %20 = and i64 %19, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %33, label %22, !prof !4

22:                                               ; preds = %9
  %23 = and i64 %19, -4294967296
  %24 = add i64 %19, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %23, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = icmp ult i16 %31, 64
  br i1 %32, label %34, label %33, !prof !3

33:                                               ; preds = %22, %9
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0)) #18
  unreachable

34:                                               ; preds = %22
  %35 = add i64 %10, -8
  %36 = inttoptr i64 %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %51, label %40, !prof !4

40:                                               ; preds = %34
  %41 = and i64 %37, -4294967296
  %42 = add i64 %37, -1
  %43 = inttoptr i64 %42 to i32*
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %41, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = icmp ult i16 %49, 64
  br i1 %50, label %52, label %51, !prof !3

51:                                               ; preds = %40, %34
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

52:                                               ; preds = %40
  %53 = add i64 %10, -16
  %54 = inttoptr i64 %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = and i64 %55, 1
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %70, label %58

58:                                               ; preds = %52
  %59 = and i64 %55, -4294967296
  %60 = add i64 %55, -1
  %61 = inttoptr i64 %60 to i32*
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = zext i32 %62 to i64
  %64 = or i64 %59, %63
  %65 = add i64 %64, 7
  %66 = inttoptr i64 %65 to i16*
  %67 = load atomic i16, i16* %66 monotonic, align 2
  %68 = icmp eq i16 %67, 66
  br i1 %68, label %73, label %69, !prof !3

69:                                               ; preds = %58
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0)) #18
  unreachable

70:                                               ; preds = %52
  %71 = trunc i64 %55 to i32
  %72 = ashr i32 %71, 1
  br label %119

73:                                               ; preds = %58
  %74 = add i64 %55, 3
  %75 = inttoptr i64 %74 to double*
  %76 = load double, double* %75, align 1
  %77 = tail call double @llvm.fabs.f64(double %76) #21
  %78 = fcmp one double %77, 0x7FF0000000000000
  %79 = fcmp ole double %76, 0x41DFFFFFFFC00000
  %80 = and i1 %79, %78
  %81 = fcmp oge double %76, 0xC1E0000000000000
  %82 = and i1 %81, %80
  br i1 %82, label %83, label %87

83:                                               ; preds = %73
  %84 = fptosi double %76 to i32
  %85 = sitofp i32 %84 to double
  %86 = fcmp une double %76, %85
  br i1 %86, label %87, label %119

87:                                               ; preds = %83, %73
  %88 = bitcast double %76 to i64
  %89 = and i64 %88, 9218868437227405312
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %122, label %91

91:                                               ; preds = %87
  %92 = lshr i64 %88, 52
  %93 = trunc i64 %92 to i32
  %94 = and i32 %93, 2047
  %95 = add nsw i32 %94, -1075
  %96 = icmp slt i32 %95, 0
  br i1 %96, label %97, label %105

97:                                               ; preds = %91
  %98 = icmp slt i32 %95, -52
  br i1 %98, label %122, label %99

99:                                               ; preds = %97
  %100 = and i64 %88, 4503599627370495
  %101 = or i64 %100, 4503599627370496
  %102 = sub nuw nsw i32 1075, %94
  %103 = zext i32 %102 to i64
  %104 = lshr i64 %101, %103
  br label %113

105:                                              ; preds = %91
  %106 = icmp sgt i32 %95, 31
  br i1 %106, label %122, label %107

107:                                              ; preds = %105
  %108 = and i64 %88, 4503599627370495
  %109 = or i64 %108, 4503599627370496
  %110 = zext i32 %95 to i64
  %111 = shl i64 %109, %110
  %112 = and i64 %111, 4294967295
  br label %113

113:                                              ; preds = %107, %99
  %114 = phi i64 [ %104, %99 ], [ %112, %107 ]
  %115 = icmp sgt i64 %88, -1
  %116 = select i1 %115, i32 1, i32 -1
  %117 = trunc i64 %114 to i32
  %118 = mul i32 %116, %117
  br label %119

119:                                              ; preds = %113, %83, %70
  %120 = phi i32 [ %72, %70 ], [ %84, %83 ], [ %118, %113 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123, !prof !2

122:                                              ; preds = %119, %105, %97, %87
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0)) #18
  unreachable

123:                                              ; preds = %119
  %124 = add i64 %19, 7
  %125 = inttoptr i64 %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = add i64 %37, 7
  %128 = inttoptr i64 %127 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = icmp sgt i32 %129, 0
  br i1 %130, label %132, label %131, !prof !3

131:                                              ; preds = %123
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0)) #18
  unreachable

132:                                              ; preds = %123
  %133 = icmp eq i32 %120, -1
  br i1 %133, label %134, label %172

134:                                              ; preds = %132
  %135 = bitcast %"class.v8::internal::FixedArray"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %135) #6
  %136 = getelementptr inbounds %"class.v8::internal::FixedArray", %"class.v8::internal::FixedArray"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %136, align 8
  %137 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 2
  %138 = load i64, i64* %36, align 8
  %139 = call i64 @_ZN2v88internal18RegExpResultsCache6LookupEPNS0_4HeapENS0_6StringENS0_6ObjectEPNS0_10FixedArrayENS1_16ResultsCacheTypeE(%"class.v8::internal::Heap"* %137, i64 %19, i64 %138, %"class.v8::internal::FixedArray"* nonnull %4, i32 1) #6
  %140 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %141 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %140, align 8
  %142 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %141, null
  br i1 %142, label %146, label %143

143:                                              ; preds = %134
  %144 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %141, i64 %139) #6
  %145 = load i64, i64* %144, align 8
  br label %158

146:                                              ; preds = %134
  %147 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %148 = load i64*, i64** %147, align 8
  %149 = load i64*, i64** %14, align 8
  %150 = icmp eq i64* %148, %149
  br i1 %150, label %151, label %153

151:                                              ; preds = %146
  %152 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %153

153:                                              ; preds = %151, %146
  %154 = phi i64* [ %152, %151 ], [ %148, %146 ]
  %155 = ptrtoint i64* %154 to i64
  %156 = add i64 %155, 8
  %157 = inttoptr i64 %156 to i64*
  store i64* %157, i64** %147, align 8
  store i64 %139, i64* %154, align 8
  br label %158

158:                                              ; preds = %153, %143
  %159 = phi i64 [ %145, %143 ], [ %139, %153 ]
  %160 = phi i64* [ %144, %143 ], [ %154, %153 ]
  %161 = trunc i64 %159 to i32
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %158
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %135) #6
  br label %172

164:                                              ; preds = %158
  %165 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %166 = add i64 %159, 3
  %167 = inttoptr i64 %166 to i32*
  %168 = load i32, i32* %167, align 4
  %169 = ashr i32 %168, 1
  %170 = call i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %165, i64* %160, i8 zeroext 3, i32 %169, i8 zeroext 0) #6
  %171 = load i64, i64* %170, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %135) #6
  br label %515

172:                                              ; preds = %163, %132
  %173 = call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %1, i8 zeroext 0) #6
  %174 = call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %36, i8 zeroext 0) #6
  %175 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 44
  %176 = bitcast %"class.std::__1::vector.817"* %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 44, i32 0, i32 1
  %179 = bitcast i32** %178 to i64*
  store i64 %177, i64* %179, align 8
  %180 = load i64, i64* %173, align 8
  %181 = load i64, i64* %174, align 8
  call void @_ZN2v88internal25FindStringIndicesDispatchEPNS0_7IsolateENS0_6StringES3_PNSt3__16vectorIiNS4_9allocatorIiEEEEj(%"class.v8::internal::Isolate"* %2, i64 %180, i64 %181, %"class.std::__1::vector.817"* %175, i32 %120) #6
  %182 = load i64, i64* %179, align 8
  %183 = load i64, i64* %176, align 8
  %184 = sub i64 %182, %183
  %185 = lshr exact i64 %184, 2
  %186 = trunc i64 %185 to i32
  %187 = icmp ugt i32 %120, %186
  %188 = inttoptr i64 %182 to i32*
  br i1 %187, label %189, label %246

189:                                              ; preds = %172
  %190 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 44, i32 0, i32 2, i32 0, i32 0
  %191 = load i32*, i32** %190, align 8
  %192 = icmp eq i32* %191, %188
  br i1 %192, label %196, label %193

193:                                              ; preds = %189
  store i32 %126, i32* %188, align 4
  %194 = getelementptr inbounds i32, i32* %188, i64 1
  %195 = ptrtoint i32* %194 to i64
  store i64 %195, i64* %179, align 8
  br label %246

196:                                              ; preds = %189
  %197 = ashr exact i64 %184, 2
  %198 = add nsw i64 %197, 1
  %199 = icmp ugt i64 %198, 4611686018427387903
  br i1 %199, label %200, label %202

200:                                              ; preds = %196
  %201 = bitcast %"class.std::__1::vector.817"* %175 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %201) #18
  unreachable

202:                                              ; preds = %196
  %203 = bitcast i32** %190 to i64*
  %204 = icmp ult i64 %197, 2305843009213693951
  br i1 %204, label %205, label %213

205:                                              ; preds = %202
  %206 = ashr exact i64 %184, 1
  %207 = icmp ult i64 %206, %198
  %208 = select i1 %207, i64 %198, i64 %206
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %218, label %210

210:                                              ; preds = %205
  %211 = icmp ugt i64 %208, 4611686018427387903
  br i1 %211, label %212, label %213

212:                                              ; preds = %210
  call void @abort() #18
  unreachable

213:                                              ; preds = %210, %202
  %214 = phi i64 [ %208, %210 ], [ 4611686018427387903, %202 ]
  %215 = shl i64 %214, 2
  %216 = call i8* @_Znwm(i64 %215) #20
  %217 = bitcast i8* %216 to i32*
  br label %218

218:                                              ; preds = %213, %205
  %219 = phi i64 [ %214, %213 ], [ 0, %205 ]
  %220 = phi i32* [ %217, %213 ], [ null, %205 ]
  %221 = getelementptr inbounds i32, i32* %220, i64 %197
  %222 = getelementptr inbounds i32, i32* %220, i64 %219
  %223 = ptrtoint i32* %222 to i64
  store i32 %126, i32* %221, align 4
  %224 = getelementptr inbounds i32, i32* %221, i64 1
  %225 = ptrtoint i32* %224 to i64
  %226 = getelementptr inbounds %"class.std::__1::vector.817", %"class.std::__1::vector.817"* %175, i64 0, i32 0, i32 0
  %227 = load i32*, i32** %226, align 8
  %228 = load i64, i64* %179, align 8
  %229 = ptrtoint i32* %227 to i64
  %230 = sub i64 %228, %229
  %231 = ashr exact i64 %230, 2
  %232 = sub nsw i64 0, %231
  %233 = getelementptr inbounds i32, i32* %221, i64 %232
  %234 = ptrtoint i32* %233 to i64
  %235 = icmp sgt i64 %230, 0
  br i1 %235, label %236, label %240

236:                                              ; preds = %218
  %237 = bitcast i32* %233 to i8*
  %238 = bitcast i32* %227 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %237, i8* align 4 %238, i64 %230, i1 false) #6
  %239 = load i32*, i32** %226, align 8
  br label %240

240:                                              ; preds = %236, %218
  %241 = phi i32* [ %227, %218 ], [ %239, %236 ]
  store i64 %234, i64* %176, align 8
  store i64 %225, i64* %179, align 8
  store i64 %223, i64* %203, align 8
  %242 = icmp eq i32* %241, null
  br i1 %242, label %246, label %243

243:                                              ; preds = %240
  %244 = bitcast i32* %241 to i8*
  call void @_ZdlPv(i8* %244) #20
  %245 = load i64, i64* %179, align 8
  br label %246

246:                                              ; preds = %243, %240, %193, %172
  %247 = phi i64 [ %245, %243 ], [ %225, %240 ], [ %195, %193 ], [ %182, %172 ]
  %248 = load i64, i64* %176, align 8
  %249 = sub i64 %247, %248
  %250 = lshr exact i64 %249, 2
  %251 = trunc i64 %250 to i32
  %252 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %253 = call i64* @_ZN2v88internal7Factory10NewJSArrayENS0_12ElementsKindEiiNS0_26ArrayStorageAllocationModeENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %252, i8 zeroext 2, i32 %251, i32 %251, i32 1, i8 zeroext 0) #6
  %254 = load i64, i64* %253, align 8
  %255 = and i64 %254, -4294967296
  %256 = add i64 %254, 7
  %257 = inttoptr i64 %256 to i32*
  %258 = load i32, i32* %257, align 4
  %259 = zext i32 %258 to i64
  %260 = or i64 %255, %259
  %261 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %262 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %261, align 8
  %263 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %262, null
  br i1 %263, label %266, label %264

264:                                              ; preds = %246
  %265 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %262, i64 %260) #6
  br label %278

266:                                              ; preds = %246
  %267 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %268 = load i64*, i64** %267, align 8
  %269 = load i64*, i64** %14, align 8
  %270 = icmp eq i64* %268, %269
  br i1 %270, label %271, label %273

271:                                              ; preds = %266
  %272 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %273

273:                                              ; preds = %271, %266
  %274 = phi i64* [ %272, %271 ], [ %268, %266 ]
  %275 = ptrtoint i64* %274 to i64
  %276 = add i64 %275, 8
  %277 = inttoptr i64 %276 to i64*
  store i64* %277, i64** %267, align 8
  store i64 %260, i64* %274, align 8
  br label %278

278:                                              ; preds = %273, %264
  %279 = phi i64* [ %265, %264 ], [ %274, %273 ]
  %280 = icmp eq i32 %251, 1
  br i1 %280, label %281, label %322

281:                                              ; preds = %278
  %282 = load i64, i64* %179, align 8
  %283 = load i64, i64* %176, align 8
  %284 = icmp eq i64 %282, %283
  br i1 %284, label %285, label %287

285:                                              ; preds = %281
  %286 = bitcast %"class.std::__1::vector.817"* %175 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %286) #18
  unreachable

287:                                              ; preds = %281
  %288 = inttoptr i64 %283 to i32*
  %289 = load i32, i32* %288, align 4
  %290 = icmp eq i32 %289, %126
  br i1 %290, label %291, label %324

291:                                              ; preds = %287
  %292 = load i64, i64* %279, align 8
  %293 = load i64, i64* %173, align 8
  %294 = add i64 %292, 7
  %295 = inttoptr i64 %294 to i32*
  %296 = trunc i64 %293 to i32
  store atomic volatile i32 %296, i32* %295 monotonic, align 4
  %297 = and i64 %293, 1
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %484, label %299

299:                                              ; preds = %291
  %300 = and i64 %292, -262144
  %301 = or i64 %300, 8
  %302 = inttoptr i64 %301 to i64*
  %303 = load i64, i64* %302, align 8
  %304 = and i64 %303, 262144
  %305 = icmp eq i64 %304, 0
  br i1 %305, label %310, label %306

306:                                              ; preds = %299
  %307 = or i64 %300, 16
  %308 = inttoptr i64 %307 to %"class.v8::internal::Heap"**
  %309 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %308, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %309, i64 %292, i64 %294, i64 %293) #6
  br label %310

310:                                              ; preds = %306, %299
  %311 = and i64 %293, -262144
  %312 = or i64 %311, 8
  %313 = inttoptr i64 %312 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = and i64 %314, 24
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %484, label %317

317:                                              ; preds = %310
  %318 = load i64, i64* %302, align 8
  %319 = and i64 %318, 24
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %321, label %484

321:                                              ; preds = %317
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %292, i64 %294, i64 %293) #6
  br label %484

322:                                              ; preds = %278
  %323 = icmp sgt i32 %251, 0
  br i1 %323, label %324, label %484

324:                                              ; preds = %322, %287
  %325 = icmp eq %"class.v8::internal::Isolate"* %2, null
  %326 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %11, i64 0, i32 0
  %327 = shl i64 %249, 30
  %328 = ashr exact i64 %327, 32
  br i1 %325, label %329, label %399

329:                                              ; preds = %324, %342
  %330 = phi i64 [ %333, %342 ], [ 0, %324 ]
  %331 = phi i32 [ %344, %342 ], [ 0, %324 ]
  %332 = phi i32 [ %343, %342 ], [ 0, %324 ]
  %333 = add nuw i64 %330, 1024
  %334 = load i32, i32* %16, align 8
  %335 = add nsw i32 %334, 1
  store i32 %335, i32* %16, align 8
  %336 = icmp slt i32 %332, %251
  %337 = sext i32 %332 to i64
  %338 = icmp sgt i64 %333, %337
  %339 = and i1 %336, %338
  br i1 %339, label %346, label %342

340:                                              ; preds = %393
  %341 = trunc i64 %395 to i32
  br label %342

342:                                              ; preds = %340, %329
  %343 = phi i32 [ %332, %329 ], [ %341, %340 ]
  %344 = phi i32 [ %331, %329 ], [ %394, %340 ]
  %345 = icmp slt i32 %343, %251
  br i1 %345, label %329, label %484

346:                                              ; preds = %329, %393
  %347 = phi i64 [ %395, %393 ], [ %337, %329 ]
  %348 = phi i32 [ %394, %393 ], [ %331, %329 ]
  %349 = load i64, i64* %179, align 8
  %350 = load i64, i64* %176, align 8
  %351 = sub i64 %349, %350
  %352 = ashr exact i64 %351, 2
  %353 = icmp ugt i64 %352, %347
  br i1 %353, label %354, label %422

354:                                              ; preds = %346
  %355 = inttoptr i64 %350 to i32*
  %356 = getelementptr inbounds i32, i32* %355, i64 %347
  %357 = load i32, i32* %356, align 4
  %358 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %252, i64* %173, i32 %348, i32 %357) #6
  %359 = load i64, i64* %279, align 8
  %360 = load i64, i64* %358, align 8
  %361 = trunc i64 %347 to i32
  %362 = shl i32 %361, 2
  %363 = sext i32 %362 to i64
  %364 = add nsw i64 %363, 7
  %365 = add i64 %364, %359
  %366 = inttoptr i64 %365 to i32*
  %367 = trunc i64 %360 to i32
  store atomic volatile i32 %367, i32* %366 monotonic, align 4
  %368 = and i64 %360, 1
  %369 = icmp eq i64 %368, 0
  br i1 %369, label %393, label %370

370:                                              ; preds = %354
  %371 = and i64 %359, -262144
  %372 = or i64 %371, 8
  %373 = inttoptr i64 %372 to i64*
  %374 = load i64, i64* %373, align 8
  %375 = and i64 %374, 262144
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %381, label %377

377:                                              ; preds = %370
  %378 = or i64 %371, 16
  %379 = inttoptr i64 %378 to %"class.v8::internal::Heap"**
  %380 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %379, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %380, i64 %359, i64 %365, i64 %360) #6
  br label %381

381:                                              ; preds = %377, %370
  %382 = and i64 %360, -262144
  %383 = or i64 %382, 8
  %384 = inttoptr i64 %383 to i64*
  %385 = load i64, i64* %384, align 8
  %386 = and i64 %385, 24
  %387 = icmp eq i64 %386, 0
  br i1 %387, label %393, label %388

388:                                              ; preds = %381
  %389 = load i64, i64* %373, align 8
  %390 = and i64 %389, 24
  %391 = icmp eq i64 %390, 0
  br i1 %391, label %392, label %393

392:                                              ; preds = %388
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %359, i64 %365, i64 %360) #6
  br label %393

393:                                              ; preds = %392, %388, %381, %354
  %394 = add nsw i32 %357, %129
  %395 = add nuw nsw i64 %347, 1
  %396 = icmp slt i64 %395, %328
  %397 = icmp slt i64 %395, %333
  %398 = and i1 %396, %397
  br i1 %398, label %346, label %340

399:                                              ; preds = %324, %478
  %400 = phi i64 [ %403, %478 ], [ 0, %324 ]
  %401 = phi i32 [ %479, %478 ], [ 0, %324 ]
  %402 = phi i32 [ %480, %478 ], [ 0, %324 ]
  %403 = add nuw i64 %400, 1024
  %404 = load i64, i64* %12, align 8
  %405 = load i64*, i64** %14, align 8
  %406 = load i32, i32* %16, align 8
  %407 = add nsw i32 %406, 1
  store i32 %407, i32* %16, align 8
  %408 = icmp slt i32 %402, %251
  %409 = sext i32 %402 to i64
  %410 = icmp sgt i64 %403, %409
  %411 = and i1 %408, %410
  %412 = inttoptr i64 %404 to i64*
  br i1 %411, label %414, label %413

413:                                              ; preds = %399
  store i32 %406, i32* %16, align 8
  br label %478

414:                                              ; preds = %399, %463
  %415 = phi i64 [ %465, %463 ], [ %409, %399 ]
  %416 = phi i32 [ %464, %463 ], [ %401, %399 ]
  %417 = load i64, i64* %179, align 8
  %418 = load i64, i64* %176, align 8
  %419 = sub i64 %417, %418
  %420 = ashr exact i64 %419, 2
  %421 = icmp ugt i64 %420, %415
  br i1 %421, label %424, label %422

422:                                              ; preds = %414, %346
  %423 = bitcast %"class.std::__1::vector.817"* %175 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %423) #18
  unreachable

424:                                              ; preds = %414
  %425 = inttoptr i64 %418 to i32*
  %426 = getelementptr inbounds i32, i32* %425, i64 %415
  %427 = load i32, i32* %426, align 4
  %428 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* nonnull %252, i64* %173, i32 %416, i32 %427) #6
  %429 = load i64, i64* %279, align 8
  %430 = load i64, i64* %428, align 8
  %431 = trunc i64 %415 to i32
  %432 = shl i32 %431, 2
  %433 = sext i32 %432 to i64
  %434 = add nsw i64 %433, 7
  %435 = add i64 %434, %429
  %436 = inttoptr i64 %435 to i32*
  %437 = trunc i64 %430 to i32
  store atomic volatile i32 %437, i32* %436 monotonic, align 4
  %438 = and i64 %430, 1
  %439 = icmp eq i64 %438, 0
  br i1 %439, label %463, label %440

440:                                              ; preds = %424
  %441 = and i64 %429, -262144
  %442 = or i64 %441, 8
  %443 = inttoptr i64 %442 to i64*
  %444 = load i64, i64* %443, align 8
  %445 = and i64 %444, 262144
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %451, label %447

447:                                              ; preds = %440
  %448 = or i64 %441, 16
  %449 = inttoptr i64 %448 to %"class.v8::internal::Heap"**
  %450 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %449, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %450, i64 %429, i64 %435, i64 %430) #6
  br label %451

451:                                              ; preds = %447, %440
  %452 = and i64 %430, -262144
  %453 = or i64 %452, 8
  %454 = inttoptr i64 %453 to i64*
  %455 = load i64, i64* %454, align 8
  %456 = and i64 %455, 24
  %457 = icmp eq i64 %456, 0
  br i1 %457, label %463, label %458

458:                                              ; preds = %451
  %459 = load i64, i64* %443, align 8
  %460 = and i64 %459, 24
  %461 = icmp eq i64 %460, 0
  br i1 %461, label %462, label %463

462:                                              ; preds = %458
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %429, i64 %435, i64 %430) #6
  br label %463

463:                                              ; preds = %462, %458, %451, %424
  %464 = add nsw i32 %427, %129
  %465 = add nuw nsw i64 %415, 1
  %466 = icmp slt i64 %465, %328
  %467 = icmp slt i64 %465, %403
  %468 = and i1 %466, %467
  br i1 %468, label %414, label %469

469:                                              ; preds = %463
  %470 = trunc i64 %465 to i32
  %471 = load i64*, i64** %326, align 8
  %472 = load i32, i32* %16, align 8
  %473 = load i64*, i64** %14, align 8
  store i64 %404, i64* %12, align 8
  %474 = add nsw i32 %472, -1
  store i32 %474, i32* %16, align 8
  %475 = icmp eq i64* %473, %405
  br i1 %475, label %478, label %476

476:                                              ; preds = %469
  store i64* %405, i64** %14, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %477 = load i64*, i64** %326, align 8
  br label %478

478:                                              ; preds = %476, %469, %413
  %479 = phi i32 [ %464, %476 ], [ %464, %469 ], [ %401, %413 ]
  %480 = phi i32 [ %470, %476 ], [ %470, %469 ], [ %402, %413 ]
  %481 = phi i64* [ %477, %476 ], [ %412, %469 ], [ %412, %413 ]
  %482 = phi i64* [ %405, %476 ], [ %471, %469 ], [ %412, %413 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %481, i64* %482) #6
  %483 = icmp slt i32 %480, %251
  br i1 %483, label %399, label %484

484:                                              ; preds = %478, %342, %322, %321, %317, %310, %291
  br i1 %133, label %485, label %500

485:                                              ; preds = %484
  %486 = load i64, i64* %253, align 8
  %487 = and i64 %486, -4294967296
  %488 = add i64 %486, -1
  %489 = inttoptr i64 %488 to i32*
  %490 = load atomic i32, i32* %489 monotonic, align 4
  %491 = zext i32 %490 to i64
  %492 = or i64 %487, %491
  %493 = add i64 %492, 10
  %494 = inttoptr i64 %493 to i8*
  %495 = load i8, i8* %494, align 1
  %496 = and i8 %495, -8
  %497 = icmp eq i8 %496, 8
  br i1 %497, label %498, label %500

498:                                              ; preds = %485
  %499 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 29
  call void @_ZN2v88internal18RegExpResultsCache5EnterEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS4_INS0_6ObjectEEENS4_INS0_10FixedArrayEEESA_NS1_16ResultsCacheTypeE(%"class.v8::internal::Isolate"* %2, i64* %173, i64* %174, i64* %279, i64* %499, i32 1) #6
  br label %500

500:                                              ; preds = %498, %485, %484
  %501 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 44, i32 0, i32 2, i32 0, i32 0
  %502 = bitcast i32** %501 to i64*
  %503 = load i64, i64* %502, align 8
  %504 = load i64, i64* %176, align 8
  %505 = sub i64 %503, %504
  %506 = ashr exact i64 %505, 2
  %507 = icmp ugt i64 %506, 2048
  br i1 %507, label %508, label %513

508:                                              ; preds = %500
  %509 = icmp eq i64 %504, 0
  %510 = bitcast %"class.std::__1::vector.817"* %175 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %510, i8 0, i64 24, i1 false) #6
  br i1 %509, label %513, label %511

511:                                              ; preds = %508
  %512 = inttoptr i64 %504 to i8*
  call void @_ZdlPv(i8* %512) #20
  br label %513

513:                                              ; preds = %511, %508, %500
  %514 = load i64, i64* %253, align 8
  br label %515

515:                                              ; preds = %513, %164
  %516 = phi i64 [ %514, %513 ], [ %171, %164 ]
  %517 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %517, label %531, label %518

518:                                              ; preds = %515
  %519 = inttoptr i64 %13 to i64*
  %520 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %11, i64 0, i32 0
  %521 = load i64*, i64** %520, align 8
  store i64 %13, i64* %12, align 8
  %522 = load i32, i32* %16, align 8
  %523 = add nsw i32 %522, -1
  store i32 %523, i32* %16, align 8
  %524 = load i64*, i64** %14, align 8
  %525 = icmp eq i64* %524, %15
  br i1 %525, label %528, label %526

526:                                              ; preds = %518
  store i64* %15, i64** %14, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %527 = load i64*, i64** %520, align 8
  br label %528

528:                                              ; preds = %526, %518
  %529 = phi i64* [ %527, %526 ], [ %519, %518 ]
  %530 = phi i64* [ %15, %526 ], [ %521, %518 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %529, i64* %530) #6
  br label %531

531:                                              ; preds = %528, %515, %7
  %532 = phi i64 [ %8, %7 ], [ %516, %515 ], [ %516, %528 ]
  ret i64 %532
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL25Stats_Runtime_StringSplitEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #5 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1163"], align 16
  %5 = alloca %"class.v8::internal::FixedArray", align 8
  %6 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %7 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %8 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 40, i1 false) #6
  %9 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1153", %"struct.std::__1::atomic.1153"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %17, label %11, !prof !3

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 0
  %13 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 1
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %15 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %15, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %16, %"class.v8::internal::RuntimeCallStats"** %12, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %16, %"class.v8::internal::RuntimeCallTimer"* %13, i32 551) #6
  br label %17

17:                                               ; preds = %3, %11
  %18 = load atomic i64, i64* @_ZZN2v88internalL25Stats_Runtime_StringSplitEiPmPNS0_7IsolateEE28trace_event_unique_atomic793 monotonic, align 8
  %19 = inttoptr i64 %18 to i8*
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %21, label %29

21:                                               ; preds = %17
  %22 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %23 = bitcast %"class.v8::TracingController"* %22 to i8* (%"class.v8::TracingController"*, i8*)***
  %24 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %23, align 8
  %25 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, i64 2
  %26 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %25, align 8
  %27 = call i8* %26(%"class.v8::TracingController"* %22, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0)) #6
  %28 = ptrtoint i8* %27 to i64
  store atomic volatile i64 %28, i64* @_ZZN2v88internalL25Stats_Runtime_StringSplitEiPmPNS0_7IsolateEE28trace_event_unique_atomic793 monotonic, align 8
  br label %29

29:                                               ; preds = %17, %21
  %30 = phi i8* [ %19, %17 ], [ %27, %21 ]
  %31 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #6
  %32 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %7, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %32, align 8
  %33 = load atomic i8, i8* %30 monotonic, align 1
  %34 = and i8 %33, 5
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %67, label %36

36:                                               ; preds = %29
  %37 = bitcast [2 x %"class.std::__1::unique_ptr.1163"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #6
  %38 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 0, i64 16, i1 false) #6
  %39 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %40 = bitcast %"class.v8::TracingController"* %39 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)***
  %41 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*** %40, align 8
  %42 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)** %41, i64 3
  %43 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)** %42, align 8
  %44 = call i64 %43(%"class.v8::TracingController"* %39, i8 signext 88, i8* %30, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1163"* nonnull %38, i32 0) #6
  %45 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %46 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %45, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %45, align 8
  %47 = icmp eq %"class.v8::ConvertableToTraceFormat"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %36
  %49 = bitcast %"class.v8::ConvertableToTraceFormat"* %46 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %50 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, i64 1
  %52 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %51, align 8
  call void %52(%"class.v8::ConvertableToTraceFormat"* nonnull %46) #6
  br label %53

53:                                               ; preds = %48, %36
  %54 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %54, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %54, align 16
  %56 = icmp eq %"class.v8::ConvertableToTraceFormat"* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %53
  %58 = bitcast %"class.v8::ConvertableToTraceFormat"* %55 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %59 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, i64 1
  %61 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %60, align 8
  call void %61(%"class.v8::ConvertableToTraceFormat"* nonnull %55) #6
  br label %62

62:                                               ; preds = %53, %57
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #6
  %63 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %7, i64 0, i32 1
  %64 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %63, i64 0, i32 0
  store i8* %30, i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %7, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i8** %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %7, i64 0, i32 1, i32 2
  store i64 %44, i64* %66, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %63, %"struct.v8::internal::tracing::ScopedTracer::Data"** %32, align 8
  br label %67

67:                                               ; preds = %29, %62
  %68 = ptrtoint i64* %1 to i64
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %70 = bitcast %"struct.v8::internal::HandleScopeData"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %73 = load i64*, i64** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %75 = load i32, i32* %74, align 8
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %74, align 8
  %77 = load i64, i64* %1, align 8
  %78 = and i64 %77, 1
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %91, label %80, !prof !4

80:                                               ; preds = %67
  %81 = and i64 %77, -4294967296
  %82 = add i64 %77, -1
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %81, %85
  %87 = add i64 %86, 7
  %88 = inttoptr i64 %87 to i16*
  %89 = load atomic i16, i16* %88 monotonic, align 2
  %90 = icmp ult i16 %89, 64
  br i1 %90, label %92, label %91, !prof !3

91:                                               ; preds = %80, %67
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0)) #18
  unreachable

92:                                               ; preds = %80
  %93 = add i64 %68, -8
  %94 = inttoptr i64 %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = and i64 %95, 1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %109, label %98, !prof !4

98:                                               ; preds = %92
  %99 = and i64 %95, -4294967296
  %100 = add i64 %95, -1
  %101 = inttoptr i64 %100 to i32*
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = zext i32 %102 to i64
  %104 = or i64 %99, %103
  %105 = add i64 %104, 7
  %106 = inttoptr i64 %105 to i16*
  %107 = load atomic i16, i16* %106 monotonic, align 2
  %108 = icmp ult i16 %107, 64
  br i1 %108, label %110, label %109, !prof !3

109:                                              ; preds = %98, %92
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

110:                                              ; preds = %98
  %111 = add i64 %68, -16
  %112 = inttoptr i64 %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = and i64 %113, 1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %128, label %116

116:                                              ; preds = %110
  %117 = and i64 %113, -4294967296
  %118 = add i64 %113, -1
  %119 = inttoptr i64 %118 to i32*
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = zext i32 %120 to i64
  %122 = or i64 %117, %121
  %123 = add i64 %122, 7
  %124 = inttoptr i64 %123 to i16*
  %125 = load atomic i16, i16* %124 monotonic, align 2
  %126 = icmp eq i16 %125, 66
  br i1 %126, label %131, label %127, !prof !3

127:                                              ; preds = %116
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0)) #18
  unreachable

128:                                              ; preds = %110
  %129 = trunc i64 %113 to i32
  %130 = ashr i32 %129, 1
  br label %177

131:                                              ; preds = %116
  %132 = add i64 %113, 3
  %133 = inttoptr i64 %132 to double*
  %134 = load double, double* %133, align 1
  %135 = call double @llvm.fabs.f64(double %134) #21
  %136 = fcmp one double %135, 0x7FF0000000000000
  %137 = fcmp ole double %134, 0x41DFFFFFFFC00000
  %138 = and i1 %137, %136
  %139 = fcmp oge double %134, 0xC1E0000000000000
  %140 = and i1 %139, %138
  br i1 %140, label %141, label %145

141:                                              ; preds = %131
  %142 = fptosi double %134 to i32
  %143 = sitofp i32 %142 to double
  %144 = fcmp une double %134, %143
  br i1 %144, label %145, label %177

145:                                              ; preds = %141, %131
  %146 = bitcast double %134 to i64
  %147 = and i64 %146, 9218868437227405312
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %180, label %149

149:                                              ; preds = %145
  %150 = lshr i64 %146, 52
  %151 = trunc i64 %150 to i32
  %152 = and i32 %151, 2047
  %153 = add nsw i32 %152, -1075
  %154 = icmp slt i32 %153, 0
  br i1 %154, label %155, label %163

155:                                              ; preds = %149
  %156 = icmp slt i32 %153, -52
  br i1 %156, label %180, label %157

157:                                              ; preds = %155
  %158 = and i64 %146, 4503599627370495
  %159 = or i64 %158, 4503599627370496
  %160 = sub nuw nsw i32 1075, %152
  %161 = zext i32 %160 to i64
  %162 = lshr i64 %159, %161
  br label %171

163:                                              ; preds = %149
  %164 = icmp sgt i32 %153, 31
  br i1 %164, label %180, label %165

165:                                              ; preds = %163
  %166 = and i64 %146, 4503599627370495
  %167 = or i64 %166, 4503599627370496
  %168 = zext i32 %153 to i64
  %169 = shl i64 %167, %168
  %170 = and i64 %169, 4294967295
  br label %171

171:                                              ; preds = %165, %157
  %172 = phi i64 [ %162, %157 ], [ %170, %165 ]
  %173 = icmp sgt i64 %146, -1
  %174 = select i1 %173, i32 1, i32 -1
  %175 = trunc i64 %172 to i32
  %176 = mul i32 %174, %175
  br label %177

177:                                              ; preds = %171, %141, %128
  %178 = phi i32 [ %130, %128 ], [ %142, %141 ], [ %176, %171 ]
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %181, !prof !2

180:                                              ; preds = %177, %163, %155, %145
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0)) #18
  unreachable

181:                                              ; preds = %177
  %182 = add i64 %77, 7
  %183 = inttoptr i64 %182 to i32*
  %184 = load i32, i32* %183, align 4
  %185 = add i64 %95, 7
  %186 = inttoptr i64 %185 to i32*
  %187 = load i32, i32* %186, align 4
  %188 = icmp sgt i32 %187, 0
  br i1 %188, label %190, label %189, !prof !3

189:                                              ; preds = %181
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0)) #18
  unreachable

190:                                              ; preds = %181
  %191 = icmp eq i32 %178, -1
  br i1 %191, label %192, label %230

192:                                              ; preds = %190
  %193 = bitcast %"class.v8::internal::FixedArray"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #6
  %194 = getelementptr inbounds %"class.v8::internal::FixedArray", %"class.v8::internal::FixedArray"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %194, align 8
  %195 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 2
  %196 = load i64, i64* %94, align 8
  %197 = call i64 @_ZN2v88internal18RegExpResultsCache6LookupEPNS0_4HeapENS0_6StringENS0_6ObjectEPNS0_10FixedArrayENS1_16ResultsCacheTypeE(%"class.v8::internal::Heap"* %195, i64 %77, i64 %196, %"class.v8::internal::FixedArray"* nonnull %5, i32 1) #6
  %198 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %199 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %198, align 8
  %200 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %199, null
  br i1 %200, label %204, label %201

201:                                              ; preds = %192
  %202 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %199, i64 %197) #6
  %203 = load i64, i64* %202, align 8
  br label %216

204:                                              ; preds = %192
  %205 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %206 = load i64*, i64** %205, align 8
  %207 = load i64*, i64** %72, align 8
  %208 = icmp eq i64* %206, %207
  br i1 %208, label %209, label %211

209:                                              ; preds = %204
  %210 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %211

211:                                              ; preds = %209, %204
  %212 = phi i64* [ %210, %209 ], [ %206, %204 ]
  %213 = ptrtoint i64* %212 to i64
  %214 = add i64 %213, 8
  %215 = inttoptr i64 %214 to i64*
  store i64* %215, i64** %205, align 8
  store i64 %197, i64* %212, align 8
  br label %216

216:                                              ; preds = %211, %201
  %217 = phi i64 [ %203, %201 ], [ %197, %211 ]
  %218 = phi i64* [ %202, %201 ], [ %212, %211 ]
  %219 = trunc i64 %217 to i32
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %216
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #6
  br label %230

222:                                              ; preds = %216
  %223 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %224 = add i64 %217, 3
  %225 = inttoptr i64 %224 to i32*
  %226 = load i32, i32* %225, align 4
  %227 = ashr i32 %226, 1
  %228 = call i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %223, i64* %218, i8 zeroext 3, i32 %227, i8 zeroext 0) #6
  %229 = load i64, i64* %228, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #6
  br label %573

230:                                              ; preds = %221, %190
  %231 = call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %1, i8 zeroext 0) #6
  %232 = call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %94, i8 zeroext 0) #6
  %233 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 44
  %234 = bitcast %"class.std::__1::vector.817"* %233 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 44, i32 0, i32 1
  %237 = bitcast i32** %236 to i64*
  store i64 %235, i64* %237, align 8
  %238 = load i64, i64* %231, align 8
  %239 = load i64, i64* %232, align 8
  call void @_ZN2v88internal25FindStringIndicesDispatchEPNS0_7IsolateENS0_6StringES3_PNSt3__16vectorIiNS4_9allocatorIiEEEEj(%"class.v8::internal::Isolate"* %2, i64 %238, i64 %239, %"class.std::__1::vector.817"* %233, i32 %178) #6
  %240 = load i64, i64* %237, align 8
  %241 = load i64, i64* %234, align 8
  %242 = sub i64 %240, %241
  %243 = lshr exact i64 %242, 2
  %244 = trunc i64 %243 to i32
  %245 = icmp ugt i32 %178, %244
  %246 = inttoptr i64 %240 to i32*
  br i1 %245, label %247, label %304

247:                                              ; preds = %230
  %248 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 44, i32 0, i32 2, i32 0, i32 0
  %249 = load i32*, i32** %248, align 8
  %250 = icmp eq i32* %249, %246
  br i1 %250, label %254, label %251

251:                                              ; preds = %247
  store i32 %184, i32* %246, align 4
  %252 = getelementptr inbounds i32, i32* %246, i64 1
  %253 = ptrtoint i32* %252 to i64
  store i64 %253, i64* %237, align 8
  br label %304

254:                                              ; preds = %247
  %255 = ashr exact i64 %242, 2
  %256 = add nsw i64 %255, 1
  %257 = icmp ugt i64 %256, 4611686018427387903
  br i1 %257, label %258, label %260

258:                                              ; preds = %254
  %259 = bitcast %"class.std::__1::vector.817"* %233 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %259) #18
  unreachable

260:                                              ; preds = %254
  %261 = bitcast i32** %248 to i64*
  %262 = icmp ult i64 %255, 2305843009213693951
  br i1 %262, label %263, label %271

263:                                              ; preds = %260
  %264 = ashr exact i64 %242, 1
  %265 = icmp ult i64 %264, %256
  %266 = select i1 %265, i64 %256, i64 %264
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %276, label %268

268:                                              ; preds = %263
  %269 = icmp ugt i64 %266, 4611686018427387903
  br i1 %269, label %270, label %271

270:                                              ; preds = %268
  call void @abort() #18
  unreachable

271:                                              ; preds = %268, %260
  %272 = phi i64 [ %266, %268 ], [ 4611686018427387903, %260 ]
  %273 = shl i64 %272, 2
  %274 = call i8* @_Znwm(i64 %273) #20
  %275 = bitcast i8* %274 to i32*
  br label %276

276:                                              ; preds = %271, %263
  %277 = phi i64 [ %272, %271 ], [ 0, %263 ]
  %278 = phi i32* [ %275, %271 ], [ null, %263 ]
  %279 = getelementptr inbounds i32, i32* %278, i64 %255
  %280 = getelementptr inbounds i32, i32* %278, i64 %277
  %281 = ptrtoint i32* %280 to i64
  store i32 %184, i32* %279, align 4
  %282 = getelementptr inbounds i32, i32* %279, i64 1
  %283 = ptrtoint i32* %282 to i64
  %284 = getelementptr inbounds %"class.std::__1::vector.817", %"class.std::__1::vector.817"* %233, i64 0, i32 0, i32 0
  %285 = load i32*, i32** %284, align 8
  %286 = load i64, i64* %237, align 8
  %287 = ptrtoint i32* %285 to i64
  %288 = sub i64 %286, %287
  %289 = ashr exact i64 %288, 2
  %290 = sub nsw i64 0, %289
  %291 = getelementptr inbounds i32, i32* %279, i64 %290
  %292 = ptrtoint i32* %291 to i64
  %293 = icmp sgt i64 %288, 0
  br i1 %293, label %294, label %298

294:                                              ; preds = %276
  %295 = bitcast i32* %291 to i8*
  %296 = bitcast i32* %285 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %295, i8* align 4 %296, i64 %288, i1 false) #6
  %297 = load i32*, i32** %284, align 8
  br label %298

298:                                              ; preds = %294, %276
  %299 = phi i32* [ %285, %276 ], [ %297, %294 ]
  store i64 %292, i64* %234, align 8
  store i64 %283, i64* %237, align 8
  store i64 %281, i64* %261, align 8
  %300 = icmp eq i32* %299, null
  br i1 %300, label %304, label %301

301:                                              ; preds = %298
  %302 = bitcast i32* %299 to i8*
  call void @_ZdlPv(i8* %302) #20
  %303 = load i64, i64* %237, align 8
  br label %304

304:                                              ; preds = %301, %298, %251, %230
  %305 = phi i64 [ %303, %301 ], [ %283, %298 ], [ %253, %251 ], [ %240, %230 ]
  %306 = load i64, i64* %234, align 8
  %307 = sub i64 %305, %306
  %308 = lshr exact i64 %307, 2
  %309 = trunc i64 %308 to i32
  %310 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %311 = call i64* @_ZN2v88internal7Factory10NewJSArrayENS0_12ElementsKindEiiNS0_26ArrayStorageAllocationModeENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %310, i8 zeroext 2, i32 %309, i32 %309, i32 1, i8 zeroext 0) #6
  %312 = load i64, i64* %311, align 8
  %313 = and i64 %312, -4294967296
  %314 = add i64 %312, 7
  %315 = inttoptr i64 %314 to i32*
  %316 = load i32, i32* %315, align 4
  %317 = zext i32 %316 to i64
  %318 = or i64 %313, %317
  %319 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %320 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %319, align 8
  %321 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %320, null
  br i1 %321, label %324, label %322

322:                                              ; preds = %304
  %323 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %320, i64 %318) #6
  br label %336

324:                                              ; preds = %304
  %325 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %326 = load i64*, i64** %325, align 8
  %327 = load i64*, i64** %72, align 8
  %328 = icmp eq i64* %326, %327
  br i1 %328, label %329, label %331

329:                                              ; preds = %324
  %330 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %331

331:                                              ; preds = %329, %324
  %332 = phi i64* [ %330, %329 ], [ %326, %324 ]
  %333 = ptrtoint i64* %332 to i64
  %334 = add i64 %333, 8
  %335 = inttoptr i64 %334 to i64*
  store i64* %335, i64** %325, align 8
  store i64 %318, i64* %332, align 8
  br label %336

336:                                              ; preds = %331, %322
  %337 = phi i64* [ %323, %322 ], [ %332, %331 ]
  %338 = icmp eq i32 %309, 1
  br i1 %338, label %339, label %380

339:                                              ; preds = %336
  %340 = load i64, i64* %237, align 8
  %341 = load i64, i64* %234, align 8
  %342 = icmp eq i64 %340, %341
  br i1 %342, label %343, label %345

343:                                              ; preds = %339
  %344 = bitcast %"class.std::__1::vector.817"* %233 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %344) #18
  unreachable

345:                                              ; preds = %339
  %346 = inttoptr i64 %341 to i32*
  %347 = load i32, i32* %346, align 4
  %348 = icmp eq i32 %347, %184
  br i1 %348, label %349, label %382

349:                                              ; preds = %345
  %350 = load i64, i64* %337, align 8
  %351 = load i64, i64* %231, align 8
  %352 = add i64 %350, 7
  %353 = inttoptr i64 %352 to i32*
  %354 = trunc i64 %351 to i32
  store atomic volatile i32 %354, i32* %353 monotonic, align 4
  %355 = and i64 %351, 1
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %542, label %357

357:                                              ; preds = %349
  %358 = and i64 %350, -262144
  %359 = or i64 %358, 8
  %360 = inttoptr i64 %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = and i64 %361, 262144
  %363 = icmp eq i64 %362, 0
  br i1 %363, label %368, label %364

364:                                              ; preds = %357
  %365 = or i64 %358, 16
  %366 = inttoptr i64 %365 to %"class.v8::internal::Heap"**
  %367 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %366, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %367, i64 %350, i64 %352, i64 %351) #6
  br label %368

368:                                              ; preds = %364, %357
  %369 = and i64 %351, -262144
  %370 = or i64 %369, 8
  %371 = inttoptr i64 %370 to i64*
  %372 = load i64, i64* %371, align 8
  %373 = and i64 %372, 24
  %374 = icmp eq i64 %373, 0
  br i1 %374, label %542, label %375

375:                                              ; preds = %368
  %376 = load i64, i64* %360, align 8
  %377 = and i64 %376, 24
  %378 = icmp eq i64 %377, 0
  br i1 %378, label %379, label %542

379:                                              ; preds = %375
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %350, i64 %352, i64 %351) #6
  br label %542

380:                                              ; preds = %336
  %381 = icmp sgt i32 %309, 0
  br i1 %381, label %382, label %542

382:                                              ; preds = %380, %345
  %383 = icmp eq %"class.v8::internal::Isolate"* %2, null
  %384 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %69, i64 0, i32 0
  %385 = shl i64 %307, 30
  %386 = ashr exact i64 %385, 32
  br i1 %383, label %387, label %457

387:                                              ; preds = %382, %400
  %388 = phi i64 [ %391, %400 ], [ 0, %382 ]
  %389 = phi i32 [ %402, %400 ], [ 0, %382 ]
  %390 = phi i32 [ %401, %400 ], [ 0, %382 ]
  %391 = add nuw i64 %388, 1024
  %392 = load i32, i32* %74, align 8
  %393 = add nsw i32 %392, 1
  store i32 %393, i32* %74, align 8
  %394 = icmp slt i32 %390, %309
  %395 = sext i32 %390 to i64
  %396 = icmp sgt i64 %391, %395
  %397 = and i1 %394, %396
  br i1 %397, label %404, label %400

398:                                              ; preds = %451
  %399 = trunc i64 %453 to i32
  br label %400

400:                                              ; preds = %398, %387
  %401 = phi i32 [ %390, %387 ], [ %399, %398 ]
  %402 = phi i32 [ %389, %387 ], [ %452, %398 ]
  %403 = icmp slt i32 %401, %309
  br i1 %403, label %387, label %542

404:                                              ; preds = %387, %451
  %405 = phi i64 [ %453, %451 ], [ %395, %387 ]
  %406 = phi i32 [ %452, %451 ], [ %389, %387 ]
  %407 = load i64, i64* %237, align 8
  %408 = load i64, i64* %234, align 8
  %409 = sub i64 %407, %408
  %410 = ashr exact i64 %409, 2
  %411 = icmp ugt i64 %410, %405
  br i1 %411, label %412, label %480

412:                                              ; preds = %404
  %413 = inttoptr i64 %408 to i32*
  %414 = getelementptr inbounds i32, i32* %413, i64 %405
  %415 = load i32, i32* %414, align 4
  %416 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %310, i64* %231, i32 %406, i32 %415) #6
  %417 = load i64, i64* %337, align 8
  %418 = load i64, i64* %416, align 8
  %419 = trunc i64 %405 to i32
  %420 = shl i32 %419, 2
  %421 = sext i32 %420 to i64
  %422 = add nsw i64 %421, 7
  %423 = add i64 %422, %417
  %424 = inttoptr i64 %423 to i32*
  %425 = trunc i64 %418 to i32
  store atomic volatile i32 %425, i32* %424 monotonic, align 4
  %426 = and i64 %418, 1
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %451, label %428

428:                                              ; preds = %412
  %429 = and i64 %417, -262144
  %430 = or i64 %429, 8
  %431 = inttoptr i64 %430 to i64*
  %432 = load i64, i64* %431, align 8
  %433 = and i64 %432, 262144
  %434 = icmp eq i64 %433, 0
  br i1 %434, label %439, label %435

435:                                              ; preds = %428
  %436 = or i64 %429, 16
  %437 = inttoptr i64 %436 to %"class.v8::internal::Heap"**
  %438 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %437, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %438, i64 %417, i64 %423, i64 %418) #6
  br label %439

439:                                              ; preds = %435, %428
  %440 = and i64 %418, -262144
  %441 = or i64 %440, 8
  %442 = inttoptr i64 %441 to i64*
  %443 = load i64, i64* %442, align 8
  %444 = and i64 %443, 24
  %445 = icmp eq i64 %444, 0
  br i1 %445, label %451, label %446

446:                                              ; preds = %439
  %447 = load i64, i64* %431, align 8
  %448 = and i64 %447, 24
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %450, label %451

450:                                              ; preds = %446
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %417, i64 %423, i64 %418) #6
  br label %451

451:                                              ; preds = %450, %446, %439, %412
  %452 = add nsw i32 %415, %187
  %453 = add nuw nsw i64 %405, 1
  %454 = icmp slt i64 %453, %386
  %455 = icmp slt i64 %453, %391
  %456 = and i1 %454, %455
  br i1 %456, label %404, label %398

457:                                              ; preds = %382, %536
  %458 = phi i64 [ %461, %536 ], [ 0, %382 ]
  %459 = phi i32 [ %537, %536 ], [ 0, %382 ]
  %460 = phi i32 [ %538, %536 ], [ 0, %382 ]
  %461 = add nuw i64 %458, 1024
  %462 = load i64, i64* %70, align 8
  %463 = load i64*, i64** %72, align 8
  %464 = load i32, i32* %74, align 8
  %465 = add nsw i32 %464, 1
  store i32 %465, i32* %74, align 8
  %466 = icmp slt i32 %460, %309
  %467 = sext i32 %460 to i64
  %468 = icmp sgt i64 %461, %467
  %469 = and i1 %466, %468
  %470 = inttoptr i64 %462 to i64*
  br i1 %469, label %472, label %471

471:                                              ; preds = %457
  store i32 %464, i32* %74, align 8
  br label %536

472:                                              ; preds = %457, %521
  %473 = phi i64 [ %523, %521 ], [ %467, %457 ]
  %474 = phi i32 [ %522, %521 ], [ %459, %457 ]
  %475 = load i64, i64* %237, align 8
  %476 = load i64, i64* %234, align 8
  %477 = sub i64 %475, %476
  %478 = ashr exact i64 %477, 2
  %479 = icmp ugt i64 %478, %473
  br i1 %479, label %482, label %480

480:                                              ; preds = %472, %404
  %481 = bitcast %"class.std::__1::vector.817"* %233 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %481) #18
  unreachable

482:                                              ; preds = %472
  %483 = inttoptr i64 %476 to i32*
  %484 = getelementptr inbounds i32, i32* %483, i64 %473
  %485 = load i32, i32* %484, align 4
  %486 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* nonnull %310, i64* %231, i32 %474, i32 %485) #6
  %487 = load i64, i64* %337, align 8
  %488 = load i64, i64* %486, align 8
  %489 = trunc i64 %473 to i32
  %490 = shl i32 %489, 2
  %491 = sext i32 %490 to i64
  %492 = add nsw i64 %491, 7
  %493 = add i64 %492, %487
  %494 = inttoptr i64 %493 to i32*
  %495 = trunc i64 %488 to i32
  store atomic volatile i32 %495, i32* %494 monotonic, align 4
  %496 = and i64 %488, 1
  %497 = icmp eq i64 %496, 0
  br i1 %497, label %521, label %498

498:                                              ; preds = %482
  %499 = and i64 %487, -262144
  %500 = or i64 %499, 8
  %501 = inttoptr i64 %500 to i64*
  %502 = load i64, i64* %501, align 8
  %503 = and i64 %502, 262144
  %504 = icmp eq i64 %503, 0
  br i1 %504, label %509, label %505

505:                                              ; preds = %498
  %506 = or i64 %499, 16
  %507 = inttoptr i64 %506 to %"class.v8::internal::Heap"**
  %508 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %507, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %508, i64 %487, i64 %493, i64 %488) #6
  br label %509

509:                                              ; preds = %505, %498
  %510 = and i64 %488, -262144
  %511 = or i64 %510, 8
  %512 = inttoptr i64 %511 to i64*
  %513 = load i64, i64* %512, align 8
  %514 = and i64 %513, 24
  %515 = icmp eq i64 %514, 0
  br i1 %515, label %521, label %516

516:                                              ; preds = %509
  %517 = load i64, i64* %501, align 8
  %518 = and i64 %517, 24
  %519 = icmp eq i64 %518, 0
  br i1 %519, label %520, label %521

520:                                              ; preds = %516
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %487, i64 %493, i64 %488) #6
  br label %521

521:                                              ; preds = %520, %516, %509, %482
  %522 = add nsw i32 %485, %187
  %523 = add nuw nsw i64 %473, 1
  %524 = icmp slt i64 %523, %386
  %525 = icmp slt i64 %523, %461
  %526 = and i1 %524, %525
  br i1 %526, label %472, label %527

527:                                              ; preds = %521
  %528 = trunc i64 %523 to i32
  %529 = load i64*, i64** %384, align 8
  %530 = load i32, i32* %74, align 8
  %531 = load i64*, i64** %72, align 8
  store i64 %462, i64* %70, align 8
  %532 = add nsw i32 %530, -1
  store i32 %532, i32* %74, align 8
  %533 = icmp eq i64* %531, %463
  br i1 %533, label %536, label %534

534:                                              ; preds = %527
  store i64* %463, i64** %72, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %535 = load i64*, i64** %384, align 8
  br label %536

536:                                              ; preds = %534, %527, %471
  %537 = phi i32 [ %522, %534 ], [ %522, %527 ], [ %459, %471 ]
  %538 = phi i32 [ %528, %534 ], [ %528, %527 ], [ %460, %471 ]
  %539 = phi i64* [ %535, %534 ], [ %470, %527 ], [ %470, %471 ]
  %540 = phi i64* [ %463, %534 ], [ %529, %527 ], [ %470, %471 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %539, i64* %540) #6
  %541 = icmp slt i32 %538, %309
  br i1 %541, label %457, label %542

542:                                              ; preds = %536, %400, %380, %379, %375, %368, %349
  br i1 %191, label %543, label %558

543:                                              ; preds = %542
  %544 = load i64, i64* %311, align 8
  %545 = and i64 %544, -4294967296
  %546 = add i64 %544, -1
  %547 = inttoptr i64 %546 to i32*
  %548 = load atomic i32, i32* %547 monotonic, align 4
  %549 = zext i32 %548 to i64
  %550 = or i64 %545, %549
  %551 = add i64 %550, 10
  %552 = inttoptr i64 %551 to i8*
  %553 = load i8, i8* %552, align 1
  %554 = and i8 %553, -8
  %555 = icmp eq i8 %554, 8
  br i1 %555, label %556, label %558

556:                                              ; preds = %543
  %557 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 29
  call void @_ZN2v88internal18RegExpResultsCache5EnterEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS4_INS0_6ObjectEEENS4_INS0_10FixedArrayEEESA_NS1_16ResultsCacheTypeE(%"class.v8::internal::Isolate"* %2, i64* %231, i64* %232, i64* %337, i64* %557, i32 1) #6
  br label %558

558:                                              ; preds = %556, %543, %542
  %559 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 44, i32 0, i32 2, i32 0, i32 0
  %560 = bitcast i32** %559 to i64*
  %561 = load i64, i64* %560, align 8
  %562 = load i64, i64* %234, align 8
  %563 = sub i64 %561, %562
  %564 = ashr exact i64 %563, 2
  %565 = icmp ugt i64 %564, 2048
  br i1 %565, label %566, label %571

566:                                              ; preds = %558
  %567 = icmp eq i64 %562, 0
  %568 = bitcast %"class.std::__1::vector.817"* %233 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %568, i8 0, i64 24, i1 false) #6
  br i1 %567, label %571, label %569

569:                                              ; preds = %566
  %570 = inttoptr i64 %562 to i8*
  call void @_ZdlPv(i8* %570) #20
  br label %571

571:                                              ; preds = %569, %566, %558
  %572 = load i64, i64* %311, align 8
  br label %573

573:                                              ; preds = %571, %222
  %574 = phi i64 [ %572, %571 ], [ %229, %222 ]
  %575 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %575, label %589, label %576

576:                                              ; preds = %573
  %577 = inttoptr i64 %71 to i64*
  %578 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %69, i64 0, i32 0
  %579 = load i64*, i64** %578, align 8
  store i64 %71, i64* %70, align 8
  %580 = load i32, i32* %74, align 8
  %581 = add nsw i32 %580, -1
  store i32 %581, i32* %74, align 8
  %582 = load i64*, i64** %72, align 8
  %583 = icmp eq i64* %582, %73
  br i1 %583, label %586, label %584

584:                                              ; preds = %576
  store i64* %73, i64** %72, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %585 = load i64*, i64** %578, align 8
  br label %586

586:                                              ; preds = %584, %576
  %587 = phi i64* [ %585, %584 ], [ %577, %576 ]
  %588 = phi i64* [ %73, %584 ], [ %579, %576 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %587, i64* %588) #6
  br label %589

589:                                              ; preds = %573, %586
  %590 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %32, align 8
  %591 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %590, null
  br i1 %591, label %608, label %592

592:                                              ; preds = %589
  %593 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %7, i64 0, i32 1, i32 0
  %594 = load i8*, i8** %593, align 8
  %595 = load atomic i8, i8* %594 monotonic, align 1
  %596 = icmp eq i8 %595, 0
  br i1 %596, label %608, label %597

597:                                              ; preds = %592
  %598 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %599 = load i8*, i8** %593, align 8
  %600 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %7, i64 0, i32 1, i32 1
  %601 = load i8*, i8** %600, align 8
  %602 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %7, i64 0, i32 1, i32 2
  %603 = load i64, i64* %602, align 8
  %604 = bitcast %"class.v8::TracingController"* %598 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %605 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %604, align 8
  %606 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %605, i64 5
  %607 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %606, align 8
  call void %607(%"class.v8::TracingController"* %598, i8* %599, i8* %601, i64 %603) #6
  br label %608

608:                                              ; preds = %589, %592, %597
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #6
  %609 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 0
  %610 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %609, align 8
  %611 = icmp eq %"class.v8::internal::RuntimeCallStats"* %610, null
  br i1 %611, label %614, label %612, !prof !3

612:                                              ; preds = %608
  %613 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %610, %"class.v8::internal::RuntimeCallTimer"* %613) #6
  br label %614

614:                                              ; preds = %608, %612
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #6
  ret i64 %574
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal18Runtime_RegExpExecEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.v8::internal::Object", align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1153", %"struct.std::__1::atomic.1153"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !3

8:                                                ; preds = %3
  %9 = tail call fastcc i64 @_ZN2v88internalL24Stats_Runtime_RegExpExecEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %145

10:                                               ; preds = %3
  %11 = ptrtoint i64* %1 to i64
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %13 = bitcast %"struct.v8::internal::HandleScopeData"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %16 = load i64*, i64** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %17, align 8
  %20 = load i64, i64* %1, align 8
  %21 = and i64 %20, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %34, label %23, !prof !4

23:                                               ; preds = %10
  %24 = and i64 %20, -4294967296
  %25 = add i64 %20, -1
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %24, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = icmp eq i16 %32, 1102
  br i1 %33, label %35, label %34, !prof !3

34:                                               ; preds = %23, %10
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0)) #18
  unreachable

35:                                               ; preds = %23
  %36 = add i64 %11, -8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %52, label %41, !prof !4

41:                                               ; preds = %35
  %42 = and i64 %38, -4294967296
  %43 = add i64 %38, -1
  %44 = inttoptr i64 %43 to i32*
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %42, %46
  %48 = add i64 %47, 7
  %49 = inttoptr i64 %48 to i16*
  %50 = load atomic i16, i16* %49 monotonic, align 2
  %51 = icmp ult i16 %50, 64
  br i1 %51, label %53, label %52, !prof !3

52:                                               ; preds = %41, %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

53:                                               ; preds = %41
  %54 = add i64 %11, -16
  %55 = inttoptr i64 %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = and i64 %56, 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %53
  %60 = and i64 %56, -4294967296
  %61 = add i64 %56, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %60, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = icmp eq i16 %68, 66
  br i1 %69, label %71, label %70, !prof !3

70:                                               ; preds = %59
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0)) #18
  unreachable

71:                                               ; preds = %59, %53
  %72 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %72) #6
  store i32 0, i32* %4, align 4
  %73 = bitcast %"class.v8::internal::Object"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #6
  %74 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %5, i64 0, i32 0, i32 0
  store i64 %56, i64* %74, align 8
  %75 = call zeroext i1 @_ZN2v88internal6Object7ToInt32EPi(%"class.v8::internal::Object"* nonnull %5, i32* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #6
  br i1 %75, label %77, label %76, !prof !3

76:                                               ; preds = %71
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0)) #18
  unreachable

77:                                               ; preds = %71
  %78 = add i64 %11, -24
  %79 = inttoptr i64 %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = and i64 %80, 1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %94, label %83, !prof !4

83:                                               ; preds = %77
  %84 = and i64 %80, -4294967296
  %85 = add i64 %80, -1
  %86 = inttoptr i64 %85 to i32*
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = zext i32 %87 to i64
  %89 = or i64 %84, %88
  %90 = add i64 %89, 7
  %91 = inttoptr i64 %90 to i16*
  %92 = load atomic i16, i16* %91 monotonic, align 2
  %93 = icmp eq i16 %92, 119
  br i1 %93, label %95, label %94, !prof !3

94:                                               ; preds = %83, %77
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0)) #18
  unreachable

95:                                               ; preds = %83
  %96 = load i32, i32* %4, align 4
  %97 = icmp sgt i32 %96, -1
  br i1 %97, label %99, label %98, !prof !3

98:                                               ; preds = %95
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0)) #18
  unreachable

99:                                               ; preds = %95
  %100 = load i64, i64* %37, align 8
  %101 = add i64 %100, 7
  %102 = inttoptr i64 %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = icmp slt i32 %103, %96
  br i1 %104, label %105, label %106, !prof !2

105:                                              ; preds = %99
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0)) #18
  unreachable

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %108 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %107, align 8
  %109 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %108, i64 0, i32 168, i32 1
  %110 = load i8, i8* %109, align 8, !range !5
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %115, label %112

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %108, i64 0, i32 168, i32 0, i32 2
  %114 = load i32*, i32** %113, align 8
  br label %119

115:                                              ; preds = %106
  store i8 1, i8* %109, align 8
  %116 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %108, i64 0, i32 168, i32 0
  %117 = call i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"* %116) #6
  %118 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %108, i64 0, i32 168, i32 0, i32 2
  store i32* %117, i32** %118, align 8
  br label %119

119:                                              ; preds = %115, %112
  %120 = phi i32* [ %114, %112 ], [ %117, %115 ]
  %121 = icmp eq i32* %120, null
  br i1 %121, label %125, label %122

122:                                              ; preds = %119
  %123 = load i32, i32* %120, align 4
  %124 = add nsw i32 %123, 1
  store i32 %124, i32* %120, align 4
  br label %125

125:                                              ; preds = %122, %119
  %126 = call i64* @_ZN2v88internal6RegExp4ExecEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiNS4_INS0_15RegExpMatchInfoEEENS1_10ExecQuirksE(%"class.v8::internal::Isolate"* %2, i64* %1, i64* %37, i32 %96, i64* %79, i32 0) #6
  %127 = icmp eq i64* %126, null
  %128 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %129 = select i1 %127, i64* %128, i64* %126
  %130 = load i64, i64* %129, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72) #6
  %131 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %131, label %145, label %132

132:                                              ; preds = %125
  %133 = inttoptr i64 %14 to i64*
  %134 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %12, i64 0, i32 0
  %135 = load i64*, i64** %134, align 8
  store i64 %14, i64* %13, align 8
  %136 = load i32, i32* %17, align 8
  %137 = add nsw i32 %136, -1
  store i32 %137, i32* %17, align 8
  %138 = load i64*, i64** %15, align 8
  %139 = icmp eq i64* %138, %16
  br i1 %139, label %142, label %140

140:                                              ; preds = %132
  store i64* %16, i64** %15, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %141 = load i64*, i64** %134, align 8
  br label %142

142:                                              ; preds = %140, %132
  %143 = phi i64* [ %141, %140 ], [ %133, %132 ]
  %144 = phi i64* [ %16, %140 ], [ %135, %132 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %143, i64* %144) #6
  br label %145

145:                                              ; preds = %142, %125, %8
  %146 = phi i64 [ %9, %8 ], [ %130, %125 ], [ %130, %142 ]
  ret i64 %146
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL24Stats_Runtime_RegExpExecEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #5 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1163"], align 16
  %5 = alloca i32, align 4
  %6 = alloca %"class.v8::internal::Object", align 8
  %7 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %8 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %9 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 40, i1 false) #6
  %10 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1153", %"struct.std::__1::atomic.1153"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %18, label %12, !prof !3

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 1
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %16 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %16, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %17, %"class.v8::internal::RuntimeCallStats"** %13, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %17, %"class.v8::internal::RuntimeCallTimer"* %14, i32 541) #6
  br label %18

18:                                               ; preds = %3, %12
  %19 = load atomic i64, i64* @_ZZN2v88internalL24Stats_Runtime_RegExpExecEiPmPNS0_7IsolateEE28trace_event_unique_atomic904 monotonic, align 8
  %20 = inttoptr i64 %19 to i8*
  %21 = icmp eq i64 %19, 0
  br i1 %21, label %22, label %30

22:                                               ; preds = %18
  %23 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %24 = bitcast %"class.v8::TracingController"* %23 to i8* (%"class.v8::TracingController"*, i8*)***
  %25 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %24, align 8
  %26 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %25, i64 2
  %27 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %26, align 8
  %28 = call i8* %27(%"class.v8::TracingController"* %23, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0)) #6
  %29 = ptrtoint i8* %28 to i64
  store atomic volatile i64 %29, i64* @_ZZN2v88internalL24Stats_Runtime_RegExpExecEiPmPNS0_7IsolateEE28trace_event_unique_atomic904 monotonic, align 8
  br label %30

30:                                               ; preds = %18, %22
  %31 = phi i8* [ %20, %18 ], [ %28, %22 ]
  %32 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #6
  %33 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %33, align 8
  %34 = load atomic i8, i8* %31 monotonic, align 1
  %35 = and i8 %34, 5
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %68, label %37

37:                                               ; preds = %30
  %38 = bitcast [2 x %"class.std::__1::unique_ptr.1163"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #6
  %39 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %38, i8 0, i64 16, i1 false) #6
  %40 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %41 = bitcast %"class.v8::TracingController"* %40 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)***
  %42 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*** %41, align 8
  %43 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)** %42, i64 3
  %44 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)** %43, align 8
  %45 = call i64 %44(%"class.v8::TracingController"* %40, i8 signext 88, i8* %31, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1163"* nonnull %39, i32 0) #6
  %46 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %47 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %46, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %46, align 8
  %48 = icmp eq %"class.v8::ConvertableToTraceFormat"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %37
  %50 = bitcast %"class.v8::ConvertableToTraceFormat"* %47 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %51 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %51, i64 1
  %53 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %52, align 8
  call void %53(%"class.v8::ConvertableToTraceFormat"* nonnull %47) #6
  br label %54

54:                                               ; preds = %49, %37
  %55 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %55, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %55, align 16
  %57 = icmp eq %"class.v8::ConvertableToTraceFormat"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %54
  %59 = bitcast %"class.v8::ConvertableToTraceFormat"* %56 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %60, i64 1
  %62 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %61, align 8
  call void %62(%"class.v8::ConvertableToTraceFormat"* nonnull %56) #6
  br label %63

63:                                               ; preds = %54, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #6
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1
  %65 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %64, i64 0, i32 0
  store i8* %31, i8** %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i64 0, i64 0), i8** %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 2
  store i64 %45, i64* %67, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %64, %"struct.v8::internal::tracing::ScopedTracer::Data"** %33, align 8
  br label %68

68:                                               ; preds = %30, %63
  %69 = ptrtoint i64* %1 to i64
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %71 = bitcast %"struct.v8::internal::HandleScopeData"* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %74 = load i64*, i64** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %76 = load i32, i32* %75, align 8
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %75, align 8
  %78 = load i64, i64* %1, align 8
  %79 = and i64 %78, 1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %92, label %81, !prof !4

81:                                               ; preds = %68
  %82 = and i64 %78, -4294967296
  %83 = add i64 %78, -1
  %84 = inttoptr i64 %83 to i32*
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = zext i32 %85 to i64
  %87 = or i64 %82, %86
  %88 = add i64 %87, 7
  %89 = inttoptr i64 %88 to i16*
  %90 = load atomic i16, i16* %89 monotonic, align 2
  %91 = icmp eq i16 %90, 1102
  br i1 %91, label %93, label %92, !prof !3

92:                                               ; preds = %81, %68
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0)) #18
  unreachable

93:                                               ; preds = %81
  %94 = add i64 %69, -8
  %95 = inttoptr i64 %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = and i64 %96, 1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %110, label %99, !prof !4

99:                                               ; preds = %93
  %100 = and i64 %96, -4294967296
  %101 = add i64 %96, -1
  %102 = inttoptr i64 %101 to i32*
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = zext i32 %103 to i64
  %105 = or i64 %100, %104
  %106 = add i64 %105, 7
  %107 = inttoptr i64 %106 to i16*
  %108 = load atomic i16, i16* %107 monotonic, align 2
  %109 = icmp ult i16 %108, 64
  br i1 %109, label %111, label %110, !prof !3

110:                                              ; preds = %99, %93
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

111:                                              ; preds = %99
  %112 = add i64 %69, -16
  %113 = inttoptr i64 %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = and i64 %114, 1
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %129, label %117

117:                                              ; preds = %111
  %118 = and i64 %114, -4294967296
  %119 = add i64 %114, -1
  %120 = inttoptr i64 %119 to i32*
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = zext i32 %121 to i64
  %123 = or i64 %118, %122
  %124 = add i64 %123, 7
  %125 = inttoptr i64 %124 to i16*
  %126 = load atomic i16, i16* %125 monotonic, align 2
  %127 = icmp eq i16 %126, 66
  br i1 %127, label %129, label %128, !prof !3

128:                                              ; preds = %117
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0)) #18
  unreachable

129:                                              ; preds = %117, %111
  %130 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %130) #6
  store i32 0, i32* %5, align 4
  %131 = bitcast %"class.v8::internal::Object"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #6
  %132 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %6, i64 0, i32 0, i32 0
  store i64 %114, i64* %132, align 8
  %133 = call zeroext i1 @_ZN2v88internal6Object7ToInt32EPi(%"class.v8::internal::Object"* nonnull %6, i32* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #6
  br i1 %133, label %135, label %134, !prof !3

134:                                              ; preds = %129
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0)) #18
  unreachable

135:                                              ; preds = %129
  %136 = add i64 %69, -24
  %137 = inttoptr i64 %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = and i64 %138, 1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %152, label %141, !prof !4

141:                                              ; preds = %135
  %142 = and i64 %138, -4294967296
  %143 = add i64 %138, -1
  %144 = inttoptr i64 %143 to i32*
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = zext i32 %145 to i64
  %147 = or i64 %142, %146
  %148 = add i64 %147, 7
  %149 = inttoptr i64 %148 to i16*
  %150 = load atomic i16, i16* %149 monotonic, align 2
  %151 = icmp eq i16 %150, 119
  br i1 %151, label %153, label %152, !prof !3

152:                                              ; preds = %141, %135
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0)) #18
  unreachable

153:                                              ; preds = %141
  %154 = load i32, i32* %5, align 4
  %155 = icmp sgt i32 %154, -1
  br i1 %155, label %157, label %156, !prof !3

156:                                              ; preds = %153
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0)) #18
  unreachable

157:                                              ; preds = %153
  %158 = load i64, i64* %95, align 8
  %159 = add i64 %158, 7
  %160 = inttoptr i64 %159 to i32*
  %161 = load i32, i32* %160, align 4
  %162 = icmp slt i32 %161, %154
  br i1 %162, label %163, label %164, !prof !2

163:                                              ; preds = %157
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0)) #18
  unreachable

164:                                              ; preds = %157
  %165 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %166 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %165, align 8
  %167 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %166, i64 0, i32 168, i32 1
  %168 = load i8, i8* %167, align 8, !range !5
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %173, label %170

170:                                              ; preds = %164
  %171 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %166, i64 0, i32 168, i32 0, i32 2
  %172 = load i32*, i32** %171, align 8
  br label %177

173:                                              ; preds = %164
  store i8 1, i8* %167, align 8
  %174 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %166, i64 0, i32 168, i32 0
  %175 = call i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"* %174) #6
  %176 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %166, i64 0, i32 168, i32 0, i32 2
  store i32* %175, i32** %176, align 8
  br label %177

177:                                              ; preds = %173, %170
  %178 = phi i32* [ %172, %170 ], [ %175, %173 ]
  %179 = icmp eq i32* %178, null
  br i1 %179, label %183, label %180

180:                                              ; preds = %177
  %181 = load i32, i32* %178, align 4
  %182 = add nsw i32 %181, 1
  store i32 %182, i32* %178, align 4
  br label %183

183:                                              ; preds = %180, %177
  %184 = call i64* @_ZN2v88internal6RegExp4ExecEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiNS4_INS0_15RegExpMatchInfoEEENS1_10ExecQuirksE(%"class.v8::internal::Isolate"* %2, i64* %1, i64* %95, i32 %154, i64* %137, i32 0) #6
  %185 = icmp eq i64* %184, null
  %186 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %187 = select i1 %185, i64* %186, i64* %184
  %188 = load i64, i64* %187, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %130) #6
  %189 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %189, label %203, label %190

190:                                              ; preds = %183
  %191 = inttoptr i64 %72 to i64*
  %192 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %70, i64 0, i32 0
  %193 = load i64*, i64** %192, align 8
  store i64 %72, i64* %71, align 8
  %194 = load i32, i32* %75, align 8
  %195 = add nsw i32 %194, -1
  store i32 %195, i32* %75, align 8
  %196 = load i64*, i64** %73, align 8
  %197 = icmp eq i64* %196, %74
  br i1 %197, label %200, label %198

198:                                              ; preds = %190
  store i64* %74, i64** %73, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %199 = load i64*, i64** %192, align 8
  br label %200

200:                                              ; preds = %198, %190
  %201 = phi i64* [ %199, %198 ], [ %191, %190 ]
  %202 = phi i64* [ %74, %198 ], [ %193, %190 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %201, i64* %202) #6
  br label %203

203:                                              ; preds = %183, %200
  %204 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %33, align 8
  %205 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %204, null
  br i1 %205, label %222, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 0
  %208 = load i8*, i8** %207, align 8
  %209 = load atomic i8, i8* %208 monotonic, align 1
  %210 = icmp eq i8 %209, 0
  br i1 %210, label %222, label %211

211:                                              ; preds = %206
  %212 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %213 = load i8*, i8** %207, align 8
  %214 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 1
  %215 = load i8*, i8** %214, align 8
  %216 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 2
  %217 = load i64, i64* %216, align 8
  %218 = bitcast %"class.v8::TracingController"* %212 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %219 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %218, align 8
  %220 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %219, i64 5
  %221 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %220, align 8
  call void %221(%"class.v8::TracingController"* %212, i8* %213, i8* %215, i64 %217) #6
  br label %222

222:                                              ; preds = %203, %206, %211
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #6
  %223 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 0
  %224 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %223, align 8
  %225 = icmp eq %"class.v8::internal::RuntimeCallStats"* %224, null
  br i1 %225, label %228, label %226, !prof !3

226:                                              ; preds = %222
  %227 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %224, %"class.v8::internal::RuntimeCallTimer"* %227) #6
  br label %228

228:                                              ; preds = %222, %226
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #6
  ret i64 %188
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal42Runtime_RegExpExecTreatMatchAtEndAsFailureEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.v8::internal::Object", align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1153", %"struct.std::__1::atomic.1153"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !3

8:                                                ; preds = %3
  %9 = tail call fastcc i64 @_ZN2v88internalL48Stats_Runtime_RegExpExecTreatMatchAtEndAsFailureEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %145

10:                                               ; preds = %3
  %11 = ptrtoint i64* %1 to i64
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %13 = bitcast %"struct.v8::internal::HandleScopeData"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %16 = load i64*, i64** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %17, align 8
  %20 = load i64, i64* %1, align 8
  %21 = and i64 %20, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %34, label %23, !prof !4

23:                                               ; preds = %10
  %24 = and i64 %20, -4294967296
  %25 = add i64 %20, -1
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %24, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = icmp eq i16 %32, 1102
  br i1 %33, label %35, label %34, !prof !3

34:                                               ; preds = %23, %10
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0)) #18
  unreachable

35:                                               ; preds = %23
  %36 = add i64 %11, -8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %52, label %41, !prof !4

41:                                               ; preds = %35
  %42 = and i64 %38, -4294967296
  %43 = add i64 %38, -1
  %44 = inttoptr i64 %43 to i32*
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %42, %46
  %48 = add i64 %47, 7
  %49 = inttoptr i64 %48 to i16*
  %50 = load atomic i16, i16* %49 monotonic, align 2
  %51 = icmp ult i16 %50, 64
  br i1 %51, label %53, label %52, !prof !3

52:                                               ; preds = %41, %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

53:                                               ; preds = %41
  %54 = add i64 %11, -16
  %55 = inttoptr i64 %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = and i64 %56, 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %53
  %60 = and i64 %56, -4294967296
  %61 = add i64 %56, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %60, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = icmp eq i16 %68, 66
  br i1 %69, label %71, label %70, !prof !3

70:                                               ; preds = %59
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0)) #18
  unreachable

71:                                               ; preds = %59, %53
  %72 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %72) #6
  store i32 0, i32* %4, align 4
  %73 = bitcast %"class.v8::internal::Object"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #6
  %74 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %5, i64 0, i32 0, i32 0
  store i64 %56, i64* %74, align 8
  %75 = call zeroext i1 @_ZN2v88internal6Object7ToInt32EPi(%"class.v8::internal::Object"* nonnull %5, i32* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #6
  br i1 %75, label %77, label %76, !prof !3

76:                                               ; preds = %71
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0)) #18
  unreachable

77:                                               ; preds = %71
  %78 = add i64 %11, -24
  %79 = inttoptr i64 %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = and i64 %80, 1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %94, label %83, !prof !4

83:                                               ; preds = %77
  %84 = and i64 %80, -4294967296
  %85 = add i64 %80, -1
  %86 = inttoptr i64 %85 to i32*
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = zext i32 %87 to i64
  %89 = or i64 %84, %88
  %90 = add i64 %89, 7
  %91 = inttoptr i64 %90 to i16*
  %92 = load atomic i16, i16* %91 monotonic, align 2
  %93 = icmp eq i16 %92, 119
  br i1 %93, label %95, label %94, !prof !3

94:                                               ; preds = %83, %77
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0)) #18
  unreachable

95:                                               ; preds = %83
  %96 = load i32, i32* %4, align 4
  %97 = icmp sgt i32 %96, -1
  br i1 %97, label %99, label %98, !prof !3

98:                                               ; preds = %95
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0)) #18
  unreachable

99:                                               ; preds = %95
  %100 = load i64, i64* %37, align 8
  %101 = add i64 %100, 7
  %102 = inttoptr i64 %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = icmp slt i32 %103, %96
  br i1 %104, label %105, label %106, !prof !2

105:                                              ; preds = %99
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0)) #18
  unreachable

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %108 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %107, align 8
  %109 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %108, i64 0, i32 168, i32 1
  %110 = load i8, i8* %109, align 8, !range !5
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %115, label %112

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %108, i64 0, i32 168, i32 0, i32 2
  %114 = load i32*, i32** %113, align 8
  br label %119

115:                                              ; preds = %106
  store i8 1, i8* %109, align 8
  %116 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %108, i64 0, i32 168, i32 0
  %117 = call i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"* %116) #6
  %118 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %108, i64 0, i32 168, i32 0, i32 2
  store i32* %117, i32** %118, align 8
  br label %119

119:                                              ; preds = %115, %112
  %120 = phi i32* [ %114, %112 ], [ %117, %115 ]
  %121 = icmp eq i32* %120, null
  br i1 %121, label %125, label %122

122:                                              ; preds = %119
  %123 = load i32, i32* %120, align 4
  %124 = add nsw i32 %123, 1
  store i32 %124, i32* %120, align 4
  br label %125

125:                                              ; preds = %122, %119
  %126 = call i64* @_ZN2v88internal6RegExp4ExecEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiNS4_INS0_15RegExpMatchInfoEEENS1_10ExecQuirksE(%"class.v8::internal::Isolate"* %2, i64* %1, i64* %37, i32 %96, i64* %79, i32 1) #6
  %127 = icmp eq i64* %126, null
  %128 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %129 = select i1 %127, i64* %128, i64* %126
  %130 = load i64, i64* %129, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72) #6
  %131 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %131, label %145, label %132

132:                                              ; preds = %125
  %133 = inttoptr i64 %14 to i64*
  %134 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %12, i64 0, i32 0
  %135 = load i64*, i64** %134, align 8
  store i64 %14, i64* %13, align 8
  %136 = load i32, i32* %17, align 8
  %137 = add nsw i32 %136, -1
  store i32 %137, i32* %17, align 8
  %138 = load i64*, i64** %15, align 8
  %139 = icmp eq i64* %138, %16
  br i1 %139, label %142, label %140

140:                                              ; preds = %132
  store i64* %16, i64** %15, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %141 = load i64*, i64** %134, align 8
  br label %142

142:                                              ; preds = %140, %132
  %143 = phi i64* [ %141, %140 ], [ %133, %132 ]
  %144 = phi i64* [ %16, %140 ], [ %135, %132 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %143, i64* %144) #6
  br label %145

145:                                              ; preds = %142, %125, %8
  %146 = phi i64 [ %9, %8 ], [ %130, %125 ], [ %130, %142 ]
  ret i64 %146
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL48Stats_Runtime_RegExpExecTreatMatchAtEndAsFailureEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #5 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1163"], align 16
  %5 = alloca i32, align 4
  %6 = alloca %"class.v8::internal::Object", align 8
  %7 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %8 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %9 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 40, i1 false) #6
  %10 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1153", %"struct.std::__1::atomic.1153"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %18, label %12, !prof !3

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 1
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %16 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %16, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %17, %"class.v8::internal::RuntimeCallStats"** %13, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %17, %"class.v8::internal::RuntimeCallTimer"* %14, i32 542) #6
  br label %18

18:                                               ; preds = %3, %12
  %19 = load atomic i64, i64* @_ZZN2v88internalL48Stats_Runtime_RegExpExecTreatMatchAtEndAsFailureEiPmPNS0_7IsolateEE28trace_event_unique_atomic916 monotonic, align 8
  %20 = inttoptr i64 %19 to i8*
  %21 = icmp eq i64 %19, 0
  br i1 %21, label %22, label %30

22:                                               ; preds = %18
  %23 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %24 = bitcast %"class.v8::TracingController"* %23 to i8* (%"class.v8::TracingController"*, i8*)***
  %25 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %24, align 8
  %26 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %25, i64 2
  %27 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %26, align 8
  %28 = call i8* %27(%"class.v8::TracingController"* %23, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0)) #6
  %29 = ptrtoint i8* %28 to i64
  store atomic volatile i64 %29, i64* @_ZZN2v88internalL48Stats_Runtime_RegExpExecTreatMatchAtEndAsFailureEiPmPNS0_7IsolateEE28trace_event_unique_atomic916 monotonic, align 8
  br label %30

30:                                               ; preds = %18, %22
  %31 = phi i8* [ %20, %18 ], [ %28, %22 ]
  %32 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #6
  %33 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %33, align 8
  %34 = load atomic i8, i8* %31 monotonic, align 1
  %35 = and i8 %34, 5
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %68, label %37

37:                                               ; preds = %30
  %38 = bitcast [2 x %"class.std::__1::unique_ptr.1163"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #6
  %39 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %38, i8 0, i64 16, i1 false) #6
  %40 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %41 = bitcast %"class.v8::TracingController"* %40 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)***
  %42 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*** %41, align 8
  %43 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)** %42, i64 3
  %44 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)** %43, align 8
  %45 = call i64 %44(%"class.v8::TracingController"* %40, i8 signext 88, i8* %31, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.16, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1163"* nonnull %39, i32 0) #6
  %46 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %47 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %46, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %46, align 8
  %48 = icmp eq %"class.v8::ConvertableToTraceFormat"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %37
  %50 = bitcast %"class.v8::ConvertableToTraceFormat"* %47 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %51 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %51, i64 1
  %53 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %52, align 8
  call void %53(%"class.v8::ConvertableToTraceFormat"* nonnull %47) #6
  br label %54

54:                                               ; preds = %49, %37
  %55 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %55, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %55, align 16
  %57 = icmp eq %"class.v8::ConvertableToTraceFormat"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %54
  %59 = bitcast %"class.v8::ConvertableToTraceFormat"* %56 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %60, i64 1
  %62 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %61, align 8
  call void %62(%"class.v8::ConvertableToTraceFormat"* nonnull %56) #6
  br label %63

63:                                               ; preds = %54, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #6
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1
  %65 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %64, i64 0, i32 0
  store i8* %31, i8** %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.16, i64 0, i64 0), i8** %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 2
  store i64 %45, i64* %67, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %64, %"struct.v8::internal::tracing::ScopedTracer::Data"** %33, align 8
  br label %68

68:                                               ; preds = %30, %63
  %69 = ptrtoint i64* %1 to i64
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %71 = bitcast %"struct.v8::internal::HandleScopeData"* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %74 = load i64*, i64** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %76 = load i32, i32* %75, align 8
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %75, align 8
  %78 = load i64, i64* %1, align 8
  %79 = and i64 %78, 1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %92, label %81, !prof !4

81:                                               ; preds = %68
  %82 = and i64 %78, -4294967296
  %83 = add i64 %78, -1
  %84 = inttoptr i64 %83 to i32*
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = zext i32 %85 to i64
  %87 = or i64 %82, %86
  %88 = add i64 %87, 7
  %89 = inttoptr i64 %88 to i16*
  %90 = load atomic i16, i16* %89 monotonic, align 2
  %91 = icmp eq i16 %90, 1102
  br i1 %91, label %93, label %92, !prof !3

92:                                               ; preds = %81, %68
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0)) #18
  unreachable

93:                                               ; preds = %81
  %94 = add i64 %69, -8
  %95 = inttoptr i64 %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = and i64 %96, 1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %110, label %99, !prof !4

99:                                               ; preds = %93
  %100 = and i64 %96, -4294967296
  %101 = add i64 %96, -1
  %102 = inttoptr i64 %101 to i32*
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = zext i32 %103 to i64
  %105 = or i64 %100, %104
  %106 = add i64 %105, 7
  %107 = inttoptr i64 %106 to i16*
  %108 = load atomic i16, i16* %107 monotonic, align 2
  %109 = icmp ult i16 %108, 64
  br i1 %109, label %111, label %110, !prof !3

110:                                              ; preds = %99, %93
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

111:                                              ; preds = %99
  %112 = add i64 %69, -16
  %113 = inttoptr i64 %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = and i64 %114, 1
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %129, label %117

117:                                              ; preds = %111
  %118 = and i64 %114, -4294967296
  %119 = add i64 %114, -1
  %120 = inttoptr i64 %119 to i32*
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = zext i32 %121 to i64
  %123 = or i64 %118, %122
  %124 = add i64 %123, 7
  %125 = inttoptr i64 %124 to i16*
  %126 = load atomic i16, i16* %125 monotonic, align 2
  %127 = icmp eq i16 %126, 66
  br i1 %127, label %129, label %128, !prof !3

128:                                              ; preds = %117
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0)) #18
  unreachable

129:                                              ; preds = %117, %111
  %130 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %130) #6
  store i32 0, i32* %5, align 4
  %131 = bitcast %"class.v8::internal::Object"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #6
  %132 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %6, i64 0, i32 0, i32 0
  store i64 %114, i64* %132, align 8
  %133 = call zeroext i1 @_ZN2v88internal6Object7ToInt32EPi(%"class.v8::internal::Object"* nonnull %6, i32* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #6
  br i1 %133, label %135, label %134, !prof !3

134:                                              ; preds = %129
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0)) #18
  unreachable

135:                                              ; preds = %129
  %136 = add i64 %69, -24
  %137 = inttoptr i64 %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = and i64 %138, 1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %152, label %141, !prof !4

141:                                              ; preds = %135
  %142 = and i64 %138, -4294967296
  %143 = add i64 %138, -1
  %144 = inttoptr i64 %143 to i32*
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = zext i32 %145 to i64
  %147 = or i64 %142, %146
  %148 = add i64 %147, 7
  %149 = inttoptr i64 %148 to i16*
  %150 = load atomic i16, i16* %149 monotonic, align 2
  %151 = icmp eq i16 %150, 119
  br i1 %151, label %153, label %152, !prof !3

152:                                              ; preds = %141, %135
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0)) #18
  unreachable

153:                                              ; preds = %141
  %154 = load i32, i32* %5, align 4
  %155 = icmp sgt i32 %154, -1
  br i1 %155, label %157, label %156, !prof !3

156:                                              ; preds = %153
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0)) #18
  unreachable

157:                                              ; preds = %153
  %158 = load i64, i64* %95, align 8
  %159 = add i64 %158, 7
  %160 = inttoptr i64 %159 to i32*
  %161 = load i32, i32* %160, align 4
  %162 = icmp slt i32 %161, %154
  br i1 %162, label %163, label %164, !prof !2

163:                                              ; preds = %157
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0)) #18
  unreachable

164:                                              ; preds = %157
  %165 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %166 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %165, align 8
  %167 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %166, i64 0, i32 168, i32 1
  %168 = load i8, i8* %167, align 8, !range !5
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %173, label %170

170:                                              ; preds = %164
  %171 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %166, i64 0, i32 168, i32 0, i32 2
  %172 = load i32*, i32** %171, align 8
  br label %177

173:                                              ; preds = %164
  store i8 1, i8* %167, align 8
  %174 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %166, i64 0, i32 168, i32 0
  %175 = call i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"* %174) #6
  %176 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %166, i64 0, i32 168, i32 0, i32 2
  store i32* %175, i32** %176, align 8
  br label %177

177:                                              ; preds = %173, %170
  %178 = phi i32* [ %172, %170 ], [ %175, %173 ]
  %179 = icmp eq i32* %178, null
  br i1 %179, label %183, label %180

180:                                              ; preds = %177
  %181 = load i32, i32* %178, align 4
  %182 = add nsw i32 %181, 1
  store i32 %182, i32* %178, align 4
  br label %183

183:                                              ; preds = %180, %177
  %184 = call i64* @_ZN2v88internal6RegExp4ExecEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiNS4_INS0_15RegExpMatchInfoEEENS1_10ExecQuirksE(%"class.v8::internal::Isolate"* %2, i64* %1, i64* %95, i32 %154, i64* %137, i32 1) #6
  %185 = icmp eq i64* %184, null
  %186 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %187 = select i1 %185, i64* %186, i64* %184
  %188 = load i64, i64* %187, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %130) #6
  %189 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %189, label %203, label %190

190:                                              ; preds = %183
  %191 = inttoptr i64 %72 to i64*
  %192 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %70, i64 0, i32 0
  %193 = load i64*, i64** %192, align 8
  store i64 %72, i64* %71, align 8
  %194 = load i32, i32* %75, align 8
  %195 = add nsw i32 %194, -1
  store i32 %195, i32* %75, align 8
  %196 = load i64*, i64** %73, align 8
  %197 = icmp eq i64* %196, %74
  br i1 %197, label %200, label %198

198:                                              ; preds = %190
  store i64* %74, i64** %73, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %199 = load i64*, i64** %192, align 8
  br label %200

200:                                              ; preds = %198, %190
  %201 = phi i64* [ %199, %198 ], [ %191, %190 ]
  %202 = phi i64* [ %74, %198 ], [ %193, %190 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %201, i64* %202) #6
  br label %203

203:                                              ; preds = %183, %200
  %204 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %33, align 8
  %205 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %204, null
  br i1 %205, label %222, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 0
  %208 = load i8*, i8** %207, align 8
  %209 = load atomic i8, i8* %208 monotonic, align 1
  %210 = icmp eq i8 %209, 0
  br i1 %210, label %222, label %211

211:                                              ; preds = %206
  %212 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %213 = load i8*, i8** %207, align 8
  %214 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 1
  %215 = load i8*, i8** %214, align 8
  %216 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 2
  %217 = load i64, i64* %216, align 8
  %218 = bitcast %"class.v8::TracingController"* %212 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %219 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %218, align 8
  %220 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %219, i64 5
  %221 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %220, align 8
  call void %221(%"class.v8::TracingController"* %212, i8* %213, i8* %215, i64 %217) #6
  br label %222

222:                                              ; preds = %203, %206, %211
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #6
  %223 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 0
  %224 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %223, align 8
  %225 = icmp eq %"class.v8::internal::RuntimeCallStats"* %224, null
  br i1 %225, label %228, label %226, !prof !3

226:                                              ; preds = %222
  %227 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %224, %"class.v8::internal::RuntimeCallTimer"* %227) #6
  br label %228

228:                                              ; preds = %222, %226
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #6
  ret i64 %188
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal37Runtime_RegExpExperimentalOneshotExecEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.v8::internal::Object", align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1153", %"struct.std::__1::atomic.1153"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !3

8:                                                ; preds = %3
  %9 = tail call fastcc i64 @_ZN2v88internalL43Stats_Runtime_RegExpExperimentalOneshotExecEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %145

10:                                               ; preds = %3
  %11 = ptrtoint i64* %1 to i64
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %13 = bitcast %"struct.v8::internal::HandleScopeData"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %16 = load i64*, i64** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %17, align 8
  %20 = load i64, i64* %1, align 8
  %21 = and i64 %20, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %34, label %23, !prof !4

23:                                               ; preds = %10
  %24 = and i64 %20, -4294967296
  %25 = add i64 %20, -1
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %24, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = icmp eq i16 %32, 1102
  br i1 %33, label %35, label %34, !prof !3

34:                                               ; preds = %23, %10
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0)) #18
  unreachable

35:                                               ; preds = %23
  %36 = add i64 %11, -8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %52, label %41, !prof !4

41:                                               ; preds = %35
  %42 = and i64 %38, -4294967296
  %43 = add i64 %38, -1
  %44 = inttoptr i64 %43 to i32*
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %42, %46
  %48 = add i64 %47, 7
  %49 = inttoptr i64 %48 to i16*
  %50 = load atomic i16, i16* %49 monotonic, align 2
  %51 = icmp ult i16 %50, 64
  br i1 %51, label %53, label %52, !prof !3

52:                                               ; preds = %41, %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

53:                                               ; preds = %41
  %54 = add i64 %11, -16
  %55 = inttoptr i64 %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = and i64 %56, 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %53
  %60 = and i64 %56, -4294967296
  %61 = add i64 %56, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %60, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = icmp eq i16 %68, 66
  br i1 %69, label %71, label %70, !prof !3

70:                                               ; preds = %59
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0)) #18
  unreachable

71:                                               ; preds = %59, %53
  %72 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %72) #6
  store i32 0, i32* %4, align 4
  %73 = bitcast %"class.v8::internal::Object"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #6
  %74 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %5, i64 0, i32 0, i32 0
  store i64 %56, i64* %74, align 8
  %75 = call zeroext i1 @_ZN2v88internal6Object7ToInt32EPi(%"class.v8::internal::Object"* nonnull %5, i32* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #6
  br i1 %75, label %77, label %76, !prof !3

76:                                               ; preds = %71
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0)) #18
  unreachable

77:                                               ; preds = %71
  %78 = add i64 %11, -24
  %79 = inttoptr i64 %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = and i64 %80, 1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %94, label %83, !prof !4

83:                                               ; preds = %77
  %84 = and i64 %80, -4294967296
  %85 = add i64 %80, -1
  %86 = inttoptr i64 %85 to i32*
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = zext i32 %87 to i64
  %89 = or i64 %84, %88
  %90 = add i64 %89, 7
  %91 = inttoptr i64 %90 to i16*
  %92 = load atomic i16, i16* %91 monotonic, align 2
  %93 = icmp eq i16 %92, 119
  br i1 %93, label %95, label %94, !prof !3

94:                                               ; preds = %83, %77
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0)) #18
  unreachable

95:                                               ; preds = %83
  %96 = load i32, i32* %4, align 4
  %97 = icmp sgt i32 %96, -1
  br i1 %97, label %99, label %98, !prof !3

98:                                               ; preds = %95
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0)) #18
  unreachable

99:                                               ; preds = %95
  %100 = load i64, i64* %37, align 8
  %101 = add i64 %100, 7
  %102 = inttoptr i64 %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = icmp slt i32 %103, %96
  br i1 %104, label %105, label %106, !prof !2

105:                                              ; preds = %99
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0)) #18
  unreachable

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %108 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %107, align 8
  %109 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %108, i64 0, i32 168, i32 1
  %110 = load i8, i8* %109, align 8, !range !5
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %115, label %112

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %108, i64 0, i32 168, i32 0, i32 2
  %114 = load i32*, i32** %113, align 8
  br label %119

115:                                              ; preds = %106
  store i8 1, i8* %109, align 8
  %116 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %108, i64 0, i32 168, i32 0
  %117 = call i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"* %116) #6
  %118 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %108, i64 0, i32 168, i32 0, i32 2
  store i32* %117, i32** %118, align 8
  br label %119

119:                                              ; preds = %115, %112
  %120 = phi i32* [ %114, %112 ], [ %117, %115 ]
  %121 = icmp eq i32* %120, null
  br i1 %121, label %125, label %122

122:                                              ; preds = %119
  %123 = load i32, i32* %120, align 4
  %124 = add nsw i32 %123, 1
  store i32 %124, i32* %120, align 4
  br label %125

125:                                              ; preds = %122, %119
  %126 = call i64* @_ZN2v88internal6RegExp23ExperimentalOneshotExecEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiNS4_INS0_15RegExpMatchInfoEEENS1_10ExecQuirksE(%"class.v8::internal::Isolate"* %2, i64* %1, i64* %37, i32 %96, i64* %79, i32 0) #6
  %127 = icmp eq i64* %126, null
  %128 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %129 = select i1 %127, i64* %128, i64* %126
  %130 = load i64, i64* %129, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72) #6
  %131 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %131, label %145, label %132

132:                                              ; preds = %125
  %133 = inttoptr i64 %14 to i64*
  %134 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %12, i64 0, i32 0
  %135 = load i64*, i64** %134, align 8
  store i64 %14, i64* %13, align 8
  %136 = load i32, i32* %17, align 8
  %137 = add nsw i32 %136, -1
  store i32 %137, i32* %17, align 8
  %138 = load i64*, i64** %15, align 8
  %139 = icmp eq i64* %138, %16
  br i1 %139, label %142, label %140

140:                                              ; preds = %132
  store i64* %16, i64** %15, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %141 = load i64*, i64** %134, align 8
  br label %142

142:                                              ; preds = %140, %132
  %143 = phi i64* [ %141, %140 ], [ %133, %132 ]
  %144 = phi i64* [ %16, %140 ], [ %135, %132 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %143, i64* %144) #6
  br label %145

145:                                              ; preds = %142, %125, %8
  %146 = phi i64 [ %9, %8 ], [ %130, %125 ], [ %130, %142 ]
  ret i64 %146
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL43Stats_Runtime_RegExpExperimentalOneshotExecEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #5 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1163"], align 16
  %5 = alloca i32, align 4
  %6 = alloca %"class.v8::internal::Object", align 8
  %7 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %8 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %9 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 40, i1 false) #6
  %10 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1153", %"struct.std::__1::atomic.1153"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %18, label %12, !prof !3

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 1
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %16 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %16, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %17, %"class.v8::internal::RuntimeCallStats"** %13, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %17, %"class.v8::internal::RuntimeCallTimer"* %14, i32 543) #6
  br label %18

18:                                               ; preds = %3, %12
  %19 = load atomic i64, i64* @_ZZN2v88internalL43Stats_Runtime_RegExpExperimentalOneshotExecEiPmPNS0_7IsolateEE28trace_event_unique_atomic928 monotonic, align 8
  %20 = inttoptr i64 %19 to i8*
  %21 = icmp eq i64 %19, 0
  br i1 %21, label %22, label %30

22:                                               ; preds = %18
  %23 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %24 = bitcast %"class.v8::TracingController"* %23 to i8* (%"class.v8::TracingController"*, i8*)***
  %25 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %24, align 8
  %26 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %25, i64 2
  %27 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %26, align 8
  %28 = call i8* %27(%"class.v8::TracingController"* %23, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0)) #6
  %29 = ptrtoint i8* %28 to i64
  store atomic volatile i64 %29, i64* @_ZZN2v88internalL43Stats_Runtime_RegExpExperimentalOneshotExecEiPmPNS0_7IsolateEE28trace_event_unique_atomic928 monotonic, align 8
  br label %30

30:                                               ; preds = %18, %22
  %31 = phi i8* [ %20, %18 ], [ %28, %22 ]
  %32 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #6
  %33 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %33, align 8
  %34 = load atomic i8, i8* %31 monotonic, align 1
  %35 = and i8 %34, 5
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %68, label %37

37:                                               ; preds = %30
  %38 = bitcast [2 x %"class.std::__1::unique_ptr.1163"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #6
  %39 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %38, i8 0, i64 16, i1 false) #6
  %40 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %41 = bitcast %"class.v8::TracingController"* %40 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)***
  %42 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*** %41, align 8
  %43 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)** %42, i64 3
  %44 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)** %43, align 8
  %45 = call i64 %44(%"class.v8::TracingController"* %40, i8 signext 88, i8* %31, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.17, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1163"* nonnull %39, i32 0) #6
  %46 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %47 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %46, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %46, align 8
  %48 = icmp eq %"class.v8::ConvertableToTraceFormat"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %37
  %50 = bitcast %"class.v8::ConvertableToTraceFormat"* %47 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %51 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %51, i64 1
  %53 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %52, align 8
  call void %53(%"class.v8::ConvertableToTraceFormat"* nonnull %47) #6
  br label %54

54:                                               ; preds = %49, %37
  %55 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %55, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %55, align 16
  %57 = icmp eq %"class.v8::ConvertableToTraceFormat"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %54
  %59 = bitcast %"class.v8::ConvertableToTraceFormat"* %56 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %60, i64 1
  %62 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %61, align 8
  call void %62(%"class.v8::ConvertableToTraceFormat"* nonnull %56) #6
  br label %63

63:                                               ; preds = %54, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #6
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1
  %65 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %64, i64 0, i32 0
  store i8* %31, i8** %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.17, i64 0, i64 0), i8** %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 2
  store i64 %45, i64* %67, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %64, %"struct.v8::internal::tracing::ScopedTracer::Data"** %33, align 8
  br label %68

68:                                               ; preds = %30, %63
  %69 = ptrtoint i64* %1 to i64
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %71 = bitcast %"struct.v8::internal::HandleScopeData"* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %74 = load i64*, i64** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %76 = load i32, i32* %75, align 8
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %75, align 8
  %78 = load i64, i64* %1, align 8
  %79 = and i64 %78, 1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %92, label %81, !prof !4

81:                                               ; preds = %68
  %82 = and i64 %78, -4294967296
  %83 = add i64 %78, -1
  %84 = inttoptr i64 %83 to i32*
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = zext i32 %85 to i64
  %87 = or i64 %82, %86
  %88 = add i64 %87, 7
  %89 = inttoptr i64 %88 to i16*
  %90 = load atomic i16, i16* %89 monotonic, align 2
  %91 = icmp eq i16 %90, 1102
  br i1 %91, label %93, label %92, !prof !3

92:                                               ; preds = %81, %68
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0)) #18
  unreachable

93:                                               ; preds = %81
  %94 = add i64 %69, -8
  %95 = inttoptr i64 %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = and i64 %96, 1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %110, label %99, !prof !4

99:                                               ; preds = %93
  %100 = and i64 %96, -4294967296
  %101 = add i64 %96, -1
  %102 = inttoptr i64 %101 to i32*
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = zext i32 %103 to i64
  %105 = or i64 %100, %104
  %106 = add i64 %105, 7
  %107 = inttoptr i64 %106 to i16*
  %108 = load atomic i16, i16* %107 monotonic, align 2
  %109 = icmp ult i16 %108, 64
  br i1 %109, label %111, label %110, !prof !3

110:                                              ; preds = %99, %93
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

111:                                              ; preds = %99
  %112 = add i64 %69, -16
  %113 = inttoptr i64 %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = and i64 %114, 1
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %129, label %117

117:                                              ; preds = %111
  %118 = and i64 %114, -4294967296
  %119 = add i64 %114, -1
  %120 = inttoptr i64 %119 to i32*
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = zext i32 %121 to i64
  %123 = or i64 %118, %122
  %124 = add i64 %123, 7
  %125 = inttoptr i64 %124 to i16*
  %126 = load atomic i16, i16* %125 monotonic, align 2
  %127 = icmp eq i16 %126, 66
  br i1 %127, label %129, label %128, !prof !3

128:                                              ; preds = %117
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0)) #18
  unreachable

129:                                              ; preds = %117, %111
  %130 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %130) #6
  store i32 0, i32* %5, align 4
  %131 = bitcast %"class.v8::internal::Object"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #6
  %132 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %6, i64 0, i32 0, i32 0
  store i64 %114, i64* %132, align 8
  %133 = call zeroext i1 @_ZN2v88internal6Object7ToInt32EPi(%"class.v8::internal::Object"* nonnull %6, i32* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #6
  br i1 %133, label %135, label %134, !prof !3

134:                                              ; preds = %129
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0)) #18
  unreachable

135:                                              ; preds = %129
  %136 = add i64 %69, -24
  %137 = inttoptr i64 %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = and i64 %138, 1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %152, label %141, !prof !4

141:                                              ; preds = %135
  %142 = and i64 %138, -4294967296
  %143 = add i64 %138, -1
  %144 = inttoptr i64 %143 to i32*
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = zext i32 %145 to i64
  %147 = or i64 %142, %146
  %148 = add i64 %147, 7
  %149 = inttoptr i64 %148 to i16*
  %150 = load atomic i16, i16* %149 monotonic, align 2
  %151 = icmp eq i16 %150, 119
  br i1 %151, label %153, label %152, !prof !3

152:                                              ; preds = %141, %135
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0)) #18
  unreachable

153:                                              ; preds = %141
  %154 = load i32, i32* %5, align 4
  %155 = icmp sgt i32 %154, -1
  br i1 %155, label %157, label %156, !prof !3

156:                                              ; preds = %153
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0)) #18
  unreachable

157:                                              ; preds = %153
  %158 = load i64, i64* %95, align 8
  %159 = add i64 %158, 7
  %160 = inttoptr i64 %159 to i32*
  %161 = load i32, i32* %160, align 4
  %162 = icmp slt i32 %161, %154
  br i1 %162, label %163, label %164, !prof !2

163:                                              ; preds = %157
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0)) #18
  unreachable

164:                                              ; preds = %157
  %165 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %166 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %165, align 8
  %167 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %166, i64 0, i32 168, i32 1
  %168 = load i8, i8* %167, align 8, !range !5
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %173, label %170

170:                                              ; preds = %164
  %171 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %166, i64 0, i32 168, i32 0, i32 2
  %172 = load i32*, i32** %171, align 8
  br label %177

173:                                              ; preds = %164
  store i8 1, i8* %167, align 8
  %174 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %166, i64 0, i32 168, i32 0
  %175 = call i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"* %174) #6
  %176 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %166, i64 0, i32 168, i32 0, i32 2
  store i32* %175, i32** %176, align 8
  br label %177

177:                                              ; preds = %173, %170
  %178 = phi i32* [ %172, %170 ], [ %175, %173 ]
  %179 = icmp eq i32* %178, null
  br i1 %179, label %183, label %180

180:                                              ; preds = %177
  %181 = load i32, i32* %178, align 4
  %182 = add nsw i32 %181, 1
  store i32 %182, i32* %178, align 4
  br label %183

183:                                              ; preds = %180, %177
  %184 = call i64* @_ZN2v88internal6RegExp23ExperimentalOneshotExecEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiNS4_INS0_15RegExpMatchInfoEEENS1_10ExecQuirksE(%"class.v8::internal::Isolate"* %2, i64* %1, i64* %95, i32 %154, i64* %137, i32 0) #6
  %185 = icmp eq i64* %184, null
  %186 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %187 = select i1 %185, i64* %186, i64* %184
  %188 = load i64, i64* %187, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %130) #6
  %189 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %189, label %203, label %190

190:                                              ; preds = %183
  %191 = inttoptr i64 %72 to i64*
  %192 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %70, i64 0, i32 0
  %193 = load i64*, i64** %192, align 8
  store i64 %72, i64* %71, align 8
  %194 = load i32, i32* %75, align 8
  %195 = add nsw i32 %194, -1
  store i32 %195, i32* %75, align 8
  %196 = load i64*, i64** %73, align 8
  %197 = icmp eq i64* %196, %74
  br i1 %197, label %200, label %198

198:                                              ; preds = %190
  store i64* %74, i64** %73, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %199 = load i64*, i64** %192, align 8
  br label %200

200:                                              ; preds = %198, %190
  %201 = phi i64* [ %199, %198 ], [ %191, %190 ]
  %202 = phi i64* [ %74, %198 ], [ %193, %190 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %201, i64* %202) #6
  br label %203

203:                                              ; preds = %183, %200
  %204 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %33, align 8
  %205 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %204, null
  br i1 %205, label %222, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 0
  %208 = load i8*, i8** %207, align 8
  %209 = load atomic i8, i8* %208 monotonic, align 1
  %210 = icmp eq i8 %209, 0
  br i1 %210, label %222, label %211

211:                                              ; preds = %206
  %212 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %213 = load i8*, i8** %207, align 8
  %214 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 1
  %215 = load i8*, i8** %214, align 8
  %216 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 2
  %217 = load i64, i64* %216, align 8
  %218 = bitcast %"class.v8::TracingController"* %212 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %219 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %218, align 8
  %220 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %219, i64 5
  %221 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %220, align 8
  call void %221(%"class.v8::TracingController"* %212, i8* %213, i8* %215, i64 %217) #6
  br label %222

222:                                              ; preds = %203, %206, %211
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #6
  %223 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 0
  %224 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %223, align 8
  %225 = icmp eq %"class.v8::internal::RuntimeCallStats"* %224, null
  br i1 %225, label %228, label %226, !prof !3

226:                                              ; preds = %222
  %227 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %224, %"class.v8::internal::RuntimeCallTimer"* %227) #6
  br label %228

228:                                              ; preds = %222, %226
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #6
  ret i64 %188
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal61Runtime_RegExpExperimentalOneshotExecTreatMatchAtEndAsFailureEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.v8::internal::Object", align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1153", %"struct.std::__1::atomic.1153"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !3

8:                                                ; preds = %3
  %9 = tail call fastcc i64 @_ZN2v88internalL67Stats_Runtime_RegExpExperimentalOneshotExecTreatMatchAtEndAsFailureEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %145

10:                                               ; preds = %3
  %11 = ptrtoint i64* %1 to i64
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %13 = bitcast %"struct.v8::internal::HandleScopeData"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %16 = load i64*, i64** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %17, align 8
  %20 = load i64, i64* %1, align 8
  %21 = and i64 %20, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %34, label %23, !prof !4

23:                                               ; preds = %10
  %24 = and i64 %20, -4294967296
  %25 = add i64 %20, -1
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %24, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = icmp eq i16 %32, 1102
  br i1 %33, label %35, label %34, !prof !3

34:                                               ; preds = %23, %10
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0)) #18
  unreachable

35:                                               ; preds = %23
  %36 = add i64 %11, -8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %52, label %41, !prof !4

41:                                               ; preds = %35
  %42 = and i64 %38, -4294967296
  %43 = add i64 %38, -1
  %44 = inttoptr i64 %43 to i32*
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %42, %46
  %48 = add i64 %47, 7
  %49 = inttoptr i64 %48 to i16*
  %50 = load atomic i16, i16* %49 monotonic, align 2
  %51 = icmp ult i16 %50, 64
  br i1 %51, label %53, label %52, !prof !3

52:                                               ; preds = %41, %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

53:                                               ; preds = %41
  %54 = add i64 %11, -16
  %55 = inttoptr i64 %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = and i64 %56, 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %53
  %60 = and i64 %56, -4294967296
  %61 = add i64 %56, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %60, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = icmp eq i16 %68, 66
  br i1 %69, label %71, label %70, !prof !3

70:                                               ; preds = %59
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0)) #18
  unreachable

71:                                               ; preds = %59, %53
  %72 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %72) #6
  store i32 0, i32* %4, align 4
  %73 = bitcast %"class.v8::internal::Object"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #6
  %74 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %5, i64 0, i32 0, i32 0
  store i64 %56, i64* %74, align 8
  %75 = call zeroext i1 @_ZN2v88internal6Object7ToInt32EPi(%"class.v8::internal::Object"* nonnull %5, i32* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #6
  br i1 %75, label %77, label %76, !prof !3

76:                                               ; preds = %71
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0)) #18
  unreachable

77:                                               ; preds = %71
  %78 = add i64 %11, -24
  %79 = inttoptr i64 %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = and i64 %80, 1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %94, label %83, !prof !4

83:                                               ; preds = %77
  %84 = and i64 %80, -4294967296
  %85 = add i64 %80, -1
  %86 = inttoptr i64 %85 to i32*
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = zext i32 %87 to i64
  %89 = or i64 %84, %88
  %90 = add i64 %89, 7
  %91 = inttoptr i64 %90 to i16*
  %92 = load atomic i16, i16* %91 monotonic, align 2
  %93 = icmp eq i16 %92, 119
  br i1 %93, label %95, label %94, !prof !3

94:                                               ; preds = %83, %77
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0)) #18
  unreachable

95:                                               ; preds = %83
  %96 = load i32, i32* %4, align 4
  %97 = icmp sgt i32 %96, -1
  br i1 %97, label %99, label %98, !prof !3

98:                                               ; preds = %95
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0)) #18
  unreachable

99:                                               ; preds = %95
  %100 = load i64, i64* %37, align 8
  %101 = add i64 %100, 7
  %102 = inttoptr i64 %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = icmp slt i32 %103, %96
  br i1 %104, label %105, label %106, !prof !2

105:                                              ; preds = %99
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0)) #18
  unreachable

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %108 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %107, align 8
  %109 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %108, i64 0, i32 168, i32 1
  %110 = load i8, i8* %109, align 8, !range !5
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %115, label %112

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %108, i64 0, i32 168, i32 0, i32 2
  %114 = load i32*, i32** %113, align 8
  br label %119

115:                                              ; preds = %106
  store i8 1, i8* %109, align 8
  %116 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %108, i64 0, i32 168, i32 0
  %117 = call i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"* %116) #6
  %118 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %108, i64 0, i32 168, i32 0, i32 2
  store i32* %117, i32** %118, align 8
  br label %119

119:                                              ; preds = %115, %112
  %120 = phi i32* [ %114, %112 ], [ %117, %115 ]
  %121 = icmp eq i32* %120, null
  br i1 %121, label %125, label %122

122:                                              ; preds = %119
  %123 = load i32, i32* %120, align 4
  %124 = add nsw i32 %123, 1
  store i32 %124, i32* %120, align 4
  br label %125

125:                                              ; preds = %122, %119
  %126 = call i64* @_ZN2v88internal6RegExp23ExperimentalOneshotExecEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiNS4_INS0_15RegExpMatchInfoEEENS1_10ExecQuirksE(%"class.v8::internal::Isolate"* %2, i64* %1, i64* %37, i32 %96, i64* %79, i32 1) #6
  %127 = icmp eq i64* %126, null
  %128 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %129 = select i1 %127, i64* %128, i64* %126
  %130 = load i64, i64* %129, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72) #6
  %131 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %131, label %145, label %132

132:                                              ; preds = %125
  %133 = inttoptr i64 %14 to i64*
  %134 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %12, i64 0, i32 0
  %135 = load i64*, i64** %134, align 8
  store i64 %14, i64* %13, align 8
  %136 = load i32, i32* %17, align 8
  %137 = add nsw i32 %136, -1
  store i32 %137, i32* %17, align 8
  %138 = load i64*, i64** %15, align 8
  %139 = icmp eq i64* %138, %16
  br i1 %139, label %142, label %140

140:                                              ; preds = %132
  store i64* %16, i64** %15, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %141 = load i64*, i64** %134, align 8
  br label %142

142:                                              ; preds = %140, %132
  %143 = phi i64* [ %141, %140 ], [ %133, %132 ]
  %144 = phi i64* [ %16, %140 ], [ %135, %132 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %143, i64* %144) #6
  br label %145

145:                                              ; preds = %142, %125, %8
  %146 = phi i64 [ %9, %8 ], [ %130, %125 ], [ %130, %142 ]
  ret i64 %146
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL67Stats_Runtime_RegExpExperimentalOneshotExecTreatMatchAtEndAsFailureEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #5 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1163"], align 16
  %5 = alloca i32, align 4
  %6 = alloca %"class.v8::internal::Object", align 8
  %7 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %8 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %9 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 40, i1 false) #6
  %10 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1153", %"struct.std::__1::atomic.1153"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %18, label %12, !prof !3

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 1
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %16 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %16, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %17, %"class.v8::internal::RuntimeCallStats"** %13, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %17, %"class.v8::internal::RuntimeCallTimer"* %14, i32 544) #6
  br label %18

18:                                               ; preds = %3, %12
  %19 = load atomic i64, i64* @_ZZN2v88internalL67Stats_Runtime_RegExpExperimentalOneshotExecTreatMatchAtEndAsFailureEiPmPNS0_7IsolateEE28trace_event_unique_atomic942 monotonic, align 8
  %20 = inttoptr i64 %19 to i8*
  %21 = icmp eq i64 %19, 0
  br i1 %21, label %22, label %30

22:                                               ; preds = %18
  %23 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %24 = bitcast %"class.v8::TracingController"* %23 to i8* (%"class.v8::TracingController"*, i8*)***
  %25 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %24, align 8
  %26 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %25, i64 2
  %27 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %26, align 8
  %28 = call i8* %27(%"class.v8::TracingController"* %23, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0)) #6
  %29 = ptrtoint i8* %28 to i64
  store atomic volatile i64 %29, i64* @_ZZN2v88internalL67Stats_Runtime_RegExpExperimentalOneshotExecTreatMatchAtEndAsFailureEiPmPNS0_7IsolateEE28trace_event_unique_atomic942 monotonic, align 8
  br label %30

30:                                               ; preds = %18, %22
  %31 = phi i8* [ %20, %18 ], [ %28, %22 ]
  %32 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #6
  %33 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %33, align 8
  %34 = load atomic i8, i8* %31 monotonic, align 1
  %35 = and i8 %34, 5
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %68, label %37

37:                                               ; preds = %30
  %38 = bitcast [2 x %"class.std::__1::unique_ptr.1163"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #6
  %39 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %38, i8 0, i64 16, i1 false) #6
  %40 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %41 = bitcast %"class.v8::TracingController"* %40 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)***
  %42 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*** %41, align 8
  %43 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)** %42, i64 3
  %44 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)** %43, align 8
  %45 = call i64 %44(%"class.v8::TracingController"* %40, i8 signext 88, i8* %31, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.18, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1163"* nonnull %39, i32 0) #6
  %46 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %47 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %46, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %46, align 8
  %48 = icmp eq %"class.v8::ConvertableToTraceFormat"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %37
  %50 = bitcast %"class.v8::ConvertableToTraceFormat"* %47 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %51 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %51, i64 1
  %53 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %52, align 8
  call void %53(%"class.v8::ConvertableToTraceFormat"* nonnull %47) #6
  br label %54

54:                                               ; preds = %49, %37
  %55 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %55, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %55, align 16
  %57 = icmp eq %"class.v8::ConvertableToTraceFormat"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %54
  %59 = bitcast %"class.v8::ConvertableToTraceFormat"* %56 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %60, i64 1
  %62 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %61, align 8
  call void %62(%"class.v8::ConvertableToTraceFormat"* nonnull %56) #6
  br label %63

63:                                               ; preds = %54, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #6
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1
  %65 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %64, i64 0, i32 0
  store i8* %31, i8** %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.18, i64 0, i64 0), i8** %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 2
  store i64 %45, i64* %67, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %64, %"struct.v8::internal::tracing::ScopedTracer::Data"** %33, align 8
  br label %68

68:                                               ; preds = %30, %63
  %69 = ptrtoint i64* %1 to i64
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %71 = bitcast %"struct.v8::internal::HandleScopeData"* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %74 = load i64*, i64** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %76 = load i32, i32* %75, align 8
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %75, align 8
  %78 = load i64, i64* %1, align 8
  %79 = and i64 %78, 1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %92, label %81, !prof !4

81:                                               ; preds = %68
  %82 = and i64 %78, -4294967296
  %83 = add i64 %78, -1
  %84 = inttoptr i64 %83 to i32*
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = zext i32 %85 to i64
  %87 = or i64 %82, %86
  %88 = add i64 %87, 7
  %89 = inttoptr i64 %88 to i16*
  %90 = load atomic i16, i16* %89 monotonic, align 2
  %91 = icmp eq i16 %90, 1102
  br i1 %91, label %93, label %92, !prof !3

92:                                               ; preds = %81, %68
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0)) #18
  unreachable

93:                                               ; preds = %81
  %94 = add i64 %69, -8
  %95 = inttoptr i64 %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = and i64 %96, 1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %110, label %99, !prof !4

99:                                               ; preds = %93
  %100 = and i64 %96, -4294967296
  %101 = add i64 %96, -1
  %102 = inttoptr i64 %101 to i32*
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = zext i32 %103 to i64
  %105 = or i64 %100, %104
  %106 = add i64 %105, 7
  %107 = inttoptr i64 %106 to i16*
  %108 = load atomic i16, i16* %107 monotonic, align 2
  %109 = icmp ult i16 %108, 64
  br i1 %109, label %111, label %110, !prof !3

110:                                              ; preds = %99, %93
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

111:                                              ; preds = %99
  %112 = add i64 %69, -16
  %113 = inttoptr i64 %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = and i64 %114, 1
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %129, label %117

117:                                              ; preds = %111
  %118 = and i64 %114, -4294967296
  %119 = add i64 %114, -1
  %120 = inttoptr i64 %119 to i32*
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = zext i32 %121 to i64
  %123 = or i64 %118, %122
  %124 = add i64 %123, 7
  %125 = inttoptr i64 %124 to i16*
  %126 = load atomic i16, i16* %125 monotonic, align 2
  %127 = icmp eq i16 %126, 66
  br i1 %127, label %129, label %128, !prof !3

128:                                              ; preds = %117
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0)) #18
  unreachable

129:                                              ; preds = %117, %111
  %130 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %130) #6
  store i32 0, i32* %5, align 4
  %131 = bitcast %"class.v8::internal::Object"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #6
  %132 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %6, i64 0, i32 0, i32 0
  store i64 %114, i64* %132, align 8
  %133 = call zeroext i1 @_ZN2v88internal6Object7ToInt32EPi(%"class.v8::internal::Object"* nonnull %6, i32* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #6
  br i1 %133, label %135, label %134, !prof !3

134:                                              ; preds = %129
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0)) #18
  unreachable

135:                                              ; preds = %129
  %136 = add i64 %69, -24
  %137 = inttoptr i64 %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = and i64 %138, 1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %152, label %141, !prof !4

141:                                              ; preds = %135
  %142 = and i64 %138, -4294967296
  %143 = add i64 %138, -1
  %144 = inttoptr i64 %143 to i32*
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = zext i32 %145 to i64
  %147 = or i64 %142, %146
  %148 = add i64 %147, 7
  %149 = inttoptr i64 %148 to i16*
  %150 = load atomic i16, i16* %149 monotonic, align 2
  %151 = icmp eq i16 %150, 119
  br i1 %151, label %153, label %152, !prof !3

152:                                              ; preds = %141, %135
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0)) #18
  unreachable

153:                                              ; preds = %141
  %154 = load i32, i32* %5, align 4
  %155 = icmp sgt i32 %154, -1
  br i1 %155, label %157, label %156, !prof !3

156:                                              ; preds = %153
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0)) #18
  unreachable

157:                                              ; preds = %153
  %158 = load i64, i64* %95, align 8
  %159 = add i64 %158, 7
  %160 = inttoptr i64 %159 to i32*
  %161 = load i32, i32* %160, align 4
  %162 = icmp slt i32 %161, %154
  br i1 %162, label %163, label %164, !prof !2

163:                                              ; preds = %157
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0)) #18
  unreachable

164:                                              ; preds = %157
  %165 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %166 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %165, align 8
  %167 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %166, i64 0, i32 168, i32 1
  %168 = load i8, i8* %167, align 8, !range !5
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %173, label %170

170:                                              ; preds = %164
  %171 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %166, i64 0, i32 168, i32 0, i32 2
  %172 = load i32*, i32** %171, align 8
  br label %177

173:                                              ; preds = %164
  store i8 1, i8* %167, align 8
  %174 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %166, i64 0, i32 168, i32 0
  %175 = call i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"* %174) #6
  %176 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %166, i64 0, i32 168, i32 0, i32 2
  store i32* %175, i32** %176, align 8
  br label %177

177:                                              ; preds = %173, %170
  %178 = phi i32* [ %172, %170 ], [ %175, %173 ]
  %179 = icmp eq i32* %178, null
  br i1 %179, label %183, label %180

180:                                              ; preds = %177
  %181 = load i32, i32* %178, align 4
  %182 = add nsw i32 %181, 1
  store i32 %182, i32* %178, align 4
  br label %183

183:                                              ; preds = %180, %177
  %184 = call i64* @_ZN2v88internal6RegExp23ExperimentalOneshotExecEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiNS4_INS0_15RegExpMatchInfoEEENS1_10ExecQuirksE(%"class.v8::internal::Isolate"* %2, i64* %1, i64* %95, i32 %154, i64* %137, i32 1) #6
  %185 = icmp eq i64* %184, null
  %186 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %187 = select i1 %185, i64* %186, i64* %184
  %188 = load i64, i64* %187, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %130) #6
  %189 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %189, label %203, label %190

190:                                              ; preds = %183
  %191 = inttoptr i64 %72 to i64*
  %192 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %70, i64 0, i32 0
  %193 = load i64*, i64** %192, align 8
  store i64 %72, i64* %71, align 8
  %194 = load i32, i32* %75, align 8
  %195 = add nsw i32 %194, -1
  store i32 %195, i32* %75, align 8
  %196 = load i64*, i64** %73, align 8
  %197 = icmp eq i64* %196, %74
  br i1 %197, label %200, label %198

198:                                              ; preds = %190
  store i64* %74, i64** %73, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %199 = load i64*, i64** %192, align 8
  br label %200

200:                                              ; preds = %198, %190
  %201 = phi i64* [ %199, %198 ], [ %191, %190 ]
  %202 = phi i64* [ %74, %198 ], [ %193, %190 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %201, i64* %202) #6
  br label %203

203:                                              ; preds = %183, %200
  %204 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %33, align 8
  %205 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %204, null
  br i1 %205, label %222, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 0
  %208 = load i8*, i8** %207, align 8
  %209 = load atomic i8, i8* %208 monotonic, align 1
  %210 = icmp eq i8 %209, 0
  br i1 %210, label %222, label %211

211:                                              ; preds = %206
  %212 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %213 = load i8*, i8** %207, align 8
  %214 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 1
  %215 = load i8*, i8** %214, align 8
  %216 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 2
  %217 = load i64, i64* %216, align 8
  %218 = bitcast %"class.v8::TracingController"* %212 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %219 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %218, align 8
  %220 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %219, i64 5
  %221 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %220, align 8
  call void %221(%"class.v8::TracingController"* %212, i8* %213, i8* %215, i64 %217) #6
  br label %222

222:                                              ; preds = %203, %206, %211
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #6
  %223 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 0
  %224 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %223, align 8
  %225 = icmp eq %"class.v8::internal::RuntimeCallStats"* %224, null
  br i1 %225, label %228, label %226, !prof !3

226:                                              ; preds = %222
  %227 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %224, %"class.v8::internal::RuntimeCallTimer"* %227) #6
  br label %228

228:                                              ; preds = %222, %226
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #6
  ret i64 %188
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal26Runtime_RegExpBuildIndicesEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1153", %"struct.std::__1::atomic.1153"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !3

6:                                                ; preds = %3
  %7 = tail call fastcc i64 @_ZN2v88internalL32Stats_Runtime_RegExpBuildIndicesEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %54

8:                                                ; preds = %3
  %9 = ptrtoint i64* %1 to i64
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %11 = bitcast %"struct.v8::internal::HandleScopeData"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 8
  %18 = add i64 %9, -8
  %19 = inttoptr i64 %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %34, label %23, !prof !4

23:                                               ; preds = %8
  %24 = and i64 %20, -4294967296
  %25 = add i64 %20, -1
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %24, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = icmp eq i16 %32, 119
  br i1 %33, label %35, label %34, !prof !3

34:                                               ; preds = %23, %8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.20, i64 0, i64 0)) #18
  unreachable

35:                                               ; preds = %23
  %36 = add i64 %9, -16
  %37 = inttoptr i64 %36 to i64*
  %38 = tail call i64* @_ZN2v88internal21JSRegExpResultIndices12BuildIndicesEPNS0_7IsolateENS0_6HandleINS0_15RegExpMatchInfoEEENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %2, i64* %19, i64* %37) #6
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %35
  %42 = inttoptr i64 %12 to i64*
  %43 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %10, i64 0, i32 0
  %44 = load i64*, i64** %43, align 8
  store i64 %12, i64* %11, align 8
  %45 = load i32, i32* %15, align 8
  %46 = add nsw i32 %45, -1
  store i32 %46, i32* %15, align 8
  %47 = load i64*, i64** %13, align 8
  %48 = icmp eq i64* %47, %14
  br i1 %48, label %51, label %49

49:                                               ; preds = %41
  store i64* %14, i64** %13, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %50 = load i64*, i64** %43, align 8
  br label %51

51:                                               ; preds = %49, %41
  %52 = phi i64* [ %50, %49 ], [ %42, %41 ]
  %53 = phi i64* [ %14, %49 ], [ %44, %41 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %52, i64* %53) #6
  br label %54

54:                                               ; preds = %51, %35, %6
  %55 = phi i64 [ %7, %6 ], [ %39, %35 ], [ %39, %51 ]
  ret i64 %55
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL32Stats_Runtime_RegExpBuildIndicesEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #5 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1163"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 40, i1 false) #6
  %8 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1153", %"struct.std::__1::atomic.1153"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10, !prof !3

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %14 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %14, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallStats"** %11, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallTimer"* %12, i32 540) #6
  br label %16

16:                                               ; preds = %3, %10
  %17 = load atomic i64, i64* @_ZZN2v88internalL32Stats_Runtime_RegExpBuildIndicesEiPmPNS0_7IsolateEE28trace_event_unique_atomic955 monotonic, align 8
  %18 = inttoptr i64 %17 to i8*
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %22 = bitcast %"class.v8::TracingController"* %21 to i8* (%"class.v8::TracingController"*, i8*)***
  %23 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %23, i64 2
  %25 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, align 8
  %26 = call i8* %25(%"class.v8::TracingController"* %21, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0)) #6
  %27 = ptrtoint i8* %26 to i64
  store atomic volatile i64 %27, i64* @_ZZN2v88internalL32Stats_Runtime_RegExpBuildIndicesEiPmPNS0_7IsolateEE28trace_event_unique_atomic955 monotonic, align 8
  br label %28

28:                                               ; preds = %16, %20
  %29 = phi i8* [ %18, %16 ], [ %26, %20 ]
  %30 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #6
  %31 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %32 = load atomic i8, i8* %29 monotonic, align 1
  %33 = and i8 %32, 5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %66, label %35

35:                                               ; preds = %28
  %36 = bitcast [2 x %"class.std::__1::unique_ptr.1163"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #6
  %37 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 0, i64 16, i1 false) #6
  %38 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %39 = bitcast %"class.v8::TracingController"* %38 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)***
  %40 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)** %40, i64 3
  %42 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)** %41, align 8
  %43 = call i64 %42(%"class.v8::TracingController"* %38, i8 signext 88, i8* %29, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.19, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1163"* nonnull %37, i32 0) #6
  %44 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %45 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  %46 = icmp eq %"class.v8::ConvertableToTraceFormat"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %35
  %48 = bitcast %"class.v8::ConvertableToTraceFormat"* %45 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %49 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %49, i64 1
  %51 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, align 8
  call void %51(%"class.v8::ConvertableToTraceFormat"* nonnull %45) #6
  br label %52

52:                                               ; preds = %47, %35
  %53 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  %55 = icmp eq %"class.v8::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.v8::ConvertableToTraceFormat"* %54 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.v8::ConvertableToTraceFormat"* nonnull %54) #6
  br label %61

61:                                               ; preds = %52, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #6
  %62 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, i64 0, i32 0
  store i8* %29, i8** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.19, i64 0, i64 0), i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %43, i64* %65, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  br label %66

66:                                               ; preds = %28, %61
  %67 = ptrtoint i64* %1 to i64
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %69 = bitcast %"struct.v8::internal::HandleScopeData"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %72 = load i64*, i64** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %74 = load i32, i32* %73, align 8
  %75 = add nsw i32 %74, 1
  store i32 %75, i32* %73, align 8
  %76 = add i64 %67, -8
  %77 = inttoptr i64 %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = and i64 %78, 1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %92, label %81, !prof !4

81:                                               ; preds = %66
  %82 = and i64 %78, -4294967296
  %83 = add i64 %78, -1
  %84 = inttoptr i64 %83 to i32*
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = zext i32 %85 to i64
  %87 = or i64 %82, %86
  %88 = add i64 %87, 7
  %89 = inttoptr i64 %88 to i16*
  %90 = load atomic i16, i16* %89 monotonic, align 2
  %91 = icmp eq i16 %90, 119
  br i1 %91, label %93, label %92, !prof !3

92:                                               ; preds = %81, %66
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.20, i64 0, i64 0)) #18
  unreachable

93:                                               ; preds = %81
  %94 = add i64 %67, -16
  %95 = inttoptr i64 %94 to i64*
  %96 = call i64* @_ZN2v88internal21JSRegExpResultIndices12BuildIndicesEPNS0_7IsolateENS0_6HandleINS0_15RegExpMatchInfoEEENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %2, i64* %77, i64* %95) #6
  %97 = load i64, i64* %96, align 8
  %98 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %93
  %100 = inttoptr i64 %70 to i64*
  %101 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %68, i64 0, i32 0
  %102 = load i64*, i64** %101, align 8
  store i64 %70, i64* %69, align 8
  %103 = load i32, i32* %73, align 8
  %104 = add nsw i32 %103, -1
  store i32 %104, i32* %73, align 8
  %105 = load i64*, i64** %71, align 8
  %106 = icmp eq i64* %105, %72
  br i1 %106, label %109, label %107

107:                                              ; preds = %99
  store i64* %72, i64** %71, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %108 = load i64*, i64** %101, align 8
  br label %109

109:                                              ; preds = %107, %99
  %110 = phi i64* [ %108, %107 ], [ %100, %99 ]
  %111 = phi i64* [ %72, %107 ], [ %102, %99 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %110, i64* %111) #6
  br label %112

112:                                              ; preds = %93, %109
  %113 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %114 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %113, null
  br i1 %114, label %131, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %117 = load i8*, i8** %116, align 8
  %118 = load atomic i8, i8* %117 monotonic, align 1
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %131, label %120

120:                                              ; preds = %115
  %121 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %122 = load i8*, i8** %116, align 8
  %123 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %124 = load i8*, i8** %123, align 8
  %125 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"class.v8::TracingController"* %121 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %128 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %128, i64 5
  %130 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %129, align 8
  call void %130(%"class.v8::TracingController"* %121, i8* %122, i8* %124, i64 %126) #6
  br label %131

131:                                              ; preds = %112, %115, %120
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #6
  %132 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %133 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %132, align 8
  %134 = icmp eq %"class.v8::internal::RuntimeCallStats"* %133, null
  br i1 %134, label %137, label %135, !prof !3

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %133, %"class.v8::internal::RuntimeCallTimer"* %136) #6
  br label %137

137:                                              ; preds = %131, %135
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #6
  ret i64 %97
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal26Runtime_RegExpExecMultipleEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::FixedArray", align 8
  %6 = alloca %"class.v8::internal::RegExpGlobalCache", align 8
  %7 = alloca %"class.v8::internal::FixedArrayBuilder", align 8
  %8 = alloca %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", align 8
  %9 = alloca %"class.v8::internal::FixedArray", align 8
  %10 = alloca %"class.v8::internal::RegExpGlobalCache", align 8
  %11 = alloca %"class.v8::internal::FixedArrayBuilder", align 8
  %12 = alloca %"class.std::__1::function", align 8
  %13 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1153", %"struct.std::__1::atomic.1153"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15, !prof !3

15:                                               ; preds = %3
  %16 = tail call fastcc i64 @_ZN2v88internalL32Stats_Runtime_RegExpExecMultipleEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %1413

17:                                               ; preds = %3
  %18 = ptrtoint i64* %1 to i64
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %20 = bitcast %"struct.v8::internal::HandleScopeData"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %24, align 8
  %27 = load i64, i64* %1, align 8
  %28 = and i64 %27, 1
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %41, label %30, !prof !4

30:                                               ; preds = %17
  %31 = and i64 %27, -4294967296
  %32 = add i64 %27, -1
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %31, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = icmp eq i16 %39, 1102
  br i1 %40, label %42, label %41, !prof !3

41:                                               ; preds = %30, %17
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0)) #18
  unreachable

42:                                               ; preds = %30
  %43 = add i64 %18, -8
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, 1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %59, label %48, !prof !4

48:                                               ; preds = %42
  %49 = and i64 %45, -4294967296
  %50 = add i64 %45, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %49, %53
  %55 = add i64 %54, 7
  %56 = inttoptr i64 %55 to i16*
  %57 = load atomic i16, i16* %56 monotonic, align 2
  %58 = icmp ult i16 %57, 64
  br i1 %58, label %60, label %59, !prof !3

59:                                               ; preds = %48, %42
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

60:                                               ; preds = %48
  %61 = add i64 %18, -16
  %62 = inttoptr i64 %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = and i64 %63, 1
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %77, label %66, !prof !4

66:                                               ; preds = %60
  %67 = and i64 %63, -4294967296
  %68 = add i64 %63, -1
  %69 = inttoptr i64 %68 to i32*
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = zext i32 %70 to i64
  %72 = or i64 %67, %71
  %73 = add i64 %72, 7
  %74 = inttoptr i64 %73 to i16*
  %75 = load atomic i16, i16* %74 monotonic, align 2
  %76 = icmp eq i16 %75, 119
  br i1 %76, label %78, label %77, !prof !3

77:                                               ; preds = %66, %60
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.23, i64 0, i64 0)) #18
  unreachable

78:                                               ; preds = %66
  %79 = add i64 %18, -24
  %80 = inttoptr i64 %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = and i64 %81, 1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %95, label %84, !prof !4

84:                                               ; preds = %78
  %85 = and i64 %81, -4294967296
  %86 = add i64 %81, -1
  %87 = inttoptr i64 %86 to i32*
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = zext i32 %88 to i64
  %90 = or i64 %85, %89
  %91 = add i64 %90, 7
  %92 = inttoptr i64 %91 to i16*
  %93 = load atomic i16, i16* %92 monotonic, align 2
  %94 = icmp eq i16 %93, 1085
  br i1 %94, label %96, label %95, !prof !3

95:                                               ; preds = %84, %78
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i64 0, i64 0)) #18
  unreachable

96:                                               ; preds = %84
  %97 = load atomic i32, i32* %87 monotonic, align 4
  %98 = zext i32 %97 to i64
  %99 = or i64 %85, %98
  %100 = add i64 %99, 10
  %101 = inttoptr i64 %100 to i8*
  %102 = load i8, i8* %101, align 1
  %103 = and i8 %102, -8
  %104 = icmp eq i8 %103, 8
  br i1 %104, label %106, label %105, !prof !3

105:                                              ; preds = %96
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.25, i64 0, i64 0)) #18
  unreachable

106:                                              ; preds = %96
  %107 = tail call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %44, i8 zeroext 0) #6
  %108 = load i64, i64* %1, align 8
  %109 = and i64 %108, -4294967296
  %110 = add i64 %108, 11
  %111 = inttoptr i64 %110 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = zext i32 %112 to i64
  %114 = or i64 %109, %113
  %115 = add i64 %114, 15
  %116 = inttoptr i64 %115 to i32*
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121, !prof !2

120:                                              ; preds = %106
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.26, i64 0, i64 0)) #18
  unreachable

121:                                              ; preds = %106
  %122 = and i64 %113, 1
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %147, label %124

124:                                              ; preds = %121
  %125 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %126 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %125, null
  br i1 %126, label %133, label %127

127:                                              ; preds = %124
  %128 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %125, i64 0, i32 0, i32 1
  %129 = load i8, i8* %128, align 8, !range !5
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %133, label %131

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %125, i64 0, i32 1, i64 0
  br label %141

133:                                              ; preds = %127, %124
  %134 = and i64 %114, -262144
  %135 = or i64 %134, 16
  %136 = inttoptr i64 %135 to i64*
  %137 = load i64, i64* %136, align 16
  %138 = add i64 %137, -41416
  %139 = inttoptr i64 %138 to %"class.v8::internal::Isolate"*
  %140 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %139, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %141

141:                                              ; preds = %133, %131
  %142 = phi i64* [ %140, %133 ], [ %132, %131 ]
  %143 = getelementptr inbounds i64, i64* %142, i64 4
  %144 = load i64, i64* %143, align 8
  %145 = trunc i64 %144 to i32
  %146 = icmp eq i32 %112, %145
  br i1 %146, label %152, label %147

147:                                              ; preds = %141, %121
  %148 = add i64 %114, 7
  %149 = inttoptr i64 %148 to i32*
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = ashr i32 %150, 1
  switch i32 %151, label %152 [
    i32 1, label %158
    i32 3, label %153
    i32 2, label %153
  ]

152:                                              ; preds = %147, %141
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #18
  unreachable

153:                                              ; preds = %147, %147
  %154 = add i64 %114, 39
  %155 = inttoptr i64 %154 to i32*
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = icmp ult i32 %156, 2
  br i1 %157, label %158, label %660

158:                                              ; preds = %153, %147
  %159 = load i8, i8* @_ZN2v88internal19FLAG_regexp_tier_upE, align 1, !range !5
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %198, label %161

161:                                              ; preds = %158
  br i1 %123, label %185, label %162

162:                                              ; preds = %161
  %163 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %164 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %163, null
  br i1 %164, label %171, label %165

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %163, i64 0, i32 0, i32 1
  %167 = load i8, i8* %166, align 8, !range !5
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %171, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %163, i64 0, i32 1, i64 0
  br label %179

171:                                              ; preds = %165, %162
  %172 = and i64 %114, -262144
  %173 = or i64 %172, 16
  %174 = inttoptr i64 %173 to i64*
  %175 = load i64, i64* %174, align 16
  %176 = add i64 %175, -41416
  %177 = inttoptr i64 %176 to %"class.v8::internal::Isolate"*
  %178 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %177, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %179

179:                                              ; preds = %171, %169
  %180 = phi i64* [ %178, %171 ], [ %170, %169 ]
  %181 = getelementptr inbounds i64, i64* %180, i64 4
  %182 = load i64, i64* %181, align 8
  %183 = trunc i64 %182 to i32
  %184 = icmp eq i32 %112, %183
  br i1 %184, label %198, label %185

185:                                              ; preds = %179, %161
  %186 = load atomic i32, i32* %149 monotonic, align 4
  %187 = and i32 %186, -2
  %188 = icmp eq i32 %187, 4
  br i1 %188, label %189, label %198

189:                                              ; preds = %185
  %190 = bitcast %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %190) #6
  %191 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %108, i64* %191, align 8
  %192 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %4, i64 0, i32 0
  call void @_ZN2v88internal8JSRegExp21MarkTierUpForNextExecEv(%"class.v8::internal::JSRegExp"* nonnull %192) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %190) #6
  %193 = load i8, i8* @_ZN2v88internal25FLAG_trace_regexp_tier_upE, align 1, !range !5
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %198, label %195

195:                                              ; preds = %189
  %196 = bitcast i64* %1 to i8**
  %197 = load i8*, i8** %196, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.27, i64 0, i64 0), i8* %197) #6
  br label %198

198:                                              ; preds = %195, %189, %185, %179, %158
  %199 = load i64, i64* %1, align 8
  %200 = and i64 %199, -4294967296
  %201 = add i64 %199, 11
  %202 = inttoptr i64 %201 to i32*
  %203 = load i32, i32* %202, align 4
  %204 = zext i32 %203 to i64
  %205 = or i64 %200, %204
  %206 = and i64 %204, 1
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %231, label %208

208:                                              ; preds = %198
  %209 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %210 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %209, null
  br i1 %210, label %217, label %211

211:                                              ; preds = %208
  %212 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %209, i64 0, i32 0, i32 1
  %213 = load i8, i8* %212, align 8, !range !5
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %217, label %215

215:                                              ; preds = %211
  %216 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %209, i64 0, i32 1, i64 0
  br label %225

217:                                              ; preds = %211, %208
  %218 = and i64 %205, -262144
  %219 = or i64 %218, 16
  %220 = inttoptr i64 %219 to i64*
  %221 = load i64, i64* %220, align 16
  %222 = add i64 %221, -41416
  %223 = inttoptr i64 %222 to %"class.v8::internal::Isolate"*
  %224 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %223, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %225

225:                                              ; preds = %217, %215
  %226 = phi i64* [ %224, %217 ], [ %216, %215 ]
  %227 = getelementptr inbounds i64, i64* %226, i64 4
  %228 = load i64, i64* %227, align 8
  %229 = trunc i64 %228 to i32
  %230 = icmp eq i32 %203, %229
  br i1 %230, label %241, label %231

231:                                              ; preds = %225, %198
  %232 = add i64 %205, 7
  %233 = inttoptr i64 %232 to i32*
  %234 = load atomic i32, i32* %233 monotonic, align 4
  %235 = ashr i32 %234, 1
  switch i32 %235, label %241 [
    i32 1, label %242
    i32 3, label %236
    i32 2, label %236
  ]

236:                                              ; preds = %231, %231
  %237 = add i64 %205, 39
  %238 = inttoptr i64 %237 to i32*
  %239 = load atomic i32, i32* %238 monotonic, align 4
  %240 = ashr i32 %239, 1
  br label %242

241:                                              ; preds = %231, %225
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #18
  unreachable

242:                                              ; preds = %236, %231
  %243 = phi i32 [ %240, %236 ], [ 0, %231 ]
  %244 = load i64, i64* %107, align 8
  %245 = add i64 %244, 7
  %246 = inttoptr i64 %245 to i32*
  %247 = load i32, i32* %246, align 4
  %248 = icmp sgt i32 %247, 4096
  br i1 %248, label %249, label %395

249:                                              ; preds = %242
  %250 = bitcast %"class.v8::internal::FixedArray"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %250) #6
  %251 = getelementptr inbounds %"class.v8::internal::FixedArray", %"class.v8::internal::FixedArray"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %251, align 8
  %252 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 2
  %253 = load i32, i32* %202, align 4
  %254 = zext i32 %253 to i64
  %255 = or i64 %200, %254
  %256 = call i64 @_ZN2v88internal18RegExpResultsCache6LookupEPNS0_4HeapENS0_6StringENS0_6ObjectEPNS0_10FixedArrayENS1_16ResultsCacheTypeE(%"class.v8::internal::Heap"* %252, i64 %244, i64 %255, %"class.v8::internal::FixedArray"* nonnull %5, i32 0) #6
  %257 = and i64 %256, 1
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %392, label %259

259:                                              ; preds = %249
  %260 = and i64 %256, -4294967296
  %261 = add i64 %256, -1
  %262 = inttoptr i64 %261 to i32*
  %263 = load atomic i32, i32* %262 monotonic, align 4
  %264 = zext i32 %263 to i64
  %265 = or i64 %260, %264
  %266 = add i64 %265, 7
  %267 = inttoptr i64 %266 to i16*
  %268 = load atomic i16, i16* %267 monotonic, align 2
  %269 = add i16 %268, -119
  %270 = icmp ult i16 %269, 13
  br i1 %270, label %271, label %392

271:                                              ; preds = %259
  %272 = shl nsw i32 %243, 1
  %273 = add i32 %272, 2
  %274 = sext i32 %273 to i64
  %275 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %274, i64 4) #6
  %276 = extractvalue { i64, i1 } %275, 1
  %277 = extractvalue { i64, i1 } %275, 0
  %278 = select i1 %276, i64 -1, i64 %277
  %279 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %278, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #20
  %280 = icmp eq i8* %279, null
  br i1 %280, label %281, label %290

281:                                              ; preds = %271
  %282 = call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #6
  %283 = bitcast %"class.v8::Platform"* %282 to void (%"class.v8::Platform"*)***
  %284 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %283, align 8
  %285 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %284, i64 3
  %286 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %285, align 8
  call void %286(%"class.v8::Platform"* %282) #6
  %287 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %278, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #20
  %288 = icmp eq i8* %287, null
  br i1 %288, label %289, label %290

289:                                              ; preds = %281
  call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0)) #18
  unreachable

290:                                              ; preds = %281, %271
  %291 = phi i8* [ %287, %281 ], [ %279, %271 ]
  %292 = bitcast i8* %291 to i32*
  %293 = icmp sgt i32 %273, 0
  br i1 %293, label %294, label %298

294:                                              ; preds = %290
  %295 = zext i32 %273 to i64
  %296 = load i64, i64* %251, align 8
  %297 = add i64 %296, 7
  br label %371

298:                                              ; preds = %371, %290
  %299 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %300 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %299, align 8
  %301 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %300, null
  br i1 %301, label %304, label %302

302:                                              ; preds = %298
  %303 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %300, i64 %256) #6
  br label %316

304:                                              ; preds = %298
  %305 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %306 = load i64*, i64** %305, align 8
  %307 = load i64*, i64** %22, align 8
  %308 = icmp eq i64* %306, %307
  br i1 %308, label %309, label %311

309:                                              ; preds = %304
  %310 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %311

311:                                              ; preds = %309, %304
  %312 = phi i64* [ %310, %309 ], [ %306, %304 ]
  %313 = ptrtoint i64* %312 to i64
  %314 = add i64 %313, 8
  %315 = inttoptr i64 %314 to i64*
  store i64* %315, i64** %305, align 8
  store i64 %256, i64* %312, align 8
  br label %316

316:                                              ; preds = %311, %302
  %317 = phi i64* [ %303, %302 ], [ %312, %311 ]
  %318 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %319 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 12
  %320 = call i64* @_ZN2v88internal7Factory21CopyFixedArrayWithMapENS0_6HandleINS0_10FixedArrayEEENS2_INS0_3MapEEE(%"class.v8::internal::Factory"* %318, i64* %317, i64* %319) #6
  %321 = load i64, i64* %320, align 8
  %322 = add i64 %321, 3
  %323 = inttoptr i64 %322 to i32*
  %324 = load i32, i32* %323, align 4
  %325 = ashr i32 %324, 1
  call void @_ZN2v88internal8JSObject24EnsureCanContainElementsENS0_6HandleIS1_EENS2_INS0_14FixedArrayBaseEEEjNS0_18EnsureElementsModeE(i64* %80, i64* %320, i32 %325, i32 1) #6
  %326 = load i64, i64* %80, align 8
  %327 = load i64, i64* %320, align 8
  %328 = add i64 %326, 7
  %329 = inttoptr i64 %328 to i32*
  %330 = trunc i64 %327 to i32
  store atomic volatile i32 %330, i32* %329 monotonic, align 4
  %331 = and i64 %327, 1
  %332 = icmp eq i64 %331, 0
  br i1 %332, label %344, label %333

333:                                              ; preds = %316
  %334 = and i64 %326, -262144
  %335 = or i64 %334, 8
  %336 = inttoptr i64 %335 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = and i64 %337, 262144
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %344, label %340

340:                                              ; preds = %333
  %341 = or i64 %334, 16
  %342 = inttoptr i64 %341 to %"class.v8::internal::Heap"**
  %343 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %342, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %343, i64 %326, i64 %328, i64 %327) #6
  br label %344

344:                                              ; preds = %340, %333, %316
  %345 = and i64 %327, -262144
  %346 = or i64 %345, 8
  %347 = inttoptr i64 %346 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = and i64 %348, 24
  %350 = icmp eq i64 %349, 0
  br i1 %350, label %359, label %351

351:                                              ; preds = %344
  %352 = and i64 %326, -262144
  %353 = or i64 %352, 8
  %354 = inttoptr i64 %353 to i64*
  %355 = load i64, i64* %354, align 8
  %356 = and i64 %355, 24
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %358, label %359

358:                                              ; preds = %351
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %326, i64 %328, i64 %327) #6
  br label %359

359:                                              ; preds = %358, %351, %344
  %360 = load i64, i64* %80, align 8
  %361 = load i64, i64* %320, align 8
  %362 = add i64 %361, 3
  %363 = inttoptr i64 %362 to i32*
  %364 = load i32, i32* %363, align 4
  %365 = and i32 %364, -2
  %366 = add i64 %360, 11
  %367 = inttoptr i64 %366 to i32*
  store atomic volatile i32 %365, i32* %367 monotonic, align 4
  %368 = call i64* @_ZN2v88internal6RegExp16SetLastMatchInfoEPNS0_7IsolateENS0_6HandleINS0_15RegExpMatchInfoEEENS4_INS0_6StringEEEiPi(%"class.v8::internal::Isolate"* %2, i64* %62, i64* %107, i32 %243, i32* %292) #6
  %369 = icmp eq i8* %291, null
  br i1 %369, label %393, label %370

370:                                              ; preds = %359
  call void @_ZdaPv(i8* nonnull %291) #20
  br label %393

371:                                              ; preds = %371, %294
  %372 = phi i64 [ 0, %294 ], [ %390, %371 ]
  %373 = trunc i64 %372 to i32
  %374 = shl i32 %373, 2
  %375 = sext i32 %374 to i64
  %376 = add i64 %297, %375
  %377 = inttoptr i64 %376 to i32*
  %378 = load atomic i32, i32* %377 monotonic, align 4
  %379 = ashr i32 %378, 1
  %380 = getelementptr inbounds i32, i32* %292, i64 %372
  store i32 %379, i32* %380, align 4
  %381 = or i64 %372, 1
  %382 = trunc i64 %381 to i32
  %383 = shl i32 %382, 2
  %384 = sext i32 %383 to i64
  %385 = add i64 %297, %384
  %386 = inttoptr i64 %385 to i32*
  %387 = load atomic i32, i32* %386 monotonic, align 4
  %388 = ashr i32 %387, 1
  %389 = getelementptr inbounds i32, i32* %292, i64 %381
  store i32 %388, i32* %389, align 4
  %390 = add nuw nsw i64 %372, 2
  %391 = icmp eq i64 %390, %295
  br i1 %391, label %298, label %371

392:                                              ; preds = %259, %249
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %250) #6
  br label %395

393:                                              ; preds = %370, %359
  %394 = load i64, i64* %80, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %250) #6
  br label %1397

395:                                              ; preds = %392, %242
  %396 = bitcast %"class.v8::internal::RegExpGlobalCache"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %396) #6
  call void @_ZN2v88internal17RegExpGlobalCacheC1ENS0_6HandleINS0_8JSRegExpEEENS2_INS0_6StringEEEPNS0_7IsolateE(%"class.v8::internal::RegExpGlobalCache"* nonnull %6, i64* %1, i64* %107, %"class.v8::internal::Isolate"* %2) #6
  %397 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %6, i64 0, i32 0
  %398 = load i32, i32* %397, align 8
  %399 = icmp slt i32 %398, 0
  br i1 %399, label %400, label %403

400:                                              ; preds = %395
  %401 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %402 = load i64, i64* %401, align 8
  br label %658

403:                                              ; preds = %395
  %404 = load i64, i64* %80, align 8
  %405 = and i64 %404, -4294967296
  %406 = add i64 %404, 7
  %407 = inttoptr i64 %406 to i32*
  %408 = load i32, i32* %407, align 4
  %409 = zext i32 %408 to i64
  %410 = or i64 %405, %409
  %411 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %412 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %411, align 8
  %413 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %412, null
  br i1 %413, label %417, label %414

414:                                              ; preds = %403
  %415 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %412, i64 %410) #6
  %416 = load i64, i64* %415, align 8
  br label %429

417:                                              ; preds = %403
  %418 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %419 = load i64*, i64** %418, align 8
  %420 = load i64*, i64** %22, align 8
  %421 = icmp eq i64* %419, %420
  br i1 %421, label %422, label %424

422:                                              ; preds = %417
  %423 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %424

424:                                              ; preds = %422, %417
  %425 = phi i64* [ %423, %422 ], [ %419, %417 ]
  %426 = ptrtoint i64* %425 to i64
  %427 = add i64 %426, 8
  %428 = inttoptr i64 %427 to i64*
  store i64* %428, i64** %418, align 8
  store i64 %410, i64* %425, align 8
  br label %429

429:                                              ; preds = %424, %414
  %430 = phi i64 [ %416, %414 ], [ %410, %424 ]
  %431 = phi i64* [ %415, %414 ], [ %425, %424 ]
  %432 = add i64 %430, 3
  %433 = inttoptr i64 %432 to i32*
  %434 = load i32, i32* %433, align 4
  %435 = icmp slt i32 %434, 32
  br i1 %435, label %436, label %439

436:                                              ; preds = %429
  %437 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %438 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE22NewFixedArrayWithHolesEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %437, i32 16, i8 zeroext 0) #6
  br label %439

439:                                              ; preds = %436, %429
  %440 = phi i64* [ %438, %436 ], [ %431, %429 ]
  %441 = bitcast %"class.v8::internal::FixedArrayBuilder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %441) #6
  call void @_ZN2v88internal17FixedArrayBuilderC1ENS0_6HandleINS0_10FixedArrayEEE(%"class.v8::internal::FixedArrayBuilder"* nonnull %7, i64* %440) #6
  %442 = call i32* @_ZN2v88internal17RegExpGlobalCache9FetchNextEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %6) #6
  %443 = icmp eq i32* %442, null
  br i1 %443, label %553, label %444

444:                                              ; preds = %439
  %445 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %446 = icmp eq %"class.v8::internal::Isolate"* %2, null
  %447 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %19, i64 0, i32 0
  br i1 %446, label %448, label %494

448:                                              ; preds = %444, %488
  %449 = phi i32* [ %492, %488 ], [ %442, %444 ]
  %450 = phi i32 [ %472, %488 ], [ 0, %444 ]
  %451 = phi i8 [ %490, %488 ], [ 1, %444 ]
  %452 = load i32, i32* %449, align 4
  call void @_ZN2v88internal17FixedArrayBuilder14EnsureCapacityEPNS0_7IsolateEi(%"class.v8::internal::FixedArrayBuilder"* nonnull %7, %"class.v8::internal::Isolate"* null, i32 5) #6
  %453 = icmp sgt i32 %452, %450
  br i1 %453, label %454, label %470

454:                                              ; preds = %448
  %455 = sub nsw i32 %452, %450
  %456 = icmp ult i32 %455, 2048
  %457 = icmp ult i32 %450, 524288
  %458 = and i1 %457, %456
  br i1 %458, label %463, label %459

459:                                              ; preds = %454
  %460 = sub nsw i32 0, %455
  %461 = sext i32 %460 to i64
  %462 = shl nsw i64 %461, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* nonnull %7, i64 %462) #6
  br label %466

463:                                              ; preds = %454
  %464 = shl i32 %450, 11
  %465 = or i32 %455, %464
  br label %466

466:                                              ; preds = %459, %463
  %467 = phi i32 [ %465, %463 ], [ %450, %459 ]
  %468 = sext i32 %467 to i64
  %469 = shl nsw i64 %468, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* nonnull %7, i64 %469) #6
  br label %470

470:                                              ; preds = %466, %448
  %471 = getelementptr inbounds i32, i32* %449, i64 1
  %472 = load i32, i32* %471, align 4
  %473 = load i32, i32* %24, align 8
  %474 = add nsw i32 %473, 1
  store i32 %474, i32* %24, align 8
  %475 = and i8 %451, 1
  %476 = icmp eq i8 %475, 0
  br i1 %476, label %485, label %477

477:                                              ; preds = %470
  %478 = icmp eq i32 %452, 0
  br i1 %478, label %479, label %485

479:                                              ; preds = %477
  %480 = load i64, i64* %107, align 8
  %481 = add i64 %480, 7
  %482 = inttoptr i64 %481 to i32*
  %483 = load i32, i32* %482, align 4
  %484 = icmp eq i32 %483, %472
  br i1 %484, label %488, label %485

485:                                              ; preds = %470, %477, %479
  %486 = phi i8 [ 0, %479 ], [ 0, %477 ], [ %451, %470 ]
  %487 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %445, i64* %107, i32 %452, i32 %472) #6
  br label %488

488:                                              ; preds = %485, %479
  %489 = phi i64* [ %107, %479 ], [ %487, %485 ]
  %490 = phi i8 [ 0, %479 ], [ %486, %485 ]
  %491 = load i64, i64* %489, align 8
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_6ObjectE(%"class.v8::internal::FixedArrayBuilder"* nonnull %7, i64 %491) #6
  %492 = call i32* @_ZN2v88internal17RegExpGlobalCache9FetchNextEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %6) #6
  %493 = icmp eq i32* %492, null
  br i1 %493, label %553, label %448

494:                                              ; preds = %444, %548
  %495 = phi i32* [ %551, %548 ], [ %442, %444 ]
  %496 = phi i32 [ %518, %548 ], [ 0, %444 ]
  %497 = phi i8 [ %538, %548 ], [ 1, %444 ]
  %498 = load i32, i32* %495, align 4
  call void @_ZN2v88internal17FixedArrayBuilder14EnsureCapacityEPNS0_7IsolateEi(%"class.v8::internal::FixedArrayBuilder"* nonnull %7, %"class.v8::internal::Isolate"* nonnull %2, i32 5) #6
  %499 = icmp sgt i32 %498, %496
  br i1 %499, label %500, label %516

500:                                              ; preds = %494
  %501 = sub nsw i32 %498, %496
  %502 = icmp ult i32 %501, 2048
  %503 = icmp ult i32 %496, 524288
  %504 = and i1 %503, %502
  br i1 %504, label %505, label %508

505:                                              ; preds = %500
  %506 = shl i32 %496, 11
  %507 = or i32 %501, %506
  br label %512

508:                                              ; preds = %500
  %509 = sub nsw i32 0, %501
  %510 = sext i32 %509 to i64
  %511 = shl nsw i64 %510, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* nonnull %7, i64 %511) #6
  br label %512

512:                                              ; preds = %505, %508
  %513 = phi i32 [ %496, %508 ], [ %507, %505 ]
  %514 = sext i32 %513 to i64
  %515 = shl nsw i64 %514, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* nonnull %7, i64 %515) #6
  br label %516

516:                                              ; preds = %512, %494
  %517 = getelementptr inbounds i32, i32* %495, i64 1
  %518 = load i32, i32* %517, align 4
  %519 = load i64, i64* %20, align 8
  %520 = load i64*, i64** %22, align 8
  %521 = load i32, i32* %24, align 8
  %522 = add nsw i32 %521, 1
  store i32 %522, i32* %24, align 8
  %523 = and i8 %497, 1
  %524 = icmp eq i8 %523, 0
  br i1 %524, label %533, label %525

525:                                              ; preds = %516
  %526 = icmp eq i32 %498, 0
  br i1 %526, label %527, label %533

527:                                              ; preds = %525
  %528 = load i64, i64* %107, align 8
  %529 = add i64 %528, 7
  %530 = inttoptr i64 %529 to i32*
  %531 = load i32, i32* %530, align 4
  %532 = icmp eq i32 %531, %518
  br i1 %532, label %536, label %533

533:                                              ; preds = %525, %527, %516
  %534 = phi i8 [ %497, %516 ], [ 0, %527 ], [ 0, %525 ]
  %535 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* nonnull %445, i64* %107, i32 %498, i32 %518) #6
  br label %536

536:                                              ; preds = %533, %527
  %537 = phi i64* [ %107, %527 ], [ %535, %533 ]
  %538 = phi i8 [ 0, %527 ], [ %534, %533 ]
  %539 = load i64, i64* %537, align 8
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_6ObjectE(%"class.v8::internal::FixedArrayBuilder"* nonnull %7, i64 %539) #6
  %540 = inttoptr i64 %519 to i64*
  %541 = load i64*, i64** %447, align 8
  store i64 %519, i64* %20, align 8
  %542 = load i32, i32* %24, align 8
  %543 = add nsw i32 %542, -1
  store i32 %543, i32* %24, align 8
  %544 = load i64*, i64** %22, align 8
  %545 = icmp eq i64* %544, %520
  br i1 %545, label %548, label %546

546:                                              ; preds = %536
  store i64* %520, i64** %22, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %547 = load i64*, i64** %447, align 8
  br label %548

548:                                              ; preds = %546, %536
  %549 = phi i64* [ %547, %546 ], [ %540, %536 ]
  %550 = phi i64* [ %520, %546 ], [ %541, %536 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %549, i64* %550) #6
  %551 = call i32* @_ZN2v88internal17RegExpGlobalCache9FetchNextEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %6) #6
  %552 = icmp eq i32* %551, null
  br i1 %552, label %553, label %494

553:                                              ; preds = %548, %488, %439
  %554 = phi i32 [ 0, %439 ], [ %472, %488 ], [ %518, %548 ]
  %555 = phi i32 [ -1, %439 ], [ %452, %488 ], [ %498, %548 ]
  %556 = load i32, i32* %397, align 8
  %557 = icmp slt i32 %556, 0
  br i1 %557, label %558, label %560

558:                                              ; preds = %553
  %559 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %655

560:                                              ; preds = %553
  %561 = icmp sgt i32 %555, -1
  br i1 %561, label %562, label %653

562:                                              ; preds = %560
  %563 = icmp sgt i32 %247, %554
  br i1 %563, label %564, label %580

564:                                              ; preds = %562
  %565 = sub nsw i32 %247, %554
  %566 = icmp ult i32 %565, 2048
  %567 = icmp ult i32 %554, 524288
  %568 = and i1 %567, %566
  br i1 %568, label %569, label %572

569:                                              ; preds = %564
  %570 = shl i32 %554, 11
  %571 = or i32 %565, %570
  br label %576

572:                                              ; preds = %564
  %573 = sub nsw i32 0, %565
  %574 = sext i32 %573 to i64
  %575 = shl nsw i64 %574, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* nonnull %7, i64 %575) #6
  br label %576

576:                                              ; preds = %569, %572
  %577 = phi i32 [ %554, %572 ], [ %571, %569 ]
  %578 = sext i32 %577 to i64
  %579 = shl nsw i64 %578, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* nonnull %7, i64 %579) #6
  br label %580

580:                                              ; preds = %576, %562
  %581 = call i32* @_ZN2v88internal17RegExpGlobalCache19LastSuccessfulMatchEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %6) #6
  %582 = call i64* @_ZN2v88internal6RegExp16SetLastMatchInfoEPNS0_7IsolateENS0_6HandleINS0_15RegExpMatchInfoEEENS4_INS0_6StringEEEiPi(%"class.v8::internal::Isolate"* %2, i64* %62, i64* %107, i32 %243, i32* %581) #6
  br i1 %248, label %583, label %651

583:                                              ; preds = %580
  %584 = shl nsw i32 %243, 1
  %585 = add i32 %584, 2
  %586 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %587 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %588 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %587, i32 %585, i8 zeroext 0) #6
  %589 = call i32* @_ZN2v88internal17RegExpGlobalCache19LastSuccessfulMatchEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %6) #6
  %590 = icmp sgt i32 %585, 0
  br i1 %590, label %591, label %593

591:                                              ; preds = %583
  %592 = zext i32 %585 to i64
  br label %626

593:                                              ; preds = %626, %583
  %594 = getelementptr inbounds %"class.v8::internal::FixedArrayBuilder", %"class.v8::internal::FixedArrayBuilder"* %7, i64 0, i32 0, i32 0, i32 0
  %595 = load i64*, i64** %594, align 8
  %596 = getelementptr inbounds %"class.v8::internal::FixedArrayBuilder", %"class.v8::internal::FixedArrayBuilder"* %7, i64 0, i32 1
  %597 = load i32, i32* %596, align 8
  %598 = call i64* @_ZN2v88internal10FixedArray13ShrinkOrEmptyEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"* %2, i64* %595, i32 %597) #6
  %599 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 12
  %600 = call i64* @_ZN2v88internal7Factory21CopyFixedArrayWithMapENS0_6HandleINS0_10FixedArrayEEENS2_INS0_3MapEEE(%"class.v8::internal::Factory"* %586, i64* %598, i64* %599) #6
  %601 = load i64, i64* %1, align 8
  %602 = and i64 %601, -4294967296
  %603 = add i64 %601, 11
  %604 = inttoptr i64 %603 to i32*
  %605 = load i32, i32* %604, align 4
  %606 = zext i32 %605 to i64
  %607 = or i64 %602, %606
  %608 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %411, align 8
  %609 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %608, null
  br i1 %609, label %612, label %610

610:                                              ; preds = %593
  %611 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %608, i64 %607) #6
  br label %624

612:                                              ; preds = %593
  %613 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %614 = load i64*, i64** %613, align 8
  %615 = load i64*, i64** %22, align 8
  %616 = icmp eq i64* %614, %615
  br i1 %616, label %617, label %619

617:                                              ; preds = %612
  %618 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %619

619:                                              ; preds = %617, %612
  %620 = phi i64* [ %618, %617 ], [ %614, %612 ]
  %621 = ptrtoint i64* %620 to i64
  %622 = add i64 %621, 8
  %623 = inttoptr i64 %622 to i64*
  store i64* %623, i64** %613, align 8
  store i64 %607, i64* %620, align 8
  br label %624

624:                                              ; preds = %619, %610
  %625 = phi i64* [ %611, %610 ], [ %620, %619 ]
  call void @_ZN2v88internal18RegExpResultsCache5EnterEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS4_INS0_6ObjectEEENS4_INS0_10FixedArrayEEESA_NS1_16ResultsCacheTypeE(%"class.v8::internal::Isolate"* %2, i64* %107, i64* %625, i64* %600, i64* %588, i32 0) #6
  br label %651

626:                                              ; preds = %626, %591
  %627 = phi i64 [ 0, %591 ], [ %649, %626 ]
  %628 = load i64, i64* %588, align 8
  %629 = getelementptr inbounds i32, i32* %589, i64 %627
  %630 = load i32, i32* %629, align 4
  %631 = shl i32 %630, 1
  %632 = trunc i64 %627 to i32
  %633 = shl i32 %632, 2
  %634 = sext i32 %633 to i64
  %635 = add i64 %628, 7
  %636 = add i64 %635, %634
  %637 = inttoptr i64 %636 to i32*
  store atomic volatile i32 %631, i32* %637 monotonic, align 4
  %638 = or i64 %627, 1
  %639 = load i64, i64* %588, align 8
  %640 = getelementptr inbounds i32, i32* %589, i64 %638
  %641 = load i32, i32* %640, align 4
  %642 = shl i32 %641, 1
  %643 = trunc i64 %638 to i32
  %644 = shl i32 %643, 2
  %645 = sext i32 %644 to i64
  %646 = add i64 %639, 7
  %647 = add i64 %646, %645
  %648 = inttoptr i64 %647 to i32*
  store atomic volatile i32 %642, i32* %648 monotonic, align 4
  %649 = add nuw nsw i64 %627, 2
  %650 = icmp eq i64 %649, %592
  br i1 %650, label %593, label %626

651:                                              ; preds = %624, %580
  %652 = call i64* @_ZN2v88internal17FixedArrayBuilder9ToJSArrayENS0_6HandleINS0_7JSArrayEEE(%"class.v8::internal::FixedArrayBuilder"* nonnull %7, i64* %80) #6
  br label %655

653:                                              ; preds = %560
  %654 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 6
  br label %655

655:                                              ; preds = %653, %651, %558
  %656 = phi i64* [ %559, %558 ], [ %652, %651 ], [ %654, %653 ]
  %657 = load i64, i64* %656, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %441) #6
  br label %658

658:                                              ; preds = %655, %400
  %659 = phi i64 [ %402, %400 ], [ %657, %655 ]
  call void @_ZN2v88internal17RegExpGlobalCacheD1Ev(%"class.v8::internal::RegExpGlobalCache"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %396) #6
  br label %1397

660:                                              ; preds = %153
  %661 = load i8, i8* @_ZN2v88internal19FLAG_regexp_tier_upE, align 1, !range !5
  %662 = icmp eq i8 %661, 0
  br i1 %662, label %700, label %663

663:                                              ; preds = %660
  br i1 %123, label %687, label %664

664:                                              ; preds = %663
  %665 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %666 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %665, null
  br i1 %666, label %673, label %667

667:                                              ; preds = %664
  %668 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %665, i64 0, i32 0, i32 1
  %669 = load i8, i8* %668, align 8, !range !5
  %670 = icmp eq i8 %669, 0
  br i1 %670, label %673, label %671

671:                                              ; preds = %667
  %672 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %665, i64 0, i32 1, i64 0
  br label %681

673:                                              ; preds = %667, %664
  %674 = and i64 %114, -262144
  %675 = or i64 %674, 16
  %676 = inttoptr i64 %675 to i64*
  %677 = load i64, i64* %676, align 16
  %678 = add i64 %677, -41416
  %679 = inttoptr i64 %678 to %"class.v8::internal::Isolate"*
  %680 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %679, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %681

681:                                              ; preds = %673, %671
  %682 = phi i64* [ %680, %673 ], [ %672, %671 ]
  %683 = getelementptr inbounds i64, i64* %682, i64 4
  %684 = load i64, i64* %683, align 8
  %685 = trunc i64 %684 to i32
  %686 = icmp eq i32 %112, %685
  br i1 %686, label %700, label %687

687:                                              ; preds = %681, %663
  %688 = load atomic i32, i32* %149 monotonic, align 4
  %689 = and i32 %688, -2
  %690 = icmp eq i32 %689, 4
  br i1 %690, label %691, label %700

691:                                              ; preds = %687
  %692 = bitcast %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %692) #6
  %693 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %108, i64* %693, align 8
  %694 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %8, i64 0, i32 0
  call void @_ZN2v88internal8JSRegExp21MarkTierUpForNextExecEv(%"class.v8::internal::JSRegExp"* nonnull %694) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %692) #6
  %695 = load i8, i8* @_ZN2v88internal25FLAG_trace_regexp_tier_upE, align 1, !range !5
  %696 = icmp eq i8 %695, 0
  br i1 %696, label %700, label %697

697:                                              ; preds = %691
  %698 = bitcast i64* %1 to i8**
  %699 = load i8*, i8** %698, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.27, i64 0, i64 0), i8* %699) #6
  br label %700

700:                                              ; preds = %697, %691, %687, %681, %660
  %701 = load i64, i64* %1, align 8
  %702 = and i64 %701, -4294967296
  %703 = add i64 %701, 11
  %704 = inttoptr i64 %703 to i32*
  %705 = load i32, i32* %704, align 4
  %706 = zext i32 %705 to i64
  %707 = or i64 %702, %706
  %708 = and i64 %706, 1
  %709 = icmp eq i64 %708, 0
  br i1 %709, label %733, label %710

710:                                              ; preds = %700
  %711 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %712 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %711, null
  br i1 %712, label %719, label %713

713:                                              ; preds = %710
  %714 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %711, i64 0, i32 0, i32 1
  %715 = load i8, i8* %714, align 8, !range !5
  %716 = icmp eq i8 %715, 0
  br i1 %716, label %719, label %717

717:                                              ; preds = %713
  %718 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %711, i64 0, i32 1, i64 0
  br label %727

719:                                              ; preds = %713, %710
  %720 = and i64 %707, -262144
  %721 = or i64 %720, 16
  %722 = inttoptr i64 %721 to i64*
  %723 = load i64, i64* %722, align 16
  %724 = add i64 %723, -41416
  %725 = inttoptr i64 %724 to %"class.v8::internal::Isolate"*
  %726 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %725, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %727

727:                                              ; preds = %719, %717
  %728 = phi i64* [ %726, %719 ], [ %718, %717 ]
  %729 = getelementptr inbounds i64, i64* %728, i64 4
  %730 = load i64, i64* %729, align 8
  %731 = trunc i64 %730 to i32
  %732 = icmp eq i32 %705, %731
  br i1 %732, label %743, label %733

733:                                              ; preds = %727, %700
  %734 = add i64 %707, 7
  %735 = inttoptr i64 %734 to i32*
  %736 = load atomic i32, i32* %735 monotonic, align 4
  %737 = ashr i32 %736, 1
  switch i32 %737, label %743 [
    i32 1, label %744
    i32 3, label %738
    i32 2, label %738
  ]

738:                                              ; preds = %733, %733
  %739 = add i64 %707, 39
  %740 = inttoptr i64 %739 to i32*
  %741 = load atomic i32, i32* %740 monotonic, align 4
  %742 = ashr i32 %741, 1
  br label %744

743:                                              ; preds = %733, %727
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #18
  unreachable

744:                                              ; preds = %738, %733
  %745 = phi i32 [ %742, %738 ], [ 0, %733 ]
  %746 = load i64, i64* %107, align 8
  %747 = add i64 %746, 7
  %748 = inttoptr i64 %747 to i32*
  %749 = load i32, i32* %748, align 4
  %750 = icmp sgt i32 %749, 4096
  br i1 %750, label %751, label %897

751:                                              ; preds = %744
  %752 = bitcast %"class.v8::internal::FixedArray"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %752) #6
  %753 = getelementptr inbounds %"class.v8::internal::FixedArray", %"class.v8::internal::FixedArray"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %753, align 8
  %754 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 2
  %755 = load i32, i32* %704, align 4
  %756 = zext i32 %755 to i64
  %757 = or i64 %702, %756
  %758 = call i64 @_ZN2v88internal18RegExpResultsCache6LookupEPNS0_4HeapENS0_6StringENS0_6ObjectEPNS0_10FixedArrayENS1_16ResultsCacheTypeE(%"class.v8::internal::Heap"* %754, i64 %746, i64 %757, %"class.v8::internal::FixedArray"* nonnull %9, i32 0) #6
  %759 = and i64 %758, 1
  %760 = icmp eq i64 %759, 0
  br i1 %760, label %894, label %761

761:                                              ; preds = %751
  %762 = and i64 %758, -4294967296
  %763 = add i64 %758, -1
  %764 = inttoptr i64 %763 to i32*
  %765 = load atomic i32, i32* %764 monotonic, align 4
  %766 = zext i32 %765 to i64
  %767 = or i64 %762, %766
  %768 = add i64 %767, 7
  %769 = inttoptr i64 %768 to i16*
  %770 = load atomic i16, i16* %769 monotonic, align 2
  %771 = add i16 %770, -119
  %772 = icmp ult i16 %771, 13
  br i1 %772, label %773, label %894

773:                                              ; preds = %761
  %774 = shl nsw i32 %745, 1
  %775 = add i32 %774, 2
  %776 = sext i32 %775 to i64
  %777 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %776, i64 4) #6
  %778 = extractvalue { i64, i1 } %777, 1
  %779 = extractvalue { i64, i1 } %777, 0
  %780 = select i1 %778, i64 -1, i64 %779
  %781 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %780, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #20
  %782 = icmp eq i8* %781, null
  br i1 %782, label %783, label %792

783:                                              ; preds = %773
  %784 = call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #6
  %785 = bitcast %"class.v8::Platform"* %784 to void (%"class.v8::Platform"*)***
  %786 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %785, align 8
  %787 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %786, i64 3
  %788 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %787, align 8
  call void %788(%"class.v8::Platform"* %784) #6
  %789 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %780, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #20
  %790 = icmp eq i8* %789, null
  br i1 %790, label %791, label %792

791:                                              ; preds = %783
  call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0)) #18
  unreachable

792:                                              ; preds = %783, %773
  %793 = phi i8* [ %789, %783 ], [ %781, %773 ]
  %794 = bitcast i8* %793 to i32*
  %795 = icmp sgt i32 %775, 0
  br i1 %795, label %796, label %800

796:                                              ; preds = %792
  %797 = zext i32 %775 to i64
  %798 = load i64, i64* %753, align 8
  %799 = add i64 %798, 7
  br label %873

800:                                              ; preds = %873, %792
  %801 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %802 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %801, align 8
  %803 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %802, null
  br i1 %803, label %806, label %804

804:                                              ; preds = %800
  %805 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %802, i64 %758) #6
  br label %818

806:                                              ; preds = %800
  %807 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %808 = load i64*, i64** %807, align 8
  %809 = load i64*, i64** %22, align 8
  %810 = icmp eq i64* %808, %809
  br i1 %810, label %811, label %813

811:                                              ; preds = %806
  %812 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %813

813:                                              ; preds = %811, %806
  %814 = phi i64* [ %812, %811 ], [ %808, %806 ]
  %815 = ptrtoint i64* %814 to i64
  %816 = add i64 %815, 8
  %817 = inttoptr i64 %816 to i64*
  store i64* %817, i64** %807, align 8
  store i64 %758, i64* %814, align 8
  br label %818

818:                                              ; preds = %813, %804
  %819 = phi i64* [ %805, %804 ], [ %814, %813 ]
  %820 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %821 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 12
  %822 = call i64* @_ZN2v88internal7Factory21CopyFixedArrayWithMapENS0_6HandleINS0_10FixedArrayEEENS2_INS0_3MapEEE(%"class.v8::internal::Factory"* %820, i64* %819, i64* %821) #6
  %823 = load i64, i64* %822, align 8
  %824 = add i64 %823, 3
  %825 = inttoptr i64 %824 to i32*
  %826 = load i32, i32* %825, align 4
  %827 = ashr i32 %826, 1
  call void @_ZN2v88internal8JSObject24EnsureCanContainElementsENS0_6HandleIS1_EENS2_INS0_14FixedArrayBaseEEEjNS0_18EnsureElementsModeE(i64* %80, i64* %822, i32 %827, i32 1) #6
  %828 = load i64, i64* %80, align 8
  %829 = load i64, i64* %822, align 8
  %830 = add i64 %828, 7
  %831 = inttoptr i64 %830 to i32*
  %832 = trunc i64 %829 to i32
  store atomic volatile i32 %832, i32* %831 monotonic, align 4
  %833 = and i64 %829, 1
  %834 = icmp eq i64 %833, 0
  br i1 %834, label %846, label %835

835:                                              ; preds = %818
  %836 = and i64 %828, -262144
  %837 = or i64 %836, 8
  %838 = inttoptr i64 %837 to i64*
  %839 = load i64, i64* %838, align 8
  %840 = and i64 %839, 262144
  %841 = icmp eq i64 %840, 0
  br i1 %841, label %846, label %842

842:                                              ; preds = %835
  %843 = or i64 %836, 16
  %844 = inttoptr i64 %843 to %"class.v8::internal::Heap"**
  %845 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %844, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %845, i64 %828, i64 %830, i64 %829) #6
  br label %846

846:                                              ; preds = %842, %835, %818
  %847 = and i64 %829, -262144
  %848 = or i64 %847, 8
  %849 = inttoptr i64 %848 to i64*
  %850 = load i64, i64* %849, align 8
  %851 = and i64 %850, 24
  %852 = icmp eq i64 %851, 0
  br i1 %852, label %861, label %853

853:                                              ; preds = %846
  %854 = and i64 %828, -262144
  %855 = or i64 %854, 8
  %856 = inttoptr i64 %855 to i64*
  %857 = load i64, i64* %856, align 8
  %858 = and i64 %857, 24
  %859 = icmp eq i64 %858, 0
  br i1 %859, label %860, label %861

860:                                              ; preds = %853
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %828, i64 %830, i64 %829) #6
  br label %861

861:                                              ; preds = %860, %853, %846
  %862 = load i64, i64* %80, align 8
  %863 = load i64, i64* %822, align 8
  %864 = add i64 %863, 3
  %865 = inttoptr i64 %864 to i32*
  %866 = load i32, i32* %865, align 4
  %867 = and i32 %866, -2
  %868 = add i64 %862, 11
  %869 = inttoptr i64 %868 to i32*
  store atomic volatile i32 %867, i32* %869 monotonic, align 4
  %870 = call i64* @_ZN2v88internal6RegExp16SetLastMatchInfoEPNS0_7IsolateENS0_6HandleINS0_15RegExpMatchInfoEEENS4_INS0_6StringEEEiPi(%"class.v8::internal::Isolate"* %2, i64* %62, i64* %107, i32 %745, i32* %794) #6
  %871 = icmp eq i8* %793, null
  br i1 %871, label %895, label %872

872:                                              ; preds = %861
  call void @_ZdaPv(i8* nonnull %793) #20
  br label %895

873:                                              ; preds = %873, %796
  %874 = phi i64 [ 0, %796 ], [ %892, %873 ]
  %875 = trunc i64 %874 to i32
  %876 = shl i32 %875, 2
  %877 = sext i32 %876 to i64
  %878 = add i64 %799, %877
  %879 = inttoptr i64 %878 to i32*
  %880 = load atomic i32, i32* %879 monotonic, align 4
  %881 = ashr i32 %880, 1
  %882 = getelementptr inbounds i32, i32* %794, i64 %874
  store i32 %881, i32* %882, align 4
  %883 = or i64 %874, 1
  %884 = trunc i64 %883 to i32
  %885 = shl i32 %884, 2
  %886 = sext i32 %885 to i64
  %887 = add i64 %799, %886
  %888 = inttoptr i64 %887 to i32*
  %889 = load atomic i32, i32* %888 monotonic, align 4
  %890 = ashr i32 %889, 1
  %891 = getelementptr inbounds i32, i32* %794, i64 %883
  store i32 %890, i32* %891, align 4
  %892 = add nuw nsw i64 %874, 2
  %893 = icmp eq i64 %892, %797
  br i1 %893, label %800, label %873

894:                                              ; preds = %761, %751
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %752) #6
  br label %897

895:                                              ; preds = %872, %861
  %896 = load i64, i64* %80, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %752) #6
  br label %1397

897:                                              ; preds = %894, %744
  %898 = bitcast %"class.v8::internal::RegExpGlobalCache"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %898) #6
  call void @_ZN2v88internal17RegExpGlobalCacheC1ENS0_6HandleINS0_8JSRegExpEEENS2_INS0_6StringEEEPNS0_7IsolateE(%"class.v8::internal::RegExpGlobalCache"* nonnull %10, i64* %1, i64* %107, %"class.v8::internal::Isolate"* %2) #6
  %899 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %10, i64 0, i32 0
  %900 = load i32, i32* %899, align 8
  %901 = icmp slt i32 %900, 0
  br i1 %901, label %902, label %905

902:                                              ; preds = %897
  %903 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %904 = load i64, i64* %903, align 8
  br label %1395

905:                                              ; preds = %897
  %906 = load i64, i64* %80, align 8
  %907 = and i64 %906, -4294967296
  %908 = add i64 %906, 7
  %909 = inttoptr i64 %908 to i32*
  %910 = load i32, i32* %909, align 4
  %911 = zext i32 %910 to i64
  %912 = or i64 %907, %911
  %913 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %914 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %913, align 8
  %915 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %914, null
  br i1 %915, label %919, label %916

916:                                              ; preds = %905
  %917 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %914, i64 %912) #6
  %918 = load i64, i64* %917, align 8
  br label %931

919:                                              ; preds = %905
  %920 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %921 = load i64*, i64** %920, align 8
  %922 = load i64*, i64** %22, align 8
  %923 = icmp eq i64* %921, %922
  br i1 %923, label %924, label %926

924:                                              ; preds = %919
  %925 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %926

926:                                              ; preds = %924, %919
  %927 = phi i64* [ %925, %924 ], [ %921, %919 ]
  %928 = ptrtoint i64* %927 to i64
  %929 = add i64 %928, 8
  %930 = inttoptr i64 %929 to i64*
  store i64* %930, i64** %920, align 8
  store i64 %912, i64* %927, align 8
  br label %931

931:                                              ; preds = %926, %916
  %932 = phi i64 [ %918, %916 ], [ %912, %926 ]
  %933 = phi i64* [ %917, %916 ], [ %927, %926 ]
  %934 = add i64 %932, 3
  %935 = inttoptr i64 %934 to i32*
  %936 = load i32, i32* %935, align 4
  %937 = icmp slt i32 %936, 32
  br i1 %937, label %938, label %941

938:                                              ; preds = %931
  %939 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %940 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE22NewFixedArrayWithHolesEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %939, i32 16, i8 zeroext 0) #6
  br label %941

941:                                              ; preds = %938, %931
  %942 = phi i64* [ %940, %938 ], [ %933, %931 ]
  %943 = bitcast %"class.v8::internal::FixedArrayBuilder"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %943) #6
  call void @_ZN2v88internal17FixedArrayBuilderC1ENS0_6HandleINS0_10FixedArrayEEE(%"class.v8::internal::FixedArrayBuilder"* nonnull %11, i64* %942) #6
  %944 = call i32* @_ZN2v88internal17RegExpGlobalCache9FetchNextEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %10) #6
  %945 = icmp eq i32* %944, null
  br i1 %945, label %1290, label %946

946:                                              ; preds = %941
  %947 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %948 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %949 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %950 = icmp slt i32 %745, 1
  %951 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 4
  %952 = bitcast %"class.std::__1::function"* %12 to i8*
  %953 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %12, i64 0, i32 0, i32 1, i32 0
  %954 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %12, i64 0, i32 0, i32 2
  %955 = bitcast %"class.std::__1::function"* %12 to i64*
  %956 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %12, i64 0, i32 0, i32 0, i32 0
  %957 = icmp eq %"class.v8::internal::Isolate"* %2, null
  %958 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %19, i64 0, i32 0
  %959 = add nsw i32 %745, 1
  %960 = zext i32 %959 to i64
  br label %961

961:                                              ; preds = %1287, %946
  %962 = phi i32* [ %944, %946 ], [ %1288, %1287 ]
  %963 = phi i32 [ 0, %946 ], [ %985, %1287 ]
  %964 = phi i8 [ 1, %946 ], [ %1005, %1287 ]
  %965 = load i32, i32* %962, align 4
  call void @_ZN2v88internal17FixedArrayBuilder14EnsureCapacityEPNS0_7IsolateEi(%"class.v8::internal::FixedArrayBuilder"* nonnull %11, %"class.v8::internal::Isolate"* %2, i32 5) #6
  %966 = icmp sgt i32 %965, %963
  br i1 %966, label %967, label %983

967:                                              ; preds = %961
  %968 = sub nsw i32 %965, %963
  %969 = icmp ult i32 %968, 2048
  %970 = icmp ult i32 %963, 524288
  %971 = and i1 %970, %969
  br i1 %971, label %972, label %975

972:                                              ; preds = %967
  %973 = shl i32 %963, 11
  %974 = or i32 %968, %973
  br label %979

975:                                              ; preds = %967
  %976 = sub nsw i32 0, %968
  %977 = sext i32 %976 to i64
  %978 = shl nsw i64 %977, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* nonnull %11, i64 %978) #6
  br label %979

979:                                              ; preds = %972, %975
  %980 = phi i32 [ %963, %975 ], [ %974, %972 ]
  %981 = sext i32 %980 to i64
  %982 = shl nsw i64 %981, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* nonnull %11, i64 %982) #6
  br label %983

983:                                              ; preds = %979, %961
  %984 = getelementptr inbounds i32, i32* %962, i64 1
  %985 = load i32, i32* %984, align 4
  %986 = load i64, i64* %20, align 8
  %987 = load i64*, i64** %22, align 8
  %988 = load i32, i32* %24, align 8
  %989 = add nsw i32 %988, 1
  store i32 %989, i32* %24, align 8
  %990 = and i8 %964, 1
  %991 = icmp eq i8 %990, 0
  br i1 %991, label %1000, label %992

992:                                              ; preds = %983
  %993 = icmp eq i32 %965, 0
  br i1 %993, label %994, label %1000

994:                                              ; preds = %992
  %995 = load i64, i64* %107, align 8
  %996 = add i64 %995, 7
  %997 = inttoptr i64 %996 to i32*
  %998 = load i32, i32* %997, align 4
  %999 = icmp eq i32 %998, %985
  br i1 %999, label %1003, label %1000

1000:                                             ; preds = %992, %994, %983
  %1001 = phi i8 [ %964, %983 ], [ 0, %994 ], [ 0, %992 ]
  %1002 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %947, i64* %107, i32 %965, i32 %985) #6
  br label %1003

1003:                                             ; preds = %1000, %994
  %1004 = phi i64* [ %107, %994 ], [ %1002, %1000 ]
  %1005 = phi i8 [ 0, %994 ], [ %1001, %1000 ]
  %1006 = load i64, i64* %1, align 8
  %1007 = and i64 %1006, -4294967296
  %1008 = add i64 %1006, 11
  %1009 = inttoptr i64 %1008 to i32*
  %1010 = load i32, i32* %1009, align 4
  %1011 = zext i32 %1010 to i64
  %1012 = or i64 %1007, %1011
  %1013 = add i64 %1012, 43
  %1014 = inttoptr i64 %1013 to i32*
  %1015 = load atomic i32, i32* %1014 monotonic, align 4
  %1016 = zext i32 %1015 to i64
  %1017 = or i64 %1007, %1016
  %1018 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %913, align 8
  %1019 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1018, null
  br i1 %1019, label %1023, label %1020

1020:                                             ; preds = %1003
  %1021 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1018, i64 %1017) #6
  %1022 = load i64, i64* %1021, align 8
  br label %1034

1023:                                             ; preds = %1003
  %1024 = load i64*, i64** %948, align 8
  %1025 = load i64*, i64** %22, align 8
  %1026 = icmp eq i64* %1024, %1025
  br i1 %1026, label %1027, label %1029

1027:                                             ; preds = %1023
  %1028 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %1029

1029:                                             ; preds = %1027, %1023
  %1030 = phi i64* [ %1028, %1027 ], [ %1024, %1023 ]
  %1031 = ptrtoint i64* %1030 to i64
  %1032 = add i64 %1031, 8
  %1033 = inttoptr i64 %1032 to i64*
  store i64* %1033, i64** %948, align 8
  store i64 %1017, i64* %1030, align 8
  br label %1034

1034:                                             ; preds = %1029, %1020
  %1035 = phi i64 [ %1022, %1020 ], [ %1017, %1029 ]
  %1036 = phi i64* [ %1021, %1020 ], [ %1030, %1029 ]
  %1037 = and i64 %1035, 1
  %1038 = icmp eq i64 %1037, 0
  br i1 %1038, label %1052, label %1039

1039:                                             ; preds = %1034
  %1040 = and i64 %1035, -4294967296
  %1041 = add i64 %1035, -1
  %1042 = inttoptr i64 %1041 to i32*
  %1043 = load atomic i32, i32* %1042 monotonic, align 4
  %1044 = zext i32 %1043 to i64
  %1045 = or i64 %1040, %1044
  %1046 = add i64 %1045, 7
  %1047 = inttoptr i64 %1046 to i16*
  %1048 = load atomic i16, i16* %1047 monotonic, align 2
  %1049 = add i16 %1048, -119
  %1050 = icmp ult i16 %1049, 13
  %1051 = select i1 %1050, i32 4, i32 3
  br label %1052

1052:                                             ; preds = %1039, %1034
  %1053 = phi i1 [ false, %1034 ], [ %1050, %1039 ]
  %1054 = phi i32 [ 3, %1034 ], [ %1051, %1039 ]
  %1055 = add nsw i32 %1054, %745
  %1056 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %949, i32 %1055, i8 zeroext 0) #6
  %1057 = load i64, i64* %1056, align 8
  %1058 = load i64, i64* %1004, align 8
  %1059 = add i64 %1057, 7
  %1060 = inttoptr i64 %1059 to i32*
  %1061 = trunc i64 %1058 to i32
  store atomic volatile i32 %1061, i32* %1060 monotonic, align 4
  %1062 = and i64 %1058, 1
  %1063 = icmp eq i64 %1062, 0
  br i1 %1063, label %1087, label %1064

1064:                                             ; preds = %1052
  %1065 = and i64 %1057, -262144
  %1066 = or i64 %1065, 8
  %1067 = inttoptr i64 %1066 to i64*
  %1068 = load i64, i64* %1067, align 8
  %1069 = and i64 %1068, 262144
  %1070 = icmp eq i64 %1069, 0
  br i1 %1070, label %1075, label %1071

1071:                                             ; preds = %1064
  %1072 = or i64 %1065, 16
  %1073 = inttoptr i64 %1072 to %"class.v8::internal::Heap"**
  %1074 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1073, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %1074, i64 %1057, i64 %1059, i64 %1058) #6
  br label %1075

1075:                                             ; preds = %1071, %1064
  %1076 = and i64 %1058, -262144
  %1077 = or i64 %1076, 8
  %1078 = inttoptr i64 %1077 to i64*
  %1079 = load i64, i64* %1078, align 8
  %1080 = and i64 %1079, 24
  %1081 = icmp eq i64 %1080, 0
  br i1 %1081, label %1087, label %1082

1082:                                             ; preds = %1075
  %1083 = load i64, i64* %1067, align 8
  %1084 = and i64 %1083, 24
  %1085 = icmp eq i64 %1084, 0
  br i1 %1085, label %1086, label %1087

1086:                                             ; preds = %1082
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %1057, i64 %1059, i64 %1058) #6
  br label %1087

1087:                                             ; preds = %1086, %1082, %1075, %1052
  br i1 %950, label %1088, label %1131

1088:                                             ; preds = %1221, %1087
  %1089 = phi i32 [ 1, %1087 ], [ %959, %1221 ]
  %1090 = load i64, i64* %1056, align 8
  %1091 = shl i32 %965, 1
  %1092 = shl i32 %1089, 2
  %1093 = sext i32 %1092 to i64
  %1094 = add i64 %1090, 7
  %1095 = add i64 %1094, %1093
  %1096 = inttoptr i64 %1095 to i32*
  store atomic volatile i32 %1091, i32* %1096 monotonic, align 4
  %1097 = load i64, i64* %1056, align 8
  %1098 = load i64, i64* %107, align 8
  %1099 = add i32 %1092, 4
  %1100 = sext i32 %1099 to i64
  %1101 = add nsw i64 %1100, 7
  %1102 = add i64 %1101, %1097
  %1103 = inttoptr i64 %1102 to i32*
  %1104 = trunc i64 %1098 to i32
  store atomic volatile i32 %1104, i32* %1103 monotonic, align 4
  %1105 = and i64 %1098, 1
  %1106 = icmp eq i64 %1105, 0
  br i1 %1106, label %1130, label %1107

1107:                                             ; preds = %1088
  %1108 = and i64 %1097, -262144
  %1109 = or i64 %1108, 8
  %1110 = inttoptr i64 %1109 to i64*
  %1111 = load i64, i64* %1110, align 8
  %1112 = and i64 %1111, 262144
  %1113 = icmp eq i64 %1112, 0
  br i1 %1113, label %1118, label %1114

1114:                                             ; preds = %1107
  %1115 = or i64 %1108, 16
  %1116 = inttoptr i64 %1115 to %"class.v8::internal::Heap"**
  %1117 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1116, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %1117, i64 %1097, i64 %1102, i64 %1098) #6
  br label %1118

1118:                                             ; preds = %1114, %1107
  %1119 = and i64 %1098, -262144
  %1120 = or i64 %1119, 8
  %1121 = inttoptr i64 %1120 to i64*
  %1122 = load i64, i64* %1121, align 8
  %1123 = and i64 %1122, 24
  %1124 = icmp eq i64 %1123, 0
  br i1 %1124, label %1130, label %1125

1125:                                             ; preds = %1118
  %1126 = load i64, i64* %1110, align 8
  %1127 = and i64 %1126, 24
  %1128 = icmp eq i64 %1127, 0
  br i1 %1128, label %1129, label %1130

1129:                                             ; preds = %1125
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %1097, i64 %1102, i64 %1098) #6
  br label %1130

1130:                                             ; preds = %1129, %1125, %1118, %1088
  br i1 %1053, label %1224, label %1267

1131:                                             ; preds = %1087, %1221
  %1132 = phi i64 [ %1222, %1221 ], [ 1, %1087 ]
  %1133 = shl nuw nsw i64 %1132, 1
  %1134 = getelementptr inbounds i32, i32* %962, i64 %1133
  %1135 = load i32, i32* %1134, align 4
  %1136 = icmp sgt i32 %1135, -1
  br i1 %1136, label %1137, label %1186

1137:                                             ; preds = %1131
  %1138 = or i64 %1133, 1
  %1139 = getelementptr inbounds i32, i32* %962, i64 %1138
  %1140 = load i32, i32* %1139, align 4
  %1141 = icmp eq i32 %1135, 0
  br i1 %1141, label %1142, label %1148

1142:                                             ; preds = %1137
  %1143 = load i64, i64* %107, align 8
  %1144 = add i64 %1143, 7
  %1145 = inttoptr i64 %1144 to i32*
  %1146 = load i32, i32* %1145, align 4
  %1147 = icmp eq i32 %1146, %1140
  br i1 %1147, label %1151, label %1148

1148:                                             ; preds = %1142, %1137
  %1149 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %947, i64* %107, i32 %1135, i32 %1140) #6
  %1150 = load i64, i64* %1149, align 8
  br label %1151

1151:                                             ; preds = %1148, %1142
  %1152 = phi i64 [ %1150, %1148 ], [ %1143, %1142 ]
  %1153 = load i64, i64* %1056, align 8
  %1154 = trunc i64 %1132 to i32
  %1155 = shl i32 %1154, 2
  %1156 = sext i32 %1155 to i64
  %1157 = add nsw i64 %1156, 7
  %1158 = add i64 %1157, %1153
  %1159 = inttoptr i64 %1158 to i32*
  %1160 = trunc i64 %1152 to i32
  store atomic volatile i32 %1160, i32* %1159 monotonic, align 4
  %1161 = and i64 %1152, 1
  %1162 = icmp eq i64 %1161, 0
  br i1 %1162, label %1221, label %1163

1163:                                             ; preds = %1151
  %1164 = and i64 %1153, -262144
  %1165 = or i64 %1164, 8
  %1166 = inttoptr i64 %1165 to i64*
  %1167 = load i64, i64* %1166, align 8
  %1168 = and i64 %1167, 262144
  %1169 = icmp eq i64 %1168, 0
  br i1 %1169, label %1174, label %1170

1170:                                             ; preds = %1163
  %1171 = or i64 %1164, 16
  %1172 = inttoptr i64 %1171 to %"class.v8::internal::Heap"**
  %1173 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1172, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %1173, i64 %1153, i64 %1158, i64 %1152) #6
  br label %1174

1174:                                             ; preds = %1170, %1163
  %1175 = and i64 %1152, -262144
  %1176 = or i64 %1175, 8
  %1177 = inttoptr i64 %1176 to i64*
  %1178 = load i64, i64* %1177, align 8
  %1179 = and i64 %1178, 24
  %1180 = icmp eq i64 %1179, 0
  br i1 %1180, label %1221, label %1181

1181:                                             ; preds = %1174
  %1182 = load i64, i64* %1166, align 8
  %1183 = and i64 %1182, 24
  %1184 = icmp eq i64 %1183, 0
  br i1 %1184, label %1185, label %1221

1185:                                             ; preds = %1181
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %1153, i64 %1158, i64 %1152) #6
  br label %1221

1186:                                             ; preds = %1131
  %1187 = load i64, i64* %1056, align 8
  %1188 = load i64, i64* %951, align 8
  %1189 = trunc i64 %1132 to i32
  %1190 = shl i32 %1189, 2
  %1191 = sext i32 %1190 to i64
  %1192 = add nsw i64 %1191, 7
  %1193 = add i64 %1192, %1187
  %1194 = inttoptr i64 %1193 to i32*
  %1195 = trunc i64 %1188 to i32
  store atomic volatile i32 %1195, i32* %1194 monotonic, align 4
  %1196 = and i64 %1188, 1
  %1197 = icmp eq i64 %1196, 0
  br i1 %1197, label %1221, label %1198

1198:                                             ; preds = %1186
  %1199 = and i64 %1187, -262144
  %1200 = or i64 %1199, 8
  %1201 = inttoptr i64 %1200 to i64*
  %1202 = load i64, i64* %1201, align 8
  %1203 = and i64 %1202, 262144
  %1204 = icmp eq i64 %1203, 0
  br i1 %1204, label %1209, label %1205

1205:                                             ; preds = %1198
  %1206 = or i64 %1199, 16
  %1207 = inttoptr i64 %1206 to %"class.v8::internal::Heap"**
  %1208 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1207, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %1208, i64 %1187, i64 %1193, i64 %1188) #6
  br label %1209

1209:                                             ; preds = %1205, %1198
  %1210 = and i64 %1188, -262144
  %1211 = or i64 %1210, 8
  %1212 = inttoptr i64 %1211 to i64*
  %1213 = load i64, i64* %1212, align 8
  %1214 = and i64 %1213, 24
  %1215 = icmp eq i64 %1214, 0
  br i1 %1215, label %1221, label %1216

1216:                                             ; preds = %1209
  %1217 = load i64, i64* %1201, align 8
  %1218 = and i64 %1217, 24
  %1219 = icmp eq i64 %1218, 0
  br i1 %1219, label %1220, label %1221

1220:                                             ; preds = %1216
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %1187, i64 %1193, i64 %1188) #6
  br label %1221

1221:                                             ; preds = %1220, %1216, %1209, %1186, %1185, %1181, %1174, %1151
  %1222 = add nuw nsw i64 %1132, 1
  %1223 = icmp eq i64 %1222, %960
  br i1 %1223, label %1088, label %1131

1224:                                             ; preds = %1130
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %952) #6
  %1225 = ptrtoint i64* %1056 to i64
  store i64 (%"union.std::__1::__function::__policy_storage"*, i32)* @_ZNSt3__110__function16__policy_invokerIFN2v88internal6ObjectEiEE11__call_implINS0_20__default_alloc_funcIZNS3_12_GLOBAL__N_120SearchRegExpMultipleILb1EEES4_PNS3_7IsolateENS3_6HandleINS3_6StringEEENSD_INS3_8JSRegExpEEENSD_INS3_15RegExpMatchInfoEEENSD_INS3_7JSArrayEEEEUliE_S5_EEEES4_PKNS0_16__policy_storageEi, i64 (%"union.std::__1::__function::__policy_storage"*, i32)** %953, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal12_GLOBAL__N_120SearchRegExpMultipleILb1EEENS5_6ObjectEPNS5_7IsolateENS5_6HandleINS5_6StringEEENSB_INS5_8JSRegExpEEENSB_INS5_15RegExpMatchInfoEEENSB_INS5_7JSArrayEEEEUliE_FS8_iEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %954, align 8
  store i64 %1225, i64* %955, align 8
  %1226 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_133ConstructNamedCaptureGroupsObjectEPNS0_7IsolateENS0_6HandleINS0_10FixedArrayEEERKNSt3__18functionIFNS0_6ObjectEiEEE(%"class.v8::internal::Isolate"* %2, i64* %1036, %"class.std::__1::function"* nonnull dereferenceable(32) %12) #6
  %1227 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %954, align 8
  %1228 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1227, i64 0, i32 1
  %1229 = load void (i8*)*, void (i8*)** %1228, align 8
  %1230 = icmp eq void (i8*)* %1229, null
  br i1 %1230, label %1233, label %1231

1231:                                             ; preds = %1224
  %1232 = load i8*, i8** %956, align 8
  call void %1229(i8* %1232) #6
  br label %1233

1233:                                             ; preds = %1231, %1224
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %952) #6
  %1234 = load i64, i64* %1056, align 8
  %1235 = load i64, i64* %1226, align 8
  %1236 = add i32 %1092, 8
  %1237 = sext i32 %1236 to i64
  %1238 = add nsw i64 %1237, 7
  %1239 = add i64 %1238, %1234
  %1240 = inttoptr i64 %1239 to i32*
  %1241 = trunc i64 %1235 to i32
  store atomic volatile i32 %1241, i32* %1240 monotonic, align 4
  %1242 = and i64 %1235, 1
  %1243 = icmp eq i64 %1242, 0
  br i1 %1243, label %1267, label %1244

1244:                                             ; preds = %1233
  %1245 = and i64 %1234, -262144
  %1246 = or i64 %1245, 8
  %1247 = inttoptr i64 %1246 to i64*
  %1248 = load i64, i64* %1247, align 8
  %1249 = and i64 %1248, 262144
  %1250 = icmp eq i64 %1249, 0
  br i1 %1250, label %1255, label %1251

1251:                                             ; preds = %1244
  %1252 = or i64 %1245, 16
  %1253 = inttoptr i64 %1252 to %"class.v8::internal::Heap"**
  %1254 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1253, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %1254, i64 %1234, i64 %1239, i64 %1235) #6
  br label %1255

1255:                                             ; preds = %1251, %1244
  %1256 = and i64 %1235, -262144
  %1257 = or i64 %1256, 8
  %1258 = inttoptr i64 %1257 to i64*
  %1259 = load i64, i64* %1258, align 8
  %1260 = and i64 %1259, 24
  %1261 = icmp eq i64 %1260, 0
  br i1 %1261, label %1267, label %1262

1262:                                             ; preds = %1255
  %1263 = load i64, i64* %1247, align 8
  %1264 = and i64 %1263, 24
  %1265 = icmp eq i64 %1264, 0
  br i1 %1265, label %1266, label %1267

1266:                                             ; preds = %1262
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %1234, i64 %1239, i64 %1235) #6
  br label %1267

1267:                                             ; preds = %1266, %1262, %1255, %1233, %1130
  %1268 = load i64, i64* %1056, align 8
  %1269 = add i64 %1268, 3
  %1270 = inttoptr i64 %1269 to i32*
  %1271 = load i32, i32* %1270, align 4
  %1272 = ashr i32 %1271, 1
  %1273 = call i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %947, i64* %1056, i8 zeroext 3, i32 %1272, i8 zeroext 0) #6
  %1274 = load i64, i64* %1273, align 8
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_6ObjectE(%"class.v8::internal::FixedArrayBuilder"* nonnull %11, i64 %1274) #6
  br i1 %957, label %1287, label %1275

1275:                                             ; preds = %1267
  %1276 = inttoptr i64 %986 to i64*
  %1277 = load i64*, i64** %958, align 8
  store i64 %986, i64* %20, align 8
  %1278 = load i32, i32* %24, align 8
  %1279 = add nsw i32 %1278, -1
  store i32 %1279, i32* %24, align 8
  %1280 = load i64*, i64** %22, align 8
  %1281 = icmp eq i64* %1280, %987
  br i1 %1281, label %1284, label %1282

1282:                                             ; preds = %1275
  store i64* %987, i64** %22, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %1283 = load i64*, i64** %958, align 8
  br label %1284

1284:                                             ; preds = %1282, %1275
  %1285 = phi i64* [ %1283, %1282 ], [ %1276, %1275 ]
  %1286 = phi i64* [ %987, %1282 ], [ %1277, %1275 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %1285, i64* %1286) #6
  br label %1287

1287:                                             ; preds = %1284, %1267
  %1288 = call i32* @_ZN2v88internal17RegExpGlobalCache9FetchNextEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %10) #6
  %1289 = icmp eq i32* %1288, null
  br i1 %1289, label %1290, label %961

1290:                                             ; preds = %1287, %941
  %1291 = phi i32 [ 0, %941 ], [ %985, %1287 ]
  %1292 = phi i32 [ -1, %941 ], [ %965, %1287 ]
  %1293 = load i32, i32* %899, align 8
  %1294 = icmp slt i32 %1293, 0
  br i1 %1294, label %1295, label %1297

1295:                                             ; preds = %1290
  %1296 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %1392

1297:                                             ; preds = %1290
  %1298 = icmp sgt i32 %1292, -1
  br i1 %1298, label %1299, label %1390

1299:                                             ; preds = %1297
  %1300 = icmp sgt i32 %749, %1291
  br i1 %1300, label %1301, label %1317

1301:                                             ; preds = %1299
  %1302 = sub nsw i32 %749, %1291
  %1303 = icmp ult i32 %1302, 2048
  %1304 = icmp ult i32 %1291, 524288
  %1305 = and i1 %1304, %1303
  br i1 %1305, label %1306, label %1309

1306:                                             ; preds = %1301
  %1307 = shl i32 %1291, 11
  %1308 = or i32 %1302, %1307
  br label %1313

1309:                                             ; preds = %1301
  %1310 = sub nsw i32 0, %1302
  %1311 = sext i32 %1310 to i64
  %1312 = shl nsw i64 %1311, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* nonnull %11, i64 %1312) #6
  br label %1313

1313:                                             ; preds = %1306, %1309
  %1314 = phi i32 [ %1291, %1309 ], [ %1308, %1306 ]
  %1315 = sext i32 %1314 to i64
  %1316 = shl nsw i64 %1315, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* nonnull %11, i64 %1316) #6
  br label %1317

1317:                                             ; preds = %1313, %1299
  %1318 = call i32* @_ZN2v88internal17RegExpGlobalCache19LastSuccessfulMatchEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %10) #6
  %1319 = call i64* @_ZN2v88internal6RegExp16SetLastMatchInfoEPNS0_7IsolateENS0_6HandleINS0_15RegExpMatchInfoEEENS4_INS0_6StringEEEiPi(%"class.v8::internal::Isolate"* %2, i64* %62, i64* %107, i32 %745, i32* %1318) #6
  br i1 %750, label %1320, label %1388

1320:                                             ; preds = %1317
  %1321 = shl nsw i32 %745, 1
  %1322 = add i32 %1321, 2
  %1323 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %1324 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %1325 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %1324, i32 %1322, i8 zeroext 0) #6
  %1326 = call i32* @_ZN2v88internal17RegExpGlobalCache19LastSuccessfulMatchEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %10) #6
  %1327 = icmp sgt i32 %1322, 0
  br i1 %1327, label %1328, label %1330

1328:                                             ; preds = %1320
  %1329 = zext i32 %1322 to i64
  br label %1363

1330:                                             ; preds = %1363, %1320
  %1331 = getelementptr inbounds %"class.v8::internal::FixedArrayBuilder", %"class.v8::internal::FixedArrayBuilder"* %11, i64 0, i32 0, i32 0, i32 0
  %1332 = load i64*, i64** %1331, align 8
  %1333 = getelementptr inbounds %"class.v8::internal::FixedArrayBuilder", %"class.v8::internal::FixedArrayBuilder"* %11, i64 0, i32 1
  %1334 = load i32, i32* %1333, align 8
  %1335 = call i64* @_ZN2v88internal10FixedArray13ShrinkOrEmptyEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"* %2, i64* %1332, i32 %1334) #6
  %1336 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 12
  %1337 = call i64* @_ZN2v88internal7Factory21CopyFixedArrayWithMapENS0_6HandleINS0_10FixedArrayEEENS2_INS0_3MapEEE(%"class.v8::internal::Factory"* %1323, i64* %1335, i64* %1336) #6
  %1338 = load i64, i64* %1, align 8
  %1339 = and i64 %1338, -4294967296
  %1340 = add i64 %1338, 11
  %1341 = inttoptr i64 %1340 to i32*
  %1342 = load i32, i32* %1341, align 4
  %1343 = zext i32 %1342 to i64
  %1344 = or i64 %1339, %1343
  %1345 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %913, align 8
  %1346 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1345, null
  br i1 %1346, label %1349, label %1347

1347:                                             ; preds = %1330
  %1348 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1345, i64 %1344) #6
  br label %1361

1349:                                             ; preds = %1330
  %1350 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %1351 = load i64*, i64** %1350, align 8
  %1352 = load i64*, i64** %22, align 8
  %1353 = icmp eq i64* %1351, %1352
  br i1 %1353, label %1354, label %1356

1354:                                             ; preds = %1349
  %1355 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %1356

1356:                                             ; preds = %1354, %1349
  %1357 = phi i64* [ %1355, %1354 ], [ %1351, %1349 ]
  %1358 = ptrtoint i64* %1357 to i64
  %1359 = add i64 %1358, 8
  %1360 = inttoptr i64 %1359 to i64*
  store i64* %1360, i64** %1350, align 8
  store i64 %1344, i64* %1357, align 8
  br label %1361

1361:                                             ; preds = %1356, %1347
  %1362 = phi i64* [ %1348, %1347 ], [ %1357, %1356 ]
  call void @_ZN2v88internal18RegExpResultsCache5EnterEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS4_INS0_6ObjectEEENS4_INS0_10FixedArrayEEESA_NS1_16ResultsCacheTypeE(%"class.v8::internal::Isolate"* %2, i64* %107, i64* %1362, i64* %1337, i64* %1325, i32 0) #6
  br label %1388

1363:                                             ; preds = %1363, %1328
  %1364 = phi i64 [ 0, %1328 ], [ %1386, %1363 ]
  %1365 = load i64, i64* %1325, align 8
  %1366 = getelementptr inbounds i32, i32* %1326, i64 %1364
  %1367 = load i32, i32* %1366, align 4
  %1368 = shl i32 %1367, 1
  %1369 = trunc i64 %1364 to i32
  %1370 = shl i32 %1369, 2
  %1371 = sext i32 %1370 to i64
  %1372 = add i64 %1365, 7
  %1373 = add i64 %1372, %1371
  %1374 = inttoptr i64 %1373 to i32*
  store atomic volatile i32 %1368, i32* %1374 monotonic, align 4
  %1375 = or i64 %1364, 1
  %1376 = load i64, i64* %1325, align 8
  %1377 = getelementptr inbounds i32, i32* %1326, i64 %1375
  %1378 = load i32, i32* %1377, align 4
  %1379 = shl i32 %1378, 1
  %1380 = trunc i64 %1375 to i32
  %1381 = shl i32 %1380, 2
  %1382 = sext i32 %1381 to i64
  %1383 = add i64 %1376, 7
  %1384 = add i64 %1383, %1382
  %1385 = inttoptr i64 %1384 to i32*
  store atomic volatile i32 %1379, i32* %1385 monotonic, align 4
  %1386 = add nuw nsw i64 %1364, 2
  %1387 = icmp eq i64 %1386, %1329
  br i1 %1387, label %1330, label %1363

1388:                                             ; preds = %1361, %1317
  %1389 = call i64* @_ZN2v88internal17FixedArrayBuilder9ToJSArrayENS0_6HandleINS0_7JSArrayEEE(%"class.v8::internal::FixedArrayBuilder"* nonnull %11, i64* %80) #6
  br label %1392

1390:                                             ; preds = %1297
  %1391 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 6
  br label %1392

1392:                                             ; preds = %1390, %1388, %1295
  %1393 = phi i64* [ %1296, %1295 ], [ %1389, %1388 ], [ %1391, %1390 ]
  %1394 = load i64, i64* %1393, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %943) #6
  br label %1395

1395:                                             ; preds = %1392, %902
  %1396 = phi i64 [ %904, %902 ], [ %1394, %1392 ]
  call void @_ZN2v88internal17RegExpGlobalCacheD1Ev(%"class.v8::internal::RegExpGlobalCache"* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %898) #6
  br label %1397

1397:                                             ; preds = %1395, %895, %658, %393
  %1398 = phi i64 [ %659, %658 ], [ %394, %393 ], [ %1396, %1395 ], [ %896, %895 ]
  %1399 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %1399, label %1413, label %1400

1400:                                             ; preds = %1397
  %1401 = inttoptr i64 %21 to i64*
  %1402 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %19, i64 0, i32 0
  %1403 = load i64*, i64** %1402, align 8
  store i64 %21, i64* %20, align 8
  %1404 = load i32, i32* %24, align 8
  %1405 = add nsw i32 %1404, -1
  store i32 %1405, i32* %24, align 8
  %1406 = load i64*, i64** %22, align 8
  %1407 = icmp eq i64* %1406, %23
  br i1 %1407, label %1410, label %1408

1408:                                             ; preds = %1400
  store i64* %23, i64** %22, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %1409 = load i64*, i64** %1402, align 8
  br label %1410

1410:                                             ; preds = %1408, %1400
  %1411 = phi i64* [ %1409, %1408 ], [ %1401, %1400 ]
  %1412 = phi i64* [ %23, %1408 ], [ %1403, %1400 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %1411, i64* %1412) #6
  br label %1413

1413:                                             ; preds = %1410, %1397, %15
  %1414 = phi i64 [ %16, %15 ], [ %1398, %1397 ], [ %1398, %1410 ]
  ret i64 %1414
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL32Stats_Runtime_RegExpExecMultipleEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #5 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1163"], align 16
  %5 = alloca %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", align 8
  %6 = alloca %"class.v8::internal::FixedArray", align 8
  %7 = alloca %"class.v8::internal::RegExpGlobalCache", align 8
  %8 = alloca %"class.v8::internal::FixedArrayBuilder", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", align 8
  %10 = alloca %"class.v8::internal::FixedArray", align 8
  %11 = alloca %"class.v8::internal::RegExpGlobalCache", align 8
  %12 = alloca %"class.v8::internal::FixedArrayBuilder", align 8
  %13 = alloca %"class.std::__1::function", align 8
  %14 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %15 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %16 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 40, i1 false) #6
  %17 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1153", %"struct.std::__1::atomic.1153"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %25, label %19, !prof !3

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %14, i64 0, i32 0
  %21 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %14, i64 0, i32 1
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %23 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %23, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %24, %"class.v8::internal::RuntimeCallStats"** %20, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %24, %"class.v8::internal::RuntimeCallTimer"* %21, i32 545) #6
  br label %25

25:                                               ; preds = %3, %19
  %26 = load atomic i64, i64* @_ZZN2v88internalL32Stats_Runtime_RegExpExecMultipleEiPmPNS0_7IsolateEE29trace_event_unique_atomic1455 monotonic, align 8
  %27 = inttoptr i64 %26 to i8*
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %29, label %37

29:                                               ; preds = %25
  %30 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %31 = bitcast %"class.v8::TracingController"* %30 to i8* (%"class.v8::TracingController"*, i8*)***
  %32 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %31, align 8
  %33 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %32, i64 2
  %34 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %33, align 8
  %35 = call i8* %34(%"class.v8::TracingController"* %30, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0)) #6
  %36 = ptrtoint i8* %35 to i64
  store atomic volatile i64 %36, i64* @_ZZN2v88internalL32Stats_Runtime_RegExpExecMultipleEiPmPNS0_7IsolateEE29trace_event_unique_atomic1455 monotonic, align 8
  br label %37

37:                                               ; preds = %25, %29
  %38 = phi i8* [ %27, %25 ], [ %35, %29 ]
  %39 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #6
  %40 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %15, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %40, align 8
  %41 = load atomic i8, i8* %38 monotonic, align 1
  %42 = and i8 %41, 5
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %75, label %44

44:                                               ; preds = %37
  %45 = bitcast [2 x %"class.std::__1::unique_ptr.1163"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #6
  %46 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %45, i8 0, i64 16, i1 false) #6
  %47 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %48 = bitcast %"class.v8::TracingController"* %47 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)***
  %49 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*** %48, align 8
  %50 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)** %49, i64 3
  %51 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)** %50, align 8
  %52 = call i64 %51(%"class.v8::TracingController"* %47, i8 signext 88, i8* %38, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.22, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1163"* nonnull %46, i32 0) #6
  %53 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %54 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %53, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %53, align 8
  %55 = icmp eq %"class.v8::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %44
  %57 = bitcast %"class.v8::ConvertableToTraceFormat"* %54 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.v8::ConvertableToTraceFormat"* nonnull %54) #6
  br label %61

61:                                               ; preds = %56, %44
  %62 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %62, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %62, align 16
  %64 = icmp eq %"class.v8::ConvertableToTraceFormat"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %61
  %66 = bitcast %"class.v8::ConvertableToTraceFormat"* %63 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %67 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %67, i64 1
  %69 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %68, align 8
  call void %69(%"class.v8::ConvertableToTraceFormat"* nonnull %63) #6
  br label %70

70:                                               ; preds = %61, %65
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #6
  %71 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %15, i64 0, i32 1
  %72 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %71, i64 0, i32 0
  store i8* %38, i8** %72, align 8
  %73 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %15, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.22, i64 0, i64 0), i8** %73, align 8
  %74 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %15, i64 0, i32 1, i32 2
  store i64 %52, i64* %74, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %71, %"struct.v8::internal::tracing::ScopedTracer::Data"** %40, align 8
  br label %75

75:                                               ; preds = %37, %70
  %76 = ptrtoint i64* %1 to i64
  %77 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %78 = bitcast %"struct.v8::internal::HandleScopeData"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %81 = load i64*, i64** %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %83 = load i32, i32* %82, align 8
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* %82, align 8
  %85 = load i64, i64* %1, align 8
  %86 = and i64 %85, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %99, label %88, !prof !4

88:                                               ; preds = %75
  %89 = and i64 %85, -4294967296
  %90 = add i64 %85, -1
  %91 = inttoptr i64 %90 to i32*
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = zext i32 %92 to i64
  %94 = or i64 %89, %93
  %95 = add i64 %94, 7
  %96 = inttoptr i64 %95 to i16*
  %97 = load atomic i16, i16* %96 monotonic, align 2
  %98 = icmp eq i16 %97, 1102
  br i1 %98, label %100, label %99, !prof !3

99:                                               ; preds = %88, %75
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0)) #18
  unreachable

100:                                              ; preds = %88
  %101 = add i64 %76, -8
  %102 = inttoptr i64 %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = and i64 %103, 1
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %117, label %106, !prof !4

106:                                              ; preds = %100
  %107 = and i64 %103, -4294967296
  %108 = add i64 %103, -1
  %109 = inttoptr i64 %108 to i32*
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = zext i32 %110 to i64
  %112 = or i64 %107, %111
  %113 = add i64 %112, 7
  %114 = inttoptr i64 %113 to i16*
  %115 = load atomic i16, i16* %114 monotonic, align 2
  %116 = icmp ult i16 %115, 64
  br i1 %116, label %118, label %117, !prof !3

117:                                              ; preds = %106, %100
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

118:                                              ; preds = %106
  %119 = add i64 %76, -16
  %120 = inttoptr i64 %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = and i64 %121, 1
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %135, label %124, !prof !4

124:                                              ; preds = %118
  %125 = and i64 %121, -4294967296
  %126 = add i64 %121, -1
  %127 = inttoptr i64 %126 to i32*
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = zext i32 %128 to i64
  %130 = or i64 %125, %129
  %131 = add i64 %130, 7
  %132 = inttoptr i64 %131 to i16*
  %133 = load atomic i16, i16* %132 monotonic, align 2
  %134 = icmp eq i16 %133, 119
  br i1 %134, label %136, label %135, !prof !3

135:                                              ; preds = %124, %118
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.23, i64 0, i64 0)) #18
  unreachable

136:                                              ; preds = %124
  %137 = add i64 %76, -24
  %138 = inttoptr i64 %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = and i64 %139, 1
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142, !prof !4

142:                                              ; preds = %136
  %143 = and i64 %139, -4294967296
  %144 = add i64 %139, -1
  %145 = inttoptr i64 %144 to i32*
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = zext i32 %146 to i64
  %148 = or i64 %143, %147
  %149 = add i64 %148, 7
  %150 = inttoptr i64 %149 to i16*
  %151 = load atomic i16, i16* %150 monotonic, align 2
  %152 = icmp eq i16 %151, 1085
  br i1 %152, label %154, label %153, !prof !3

153:                                              ; preds = %142, %136
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i64 0, i64 0)) #18
  unreachable

154:                                              ; preds = %142
  %155 = load atomic i32, i32* %145 monotonic, align 4
  %156 = zext i32 %155 to i64
  %157 = or i64 %143, %156
  %158 = add i64 %157, 10
  %159 = inttoptr i64 %158 to i8*
  %160 = load i8, i8* %159, align 1
  %161 = and i8 %160, -8
  %162 = icmp eq i8 %161, 8
  br i1 %162, label %164, label %163, !prof !3

163:                                              ; preds = %154
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.25, i64 0, i64 0)) #18
  unreachable

164:                                              ; preds = %154
  %165 = call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %102, i8 zeroext 0) #6
  %166 = load i64, i64* %1, align 8
  %167 = and i64 %166, -4294967296
  %168 = add i64 %166, 11
  %169 = inttoptr i64 %168 to i32*
  %170 = load i32, i32* %169, align 4
  %171 = zext i32 %170 to i64
  %172 = or i64 %167, %171
  %173 = add i64 %172, 15
  %174 = inttoptr i64 %173 to i32*
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %179, !prof !2

178:                                              ; preds = %164
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.26, i64 0, i64 0)) #18
  unreachable

179:                                              ; preds = %164
  %180 = and i64 %171, 1
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %205, label %182

182:                                              ; preds = %179
  %183 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %184 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %183, null
  br i1 %184, label %191, label %185

185:                                              ; preds = %182
  %186 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %183, i64 0, i32 0, i32 1
  %187 = load i8, i8* %186, align 8, !range !5
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %191, label %189

189:                                              ; preds = %185
  %190 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %183, i64 0, i32 1, i64 0
  br label %199

191:                                              ; preds = %185, %182
  %192 = and i64 %172, -262144
  %193 = or i64 %192, 16
  %194 = inttoptr i64 %193 to i64*
  %195 = load i64, i64* %194, align 16
  %196 = add i64 %195, -41416
  %197 = inttoptr i64 %196 to %"class.v8::internal::Isolate"*
  %198 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %197, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %199

199:                                              ; preds = %191, %189
  %200 = phi i64* [ %198, %191 ], [ %190, %189 ]
  %201 = getelementptr inbounds i64, i64* %200, i64 4
  %202 = load i64, i64* %201, align 8
  %203 = trunc i64 %202 to i32
  %204 = icmp eq i32 %170, %203
  br i1 %204, label %210, label %205

205:                                              ; preds = %199, %179
  %206 = add i64 %172, 7
  %207 = inttoptr i64 %206 to i32*
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = ashr i32 %208, 1
  switch i32 %209, label %210 [
    i32 1, label %216
    i32 3, label %211
    i32 2, label %211
  ]

210:                                              ; preds = %205, %199
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #18
  unreachable

211:                                              ; preds = %205, %205
  %212 = add i64 %172, 39
  %213 = inttoptr i64 %212 to i32*
  %214 = load atomic i32, i32* %213 monotonic, align 4
  %215 = icmp ult i32 %214, 2
  br i1 %215, label %216, label %718

216:                                              ; preds = %211, %205
  %217 = load i8, i8* @_ZN2v88internal19FLAG_regexp_tier_upE, align 1, !range !5
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %256, label %219

219:                                              ; preds = %216
  br i1 %181, label %243, label %220

220:                                              ; preds = %219
  %221 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %222 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %221, null
  br i1 %222, label %229, label %223

223:                                              ; preds = %220
  %224 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %221, i64 0, i32 0, i32 1
  %225 = load i8, i8* %224, align 8, !range !5
  %226 = icmp eq i8 %225, 0
  br i1 %226, label %229, label %227

227:                                              ; preds = %223
  %228 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %221, i64 0, i32 1, i64 0
  br label %237

229:                                              ; preds = %223, %220
  %230 = and i64 %172, -262144
  %231 = or i64 %230, 16
  %232 = inttoptr i64 %231 to i64*
  %233 = load i64, i64* %232, align 16
  %234 = add i64 %233, -41416
  %235 = inttoptr i64 %234 to %"class.v8::internal::Isolate"*
  %236 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %235, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %237

237:                                              ; preds = %229, %227
  %238 = phi i64* [ %236, %229 ], [ %228, %227 ]
  %239 = getelementptr inbounds i64, i64* %238, i64 4
  %240 = load i64, i64* %239, align 8
  %241 = trunc i64 %240 to i32
  %242 = icmp eq i32 %170, %241
  br i1 %242, label %256, label %243

243:                                              ; preds = %237, %219
  %244 = load atomic i32, i32* %207 monotonic, align 4
  %245 = and i32 %244, -2
  %246 = icmp eq i32 %245, 4
  br i1 %246, label %247, label %256

247:                                              ; preds = %243
  %248 = bitcast %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %248) #6
  %249 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %166, i64* %249, align 8
  %250 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %5, i64 0, i32 0
  call void @_ZN2v88internal8JSRegExp21MarkTierUpForNextExecEv(%"class.v8::internal::JSRegExp"* nonnull %250) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %248) #6
  %251 = load i8, i8* @_ZN2v88internal25FLAG_trace_regexp_tier_upE, align 1, !range !5
  %252 = icmp eq i8 %251, 0
  br i1 %252, label %256, label %253

253:                                              ; preds = %247
  %254 = bitcast i64* %1 to i8**
  %255 = load i8*, i8** %254, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.27, i64 0, i64 0), i8* %255) #6
  br label %256

256:                                              ; preds = %253, %247, %243, %237, %216
  %257 = load i64, i64* %1, align 8
  %258 = and i64 %257, -4294967296
  %259 = add i64 %257, 11
  %260 = inttoptr i64 %259 to i32*
  %261 = load i32, i32* %260, align 4
  %262 = zext i32 %261 to i64
  %263 = or i64 %258, %262
  %264 = and i64 %262, 1
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %289, label %266

266:                                              ; preds = %256
  %267 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %268 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %267, null
  br i1 %268, label %275, label %269

269:                                              ; preds = %266
  %270 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %267, i64 0, i32 0, i32 1
  %271 = load i8, i8* %270, align 8, !range !5
  %272 = icmp eq i8 %271, 0
  br i1 %272, label %275, label %273

273:                                              ; preds = %269
  %274 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %267, i64 0, i32 1, i64 0
  br label %283

275:                                              ; preds = %269, %266
  %276 = and i64 %263, -262144
  %277 = or i64 %276, 16
  %278 = inttoptr i64 %277 to i64*
  %279 = load i64, i64* %278, align 16
  %280 = add i64 %279, -41416
  %281 = inttoptr i64 %280 to %"class.v8::internal::Isolate"*
  %282 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %281, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %283

283:                                              ; preds = %275, %273
  %284 = phi i64* [ %282, %275 ], [ %274, %273 ]
  %285 = getelementptr inbounds i64, i64* %284, i64 4
  %286 = load i64, i64* %285, align 8
  %287 = trunc i64 %286 to i32
  %288 = icmp eq i32 %261, %287
  br i1 %288, label %299, label %289

289:                                              ; preds = %283, %256
  %290 = add i64 %263, 7
  %291 = inttoptr i64 %290 to i32*
  %292 = load atomic i32, i32* %291 monotonic, align 4
  %293 = ashr i32 %292, 1
  switch i32 %293, label %299 [
    i32 1, label %300
    i32 3, label %294
    i32 2, label %294
  ]

294:                                              ; preds = %289, %289
  %295 = add i64 %263, 39
  %296 = inttoptr i64 %295 to i32*
  %297 = load atomic i32, i32* %296 monotonic, align 4
  %298 = ashr i32 %297, 1
  br label %300

299:                                              ; preds = %289, %283
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #18
  unreachable

300:                                              ; preds = %294, %289
  %301 = phi i32 [ %298, %294 ], [ 0, %289 ]
  %302 = load i64, i64* %165, align 8
  %303 = add i64 %302, 7
  %304 = inttoptr i64 %303 to i32*
  %305 = load i32, i32* %304, align 4
  %306 = icmp sgt i32 %305, 4096
  br i1 %306, label %307, label %453

307:                                              ; preds = %300
  %308 = bitcast %"class.v8::internal::FixedArray"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %308) #6
  %309 = getelementptr inbounds %"class.v8::internal::FixedArray", %"class.v8::internal::FixedArray"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %309, align 8
  %310 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 2
  %311 = load i32, i32* %260, align 4
  %312 = zext i32 %311 to i64
  %313 = or i64 %258, %312
  %314 = call i64 @_ZN2v88internal18RegExpResultsCache6LookupEPNS0_4HeapENS0_6StringENS0_6ObjectEPNS0_10FixedArrayENS1_16ResultsCacheTypeE(%"class.v8::internal::Heap"* %310, i64 %302, i64 %313, %"class.v8::internal::FixedArray"* nonnull %6, i32 0) #6
  %315 = and i64 %314, 1
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %450, label %317

317:                                              ; preds = %307
  %318 = and i64 %314, -4294967296
  %319 = add i64 %314, -1
  %320 = inttoptr i64 %319 to i32*
  %321 = load atomic i32, i32* %320 monotonic, align 4
  %322 = zext i32 %321 to i64
  %323 = or i64 %318, %322
  %324 = add i64 %323, 7
  %325 = inttoptr i64 %324 to i16*
  %326 = load atomic i16, i16* %325 monotonic, align 2
  %327 = add i16 %326, -119
  %328 = icmp ult i16 %327, 13
  br i1 %328, label %329, label %450

329:                                              ; preds = %317
  %330 = shl nsw i32 %301, 1
  %331 = add i32 %330, 2
  %332 = sext i32 %331 to i64
  %333 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %332, i64 4) #6
  %334 = extractvalue { i64, i1 } %333, 1
  %335 = extractvalue { i64, i1 } %333, 0
  %336 = select i1 %334, i64 -1, i64 %335
  %337 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %336, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #20
  %338 = icmp eq i8* %337, null
  br i1 %338, label %339, label %348

339:                                              ; preds = %329
  %340 = call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #6
  %341 = bitcast %"class.v8::Platform"* %340 to void (%"class.v8::Platform"*)***
  %342 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %341, align 8
  %343 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %342, i64 3
  %344 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %343, align 8
  call void %344(%"class.v8::Platform"* %340) #6
  %345 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %336, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #20
  %346 = icmp eq i8* %345, null
  br i1 %346, label %347, label %348

347:                                              ; preds = %339
  call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0)) #18
  unreachable

348:                                              ; preds = %339, %329
  %349 = phi i8* [ %345, %339 ], [ %337, %329 ]
  %350 = bitcast i8* %349 to i32*
  %351 = icmp sgt i32 %331, 0
  br i1 %351, label %352, label %356

352:                                              ; preds = %348
  %353 = zext i32 %331 to i64
  %354 = load i64, i64* %309, align 8
  %355 = add i64 %354, 7
  br label %429

356:                                              ; preds = %429, %348
  %357 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %358 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %357, align 8
  %359 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %358, null
  br i1 %359, label %362, label %360

360:                                              ; preds = %356
  %361 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %358, i64 %314) #6
  br label %374

362:                                              ; preds = %356
  %363 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %364 = load i64*, i64** %363, align 8
  %365 = load i64*, i64** %80, align 8
  %366 = icmp eq i64* %364, %365
  br i1 %366, label %367, label %369

367:                                              ; preds = %362
  %368 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %369

369:                                              ; preds = %367, %362
  %370 = phi i64* [ %368, %367 ], [ %364, %362 ]
  %371 = ptrtoint i64* %370 to i64
  %372 = add i64 %371, 8
  %373 = inttoptr i64 %372 to i64*
  store i64* %373, i64** %363, align 8
  store i64 %314, i64* %370, align 8
  br label %374

374:                                              ; preds = %369, %360
  %375 = phi i64* [ %361, %360 ], [ %370, %369 ]
  %376 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %377 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 12
  %378 = call i64* @_ZN2v88internal7Factory21CopyFixedArrayWithMapENS0_6HandleINS0_10FixedArrayEEENS2_INS0_3MapEEE(%"class.v8::internal::Factory"* %376, i64* %375, i64* %377) #6
  %379 = load i64, i64* %378, align 8
  %380 = add i64 %379, 3
  %381 = inttoptr i64 %380 to i32*
  %382 = load i32, i32* %381, align 4
  %383 = ashr i32 %382, 1
  call void @_ZN2v88internal8JSObject24EnsureCanContainElementsENS0_6HandleIS1_EENS2_INS0_14FixedArrayBaseEEEjNS0_18EnsureElementsModeE(i64* %138, i64* %378, i32 %383, i32 1) #6
  %384 = load i64, i64* %138, align 8
  %385 = load i64, i64* %378, align 8
  %386 = add i64 %384, 7
  %387 = inttoptr i64 %386 to i32*
  %388 = trunc i64 %385 to i32
  store atomic volatile i32 %388, i32* %387 monotonic, align 4
  %389 = and i64 %385, 1
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %402, label %391

391:                                              ; preds = %374
  %392 = and i64 %384, -262144
  %393 = or i64 %392, 8
  %394 = inttoptr i64 %393 to i64*
  %395 = load i64, i64* %394, align 8
  %396 = and i64 %395, 262144
  %397 = icmp eq i64 %396, 0
  br i1 %397, label %402, label %398

398:                                              ; preds = %391
  %399 = or i64 %392, 16
  %400 = inttoptr i64 %399 to %"class.v8::internal::Heap"**
  %401 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %400, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %401, i64 %384, i64 %386, i64 %385) #6
  br label %402

402:                                              ; preds = %398, %391, %374
  %403 = and i64 %385, -262144
  %404 = or i64 %403, 8
  %405 = inttoptr i64 %404 to i64*
  %406 = load i64, i64* %405, align 8
  %407 = and i64 %406, 24
  %408 = icmp eq i64 %407, 0
  br i1 %408, label %417, label %409

409:                                              ; preds = %402
  %410 = and i64 %384, -262144
  %411 = or i64 %410, 8
  %412 = inttoptr i64 %411 to i64*
  %413 = load i64, i64* %412, align 8
  %414 = and i64 %413, 24
  %415 = icmp eq i64 %414, 0
  br i1 %415, label %416, label %417

416:                                              ; preds = %409
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %384, i64 %386, i64 %385) #6
  br label %417

417:                                              ; preds = %416, %409, %402
  %418 = load i64, i64* %138, align 8
  %419 = load i64, i64* %378, align 8
  %420 = add i64 %419, 3
  %421 = inttoptr i64 %420 to i32*
  %422 = load i32, i32* %421, align 4
  %423 = and i32 %422, -2
  %424 = add i64 %418, 11
  %425 = inttoptr i64 %424 to i32*
  store atomic volatile i32 %423, i32* %425 monotonic, align 4
  %426 = call i64* @_ZN2v88internal6RegExp16SetLastMatchInfoEPNS0_7IsolateENS0_6HandleINS0_15RegExpMatchInfoEEENS4_INS0_6StringEEEiPi(%"class.v8::internal::Isolate"* %2, i64* %120, i64* %165, i32 %301, i32* %350) #6
  %427 = icmp eq i8* %349, null
  br i1 %427, label %451, label %428

428:                                              ; preds = %417
  call void @_ZdaPv(i8* nonnull %349) #20
  br label %451

429:                                              ; preds = %429, %352
  %430 = phi i64 [ 0, %352 ], [ %448, %429 ]
  %431 = trunc i64 %430 to i32
  %432 = shl i32 %431, 2
  %433 = sext i32 %432 to i64
  %434 = add i64 %355, %433
  %435 = inttoptr i64 %434 to i32*
  %436 = load atomic i32, i32* %435 monotonic, align 4
  %437 = ashr i32 %436, 1
  %438 = getelementptr inbounds i32, i32* %350, i64 %430
  store i32 %437, i32* %438, align 4
  %439 = or i64 %430, 1
  %440 = trunc i64 %439 to i32
  %441 = shl i32 %440, 2
  %442 = sext i32 %441 to i64
  %443 = add i64 %355, %442
  %444 = inttoptr i64 %443 to i32*
  %445 = load atomic i32, i32* %444 monotonic, align 4
  %446 = ashr i32 %445, 1
  %447 = getelementptr inbounds i32, i32* %350, i64 %439
  store i32 %446, i32* %447, align 4
  %448 = add nuw nsw i64 %430, 2
  %449 = icmp eq i64 %448, %353
  br i1 %449, label %356, label %429

450:                                              ; preds = %317, %307
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %308) #6
  br label %453

451:                                              ; preds = %428, %417
  %452 = load i64, i64* %138, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %308) #6
  br label %1455

453:                                              ; preds = %450, %300
  %454 = bitcast %"class.v8::internal::RegExpGlobalCache"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %454) #6
  call void @_ZN2v88internal17RegExpGlobalCacheC1ENS0_6HandleINS0_8JSRegExpEEENS2_INS0_6StringEEEPNS0_7IsolateE(%"class.v8::internal::RegExpGlobalCache"* nonnull %7, i64* %1, i64* %165, %"class.v8::internal::Isolate"* %2) #6
  %455 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %7, i64 0, i32 0
  %456 = load i32, i32* %455, align 8
  %457 = icmp slt i32 %456, 0
  br i1 %457, label %458, label %461

458:                                              ; preds = %453
  %459 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %460 = load i64, i64* %459, align 8
  br label %716

461:                                              ; preds = %453
  %462 = load i64, i64* %138, align 8
  %463 = and i64 %462, -4294967296
  %464 = add i64 %462, 7
  %465 = inttoptr i64 %464 to i32*
  %466 = load i32, i32* %465, align 4
  %467 = zext i32 %466 to i64
  %468 = or i64 %463, %467
  %469 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %470 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %469, align 8
  %471 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %470, null
  br i1 %471, label %475, label %472

472:                                              ; preds = %461
  %473 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %470, i64 %468) #6
  %474 = load i64, i64* %473, align 8
  br label %487

475:                                              ; preds = %461
  %476 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %477 = load i64*, i64** %476, align 8
  %478 = load i64*, i64** %80, align 8
  %479 = icmp eq i64* %477, %478
  br i1 %479, label %480, label %482

480:                                              ; preds = %475
  %481 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %482

482:                                              ; preds = %480, %475
  %483 = phi i64* [ %481, %480 ], [ %477, %475 ]
  %484 = ptrtoint i64* %483 to i64
  %485 = add i64 %484, 8
  %486 = inttoptr i64 %485 to i64*
  store i64* %486, i64** %476, align 8
  store i64 %468, i64* %483, align 8
  br label %487

487:                                              ; preds = %482, %472
  %488 = phi i64 [ %474, %472 ], [ %468, %482 ]
  %489 = phi i64* [ %473, %472 ], [ %483, %482 ]
  %490 = add i64 %488, 3
  %491 = inttoptr i64 %490 to i32*
  %492 = load i32, i32* %491, align 4
  %493 = icmp slt i32 %492, 32
  br i1 %493, label %494, label %497

494:                                              ; preds = %487
  %495 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %496 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE22NewFixedArrayWithHolesEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %495, i32 16, i8 zeroext 0) #6
  br label %497

497:                                              ; preds = %494, %487
  %498 = phi i64* [ %496, %494 ], [ %489, %487 ]
  %499 = bitcast %"class.v8::internal::FixedArrayBuilder"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %499) #6
  call void @_ZN2v88internal17FixedArrayBuilderC1ENS0_6HandleINS0_10FixedArrayEEE(%"class.v8::internal::FixedArrayBuilder"* nonnull %8, i64* %498) #6
  %500 = call i32* @_ZN2v88internal17RegExpGlobalCache9FetchNextEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %7) #6
  %501 = icmp eq i32* %500, null
  br i1 %501, label %611, label %502

502:                                              ; preds = %497
  %503 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %504 = icmp eq %"class.v8::internal::Isolate"* %2, null
  %505 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %77, i64 0, i32 0
  br i1 %504, label %506, label %552

506:                                              ; preds = %502, %546
  %507 = phi i32* [ %550, %546 ], [ %500, %502 ]
  %508 = phi i32 [ %530, %546 ], [ 0, %502 ]
  %509 = phi i8 [ %548, %546 ], [ 1, %502 ]
  %510 = load i32, i32* %507, align 4
  call void @_ZN2v88internal17FixedArrayBuilder14EnsureCapacityEPNS0_7IsolateEi(%"class.v8::internal::FixedArrayBuilder"* nonnull %8, %"class.v8::internal::Isolate"* null, i32 5) #6
  %511 = icmp sgt i32 %510, %508
  br i1 %511, label %512, label %528

512:                                              ; preds = %506
  %513 = sub nsw i32 %510, %508
  %514 = icmp ult i32 %513, 2048
  %515 = icmp ult i32 %508, 524288
  %516 = and i1 %515, %514
  br i1 %516, label %521, label %517

517:                                              ; preds = %512
  %518 = sub nsw i32 0, %513
  %519 = sext i32 %518 to i64
  %520 = shl nsw i64 %519, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* nonnull %8, i64 %520) #6
  br label %524

521:                                              ; preds = %512
  %522 = shl i32 %508, 11
  %523 = or i32 %513, %522
  br label %524

524:                                              ; preds = %517, %521
  %525 = phi i32 [ %523, %521 ], [ %508, %517 ]
  %526 = sext i32 %525 to i64
  %527 = shl nsw i64 %526, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* nonnull %8, i64 %527) #6
  br label %528

528:                                              ; preds = %524, %506
  %529 = getelementptr inbounds i32, i32* %507, i64 1
  %530 = load i32, i32* %529, align 4
  %531 = load i32, i32* %82, align 8
  %532 = add nsw i32 %531, 1
  store i32 %532, i32* %82, align 8
  %533 = and i8 %509, 1
  %534 = icmp eq i8 %533, 0
  br i1 %534, label %543, label %535

535:                                              ; preds = %528
  %536 = icmp eq i32 %510, 0
  br i1 %536, label %537, label %543

537:                                              ; preds = %535
  %538 = load i64, i64* %165, align 8
  %539 = add i64 %538, 7
  %540 = inttoptr i64 %539 to i32*
  %541 = load i32, i32* %540, align 4
  %542 = icmp eq i32 %541, %530
  br i1 %542, label %546, label %543

543:                                              ; preds = %528, %535, %537
  %544 = phi i8 [ 0, %537 ], [ 0, %535 ], [ %509, %528 ]
  %545 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %503, i64* %165, i32 %510, i32 %530) #6
  br label %546

546:                                              ; preds = %543, %537
  %547 = phi i64* [ %165, %537 ], [ %545, %543 ]
  %548 = phi i8 [ 0, %537 ], [ %544, %543 ]
  %549 = load i64, i64* %547, align 8
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_6ObjectE(%"class.v8::internal::FixedArrayBuilder"* nonnull %8, i64 %549) #6
  %550 = call i32* @_ZN2v88internal17RegExpGlobalCache9FetchNextEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %7) #6
  %551 = icmp eq i32* %550, null
  br i1 %551, label %611, label %506

552:                                              ; preds = %502, %606
  %553 = phi i32* [ %609, %606 ], [ %500, %502 ]
  %554 = phi i32 [ %576, %606 ], [ 0, %502 ]
  %555 = phi i8 [ %596, %606 ], [ 1, %502 ]
  %556 = load i32, i32* %553, align 4
  call void @_ZN2v88internal17FixedArrayBuilder14EnsureCapacityEPNS0_7IsolateEi(%"class.v8::internal::FixedArrayBuilder"* nonnull %8, %"class.v8::internal::Isolate"* nonnull %2, i32 5) #6
  %557 = icmp sgt i32 %556, %554
  br i1 %557, label %558, label %574

558:                                              ; preds = %552
  %559 = sub nsw i32 %556, %554
  %560 = icmp ult i32 %559, 2048
  %561 = icmp ult i32 %554, 524288
  %562 = and i1 %561, %560
  br i1 %562, label %563, label %566

563:                                              ; preds = %558
  %564 = shl i32 %554, 11
  %565 = or i32 %559, %564
  br label %570

566:                                              ; preds = %558
  %567 = sub nsw i32 0, %559
  %568 = sext i32 %567 to i64
  %569 = shl nsw i64 %568, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* nonnull %8, i64 %569) #6
  br label %570

570:                                              ; preds = %563, %566
  %571 = phi i32 [ %554, %566 ], [ %565, %563 ]
  %572 = sext i32 %571 to i64
  %573 = shl nsw i64 %572, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* nonnull %8, i64 %573) #6
  br label %574

574:                                              ; preds = %570, %552
  %575 = getelementptr inbounds i32, i32* %553, i64 1
  %576 = load i32, i32* %575, align 4
  %577 = load i64, i64* %78, align 8
  %578 = load i64*, i64** %80, align 8
  %579 = load i32, i32* %82, align 8
  %580 = add nsw i32 %579, 1
  store i32 %580, i32* %82, align 8
  %581 = and i8 %555, 1
  %582 = icmp eq i8 %581, 0
  br i1 %582, label %591, label %583

583:                                              ; preds = %574
  %584 = icmp eq i32 %556, 0
  br i1 %584, label %585, label %591

585:                                              ; preds = %583
  %586 = load i64, i64* %165, align 8
  %587 = add i64 %586, 7
  %588 = inttoptr i64 %587 to i32*
  %589 = load i32, i32* %588, align 4
  %590 = icmp eq i32 %589, %576
  br i1 %590, label %594, label %591

591:                                              ; preds = %583, %585, %574
  %592 = phi i8 [ %555, %574 ], [ 0, %585 ], [ 0, %583 ]
  %593 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* nonnull %503, i64* %165, i32 %556, i32 %576) #6
  br label %594

594:                                              ; preds = %591, %585
  %595 = phi i64* [ %165, %585 ], [ %593, %591 ]
  %596 = phi i8 [ 0, %585 ], [ %592, %591 ]
  %597 = load i64, i64* %595, align 8
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_6ObjectE(%"class.v8::internal::FixedArrayBuilder"* nonnull %8, i64 %597) #6
  %598 = inttoptr i64 %577 to i64*
  %599 = load i64*, i64** %505, align 8
  store i64 %577, i64* %78, align 8
  %600 = load i32, i32* %82, align 8
  %601 = add nsw i32 %600, -1
  store i32 %601, i32* %82, align 8
  %602 = load i64*, i64** %80, align 8
  %603 = icmp eq i64* %602, %578
  br i1 %603, label %606, label %604

604:                                              ; preds = %594
  store i64* %578, i64** %80, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %605 = load i64*, i64** %505, align 8
  br label %606

606:                                              ; preds = %604, %594
  %607 = phi i64* [ %605, %604 ], [ %598, %594 ]
  %608 = phi i64* [ %578, %604 ], [ %599, %594 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %607, i64* %608) #6
  %609 = call i32* @_ZN2v88internal17RegExpGlobalCache9FetchNextEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %7) #6
  %610 = icmp eq i32* %609, null
  br i1 %610, label %611, label %552

611:                                              ; preds = %606, %546, %497
  %612 = phi i32 [ 0, %497 ], [ %530, %546 ], [ %576, %606 ]
  %613 = phi i32 [ -1, %497 ], [ %510, %546 ], [ %556, %606 ]
  %614 = load i32, i32* %455, align 8
  %615 = icmp slt i32 %614, 0
  br i1 %615, label %616, label %618

616:                                              ; preds = %611
  %617 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %713

618:                                              ; preds = %611
  %619 = icmp sgt i32 %613, -1
  br i1 %619, label %620, label %711

620:                                              ; preds = %618
  %621 = icmp sgt i32 %305, %612
  br i1 %621, label %622, label %638

622:                                              ; preds = %620
  %623 = sub nsw i32 %305, %612
  %624 = icmp ult i32 %623, 2048
  %625 = icmp ult i32 %612, 524288
  %626 = and i1 %625, %624
  br i1 %626, label %627, label %630

627:                                              ; preds = %622
  %628 = shl i32 %612, 11
  %629 = or i32 %623, %628
  br label %634

630:                                              ; preds = %622
  %631 = sub nsw i32 0, %623
  %632 = sext i32 %631 to i64
  %633 = shl nsw i64 %632, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* nonnull %8, i64 %633) #6
  br label %634

634:                                              ; preds = %627, %630
  %635 = phi i32 [ %612, %630 ], [ %629, %627 ]
  %636 = sext i32 %635 to i64
  %637 = shl nsw i64 %636, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* nonnull %8, i64 %637) #6
  br label %638

638:                                              ; preds = %634, %620
  %639 = call i32* @_ZN2v88internal17RegExpGlobalCache19LastSuccessfulMatchEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %7) #6
  %640 = call i64* @_ZN2v88internal6RegExp16SetLastMatchInfoEPNS0_7IsolateENS0_6HandleINS0_15RegExpMatchInfoEEENS4_INS0_6StringEEEiPi(%"class.v8::internal::Isolate"* %2, i64* %120, i64* %165, i32 %301, i32* %639) #6
  br i1 %306, label %641, label %709

641:                                              ; preds = %638
  %642 = shl nsw i32 %301, 1
  %643 = add i32 %642, 2
  %644 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %645 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %646 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %645, i32 %643, i8 zeroext 0) #6
  %647 = call i32* @_ZN2v88internal17RegExpGlobalCache19LastSuccessfulMatchEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %7) #6
  %648 = icmp sgt i32 %643, 0
  br i1 %648, label %649, label %651

649:                                              ; preds = %641
  %650 = zext i32 %643 to i64
  br label %684

651:                                              ; preds = %684, %641
  %652 = getelementptr inbounds %"class.v8::internal::FixedArrayBuilder", %"class.v8::internal::FixedArrayBuilder"* %8, i64 0, i32 0, i32 0, i32 0
  %653 = load i64*, i64** %652, align 8
  %654 = getelementptr inbounds %"class.v8::internal::FixedArrayBuilder", %"class.v8::internal::FixedArrayBuilder"* %8, i64 0, i32 1
  %655 = load i32, i32* %654, align 8
  %656 = call i64* @_ZN2v88internal10FixedArray13ShrinkOrEmptyEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"* %2, i64* %653, i32 %655) #6
  %657 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 12
  %658 = call i64* @_ZN2v88internal7Factory21CopyFixedArrayWithMapENS0_6HandleINS0_10FixedArrayEEENS2_INS0_3MapEEE(%"class.v8::internal::Factory"* %644, i64* %656, i64* %657) #6
  %659 = load i64, i64* %1, align 8
  %660 = and i64 %659, -4294967296
  %661 = add i64 %659, 11
  %662 = inttoptr i64 %661 to i32*
  %663 = load i32, i32* %662, align 4
  %664 = zext i32 %663 to i64
  %665 = or i64 %660, %664
  %666 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %469, align 8
  %667 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %666, null
  br i1 %667, label %670, label %668

668:                                              ; preds = %651
  %669 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %666, i64 %665) #6
  br label %682

670:                                              ; preds = %651
  %671 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %672 = load i64*, i64** %671, align 8
  %673 = load i64*, i64** %80, align 8
  %674 = icmp eq i64* %672, %673
  br i1 %674, label %675, label %677

675:                                              ; preds = %670
  %676 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %677

677:                                              ; preds = %675, %670
  %678 = phi i64* [ %676, %675 ], [ %672, %670 ]
  %679 = ptrtoint i64* %678 to i64
  %680 = add i64 %679, 8
  %681 = inttoptr i64 %680 to i64*
  store i64* %681, i64** %671, align 8
  store i64 %665, i64* %678, align 8
  br label %682

682:                                              ; preds = %677, %668
  %683 = phi i64* [ %669, %668 ], [ %678, %677 ]
  call void @_ZN2v88internal18RegExpResultsCache5EnterEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS4_INS0_6ObjectEEENS4_INS0_10FixedArrayEEESA_NS1_16ResultsCacheTypeE(%"class.v8::internal::Isolate"* %2, i64* %165, i64* %683, i64* %658, i64* %646, i32 0) #6
  br label %709

684:                                              ; preds = %684, %649
  %685 = phi i64 [ 0, %649 ], [ %707, %684 ]
  %686 = load i64, i64* %646, align 8
  %687 = getelementptr inbounds i32, i32* %647, i64 %685
  %688 = load i32, i32* %687, align 4
  %689 = shl i32 %688, 1
  %690 = trunc i64 %685 to i32
  %691 = shl i32 %690, 2
  %692 = sext i32 %691 to i64
  %693 = add i64 %686, 7
  %694 = add i64 %693, %692
  %695 = inttoptr i64 %694 to i32*
  store atomic volatile i32 %689, i32* %695 monotonic, align 4
  %696 = or i64 %685, 1
  %697 = load i64, i64* %646, align 8
  %698 = getelementptr inbounds i32, i32* %647, i64 %696
  %699 = load i32, i32* %698, align 4
  %700 = shl i32 %699, 1
  %701 = trunc i64 %696 to i32
  %702 = shl i32 %701, 2
  %703 = sext i32 %702 to i64
  %704 = add i64 %697, 7
  %705 = add i64 %704, %703
  %706 = inttoptr i64 %705 to i32*
  store atomic volatile i32 %700, i32* %706 monotonic, align 4
  %707 = add nuw nsw i64 %685, 2
  %708 = icmp eq i64 %707, %650
  br i1 %708, label %651, label %684

709:                                              ; preds = %682, %638
  %710 = call i64* @_ZN2v88internal17FixedArrayBuilder9ToJSArrayENS0_6HandleINS0_7JSArrayEEE(%"class.v8::internal::FixedArrayBuilder"* nonnull %8, i64* %138) #6
  br label %713

711:                                              ; preds = %618
  %712 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 6
  br label %713

713:                                              ; preds = %711, %709, %616
  %714 = phi i64* [ %617, %616 ], [ %710, %709 ], [ %712, %711 ]
  %715 = load i64, i64* %714, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %499) #6
  br label %716

716:                                              ; preds = %713, %458
  %717 = phi i64 [ %460, %458 ], [ %715, %713 ]
  call void @_ZN2v88internal17RegExpGlobalCacheD1Ev(%"class.v8::internal::RegExpGlobalCache"* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %454) #6
  br label %1455

718:                                              ; preds = %211
  %719 = load i8, i8* @_ZN2v88internal19FLAG_regexp_tier_upE, align 1, !range !5
  %720 = icmp eq i8 %719, 0
  br i1 %720, label %758, label %721

721:                                              ; preds = %718
  br i1 %181, label %745, label %722

722:                                              ; preds = %721
  %723 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %724 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %723, null
  br i1 %724, label %731, label %725

725:                                              ; preds = %722
  %726 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %723, i64 0, i32 0, i32 1
  %727 = load i8, i8* %726, align 8, !range !5
  %728 = icmp eq i8 %727, 0
  br i1 %728, label %731, label %729

729:                                              ; preds = %725
  %730 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %723, i64 0, i32 1, i64 0
  br label %739

731:                                              ; preds = %725, %722
  %732 = and i64 %172, -262144
  %733 = or i64 %732, 16
  %734 = inttoptr i64 %733 to i64*
  %735 = load i64, i64* %734, align 16
  %736 = add i64 %735, -41416
  %737 = inttoptr i64 %736 to %"class.v8::internal::Isolate"*
  %738 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %737, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %739

739:                                              ; preds = %731, %729
  %740 = phi i64* [ %738, %731 ], [ %730, %729 ]
  %741 = getelementptr inbounds i64, i64* %740, i64 4
  %742 = load i64, i64* %741, align 8
  %743 = trunc i64 %742 to i32
  %744 = icmp eq i32 %170, %743
  br i1 %744, label %758, label %745

745:                                              ; preds = %739, %721
  %746 = load atomic i32, i32* %207 monotonic, align 4
  %747 = and i32 %746, -2
  %748 = icmp eq i32 %747, 4
  br i1 %748, label %749, label %758

749:                                              ; preds = %745
  %750 = bitcast %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %750) #6
  %751 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %166, i64* %751, align 8
  %752 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %9, i64 0, i32 0
  call void @_ZN2v88internal8JSRegExp21MarkTierUpForNextExecEv(%"class.v8::internal::JSRegExp"* nonnull %752) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %750) #6
  %753 = load i8, i8* @_ZN2v88internal25FLAG_trace_regexp_tier_upE, align 1, !range !5
  %754 = icmp eq i8 %753, 0
  br i1 %754, label %758, label %755

755:                                              ; preds = %749
  %756 = bitcast i64* %1 to i8**
  %757 = load i8*, i8** %756, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.27, i64 0, i64 0), i8* %757) #6
  br label %758

758:                                              ; preds = %755, %749, %745, %739, %718
  %759 = load i64, i64* %1, align 8
  %760 = and i64 %759, -4294967296
  %761 = add i64 %759, 11
  %762 = inttoptr i64 %761 to i32*
  %763 = load i32, i32* %762, align 4
  %764 = zext i32 %763 to i64
  %765 = or i64 %760, %764
  %766 = and i64 %764, 1
  %767 = icmp eq i64 %766, 0
  br i1 %767, label %791, label %768

768:                                              ; preds = %758
  %769 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %770 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %769, null
  br i1 %770, label %777, label %771

771:                                              ; preds = %768
  %772 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %769, i64 0, i32 0, i32 1
  %773 = load i8, i8* %772, align 8, !range !5
  %774 = icmp eq i8 %773, 0
  br i1 %774, label %777, label %775

775:                                              ; preds = %771
  %776 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %769, i64 0, i32 1, i64 0
  br label %785

777:                                              ; preds = %771, %768
  %778 = and i64 %765, -262144
  %779 = or i64 %778, 16
  %780 = inttoptr i64 %779 to i64*
  %781 = load i64, i64* %780, align 16
  %782 = add i64 %781, -41416
  %783 = inttoptr i64 %782 to %"class.v8::internal::Isolate"*
  %784 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %783, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %785

785:                                              ; preds = %777, %775
  %786 = phi i64* [ %784, %777 ], [ %776, %775 ]
  %787 = getelementptr inbounds i64, i64* %786, i64 4
  %788 = load i64, i64* %787, align 8
  %789 = trunc i64 %788 to i32
  %790 = icmp eq i32 %763, %789
  br i1 %790, label %801, label %791

791:                                              ; preds = %785, %758
  %792 = add i64 %765, 7
  %793 = inttoptr i64 %792 to i32*
  %794 = load atomic i32, i32* %793 monotonic, align 4
  %795 = ashr i32 %794, 1
  switch i32 %795, label %801 [
    i32 1, label %802
    i32 3, label %796
    i32 2, label %796
  ]

796:                                              ; preds = %791, %791
  %797 = add i64 %765, 39
  %798 = inttoptr i64 %797 to i32*
  %799 = load atomic i32, i32* %798 monotonic, align 4
  %800 = ashr i32 %799, 1
  br label %802

801:                                              ; preds = %791, %785
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #18
  unreachable

802:                                              ; preds = %796, %791
  %803 = phi i32 [ %800, %796 ], [ 0, %791 ]
  %804 = load i64, i64* %165, align 8
  %805 = add i64 %804, 7
  %806 = inttoptr i64 %805 to i32*
  %807 = load i32, i32* %806, align 4
  %808 = icmp sgt i32 %807, 4096
  br i1 %808, label %809, label %955

809:                                              ; preds = %802
  %810 = bitcast %"class.v8::internal::FixedArray"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %810) #6
  %811 = getelementptr inbounds %"class.v8::internal::FixedArray", %"class.v8::internal::FixedArray"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %811, align 8
  %812 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 2
  %813 = load i32, i32* %762, align 4
  %814 = zext i32 %813 to i64
  %815 = or i64 %760, %814
  %816 = call i64 @_ZN2v88internal18RegExpResultsCache6LookupEPNS0_4HeapENS0_6StringENS0_6ObjectEPNS0_10FixedArrayENS1_16ResultsCacheTypeE(%"class.v8::internal::Heap"* %812, i64 %804, i64 %815, %"class.v8::internal::FixedArray"* nonnull %10, i32 0) #6
  %817 = and i64 %816, 1
  %818 = icmp eq i64 %817, 0
  br i1 %818, label %952, label %819

819:                                              ; preds = %809
  %820 = and i64 %816, -4294967296
  %821 = add i64 %816, -1
  %822 = inttoptr i64 %821 to i32*
  %823 = load atomic i32, i32* %822 monotonic, align 4
  %824 = zext i32 %823 to i64
  %825 = or i64 %820, %824
  %826 = add i64 %825, 7
  %827 = inttoptr i64 %826 to i16*
  %828 = load atomic i16, i16* %827 monotonic, align 2
  %829 = add i16 %828, -119
  %830 = icmp ult i16 %829, 13
  br i1 %830, label %831, label %952

831:                                              ; preds = %819
  %832 = shl nsw i32 %803, 1
  %833 = add i32 %832, 2
  %834 = sext i32 %833 to i64
  %835 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %834, i64 4) #6
  %836 = extractvalue { i64, i1 } %835, 1
  %837 = extractvalue { i64, i1 } %835, 0
  %838 = select i1 %836, i64 -1, i64 %837
  %839 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %838, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #20
  %840 = icmp eq i8* %839, null
  br i1 %840, label %841, label %850

841:                                              ; preds = %831
  %842 = call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #6
  %843 = bitcast %"class.v8::Platform"* %842 to void (%"class.v8::Platform"*)***
  %844 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %843, align 8
  %845 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %844, i64 3
  %846 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %845, align 8
  call void %846(%"class.v8::Platform"* %842) #6
  %847 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %838, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #20
  %848 = icmp eq i8* %847, null
  br i1 %848, label %849, label %850

849:                                              ; preds = %841
  call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0)) #18
  unreachable

850:                                              ; preds = %841, %831
  %851 = phi i8* [ %847, %841 ], [ %839, %831 ]
  %852 = bitcast i8* %851 to i32*
  %853 = icmp sgt i32 %833, 0
  br i1 %853, label %854, label %858

854:                                              ; preds = %850
  %855 = zext i32 %833 to i64
  %856 = load i64, i64* %811, align 8
  %857 = add i64 %856, 7
  br label %931

858:                                              ; preds = %931, %850
  %859 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %860 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %859, align 8
  %861 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %860, null
  br i1 %861, label %864, label %862

862:                                              ; preds = %858
  %863 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %860, i64 %816) #6
  br label %876

864:                                              ; preds = %858
  %865 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %866 = load i64*, i64** %865, align 8
  %867 = load i64*, i64** %80, align 8
  %868 = icmp eq i64* %866, %867
  br i1 %868, label %869, label %871

869:                                              ; preds = %864
  %870 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %871

871:                                              ; preds = %869, %864
  %872 = phi i64* [ %870, %869 ], [ %866, %864 ]
  %873 = ptrtoint i64* %872 to i64
  %874 = add i64 %873, 8
  %875 = inttoptr i64 %874 to i64*
  store i64* %875, i64** %865, align 8
  store i64 %816, i64* %872, align 8
  br label %876

876:                                              ; preds = %871, %862
  %877 = phi i64* [ %863, %862 ], [ %872, %871 ]
  %878 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %879 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 12
  %880 = call i64* @_ZN2v88internal7Factory21CopyFixedArrayWithMapENS0_6HandleINS0_10FixedArrayEEENS2_INS0_3MapEEE(%"class.v8::internal::Factory"* %878, i64* %877, i64* %879) #6
  %881 = load i64, i64* %880, align 8
  %882 = add i64 %881, 3
  %883 = inttoptr i64 %882 to i32*
  %884 = load i32, i32* %883, align 4
  %885 = ashr i32 %884, 1
  call void @_ZN2v88internal8JSObject24EnsureCanContainElementsENS0_6HandleIS1_EENS2_INS0_14FixedArrayBaseEEEjNS0_18EnsureElementsModeE(i64* %138, i64* %880, i32 %885, i32 1) #6
  %886 = load i64, i64* %138, align 8
  %887 = load i64, i64* %880, align 8
  %888 = add i64 %886, 7
  %889 = inttoptr i64 %888 to i32*
  %890 = trunc i64 %887 to i32
  store atomic volatile i32 %890, i32* %889 monotonic, align 4
  %891 = and i64 %887, 1
  %892 = icmp eq i64 %891, 0
  br i1 %892, label %904, label %893

893:                                              ; preds = %876
  %894 = and i64 %886, -262144
  %895 = or i64 %894, 8
  %896 = inttoptr i64 %895 to i64*
  %897 = load i64, i64* %896, align 8
  %898 = and i64 %897, 262144
  %899 = icmp eq i64 %898, 0
  br i1 %899, label %904, label %900

900:                                              ; preds = %893
  %901 = or i64 %894, 16
  %902 = inttoptr i64 %901 to %"class.v8::internal::Heap"**
  %903 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %902, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %903, i64 %886, i64 %888, i64 %887) #6
  br label %904

904:                                              ; preds = %900, %893, %876
  %905 = and i64 %887, -262144
  %906 = or i64 %905, 8
  %907 = inttoptr i64 %906 to i64*
  %908 = load i64, i64* %907, align 8
  %909 = and i64 %908, 24
  %910 = icmp eq i64 %909, 0
  br i1 %910, label %919, label %911

911:                                              ; preds = %904
  %912 = and i64 %886, -262144
  %913 = or i64 %912, 8
  %914 = inttoptr i64 %913 to i64*
  %915 = load i64, i64* %914, align 8
  %916 = and i64 %915, 24
  %917 = icmp eq i64 %916, 0
  br i1 %917, label %918, label %919

918:                                              ; preds = %911
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %886, i64 %888, i64 %887) #6
  br label %919

919:                                              ; preds = %918, %911, %904
  %920 = load i64, i64* %138, align 8
  %921 = load i64, i64* %880, align 8
  %922 = add i64 %921, 3
  %923 = inttoptr i64 %922 to i32*
  %924 = load i32, i32* %923, align 4
  %925 = and i32 %924, -2
  %926 = add i64 %920, 11
  %927 = inttoptr i64 %926 to i32*
  store atomic volatile i32 %925, i32* %927 monotonic, align 4
  %928 = call i64* @_ZN2v88internal6RegExp16SetLastMatchInfoEPNS0_7IsolateENS0_6HandleINS0_15RegExpMatchInfoEEENS4_INS0_6StringEEEiPi(%"class.v8::internal::Isolate"* %2, i64* %120, i64* %165, i32 %803, i32* %852) #6
  %929 = icmp eq i8* %851, null
  br i1 %929, label %953, label %930

930:                                              ; preds = %919
  call void @_ZdaPv(i8* nonnull %851) #20
  br label %953

931:                                              ; preds = %931, %854
  %932 = phi i64 [ 0, %854 ], [ %950, %931 ]
  %933 = trunc i64 %932 to i32
  %934 = shl i32 %933, 2
  %935 = sext i32 %934 to i64
  %936 = add i64 %857, %935
  %937 = inttoptr i64 %936 to i32*
  %938 = load atomic i32, i32* %937 monotonic, align 4
  %939 = ashr i32 %938, 1
  %940 = getelementptr inbounds i32, i32* %852, i64 %932
  store i32 %939, i32* %940, align 4
  %941 = or i64 %932, 1
  %942 = trunc i64 %941 to i32
  %943 = shl i32 %942, 2
  %944 = sext i32 %943 to i64
  %945 = add i64 %857, %944
  %946 = inttoptr i64 %945 to i32*
  %947 = load atomic i32, i32* %946 monotonic, align 4
  %948 = ashr i32 %947, 1
  %949 = getelementptr inbounds i32, i32* %852, i64 %941
  store i32 %948, i32* %949, align 4
  %950 = add nuw nsw i64 %932, 2
  %951 = icmp eq i64 %950, %855
  br i1 %951, label %858, label %931

952:                                              ; preds = %819, %809
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %810) #6
  br label %955

953:                                              ; preds = %930, %919
  %954 = load i64, i64* %138, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %810) #6
  br label %1455

955:                                              ; preds = %952, %802
  %956 = bitcast %"class.v8::internal::RegExpGlobalCache"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %956) #6
  call void @_ZN2v88internal17RegExpGlobalCacheC1ENS0_6HandleINS0_8JSRegExpEEENS2_INS0_6StringEEEPNS0_7IsolateE(%"class.v8::internal::RegExpGlobalCache"* nonnull %11, i64* %1, i64* %165, %"class.v8::internal::Isolate"* %2) #6
  %957 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %11, i64 0, i32 0
  %958 = load i32, i32* %957, align 8
  %959 = icmp slt i32 %958, 0
  br i1 %959, label %960, label %963

960:                                              ; preds = %955
  %961 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %962 = load i64, i64* %961, align 8
  br label %1453

963:                                              ; preds = %955
  %964 = load i64, i64* %138, align 8
  %965 = and i64 %964, -4294967296
  %966 = add i64 %964, 7
  %967 = inttoptr i64 %966 to i32*
  %968 = load i32, i32* %967, align 4
  %969 = zext i32 %968 to i64
  %970 = or i64 %965, %969
  %971 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %972 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %971, align 8
  %973 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %972, null
  br i1 %973, label %977, label %974

974:                                              ; preds = %963
  %975 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %972, i64 %970) #6
  %976 = load i64, i64* %975, align 8
  br label %989

977:                                              ; preds = %963
  %978 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %979 = load i64*, i64** %978, align 8
  %980 = load i64*, i64** %80, align 8
  %981 = icmp eq i64* %979, %980
  br i1 %981, label %982, label %984

982:                                              ; preds = %977
  %983 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %984

984:                                              ; preds = %982, %977
  %985 = phi i64* [ %983, %982 ], [ %979, %977 ]
  %986 = ptrtoint i64* %985 to i64
  %987 = add i64 %986, 8
  %988 = inttoptr i64 %987 to i64*
  store i64* %988, i64** %978, align 8
  store i64 %970, i64* %985, align 8
  br label %989

989:                                              ; preds = %984, %974
  %990 = phi i64 [ %976, %974 ], [ %970, %984 ]
  %991 = phi i64* [ %975, %974 ], [ %985, %984 ]
  %992 = add i64 %990, 3
  %993 = inttoptr i64 %992 to i32*
  %994 = load i32, i32* %993, align 4
  %995 = icmp slt i32 %994, 32
  br i1 %995, label %996, label %999

996:                                              ; preds = %989
  %997 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %998 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE22NewFixedArrayWithHolesEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %997, i32 16, i8 zeroext 0) #6
  br label %999

999:                                              ; preds = %996, %989
  %1000 = phi i64* [ %998, %996 ], [ %991, %989 ]
  %1001 = bitcast %"class.v8::internal::FixedArrayBuilder"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1001) #6
  call void @_ZN2v88internal17FixedArrayBuilderC1ENS0_6HandleINS0_10FixedArrayEEE(%"class.v8::internal::FixedArrayBuilder"* nonnull %12, i64* %1000) #6
  %1002 = call i32* @_ZN2v88internal17RegExpGlobalCache9FetchNextEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %11) #6
  %1003 = icmp eq i32* %1002, null
  br i1 %1003, label %1348, label %1004

1004:                                             ; preds = %999
  %1005 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %1006 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %1007 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %1008 = icmp slt i32 %803, 1
  %1009 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 4
  %1010 = bitcast %"class.std::__1::function"* %13 to i8*
  %1011 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %13, i64 0, i32 0, i32 1, i32 0
  %1012 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %13, i64 0, i32 0, i32 2
  %1013 = bitcast %"class.std::__1::function"* %13 to i64*
  %1014 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %13, i64 0, i32 0, i32 0, i32 0
  %1015 = icmp eq %"class.v8::internal::Isolate"* %2, null
  %1016 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %77, i64 0, i32 0
  %1017 = add nsw i32 %803, 1
  %1018 = zext i32 %1017 to i64
  br label %1019

1019:                                             ; preds = %1345, %1004
  %1020 = phi i32* [ %1002, %1004 ], [ %1346, %1345 ]
  %1021 = phi i32 [ 0, %1004 ], [ %1043, %1345 ]
  %1022 = phi i8 [ 1, %1004 ], [ %1063, %1345 ]
  %1023 = load i32, i32* %1020, align 4
  call void @_ZN2v88internal17FixedArrayBuilder14EnsureCapacityEPNS0_7IsolateEi(%"class.v8::internal::FixedArrayBuilder"* nonnull %12, %"class.v8::internal::Isolate"* %2, i32 5) #6
  %1024 = icmp sgt i32 %1023, %1021
  br i1 %1024, label %1025, label %1041

1025:                                             ; preds = %1019
  %1026 = sub nsw i32 %1023, %1021
  %1027 = icmp ult i32 %1026, 2048
  %1028 = icmp ult i32 %1021, 524288
  %1029 = and i1 %1028, %1027
  br i1 %1029, label %1030, label %1033

1030:                                             ; preds = %1025
  %1031 = shl i32 %1021, 11
  %1032 = or i32 %1026, %1031
  br label %1037

1033:                                             ; preds = %1025
  %1034 = sub nsw i32 0, %1026
  %1035 = sext i32 %1034 to i64
  %1036 = shl nsw i64 %1035, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* nonnull %12, i64 %1036) #6
  br label %1037

1037:                                             ; preds = %1030, %1033
  %1038 = phi i32 [ %1021, %1033 ], [ %1032, %1030 ]
  %1039 = sext i32 %1038 to i64
  %1040 = shl nsw i64 %1039, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* nonnull %12, i64 %1040) #6
  br label %1041

1041:                                             ; preds = %1037, %1019
  %1042 = getelementptr inbounds i32, i32* %1020, i64 1
  %1043 = load i32, i32* %1042, align 4
  %1044 = load i64, i64* %78, align 8
  %1045 = load i64*, i64** %80, align 8
  %1046 = load i32, i32* %82, align 8
  %1047 = add nsw i32 %1046, 1
  store i32 %1047, i32* %82, align 8
  %1048 = and i8 %1022, 1
  %1049 = icmp eq i8 %1048, 0
  br i1 %1049, label %1058, label %1050

1050:                                             ; preds = %1041
  %1051 = icmp eq i32 %1023, 0
  br i1 %1051, label %1052, label %1058

1052:                                             ; preds = %1050
  %1053 = load i64, i64* %165, align 8
  %1054 = add i64 %1053, 7
  %1055 = inttoptr i64 %1054 to i32*
  %1056 = load i32, i32* %1055, align 4
  %1057 = icmp eq i32 %1056, %1043
  br i1 %1057, label %1061, label %1058

1058:                                             ; preds = %1050, %1052, %1041
  %1059 = phi i8 [ %1022, %1041 ], [ 0, %1052 ], [ 0, %1050 ]
  %1060 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %1005, i64* %165, i32 %1023, i32 %1043) #6
  br label %1061

1061:                                             ; preds = %1058, %1052
  %1062 = phi i64* [ %165, %1052 ], [ %1060, %1058 ]
  %1063 = phi i8 [ 0, %1052 ], [ %1059, %1058 ]
  %1064 = load i64, i64* %1, align 8
  %1065 = and i64 %1064, -4294967296
  %1066 = add i64 %1064, 11
  %1067 = inttoptr i64 %1066 to i32*
  %1068 = load i32, i32* %1067, align 4
  %1069 = zext i32 %1068 to i64
  %1070 = or i64 %1065, %1069
  %1071 = add i64 %1070, 43
  %1072 = inttoptr i64 %1071 to i32*
  %1073 = load atomic i32, i32* %1072 monotonic, align 4
  %1074 = zext i32 %1073 to i64
  %1075 = or i64 %1065, %1074
  %1076 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %971, align 8
  %1077 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1076, null
  br i1 %1077, label %1081, label %1078

1078:                                             ; preds = %1061
  %1079 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1076, i64 %1075) #6
  %1080 = load i64, i64* %1079, align 8
  br label %1092

1081:                                             ; preds = %1061
  %1082 = load i64*, i64** %1006, align 8
  %1083 = load i64*, i64** %80, align 8
  %1084 = icmp eq i64* %1082, %1083
  br i1 %1084, label %1085, label %1087

1085:                                             ; preds = %1081
  %1086 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %1087

1087:                                             ; preds = %1085, %1081
  %1088 = phi i64* [ %1086, %1085 ], [ %1082, %1081 ]
  %1089 = ptrtoint i64* %1088 to i64
  %1090 = add i64 %1089, 8
  %1091 = inttoptr i64 %1090 to i64*
  store i64* %1091, i64** %1006, align 8
  store i64 %1075, i64* %1088, align 8
  br label %1092

1092:                                             ; preds = %1087, %1078
  %1093 = phi i64 [ %1080, %1078 ], [ %1075, %1087 ]
  %1094 = phi i64* [ %1079, %1078 ], [ %1088, %1087 ]
  %1095 = and i64 %1093, 1
  %1096 = icmp eq i64 %1095, 0
  br i1 %1096, label %1110, label %1097

1097:                                             ; preds = %1092
  %1098 = and i64 %1093, -4294967296
  %1099 = add i64 %1093, -1
  %1100 = inttoptr i64 %1099 to i32*
  %1101 = load atomic i32, i32* %1100 monotonic, align 4
  %1102 = zext i32 %1101 to i64
  %1103 = or i64 %1098, %1102
  %1104 = add i64 %1103, 7
  %1105 = inttoptr i64 %1104 to i16*
  %1106 = load atomic i16, i16* %1105 monotonic, align 2
  %1107 = add i16 %1106, -119
  %1108 = icmp ult i16 %1107, 13
  %1109 = select i1 %1108, i32 4, i32 3
  br label %1110

1110:                                             ; preds = %1097, %1092
  %1111 = phi i1 [ false, %1092 ], [ %1108, %1097 ]
  %1112 = phi i32 [ 3, %1092 ], [ %1109, %1097 ]
  %1113 = add nsw i32 %1112, %803
  %1114 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %1007, i32 %1113, i8 zeroext 0) #6
  %1115 = load i64, i64* %1114, align 8
  %1116 = load i64, i64* %1062, align 8
  %1117 = add i64 %1115, 7
  %1118 = inttoptr i64 %1117 to i32*
  %1119 = trunc i64 %1116 to i32
  store atomic volatile i32 %1119, i32* %1118 monotonic, align 4
  %1120 = and i64 %1116, 1
  %1121 = icmp eq i64 %1120, 0
  br i1 %1121, label %1145, label %1122

1122:                                             ; preds = %1110
  %1123 = and i64 %1115, -262144
  %1124 = or i64 %1123, 8
  %1125 = inttoptr i64 %1124 to i64*
  %1126 = load i64, i64* %1125, align 8
  %1127 = and i64 %1126, 262144
  %1128 = icmp eq i64 %1127, 0
  br i1 %1128, label %1133, label %1129

1129:                                             ; preds = %1122
  %1130 = or i64 %1123, 16
  %1131 = inttoptr i64 %1130 to %"class.v8::internal::Heap"**
  %1132 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1131, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %1132, i64 %1115, i64 %1117, i64 %1116) #6
  br label %1133

1133:                                             ; preds = %1129, %1122
  %1134 = and i64 %1116, -262144
  %1135 = or i64 %1134, 8
  %1136 = inttoptr i64 %1135 to i64*
  %1137 = load i64, i64* %1136, align 8
  %1138 = and i64 %1137, 24
  %1139 = icmp eq i64 %1138, 0
  br i1 %1139, label %1145, label %1140

1140:                                             ; preds = %1133
  %1141 = load i64, i64* %1125, align 8
  %1142 = and i64 %1141, 24
  %1143 = icmp eq i64 %1142, 0
  br i1 %1143, label %1144, label %1145

1144:                                             ; preds = %1140
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %1115, i64 %1117, i64 %1116) #6
  br label %1145

1145:                                             ; preds = %1144, %1140, %1133, %1110
  br i1 %1008, label %1146, label %1189

1146:                                             ; preds = %1279, %1145
  %1147 = phi i32 [ 1, %1145 ], [ %1017, %1279 ]
  %1148 = load i64, i64* %1114, align 8
  %1149 = shl i32 %1023, 1
  %1150 = shl i32 %1147, 2
  %1151 = sext i32 %1150 to i64
  %1152 = add i64 %1148, 7
  %1153 = add i64 %1152, %1151
  %1154 = inttoptr i64 %1153 to i32*
  store atomic volatile i32 %1149, i32* %1154 monotonic, align 4
  %1155 = load i64, i64* %1114, align 8
  %1156 = load i64, i64* %165, align 8
  %1157 = add i32 %1150, 4
  %1158 = sext i32 %1157 to i64
  %1159 = add nsw i64 %1158, 7
  %1160 = add i64 %1159, %1155
  %1161 = inttoptr i64 %1160 to i32*
  %1162 = trunc i64 %1156 to i32
  store atomic volatile i32 %1162, i32* %1161 monotonic, align 4
  %1163 = and i64 %1156, 1
  %1164 = icmp eq i64 %1163, 0
  br i1 %1164, label %1188, label %1165

1165:                                             ; preds = %1146
  %1166 = and i64 %1155, -262144
  %1167 = or i64 %1166, 8
  %1168 = inttoptr i64 %1167 to i64*
  %1169 = load i64, i64* %1168, align 8
  %1170 = and i64 %1169, 262144
  %1171 = icmp eq i64 %1170, 0
  br i1 %1171, label %1176, label %1172

1172:                                             ; preds = %1165
  %1173 = or i64 %1166, 16
  %1174 = inttoptr i64 %1173 to %"class.v8::internal::Heap"**
  %1175 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1174, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %1175, i64 %1155, i64 %1160, i64 %1156) #6
  br label %1176

1176:                                             ; preds = %1172, %1165
  %1177 = and i64 %1156, -262144
  %1178 = or i64 %1177, 8
  %1179 = inttoptr i64 %1178 to i64*
  %1180 = load i64, i64* %1179, align 8
  %1181 = and i64 %1180, 24
  %1182 = icmp eq i64 %1181, 0
  br i1 %1182, label %1188, label %1183

1183:                                             ; preds = %1176
  %1184 = load i64, i64* %1168, align 8
  %1185 = and i64 %1184, 24
  %1186 = icmp eq i64 %1185, 0
  br i1 %1186, label %1187, label %1188

1187:                                             ; preds = %1183
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %1155, i64 %1160, i64 %1156) #6
  br label %1188

1188:                                             ; preds = %1187, %1183, %1176, %1146
  br i1 %1111, label %1282, label %1325

1189:                                             ; preds = %1145, %1279
  %1190 = phi i64 [ %1280, %1279 ], [ 1, %1145 ]
  %1191 = shl nuw nsw i64 %1190, 1
  %1192 = getelementptr inbounds i32, i32* %1020, i64 %1191
  %1193 = load i32, i32* %1192, align 4
  %1194 = icmp sgt i32 %1193, -1
  br i1 %1194, label %1195, label %1244

1195:                                             ; preds = %1189
  %1196 = or i64 %1191, 1
  %1197 = getelementptr inbounds i32, i32* %1020, i64 %1196
  %1198 = load i32, i32* %1197, align 4
  %1199 = icmp eq i32 %1193, 0
  br i1 %1199, label %1200, label %1206

1200:                                             ; preds = %1195
  %1201 = load i64, i64* %165, align 8
  %1202 = add i64 %1201, 7
  %1203 = inttoptr i64 %1202 to i32*
  %1204 = load i32, i32* %1203, align 4
  %1205 = icmp eq i32 %1204, %1198
  br i1 %1205, label %1209, label %1206

1206:                                             ; preds = %1200, %1195
  %1207 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %1005, i64* %165, i32 %1193, i32 %1198) #6
  %1208 = load i64, i64* %1207, align 8
  br label %1209

1209:                                             ; preds = %1206, %1200
  %1210 = phi i64 [ %1208, %1206 ], [ %1201, %1200 ]
  %1211 = load i64, i64* %1114, align 8
  %1212 = trunc i64 %1190 to i32
  %1213 = shl i32 %1212, 2
  %1214 = sext i32 %1213 to i64
  %1215 = add nsw i64 %1214, 7
  %1216 = add i64 %1215, %1211
  %1217 = inttoptr i64 %1216 to i32*
  %1218 = trunc i64 %1210 to i32
  store atomic volatile i32 %1218, i32* %1217 monotonic, align 4
  %1219 = and i64 %1210, 1
  %1220 = icmp eq i64 %1219, 0
  br i1 %1220, label %1279, label %1221

1221:                                             ; preds = %1209
  %1222 = and i64 %1211, -262144
  %1223 = or i64 %1222, 8
  %1224 = inttoptr i64 %1223 to i64*
  %1225 = load i64, i64* %1224, align 8
  %1226 = and i64 %1225, 262144
  %1227 = icmp eq i64 %1226, 0
  br i1 %1227, label %1232, label %1228

1228:                                             ; preds = %1221
  %1229 = or i64 %1222, 16
  %1230 = inttoptr i64 %1229 to %"class.v8::internal::Heap"**
  %1231 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1230, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %1231, i64 %1211, i64 %1216, i64 %1210) #6
  br label %1232

1232:                                             ; preds = %1228, %1221
  %1233 = and i64 %1210, -262144
  %1234 = or i64 %1233, 8
  %1235 = inttoptr i64 %1234 to i64*
  %1236 = load i64, i64* %1235, align 8
  %1237 = and i64 %1236, 24
  %1238 = icmp eq i64 %1237, 0
  br i1 %1238, label %1279, label %1239

1239:                                             ; preds = %1232
  %1240 = load i64, i64* %1224, align 8
  %1241 = and i64 %1240, 24
  %1242 = icmp eq i64 %1241, 0
  br i1 %1242, label %1243, label %1279

1243:                                             ; preds = %1239
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %1211, i64 %1216, i64 %1210) #6
  br label %1279

1244:                                             ; preds = %1189
  %1245 = load i64, i64* %1114, align 8
  %1246 = load i64, i64* %1009, align 8
  %1247 = trunc i64 %1190 to i32
  %1248 = shl i32 %1247, 2
  %1249 = sext i32 %1248 to i64
  %1250 = add nsw i64 %1249, 7
  %1251 = add i64 %1250, %1245
  %1252 = inttoptr i64 %1251 to i32*
  %1253 = trunc i64 %1246 to i32
  store atomic volatile i32 %1253, i32* %1252 monotonic, align 4
  %1254 = and i64 %1246, 1
  %1255 = icmp eq i64 %1254, 0
  br i1 %1255, label %1279, label %1256

1256:                                             ; preds = %1244
  %1257 = and i64 %1245, -262144
  %1258 = or i64 %1257, 8
  %1259 = inttoptr i64 %1258 to i64*
  %1260 = load i64, i64* %1259, align 8
  %1261 = and i64 %1260, 262144
  %1262 = icmp eq i64 %1261, 0
  br i1 %1262, label %1267, label %1263

1263:                                             ; preds = %1256
  %1264 = or i64 %1257, 16
  %1265 = inttoptr i64 %1264 to %"class.v8::internal::Heap"**
  %1266 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1265, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %1266, i64 %1245, i64 %1251, i64 %1246) #6
  br label %1267

1267:                                             ; preds = %1263, %1256
  %1268 = and i64 %1246, -262144
  %1269 = or i64 %1268, 8
  %1270 = inttoptr i64 %1269 to i64*
  %1271 = load i64, i64* %1270, align 8
  %1272 = and i64 %1271, 24
  %1273 = icmp eq i64 %1272, 0
  br i1 %1273, label %1279, label %1274

1274:                                             ; preds = %1267
  %1275 = load i64, i64* %1259, align 8
  %1276 = and i64 %1275, 24
  %1277 = icmp eq i64 %1276, 0
  br i1 %1277, label %1278, label %1279

1278:                                             ; preds = %1274
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %1245, i64 %1251, i64 %1246) #6
  br label %1279

1279:                                             ; preds = %1278, %1274, %1267, %1244, %1243, %1239, %1232, %1209
  %1280 = add nuw nsw i64 %1190, 1
  %1281 = icmp eq i64 %1280, %1018
  br i1 %1281, label %1146, label %1189

1282:                                             ; preds = %1188
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1010) #6
  %1283 = ptrtoint i64* %1114 to i64
  store i64 (%"union.std::__1::__function::__policy_storage"*, i32)* @_ZNSt3__110__function16__policy_invokerIFN2v88internal6ObjectEiEE11__call_implINS0_20__default_alloc_funcIZNS3_12_GLOBAL__N_120SearchRegExpMultipleILb1EEES4_PNS3_7IsolateENS3_6HandleINS3_6StringEEENSD_INS3_8JSRegExpEEENSD_INS3_15RegExpMatchInfoEEENSD_INS3_7JSArrayEEEEUliE_S5_EEEES4_PKNS0_16__policy_storageEi, i64 (%"union.std::__1::__function::__policy_storage"*, i32)** %1011, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal12_GLOBAL__N_120SearchRegExpMultipleILb1EEENS5_6ObjectEPNS5_7IsolateENS5_6HandleINS5_6StringEEENSB_INS5_8JSRegExpEEENSB_INS5_15RegExpMatchInfoEEENSB_INS5_7JSArrayEEEEUliE_FS8_iEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %1012, align 8
  store i64 %1283, i64* %1013, align 8
  %1284 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_133ConstructNamedCaptureGroupsObjectEPNS0_7IsolateENS0_6HandleINS0_10FixedArrayEEERKNSt3__18functionIFNS0_6ObjectEiEEE(%"class.v8::internal::Isolate"* %2, i64* %1094, %"class.std::__1::function"* nonnull dereferenceable(32) %13) #6
  %1285 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %1012, align 8
  %1286 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1285, i64 0, i32 1
  %1287 = load void (i8*)*, void (i8*)** %1286, align 8
  %1288 = icmp eq void (i8*)* %1287, null
  br i1 %1288, label %1291, label %1289

1289:                                             ; preds = %1282
  %1290 = load i8*, i8** %1014, align 8
  call void %1287(i8* %1290) #6
  br label %1291

1291:                                             ; preds = %1289, %1282
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1010) #6
  %1292 = load i64, i64* %1114, align 8
  %1293 = load i64, i64* %1284, align 8
  %1294 = add i32 %1150, 8
  %1295 = sext i32 %1294 to i64
  %1296 = add nsw i64 %1295, 7
  %1297 = add i64 %1296, %1292
  %1298 = inttoptr i64 %1297 to i32*
  %1299 = trunc i64 %1293 to i32
  store atomic volatile i32 %1299, i32* %1298 monotonic, align 4
  %1300 = and i64 %1293, 1
  %1301 = icmp eq i64 %1300, 0
  br i1 %1301, label %1325, label %1302

1302:                                             ; preds = %1291
  %1303 = and i64 %1292, -262144
  %1304 = or i64 %1303, 8
  %1305 = inttoptr i64 %1304 to i64*
  %1306 = load i64, i64* %1305, align 8
  %1307 = and i64 %1306, 262144
  %1308 = icmp eq i64 %1307, 0
  br i1 %1308, label %1313, label %1309

1309:                                             ; preds = %1302
  %1310 = or i64 %1303, 16
  %1311 = inttoptr i64 %1310 to %"class.v8::internal::Heap"**
  %1312 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1311, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %1312, i64 %1292, i64 %1297, i64 %1293) #6
  br label %1313

1313:                                             ; preds = %1309, %1302
  %1314 = and i64 %1293, -262144
  %1315 = or i64 %1314, 8
  %1316 = inttoptr i64 %1315 to i64*
  %1317 = load i64, i64* %1316, align 8
  %1318 = and i64 %1317, 24
  %1319 = icmp eq i64 %1318, 0
  br i1 %1319, label %1325, label %1320

1320:                                             ; preds = %1313
  %1321 = load i64, i64* %1305, align 8
  %1322 = and i64 %1321, 24
  %1323 = icmp eq i64 %1322, 0
  br i1 %1323, label %1324, label %1325

1324:                                             ; preds = %1320
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %1292, i64 %1297, i64 %1293) #6
  br label %1325

1325:                                             ; preds = %1324, %1320, %1313, %1291, %1188
  %1326 = load i64, i64* %1114, align 8
  %1327 = add i64 %1326, 3
  %1328 = inttoptr i64 %1327 to i32*
  %1329 = load i32, i32* %1328, align 4
  %1330 = ashr i32 %1329, 1
  %1331 = call i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %1005, i64* %1114, i8 zeroext 3, i32 %1330, i8 zeroext 0) #6
  %1332 = load i64, i64* %1331, align 8
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_6ObjectE(%"class.v8::internal::FixedArrayBuilder"* nonnull %12, i64 %1332) #6
  br i1 %1015, label %1345, label %1333

1333:                                             ; preds = %1325
  %1334 = inttoptr i64 %1044 to i64*
  %1335 = load i64*, i64** %1016, align 8
  store i64 %1044, i64* %78, align 8
  %1336 = load i32, i32* %82, align 8
  %1337 = add nsw i32 %1336, -1
  store i32 %1337, i32* %82, align 8
  %1338 = load i64*, i64** %80, align 8
  %1339 = icmp eq i64* %1338, %1045
  br i1 %1339, label %1342, label %1340

1340:                                             ; preds = %1333
  store i64* %1045, i64** %80, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %1341 = load i64*, i64** %1016, align 8
  br label %1342

1342:                                             ; preds = %1340, %1333
  %1343 = phi i64* [ %1341, %1340 ], [ %1334, %1333 ]
  %1344 = phi i64* [ %1045, %1340 ], [ %1335, %1333 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %1343, i64* %1344) #6
  br label %1345

1345:                                             ; preds = %1342, %1325
  %1346 = call i32* @_ZN2v88internal17RegExpGlobalCache9FetchNextEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %11) #6
  %1347 = icmp eq i32* %1346, null
  br i1 %1347, label %1348, label %1019

1348:                                             ; preds = %1345, %999
  %1349 = phi i32 [ 0, %999 ], [ %1043, %1345 ]
  %1350 = phi i32 [ -1, %999 ], [ %1023, %1345 ]
  %1351 = load i32, i32* %957, align 8
  %1352 = icmp slt i32 %1351, 0
  br i1 %1352, label %1353, label %1355

1353:                                             ; preds = %1348
  %1354 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %1450

1355:                                             ; preds = %1348
  %1356 = icmp sgt i32 %1350, -1
  br i1 %1356, label %1357, label %1448

1357:                                             ; preds = %1355
  %1358 = icmp sgt i32 %807, %1349
  br i1 %1358, label %1359, label %1375

1359:                                             ; preds = %1357
  %1360 = sub nsw i32 %807, %1349
  %1361 = icmp ult i32 %1360, 2048
  %1362 = icmp ult i32 %1349, 524288
  %1363 = and i1 %1362, %1361
  br i1 %1363, label %1364, label %1367

1364:                                             ; preds = %1359
  %1365 = shl i32 %1349, 11
  %1366 = or i32 %1360, %1365
  br label %1371

1367:                                             ; preds = %1359
  %1368 = sub nsw i32 0, %1360
  %1369 = sext i32 %1368 to i64
  %1370 = shl nsw i64 %1369, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* nonnull %12, i64 %1370) #6
  br label %1371

1371:                                             ; preds = %1364, %1367
  %1372 = phi i32 [ %1349, %1367 ], [ %1366, %1364 ]
  %1373 = sext i32 %1372 to i64
  %1374 = shl nsw i64 %1373, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* nonnull %12, i64 %1374) #6
  br label %1375

1375:                                             ; preds = %1371, %1357
  %1376 = call i32* @_ZN2v88internal17RegExpGlobalCache19LastSuccessfulMatchEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %11) #6
  %1377 = call i64* @_ZN2v88internal6RegExp16SetLastMatchInfoEPNS0_7IsolateENS0_6HandleINS0_15RegExpMatchInfoEEENS4_INS0_6StringEEEiPi(%"class.v8::internal::Isolate"* %2, i64* %120, i64* %165, i32 %803, i32* %1376) #6
  br i1 %808, label %1378, label %1446

1378:                                             ; preds = %1375
  %1379 = shl nsw i32 %803, 1
  %1380 = add i32 %1379, 2
  %1381 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %1382 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %1383 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %1382, i32 %1380, i8 zeroext 0) #6
  %1384 = call i32* @_ZN2v88internal17RegExpGlobalCache19LastSuccessfulMatchEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %11) #6
  %1385 = icmp sgt i32 %1380, 0
  br i1 %1385, label %1386, label %1388

1386:                                             ; preds = %1378
  %1387 = zext i32 %1380 to i64
  br label %1421

1388:                                             ; preds = %1421, %1378
  %1389 = getelementptr inbounds %"class.v8::internal::FixedArrayBuilder", %"class.v8::internal::FixedArrayBuilder"* %12, i64 0, i32 0, i32 0, i32 0
  %1390 = load i64*, i64** %1389, align 8
  %1391 = getelementptr inbounds %"class.v8::internal::FixedArrayBuilder", %"class.v8::internal::FixedArrayBuilder"* %12, i64 0, i32 1
  %1392 = load i32, i32* %1391, align 8
  %1393 = call i64* @_ZN2v88internal10FixedArray13ShrinkOrEmptyEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"* %2, i64* %1390, i32 %1392) #6
  %1394 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 12
  %1395 = call i64* @_ZN2v88internal7Factory21CopyFixedArrayWithMapENS0_6HandleINS0_10FixedArrayEEENS2_INS0_3MapEEE(%"class.v8::internal::Factory"* %1381, i64* %1393, i64* %1394) #6
  %1396 = load i64, i64* %1, align 8
  %1397 = and i64 %1396, -4294967296
  %1398 = add i64 %1396, 11
  %1399 = inttoptr i64 %1398 to i32*
  %1400 = load i32, i32* %1399, align 4
  %1401 = zext i32 %1400 to i64
  %1402 = or i64 %1397, %1401
  %1403 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %971, align 8
  %1404 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1403, null
  br i1 %1404, label %1407, label %1405

1405:                                             ; preds = %1388
  %1406 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1403, i64 %1402) #6
  br label %1419

1407:                                             ; preds = %1388
  %1408 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %1409 = load i64*, i64** %1408, align 8
  %1410 = load i64*, i64** %80, align 8
  %1411 = icmp eq i64* %1409, %1410
  br i1 %1411, label %1412, label %1414

1412:                                             ; preds = %1407
  %1413 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %1414

1414:                                             ; preds = %1412, %1407
  %1415 = phi i64* [ %1413, %1412 ], [ %1409, %1407 ]
  %1416 = ptrtoint i64* %1415 to i64
  %1417 = add i64 %1416, 8
  %1418 = inttoptr i64 %1417 to i64*
  store i64* %1418, i64** %1408, align 8
  store i64 %1402, i64* %1415, align 8
  br label %1419

1419:                                             ; preds = %1414, %1405
  %1420 = phi i64* [ %1406, %1405 ], [ %1415, %1414 ]
  call void @_ZN2v88internal18RegExpResultsCache5EnterEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS4_INS0_6ObjectEEENS4_INS0_10FixedArrayEEESA_NS1_16ResultsCacheTypeE(%"class.v8::internal::Isolate"* %2, i64* %165, i64* %1420, i64* %1395, i64* %1383, i32 0) #6
  br label %1446

1421:                                             ; preds = %1421, %1386
  %1422 = phi i64 [ 0, %1386 ], [ %1444, %1421 ]
  %1423 = load i64, i64* %1383, align 8
  %1424 = getelementptr inbounds i32, i32* %1384, i64 %1422
  %1425 = load i32, i32* %1424, align 4
  %1426 = shl i32 %1425, 1
  %1427 = trunc i64 %1422 to i32
  %1428 = shl i32 %1427, 2
  %1429 = sext i32 %1428 to i64
  %1430 = add i64 %1423, 7
  %1431 = add i64 %1430, %1429
  %1432 = inttoptr i64 %1431 to i32*
  store atomic volatile i32 %1426, i32* %1432 monotonic, align 4
  %1433 = or i64 %1422, 1
  %1434 = load i64, i64* %1383, align 8
  %1435 = getelementptr inbounds i32, i32* %1384, i64 %1433
  %1436 = load i32, i32* %1435, align 4
  %1437 = shl i32 %1436, 1
  %1438 = trunc i64 %1433 to i32
  %1439 = shl i32 %1438, 2
  %1440 = sext i32 %1439 to i64
  %1441 = add i64 %1434, 7
  %1442 = add i64 %1441, %1440
  %1443 = inttoptr i64 %1442 to i32*
  store atomic volatile i32 %1437, i32* %1443 monotonic, align 4
  %1444 = add nuw nsw i64 %1422, 2
  %1445 = icmp eq i64 %1444, %1387
  br i1 %1445, label %1388, label %1421

1446:                                             ; preds = %1419, %1375
  %1447 = call i64* @_ZN2v88internal17FixedArrayBuilder9ToJSArrayENS0_6HandleINS0_7JSArrayEEE(%"class.v8::internal::FixedArrayBuilder"* nonnull %12, i64* %138) #6
  br label %1450

1448:                                             ; preds = %1355
  %1449 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 6
  br label %1450

1450:                                             ; preds = %1448, %1446, %1353
  %1451 = phi i64* [ %1354, %1353 ], [ %1447, %1446 ], [ %1449, %1448 ]
  %1452 = load i64, i64* %1451, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1001) #6
  br label %1453

1453:                                             ; preds = %1450, %960
  %1454 = phi i64 [ %962, %960 ], [ %1452, %1450 ]
  call void @_ZN2v88internal17RegExpGlobalCacheD1Ev(%"class.v8::internal::RegExpGlobalCache"* nonnull %11) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %956) #6
  br label %1455

1455:                                             ; preds = %1453, %953, %716, %451
  %1456 = phi i64 [ %717, %716 ], [ %452, %451 ], [ %1454, %1453 ], [ %954, %953 ]
  %1457 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %1457, label %1471, label %1458

1458:                                             ; preds = %1455
  %1459 = inttoptr i64 %79 to i64*
  %1460 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %77, i64 0, i32 0
  %1461 = load i64*, i64** %1460, align 8
  store i64 %79, i64* %78, align 8
  %1462 = load i32, i32* %82, align 8
  %1463 = add nsw i32 %1462, -1
  store i32 %1463, i32* %82, align 8
  %1464 = load i64*, i64** %80, align 8
  %1465 = icmp eq i64* %1464, %81
  br i1 %1465, label %1468, label %1466

1466:                                             ; preds = %1458
  store i64* %81, i64** %80, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %1467 = load i64*, i64** %1460, align 8
  br label %1468

1468:                                             ; preds = %1466, %1458
  %1469 = phi i64* [ %1467, %1466 ], [ %1459, %1458 ]
  %1470 = phi i64* [ %81, %1466 ], [ %1461, %1458 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %1469, i64* %1470) #6
  br label %1471

1471:                                             ; preds = %1455, %1468
  %1472 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %40, align 8
  %1473 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %1472, null
  br i1 %1473, label %1490, label %1474

1474:                                             ; preds = %1471
  %1475 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %15, i64 0, i32 1, i32 0
  %1476 = load i8*, i8** %1475, align 8
  %1477 = load atomic i8, i8* %1476 monotonic, align 1
  %1478 = icmp eq i8 %1477, 0
  br i1 %1478, label %1490, label %1479

1479:                                             ; preds = %1474
  %1480 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %1481 = load i8*, i8** %1475, align 8
  %1482 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %15, i64 0, i32 1, i32 1
  %1483 = load i8*, i8** %1482, align 8
  %1484 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %15, i64 0, i32 1, i32 2
  %1485 = load i64, i64* %1484, align 8
  %1486 = bitcast %"class.v8::TracingController"* %1480 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %1487 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %1486, align 8
  %1488 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %1487, i64 5
  %1489 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %1488, align 8
  call void %1489(%"class.v8::TracingController"* %1480, i8* %1481, i8* %1483, i64 %1485) #6
  br label %1490

1490:                                             ; preds = %1471, %1474, %1479
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #6
  %1491 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %14, i64 0, i32 0
  %1492 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %1491, align 8
  %1493 = icmp eq %"class.v8::internal::RuntimeCallStats"* %1492, null
  br i1 %1493, label %1496, label %1494, !prof !3

1494:                                             ; preds = %1490
  %1495 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %14, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %1492, %"class.v8::internal::RuntimeCallTimer"* %1495) #6
  br label %1496

1496:                                             ; preds = %1490, %1494
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #6
  ret i64 %1456
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal48Runtime_StringReplaceNonGlobalRegExpWithFunctionEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = alloca %"class.v8::internal::IncrementalStringBuilder", align 8
  %5 = alloca %"class.v8::internal::ScopedVector", align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.std::__1::function", align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1153", %"struct.std::__1::atomic.1153"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10, !prof !3

10:                                               ; preds = %3
  %11 = tail call fastcc i64 @_ZN2v88internalL54Stats_Runtime_StringReplaceNonGlobalRegExpWithFunctionEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %493

12:                                               ; preds = %3
  %13 = ptrtoint i64* %1 to i64
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %15 = bitcast %"struct.v8::internal::HandleScopeData"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %19, align 8
  %22 = load i64, i64* %1, align 8
  %23 = and i64 %22, 1
  %24 = icmp eq i64 %23, 0
  %25 = inttoptr i64 %16 to i64*
  br i1 %24, label %37, label %26, !prof !4

26:                                               ; preds = %12
  %27 = and i64 %22, -4294967296
  %28 = add i64 %22, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %27, %31
  %33 = add i64 %32, 7
  %34 = inttoptr i64 %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = icmp ult i16 %35, 64
  br i1 %36, label %38, label %37, !prof !3

37:                                               ; preds = %26, %12
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0)) #18
  unreachable

38:                                               ; preds = %26
  %39 = add i64 %13, -8
  %40 = inttoptr i64 %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %55, label %44, !prof !4

44:                                               ; preds = %38
  %45 = and i64 %41, -4294967296
  %46 = add i64 %41, -1
  %47 = inttoptr i64 %46 to i32*
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %45, %49
  %51 = add i64 %50, 7
  %52 = inttoptr i64 %51 to i16*
  %53 = load atomic i16, i16* %52 monotonic, align 2
  %54 = icmp eq i16 %53, 1102
  br i1 %54, label %56, label %55, !prof !3

55:                                               ; preds = %44, %38
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.30, i64 0, i64 0)) #18
  unreachable

56:                                               ; preds = %44
  %57 = add i64 %13, -16
  %58 = inttoptr i64 %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = and i64 %59, 1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %73, label %62, !prof !4

62:                                               ; preds = %56
  %63 = and i64 %59, -4294967296
  %64 = add i64 %59, -1
  %65 = inttoptr i64 %64 to i32*
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = zext i32 %66 to i64
  %68 = or i64 %63, %67
  %69 = add i64 %68, 7
  %70 = inttoptr i64 %69 to i16*
  %71 = load atomic i16, i16* %70 monotonic, align 2
  %72 = icmp ugt i16 %71, 185
  br i1 %72, label %74, label %73, !prof !3

73:                                               ; preds = %62, %56
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31, i64 0, i64 0)) #18
  unreachable

74:                                               ; preds = %62
  %75 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = and i64 %77, -4294967296
  %79 = add i64 %77, -1
  %80 = inttoptr i64 %79 to i32*
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = zext i32 %81 to i64
  %83 = or i64 %78, %82
  %84 = add i64 %83, 19
  %85 = inttoptr i64 %84 to i32*
  %86 = load i32, i32* %85, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %78, %87
  %89 = add i64 %88, 631
  %90 = inttoptr i64 %89 to i32*
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = zext i32 %91 to i64
  %93 = or i64 %78, %92
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %95 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %94, align 8
  %96 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %74
  %98 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %95, i64 %93) #6
  br label %109

99:                                               ; preds = %74
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %101 = icmp eq i64* %18, %25
  br i1 %101, label %102, label %104

102:                                              ; preds = %99
  %103 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %104

104:                                              ; preds = %102, %99
  %105 = phi i64* [ %103, %102 ], [ %25, %99 ]
  %106 = ptrtoint i64* %105 to i64
  %107 = add i64 %106, 8
  %108 = inttoptr i64 %107 to i64*
  store i64* %108, i64** %100, align 8
  store i64 %93, i64* %105, align 8
  br label %109

109:                                              ; preds = %104, %97
  %110 = phi i64* [ %98, %97 ], [ %105, %104 ]
  %111 = load i64, i64* %40, align 8
  %112 = and i64 %111, -4294967296
  %113 = add i64 %111, 11
  %114 = inttoptr i64 %113 to i32*
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i64
  %117 = or i64 %112, %116
  %118 = add i64 %117, 15
  %119 = inttoptr i64 %118 to i32*
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 16
  %122 = icmp ne i32 %121, 0
  br i1 %122, label %123, label %200

123:                                              ; preds = %109
  %124 = add i64 %111, 23
  %125 = inttoptr i64 %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = zext i32 %126 to i64
  %128 = or i64 %112, %127
  %129 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %94, align 8
  %130 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %123
  %132 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %129, i64 %128) #6
  %133 = load i64, i64* %132, align 8
  br label %146

134:                                              ; preds = %123
  %135 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %136 = load i64*, i64** %135, align 8
  %137 = load i64*, i64** %17, align 8
  %138 = icmp eq i64* %136, %137
  br i1 %138, label %139, label %141

139:                                              ; preds = %134
  %140 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %141

141:                                              ; preds = %139, %134
  %142 = phi i64* [ %140, %139 ], [ %136, %134 ]
  %143 = ptrtoint i64* %142 to i64
  %144 = add i64 %143, 8
  %145 = inttoptr i64 %144 to i64*
  store i64* %145, i64** %135, align 8
  store i64 %128, i64* %142, align 8
  br label %146

146:                                              ; preds = %141, %131
  %147 = phi i64 [ %133, %131 ], [ %128, %141 ]
  %148 = phi i64* [ %132, %131 ], [ %142, %141 ]
  %149 = and i64 %147, 1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %174

151:                                              ; preds = %146
  %152 = trunc i64 %147 to i32
  %153 = ashr i32 %152, 1
  %154 = icmp sgt i32 %153, 0
  %155 = select i1 %154, i32 %153, i32 0
  %156 = shl nuw nsw i32 %155, 1
  %157 = zext i32 %156 to i64
  %158 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %94, align 8
  %159 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %158, null
  br i1 %159, label %162, label %160

160:                                              ; preds = %151
  %161 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %158, i64 %157) #6
  br label %176

162:                                              ; preds = %151
  %163 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %164 = load i64*, i64** %163, align 8
  %165 = load i64*, i64** %17, align 8
  %166 = icmp eq i64* %164, %165
  br i1 %166, label %167, label %169

167:                                              ; preds = %162
  %168 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %169

169:                                              ; preds = %167, %162
  %170 = phi i64* [ %168, %167 ], [ %164, %162 ]
  %171 = ptrtoint i64* %170 to i64
  %172 = add i64 %171, 8
  %173 = inttoptr i64 %172 to i64*
  store i64* %173, i64** %163, align 8
  store i64 %157, i64* %170, align 8
  br label %176

174:                                              ; preds = %146
  %175 = tail call i64* @_ZN2v88internal6Object15ConvertToLengthEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* %148) #6
  br label %176

176:                                              ; preds = %174, %169, %160
  %177 = phi i64* [ %175, %174 ], [ %161, %160 ], [ %170, %169 ]
  %178 = icmp eq i64* %177, null
  br i1 %178, label %197, label %179

179:                                              ; preds = %176
  %180 = load i64, i64* %177, align 8
  %181 = and i64 %180, 1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %188

183:                                              ; preds = %179
  %184 = trunc i64 %180 to i32
  %185 = ashr i32 %184, 1
  %186 = icmp slt i32 %184, 2
  %187 = select i1 %186, i32 0, i32 %185
  br label %200

188:                                              ; preds = %179
  %189 = add i64 %180, 3
  %190 = inttoptr i64 %189 to double*
  %191 = load double, double* %190, align 1
  %192 = fcmp ult double %191, 1.000000e+00
  br i1 %192, label %200, label %193

193:                                              ; preds = %188
  %194 = fcmp olt double %191, 0x41EFFFFFFFE00000
  %195 = select i1 %194, double %191, double 0x41EFFFFFFFE00000
  %196 = fptoui double %195 to i32
  br label %200

197:                                              ; preds = %176
  %198 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %199 = load i64, i64* %198, align 8
  br label %478

200:                                              ; preds = %193, %188, %183, %109
  %201 = phi i32 [ 0, %109 ], [ %196, %193 ], [ 0, %188 ], [ %187, %183 ]
  %202 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 6
  %203 = load i64, i64* %202, align 8
  %204 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %94, align 8
  %205 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %204, null
  br i1 %205, label %208, label %206

206:                                              ; preds = %200
  %207 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %204, i64 %203) #6
  br label %220

208:                                              ; preds = %200
  %209 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %210 = load i64*, i64** %209, align 8
  %211 = load i64*, i64** %17, align 8
  %212 = icmp eq i64* %210, %211
  br i1 %212, label %213, label %215

213:                                              ; preds = %208
  %214 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %215

215:                                              ; preds = %213, %208
  %216 = phi i64* [ %214, %213 ], [ %210, %208 ]
  %217 = ptrtoint i64* %216 to i64
  %218 = add i64 %217, 8
  %219 = inttoptr i64 %218 to i64*
  store i64* %219, i64** %209, align 8
  store i64 %203, i64* %216, align 8
  br label %220

220:                                              ; preds = %215, %206
  %221 = phi i64* [ %207, %206 ], [ %216, %215 ]
  %222 = load i64, i64* %1, align 8
  %223 = add i64 %222, 7
  %224 = inttoptr i64 %223 to i32*
  %225 = load i32, i32* %224, align 4
  %226 = icmp ugt i32 %201, %225
  br i1 %226, label %233, label %227

227:                                              ; preds = %220
  %228 = tail call i64* @_ZN2v88internal6RegExp4ExecEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiNS4_INS0_15RegExpMatchInfoEEENS1_10ExecQuirksE(%"class.v8::internal::Isolate"* %2, i64* %40, i64* %1, i32 %201, i64* %110, i32 0) #6
  %229 = icmp eq i64* %228, null
  br i1 %229, label %230, label %233

230:                                              ; preds = %227
  %231 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %232 = load i64, i64* %231, align 8
  br label %478

233:                                              ; preds = %227, %220
  %234 = phi i64* [ %221, %220 ], [ %228, %227 ]
  %235 = load i64, i64* %234, align 8
  %236 = load i64, i64* %202, align 8
  %237 = trunc i64 %235 to i32
  %238 = trunc i64 %236 to i32
  %239 = icmp eq i32 %237, %238
  br i1 %239, label %240, label %247

240:                                              ; preds = %233
  br i1 %122, label %241, label %245

241:                                              ; preds = %240
  %242 = load i64, i64* %40, align 8
  %243 = add i64 %242, 23
  %244 = inttoptr i64 %243 to i32*
  store atomic volatile i32 0, i32* %244 monotonic, align 4
  br label %245

245:                                              ; preds = %241, %240
  %246 = load i64, i64* %1, align 8
  br label %478

247:                                              ; preds = %233
  %248 = add i64 %235, 19
  %249 = inttoptr i64 %248 to i32*
  %250 = load atomic i32, i32* %249 monotonic, align 4
  %251 = ashr i32 %250, 1
  %252 = add i64 %235, 23
  %253 = inttoptr i64 %252 to i32*
  %254 = load atomic i32, i32* %253 monotonic, align 4
  %255 = ashr i32 %254, 1
  br i1 %122, label %256, label %261

256:                                              ; preds = %247
  %257 = load i64, i64* %40, align 8
  %258 = and i32 %254, -2
  %259 = add i64 %257, 23
  %260 = inttoptr i64 %259 to i32*
  store atomic volatile i32 %258, i32* %260 monotonic, align 4
  br label %261

261:                                              ; preds = %256, %247
  %262 = bitcast %"class.v8::internal::IncrementalStringBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %262) #6
  call void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4, %"class.v8::internal::Isolate"* %2) #6
  %263 = load i64, i64* %1, align 8
  %264 = add i64 %263, 7
  %265 = inttoptr i64 %264 to i32*
  %266 = load i32, i32* %265, align 4
  %267 = icmp eq i32 %266, %251
  br i1 %267, label %270, label %268

268:                                              ; preds = %261
  %269 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %75, i64* %1, i32 0, i32 %251) #6
  br label %270

270:                                              ; preds = %268, %261
  %271 = phi i64* [ %269, %268 ], [ %1, %261 ]
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4, i64* %271) #6
  %272 = load i64, i64* %234, align 8
  %273 = add i64 %272, 7
  %274 = inttoptr i64 %273 to i32*
  %275 = load atomic i32, i32* %274 monotonic, align 4
  %276 = ashr i32 %275, 1
  %277 = sdiv i32 %276, 2
  %278 = icmp sgt i32 %275, 7
  br i1 %278, label %279, label %322

279:                                              ; preds = %270
  %280 = load i64, i64* %40, align 8
  %281 = and i64 %280, -4294967296
  %282 = add i64 %280, 11
  %283 = inttoptr i64 %282 to i32*
  %284 = load i32, i32* %283, align 4
  %285 = zext i32 %284 to i64
  %286 = or i64 %281, %285
  %287 = add i64 %286, 43
  %288 = inttoptr i64 %287 to i32*
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = zext i32 %289 to i64
  %291 = or i64 %281, %290
  %292 = and i64 %290, 1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %322, label %294

294:                                              ; preds = %279
  %295 = add i64 %291, -1
  %296 = inttoptr i64 %295 to i32*
  %297 = load atomic i32, i32* %296 monotonic, align 4
  %298 = zext i32 %297 to i64
  %299 = or i64 %281, %298
  %300 = add i64 %299, 7
  %301 = inttoptr i64 %300 to i16*
  %302 = load atomic i16, i16* %301 monotonic, align 2
  %303 = add i16 %302, -119
  %304 = icmp ult i16 %303, 13
  br i1 %304, label %305, label %322

305:                                              ; preds = %294
  %306 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %94, align 8
  %307 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %306, null
  br i1 %307, label %310, label %308

308:                                              ; preds = %305
  %309 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %306, i64 %291) #6
  br label %322

310:                                              ; preds = %305
  %311 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %312 = load i64*, i64** %311, align 8
  %313 = load i64*, i64** %17, align 8
  %314 = icmp eq i64* %312, %313
  br i1 %314, label %315, label %317

315:                                              ; preds = %310
  %316 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %317

317:                                              ; preds = %315, %310
  %318 = phi i64* [ %316, %315 ], [ %312, %310 ]
  %319 = ptrtoint i64* %318 to i64
  %320 = add i64 %319, 8
  %321 = inttoptr i64 %320 to i64*
  store i64* %321, i64** %311, align 8
  store i64 %291, i64* %318, align 8
  br label %322

322:                                              ; preds = %317, %308, %294, %279, %270
  %323 = phi i64* [ null, %270 ], [ null, %294 ], [ %309, %308 ], [ %318, %317 ], [ null, %279 ]
  %324 = phi i1 [ false, %270 ], [ false, %294 ], [ true, %308 ], [ true, %317 ], [ false, %279 ]
  %325 = icmp ugt i32 %277, 65534
  br i1 %325, label %330, label %326

326:                                              ; preds = %322
  %327 = select i1 %324, i32 3, i32 2
  %328 = add nuw nsw i32 %327, %277
  %329 = icmp ugt i32 %328, 65534
  br i1 %329, label %330, label %334

330:                                              ; preds = %326, %322
  %331 = call i64* @_ZN2v88internal7Factory13NewRangeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %75, i32 323, i64* null, i64* null, i64* null) #6
  %332 = load i64, i64* %331, align 8
  %333 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %2, i64 %332, %"class.v8::internal::MessageLocation"* null) #6
  br label %476

334:                                              ; preds = %326
  %335 = bitcast %"class.v8::internal::ScopedVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %335) #6
  %336 = zext i32 %328 to i64
  %337 = shl nuw nsw i64 %336, 3
  %338 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %337, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #20
  %339 = icmp eq i8* %338, null
  br i1 %339, label %340, label %349

340:                                              ; preds = %334
  %341 = call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #6
  %342 = bitcast %"class.v8::Platform"* %341 to void (%"class.v8::Platform"*)***
  %343 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %342, align 8
  %344 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %343, i64 3
  %345 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %344, align 8
  call void %345(%"class.v8::Platform"* %341) #6
  %346 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %337, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #20
  %347 = icmp eq i8* %346, null
  br i1 %347, label %348, label %349

348:                                              ; preds = %340
  call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0)) #18
  unreachable

349:                                              ; preds = %340, %334
  %350 = phi i8* [ %338, %334 ], [ %346, %340 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %350, i8 0, i64 %337, i1 false) #6
  %351 = getelementptr inbounds %"class.v8::internal::ScopedVector", %"class.v8::internal::ScopedVector"* %5, i64 0, i32 0, i32 0
  %352 = bitcast %"class.v8::internal::ScopedVector"* %5 to i8**
  store i8* %350, i8** %352, align 8
  %353 = getelementptr inbounds %"class.v8::internal::ScopedVector", %"class.v8::internal::ScopedVector"* %5, i64 0, i32 0, i32 1
  store i64 %336, i64* %353, align 8
  %354 = icmp sgt i32 %275, 3
  br i1 %354, label %355, label %359

355:                                              ; preds = %349
  %356 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %391

357:                                              ; preds = %391
  %358 = trunc i64 %402 to i32
  br label %359

359:                                              ; preds = %357, %349
  %360 = phi i32 [ 0, %349 ], [ %358, %357 ]
  %361 = sext i32 %251 to i64
  %362 = shl nsw i64 %361, 1
  %363 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %94, align 8
  %364 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %363, null
  br i1 %364, label %368, label %365

365:                                              ; preds = %359
  %366 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %363, i64 %362) #6
  %367 = ptrtoint i64* %366 to i64
  br label %380

368:                                              ; preds = %359
  %369 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %370 = load i64*, i64** %369, align 8
  %371 = load i64*, i64** %17, align 8
  %372 = icmp eq i64* %370, %371
  br i1 %372, label %373, label %375

373:                                              ; preds = %368
  %374 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %375

375:                                              ; preds = %373, %368
  %376 = phi i64* [ %374, %373 ], [ %370, %368 ]
  %377 = ptrtoint i64* %376 to i64
  %378 = add i64 %377, 8
  %379 = inttoptr i64 %378 to i64*
  store i64* %379, i64** %369, align 8
  store i64 %362, i64* %376, align 8
  br label %380

380:                                              ; preds = %375, %365
  %381 = phi i64 [ %367, %365 ], [ %377, %375 ]
  %382 = add nuw nsw i32 %360, 1
  %383 = zext i32 %360 to i64
  %384 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %351, align 8
  %385 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %384, i64 %383
  %386 = bitcast %"class.v8::internal::Handle.1169"* %385 to i64*
  store i64 %381, i64* %386, align 8
  %387 = zext i32 %382 to i64
  %388 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %351, align 8
  %389 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %388, i64 %387
  %390 = bitcast %"class.v8::internal::Handle.1169"* %389 to i64*
  store i64 %13, i64* %390, align 8
  br i1 %324, label %405, label %426

391:                                              ; preds = %391, %355
  %392 = phi i64 [ 0, %355 ], [ %402, %391 ]
  %393 = phi i32 [ 0, %355 ], [ %403, %391 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #6
  %394 = call i64* @_ZN2v88internal11RegExpUtils20GenericCaptureGetterEPNS0_7IsolateENS0_6HandleINS0_15RegExpMatchInfoEEEiPb(%"class.v8::internal::Isolate"* %2, i64* %234, i32 %393, i8* nonnull %6) #6
  %395 = load i8, i8* %6, align 1, !range !5
  %396 = icmp eq i8 %395, 0
  %397 = select i1 %396, i64* %356, i64* %394
  %398 = ptrtoint i64* %397 to i64
  %399 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %351, align 8
  %400 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %399, i64 %392
  %401 = bitcast %"class.v8::internal::Handle.1169"* %400 to i64*
  store i64 %398, i64* %401, align 8
  %402 = add nuw nsw i64 %392, 1
  %403 = add nuw nsw i32 %393, 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #6
  %404 = icmp slt i32 %403, %277
  br i1 %404, label %391, label %357

405:                                              ; preds = %380
  %406 = add nuw nsw i32 %360, 2
  %407 = bitcast %"class.std::__1::function"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %407) #6
  %408 = ptrtoint %"class.v8::internal::ScopedVector"* %5 to i64
  %409 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 1, i32 0
  %410 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 2
  store i64 (%"union.std::__1::__function::__policy_storage"*, i32)* @_ZNSt3__110__function16__policy_invokerIFN2v88internal6ObjectEiEE11__call_implINS0_20__default_alloc_funcIZNS3_L58__RT_impl_Runtime_StringReplaceNonGlobalRegExpWithFunctionENS3_9ArgumentsILNS3_13ArgumentsTypeE0EEEPNS3_7IsolateEEUliE_S5_EEEES4_PKNS0_16__policy_storageEi, i64 (%"union.std::__1::__function::__policy_storage"*, i32)** %409, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internalL58__RT_impl_Runtime_StringReplaceNonGlobalRegExpWithFunctionENS5_9ArgumentsILNS5_13ArgumentsTypeE0EEEPNS5_7IsolateEEUliE_FNS5_6ObjectEiEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %410, align 8
  %411 = bitcast %"class.std::__1::function"* %7 to i64*
  store i64 %408, i64* %411, align 8
  %412 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_133ConstructNamedCaptureGroupsObjectEPNS0_7IsolateENS0_6HandleINS0_10FixedArrayEEERKNSt3__18functionIFNS0_6ObjectEiEEE(%"class.v8::internal::Isolate"* %2, i64* %323, %"class.std::__1::function"* nonnull dereferenceable(32) %7) #6
  %413 = ptrtoint i64* %412 to i64
  %414 = zext i32 %406 to i64
  %415 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %351, align 8
  %416 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %415, i64 %414
  %417 = bitcast %"class.v8::internal::Handle.1169"* %416 to i64*
  store i64 %413, i64* %417, align 8
  %418 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %410, align 8
  %419 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %418, i64 0, i32 1
  %420 = load void (i8*)*, void (i8*)** %419, align 8
  %421 = icmp eq void (i8*)* %420, null
  br i1 %421, label %425, label %422

422:                                              ; preds = %405
  %423 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 0, i32 0
  %424 = load i8*, i8** %423, align 8
  call void %420(i8* %424) #6
  br label %425

425:                                              ; preds = %422, %405
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %407) #6
  br label %426

426:                                              ; preds = %425, %380
  %427 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 4
  %428 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %351, align 8
  %429 = call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %2, i64* %58, i64* %427, i32 %328, %"class.v8::internal::Handle.1169"* %428) #6
  %430 = icmp eq i64* %429, null
  br i1 %430, label %431, label %433

431:                                              ; preds = %426
  %432 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %468

433:                                              ; preds = %426
  %434 = load i64, i64* %429, align 8
  %435 = and i64 %434, 1
  %436 = icmp eq i64 %435, 0
  br i1 %436, label %448, label %437

437:                                              ; preds = %433
  %438 = and i64 %434, -4294967296
  %439 = add i64 %434, -1
  %440 = inttoptr i64 %439 to i32*
  %441 = load atomic i32, i32* %440 monotonic, align 4
  %442 = zext i32 %441 to i64
  %443 = or i64 %438, %442
  %444 = add i64 %443, 7
  %445 = inttoptr i64 %444 to i16*
  %446 = load atomic i16, i16* %445 monotonic, align 2
  %447 = icmp ult i16 %446, 64
  br i1 %447, label %453, label %448

448:                                              ; preds = %437, %433
  %449 = call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* nonnull %429) #6
  %450 = icmp eq i64* %449, null
  br i1 %450, label %451, label %453

451:                                              ; preds = %448
  %452 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %468

453:                                              ; preds = %448, %437
  %454 = phi i64* [ %449, %448 ], [ %429, %437 ]
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4, i64* nonnull %454) #6
  %455 = icmp eq i32 %255, 0
  br i1 %455, label %462, label %456

456:                                              ; preds = %453
  %457 = load i64, i64* %1, align 8
  %458 = add i64 %457, 7
  %459 = inttoptr i64 %458 to i32*
  %460 = load i32, i32* %459, align 4
  %461 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %75, i64* %1, i32 %255, i32 %460) #6
  br label %462

462:                                              ; preds = %456, %453
  %463 = phi i64* [ %461, %456 ], [ %1, %453 ]
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4, i64* %463) #6
  %464 = call i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4) #6
  %465 = icmp eq i64* %464, null
  %466 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %467 = select i1 %465, i64* %466, i64* %464
  br label %468

468:                                              ; preds = %462, %451, %431
  %469 = phi i64* [ %432, %431 ], [ %452, %451 ], [ %467, %462 ]
  %470 = load i64, i64* %469, align 8
  %471 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %351, align 8
  %472 = icmp eq %"class.v8::internal::Handle.1169"* %471, null
  br i1 %472, label %475, label %473

473:                                              ; preds = %468
  %474 = bitcast %"class.v8::internal::Handle.1169"* %471 to i8*
  call void @_ZdaPv(i8* %474) #20
  br label %475

475:                                              ; preds = %473, %468
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %335) #6
  br label %476

476:                                              ; preds = %475, %330
  %477 = phi i64 [ %333, %330 ], [ %470, %475 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %262) #6
  br label %478

478:                                              ; preds = %476, %245, %230, %197
  %479 = phi i64 [ %199, %197 ], [ %246, %245 ], [ %477, %476 ], [ %232, %230 ]
  %480 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %480, label %493, label %481

481:                                              ; preds = %478
  %482 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %14, i64 0, i32 0
  %483 = load i64*, i64** %482, align 8
  store i64 %16, i64* %15, align 8
  %484 = load i32, i32* %19, align 8
  %485 = add nsw i32 %484, -1
  store i32 %485, i32* %19, align 8
  %486 = load i64*, i64** %17, align 8
  %487 = icmp eq i64* %486, %18
  br i1 %487, label %490, label %488

488:                                              ; preds = %481
  store i64* %18, i64** %17, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %489 = load i64*, i64** %482, align 8
  br label %490

490:                                              ; preds = %488, %481
  %491 = phi i64* [ %489, %488 ], [ %25, %481 ]
  %492 = phi i64* [ %18, %488 ], [ %483, %481 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %491, i64* %492) #6
  br label %493

493:                                              ; preds = %490, %478, %10
  %494 = phi i64 [ %11, %10 ], [ %479, %478 ], [ %479, %490 ]
  ret i64 %494
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL54Stats_Runtime_StringReplaceNonGlobalRegExpWithFunctionEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #5 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1163"], align 16
  %5 = alloca %"class.v8::internal::IncrementalStringBuilder", align 8
  %6 = alloca %"class.v8::internal::ScopedVector", align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::__1::function", align 8
  %9 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %10 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %11 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 40, i1 false) #6
  %12 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1153", %"struct.std::__1::atomic.1153"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %20, label %14, !prof !3

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %9, i64 0, i32 0
  %16 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %9, i64 0, i32 1
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %18 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %18, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %19, %"class.v8::internal::RuntimeCallStats"** %15, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %19, %"class.v8::internal::RuntimeCallTimer"* %16, i32 550) #6
  br label %20

20:                                               ; preds = %3, %14
  %21 = load atomic i64, i64* @_ZZN2v88internalL54Stats_Runtime_StringReplaceNonGlobalRegExpWithFunctionEiPmPNS0_7IsolateEE29trace_event_unique_atomic1482 monotonic, align 8
  %22 = inttoptr i64 %21 to i8*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %24, label %32

24:                                               ; preds = %20
  %25 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %26 = bitcast %"class.v8::TracingController"* %25 to i8* (%"class.v8::TracingController"*, i8*)***
  %27 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %26, align 8
  %28 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %27, i64 2
  %29 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %28, align 8
  %30 = call i8* %29(%"class.v8::TracingController"* %25, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0)) #6
  %31 = ptrtoint i8* %30 to i64
  store atomic volatile i64 %31, i64* @_ZZN2v88internalL54Stats_Runtime_StringReplaceNonGlobalRegExpWithFunctionEiPmPNS0_7IsolateEE29trace_event_unique_atomic1482 monotonic, align 8
  br label %32

32:                                               ; preds = %20, %24
  %33 = phi i8* [ %22, %20 ], [ %30, %24 ]
  %34 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #6
  %35 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %35, align 8
  %36 = load atomic i8, i8* %33 monotonic, align 1
  %37 = and i8 %36, 5
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %70, label %39

39:                                               ; preds = %32
  %40 = bitcast [2 x %"class.std::__1::unique_ptr.1163"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #6
  %41 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %40, i8 0, i64 16, i1 false) #6
  %42 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %43 = bitcast %"class.v8::TracingController"* %42 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)***
  %44 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*** %43, align 8
  %45 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)** %44, i64 3
  %46 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)** %45, align 8
  %47 = call i64 %46(%"class.v8::TracingController"* %42, i8 signext 88, i8* %33, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.29, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1163"* nonnull %41, i32 0) #6
  %48 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %49 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %48, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %48, align 8
  %50 = icmp eq %"class.v8::ConvertableToTraceFormat"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %39
  %52 = bitcast %"class.v8::ConvertableToTraceFormat"* %49 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %53 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %53, i64 1
  %55 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %54, align 8
  call void %55(%"class.v8::ConvertableToTraceFormat"* nonnull %49) #6
  br label %56

56:                                               ; preds = %51, %39
  %57 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %57, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %57, align 16
  %59 = icmp eq %"class.v8::ConvertableToTraceFormat"* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = bitcast %"class.v8::ConvertableToTraceFormat"* %58 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %62 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %62, i64 1
  %64 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %63, align 8
  call void %64(%"class.v8::ConvertableToTraceFormat"* nonnull %58) #6
  br label %65

65:                                               ; preds = %56, %60
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #6
  %66 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1
  %67 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %66, i64 0, i32 0
  store i8* %33, i8** %67, align 8
  %68 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.29, i64 0, i64 0), i8** %68, align 8
  %69 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1, i32 2
  store i64 %47, i64* %69, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %66, %"struct.v8::internal::tracing::ScopedTracer::Data"** %35, align 8
  br label %70

70:                                               ; preds = %32, %65
  %71 = ptrtoint i64* %1 to i64
  %72 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %73 = bitcast %"struct.v8::internal::HandleScopeData"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %76 = load i64*, i64** %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %78 = load i32, i32* %77, align 8
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %77, align 8
  %80 = load i64, i64* %1, align 8
  %81 = and i64 %80, 1
  %82 = icmp eq i64 %81, 0
  %83 = inttoptr i64 %74 to i64*
  br i1 %82, label %95, label %84, !prof !4

84:                                               ; preds = %70
  %85 = and i64 %80, -4294967296
  %86 = add i64 %80, -1
  %87 = inttoptr i64 %86 to i32*
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = zext i32 %88 to i64
  %90 = or i64 %85, %89
  %91 = add i64 %90, 7
  %92 = inttoptr i64 %91 to i16*
  %93 = load atomic i16, i16* %92 monotonic, align 2
  %94 = icmp ult i16 %93, 64
  br i1 %94, label %96, label %95, !prof !3

95:                                               ; preds = %84, %70
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0)) #18
  unreachable

96:                                               ; preds = %84
  %97 = add i64 %71, -8
  %98 = inttoptr i64 %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = and i64 %99, 1
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %113, label %102, !prof !4

102:                                              ; preds = %96
  %103 = and i64 %99, -4294967296
  %104 = add i64 %99, -1
  %105 = inttoptr i64 %104 to i32*
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = zext i32 %106 to i64
  %108 = or i64 %103, %107
  %109 = add i64 %108, 7
  %110 = inttoptr i64 %109 to i16*
  %111 = load atomic i16, i16* %110 monotonic, align 2
  %112 = icmp eq i16 %111, 1102
  br i1 %112, label %114, label %113, !prof !3

113:                                              ; preds = %102, %96
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.30, i64 0, i64 0)) #18
  unreachable

114:                                              ; preds = %102
  %115 = add i64 %71, -16
  %116 = inttoptr i64 %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = and i64 %117, 1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %131, label %120, !prof !4

120:                                              ; preds = %114
  %121 = and i64 %117, -4294967296
  %122 = add i64 %117, -1
  %123 = inttoptr i64 %122 to i32*
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = zext i32 %124 to i64
  %126 = or i64 %121, %125
  %127 = add i64 %126, 7
  %128 = inttoptr i64 %127 to i16*
  %129 = load atomic i16, i16* %128 monotonic, align 2
  %130 = icmp ugt i16 %129, 185
  br i1 %130, label %132, label %131, !prof !3

131:                                              ; preds = %120, %114
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31, i64 0, i64 0)) #18
  unreachable

132:                                              ; preds = %120
  %133 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %134 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load i64, i64* %134, align 8
  %136 = and i64 %135, -4294967296
  %137 = add i64 %135, -1
  %138 = inttoptr i64 %137 to i32*
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = zext i32 %139 to i64
  %141 = or i64 %136, %140
  %142 = add i64 %141, 19
  %143 = inttoptr i64 %142 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = zext i32 %144 to i64
  %146 = or i64 %136, %145
  %147 = add i64 %146, 631
  %148 = inttoptr i64 %147 to i32*
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = zext i32 %149 to i64
  %151 = or i64 %136, %150
  %152 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %153 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %152, align 8
  %154 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %153, null
  br i1 %154, label %157, label %155

155:                                              ; preds = %132
  %156 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %153, i64 %151) #6
  br label %167

157:                                              ; preds = %132
  %158 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %159 = icmp eq i64* %76, %83
  br i1 %159, label %160, label %162

160:                                              ; preds = %157
  %161 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %162

162:                                              ; preds = %160, %157
  %163 = phi i64* [ %161, %160 ], [ %83, %157 ]
  %164 = ptrtoint i64* %163 to i64
  %165 = add i64 %164, 8
  %166 = inttoptr i64 %165 to i64*
  store i64* %166, i64** %158, align 8
  store i64 %151, i64* %163, align 8
  br label %167

167:                                              ; preds = %162, %155
  %168 = phi i64* [ %156, %155 ], [ %163, %162 ]
  %169 = load i64, i64* %98, align 8
  %170 = and i64 %169, -4294967296
  %171 = add i64 %169, 11
  %172 = inttoptr i64 %171 to i32*
  %173 = load i32, i32* %172, align 4
  %174 = zext i32 %173 to i64
  %175 = or i64 %170, %174
  %176 = add i64 %175, 15
  %177 = inttoptr i64 %176 to i32*
  %178 = load atomic i32, i32* %177 monotonic, align 4
  %179 = and i32 %178, 16
  %180 = icmp ne i32 %179, 0
  br i1 %180, label %181, label %258

181:                                              ; preds = %167
  %182 = add i64 %169, 23
  %183 = inttoptr i64 %182 to i32*
  %184 = load i32, i32* %183, align 4
  %185 = zext i32 %184 to i64
  %186 = or i64 %170, %185
  %187 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %152, align 8
  %188 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %187, null
  br i1 %188, label %192, label %189

189:                                              ; preds = %181
  %190 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %187, i64 %186) #6
  %191 = load i64, i64* %190, align 8
  br label %204

192:                                              ; preds = %181
  %193 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %194 = load i64*, i64** %193, align 8
  %195 = load i64*, i64** %75, align 8
  %196 = icmp eq i64* %194, %195
  br i1 %196, label %197, label %199

197:                                              ; preds = %192
  %198 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %199

199:                                              ; preds = %197, %192
  %200 = phi i64* [ %198, %197 ], [ %194, %192 ]
  %201 = ptrtoint i64* %200 to i64
  %202 = add i64 %201, 8
  %203 = inttoptr i64 %202 to i64*
  store i64* %203, i64** %193, align 8
  store i64 %186, i64* %200, align 8
  br label %204

204:                                              ; preds = %199, %189
  %205 = phi i64 [ %191, %189 ], [ %186, %199 ]
  %206 = phi i64* [ %190, %189 ], [ %200, %199 ]
  %207 = and i64 %205, 1
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %232

209:                                              ; preds = %204
  %210 = trunc i64 %205 to i32
  %211 = ashr i32 %210, 1
  %212 = icmp sgt i32 %211, 0
  %213 = select i1 %212, i32 %211, i32 0
  %214 = shl nuw nsw i32 %213, 1
  %215 = zext i32 %214 to i64
  %216 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %152, align 8
  %217 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %216, null
  br i1 %217, label %220, label %218

218:                                              ; preds = %209
  %219 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %216, i64 %215) #6
  br label %234

220:                                              ; preds = %209
  %221 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %222 = load i64*, i64** %221, align 8
  %223 = load i64*, i64** %75, align 8
  %224 = icmp eq i64* %222, %223
  br i1 %224, label %225, label %227

225:                                              ; preds = %220
  %226 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %227

227:                                              ; preds = %225, %220
  %228 = phi i64* [ %226, %225 ], [ %222, %220 ]
  %229 = ptrtoint i64* %228 to i64
  %230 = add i64 %229, 8
  %231 = inttoptr i64 %230 to i64*
  store i64* %231, i64** %221, align 8
  store i64 %215, i64* %228, align 8
  br label %234

232:                                              ; preds = %204
  %233 = call i64* @_ZN2v88internal6Object15ConvertToLengthEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* %206) #6
  br label %234

234:                                              ; preds = %232, %227, %218
  %235 = phi i64* [ %233, %232 ], [ %219, %218 ], [ %228, %227 ]
  %236 = icmp eq i64* %235, null
  br i1 %236, label %255, label %237

237:                                              ; preds = %234
  %238 = load i64, i64* %235, align 8
  %239 = and i64 %238, 1
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %241, label %246

241:                                              ; preds = %237
  %242 = trunc i64 %238 to i32
  %243 = ashr i32 %242, 1
  %244 = icmp slt i32 %242, 2
  %245 = select i1 %244, i32 0, i32 %243
  br label %258

246:                                              ; preds = %237
  %247 = add i64 %238, 3
  %248 = inttoptr i64 %247 to double*
  %249 = load double, double* %248, align 1
  %250 = fcmp ult double %249, 1.000000e+00
  br i1 %250, label %258, label %251

251:                                              ; preds = %246
  %252 = fcmp olt double %249, 0x41EFFFFFFFE00000
  %253 = select i1 %252, double %249, double 0x41EFFFFFFFE00000
  %254 = fptoui double %253 to i32
  br label %258

255:                                              ; preds = %234
  %256 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %257 = load i64, i64* %256, align 8
  br label %536

258:                                              ; preds = %251, %246, %241, %167
  %259 = phi i32 [ 0, %167 ], [ %254, %251 ], [ 0, %246 ], [ %245, %241 ]
  %260 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 6
  %261 = load i64, i64* %260, align 8
  %262 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %152, align 8
  %263 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %262, null
  br i1 %263, label %266, label %264

264:                                              ; preds = %258
  %265 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %262, i64 %261) #6
  br label %278

266:                                              ; preds = %258
  %267 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %268 = load i64*, i64** %267, align 8
  %269 = load i64*, i64** %75, align 8
  %270 = icmp eq i64* %268, %269
  br i1 %270, label %271, label %273

271:                                              ; preds = %266
  %272 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %273

273:                                              ; preds = %271, %266
  %274 = phi i64* [ %272, %271 ], [ %268, %266 ]
  %275 = ptrtoint i64* %274 to i64
  %276 = add i64 %275, 8
  %277 = inttoptr i64 %276 to i64*
  store i64* %277, i64** %267, align 8
  store i64 %261, i64* %274, align 8
  br label %278

278:                                              ; preds = %273, %264
  %279 = phi i64* [ %265, %264 ], [ %274, %273 ]
  %280 = load i64, i64* %1, align 8
  %281 = add i64 %280, 7
  %282 = inttoptr i64 %281 to i32*
  %283 = load i32, i32* %282, align 4
  %284 = icmp ugt i32 %259, %283
  br i1 %284, label %291, label %285

285:                                              ; preds = %278
  %286 = call i64* @_ZN2v88internal6RegExp4ExecEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiNS4_INS0_15RegExpMatchInfoEEENS1_10ExecQuirksE(%"class.v8::internal::Isolate"* %2, i64* %98, i64* %1, i32 %259, i64* %168, i32 0) #6
  %287 = icmp eq i64* %286, null
  br i1 %287, label %288, label %291

288:                                              ; preds = %285
  %289 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %290 = load i64, i64* %289, align 8
  br label %536

291:                                              ; preds = %285, %278
  %292 = phi i64* [ %279, %278 ], [ %286, %285 ]
  %293 = load i64, i64* %292, align 8
  %294 = load i64, i64* %260, align 8
  %295 = trunc i64 %293 to i32
  %296 = trunc i64 %294 to i32
  %297 = icmp eq i32 %295, %296
  br i1 %297, label %298, label %305

298:                                              ; preds = %291
  br i1 %180, label %299, label %303

299:                                              ; preds = %298
  %300 = load i64, i64* %98, align 8
  %301 = add i64 %300, 23
  %302 = inttoptr i64 %301 to i32*
  store atomic volatile i32 0, i32* %302 monotonic, align 4
  br label %303

303:                                              ; preds = %299, %298
  %304 = load i64, i64* %1, align 8
  br label %536

305:                                              ; preds = %291
  %306 = add i64 %293, 19
  %307 = inttoptr i64 %306 to i32*
  %308 = load atomic i32, i32* %307 monotonic, align 4
  %309 = ashr i32 %308, 1
  %310 = add i64 %293, 23
  %311 = inttoptr i64 %310 to i32*
  %312 = load atomic i32, i32* %311 monotonic, align 4
  %313 = ashr i32 %312, 1
  br i1 %180, label %314, label %319

314:                                              ; preds = %305
  %315 = load i64, i64* %98, align 8
  %316 = and i32 %312, -2
  %317 = add i64 %315, 23
  %318 = inttoptr i64 %317 to i32*
  store atomic volatile i32 %316, i32* %318 monotonic, align 4
  br label %319

319:                                              ; preds = %314, %305
  %320 = bitcast %"class.v8::internal::IncrementalStringBuilder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %320) #6
  call void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5, %"class.v8::internal::Isolate"* %2) #6
  %321 = load i64, i64* %1, align 8
  %322 = add i64 %321, 7
  %323 = inttoptr i64 %322 to i32*
  %324 = load i32, i32* %323, align 4
  %325 = icmp eq i32 %324, %309
  br i1 %325, label %328, label %326

326:                                              ; preds = %319
  %327 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %133, i64* %1, i32 0, i32 %309) #6
  br label %328

328:                                              ; preds = %326, %319
  %329 = phi i64* [ %327, %326 ], [ %1, %319 ]
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5, i64* %329) #6
  %330 = load i64, i64* %292, align 8
  %331 = add i64 %330, 7
  %332 = inttoptr i64 %331 to i32*
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = ashr i32 %333, 1
  %335 = sdiv i32 %334, 2
  %336 = icmp sgt i32 %333, 7
  br i1 %336, label %337, label %380

337:                                              ; preds = %328
  %338 = load i64, i64* %98, align 8
  %339 = and i64 %338, -4294967296
  %340 = add i64 %338, 11
  %341 = inttoptr i64 %340 to i32*
  %342 = load i32, i32* %341, align 4
  %343 = zext i32 %342 to i64
  %344 = or i64 %339, %343
  %345 = add i64 %344, 43
  %346 = inttoptr i64 %345 to i32*
  %347 = load atomic i32, i32* %346 monotonic, align 4
  %348 = zext i32 %347 to i64
  %349 = or i64 %339, %348
  %350 = and i64 %348, 1
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %380, label %352

352:                                              ; preds = %337
  %353 = add i64 %349, -1
  %354 = inttoptr i64 %353 to i32*
  %355 = load atomic i32, i32* %354 monotonic, align 4
  %356 = zext i32 %355 to i64
  %357 = or i64 %339, %356
  %358 = add i64 %357, 7
  %359 = inttoptr i64 %358 to i16*
  %360 = load atomic i16, i16* %359 monotonic, align 2
  %361 = add i16 %360, -119
  %362 = icmp ult i16 %361, 13
  br i1 %362, label %363, label %380

363:                                              ; preds = %352
  %364 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %152, align 8
  %365 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %364, null
  br i1 %365, label %368, label %366

366:                                              ; preds = %363
  %367 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %364, i64 %349) #6
  br label %380

368:                                              ; preds = %363
  %369 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %370 = load i64*, i64** %369, align 8
  %371 = load i64*, i64** %75, align 8
  %372 = icmp eq i64* %370, %371
  br i1 %372, label %373, label %375

373:                                              ; preds = %368
  %374 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %375

375:                                              ; preds = %373, %368
  %376 = phi i64* [ %374, %373 ], [ %370, %368 ]
  %377 = ptrtoint i64* %376 to i64
  %378 = add i64 %377, 8
  %379 = inttoptr i64 %378 to i64*
  store i64* %379, i64** %369, align 8
  store i64 %349, i64* %376, align 8
  br label %380

380:                                              ; preds = %375, %366, %352, %337, %328
  %381 = phi i64* [ null, %328 ], [ null, %352 ], [ %367, %366 ], [ %376, %375 ], [ null, %337 ]
  %382 = phi i1 [ false, %328 ], [ false, %352 ], [ true, %366 ], [ true, %375 ], [ false, %337 ]
  %383 = icmp ugt i32 %335, 65534
  br i1 %383, label %388, label %384

384:                                              ; preds = %380
  %385 = select i1 %382, i32 3, i32 2
  %386 = add nuw nsw i32 %385, %335
  %387 = icmp ugt i32 %386, 65534
  br i1 %387, label %388, label %392

388:                                              ; preds = %384, %380
  %389 = call i64* @_ZN2v88internal7Factory13NewRangeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %133, i32 323, i64* null, i64* null, i64* null) #6
  %390 = load i64, i64* %389, align 8
  %391 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %2, i64 %390, %"class.v8::internal::MessageLocation"* null) #6
  br label %534

392:                                              ; preds = %384
  %393 = bitcast %"class.v8::internal::ScopedVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %393) #6
  %394 = zext i32 %386 to i64
  %395 = shl nuw nsw i64 %394, 3
  %396 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %395, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #20
  %397 = icmp eq i8* %396, null
  br i1 %397, label %398, label %407

398:                                              ; preds = %392
  %399 = call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #6
  %400 = bitcast %"class.v8::Platform"* %399 to void (%"class.v8::Platform"*)***
  %401 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %400, align 8
  %402 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %401, i64 3
  %403 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %402, align 8
  call void %403(%"class.v8::Platform"* %399) #6
  %404 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %395, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #20
  %405 = icmp eq i8* %404, null
  br i1 %405, label %406, label %407

406:                                              ; preds = %398
  call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0)) #18
  unreachable

407:                                              ; preds = %398, %392
  %408 = phi i8* [ %396, %392 ], [ %404, %398 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %408, i8 0, i64 %395, i1 false) #6
  %409 = getelementptr inbounds %"class.v8::internal::ScopedVector", %"class.v8::internal::ScopedVector"* %6, i64 0, i32 0, i32 0
  %410 = bitcast %"class.v8::internal::ScopedVector"* %6 to i8**
  store i8* %408, i8** %410, align 8
  %411 = getelementptr inbounds %"class.v8::internal::ScopedVector", %"class.v8::internal::ScopedVector"* %6, i64 0, i32 0, i32 1
  store i64 %394, i64* %411, align 8
  %412 = icmp sgt i32 %333, 3
  br i1 %412, label %413, label %417

413:                                              ; preds = %407
  %414 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %449

415:                                              ; preds = %449
  %416 = trunc i64 %460 to i32
  br label %417

417:                                              ; preds = %415, %407
  %418 = phi i32 [ 0, %407 ], [ %416, %415 ]
  %419 = sext i32 %309 to i64
  %420 = shl nsw i64 %419, 1
  %421 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %152, align 8
  %422 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %421, null
  br i1 %422, label %426, label %423

423:                                              ; preds = %417
  %424 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %421, i64 %420) #6
  %425 = ptrtoint i64* %424 to i64
  br label %438

426:                                              ; preds = %417
  %427 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %428 = load i64*, i64** %427, align 8
  %429 = load i64*, i64** %75, align 8
  %430 = icmp eq i64* %428, %429
  br i1 %430, label %431, label %433

431:                                              ; preds = %426
  %432 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %433

433:                                              ; preds = %431, %426
  %434 = phi i64* [ %432, %431 ], [ %428, %426 ]
  %435 = ptrtoint i64* %434 to i64
  %436 = add i64 %435, 8
  %437 = inttoptr i64 %436 to i64*
  store i64* %437, i64** %427, align 8
  store i64 %420, i64* %434, align 8
  br label %438

438:                                              ; preds = %433, %423
  %439 = phi i64 [ %425, %423 ], [ %435, %433 ]
  %440 = add nuw nsw i32 %418, 1
  %441 = zext i32 %418 to i64
  %442 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %409, align 8
  %443 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %442, i64 %441
  %444 = bitcast %"class.v8::internal::Handle.1169"* %443 to i64*
  store i64 %439, i64* %444, align 8
  %445 = zext i32 %440 to i64
  %446 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %409, align 8
  %447 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %446, i64 %445
  %448 = bitcast %"class.v8::internal::Handle.1169"* %447 to i64*
  store i64 %71, i64* %448, align 8
  br i1 %382, label %463, label %484

449:                                              ; preds = %449, %413
  %450 = phi i64 [ 0, %413 ], [ %460, %449 ]
  %451 = phi i32 [ 0, %413 ], [ %461, %449 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #6
  %452 = call i64* @_ZN2v88internal11RegExpUtils20GenericCaptureGetterEPNS0_7IsolateENS0_6HandleINS0_15RegExpMatchInfoEEEiPb(%"class.v8::internal::Isolate"* %2, i64* %292, i32 %451, i8* nonnull %7) #6
  %453 = load i8, i8* %7, align 1, !range !5
  %454 = icmp eq i8 %453, 0
  %455 = select i1 %454, i64* %414, i64* %452
  %456 = ptrtoint i64* %455 to i64
  %457 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %409, align 8
  %458 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %457, i64 %450
  %459 = bitcast %"class.v8::internal::Handle.1169"* %458 to i64*
  store i64 %456, i64* %459, align 8
  %460 = add nuw nsw i64 %450, 1
  %461 = add nuw nsw i32 %451, 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #6
  %462 = icmp slt i32 %461, %335
  br i1 %462, label %449, label %415

463:                                              ; preds = %438
  %464 = add nuw nsw i32 %418, 2
  %465 = bitcast %"class.std::__1::function"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %465) #6
  %466 = ptrtoint %"class.v8::internal::ScopedVector"* %6 to i64
  %467 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %8, i64 0, i32 0, i32 1, i32 0
  %468 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %8, i64 0, i32 0, i32 2
  store i64 (%"union.std::__1::__function::__policy_storage"*, i32)* @_ZNSt3__110__function16__policy_invokerIFN2v88internal6ObjectEiEE11__call_implINS0_20__default_alloc_funcIZNS3_L58__RT_impl_Runtime_StringReplaceNonGlobalRegExpWithFunctionENS3_9ArgumentsILNS3_13ArgumentsTypeE0EEEPNS3_7IsolateEEUliE_S5_EEEES4_PKNS0_16__policy_storageEi, i64 (%"union.std::__1::__function::__policy_storage"*, i32)** %467, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internalL58__RT_impl_Runtime_StringReplaceNonGlobalRegExpWithFunctionENS5_9ArgumentsILNS5_13ArgumentsTypeE0EEEPNS5_7IsolateEEUliE_FNS5_6ObjectEiEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %468, align 8
  %469 = bitcast %"class.std::__1::function"* %8 to i64*
  store i64 %466, i64* %469, align 8
  %470 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_133ConstructNamedCaptureGroupsObjectEPNS0_7IsolateENS0_6HandleINS0_10FixedArrayEEERKNSt3__18functionIFNS0_6ObjectEiEEE(%"class.v8::internal::Isolate"* %2, i64* %381, %"class.std::__1::function"* nonnull dereferenceable(32) %8) #6
  %471 = ptrtoint i64* %470 to i64
  %472 = zext i32 %464 to i64
  %473 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %409, align 8
  %474 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %473, i64 %472
  %475 = bitcast %"class.v8::internal::Handle.1169"* %474 to i64*
  store i64 %471, i64* %475, align 8
  %476 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %468, align 8
  %477 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %476, i64 0, i32 1
  %478 = load void (i8*)*, void (i8*)** %477, align 8
  %479 = icmp eq void (i8*)* %478, null
  br i1 %479, label %483, label %480

480:                                              ; preds = %463
  %481 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %8, i64 0, i32 0, i32 0, i32 0
  %482 = load i8*, i8** %481, align 8
  call void %478(i8* %482) #6
  br label %483

483:                                              ; preds = %480, %463
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %465) #6
  br label %484

484:                                              ; preds = %483, %438
  %485 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 4
  %486 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %409, align 8
  %487 = call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %2, i64* %116, i64* %485, i32 %386, %"class.v8::internal::Handle.1169"* %486) #6
  %488 = icmp eq i64* %487, null
  br i1 %488, label %489, label %491

489:                                              ; preds = %484
  %490 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %526

491:                                              ; preds = %484
  %492 = load i64, i64* %487, align 8
  %493 = and i64 %492, 1
  %494 = icmp eq i64 %493, 0
  br i1 %494, label %506, label %495

495:                                              ; preds = %491
  %496 = and i64 %492, -4294967296
  %497 = add i64 %492, -1
  %498 = inttoptr i64 %497 to i32*
  %499 = load atomic i32, i32* %498 monotonic, align 4
  %500 = zext i32 %499 to i64
  %501 = or i64 %496, %500
  %502 = add i64 %501, 7
  %503 = inttoptr i64 %502 to i16*
  %504 = load atomic i16, i16* %503 monotonic, align 2
  %505 = icmp ult i16 %504, 64
  br i1 %505, label %511, label %506

506:                                              ; preds = %495, %491
  %507 = call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* nonnull %487) #6
  %508 = icmp eq i64* %507, null
  br i1 %508, label %509, label %511

509:                                              ; preds = %506
  %510 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %526

511:                                              ; preds = %506, %495
  %512 = phi i64* [ %507, %506 ], [ %487, %495 ]
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5, i64* nonnull %512) #6
  %513 = icmp eq i32 %313, 0
  br i1 %513, label %520, label %514

514:                                              ; preds = %511
  %515 = load i64, i64* %1, align 8
  %516 = add i64 %515, 7
  %517 = inttoptr i64 %516 to i32*
  %518 = load i32, i32* %517, align 4
  %519 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %133, i64* %1, i32 %313, i32 %518) #6
  br label %520

520:                                              ; preds = %514, %511
  %521 = phi i64* [ %519, %514 ], [ %1, %511 ]
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5, i64* %521) #6
  %522 = call i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #6
  %523 = icmp eq i64* %522, null
  %524 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %525 = select i1 %523, i64* %524, i64* %522
  br label %526

526:                                              ; preds = %520, %509, %489
  %527 = phi i64* [ %490, %489 ], [ %510, %509 ], [ %525, %520 ]
  %528 = load i64, i64* %527, align 8
  %529 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %409, align 8
  %530 = icmp eq %"class.v8::internal::Handle.1169"* %529, null
  br i1 %530, label %533, label %531

531:                                              ; preds = %526
  %532 = bitcast %"class.v8::internal::Handle.1169"* %529 to i8*
  call void @_ZdaPv(i8* %532) #20
  br label %533

533:                                              ; preds = %531, %526
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %393) #6
  br label %534

534:                                              ; preds = %533, %388
  %535 = phi i64 [ %391, %388 ], [ %528, %533 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %320) #6
  br label %536

536:                                              ; preds = %534, %303, %288, %255
  %537 = phi i64 [ %257, %255 ], [ %304, %303 ], [ %535, %534 ], [ %290, %288 ]
  %538 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %538, label %551, label %539

539:                                              ; preds = %536
  %540 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %72, i64 0, i32 0
  %541 = load i64*, i64** %540, align 8
  store i64 %74, i64* %73, align 8
  %542 = load i32, i32* %77, align 8
  %543 = add nsw i32 %542, -1
  store i32 %543, i32* %77, align 8
  %544 = load i64*, i64** %75, align 8
  %545 = icmp eq i64* %544, %76
  br i1 %545, label %548, label %546

546:                                              ; preds = %539
  store i64* %76, i64** %75, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %547 = load i64*, i64** %540, align 8
  br label %548

548:                                              ; preds = %546, %539
  %549 = phi i64* [ %547, %546 ], [ %83, %539 ]
  %550 = phi i64* [ %76, %546 ], [ %541, %539 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %549, i64* %550) #6
  br label %551

551:                                              ; preds = %536, %548
  %552 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %35, align 8
  %553 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %552, null
  br i1 %553, label %570, label %554

554:                                              ; preds = %551
  %555 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1, i32 0
  %556 = load i8*, i8** %555, align 8
  %557 = load atomic i8, i8* %556 monotonic, align 1
  %558 = icmp eq i8 %557, 0
  br i1 %558, label %570, label %559

559:                                              ; preds = %554
  %560 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %561 = load i8*, i8** %555, align 8
  %562 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1, i32 1
  %563 = load i8*, i8** %562, align 8
  %564 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1, i32 2
  %565 = load i64, i64* %564, align 8
  %566 = bitcast %"class.v8::TracingController"* %560 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %567 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %566, align 8
  %568 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %567, i64 5
  %569 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %568, align 8
  call void %569(%"class.v8::TracingController"* %560, i8* %561, i8* %563, i64 %565) #6
  br label %570

570:                                              ; preds = %551, %554, %559
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %34) #6
  %571 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %9, i64 0, i32 0
  %572 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %571, align 8
  %573 = icmp eq %"class.v8::internal::RuntimeCallStats"* %572, null
  br i1 %573, label %576, label %574, !prof !3

574:                                              ; preds = %570
  %575 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %9, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %572, %"class.v8::internal::RuntimeCallTimer"* %575) #6
  br label %576

576:                                              ; preds = %570, %574
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #6
  ret i64 %537
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal19Runtime_RegExpSplitEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = alloca %"class.v8::internal::LookupIterator", align 8
  %5 = alloca %"class.v8::internal::LookupIterator", align 8
  %6 = alloca %"class.v8::internal::LookupIterator", align 8
  %7 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1153", %"struct.std::__1::atomic.1153"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9, !prof !3

9:                                                ; preds = %3
  %10 = tail call fastcc i64 @_ZN2v88internalL25Stats_Runtime_RegExpSplitEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %711

11:                                               ; preds = %3
  %12 = ptrtoint i64* %1 to i64
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %14 = bitcast %"struct.v8::internal::HandleScopeData"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* %18, align 8
  %21 = load i64, i64* %1, align 8
  %22 = and i64 %21, 1
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %15 to i64*
  br i1 %23, label %36, label %25, !prof !4

25:                                               ; preds = %11
  %26 = and i64 %21, -4294967296
  %27 = add i64 %21, -1
  %28 = inttoptr i64 %27 to i32*
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %26, %30
  %32 = add i64 %31, 7
  %33 = inttoptr i64 %32 to i16*
  %34 = load atomic i16, i16* %33 monotonic, align 2
  %35 = icmp ugt i16 %34, 185
  br i1 %35, label %37, label %36, !prof !3

36:                                               ; preds = %25, %11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0)) #18
  unreachable

37:                                               ; preds = %25
  %38 = add i64 %12, -8
  %39 = inttoptr i64 %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %54, label %43, !prof !4

43:                                               ; preds = %37
  %44 = and i64 %40, -4294967296
  %45 = add i64 %40, -1
  %46 = inttoptr i64 %45 to i32*
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %44, %48
  %50 = add i64 %49, 7
  %51 = inttoptr i64 %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = icmp ult i16 %52, 64
  br i1 %53, label %55, label %54, !prof !3

54:                                               ; preds = %43, %37
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

55:                                               ; preds = %43
  %56 = add i64 %12, -16
  %57 = inttoptr i64 %56 to i64*
  %58 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = and i64 %60, -4294967296
  %62 = add i64 %60, -1
  %63 = inttoptr i64 %62 to i32*
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = zext i32 %64 to i64
  %66 = or i64 %61, %65
  %67 = add i64 %66, 19
  %68 = inttoptr i64 %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = zext i32 %69 to i64
  %71 = or i64 %61, %70
  %72 = add i64 %71, 627
  %73 = inttoptr i64 %72 to i32*
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = zext i32 %74 to i64
  %76 = or i64 %61, %75
  %77 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %78 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %77, align 8
  %79 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %55
  %81 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %78, i64 %76) #6
  br label %92

82:                                               ; preds = %55
  %83 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %84 = icmp eq i64* %17, %24
  br i1 %84, label %85, label %87

85:                                               ; preds = %82
  %86 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %87

87:                                               ; preds = %85, %82
  %88 = phi i64* [ %86, %85 ], [ %24, %82 ]
  %89 = ptrtoint i64* %88 to i64
  %90 = add i64 %89, 8
  %91 = inttoptr i64 %90 to i64*
  store i64* %91, i64** %83, align 8
  store i64 %76, i64* %88, align 8
  br label %92

92:                                               ; preds = %87, %80
  %93 = phi i64* [ %81, %80 ], [ %88, %87 ]
  %94 = tail call i64* @_ZN2v88internal6Object18SpeciesConstructorEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEENS4_INS0_10JSFunctionEEE(%"class.v8::internal::Isolate"* %2, i64* %1, i64* %93) #6
  %95 = icmp eq i64* %94, null
  br i1 %95, label %96, label %99

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %98 = load i64, i64* %97, align 8
  br label %696

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 328
  %101 = bitcast %"class.v8::internal::LookupIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %101) #6
  %102 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 0
  %103 = load i64, i64* %100, align 8
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 4
  %105 = load i64, i64* %104, align 8
  %106 = add i64 %103, -1
  %107 = inttoptr i64 %106 to i32*
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i64 %105, 4294967295
  %110 = icmp eq i64 %109, 0
  tail call void @llvm.assume(i1 %110) #6
  %111 = zext i32 %108 to i64
  %112 = or i64 %105, %111
  %113 = add i64 %112, 7
  %114 = inttoptr i64 %113 to i16*
  %115 = load atomic i16, i16* %114 monotonic, align 2
  %116 = icmp eq i16 %115, 64
  br i1 %116, label %117, label %123

117:                                              ; preds = %99
  %118 = add i64 %103, 7
  %119 = inttoptr i64 %118 to i32*
  %120 = load i32, i32* %119, align 4
  %121 = and i32 %120, 1
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %117, %99
  br label %124

124:                                              ; preds = %123, %117
  %125 = phi i32 [ 3, %123 ], [ 0, %117 ]
  store i32 %125, i32* %102, align 8
  %126 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 1
  store i32 4, i32* %126, align 4
  %127 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 2
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 3
  store i32 0, i32* %128, align 4
  %129 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 4, i32 0
  store i32 0, i32* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 6, i32 0, i32 0
  store i64* %100, i64** %131, align 8
  %132 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %132, align 8
  %133 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 8, i32 0, i32 0
  store i64* %1, i64** %133, align 8
  %134 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 10
  %136 = bitcast %"class.v8::internal::Handle.1169"* %135 to i64*
  store i64 %12, i64* %136, align 8
  %137 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 11
  %138 = bitcast i64* %137 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %138, i8 -1, i64 16, i1 false) #6
  %139 = and i64 %103, -4294967296
  %140 = load atomic i32, i32* %107 monotonic, align 4
  %141 = zext i32 %140 to i64
  %142 = or i64 %139, %141
  %143 = add i64 %142, 7
  %144 = inttoptr i64 %143 to i16*
  %145 = load atomic i16, i16* %144 monotonic, align 2
  %146 = and i16 %145, -32
  %147 = icmp eq i16 %146, 32
  br i1 %147, label %148, label %152

148:                                              ; preds = %124
  %149 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 5, i32 0, i32 0, i32 0
  %150 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %149, align 8
  %151 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %150, %"class.v8::internal::Isolate"* %2, i64* %100) #6
  br label %152

152:                                              ; preds = %148, %124
  %153 = phi i64* [ %151, %148 ], [ %100, %124 ]
  store i64* %153, i64** %131, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %4) #6
  %154 = load i32, i32* %126, align 4
  %155 = icmp eq i32 %154, 4
  br i1 %155, label %156, label %161

156:                                              ; preds = %152
  %157 = bitcast %"class.v8::internal::Isolate"** %130 to %"class.v8::internal::Factory"**
  %158 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %157, align 8
  %159 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %158, i64 160
  %160 = bitcast %"class.v8::internal::Factory"* %159 to i64*
  br label %163

161:                                              ; preds = %152
  %162 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %4, i1 zeroext false) #6
  br label %163

163:                                              ; preds = %161, %156
  %164 = phi i64* [ %162, %161 ], [ %160, %156 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %101) #6
  %165 = icmp eq i64* %164, null
  br i1 %165, label %166, label %169

166:                                              ; preds = %163
  %167 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %168 = load i64, i64* %167, align 8
  br label %696

169:                                              ; preds = %163
  %170 = load i64, i64* %164, align 8
  %171 = and i64 %170, 1
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %184, label %173

173:                                              ; preds = %169
  %174 = and i64 %170, -4294967296
  %175 = add i64 %170, -1
  %176 = inttoptr i64 %175 to i32*
  %177 = load atomic i32, i32* %176 monotonic, align 4
  %178 = zext i32 %177 to i64
  %179 = or i64 %174, %178
  %180 = add i64 %179, 7
  %181 = inttoptr i64 %180 to i16*
  %182 = load atomic i16, i16* %181 monotonic, align 2
  %183 = icmp ult i16 %182, 64
  br i1 %183, label %190, label %184

184:                                              ; preds = %173, %169
  %185 = call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* nonnull %164) #6
  %186 = icmp eq i64* %185, null
  br i1 %186, label %187, label %190

187:                                              ; preds = %184
  %188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %189 = load i64, i64* %188, align 8
  br label %696

190:                                              ; preds = %184, %173
  %191 = phi i64* [ %185, %184 ], [ %164, %173 ]
  %192 = call i64* @_ZN2v88internal7Factory35LookupSingleCharacterStringFromCodeEt(%"class.v8::internal::Factory"* %58, i16 zeroext 117) #6
  %193 = call i32 @_ZN2v88internal6String7IndexOfEPNS0_7IsolateENS0_6HandleIS1_EES5_i(%"class.v8::internal::Isolate"* %2, i64* nonnull %191, i64* %192, i32 0) #6
  %194 = icmp sgt i32 %193, -1
  %195 = call i64* @_ZN2v88internal7Factory35LookupSingleCharacterStringFromCodeEt(%"class.v8::internal::Factory"* %58, i16 zeroext 121) #6
  %196 = call i32 @_ZN2v88internal6String7IndexOfEPNS0_7IsolateENS0_6HandleIS1_EES5_i(%"class.v8::internal::Isolate"* %2, i64* nonnull %191, i64* %195, i32 0) #6
  %197 = icmp sgt i32 %196, -1
  br i1 %197, label %205, label %198

198:                                              ; preds = %190
  %199 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %200 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewConsStringENS0_6HandleINS0_6StringEEES6_NS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %199, i64* nonnull %191, i64* %195, i8 zeroext 0) #6
  %201 = icmp eq i64* %200, null
  br i1 %201, label %202, label %205

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %204 = load i64, i64* %203, align 8
  br label %696

205:                                              ; preds = %198, %190
  %206 = phi i64* [ %191, %190 ], [ %200, %198 ]
  %207 = ptrtoint i64* %206 to i64
  %208 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 16, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #20
  %209 = icmp eq i8* %208, null
  br i1 %209, label %210, label %219

210:                                              ; preds = %205
  %211 = call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #6
  %212 = bitcast %"class.v8::Platform"* %211 to void (%"class.v8::Platform"*)***
  %213 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %212, align 8
  %214 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %213, i64 3
  %215 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %214, align 8
  call void %215(%"class.v8::Platform"* %211) #6
  %216 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 16, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #20
  %217 = icmp eq i8* %216, null
  br i1 %217, label %218, label %219

218:                                              ; preds = %210
  call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0)) #18
  unreachable

219:                                              ; preds = %210, %205
  %220 = phi i8* [ %208, %205 ], [ %216, %210 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %220, i8 0, i64 16, i1 false) #6
  %221 = bitcast i8* %220 to %"class.v8::internal::Handle.1169"*
  %222 = bitcast i8* %220 to i64*
  store i64 %12, i64* %222, align 8
  %223 = getelementptr inbounds i8, i8* %220, i64 8
  %224 = bitcast i8* %223 to i64*
  store i64 %207, i64* %224, align 8
  %225 = call i64* @_ZN2v88internal9Execution3NewEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEiPS6_(%"class.v8::internal::Isolate"* %2, i64* nonnull %94, i32 2, %"class.v8::internal::Handle.1169"* %221) #6
  %226 = icmp eq i64* %225, null
  br i1 %226, label %227, label %230

227:                                              ; preds = %219
  %228 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %229 = load i64, i64* %228, align 8
  call void @_ZdaPv(i8* nonnull %220) #20
  br label %696

230:                                              ; preds = %219
  call void @_ZdaPv(i8* nonnull %220) #20
  %231 = load i64, i64* %57, align 8
  %232 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 4
  %233 = load i64, i64* %232, align 8
  %234 = trunc i64 %231 to i32
  %235 = trunc i64 %233 to i32
  %236 = icmp eq i32 %234, %235
  br i1 %236, label %309, label %237

237:                                              ; preds = %230
  %238 = and i64 %231, 1
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %253, label %240

240:                                              ; preds = %237
  %241 = and i64 %231, -4294967296
  %242 = add i64 %231, -1
  %243 = inttoptr i64 %242 to i32*
  %244 = load atomic i32, i32* %243 monotonic, align 4
  %245 = zext i32 %244 to i64
  %246 = or i64 %241, %245
  %247 = add i64 %246, 7
  %248 = inttoptr i64 %247 to i16*
  %249 = load atomic i16, i16* %248 monotonic, align 2
  %250 = icmp eq i16 %249, 66
  br i1 %250, label %253, label %251

251:                                              ; preds = %240
  %252 = call i64* @_ZN2v88internal6Object24ConvertToNumberOrNumericEPNS0_7IsolateENS0_6HandleIS1_EENS1_10ConversionE(%"class.v8::internal::Isolate"* %2, i64* %57, i32 0) #6
  br label %253

253:                                              ; preds = %251, %240, %237
  %254 = phi i64* [ %252, %251 ], [ %57, %240 ], [ %57, %237 ]
  %255 = icmp eq i64* %254, null
  br i1 %255, label %312, label %256

256:                                              ; preds = %253
  %257 = load i64, i64* %254, align 8
  %258 = and i64 %257, 1
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %260, label %263

260:                                              ; preds = %256
  %261 = trunc i64 %257 to i32
  %262 = ashr i32 %261, 1
  br label %309

263:                                              ; preds = %256
  %264 = add i64 %257, 3
  %265 = inttoptr i64 %264 to double*
  %266 = load double, double* %265, align 1
  %267 = call double @llvm.fabs.f64(double %266) #21
  %268 = fcmp one double %267, 0x7FF0000000000000
  %269 = fcmp ole double %266, 0x41DFFFFFFFC00000
  %270 = and i1 %269, %268
  %271 = fcmp oge double %266, 0xC1E0000000000000
  %272 = and i1 %271, %270
  br i1 %272, label %273, label %277

273:                                              ; preds = %263
  %274 = fptosi double %266 to i32
  %275 = sitofp i32 %274 to double
  %276 = fcmp une double %266, %275
  br i1 %276, label %277, label %309

277:                                              ; preds = %273, %263
  %278 = bitcast double %266 to i64
  %279 = and i64 %278, 9218868437227405312
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %309, label %281

281:                                              ; preds = %277
  %282 = lshr i64 %278, 52
  %283 = trunc i64 %282 to i32
  %284 = and i32 %283, 2047
  %285 = add nsw i32 %284, -1075
  %286 = icmp slt i32 %285, 0
  br i1 %286, label %287, label %295

287:                                              ; preds = %281
  %288 = icmp slt i32 %285, -52
  br i1 %288, label %309, label %289

289:                                              ; preds = %287
  %290 = and i64 %278, 4503599627370495
  %291 = or i64 %290, 4503599627370496
  %292 = sub nuw nsw i32 1075, %284
  %293 = zext i32 %292 to i64
  %294 = lshr i64 %291, %293
  br label %303

295:                                              ; preds = %281
  %296 = icmp sgt i32 %285, 31
  br i1 %296, label %309, label %297

297:                                              ; preds = %295
  %298 = and i64 %278, 4503599627370495
  %299 = or i64 %298, 4503599627370496
  %300 = zext i32 %285 to i64
  %301 = shl i64 %299, %300
  %302 = and i64 %301, 4294967295
  br label %303

303:                                              ; preds = %297, %289
  %304 = phi i64 [ %294, %289 ], [ %302, %297 ]
  %305 = icmp sgt i64 %278, -1
  %306 = select i1 %305, i32 1, i32 -1
  %307 = trunc i64 %304 to i32
  %308 = mul i32 %306, %307
  br label %309

309:                                              ; preds = %303, %295, %287, %277, %273, %260, %230
  %310 = phi i32 [ -1, %230 ], [ %262, %260 ], [ %274, %273 ], [ %308, %303 ], [ 0, %287 ], [ 0, %295 ], [ 0, %277 ]
  %311 = icmp eq i64 %56, 0
  br i1 %311, label %312, label %315

312:                                              ; preds = %309, %253
  %313 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %314 = load i64, i64* %313, align 8
  br label %696

315:                                              ; preds = %309
  %316 = load i64, i64* %39, align 8
  %317 = add i64 %316, 7
  %318 = inttoptr i64 %317 to i32*
  %319 = load i32, i32* %318, align 4
  %320 = icmp eq i32 %310, 0
  br i1 %320, label %321, label %324

321:                                              ; preds = %315
  %322 = call i64* @_ZN2v88internal7Factory10NewJSArrayENS0_12ElementsKindEiiNS0_26ArrayStorageAllocationModeENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %58, i8 zeroext 3, i32 0, i32 0, i32 1, i8 zeroext 0) #6
  %323 = load i64, i64* %322, align 8
  br label %696

324:                                              ; preds = %315
  %325 = icmp eq i32 %319, 0
  br i1 %325, label %326, label %383

326:                                              ; preds = %324
  %327 = call i64* @_ZN2v88internal11RegExpUtils10RegExpExecEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEENS4_INS0_6StringEEENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %2, i64* nonnull %225, i64* %39, i64* %232) #6
  %328 = icmp eq i64* %327, null
  br i1 %328, label %329, label %332

329:                                              ; preds = %326
  %330 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %331 = load i64, i64* %330, align 8
  br label %696

332:                                              ; preds = %326
  %333 = load i64, i64* %327, align 8
  %334 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 6
  %335 = load i64, i64* %334, align 8
  %336 = trunc i64 %333 to i32
  %337 = trunc i64 %335 to i32
  %338 = icmp eq i32 %336, %337
  br i1 %338, label %342, label %339

339:                                              ; preds = %332
  %340 = call i64* @_ZN2v88internal7Factory10NewJSArrayENS0_12ElementsKindEiiNS0_26ArrayStorageAllocationModeENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %58, i8 zeroext 3, i32 0, i32 0, i32 1, i8 zeroext 0) #6
  %341 = load i64, i64* %340, align 8
  br label %696

342:                                              ; preds = %332
  %343 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %344 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %343, i32 1, i8 zeroext 0) #6
  %345 = load i64, i64* %344, align 8
  %346 = load i64, i64* %39, align 8
  %347 = add i64 %345, 7
  %348 = inttoptr i64 %347 to i32*
  %349 = trunc i64 %346 to i32
  store atomic volatile i32 %349, i32* %348 monotonic, align 4
  %350 = and i64 %346, 1
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %375, label %352

352:                                              ; preds = %342
  %353 = and i64 %345, -262144
  %354 = or i64 %353, 8
  %355 = inttoptr i64 %354 to i64*
  %356 = load i64, i64* %355, align 8
  %357 = and i64 %356, 262144
  %358 = icmp eq i64 %357, 0
  br i1 %358, label %363, label %359

359:                                              ; preds = %352
  %360 = or i64 %353, 16
  %361 = inttoptr i64 %360 to %"class.v8::internal::Heap"**
  %362 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %361, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %362, i64 %345, i64 %347, i64 %346) #6
  br label %363

363:                                              ; preds = %359, %352
  %364 = and i64 %346, -262144
  %365 = or i64 %364, 8
  %366 = inttoptr i64 %365 to i64*
  %367 = load i64, i64* %366, align 8
  %368 = and i64 %367, 24
  %369 = icmp eq i64 %368, 0
  br i1 %369, label %375, label %370

370:                                              ; preds = %363
  %371 = load i64, i64* %355, align 8
  %372 = and i64 %371, 24
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %375

374:                                              ; preds = %370
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %345, i64 %347, i64 %346) #6
  br label %375

375:                                              ; preds = %374, %370, %363, %342
  %376 = load i64, i64* %344, align 8
  %377 = add i64 %376, 3
  %378 = inttoptr i64 %377 to i32*
  %379 = load i32, i32* %378, align 4
  %380 = ashr i32 %379, 1
  %381 = call i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %58, i64* %344, i8 zeroext 3, i32 %380, i8 zeroext 0) #6
  %382 = load i64, i64* %381, align 8
  br label %696

383:                                              ; preds = %324
  %384 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %385 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE22NewFixedArrayWithHolesEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %384, i32 8, i8 zeroext 0) #6
  %386 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 6
  %387 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %388 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 363
  %389 = bitcast %"class.v8::internal::LookupIterator"* %5 to i8*
  %390 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 0
  %391 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 1
  %392 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 2
  %393 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 3
  %394 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 4, i32 0
  %395 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 5
  %396 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 6, i32 0, i32 0
  %397 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 7, i32 0, i32 0
  %398 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 8, i32 0, i32 0
  %399 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 9, i32 0, i32 0
  %400 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 10
  %401 = bitcast %"class.v8::internal::Handle.1169"* %400 to i64*
  %402 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 11
  %403 = bitcast i64* %402 to i8*
  %404 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 5, i32 0, i32 0, i32 0
  %405 = bitcast %"class.v8::internal::Isolate"** %395 to %"class.v8::internal::Factory"**
  %406 = bitcast %"class.v8::internal::LookupIterator"* %6 to i8*
  %407 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 1
  %408 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 5
  %409 = bitcast %"class.v8::internal::Isolate"** %408 to %"class.v8::internal::Factory"**
  br label %410

410:                                              ; preds = %668, %383
  %411 = phi i64* [ %385, %383 ], [ %672, %668 ]
  %412 = phi i32 [ 0, %383 ], [ %671, %668 ]
  %413 = phi i32 [ 0, %383 ], [ %670, %668 ]
  %414 = phi i32 [ 0, %383 ], [ %669, %668 ]
  %415 = zext i32 %413 to i64
  %416 = call i64* @_ZN2v88internal11RegExpUtils12SetLastIndexEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEEm(%"class.v8::internal::Isolate"* %2, i64* nonnull %225, i64 %415) #6
  %417 = icmp eq i64* %416, null
  br i1 %417, label %418, label %421

418:                                              ; preds = %410
  %419 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %420 = load i64, i64* %419, align 8
  br label %696

421:                                              ; preds = %410
  %422 = call i64* @_ZN2v88internal11RegExpUtils10RegExpExecEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEENS4_INS0_6StringEEENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %2, i64* nonnull %225, i64* %39, i64* %232) #6
  %423 = icmp eq i64* %422, null
  br i1 %423, label %424, label %427

424:                                              ; preds = %421
  %425 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %426 = load i64, i64* %425, align 8
  br label %696

427:                                              ; preds = %421
  %428 = ptrtoint i64* %422 to i64
  %429 = load i64, i64* %422, align 8
  %430 = load i64, i64* %386, align 8
  %431 = trunc i64 %429 to i32
  %432 = trunc i64 %430 to i32
  %433 = icmp eq i32 %431, %432
  br i1 %433, label %434, label %437

434:                                              ; preds = %427
  %435 = call i64 @_ZN2v88internal11RegExpUtils18AdvanceStringIndexENS0_6HandleINS0_6StringEEEmb(i64* %39, i64 %415, i1 zeroext %194) #6
  %436 = trunc i64 %435 to i32
  br label %668

437:                                              ; preds = %427
  %438 = call i64* @_ZN2v88internal11RegExpUtils12GetLastIndexEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::Isolate"* %2, i64* nonnull %225) #6
  %439 = icmp eq i64* %438, null
  br i1 %439, label %440, label %443

440:                                              ; preds = %437
  %441 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %442 = load i64, i64* %441, align 8
  br label %696

443:                                              ; preds = %437
  %444 = load i64, i64* %438, align 8
  %445 = and i64 %444, 1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %469

447:                                              ; preds = %443
  %448 = trunc i64 %444 to i32
  %449 = ashr i32 %448, 1
  %450 = icmp sgt i32 %449, 0
  %451 = select i1 %450, i32 %449, i32 0
  %452 = shl nuw nsw i32 %451, 1
  %453 = zext i32 %452 to i64
  %454 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %77, align 8
  %455 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %454, null
  br i1 %455, label %458, label %456

456:                                              ; preds = %447
  %457 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %454, i64 %453) #6
  br label %471

458:                                              ; preds = %447
  %459 = load i64*, i64** %387, align 8
  %460 = load i64*, i64** %16, align 8
  %461 = icmp eq i64* %459, %460
  br i1 %461, label %462, label %464

462:                                              ; preds = %458
  %463 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %464

464:                                              ; preds = %462, %458
  %465 = phi i64* [ %463, %462 ], [ %459, %458 ]
  %466 = ptrtoint i64* %465 to i64
  %467 = add i64 %466, 8
  %468 = inttoptr i64 %467 to i64*
  store i64* %468, i64** %387, align 8
  store i64 %453, i64* %465, align 8
  br label %471

469:                                              ; preds = %443
  %470 = call i64* @_ZN2v88internal6Object15ConvertToLengthEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* nonnull %438) #6
  br label %471

471:                                              ; preds = %469, %464, %456
  %472 = phi i64* [ %470, %469 ], [ %457, %456 ], [ %465, %464 ]
  %473 = icmp eq i64* %472, null
  br i1 %473, label %474, label %477

474:                                              ; preds = %471
  %475 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %476 = load i64, i64* %475, align 8
  br label %696

477:                                              ; preds = %471
  %478 = load i64, i64* %472, align 8
  %479 = and i64 %478, 1
  %480 = icmp eq i64 %479, 0
  br i1 %480, label %481, label %486

481:                                              ; preds = %477
  %482 = trunc i64 %478 to i32
  %483 = ashr i32 %482, 1
  %484 = icmp slt i32 %482, 2
  %485 = select i1 %484, i32 0, i32 %483
  br label %495

486:                                              ; preds = %477
  %487 = add i64 %478, 3
  %488 = inttoptr i64 %487 to double*
  %489 = load double, double* %488, align 1
  %490 = fcmp ult double %489, 1.000000e+00
  br i1 %490, label %495, label %491

491:                                              ; preds = %486
  %492 = fcmp olt double %489, 0x41EFFFFFFFE00000
  %493 = select i1 %492, double %489, double 0x41EFFFFFFFE00000
  %494 = fptoui double %493 to i32
  br label %495

495:                                              ; preds = %491, %486, %481
  %496 = phi i32 [ %485, %481 ], [ 0, %486 ], [ %494, %491 ]
  %497 = icmp ult i32 %319, %496
  %498 = select i1 %497, i32 %319, i32 %496
  %499 = icmp eq i32 %498, %414
  br i1 %499, label %500, label %503

500:                                              ; preds = %495
  %501 = call i64 @_ZN2v88internal11RegExpUtils18AdvanceStringIndexENS0_6HandleINS0_6StringEEEmb(i64* %39, i64 %415, i1 zeroext %194) #6
  %502 = trunc i64 %501 to i32
  br label %668

503:                                              ; preds = %495
  %504 = icmp eq i32 %414, 0
  br i1 %504, label %505, label %511

505:                                              ; preds = %503
  %506 = load i64, i64* %39, align 8
  %507 = add i64 %506, 7
  %508 = inttoptr i64 %507 to i32*
  %509 = load i32, i32* %508, align 4
  %510 = icmp eq i32 %509, %413
  br i1 %510, label %513, label %511

511:                                              ; preds = %505, %503
  %512 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %58, i64* %39, i32 %414, i32 %413) #6
  br label %513

513:                                              ; preds = %511, %505
  %514 = phi i64* [ %512, %511 ], [ %39, %505 ]
  %515 = add i32 %412, 1
  %516 = call i64* @_ZN2v88internal10FixedArray10SetAndGrowEPNS0_7IsolateENS0_6HandleIS1_EEiNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %2, i64* %411, i32 %412, i64* %514) #6
  %517 = icmp eq i32 %515, %310
  br i1 %517, label %518, label %527

518:                                              ; preds = %513
  %519 = call i64* @_ZN2v88internal10FixedArray13ShrinkOrEmptyEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"* %2, i64* %516, i32 %310) #6
  %520 = load i64, i64* %519, align 8
  %521 = add i64 %520, 3
  %522 = inttoptr i64 %521 to i32*
  %523 = load i32, i32* %522, align 4
  %524 = ashr i32 %523, 1
  %525 = call i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %58, i64* %519, i8 zeroext 3, i32 %524, i8 zeroext 0) #6
  %526 = load i64, i64* %525, align 8
  br label %696

527:                                              ; preds = %513
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %389) #6
  %528 = load i64, i64* %388, align 8
  %529 = load i64, i64* %104, align 8
  %530 = add i64 %528, -1
  %531 = inttoptr i64 %530 to i32*
  %532 = load atomic i32, i32* %531 monotonic, align 4
  %533 = and i64 %529, 4294967295
  %534 = icmp eq i64 %533, 0
  call void @llvm.assume(i1 %534) #6
  %535 = zext i32 %532 to i64
  %536 = or i64 %529, %535
  %537 = add i64 %536, 7
  %538 = inttoptr i64 %537 to i16*
  %539 = load atomic i16, i16* %538 monotonic, align 2
  %540 = icmp eq i16 %539, 64
  br i1 %540, label %541, label %547

541:                                              ; preds = %527
  %542 = add i64 %528, 7
  %543 = inttoptr i64 %542 to i32*
  %544 = load i32, i32* %543, align 4
  %545 = and i32 %544, 1
  %546 = icmp eq i32 %545, 0
  br i1 %546, label %547, label %548

547:                                              ; preds = %541, %527
  br label %548

548:                                              ; preds = %547, %541
  %549 = phi i32 [ 3, %547 ], [ 0, %541 ]
  store i32 %549, i32* %390, align 8
  store i32 4, i32* %391, align 4
  store i8 0, i8* %392, align 8
  store i32 0, i32* %393, align 4
  store i32 0, i32* %394, align 8
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %395, align 8
  store i64* %388, i64** %396, align 8
  store i64* null, i64** %397, align 8
  store i64* %422, i64** %398, align 8
  store i64* null, i64** %399, align 8
  store i64 %428, i64* %401, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %403, i8 -1, i64 16, i1 false) #6
  %550 = and i64 %528, -4294967296
  %551 = load atomic i32, i32* %531 monotonic, align 4
  %552 = zext i32 %551 to i64
  %553 = or i64 %550, %552
  %554 = add i64 %553, 7
  %555 = inttoptr i64 %554 to i16*
  %556 = load atomic i16, i16* %555 monotonic, align 2
  %557 = and i16 %556, -32
  %558 = icmp eq i16 %557, 32
  br i1 %558, label %559, label %562

559:                                              ; preds = %548
  %560 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %404, align 8
  %561 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %560, %"class.v8::internal::Isolate"* %2, i64* %388) #6
  br label %562

562:                                              ; preds = %559, %548
  %563 = phi i64* [ %561, %559 ], [ %388, %548 ]
  store i64* %563, i64** %396, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %5) #6
  %564 = load i32, i32* %391, align 4
  %565 = icmp eq i32 %564, 4
  br i1 %565, label %566, label %570

566:                                              ; preds = %562
  %567 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %405, align 8
  %568 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %567, i64 160
  %569 = bitcast %"class.v8::internal::Factory"* %568 to i64*
  br label %572

570:                                              ; preds = %562
  %571 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %5, i1 zeroext false) #6
  br label %572

572:                                              ; preds = %570, %566
  %573 = phi i64* [ %571, %570 ], [ %569, %566 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %389) #6
  %574 = icmp eq i64* %573, null
  br i1 %574, label %575, label %578

575:                                              ; preds = %572
  %576 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %577 = load i64, i64* %576, align 8
  br label %696

578:                                              ; preds = %572
  %579 = load i64, i64* %573, align 8
  %580 = and i64 %579, 1
  %581 = icmp eq i64 %580, 0
  br i1 %581, label %582, label %604

582:                                              ; preds = %578
  %583 = trunc i64 %579 to i32
  %584 = ashr i32 %583, 1
  %585 = icmp sgt i32 %584, 0
  %586 = select i1 %585, i32 %584, i32 0
  %587 = shl nuw nsw i32 %586, 1
  %588 = zext i32 %587 to i64
  %589 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %77, align 8
  %590 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %589, null
  br i1 %590, label %593, label %591

591:                                              ; preds = %582
  %592 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %589, i64 %588) #6
  br label %606

593:                                              ; preds = %582
  %594 = load i64*, i64** %387, align 8
  %595 = load i64*, i64** %16, align 8
  %596 = icmp eq i64* %594, %595
  br i1 %596, label %597, label %599

597:                                              ; preds = %593
  %598 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %599

599:                                              ; preds = %597, %593
  %600 = phi i64* [ %598, %597 ], [ %594, %593 ]
  %601 = ptrtoint i64* %600 to i64
  %602 = add i64 %601, 8
  %603 = inttoptr i64 %602 to i64*
  store i64* %603, i64** %387, align 8
  store i64 %588, i64* %600, align 8
  br label %606

604:                                              ; preds = %578
  %605 = call i64* @_ZN2v88internal6Object15ConvertToLengthEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* nonnull %573) #6
  br label %606

606:                                              ; preds = %604, %599, %591
  %607 = phi i64* [ %605, %604 ], [ %592, %591 ], [ %600, %599 ]
  %608 = icmp eq i64* %607, null
  br i1 %608, label %609, label %612

609:                                              ; preds = %606
  %610 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %611 = load i64, i64* %610, align 8
  br label %696

612:                                              ; preds = %606
  %613 = load i64, i64* %607, align 8
  %614 = and i64 %613, 1
  %615 = icmp eq i64 %614, 0
  br i1 %615, label %616, label %620

616:                                              ; preds = %612
  %617 = trunc i64 %613 to i32
  %618 = ashr i32 %617, 1
  %619 = icmp slt i32 %617, 2
  br i1 %619, label %668, label %629

620:                                              ; preds = %612
  %621 = add i64 %613, 3
  %622 = inttoptr i64 %621 to double*
  %623 = load double, double* %622, align 1
  %624 = fcmp ult double %623, 1.000000e+00
  br i1 %624, label %668, label %625

625:                                              ; preds = %620
  %626 = fcmp olt double %623, 0x41EFFFFFFFE00000
  %627 = select i1 %626, double %623, double 0x41EFFFFFFFE00000
  %628 = fptoui double %627 to i32
  br label %629

629:                                              ; preds = %625, %616
  %630 = phi i32 [ %618, %616 ], [ %628, %625 ]
  %631 = icmp ugt i32 %630, 1
  br i1 %631, label %632, label %668

632:                                              ; preds = %629
  %633 = zext i32 %630 to i64
  br label %636

634:                                              ; preds = %654
  %635 = icmp eq i64 %658, %633
  br i1 %635, label %668, label %636

636:                                              ; preds = %634, %632
  %637 = phi i64 [ 1, %632 ], [ %658, %634 ]
  %638 = phi i64* [ %516, %632 ], [ %656, %634 ]
  %639 = phi i32 [ %515, %632 ], [ %655, %634 ]
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %406) #6
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %6, %"class.v8::internal::Isolate"* %2, i64* nonnull %422, i64* null, i64 %637, i64* nonnull %422, i32 3) #6
  %640 = load i32, i32* %407, align 4
  %641 = icmp eq i32 %640, 4
  br i1 %641, label %642, label %646

642:                                              ; preds = %636
  %643 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %409, align 8
  %644 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %643, i64 160
  %645 = bitcast %"class.v8::internal::Factory"* %644 to i64*
  br label %648

646:                                              ; preds = %636
  %647 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %6, i1 zeroext false) #6
  br label %648

648:                                              ; preds = %646, %642
  %649 = phi i64* [ %647, %646 ], [ %645, %642 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %406) #6
  %650 = icmp eq i64* %649, null
  br i1 %650, label %651, label %654

651:                                              ; preds = %648
  %652 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %653 = load i64, i64* %652, align 8
  br label %696

654:                                              ; preds = %648
  %655 = add i32 %639, 1
  %656 = call i64* @_ZN2v88internal10FixedArray10SetAndGrowEPNS0_7IsolateENS0_6HandleIS1_EEiNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %2, i64* %638, i32 %639, i64* nonnull %649) #6
  %657 = icmp eq i32 %655, %310
  %658 = add nuw nsw i64 %637, 1
  br i1 %657, label %659, label %634

659:                                              ; preds = %654
  %660 = call i64* @_ZN2v88internal10FixedArray13ShrinkOrEmptyEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"* %2, i64* %656, i32 %310) #6
  %661 = load i64, i64* %660, align 8
  %662 = add i64 %661, 3
  %663 = inttoptr i64 %662 to i32*
  %664 = load i32, i32* %663, align 4
  %665 = ashr i32 %664, 1
  %666 = call i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %58, i64* %660, i8 zeroext 3, i32 %665, i8 zeroext 0) #6
  %667 = load i64, i64* %666, align 8
  br label %696

668:                                              ; preds = %634, %629, %620, %616, %500, %434
  %669 = phi i32 [ %414, %434 ], [ %414, %500 ], [ %498, %629 ], [ %498, %620 ], [ %498, %616 ], [ %498, %634 ]
  %670 = phi i32 [ %436, %434 ], [ %502, %500 ], [ %498, %629 ], [ %498, %620 ], [ %498, %616 ], [ %498, %634 ]
  %671 = phi i32 [ %412, %434 ], [ %412, %500 ], [ %515, %629 ], [ %515, %620 ], [ %515, %616 ], [ %655, %634 ]
  %672 = phi i64* [ %411, %434 ], [ %411, %500 ], [ %516, %629 ], [ %516, %620 ], [ %516, %616 ], [ %656, %634 ]
  %673 = icmp ult i32 %670, %319
  br i1 %673, label %410, label %674

674:                                              ; preds = %668
  %675 = icmp eq i32 %669, 0
  br i1 %675, label %676, label %682

676:                                              ; preds = %674
  %677 = load i64, i64* %39, align 8
  %678 = add i64 %677, 7
  %679 = inttoptr i64 %678 to i32*
  %680 = load i32, i32* %679, align 4
  %681 = icmp eq i32 %680, %319
  br i1 %681, label %684, label %682

682:                                              ; preds = %676, %674
  %683 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %58, i64* %39, i32 %669, i32 %319) #6
  br label %684

684:                                              ; preds = %682, %676
  %685 = phi i64* [ %683, %682 ], [ %39, %676 ]
  %686 = add i32 %671, 1
  %687 = call i64* @_ZN2v88internal10FixedArray10SetAndGrowEPNS0_7IsolateENS0_6HandleIS1_EEiNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %2, i64* %672, i32 %671, i64* %685) #6
  %688 = call i64* @_ZN2v88internal10FixedArray13ShrinkOrEmptyEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"* %2, i64* %687, i32 %686) #6
  %689 = load i64, i64* %688, align 8
  %690 = add i64 %689, 3
  %691 = inttoptr i64 %690 to i32*
  %692 = load i32, i32* %691, align 4
  %693 = ashr i32 %692, 1
  %694 = call i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %58, i64* %688, i8 zeroext 3, i32 %693, i8 zeroext 0) #6
  %695 = load i64, i64* %694, align 8
  br label %696

696:                                              ; preds = %684, %659, %651, %609, %575, %518, %474, %440, %424, %418, %375, %339, %329, %321, %312, %227, %202, %187, %166, %96
  %697 = phi i64 [ %98, %96 ], [ %168, %166 ], [ %189, %187 ], [ %204, %202 ], [ %229, %227 ], [ %314, %312 ], [ %323, %321 ], [ %420, %418 ], [ %695, %684 ], [ %341, %339 ], [ %382, %375 ], [ %331, %329 ], [ %577, %575 ], [ %611, %609 ], [ %526, %518 ], [ %442, %440 ], [ %476, %474 ], [ %426, %424 ], [ %667, %659 ], [ %653, %651 ]
  %698 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %698, label %711, label %699

699:                                              ; preds = %696
  %700 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %13, i64 0, i32 0
  %701 = load i64*, i64** %700, align 8
  store i64 %15, i64* %14, align 8
  %702 = load i32, i32* %18, align 8
  %703 = add nsw i32 %702, -1
  store i32 %703, i32* %18, align 8
  %704 = load i64*, i64** %16, align 8
  %705 = icmp eq i64* %704, %17
  br i1 %705, label %708, label %706

706:                                              ; preds = %699
  store i64* %17, i64** %16, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %707 = load i64*, i64** %700, align 8
  br label %708

708:                                              ; preds = %706, %699
  %709 = phi i64* [ %707, %706 ], [ %24, %699 ]
  %710 = phi i64* [ %17, %706 ], [ %701, %699 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %709, i64* %710) #6
  br label %711

711:                                              ; preds = %708, %696, %9
  %712 = phi i64 [ %10, %9 ], [ %697, %696 ], [ %697, %708 ]
  ret i64 %712
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL25Stats_Runtime_RegExpSplitEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #5 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1163"], align 16
  %5 = alloca %"class.v8::internal::LookupIterator", align 8
  %6 = alloca %"class.v8::internal::LookupIterator", align 8
  %7 = alloca %"class.v8::internal::LookupIterator", align 8
  %8 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %9 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %10 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 40, i1 false) #6
  %11 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1153", %"struct.std::__1::atomic.1153"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %19, label %13, !prof !3

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %8, i64 0, i32 0
  %15 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %8, i64 0, i32 1
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %17 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %17, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %18, %"class.v8::internal::RuntimeCallStats"** %14, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %18, %"class.v8::internal::RuntimeCallTimer"* %15, i32 548) #6
  br label %19

19:                                               ; preds = %3, %13
  %20 = load atomic i64, i64* @_ZZN2v88internalL25Stats_Runtime_RegExpSplitEiPmPNS0_7IsolateEE29trace_event_unique_atomic1632 monotonic, align 8
  %21 = inttoptr i64 %20 to i8*
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %19
  %24 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %25 = bitcast %"class.v8::TracingController"* %24 to i8* (%"class.v8::TracingController"*, i8*)***
  %26 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %25, align 8
  %27 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %26, i64 2
  %28 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %27, align 8
  %29 = call i8* %28(%"class.v8::TracingController"* %24, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0)) #6
  %30 = ptrtoint i8* %29 to i64
  store atomic volatile i64 %30, i64* @_ZZN2v88internalL25Stats_Runtime_RegExpSplitEiPmPNS0_7IsolateEE29trace_event_unique_atomic1632 monotonic, align 8
  br label %31

31:                                               ; preds = %19, %23
  %32 = phi i8* [ %21, %19 ], [ %29, %23 ]
  %33 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #6
  %34 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %9, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %34, align 8
  %35 = load atomic i8, i8* %32 monotonic, align 1
  %36 = and i8 %35, 5
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %69, label %38

38:                                               ; preds = %31
  %39 = bitcast [2 x %"class.std::__1::unique_ptr.1163"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #6
  %40 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %39, i8 0, i64 16, i1 false) #6
  %41 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %42 = bitcast %"class.v8::TracingController"* %41 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)***
  %43 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*** %42, align 8
  %44 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)** %43, i64 3
  %45 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)** %44, align 8
  %46 = call i64 %45(%"class.v8::TracingController"* %41, i8 signext 88, i8* %32, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.32, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1163"* nonnull %40, i32 0) #6
  %47 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %48 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %47, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %47, align 8
  %49 = icmp eq %"class.v8::ConvertableToTraceFormat"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %38
  %51 = bitcast %"class.v8::ConvertableToTraceFormat"* %48 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %52 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %52, i64 1
  %54 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %53, align 8
  call void %54(%"class.v8::ConvertableToTraceFormat"* nonnull %48) #6
  br label %55

55:                                               ; preds = %50, %38
  %56 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %56, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %56, align 16
  %58 = icmp eq %"class.v8::ConvertableToTraceFormat"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.v8::ConvertableToTraceFormat"* %57 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %61 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %61, i64 1
  %63 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %62, align 8
  call void %63(%"class.v8::ConvertableToTraceFormat"* nonnull %57) #6
  br label %64

64:                                               ; preds = %55, %59
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #6
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %9, i64 0, i32 1
  %66 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %65, i64 0, i32 0
  store i8* %32, i8** %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %9, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.32, i64 0, i64 0), i8** %67, align 8
  %68 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %9, i64 0, i32 1, i32 2
  store i64 %46, i64* %68, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %65, %"struct.v8::internal::tracing::ScopedTracer::Data"** %34, align 8
  br label %69

69:                                               ; preds = %31, %64
  %70 = ptrtoint i64* %1 to i64
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %72 = bitcast %"struct.v8::internal::HandleScopeData"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %75 = load i64*, i64** %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %77 = load i32, i32* %76, align 8
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %76, align 8
  %79 = load i64, i64* %1, align 8
  %80 = and i64 %79, 1
  %81 = icmp eq i64 %80, 0
  %82 = inttoptr i64 %73 to i64*
  br i1 %81, label %94, label %83, !prof !4

83:                                               ; preds = %69
  %84 = and i64 %79, -4294967296
  %85 = add i64 %79, -1
  %86 = inttoptr i64 %85 to i32*
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = zext i32 %87 to i64
  %89 = or i64 %84, %88
  %90 = add i64 %89, 7
  %91 = inttoptr i64 %90 to i16*
  %92 = load atomic i16, i16* %91 monotonic, align 2
  %93 = icmp ugt i16 %92, 185
  br i1 %93, label %95, label %94, !prof !3

94:                                               ; preds = %83, %69
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0)) #18
  unreachable

95:                                               ; preds = %83
  %96 = add i64 %70, -8
  %97 = inttoptr i64 %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = and i64 %98, 1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %112, label %101, !prof !4

101:                                              ; preds = %95
  %102 = and i64 %98, -4294967296
  %103 = add i64 %98, -1
  %104 = inttoptr i64 %103 to i32*
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = zext i32 %105 to i64
  %107 = or i64 %102, %106
  %108 = add i64 %107, 7
  %109 = inttoptr i64 %108 to i16*
  %110 = load atomic i16, i16* %109 monotonic, align 2
  %111 = icmp ult i16 %110, 64
  br i1 %111, label %113, label %112, !prof !3

112:                                              ; preds = %101, %95
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

113:                                              ; preds = %101
  %114 = add i64 %70, -16
  %115 = inttoptr i64 %114 to i64*
  %116 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %117 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i64, i64* %117, align 8
  %119 = and i64 %118, -4294967296
  %120 = add i64 %118, -1
  %121 = inttoptr i64 %120 to i32*
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = zext i32 %122 to i64
  %124 = or i64 %119, %123
  %125 = add i64 %124, 19
  %126 = inttoptr i64 %125 to i32*
  %127 = load i32, i32* %126, align 4
  %128 = zext i32 %127 to i64
  %129 = or i64 %119, %128
  %130 = add i64 %129, 627
  %131 = inttoptr i64 %130 to i32*
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = zext i32 %132 to i64
  %134 = or i64 %119, %133
  %135 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %136 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %135, align 8
  %137 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %113
  %139 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %136, i64 %134) #6
  br label %150

140:                                              ; preds = %113
  %141 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %142 = icmp eq i64* %75, %82
  br i1 %142, label %143, label %145

143:                                              ; preds = %140
  %144 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %145

145:                                              ; preds = %143, %140
  %146 = phi i64* [ %144, %143 ], [ %82, %140 ]
  %147 = ptrtoint i64* %146 to i64
  %148 = add i64 %147, 8
  %149 = inttoptr i64 %148 to i64*
  store i64* %149, i64** %141, align 8
  store i64 %134, i64* %146, align 8
  br label %150

150:                                              ; preds = %145, %138
  %151 = phi i64* [ %139, %138 ], [ %146, %145 ]
  %152 = call i64* @_ZN2v88internal6Object18SpeciesConstructorEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEENS4_INS0_10JSFunctionEEE(%"class.v8::internal::Isolate"* %2, i64* %1, i64* %151) #6
  %153 = icmp eq i64* %152, null
  br i1 %153, label %154, label %157

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %156 = load i64, i64* %155, align 8
  br label %754

157:                                              ; preds = %150
  %158 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 328
  %159 = bitcast %"class.v8::internal::LookupIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %159) #6
  %160 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 0
  %161 = load i64, i64* %158, align 8
  %162 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 4
  %163 = load i64, i64* %162, align 8
  %164 = add i64 %161, -1
  %165 = inttoptr i64 %164 to i32*
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i64 %163, 4294967295
  %168 = icmp eq i64 %167, 0
  call void @llvm.assume(i1 %168) #6
  %169 = zext i32 %166 to i64
  %170 = or i64 %163, %169
  %171 = add i64 %170, 7
  %172 = inttoptr i64 %171 to i16*
  %173 = load atomic i16, i16* %172 monotonic, align 2
  %174 = icmp eq i16 %173, 64
  br i1 %174, label %175, label %181

175:                                              ; preds = %157
  %176 = add i64 %161, 7
  %177 = inttoptr i64 %176 to i32*
  %178 = load i32, i32* %177, align 4
  %179 = and i32 %178, 1
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %175, %157
  br label %182

182:                                              ; preds = %181, %175
  %183 = phi i32 [ 3, %181 ], [ 0, %175 ]
  store i32 %183, i32* %160, align 8
  %184 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 1
  store i32 4, i32* %184, align 4
  %185 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 2
  store i8 0, i8* %185, align 8
  %186 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 3
  store i32 0, i32* %186, align 4
  %187 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 4, i32 0
  store i32 0, i32* %187, align 8
  %188 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %188, align 8
  %189 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 6, i32 0, i32 0
  store i64* %158, i64** %189, align 8
  %190 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %190, align 8
  %191 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 8, i32 0, i32 0
  store i64* %1, i64** %191, align 8
  %192 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %192, align 8
  %193 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 10
  %194 = bitcast %"class.v8::internal::Handle.1169"* %193 to i64*
  store i64 %70, i64* %194, align 8
  %195 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 11
  %196 = bitcast i64* %195 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %196, i8 -1, i64 16, i1 false) #6
  %197 = and i64 %161, -4294967296
  %198 = load atomic i32, i32* %165 monotonic, align 4
  %199 = zext i32 %198 to i64
  %200 = or i64 %197, %199
  %201 = add i64 %200, 7
  %202 = inttoptr i64 %201 to i16*
  %203 = load atomic i16, i16* %202 monotonic, align 2
  %204 = and i16 %203, -32
  %205 = icmp eq i16 %204, 32
  br i1 %205, label %206, label %210

206:                                              ; preds = %182
  %207 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 5, i32 0, i32 0, i32 0
  %208 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %207, align 8
  %209 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %208, %"class.v8::internal::Isolate"* %2, i64* %158) #6
  br label %210

210:                                              ; preds = %206, %182
  %211 = phi i64* [ %209, %206 ], [ %158, %182 ]
  store i64* %211, i64** %189, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %5) #6
  %212 = load i32, i32* %184, align 4
  %213 = icmp eq i32 %212, 4
  br i1 %213, label %214, label %219

214:                                              ; preds = %210
  %215 = bitcast %"class.v8::internal::Isolate"** %188 to %"class.v8::internal::Factory"**
  %216 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %215, align 8
  %217 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %216, i64 160
  %218 = bitcast %"class.v8::internal::Factory"* %217 to i64*
  br label %221

219:                                              ; preds = %210
  %220 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %5, i1 zeroext false) #6
  br label %221

221:                                              ; preds = %219, %214
  %222 = phi i64* [ %220, %219 ], [ %218, %214 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %159) #6
  %223 = icmp eq i64* %222, null
  br i1 %223, label %224, label %227

224:                                              ; preds = %221
  %225 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %226 = load i64, i64* %225, align 8
  br label %754

227:                                              ; preds = %221
  %228 = load i64, i64* %222, align 8
  %229 = and i64 %228, 1
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %242, label %231

231:                                              ; preds = %227
  %232 = and i64 %228, -4294967296
  %233 = add i64 %228, -1
  %234 = inttoptr i64 %233 to i32*
  %235 = load atomic i32, i32* %234 monotonic, align 4
  %236 = zext i32 %235 to i64
  %237 = or i64 %232, %236
  %238 = add i64 %237, 7
  %239 = inttoptr i64 %238 to i16*
  %240 = load atomic i16, i16* %239 monotonic, align 2
  %241 = icmp ult i16 %240, 64
  br i1 %241, label %248, label %242

242:                                              ; preds = %231, %227
  %243 = call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* nonnull %222) #6
  %244 = icmp eq i64* %243, null
  br i1 %244, label %245, label %248

245:                                              ; preds = %242
  %246 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %247 = load i64, i64* %246, align 8
  br label %754

248:                                              ; preds = %242, %231
  %249 = phi i64* [ %243, %242 ], [ %222, %231 ]
  %250 = call i64* @_ZN2v88internal7Factory35LookupSingleCharacterStringFromCodeEt(%"class.v8::internal::Factory"* %116, i16 zeroext 117) #6
  %251 = call i32 @_ZN2v88internal6String7IndexOfEPNS0_7IsolateENS0_6HandleIS1_EES5_i(%"class.v8::internal::Isolate"* %2, i64* nonnull %249, i64* %250, i32 0) #6
  %252 = icmp sgt i32 %251, -1
  %253 = call i64* @_ZN2v88internal7Factory35LookupSingleCharacterStringFromCodeEt(%"class.v8::internal::Factory"* %116, i16 zeroext 121) #6
  %254 = call i32 @_ZN2v88internal6String7IndexOfEPNS0_7IsolateENS0_6HandleIS1_EES5_i(%"class.v8::internal::Isolate"* %2, i64* nonnull %249, i64* %253, i32 0) #6
  %255 = icmp sgt i32 %254, -1
  br i1 %255, label %263, label %256

256:                                              ; preds = %248
  %257 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %258 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewConsStringENS0_6HandleINS0_6StringEEES6_NS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %257, i64* nonnull %249, i64* %253, i8 zeroext 0) #6
  %259 = icmp eq i64* %258, null
  br i1 %259, label %260, label %263

260:                                              ; preds = %256
  %261 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %262 = load i64, i64* %261, align 8
  br label %754

263:                                              ; preds = %256, %248
  %264 = phi i64* [ %249, %248 ], [ %258, %256 ]
  %265 = ptrtoint i64* %264 to i64
  %266 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 16, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #20
  %267 = icmp eq i8* %266, null
  br i1 %267, label %268, label %277

268:                                              ; preds = %263
  %269 = call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #6
  %270 = bitcast %"class.v8::Platform"* %269 to void (%"class.v8::Platform"*)***
  %271 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %270, align 8
  %272 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %271, i64 3
  %273 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %272, align 8
  call void %273(%"class.v8::Platform"* %269) #6
  %274 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 16, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #20
  %275 = icmp eq i8* %274, null
  br i1 %275, label %276, label %277

276:                                              ; preds = %268
  call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0)) #18
  unreachable

277:                                              ; preds = %268, %263
  %278 = phi i8* [ %266, %263 ], [ %274, %268 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %278, i8 0, i64 16, i1 false) #6
  %279 = bitcast i8* %278 to %"class.v8::internal::Handle.1169"*
  %280 = bitcast i8* %278 to i64*
  store i64 %70, i64* %280, align 8
  %281 = getelementptr inbounds i8, i8* %278, i64 8
  %282 = bitcast i8* %281 to i64*
  store i64 %265, i64* %282, align 8
  %283 = call i64* @_ZN2v88internal9Execution3NewEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEiPS6_(%"class.v8::internal::Isolate"* %2, i64* nonnull %152, i32 2, %"class.v8::internal::Handle.1169"* %279) #6
  %284 = icmp eq i64* %283, null
  br i1 %284, label %285, label %288

285:                                              ; preds = %277
  %286 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %287 = load i64, i64* %286, align 8
  call void @_ZdaPv(i8* nonnull %278) #20
  br label %754

288:                                              ; preds = %277
  call void @_ZdaPv(i8* nonnull %278) #20
  %289 = load i64, i64* %115, align 8
  %290 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 4
  %291 = load i64, i64* %290, align 8
  %292 = trunc i64 %289 to i32
  %293 = trunc i64 %291 to i32
  %294 = icmp eq i32 %292, %293
  br i1 %294, label %367, label %295

295:                                              ; preds = %288
  %296 = and i64 %289, 1
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %311, label %298

298:                                              ; preds = %295
  %299 = and i64 %289, -4294967296
  %300 = add i64 %289, -1
  %301 = inttoptr i64 %300 to i32*
  %302 = load atomic i32, i32* %301 monotonic, align 4
  %303 = zext i32 %302 to i64
  %304 = or i64 %299, %303
  %305 = add i64 %304, 7
  %306 = inttoptr i64 %305 to i16*
  %307 = load atomic i16, i16* %306 monotonic, align 2
  %308 = icmp eq i16 %307, 66
  br i1 %308, label %311, label %309

309:                                              ; preds = %298
  %310 = call i64* @_ZN2v88internal6Object24ConvertToNumberOrNumericEPNS0_7IsolateENS0_6HandleIS1_EENS1_10ConversionE(%"class.v8::internal::Isolate"* %2, i64* %115, i32 0) #6
  br label %311

311:                                              ; preds = %309, %298, %295
  %312 = phi i64* [ %310, %309 ], [ %115, %298 ], [ %115, %295 ]
  %313 = icmp eq i64* %312, null
  br i1 %313, label %370, label %314

314:                                              ; preds = %311
  %315 = load i64, i64* %312, align 8
  %316 = and i64 %315, 1
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %318, label %321

318:                                              ; preds = %314
  %319 = trunc i64 %315 to i32
  %320 = ashr i32 %319, 1
  br label %367

321:                                              ; preds = %314
  %322 = add i64 %315, 3
  %323 = inttoptr i64 %322 to double*
  %324 = load double, double* %323, align 1
  %325 = call double @llvm.fabs.f64(double %324) #21
  %326 = fcmp one double %325, 0x7FF0000000000000
  %327 = fcmp ole double %324, 0x41DFFFFFFFC00000
  %328 = and i1 %327, %326
  %329 = fcmp oge double %324, 0xC1E0000000000000
  %330 = and i1 %329, %328
  br i1 %330, label %331, label %335

331:                                              ; preds = %321
  %332 = fptosi double %324 to i32
  %333 = sitofp i32 %332 to double
  %334 = fcmp une double %324, %333
  br i1 %334, label %335, label %367

335:                                              ; preds = %331, %321
  %336 = bitcast double %324 to i64
  %337 = and i64 %336, 9218868437227405312
  %338 = icmp eq i64 %337, 0
  br i1 %338, label %367, label %339

339:                                              ; preds = %335
  %340 = lshr i64 %336, 52
  %341 = trunc i64 %340 to i32
  %342 = and i32 %341, 2047
  %343 = add nsw i32 %342, -1075
  %344 = icmp slt i32 %343, 0
  br i1 %344, label %345, label %353

345:                                              ; preds = %339
  %346 = icmp slt i32 %343, -52
  br i1 %346, label %367, label %347

347:                                              ; preds = %345
  %348 = and i64 %336, 4503599627370495
  %349 = or i64 %348, 4503599627370496
  %350 = sub nuw nsw i32 1075, %342
  %351 = zext i32 %350 to i64
  %352 = lshr i64 %349, %351
  br label %361

353:                                              ; preds = %339
  %354 = icmp sgt i32 %343, 31
  br i1 %354, label %367, label %355

355:                                              ; preds = %353
  %356 = and i64 %336, 4503599627370495
  %357 = or i64 %356, 4503599627370496
  %358 = zext i32 %343 to i64
  %359 = shl i64 %357, %358
  %360 = and i64 %359, 4294967295
  br label %361

361:                                              ; preds = %355, %347
  %362 = phi i64 [ %352, %347 ], [ %360, %355 ]
  %363 = icmp sgt i64 %336, -1
  %364 = select i1 %363, i32 1, i32 -1
  %365 = trunc i64 %362 to i32
  %366 = mul i32 %364, %365
  br label %367

367:                                              ; preds = %361, %353, %345, %335, %331, %318, %288
  %368 = phi i32 [ -1, %288 ], [ %320, %318 ], [ %332, %331 ], [ %366, %361 ], [ 0, %345 ], [ 0, %353 ], [ 0, %335 ]
  %369 = icmp eq i64 %114, 0
  br i1 %369, label %370, label %373

370:                                              ; preds = %367, %311
  %371 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %372 = load i64, i64* %371, align 8
  br label %754

373:                                              ; preds = %367
  %374 = load i64, i64* %97, align 8
  %375 = add i64 %374, 7
  %376 = inttoptr i64 %375 to i32*
  %377 = load i32, i32* %376, align 4
  %378 = icmp eq i32 %368, 0
  br i1 %378, label %379, label %382

379:                                              ; preds = %373
  %380 = call i64* @_ZN2v88internal7Factory10NewJSArrayENS0_12ElementsKindEiiNS0_26ArrayStorageAllocationModeENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %116, i8 zeroext 3, i32 0, i32 0, i32 1, i8 zeroext 0) #6
  %381 = load i64, i64* %380, align 8
  br label %754

382:                                              ; preds = %373
  %383 = icmp eq i32 %377, 0
  br i1 %383, label %384, label %441

384:                                              ; preds = %382
  %385 = call i64* @_ZN2v88internal11RegExpUtils10RegExpExecEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEENS4_INS0_6StringEEENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %2, i64* nonnull %283, i64* %97, i64* %290) #6
  %386 = icmp eq i64* %385, null
  br i1 %386, label %387, label %390

387:                                              ; preds = %384
  %388 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %389 = load i64, i64* %388, align 8
  br label %754

390:                                              ; preds = %384
  %391 = load i64, i64* %385, align 8
  %392 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 6
  %393 = load i64, i64* %392, align 8
  %394 = trunc i64 %391 to i32
  %395 = trunc i64 %393 to i32
  %396 = icmp eq i32 %394, %395
  br i1 %396, label %400, label %397

397:                                              ; preds = %390
  %398 = call i64* @_ZN2v88internal7Factory10NewJSArrayENS0_12ElementsKindEiiNS0_26ArrayStorageAllocationModeENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %116, i8 zeroext 3, i32 0, i32 0, i32 1, i8 zeroext 0) #6
  %399 = load i64, i64* %398, align 8
  br label %754

400:                                              ; preds = %390
  %401 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %402 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %401, i32 1, i8 zeroext 0) #6
  %403 = load i64, i64* %402, align 8
  %404 = load i64, i64* %97, align 8
  %405 = add i64 %403, 7
  %406 = inttoptr i64 %405 to i32*
  %407 = trunc i64 %404 to i32
  store atomic volatile i32 %407, i32* %406 monotonic, align 4
  %408 = and i64 %404, 1
  %409 = icmp eq i64 %408, 0
  br i1 %409, label %433, label %410

410:                                              ; preds = %400
  %411 = and i64 %403, -262144
  %412 = or i64 %411, 8
  %413 = inttoptr i64 %412 to i64*
  %414 = load i64, i64* %413, align 8
  %415 = and i64 %414, 262144
  %416 = icmp eq i64 %415, 0
  br i1 %416, label %421, label %417

417:                                              ; preds = %410
  %418 = or i64 %411, 16
  %419 = inttoptr i64 %418 to %"class.v8::internal::Heap"**
  %420 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %419, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %420, i64 %403, i64 %405, i64 %404) #6
  br label %421

421:                                              ; preds = %417, %410
  %422 = and i64 %404, -262144
  %423 = or i64 %422, 8
  %424 = inttoptr i64 %423 to i64*
  %425 = load i64, i64* %424, align 8
  %426 = and i64 %425, 24
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %433, label %428

428:                                              ; preds = %421
  %429 = load i64, i64* %413, align 8
  %430 = and i64 %429, 24
  %431 = icmp eq i64 %430, 0
  br i1 %431, label %432, label %433

432:                                              ; preds = %428
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %403, i64 %405, i64 %404) #6
  br label %433

433:                                              ; preds = %432, %428, %421, %400
  %434 = load i64, i64* %402, align 8
  %435 = add i64 %434, 3
  %436 = inttoptr i64 %435 to i32*
  %437 = load i32, i32* %436, align 4
  %438 = ashr i32 %437, 1
  %439 = call i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %116, i64* %402, i8 zeroext 3, i32 %438, i8 zeroext 0) #6
  %440 = load i64, i64* %439, align 8
  br label %754

441:                                              ; preds = %382
  %442 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %443 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE22NewFixedArrayWithHolesEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %442, i32 8, i8 zeroext 0) #6
  %444 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 6
  %445 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %446 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 363
  %447 = bitcast %"class.v8::internal::LookupIterator"* %6 to i8*
  %448 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 0
  %449 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 1
  %450 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 2
  %451 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 3
  %452 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 4, i32 0
  %453 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 5
  %454 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 6, i32 0, i32 0
  %455 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 7, i32 0, i32 0
  %456 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 8, i32 0, i32 0
  %457 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 9, i32 0, i32 0
  %458 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 10
  %459 = bitcast %"class.v8::internal::Handle.1169"* %458 to i64*
  %460 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 11
  %461 = bitcast i64* %460 to i8*
  %462 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 5, i32 0, i32 0, i32 0
  %463 = bitcast %"class.v8::internal::Isolate"** %453 to %"class.v8::internal::Factory"**
  %464 = bitcast %"class.v8::internal::LookupIterator"* %7 to i8*
  %465 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 1
  %466 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 5
  %467 = bitcast %"class.v8::internal::Isolate"** %466 to %"class.v8::internal::Factory"**
  br label %468

468:                                              ; preds = %726, %441
  %469 = phi i64* [ %443, %441 ], [ %730, %726 ]
  %470 = phi i32 [ 0, %441 ], [ %729, %726 ]
  %471 = phi i32 [ 0, %441 ], [ %728, %726 ]
  %472 = phi i32 [ 0, %441 ], [ %727, %726 ]
  %473 = zext i32 %471 to i64
  %474 = call i64* @_ZN2v88internal11RegExpUtils12SetLastIndexEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEEm(%"class.v8::internal::Isolate"* %2, i64* nonnull %283, i64 %473) #6
  %475 = icmp eq i64* %474, null
  br i1 %475, label %476, label %479

476:                                              ; preds = %468
  %477 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %478 = load i64, i64* %477, align 8
  br label %754

479:                                              ; preds = %468
  %480 = call i64* @_ZN2v88internal11RegExpUtils10RegExpExecEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEENS4_INS0_6StringEEENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %2, i64* nonnull %283, i64* %97, i64* %290) #6
  %481 = icmp eq i64* %480, null
  br i1 %481, label %482, label %485

482:                                              ; preds = %479
  %483 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %484 = load i64, i64* %483, align 8
  br label %754

485:                                              ; preds = %479
  %486 = ptrtoint i64* %480 to i64
  %487 = load i64, i64* %480, align 8
  %488 = load i64, i64* %444, align 8
  %489 = trunc i64 %487 to i32
  %490 = trunc i64 %488 to i32
  %491 = icmp eq i32 %489, %490
  br i1 %491, label %492, label %495

492:                                              ; preds = %485
  %493 = call i64 @_ZN2v88internal11RegExpUtils18AdvanceStringIndexENS0_6HandleINS0_6StringEEEmb(i64* %97, i64 %473, i1 zeroext %252) #6
  %494 = trunc i64 %493 to i32
  br label %726

495:                                              ; preds = %485
  %496 = call i64* @_ZN2v88internal11RegExpUtils12GetLastIndexEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::Isolate"* %2, i64* nonnull %283) #6
  %497 = icmp eq i64* %496, null
  br i1 %497, label %498, label %501

498:                                              ; preds = %495
  %499 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %500 = load i64, i64* %499, align 8
  br label %754

501:                                              ; preds = %495
  %502 = load i64, i64* %496, align 8
  %503 = and i64 %502, 1
  %504 = icmp eq i64 %503, 0
  br i1 %504, label %505, label %527

505:                                              ; preds = %501
  %506 = trunc i64 %502 to i32
  %507 = ashr i32 %506, 1
  %508 = icmp sgt i32 %507, 0
  %509 = select i1 %508, i32 %507, i32 0
  %510 = shl nuw nsw i32 %509, 1
  %511 = zext i32 %510 to i64
  %512 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %135, align 8
  %513 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %512, null
  br i1 %513, label %516, label %514

514:                                              ; preds = %505
  %515 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %512, i64 %511) #6
  br label %529

516:                                              ; preds = %505
  %517 = load i64*, i64** %445, align 8
  %518 = load i64*, i64** %74, align 8
  %519 = icmp eq i64* %517, %518
  br i1 %519, label %520, label %522

520:                                              ; preds = %516
  %521 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %522

522:                                              ; preds = %520, %516
  %523 = phi i64* [ %521, %520 ], [ %517, %516 ]
  %524 = ptrtoint i64* %523 to i64
  %525 = add i64 %524, 8
  %526 = inttoptr i64 %525 to i64*
  store i64* %526, i64** %445, align 8
  store i64 %511, i64* %523, align 8
  br label %529

527:                                              ; preds = %501
  %528 = call i64* @_ZN2v88internal6Object15ConvertToLengthEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* nonnull %496) #6
  br label %529

529:                                              ; preds = %527, %522, %514
  %530 = phi i64* [ %528, %527 ], [ %515, %514 ], [ %523, %522 ]
  %531 = icmp eq i64* %530, null
  br i1 %531, label %532, label %535

532:                                              ; preds = %529
  %533 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %534 = load i64, i64* %533, align 8
  br label %754

535:                                              ; preds = %529
  %536 = load i64, i64* %530, align 8
  %537 = and i64 %536, 1
  %538 = icmp eq i64 %537, 0
  br i1 %538, label %539, label %544

539:                                              ; preds = %535
  %540 = trunc i64 %536 to i32
  %541 = ashr i32 %540, 1
  %542 = icmp slt i32 %540, 2
  %543 = select i1 %542, i32 0, i32 %541
  br label %553

544:                                              ; preds = %535
  %545 = add i64 %536, 3
  %546 = inttoptr i64 %545 to double*
  %547 = load double, double* %546, align 1
  %548 = fcmp ult double %547, 1.000000e+00
  br i1 %548, label %553, label %549

549:                                              ; preds = %544
  %550 = fcmp olt double %547, 0x41EFFFFFFFE00000
  %551 = select i1 %550, double %547, double 0x41EFFFFFFFE00000
  %552 = fptoui double %551 to i32
  br label %553

553:                                              ; preds = %549, %544, %539
  %554 = phi i32 [ %543, %539 ], [ 0, %544 ], [ %552, %549 ]
  %555 = icmp ult i32 %377, %554
  %556 = select i1 %555, i32 %377, i32 %554
  %557 = icmp eq i32 %556, %472
  br i1 %557, label %558, label %561

558:                                              ; preds = %553
  %559 = call i64 @_ZN2v88internal11RegExpUtils18AdvanceStringIndexENS0_6HandleINS0_6StringEEEmb(i64* %97, i64 %473, i1 zeroext %252) #6
  %560 = trunc i64 %559 to i32
  br label %726

561:                                              ; preds = %553
  %562 = icmp eq i32 %472, 0
  br i1 %562, label %563, label %569

563:                                              ; preds = %561
  %564 = load i64, i64* %97, align 8
  %565 = add i64 %564, 7
  %566 = inttoptr i64 %565 to i32*
  %567 = load i32, i32* %566, align 4
  %568 = icmp eq i32 %567, %471
  br i1 %568, label %571, label %569

569:                                              ; preds = %563, %561
  %570 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %116, i64* %97, i32 %472, i32 %471) #6
  br label %571

571:                                              ; preds = %569, %563
  %572 = phi i64* [ %570, %569 ], [ %97, %563 ]
  %573 = add i32 %470, 1
  %574 = call i64* @_ZN2v88internal10FixedArray10SetAndGrowEPNS0_7IsolateENS0_6HandleIS1_EEiNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %2, i64* %469, i32 %470, i64* %572) #6
  %575 = icmp eq i32 %573, %368
  br i1 %575, label %576, label %585

576:                                              ; preds = %571
  %577 = call i64* @_ZN2v88internal10FixedArray13ShrinkOrEmptyEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"* %2, i64* %574, i32 %368) #6
  %578 = load i64, i64* %577, align 8
  %579 = add i64 %578, 3
  %580 = inttoptr i64 %579 to i32*
  %581 = load i32, i32* %580, align 4
  %582 = ashr i32 %581, 1
  %583 = call i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %116, i64* %577, i8 zeroext 3, i32 %582, i8 zeroext 0) #6
  %584 = load i64, i64* %583, align 8
  br label %754

585:                                              ; preds = %571
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %447) #6
  %586 = load i64, i64* %446, align 8
  %587 = load i64, i64* %162, align 8
  %588 = add i64 %586, -1
  %589 = inttoptr i64 %588 to i32*
  %590 = load atomic i32, i32* %589 monotonic, align 4
  %591 = and i64 %587, 4294967295
  %592 = icmp eq i64 %591, 0
  call void @llvm.assume(i1 %592) #6
  %593 = zext i32 %590 to i64
  %594 = or i64 %587, %593
  %595 = add i64 %594, 7
  %596 = inttoptr i64 %595 to i16*
  %597 = load atomic i16, i16* %596 monotonic, align 2
  %598 = icmp eq i16 %597, 64
  br i1 %598, label %599, label %605

599:                                              ; preds = %585
  %600 = add i64 %586, 7
  %601 = inttoptr i64 %600 to i32*
  %602 = load i32, i32* %601, align 4
  %603 = and i32 %602, 1
  %604 = icmp eq i32 %603, 0
  br i1 %604, label %605, label %606

605:                                              ; preds = %599, %585
  br label %606

606:                                              ; preds = %605, %599
  %607 = phi i32 [ 3, %605 ], [ 0, %599 ]
  store i32 %607, i32* %448, align 8
  store i32 4, i32* %449, align 4
  store i8 0, i8* %450, align 8
  store i32 0, i32* %451, align 4
  store i32 0, i32* %452, align 8
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %453, align 8
  store i64* %446, i64** %454, align 8
  store i64* null, i64** %455, align 8
  store i64* %480, i64** %456, align 8
  store i64* null, i64** %457, align 8
  store i64 %486, i64* %459, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %461, i8 -1, i64 16, i1 false) #6
  %608 = and i64 %586, -4294967296
  %609 = load atomic i32, i32* %589 monotonic, align 4
  %610 = zext i32 %609 to i64
  %611 = or i64 %608, %610
  %612 = add i64 %611, 7
  %613 = inttoptr i64 %612 to i16*
  %614 = load atomic i16, i16* %613 monotonic, align 2
  %615 = and i16 %614, -32
  %616 = icmp eq i16 %615, 32
  br i1 %616, label %617, label %620

617:                                              ; preds = %606
  %618 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %462, align 8
  %619 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %618, %"class.v8::internal::Isolate"* %2, i64* %446) #6
  br label %620

620:                                              ; preds = %617, %606
  %621 = phi i64* [ %619, %617 ], [ %446, %606 ]
  store i64* %621, i64** %454, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %6) #6
  %622 = load i32, i32* %449, align 4
  %623 = icmp eq i32 %622, 4
  br i1 %623, label %624, label %628

624:                                              ; preds = %620
  %625 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %463, align 8
  %626 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %625, i64 160
  %627 = bitcast %"class.v8::internal::Factory"* %626 to i64*
  br label %630

628:                                              ; preds = %620
  %629 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %6, i1 zeroext false) #6
  br label %630

630:                                              ; preds = %628, %624
  %631 = phi i64* [ %629, %628 ], [ %627, %624 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %447) #6
  %632 = icmp eq i64* %631, null
  br i1 %632, label %633, label %636

633:                                              ; preds = %630
  %634 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %635 = load i64, i64* %634, align 8
  br label %754

636:                                              ; preds = %630
  %637 = load i64, i64* %631, align 8
  %638 = and i64 %637, 1
  %639 = icmp eq i64 %638, 0
  br i1 %639, label %640, label %662

640:                                              ; preds = %636
  %641 = trunc i64 %637 to i32
  %642 = ashr i32 %641, 1
  %643 = icmp sgt i32 %642, 0
  %644 = select i1 %643, i32 %642, i32 0
  %645 = shl nuw nsw i32 %644, 1
  %646 = zext i32 %645 to i64
  %647 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %135, align 8
  %648 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %647, null
  br i1 %648, label %651, label %649

649:                                              ; preds = %640
  %650 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %647, i64 %646) #6
  br label %664

651:                                              ; preds = %640
  %652 = load i64*, i64** %445, align 8
  %653 = load i64*, i64** %74, align 8
  %654 = icmp eq i64* %652, %653
  br i1 %654, label %655, label %657

655:                                              ; preds = %651
  %656 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %657

657:                                              ; preds = %655, %651
  %658 = phi i64* [ %656, %655 ], [ %652, %651 ]
  %659 = ptrtoint i64* %658 to i64
  %660 = add i64 %659, 8
  %661 = inttoptr i64 %660 to i64*
  store i64* %661, i64** %445, align 8
  store i64 %646, i64* %658, align 8
  br label %664

662:                                              ; preds = %636
  %663 = call i64* @_ZN2v88internal6Object15ConvertToLengthEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* nonnull %631) #6
  br label %664

664:                                              ; preds = %662, %657, %649
  %665 = phi i64* [ %663, %662 ], [ %650, %649 ], [ %658, %657 ]
  %666 = icmp eq i64* %665, null
  br i1 %666, label %667, label %670

667:                                              ; preds = %664
  %668 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %669 = load i64, i64* %668, align 8
  br label %754

670:                                              ; preds = %664
  %671 = load i64, i64* %665, align 8
  %672 = and i64 %671, 1
  %673 = icmp eq i64 %672, 0
  br i1 %673, label %674, label %678

674:                                              ; preds = %670
  %675 = trunc i64 %671 to i32
  %676 = ashr i32 %675, 1
  %677 = icmp slt i32 %675, 2
  br i1 %677, label %726, label %687

678:                                              ; preds = %670
  %679 = add i64 %671, 3
  %680 = inttoptr i64 %679 to double*
  %681 = load double, double* %680, align 1
  %682 = fcmp ult double %681, 1.000000e+00
  br i1 %682, label %726, label %683

683:                                              ; preds = %678
  %684 = fcmp olt double %681, 0x41EFFFFFFFE00000
  %685 = select i1 %684, double %681, double 0x41EFFFFFFFE00000
  %686 = fptoui double %685 to i32
  br label %687

687:                                              ; preds = %683, %674
  %688 = phi i32 [ %676, %674 ], [ %686, %683 ]
  %689 = icmp ugt i32 %688, 1
  br i1 %689, label %690, label %726

690:                                              ; preds = %687
  %691 = zext i32 %688 to i64
  br label %694

692:                                              ; preds = %712
  %693 = icmp eq i64 %716, %691
  br i1 %693, label %726, label %694

694:                                              ; preds = %692, %690
  %695 = phi i64 [ 1, %690 ], [ %716, %692 ]
  %696 = phi i64* [ %574, %690 ], [ %714, %692 ]
  %697 = phi i32 [ %573, %690 ], [ %713, %692 ]
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %464) #6
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %7, %"class.v8::internal::Isolate"* %2, i64* nonnull %480, i64* null, i64 %695, i64* nonnull %480, i32 3) #6
  %698 = load i32, i32* %465, align 4
  %699 = icmp eq i32 %698, 4
  br i1 %699, label %700, label %704

700:                                              ; preds = %694
  %701 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %467, align 8
  %702 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %701, i64 160
  %703 = bitcast %"class.v8::internal::Factory"* %702 to i64*
  br label %706

704:                                              ; preds = %694
  %705 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %7, i1 zeroext false) #6
  br label %706

706:                                              ; preds = %704, %700
  %707 = phi i64* [ %705, %704 ], [ %703, %700 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %464) #6
  %708 = icmp eq i64* %707, null
  br i1 %708, label %709, label %712

709:                                              ; preds = %706
  %710 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %711 = load i64, i64* %710, align 8
  br label %754

712:                                              ; preds = %706
  %713 = add i32 %697, 1
  %714 = call i64* @_ZN2v88internal10FixedArray10SetAndGrowEPNS0_7IsolateENS0_6HandleIS1_EEiNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %2, i64* %696, i32 %697, i64* nonnull %707) #6
  %715 = icmp eq i32 %713, %368
  %716 = add nuw nsw i64 %695, 1
  br i1 %715, label %717, label %692

717:                                              ; preds = %712
  %718 = call i64* @_ZN2v88internal10FixedArray13ShrinkOrEmptyEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"* %2, i64* %714, i32 %368) #6
  %719 = load i64, i64* %718, align 8
  %720 = add i64 %719, 3
  %721 = inttoptr i64 %720 to i32*
  %722 = load i32, i32* %721, align 4
  %723 = ashr i32 %722, 1
  %724 = call i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %116, i64* %718, i8 zeroext 3, i32 %723, i8 zeroext 0) #6
  %725 = load i64, i64* %724, align 8
  br label %754

726:                                              ; preds = %692, %687, %678, %674, %558, %492
  %727 = phi i32 [ %472, %492 ], [ %472, %558 ], [ %556, %687 ], [ %556, %678 ], [ %556, %674 ], [ %556, %692 ]
  %728 = phi i32 [ %494, %492 ], [ %560, %558 ], [ %556, %687 ], [ %556, %678 ], [ %556, %674 ], [ %556, %692 ]
  %729 = phi i32 [ %470, %492 ], [ %470, %558 ], [ %573, %687 ], [ %573, %678 ], [ %573, %674 ], [ %713, %692 ]
  %730 = phi i64* [ %469, %492 ], [ %469, %558 ], [ %574, %687 ], [ %574, %678 ], [ %574, %674 ], [ %714, %692 ]
  %731 = icmp ult i32 %728, %377
  br i1 %731, label %468, label %732

732:                                              ; preds = %726
  %733 = icmp eq i32 %727, 0
  br i1 %733, label %734, label %740

734:                                              ; preds = %732
  %735 = load i64, i64* %97, align 8
  %736 = add i64 %735, 7
  %737 = inttoptr i64 %736 to i32*
  %738 = load i32, i32* %737, align 4
  %739 = icmp eq i32 %738, %377
  br i1 %739, label %742, label %740

740:                                              ; preds = %734, %732
  %741 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %116, i64* %97, i32 %727, i32 %377) #6
  br label %742

742:                                              ; preds = %740, %734
  %743 = phi i64* [ %741, %740 ], [ %97, %734 ]
  %744 = add i32 %729, 1
  %745 = call i64* @_ZN2v88internal10FixedArray10SetAndGrowEPNS0_7IsolateENS0_6HandleIS1_EEiNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %2, i64* %730, i32 %729, i64* %743) #6
  %746 = call i64* @_ZN2v88internal10FixedArray13ShrinkOrEmptyEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"* %2, i64* %745, i32 %744) #6
  %747 = load i64, i64* %746, align 8
  %748 = add i64 %747, 3
  %749 = inttoptr i64 %748 to i32*
  %750 = load i32, i32* %749, align 4
  %751 = ashr i32 %750, 1
  %752 = call i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %116, i64* %746, i8 zeroext 3, i32 %751, i8 zeroext 0) #6
  %753 = load i64, i64* %752, align 8
  br label %754

754:                                              ; preds = %742, %717, %709, %667, %633, %576, %532, %498, %482, %476, %433, %397, %387, %379, %370, %285, %260, %245, %224, %154
  %755 = phi i64 [ %156, %154 ], [ %226, %224 ], [ %247, %245 ], [ %262, %260 ], [ %287, %285 ], [ %372, %370 ], [ %381, %379 ], [ %478, %476 ], [ %753, %742 ], [ %399, %397 ], [ %440, %433 ], [ %389, %387 ], [ %635, %633 ], [ %669, %667 ], [ %584, %576 ], [ %500, %498 ], [ %534, %532 ], [ %484, %482 ], [ %725, %717 ], [ %711, %709 ]
  %756 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %756, label %769, label %757

757:                                              ; preds = %754
  %758 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %71, i64 0, i32 0
  %759 = load i64*, i64** %758, align 8
  store i64 %73, i64* %72, align 8
  %760 = load i32, i32* %76, align 8
  %761 = add nsw i32 %760, -1
  store i32 %761, i32* %76, align 8
  %762 = load i64*, i64** %74, align 8
  %763 = icmp eq i64* %762, %75
  br i1 %763, label %766, label %764

764:                                              ; preds = %757
  store i64* %75, i64** %74, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %765 = load i64*, i64** %758, align 8
  br label %766

766:                                              ; preds = %764, %757
  %767 = phi i64* [ %765, %764 ], [ %82, %757 ]
  %768 = phi i64* [ %75, %764 ], [ %759, %757 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %767, i64* %768) #6
  br label %769

769:                                              ; preds = %754, %766
  %770 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %34, align 8
  %771 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %770, null
  br i1 %771, label %788, label %772

772:                                              ; preds = %769
  %773 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %9, i64 0, i32 1, i32 0
  %774 = load i8*, i8** %773, align 8
  %775 = load atomic i8, i8* %774 monotonic, align 1
  %776 = icmp eq i8 %775, 0
  br i1 %776, label %788, label %777

777:                                              ; preds = %772
  %778 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %779 = load i8*, i8** %773, align 8
  %780 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %9, i64 0, i32 1, i32 1
  %781 = load i8*, i8** %780, align 8
  %782 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %9, i64 0, i32 1, i32 2
  %783 = load i64, i64* %782, align 8
  %784 = bitcast %"class.v8::TracingController"* %778 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %785 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %784, align 8
  %786 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %785, i64 5
  %787 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %786, align 8
  call void %787(%"class.v8::TracingController"* %778, i8* %779, i8* %781, i64 %783) #6
  br label %788

788:                                              ; preds = %769, %772, %777
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #6
  %789 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %8, i64 0, i32 0
  %790 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %789, align 8
  %791 = icmp eq %"class.v8::internal::RuntimeCallStats"* %790, null
  br i1 %791, label %794, label %792, !prof !3

792:                                              ; preds = %788
  %793 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %8, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %790, %"class.v8::internal::RuntimeCallTimer"* %793) #6
  br label %794

794:                                              ; preds = %788, %792
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #6
  ret i64 %755
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal23Runtime_RegExpReplaceRTEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = alloca %"class.v8::internal::LookupIterator", align 8
  %5 = alloca %"class.v8::internal::LookupIterator", align 8
  %6 = alloca %"class.v8::internal::LookupIterator", align 8
  %7 = alloca %"class.v8::internal::LookupIterator", align 8
  %8 = alloca %"class.v8::internal::LookupIterator", align 8
  %9 = alloca %"class.v8::internal::LookupIterator", align 8
  %10 = alloca %"class.v8::internal::LookupIterator", align 8
  %11 = alloca %"class.v8::internal::LookupIterator", align 8
  %12 = alloca %"class.v8::internal::RegExpGlobalCache", align 8
  %13 = alloca %"class.v8::internal::RegExpGlobalCache", align 8
  %14 = alloca %"class.v8::internal::CompiledReplacement", align 8
  %15 = alloca %"class.v8::internal::RegExpGlobalCache", align 8
  %16 = alloca %"class.v8::internal::ReplacementStringBuilder", align 8
  %17 = alloca %"class.v8::internal::IncrementalStringBuilder", align 8
  %18 = alloca %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", align 8
  %19 = alloca %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", align 8
  %20 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %21 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %22 = alloca %"class.v8::base::SmallVector.1203", align 8
  %23 = alloca %"class.v8::internal::IncrementalStringBuilder", align 8
  %24 = alloca %"class.v8::base::SmallVector.1203", align 8
  %25 = alloca %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", align 8
  %26 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1153", %"struct.std::__1::atomic.1153"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %30, label %28, !prof !3

28:                                               ; preds = %3
  %29 = tail call fastcc i64 @_ZN2v88internalL29Stats_Runtime_RegExpReplaceRTEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %2414

30:                                               ; preds = %3
  %31 = ptrtoint i64* %1 to i64
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %33 = bitcast %"struct.v8::internal::HandleScopeData"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %36 = load i64*, i64** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %37, align 8
  %40 = load i64, i64* %1, align 8
  %41 = and i64 %40, 1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %54, label %43, !prof !4

43:                                               ; preds = %30
  %44 = and i64 %40, -4294967296
  %45 = add i64 %40, -1
  %46 = inttoptr i64 %45 to i32*
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %44, %48
  %50 = add i64 %49, 7
  %51 = inttoptr i64 %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = icmp ugt i16 %52, 185
  br i1 %53, label %55, label %54, !prof !3

54:                                               ; preds = %43, %30
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0)) #18
  unreachable

55:                                               ; preds = %43
  %56 = add i64 %31, -8
  %57 = inttoptr i64 %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %58, 1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %72, label %61, !prof !4

61:                                               ; preds = %55
  %62 = and i64 %58, -4294967296
  %63 = add i64 %58, -1
  %64 = inttoptr i64 %63 to i32*
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %62, %66
  %68 = add i64 %67, 7
  %69 = inttoptr i64 %68 to i16*
  %70 = load atomic i16, i16* %69 monotonic, align 2
  %71 = icmp ult i16 %70, 64
  br i1 %71, label %73, label %72, !prof !3

72:                                               ; preds = %61, %55
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

73:                                               ; preds = %61
  %74 = add i64 %31, -16
  %75 = inttoptr i64 %74 to i64*
  %76 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %77 = tail call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %57, i8 zeroext 0) #6
  %78 = load i64, i64* %75, align 8
  %79 = and i64 %78, 1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %101, label %81

81:                                               ; preds = %73
  %82 = and i64 %78, -4294967296
  %83 = add i64 %78, -1
  %84 = inttoptr i64 %83 to i32*
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = zext i32 %85 to i64
  %87 = or i64 %82, %86
  %88 = add i64 %87, 9
  %89 = inttoptr i64 %88 to i8*
  %90 = load atomic i8, i8* %89 monotonic, align 1
  %91 = and i8 %90, 2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %93, label %109

93:                                               ; preds = %81
  %94 = load atomic i32, i32* %84 monotonic, align 4
  %95 = zext i32 %94 to i64
  %96 = or i64 %82, %95
  %97 = add i64 %96, 7
  %98 = inttoptr i64 %97 to i16*
  %99 = load atomic i16, i16* %98 monotonic, align 2
  %100 = icmp ult i16 %99, 64
  br i1 %100, label %103, label %101

101:                                              ; preds = %93, %73
  %102 = tail call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* %75) #6
  br label %103

103:                                              ; preds = %101, %93
  %104 = phi i64* [ %102, %101 ], [ %75, %93 ]
  %105 = icmp eq i64* %104, null
  br i1 %105, label %106, label %109

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %108 = load i64, i64* %107, align 8
  br label %2398

109:                                              ; preds = %103, %81
  %110 = phi i1 [ true, %81 ], [ false, %103 ]
  %111 = phi i64* [ null, %81 ], [ %104, %103 ]
  %112 = tail call zeroext i1 @_ZN2v88internal11RegExpUtils18IsUnmodifiedRegExpEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"* %2, i64* %1) #6
  br i1 %112, label %113, label %1267

113:                                              ; preds = %109
  br i1 %110, label %114, label %115, !prof !2

114:                                              ; preds = %113
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.35, i64 0, i64 0)) #18
  unreachable

115:                                              ; preds = %113
  %116 = load i64, i64* %1, align 8
  %117 = and i64 %116, -4294967296
  %118 = add i64 %116, 11
  %119 = inttoptr i64 %118 to i32*
  %120 = load i32, i32* %119, align 4
  %121 = zext i32 %120 to i64
  %122 = or i64 %117, %121
  %123 = add i64 %122, 15
  %124 = inttoptr i64 %123 to i32*
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = and i32 %125, 16
  %129 = icmp ne i32 %128, 0
  %130 = tail call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %111, i8 zeroext 0) #6
  %131 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = and i64 %132, -4294967296
  %134 = add i64 %132, -1
  %135 = inttoptr i64 %134 to i32*
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = zext i32 %136 to i64
  %138 = or i64 %133, %137
  %139 = add i64 %138, 19
  %140 = inttoptr i64 %139 to i32*
  %141 = load i32, i32* %140, align 4
  %142 = zext i32 %141 to i64
  %143 = or i64 %133, %142
  %144 = add i64 %143, 631
  %145 = inttoptr i64 %144 to i32*
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = zext i32 %146 to i64
  %148 = or i64 %133, %147
  %149 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %150 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %149, align 8
  %151 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %150, null
  br i1 %151, label %154, label %152

152:                                              ; preds = %115
  %153 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %150, i64 %148) #6
  br label %166

154:                                              ; preds = %115
  %155 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %156 = load i64*, i64** %155, align 8
  %157 = load i64*, i64** %35, align 8
  %158 = icmp eq i64* %156, %157
  br i1 %158, label %159, label %161

159:                                              ; preds = %154
  %160 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %161

161:                                              ; preds = %159, %154
  %162 = phi i64* [ %160, %159 ], [ %156, %154 ]
  %163 = ptrtoint i64* %162 to i64
  %164 = add i64 %163, 8
  %165 = inttoptr i64 %164 to i64*
  store i64* %165, i64** %155, align 8
  store i64 %148, i64* %162, align 8
  br label %166

166:                                              ; preds = %161, %152
  %167 = phi i64* [ %153, %152 ], [ %162, %161 ]
  br i1 %127, label %168, label %430

168:                                              ; preds = %166
  br i1 %129, label %169, label %245

169:                                              ; preds = %168
  %170 = load i64, i64* %1, align 8
  %171 = and i64 %170, -4294967296
  %172 = add i64 %170, 23
  %173 = inttoptr i64 %172 to i32*
  %174 = load i32, i32* %173, align 4
  %175 = zext i32 %174 to i64
  %176 = or i64 %171, %175
  %177 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %149, align 8
  %178 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %177, null
  br i1 %178, label %182, label %179

179:                                              ; preds = %169
  %180 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %177, i64 %176) #6
  %181 = load i64, i64* %180, align 8
  br label %194

182:                                              ; preds = %169
  %183 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %184 = load i64*, i64** %183, align 8
  %185 = load i64*, i64** %35, align 8
  %186 = icmp eq i64* %184, %185
  br i1 %186, label %187, label %189

187:                                              ; preds = %182
  %188 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %189

189:                                              ; preds = %187, %182
  %190 = phi i64* [ %188, %187 ], [ %184, %182 ]
  %191 = ptrtoint i64* %190 to i64
  %192 = add i64 %191, 8
  %193 = inttoptr i64 %192 to i64*
  store i64* %193, i64** %183, align 8
  store i64 %176, i64* %190, align 8
  br label %194

194:                                              ; preds = %189, %179
  %195 = phi i64 [ %181, %179 ], [ %176, %189 ]
  %196 = phi i64* [ %180, %179 ], [ %190, %189 ]
  %197 = and i64 %195, 1
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %222

199:                                              ; preds = %194
  %200 = trunc i64 %195 to i32
  %201 = ashr i32 %200, 1
  %202 = icmp sgt i32 %201, 0
  %203 = select i1 %202, i32 %201, i32 0
  %204 = shl nuw nsw i32 %203, 1
  %205 = zext i32 %204 to i64
  %206 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %149, align 8
  %207 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %206, null
  br i1 %207, label %210, label %208

208:                                              ; preds = %199
  %209 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %206, i64 %205) #6
  br label %224

210:                                              ; preds = %199
  %211 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %212 = load i64*, i64** %211, align 8
  %213 = load i64*, i64** %35, align 8
  %214 = icmp eq i64* %212, %213
  br i1 %214, label %215, label %217

215:                                              ; preds = %210
  %216 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %217

217:                                              ; preds = %215, %210
  %218 = phi i64* [ %216, %215 ], [ %212, %210 ]
  %219 = ptrtoint i64* %218 to i64
  %220 = add i64 %219, 8
  %221 = inttoptr i64 %220 to i64*
  store i64* %221, i64** %211, align 8
  store i64 %205, i64* %218, align 8
  br label %224

222:                                              ; preds = %194
  %223 = tail call i64* @_ZN2v88internal6Object15ConvertToLengthEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* %196) #6
  br label %224

224:                                              ; preds = %222, %217, %208
  %225 = phi i64* [ %223, %222 ], [ %209, %208 ], [ %218, %217 ]
  %226 = icmp eq i64* %225, null
  br i1 %226, label %1261, label %227

227:                                              ; preds = %224
  %228 = load i64, i64* %225, align 8
  %229 = and i64 %228, 1
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %231, label %236

231:                                              ; preds = %227
  %232 = trunc i64 %228 to i32
  %233 = ashr i32 %232, 1
  %234 = icmp slt i32 %232, 2
  %235 = select i1 %234, i32 0, i32 %233
  br label %245

236:                                              ; preds = %227
  %237 = add i64 %228, 3
  %238 = inttoptr i64 %237 to double*
  %239 = load double, double* %238, align 1
  %240 = fcmp ult double %239, 1.000000e+00
  br i1 %240, label %245, label %241

241:                                              ; preds = %236
  %242 = fcmp olt double %239, 0x41EFFFFFFFE00000
  %243 = select i1 %242, double %239, double 0x41EFFFFFFFE00000
  %244 = fptoui double %243 to i32
  br label %245

245:                                              ; preds = %241, %236, %231, %168
  %246 = phi i32 [ 0, %168 ], [ %244, %241 ], [ 0, %236 ], [ %235, %231 ]
  %247 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 6
  %248 = load i64, i64* %247, align 8
  %249 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %149, align 8
  %250 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %249, null
  br i1 %250, label %253, label %251

251:                                              ; preds = %245
  %252 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %249, i64 %248) #6
  br label %265

253:                                              ; preds = %245
  %254 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %255 = load i64*, i64** %254, align 8
  %256 = load i64*, i64** %35, align 8
  %257 = icmp eq i64* %255, %256
  br i1 %257, label %258, label %260

258:                                              ; preds = %253
  %259 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %260

260:                                              ; preds = %258, %253
  %261 = phi i64* [ %259, %258 ], [ %255, %253 ]
  %262 = ptrtoint i64* %261 to i64
  %263 = add i64 %262, 8
  %264 = inttoptr i64 %263 to i64*
  store i64* %264, i64** %254, align 8
  store i64 %248, i64* %261, align 8
  br label %265

265:                                              ; preds = %260, %251
  %266 = phi i64* [ %252, %251 ], [ %261, %260 ]
  %267 = load i64, i64* %77, align 8
  %268 = add i64 %267, 7
  %269 = inttoptr i64 %268 to i32*
  %270 = load i32, i32* %269, align 4
  %271 = icmp ugt i32 %246, %270
  br i1 %271, label %275, label %272

272:                                              ; preds = %265
  %273 = tail call i64* @_ZN2v88internal6RegExp4ExecEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiNS4_INS0_15RegExpMatchInfoEEENS1_10ExecQuirksE(%"class.v8::internal::Isolate"* %2, i64* %1, i64* %77, i32 %246, i64* %167, i32 0) #6
  %274 = icmp eq i64* %273, null
  br i1 %274, label %1261, label %275

275:                                              ; preds = %272, %265
  %276 = phi i64* [ %266, %265 ], [ %273, %272 ]
  %277 = load i64, i64* %276, align 8
  %278 = load i64, i64* %247, align 8
  %279 = trunc i64 %277 to i32
  %280 = trunc i64 %278 to i32
  %281 = icmp eq i32 %279, %280
  br i1 %281, label %282, label %289

282:                                              ; preds = %275
  br i1 %129, label %283, label %287

283:                                              ; preds = %282
  %284 = load i64, i64* %1, align 8
  %285 = add i64 %284, 23
  %286 = inttoptr i64 %285 to i32*
  store atomic volatile i32 0, i32* %286 monotonic, align 4
  br label %287

287:                                              ; preds = %283, %282
  %288 = ptrtoint i64* %77 to i64
  br label %1258

289:                                              ; preds = %275
  %290 = add i64 %277, 19
  %291 = inttoptr i64 %290 to i32*
  %292 = load atomic i32, i32* %291 monotonic, align 4
  %293 = ashr i32 %292, 1
  %294 = add i64 %277, 23
  %295 = inttoptr i64 %294 to i32*
  %296 = load atomic i32, i32* %295 monotonic, align 4
  %297 = ashr i32 %296, 1
  br i1 %129, label %298, label %303

298:                                              ; preds = %289
  %299 = load i64, i64* %1, align 8
  %300 = and i32 %296, -2
  %301 = add i64 %299, 23
  %302 = inttoptr i64 %301 to i32*
  store atomic volatile i32 %300, i32* %302 monotonic, align 4
  br label %303

303:                                              ; preds = %298, %289
  %304 = bitcast %"class.v8::internal::IncrementalStringBuilder"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %304) #6
  call void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %17, %"class.v8::internal::Isolate"* %2) #6
  %305 = load i64, i64* %77, align 8
  %306 = add i64 %305, 7
  %307 = inttoptr i64 %306 to i32*
  %308 = load i32, i32* %307, align 4
  %309 = icmp eq i32 %308, %293
  br i1 %309, label %312, label %310

310:                                              ; preds = %303
  %311 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %76, i64* %77, i32 0, i32 %293) #6
  br label %312

312:                                              ; preds = %310, %303
  %313 = phi i64* [ %311, %310 ], [ %77, %303 ]
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %17, i64* %313) #6
  %314 = load i64, i64* %130, align 8
  %315 = add i64 %314, 7
  %316 = inttoptr i64 %315 to i32*
  %317 = load i32, i32* %316, align 4
  %318 = icmp sgt i32 %317, 0
  br i1 %318, label %319, label %416

319:                                              ; preds = %312
  %320 = bitcast %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %320) #6
  %321 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %18, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2v88internal12_GLOBAL__N_120MatchInfoBackedMatchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %321, align 8
  %322 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %18, i64 0, i32 1
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %322, align 8
  %323 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %18, i64 0, i32 2, i32 0, i32 0
  %324 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %18, i64 0, i32 3, i32 0, i32 0
  store i64* %276, i64** %324, align 8
  %325 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %18, i64 0, i32 5, i32 0, i32 0
  store i64* null, i64** %325, align 8
  %326 = call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %77, i8 zeroext 0) #6
  store i64* %326, i64** %323, align 8
  %327 = load i64, i64* %1, align 8
  %328 = and i64 %327, -4294967296
  %329 = add i64 %327, 11
  %330 = inttoptr i64 %329 to i32*
  %331 = load i32, i32* %330, align 4
  %332 = zext i32 %331 to i64
  %333 = or i64 %328, %332
  %334 = and i64 %332, 1
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %359, label %336

336:                                              ; preds = %319
  %337 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %338 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %337, null
  br i1 %338, label %345, label %339

339:                                              ; preds = %336
  %340 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %337, i64 0, i32 0, i32 1
  %341 = load i8, i8* %340, align 8, !range !5
  %342 = icmp eq i8 %341, 0
  br i1 %342, label %345, label %343

343:                                              ; preds = %339
  %344 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %337, i64 0, i32 1, i64 0
  br label %353

345:                                              ; preds = %339, %336
  %346 = and i64 %333, -262144
  %347 = or i64 %346, 16
  %348 = inttoptr i64 %347 to i64*
  %349 = load i64, i64* %348, align 16
  %350 = add i64 %349, -41416
  %351 = inttoptr i64 %350 to %"class.v8::internal::Isolate"*
  %352 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %351, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %353

353:                                              ; preds = %345, %343
  %354 = phi i64* [ %352, %345 ], [ %344, %343 ]
  %355 = getelementptr inbounds i64, i64* %354, i64 4
  %356 = load i64, i64* %355, align 8
  %357 = trunc i64 %356 to i32
  %358 = icmp eq i32 %331, %357
  br i1 %358, label %408, label %359

359:                                              ; preds = %353, %319
  %360 = add i64 %333, 7
  %361 = inttoptr i64 %360 to i32*
  %362 = load atomic i32, i32* %361 monotonic, align 4
  %363 = ashr i32 %362, 1
  %364 = or i32 %363, 1
  %365 = icmp eq i32 %364, 3
  br i1 %365, label %366, label %408

366:                                              ; preds = %359
  %367 = add i64 %333, 43
  %368 = inttoptr i64 %367 to i32*
  %369 = load atomic i32, i32* %368 monotonic, align 4
  %370 = zext i32 %369 to i64
  %371 = or i64 %328, %370
  %372 = and i64 %370, 1
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %376

374:                                              ; preds = %366
  %375 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %18, i64 0, i32 4
  store i8 0, i8* %375, align 8
  br label %410

376:                                              ; preds = %366
  %377 = add i64 %371, -1
  %378 = inttoptr i64 %377 to i32*
  %379 = load atomic i32, i32* %378 monotonic, align 4
  %380 = zext i32 %379 to i64
  %381 = or i64 %328, %380
  %382 = add i64 %381, 7
  %383 = inttoptr i64 %382 to i16*
  %384 = load atomic i16, i16* %383 monotonic, align 2
  %385 = add i16 %384, -119
  %386 = icmp ult i16 %385, 13
  %387 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %18, i64 0, i32 4
  %388 = zext i1 %386 to i8
  store i8 %388, i8* %387, align 8
  br i1 %386, label %389, label %410

389:                                              ; preds = %376
  %390 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %149, align 8
  %391 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %390, null
  br i1 %391, label %394, label %392

392:                                              ; preds = %389
  %393 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %390, i64 %371) #6
  br label %406

394:                                              ; preds = %389
  %395 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %396 = load i64*, i64** %395, align 8
  %397 = load i64*, i64** %35, align 8
  %398 = icmp eq i64* %396, %397
  br i1 %398, label %399, label %401

399:                                              ; preds = %394
  %400 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %401

401:                                              ; preds = %399, %394
  %402 = phi i64* [ %400, %399 ], [ %396, %394 ]
  %403 = ptrtoint i64* %402 to i64
  %404 = add i64 %403, 8
  %405 = inttoptr i64 %404 to i64*
  store i64* %405, i64** %395, align 8
  store i64 %371, i64* %402, align 8
  br label %406

406:                                              ; preds = %401, %392
  %407 = phi i64* [ %393, %392 ], [ %402, %401 ]
  store i64* %407, i64** %325, align 8
  br label %410

408:                                              ; preds = %359, %353
  %409 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %18, i64 0, i32 4
  store i8 0, i8* %409, align 8
  br label %410

410:                                              ; preds = %408, %406, %376, %374
  %411 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %18, i64 0, i32 0
  %412 = call i64* @_ZN2v88internal6String15GetSubstitutionEPNS0_7IsolateEPNS1_5MatchENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"* %2, %"class.v8::internal::String::Match"* nonnull %411, i64* %130, i32 0) #6
  %413 = icmp eq i64* %412, null
  br i1 %413, label %414, label %415

414:                                              ; preds = %410
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %320) #6
  br label %428

415:                                              ; preds = %410
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %17, i64* nonnull %412) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %320) #6
  br label %416

416:                                              ; preds = %415, %312
  %417 = icmp eq i32 %297, 0
  br i1 %417, label %424, label %418

418:                                              ; preds = %416
  %419 = load i64, i64* %77, align 8
  %420 = add i64 %419, 7
  %421 = inttoptr i64 %420 to i32*
  %422 = load i32, i32* %421, align 4
  %423 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %76, i64* %77, i32 %297, i32 %422) #6
  br label %424

424:                                              ; preds = %418, %416
  %425 = phi i64* [ %423, %418 ], [ %77, %416 ]
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %17, i64* %425) #6
  %426 = call i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %17) #6
  %427 = ptrtoint i64* %426 to i64
  br label %428

428:                                              ; preds = %424, %414
  %429 = phi i64 [ %427, %424 ], [ 0, %414 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %304) #6
  br label %1258

430:                                              ; preds = %166
  %431 = tail call i64* @_ZN2v88internal11RegExpUtils12SetLastIndexEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEEm(%"class.v8::internal::Isolate"* %2, i64* %1, i64 0) #6
  %432 = icmp eq i64* %431, null
  br i1 %432, label %1261, label %433

433:                                              ; preds = %430
  %434 = load i8, i8* @_ZN2v88internal19FLAG_regexp_tier_upE, align 1, !range !5
  %435 = icmp eq i8 %434, 0
  br i1 %435, label %484, label %436

436:                                              ; preds = %433
  %437 = load i64, i64* %1, align 8
  %438 = and i64 %437, -4294967296
  %439 = add i64 %437, 11
  %440 = inttoptr i64 %439 to i32*
  %441 = load i32, i32* %440, align 4
  %442 = zext i32 %441 to i64
  %443 = or i64 %438, %442
  %444 = and i64 %442, 1
  %445 = icmp eq i64 %444, 0
  br i1 %445, label %469, label %446

446:                                              ; preds = %436
  %447 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %448 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %447, null
  br i1 %448, label %455, label %449

449:                                              ; preds = %446
  %450 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %447, i64 0, i32 0, i32 1
  %451 = load i8, i8* %450, align 8, !range !5
  %452 = icmp eq i8 %451, 0
  br i1 %452, label %455, label %453

453:                                              ; preds = %449
  %454 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %447, i64 0, i32 1, i64 0
  br label %463

455:                                              ; preds = %449, %446
  %456 = and i64 %443, -262144
  %457 = or i64 %456, 16
  %458 = inttoptr i64 %457 to i64*
  %459 = load i64, i64* %458, align 16
  %460 = add i64 %459, -41416
  %461 = inttoptr i64 %460 to %"class.v8::internal::Isolate"*
  %462 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %461, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %463

463:                                              ; preds = %455, %453
  %464 = phi i64* [ %462, %455 ], [ %454, %453 ]
  %465 = getelementptr inbounds i64, i64* %464, i64 4
  %466 = load i64, i64* %465, align 8
  %467 = trunc i64 %466 to i32
  %468 = icmp eq i32 %441, %467
  br i1 %468, label %484, label %469

469:                                              ; preds = %463, %436
  %470 = add i64 %443, 7
  %471 = inttoptr i64 %470 to i32*
  %472 = load atomic i32, i32* %471 monotonic, align 4
  %473 = and i32 %472, -2
  %474 = icmp eq i32 %473, 4
  br i1 %474, label %475, label %484

475:                                              ; preds = %469
  %476 = bitcast %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %476) #6
  %477 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %437, i64* %477, align 8
  %478 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %19, i64 0, i32 0
  call void @_ZN2v88internal8JSRegExp21MarkTierUpForNextExecEv(%"class.v8::internal::JSRegExp"* nonnull %478) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %476) #6
  %479 = load i8, i8* @_ZN2v88internal25FLAG_trace_regexp_tier_upE, align 1, !range !5
  %480 = icmp eq i8 %479, 0
  br i1 %480, label %484, label %481

481:                                              ; preds = %475
  %482 = bitcast i64* %1 to i8**
  %483 = load i8*, i8** %482, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.36, i64 0, i64 0), i8* %483) #6
  br label %484

484:                                              ; preds = %481, %475, %469, %463, %433
  %485 = load i64, i64* %130, align 8
  %486 = add i64 %485, 7
  %487 = inttoptr i64 %486 to i32*
  %488 = load i32, i32* %487, align 4
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %490, label %932

490:                                              ; preds = %484
  %491 = load i64, i64* %77, align 8
  %492 = and i64 %491, -4294967296
  %493 = add i64 %491, -1
  %494 = inttoptr i64 %493 to i32*
  %495 = load atomic i32, i32* %494 monotonic, align 4
  %496 = zext i32 %495 to i64
  %497 = or i64 %492, %496
  %498 = add i64 %497, 7
  %499 = inttoptr i64 %498 to i16*
  %500 = load atomic i16, i16* %499 monotonic, align 2
  %501 = and i16 %500, 8
  %502 = icmp eq i16 %501, 0
  %503 = load i64, i64* %1, align 8
  %504 = and i64 %503, -4294967296
  %505 = add i64 %503, 11
  %506 = inttoptr i64 %505 to i32*
  %507 = load i32, i32* %506, align 4
  %508 = zext i32 %507 to i64
  %509 = or i64 %504, %508
  %510 = and i64 %508, 1
  %511 = icmp eq i64 %510, 0
  br i1 %502, label %721, label %512

512:                                              ; preds = %490
  br i1 %511, label %536, label %513

513:                                              ; preds = %512
  %514 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %515 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %514, null
  br i1 %515, label %522, label %516

516:                                              ; preds = %513
  %517 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %514, i64 0, i32 0, i32 1
  %518 = load i8, i8* %517, align 8, !range !5
  %519 = icmp eq i8 %518, 0
  br i1 %519, label %522, label %520

520:                                              ; preds = %516
  %521 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %514, i64 0, i32 1, i64 0
  br label %530

522:                                              ; preds = %516, %513
  %523 = and i64 %509, -262144
  %524 = or i64 %523, 16
  %525 = inttoptr i64 %524 to i64*
  %526 = load i64, i64* %525, align 16
  %527 = add i64 %526, -41416
  %528 = inttoptr i64 %527 to %"class.v8::internal::Isolate"*
  %529 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %528, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %530

530:                                              ; preds = %522, %520
  %531 = phi i64* [ %529, %522 ], [ %521, %520 ]
  %532 = getelementptr inbounds i64, i64* %531, i64 4
  %533 = load i64, i64* %532, align 8
  %534 = trunc i64 %533 to i32
  %535 = icmp eq i32 %507, %534
  br i1 %535, label %556, label %536

536:                                              ; preds = %530, %512
  %537 = add i64 %509, 7
  %538 = inttoptr i64 %537 to i32*
  %539 = load atomic i32, i32* %538 monotonic, align 4
  %540 = and i32 %539, -2
  %541 = icmp eq i32 %540, 2
  br i1 %541, label %542, label %556

542:                                              ; preds = %536
  %543 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 9
  %544 = load atomic i32, i32* %494 monotonic, align 4
  %545 = zext i32 %544 to i64
  %546 = or i64 %492, %545
  %547 = add i64 %546, 7
  %548 = inttoptr i64 %547 to i16*
  %549 = load atomic i16, i16* %548 monotonic, align 2
  %550 = and i16 %549, 8
  %551 = icmp eq i16 %550, 0
  br i1 %551, label %554, label %552

552:                                              ; preds = %542
  %553 = call fastcc i64 @_ZN2v88internalL39StringReplaceGlobalAtomRegExpWithStringINS0_16SeqOneByteStringEEENS0_6ObjectEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS6_INS0_8JSRegExpEEES8_NS6_INS0_15RegExpMatchInfoEEE(%"class.v8::internal::Isolate"* %2, i64* %77, i64* %1, i64* %543, i64* %167) #6
  br label %702

554:                                              ; preds = %542
  %555 = call fastcc i64 @_ZN2v88internalL39StringReplaceGlobalAtomRegExpWithStringINS0_16SeqTwoByteStringEEENS0_6ObjectEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS6_INS0_8JSRegExpEEES8_NS6_INS0_15RegExpMatchInfoEEE(%"class.v8::internal::Isolate"* %2, i64* %77, i64* %1, i64* %543, i64* %167) #6
  br label %702

556:                                              ; preds = %536, %530
  %557 = bitcast %"class.v8::internal::RegExpGlobalCache"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %557) #6
  call void @_ZN2v88internal17RegExpGlobalCacheC1ENS0_6HandleINS0_8JSRegExpEEENS2_INS0_6StringEEEPNS0_7IsolateE(%"class.v8::internal::RegExpGlobalCache"* nonnull %12, i64* %1, i64* %77, %"class.v8::internal::Isolate"* %2) #6
  %558 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %12, i64 0, i32 0
  %559 = load i32, i32* %558, align 8
  %560 = icmp slt i32 %559, 0
  br i1 %560, label %561, label %563

561:                                              ; preds = %556
  %562 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %697

563:                                              ; preds = %556
  %564 = call i32* @_ZN2v88internal17RegExpGlobalCache9FetchNextEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %12) #6
  %565 = icmp eq i32* %564, null
  br i1 %565, label %566, label %571

566:                                              ; preds = %563
  %567 = load i32, i32* %558, align 8
  %568 = icmp slt i32 %567, 0
  %569 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %570 = select i1 %568, i64* %569, i64* %77
  br label %697

571:                                              ; preds = %563
  %572 = load i32, i32* %564, align 4
  %573 = getelementptr inbounds i32, i32* %564, i64 1
  %574 = load i32, i32* %573, align 4
  %575 = load i64, i64* %1, align 8
  %576 = and i64 %575, -4294967296
  %577 = add i64 %575, 11
  %578 = inttoptr i64 %577 to i32*
  %579 = load i32, i32* %578, align 4
  %580 = zext i32 %579 to i64
  %581 = or i64 %576, %580
  %582 = and i64 %580, 1
  %583 = icmp eq i64 %582, 0
  br i1 %583, label %607, label %584

584:                                              ; preds = %571
  %585 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %586 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %585, null
  br i1 %586, label %593, label %587

587:                                              ; preds = %584
  %588 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %585, i64 0, i32 0, i32 1
  %589 = load i8, i8* %588, align 8, !range !5
  %590 = icmp eq i8 %589, 0
  br i1 %590, label %593, label %591

591:                                              ; preds = %587
  %592 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %585, i64 0, i32 1, i64 0
  br label %601

593:                                              ; preds = %587, %584
  %594 = and i64 %581, -262144
  %595 = or i64 %594, 16
  %596 = inttoptr i64 %595 to i64*
  %597 = load i64, i64* %596, align 16
  %598 = add i64 %597, -41416
  %599 = inttoptr i64 %598 to %"class.v8::internal::Isolate"*
  %600 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %599, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %601

601:                                              ; preds = %593, %591
  %602 = phi i64* [ %600, %593 ], [ %592, %591 ]
  %603 = getelementptr inbounds i64, i64* %602, i64 4
  %604 = load i64, i64* %603, align 8
  %605 = trunc i64 %604 to i32
  %606 = icmp eq i32 %579, %605
  br i1 %606, label %617, label %607

607:                                              ; preds = %601, %571
  %608 = add i64 %581, 7
  %609 = inttoptr i64 %608 to i32*
  %610 = load atomic i32, i32* %609 monotonic, align 4
  %611 = ashr i32 %610, 1
  switch i32 %611, label %617 [
    i32 1, label %618
    i32 3, label %612
    i32 2, label %612
  ]

612:                                              ; preds = %607, %607
  %613 = add i64 %581, 39
  %614 = inttoptr i64 %613 to i32*
  %615 = load atomic i32, i32* %614 monotonic, align 4
  %616 = ashr i32 %615, 1
  br label %618

617:                                              ; preds = %607, %601
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #18
  unreachable

618:                                              ; preds = %612, %607
  %619 = phi i32 [ %616, %612 ], [ 0, %607 ]
  %620 = load i64, i64* %77, align 8
  %621 = add i64 %620, 7
  %622 = inttoptr i64 %621 to i32*
  %623 = load i32, i32* %622, align 4
  %624 = sub i32 %572, %574
  %625 = add i32 %623, %624
  %626 = icmp eq i32 %625, 0
  br i1 %626, label %627, label %629

627:                                              ; preds = %618
  %628 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 9
  br label %697

629:                                              ; preds = %618
  %630 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %631 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewRawOneByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %630, i32 %625, i8 zeroext 0) #6
  %632 = icmp eq i64* %631, null
  br i1 %632, label %633, label %634, !prof !2

633:                                              ; preds = %629
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.37, i64 0, i64 0)) #18
  unreachable

634:                                              ; preds = %629, %651
  %635 = phi i32 [ %652, %651 ], [ 0, %629 ]
  %636 = phi i32 [ %640, %651 ], [ 0, %629 ]
  %637 = phi i32* [ %653, %651 ], [ %564, %629 ]
  %638 = load i32, i32* %637, align 4
  %639 = getelementptr inbounds i32, i32* %637, i64 1
  %640 = load i32, i32* %639, align 4
  %641 = icmp sgt i32 %638, %636
  br i1 %641, label %642, label %651

642:                                              ; preds = %634
  %643 = load i64, i64* %77, align 8
  %644 = load i64, i64* %631, align 8
  %645 = add i64 %644, 11
  %646 = inttoptr i64 %645 to i8*
  %647 = sext i32 %635 to i64
  %648 = getelementptr inbounds i8, i8* %646, i64 %647
  call void @_ZN2v88internal6String11WriteToFlatIhEEvS1_PT_ii(i64 %643, i8* %648, i32 %636, i32 %638) #6
  %649 = sub i32 %635, %636
  %650 = add i32 %649, %638
  br label %651

651:                                              ; preds = %642, %634
  %652 = phi i32 [ %650, %642 ], [ %635, %634 ]
  %653 = call i32* @_ZN2v88internal17RegExpGlobalCache9FetchNextEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %12) #6
  %654 = icmp eq i32* %653, null
  br i1 %654, label %655, label %634

655:                                              ; preds = %651
  %656 = load i32, i32* %558, align 8
  %657 = icmp slt i32 %656, 0
  br i1 %657, label %658, label %660

658:                                              ; preds = %655
  %659 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %697

660:                                              ; preds = %655
  %661 = call i32* @_ZN2v88internal17RegExpGlobalCache19LastSuccessfulMatchEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %12) #6
  %662 = call i64* @_ZN2v88internal6RegExp16SetLastMatchInfoEPNS0_7IsolateENS0_6HandleINS0_15RegExpMatchInfoEEENS4_INS0_6StringEEEiPi(%"class.v8::internal::Isolate"* %2, i64* %167, i64* %77, i32 %619, i32* %661) #6
  %663 = icmp sgt i32 %623, %640
  br i1 %663, label %664, label %673

664:                                              ; preds = %660
  %665 = load i64, i64* %77, align 8
  %666 = load i64, i64* %631, align 8
  %667 = add i64 %666, 11
  %668 = inttoptr i64 %667 to i8*
  %669 = sext i32 %652 to i64
  %670 = getelementptr inbounds i8, i8* %668, i64 %669
  call void @_ZN2v88internal6String11WriteToFlatIhEEvS1_PT_ii(i64 %665, i8* %670, i32 %640, i32 %623) #6
  %671 = sub i32 %623, %640
  %672 = add nsw i32 %671, %652
  br label %673

673:                                              ; preds = %664, %660
  %674 = phi i32 [ %672, %664 ], [ %652, %660 ]
  %675 = icmp eq i32 %674, 0
  br i1 %675, label %676, label %678

676:                                              ; preds = %673
  %677 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 9
  br label %697

678:                                              ; preds = %673
  %679 = add i32 %674, 15
  %680 = and i32 %679, -4
  %681 = add i32 %625, 15
  %682 = and i32 %681, -4
  %683 = sub nsw i32 %682, %680
  %684 = load i64, i64* %631, align 8
  %685 = add i64 %684, 7
  %686 = inttoptr i64 %685 to i32*
  store i32 %674, i32* %686, align 4
  %687 = icmp eq i32 %683, 0
  %688 = load i64, i64* %631, align 8
  br i1 %687, label %700, label %689

689:                                              ; preds = %678
  %690 = call zeroext i1 @_ZN2v88internal4Heap13IsLargeObjectENS0_10HeapObjectE(i64 %688) #6
  br i1 %690, label %697, label %691

691:                                              ; preds = %689
  %692 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 2
  %693 = sext i32 %680 to i64
  %694 = add nsw i64 %693, -1
  %695 = add i64 %694, %688
  %696 = call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %692, i64 %695, i32 %683, i32 1) #6
  br label %697

697:                                              ; preds = %566, %689, %691, %561, %627, %658, %676
  %698 = phi i64* [ %677, %676 ], [ %659, %658 ], [ %628, %627 ], [ %562, %561 ], [ %631, %691 ], [ %631, %689 ], [ %570, %566 ]
  %699 = load i64, i64* %698, align 8
  br label %700

700:                                              ; preds = %697, %678
  %701 = phi i64 [ %688, %678 ], [ %699, %697 ]
  call void @_ZN2v88internal17RegExpGlobalCacheD1Ev(%"class.v8::internal::RegExpGlobalCache"* nonnull %12) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %557) #6
  br label %702

702:                                              ; preds = %700, %554, %552
  %703 = phi i64 [ %701, %700 ], [ %553, %552 ], [ %555, %554 ]
  %704 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %149, align 8
  %705 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %704, null
  br i1 %705, label %709, label %706

706:                                              ; preds = %702
  %707 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %704, i64 %703) #6
  %708 = ptrtoint i64* %707 to i64
  br label %1258

709:                                              ; preds = %702
  %710 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %711 = load i64*, i64** %710, align 8
  %712 = load i64*, i64** %35, align 8
  %713 = icmp eq i64* %711, %712
  br i1 %713, label %714, label %716

714:                                              ; preds = %709
  %715 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %716

716:                                              ; preds = %714, %709
  %717 = phi i64* [ %715, %714 ], [ %711, %709 ]
  %718 = ptrtoint i64* %717 to i64
  %719 = add i64 %718, 8
  %720 = inttoptr i64 %719 to i64*
  store i64* %720, i64** %710, align 8
  store i64 %703, i64* %717, align 8
  br label %1258

721:                                              ; preds = %490
  br i1 %511, label %745, label %722

722:                                              ; preds = %721
  %723 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %724 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %723, null
  br i1 %724, label %731, label %725

725:                                              ; preds = %722
  %726 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %723, i64 0, i32 0, i32 1
  %727 = load i8, i8* %726, align 8, !range !5
  %728 = icmp eq i8 %727, 0
  br i1 %728, label %731, label %729

729:                                              ; preds = %725
  %730 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %723, i64 0, i32 1, i64 0
  br label %739

731:                                              ; preds = %725, %722
  %732 = and i64 %509, -262144
  %733 = or i64 %732, 16
  %734 = inttoptr i64 %733 to i64*
  %735 = load i64, i64* %734, align 16
  %736 = add i64 %735, -41416
  %737 = inttoptr i64 %736 to %"class.v8::internal::Isolate"*
  %738 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %737, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %739

739:                                              ; preds = %731, %729
  %740 = phi i64* [ %738, %731 ], [ %730, %729 ]
  %741 = getelementptr inbounds i64, i64* %740, i64 4
  %742 = load i64, i64* %741, align 8
  %743 = trunc i64 %742 to i32
  %744 = icmp eq i32 %507, %743
  br i1 %744, label %765, label %745

745:                                              ; preds = %739, %721
  %746 = add i64 %509, 7
  %747 = inttoptr i64 %746 to i32*
  %748 = load atomic i32, i32* %747 monotonic, align 4
  %749 = and i32 %748, -2
  %750 = icmp eq i32 %749, 2
  br i1 %750, label %751, label %765

751:                                              ; preds = %745
  %752 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 9
  %753 = load atomic i32, i32* %494 monotonic, align 4
  %754 = zext i32 %753 to i64
  %755 = or i64 %492, %754
  %756 = add i64 %755, 7
  %757 = inttoptr i64 %756 to i16*
  %758 = load atomic i16, i16* %757 monotonic, align 2
  %759 = and i16 %758, 8
  %760 = icmp eq i16 %759, 0
  br i1 %760, label %763, label %761

761:                                              ; preds = %751
  %762 = call fastcc i64 @_ZN2v88internalL39StringReplaceGlobalAtomRegExpWithStringINS0_16SeqOneByteStringEEENS0_6ObjectEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS6_INS0_8JSRegExpEEES8_NS6_INS0_15RegExpMatchInfoEEE(%"class.v8::internal::Isolate"* %2, i64* %77, i64* %1, i64* %752, i64* %167) #6
  br label %913

763:                                              ; preds = %751
  %764 = call fastcc i64 @_ZN2v88internalL39StringReplaceGlobalAtomRegExpWithStringINS0_16SeqTwoByteStringEEENS0_6ObjectEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS6_INS0_8JSRegExpEEES8_NS6_INS0_15RegExpMatchInfoEEE(%"class.v8::internal::Isolate"* %2, i64* %77, i64* %1, i64* %752, i64* %167) #6
  br label %913

765:                                              ; preds = %745, %739
  %766 = bitcast %"class.v8::internal::RegExpGlobalCache"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %766) #6
  call void @_ZN2v88internal17RegExpGlobalCacheC1ENS0_6HandleINS0_8JSRegExpEEENS2_INS0_6StringEEEPNS0_7IsolateE(%"class.v8::internal::RegExpGlobalCache"* nonnull %13, i64* %1, i64* %77, %"class.v8::internal::Isolate"* %2) #6
  %767 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %13, i64 0, i32 0
  %768 = load i32, i32* %767, align 8
  %769 = icmp slt i32 %768, 0
  br i1 %769, label %770, label %772

770:                                              ; preds = %765
  %771 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %908

772:                                              ; preds = %765
  %773 = call i32* @_ZN2v88internal17RegExpGlobalCache9FetchNextEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %13) #6
  %774 = icmp eq i32* %773, null
  br i1 %774, label %775, label %780

775:                                              ; preds = %772
  %776 = load i32, i32* %767, align 8
  %777 = icmp slt i32 %776, 0
  %778 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %779 = select i1 %777, i64* %778, i64* %77
  br label %908

780:                                              ; preds = %772
  %781 = load i32, i32* %773, align 4
  %782 = getelementptr inbounds i32, i32* %773, i64 1
  %783 = load i32, i32* %782, align 4
  %784 = load i64, i64* %1, align 8
  %785 = and i64 %784, -4294967296
  %786 = add i64 %784, 11
  %787 = inttoptr i64 %786 to i32*
  %788 = load i32, i32* %787, align 4
  %789 = zext i32 %788 to i64
  %790 = or i64 %785, %789
  %791 = and i64 %789, 1
  %792 = icmp eq i64 %791, 0
  br i1 %792, label %816, label %793

793:                                              ; preds = %780
  %794 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %795 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %794, null
  br i1 %795, label %802, label %796

796:                                              ; preds = %793
  %797 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %794, i64 0, i32 0, i32 1
  %798 = load i8, i8* %797, align 8, !range !5
  %799 = icmp eq i8 %798, 0
  br i1 %799, label %802, label %800

800:                                              ; preds = %796
  %801 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %794, i64 0, i32 1, i64 0
  br label %810

802:                                              ; preds = %796, %793
  %803 = and i64 %790, -262144
  %804 = or i64 %803, 16
  %805 = inttoptr i64 %804 to i64*
  %806 = load i64, i64* %805, align 16
  %807 = add i64 %806, -41416
  %808 = inttoptr i64 %807 to %"class.v8::internal::Isolate"*
  %809 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %808, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %810

810:                                              ; preds = %802, %800
  %811 = phi i64* [ %809, %802 ], [ %801, %800 ]
  %812 = getelementptr inbounds i64, i64* %811, i64 4
  %813 = load i64, i64* %812, align 8
  %814 = trunc i64 %813 to i32
  %815 = icmp eq i32 %788, %814
  br i1 %815, label %826, label %816

816:                                              ; preds = %810, %780
  %817 = add i64 %790, 7
  %818 = inttoptr i64 %817 to i32*
  %819 = load atomic i32, i32* %818 monotonic, align 4
  %820 = ashr i32 %819, 1
  switch i32 %820, label %826 [
    i32 1, label %827
    i32 3, label %821
    i32 2, label %821
  ]

821:                                              ; preds = %816, %816
  %822 = add i64 %790, 39
  %823 = inttoptr i64 %822 to i32*
  %824 = load atomic i32, i32* %823 monotonic, align 4
  %825 = ashr i32 %824, 1
  br label %827

826:                                              ; preds = %816, %810
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #18
  unreachable

827:                                              ; preds = %821, %816
  %828 = phi i32 [ %825, %821 ], [ 0, %816 ]
  %829 = load i64, i64* %77, align 8
  %830 = add i64 %829, 7
  %831 = inttoptr i64 %830 to i32*
  %832 = load i32, i32* %831, align 4
  %833 = sub i32 %781, %783
  %834 = add i32 %832, %833
  %835 = icmp eq i32 %834, 0
  br i1 %835, label %836, label %838

836:                                              ; preds = %827
  %837 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 9
  br label %908

838:                                              ; preds = %827
  %839 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %840 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewRawTwoByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %839, i32 %834, i8 zeroext 0) #6
  %841 = icmp eq i64* %840, null
  br i1 %841, label %842, label %843, !prof !2

842:                                              ; preds = %838
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.37, i64 0, i64 0)) #18
  unreachable

843:                                              ; preds = %838, %860
  %844 = phi i32 [ %861, %860 ], [ 0, %838 ]
  %845 = phi i32 [ %849, %860 ], [ 0, %838 ]
  %846 = phi i32* [ %862, %860 ], [ %773, %838 ]
  %847 = load i32, i32* %846, align 4
  %848 = getelementptr inbounds i32, i32* %846, i64 1
  %849 = load i32, i32* %848, align 4
  %850 = icmp sgt i32 %847, %845
  br i1 %850, label %851, label %860

851:                                              ; preds = %843
  %852 = load i64, i64* %77, align 8
  %853 = load i64, i64* %840, align 8
  %854 = add i64 %853, 11
  %855 = inttoptr i64 %854 to i16*
  %856 = sext i32 %844 to i64
  %857 = getelementptr inbounds i16, i16* %855, i64 %856
  call void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_ii(i64 %852, i16* %857, i32 %845, i32 %847) #6
  %858 = sub i32 %844, %845
  %859 = add i32 %858, %847
  br label %860

860:                                              ; preds = %851, %843
  %861 = phi i32 [ %859, %851 ], [ %844, %843 ]
  %862 = call i32* @_ZN2v88internal17RegExpGlobalCache9FetchNextEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %13) #6
  %863 = icmp eq i32* %862, null
  br i1 %863, label %864, label %843

864:                                              ; preds = %860
  %865 = load i32, i32* %767, align 8
  %866 = icmp slt i32 %865, 0
  br i1 %866, label %867, label %869

867:                                              ; preds = %864
  %868 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %908

869:                                              ; preds = %864
  %870 = call i32* @_ZN2v88internal17RegExpGlobalCache19LastSuccessfulMatchEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %13) #6
  %871 = call i64* @_ZN2v88internal6RegExp16SetLastMatchInfoEPNS0_7IsolateENS0_6HandleINS0_15RegExpMatchInfoEEENS4_INS0_6StringEEEiPi(%"class.v8::internal::Isolate"* %2, i64* %167, i64* %77, i32 %828, i32* %870) #6
  %872 = icmp sgt i32 %832, %849
  br i1 %872, label %873, label %882

873:                                              ; preds = %869
  %874 = load i64, i64* %77, align 8
  %875 = load i64, i64* %840, align 8
  %876 = add i64 %875, 11
  %877 = inttoptr i64 %876 to i16*
  %878 = sext i32 %861 to i64
  %879 = getelementptr inbounds i16, i16* %877, i64 %878
  call void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_ii(i64 %874, i16* %879, i32 %849, i32 %832) #6
  %880 = sub i32 %832, %849
  %881 = add nsw i32 %880, %861
  br label %882

882:                                              ; preds = %873, %869
  %883 = phi i32 [ %881, %873 ], [ %861, %869 ]
  %884 = icmp eq i32 %883, 0
  br i1 %884, label %885, label %887

885:                                              ; preds = %882
  %886 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 9
  br label %908

887:                                              ; preds = %882
  %888 = shl i32 %883, 1
  %889 = add i32 %888, 15
  %890 = and i32 %889, -4
  %891 = shl i32 %834, 1
  %892 = add i32 %891, 15
  %893 = and i32 %892, -4
  %894 = sub nsw i32 %893, %890
  %895 = load i64, i64* %840, align 8
  %896 = add i64 %895, 7
  %897 = inttoptr i64 %896 to i32*
  store i32 %883, i32* %897, align 4
  %898 = icmp eq i32 %894, 0
  %899 = load i64, i64* %840, align 8
  br i1 %898, label %911, label %900

900:                                              ; preds = %887
  %901 = call zeroext i1 @_ZN2v88internal4Heap13IsLargeObjectENS0_10HeapObjectE(i64 %899) #6
  br i1 %901, label %908, label %902

902:                                              ; preds = %900
  %903 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 2
  %904 = sext i32 %890 to i64
  %905 = add nsw i64 %904, -1
  %906 = add i64 %905, %899
  %907 = call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %903, i64 %906, i32 %894, i32 1) #6
  br label %908

908:                                              ; preds = %775, %900, %902, %770, %836, %867, %885
  %909 = phi i64* [ %886, %885 ], [ %868, %867 ], [ %837, %836 ], [ %771, %770 ], [ %840, %902 ], [ %840, %900 ], [ %779, %775 ]
  %910 = load i64, i64* %909, align 8
  br label %911

911:                                              ; preds = %908, %887
  %912 = phi i64 [ %899, %887 ], [ %910, %908 ]
  call void @_ZN2v88internal17RegExpGlobalCacheD1Ev(%"class.v8::internal::RegExpGlobalCache"* nonnull %13) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %766) #6
  br label %913

913:                                              ; preds = %911, %763, %761
  %914 = phi i64 [ %912, %911 ], [ %762, %761 ], [ %764, %763 ]
  %915 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %149, align 8
  %916 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %915, null
  br i1 %916, label %920, label %917

917:                                              ; preds = %913
  %918 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %915, i64 %914) #6
  %919 = ptrtoint i64* %918 to i64
  br label %1258

920:                                              ; preds = %913
  %921 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %922 = load i64*, i64** %921, align 8
  %923 = load i64*, i64** %35, align 8
  %924 = icmp eq i64* %922, %923
  br i1 %924, label %925, label %927

925:                                              ; preds = %920
  %926 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %927

927:                                              ; preds = %925, %920
  %928 = phi i64* [ %926, %925 ], [ %922, %920 ]
  %929 = ptrtoint i64* %928 to i64
  %930 = add i64 %929, 8
  %931 = inttoptr i64 %930 to i64*
  store i64* %931, i64** %921, align 8
  store i64 %914, i64* %928, align 8
  br label %1258

932:                                              ; preds = %484
  %933 = load i64, i64* %1, align 8
  %934 = and i64 %933, -4294967296
  %935 = add i64 %933, 11
  %936 = inttoptr i64 %935 to i32*
  %937 = load i32, i32* %936, align 4
  %938 = zext i32 %937 to i64
  %939 = or i64 %934, %938
  %940 = and i64 %938, 1
  %941 = icmp eq i64 %940, 0
  br i1 %941, label %965, label %942

942:                                              ; preds = %932
  %943 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %944 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %943, null
  br i1 %944, label %951, label %945

945:                                              ; preds = %942
  %946 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %943, i64 0, i32 0, i32 1
  %947 = load i8, i8* %946, align 8, !range !5
  %948 = icmp eq i8 %947, 0
  br i1 %948, label %951, label %949

949:                                              ; preds = %945
  %950 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %943, i64 0, i32 1, i64 0
  br label %959

951:                                              ; preds = %945, %942
  %952 = and i64 %939, -262144
  %953 = or i64 %952, 16
  %954 = inttoptr i64 %953 to i64*
  %955 = load i64, i64* %954, align 16
  %956 = add i64 %955, -41416
  %957 = inttoptr i64 %956 to %"class.v8::internal::Isolate"*
  %958 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %957, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %959

959:                                              ; preds = %951, %949
  %960 = phi i64* [ %958, %951 ], [ %950, %949 ]
  %961 = getelementptr inbounds i64, i64* %960, i64 4
  %962 = load i64, i64* %961, align 8
  %963 = trunc i64 %962 to i32
  %964 = icmp eq i32 %937, %963
  br i1 %964, label %975, label %965

965:                                              ; preds = %959, %932
  %966 = add i64 %939, 7
  %967 = inttoptr i64 %966 to i32*
  %968 = load atomic i32, i32* %967 monotonic, align 4
  %969 = ashr i32 %968, 1
  switch i32 %969, label %975 [
    i32 1, label %976
    i32 3, label %970
    i32 2, label %970
  ]

970:                                              ; preds = %965, %965
  %971 = add i64 %939, 39
  %972 = inttoptr i64 %971 to i32*
  %973 = load atomic i32, i32* %972 monotonic, align 4
  %974 = ashr i32 %973, 1
  br label %976

975:                                              ; preds = %965, %959
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #18
  unreachable

976:                                              ; preds = %970, %965
  %977 = phi i32 [ %974, %970 ], [ 0, %965 ]
  %978 = load i64, i64* %77, align 8
  %979 = add i64 %978, 7
  %980 = inttoptr i64 %979 to i32*
  %981 = load i32, i32* %980, align 4
  %982 = call zeroext i1 @_ZN2v88internal6RegExp19EnsureFullyCompiledEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEE(%"class.v8::internal::Isolate"* %2, i64* %1, i64* %77) #6
  br i1 %982, label %986, label %983

983:                                              ; preds = %976
  %984 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %985 = load i64, i64* %984, align 8
  br label %1225

986:                                              ; preds = %976
  %987 = bitcast %"class.v8::internal::CompiledReplacement"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %987) #6
  %988 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %14, i64 0, i32 0, i32 3
  %989 = bitcast %"class.v8::internal::CompiledReplacement"* %14 to %"struct.std::__1::aligned_storage<64, 4>::type"**
  store %"struct.std::__1::aligned_storage<64, 4>::type"* %988, %"struct.std::__1::aligned_storage<64, 4>::type"** %989, align 8
  %990 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %14, i64 0, i32 0, i32 1
  %991 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %990 to %"struct.std::__1::aligned_storage<64, 4>::type"**
  store %"struct.std::__1::aligned_storage<64, 4>::type"* %988, %"struct.std::__1::aligned_storage<64, 4>::type"** %991, align 8
  %992 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %14, i64 0, i32 0, i32 2
  %993 = getelementptr inbounds %"struct.std::__1::aligned_storage<64, 4>::type", %"struct.std::__1::aligned_storage<64, 4>::type"* %988, i64 1
  %994 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %992 to %"struct.std::__1::aligned_storage<64, 4>::type"**
  store %"struct.std::__1::aligned_storage<64, 4>::type"* %993, %"struct.std::__1::aligned_storage<64, 4>::type"** %994, align 8
  %995 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %14, i64 0, i32 1
  %996 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %14, i64 0, i32 1, i32 3
  %997 = bitcast %"class.v8::base::SmallVector.0"* %995 to %"struct.std::__1::aligned_storage<64, 8>::type"**
  store %"struct.std::__1::aligned_storage<64, 8>::type"* %996, %"struct.std::__1::aligned_storage<64, 8>::type"** %997, align 8
  %998 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %14, i64 0, i32 1, i32 1
  %999 = bitcast %"class.v8::internal::Handle"** %998 to %"struct.std::__1::aligned_storage<64, 8>::type"**
  store %"struct.std::__1::aligned_storage<64, 8>::type"* %996, %"struct.std::__1::aligned_storage<64, 8>::type"** %999, align 8
  %1000 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %14, i64 0, i32 1, i32 2
  %1001 = getelementptr inbounds %"struct.std::__1::aligned_storage<64, 8>::type", %"struct.std::__1::aligned_storage<64, 8>::type"* %996, i64 1
  %1002 = bitcast %"class.v8::internal::Handle"** %1000 to %"struct.std::__1::aligned_storage<64, 8>::type"**
  store %"struct.std::__1::aligned_storage<64, 8>::type"* %1001, %"struct.std::__1::aligned_storage<64, 8>::type"** %1002, align 8
  %1003 = call zeroext i1 @_ZN2v88internal19CompiledReplacement7CompileEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEii(%"class.v8::internal::CompiledReplacement"* nonnull %14, %"class.v8::internal::Isolate"* %2, i64* %1, i64* %130, i32 %977, i32 %981) #6
  %1004 = load i64, i64* %1, align 8
  %1005 = and i64 %1004, -4294967296
  %1006 = add i64 %1004, 11
  %1007 = inttoptr i64 %1006 to i32*
  %1008 = load i32, i32* %1007, align 4
  %1009 = zext i32 %1008 to i64
  %1010 = or i64 %1005, %1009
  %1011 = and i64 %1009, 1
  %1012 = icmp eq i64 %1011, 0
  br i1 %1012, label %1036, label %1013

1013:                                             ; preds = %986
  %1014 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %1015 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %1014, null
  br i1 %1015, label %1022, label %1016

1016:                                             ; preds = %1013
  %1017 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %1014, i64 0, i32 0, i32 1
  %1018 = load i8, i8* %1017, align 8, !range !5
  %1019 = icmp eq i8 %1018, 0
  br i1 %1019, label %1022, label %1020

1020:                                             ; preds = %1016
  %1021 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %1014, i64 0, i32 1, i64 0
  br label %1030

1022:                                             ; preds = %1016, %1013
  %1023 = and i64 %1010, -262144
  %1024 = or i64 %1023, 16
  %1025 = inttoptr i64 %1024 to i64*
  %1026 = load i64, i64* %1025, align 16
  %1027 = add i64 %1026, -41416
  %1028 = inttoptr i64 %1027 to %"class.v8::internal::Isolate"*
  %1029 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1028, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %1030

1030:                                             ; preds = %1022, %1020
  %1031 = phi i64* [ %1029, %1022 ], [ %1021, %1020 ]
  %1032 = getelementptr inbounds i64, i64* %1031, i64 4
  %1033 = load i64, i64* %1032, align 8
  %1034 = trunc i64 %1033 to i32
  %1035 = icmp eq i32 %1008, %1034
  br i1 %1035, label %1073, label %1036

1036:                                             ; preds = %1030, %986
  %1037 = add i64 %1010, 7
  %1038 = inttoptr i64 %1037 to i32*
  %1039 = load atomic i32, i32* %1038 monotonic, align 4
  %1040 = and i32 %1039, -2
  %1041 = icmp eq i32 %1040, 2
  %1042 = and i1 %1003, %1041
  br i1 %1042, label %1043, label %1073

1043:                                             ; preds = %1036
  %1044 = load i64, i64* %77, align 8
  %1045 = and i64 %1044, -4294967296
  %1046 = add i64 %1044, -1
  %1047 = inttoptr i64 %1046 to i32*
  %1048 = load atomic i32, i32* %1047 monotonic, align 4
  %1049 = zext i32 %1048 to i64
  %1050 = or i64 %1045, %1049
  %1051 = add i64 %1050, 7
  %1052 = inttoptr i64 %1051 to i16*
  %1053 = load atomic i16, i16* %1052 monotonic, align 2
  %1054 = and i16 %1053, 8
  %1055 = icmp eq i16 %1054, 0
  br i1 %1055, label %1071, label %1056

1056:                                             ; preds = %1043
  %1057 = load i64, i64* %130, align 8
  %1058 = and i64 %1057, -4294967296
  %1059 = add i64 %1057, -1
  %1060 = inttoptr i64 %1059 to i32*
  %1061 = load atomic i32, i32* %1060 monotonic, align 4
  %1062 = zext i32 %1061 to i64
  %1063 = or i64 %1058, %1062
  %1064 = add i64 %1063, 7
  %1065 = inttoptr i64 %1064 to i16*
  %1066 = load atomic i16, i16* %1065 monotonic, align 2
  %1067 = and i16 %1066, 8
  %1068 = icmp eq i16 %1067, 0
  br i1 %1068, label %1071, label %1069

1069:                                             ; preds = %1056
  %1070 = call fastcc i64 @_ZN2v88internalL39StringReplaceGlobalAtomRegExpWithStringINS0_16SeqOneByteStringEEENS0_6ObjectEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS6_INS0_8JSRegExpEEES8_NS6_INS0_15RegExpMatchInfoEEE(%"class.v8::internal::Isolate"* %2, i64* %77, i64* %1, i64* %130, i64* %167) #6
  br label %1209

1071:                                             ; preds = %1056, %1043
  %1072 = call fastcc i64 @_ZN2v88internalL39StringReplaceGlobalAtomRegExpWithStringINS0_16SeqTwoByteStringEEENS0_6ObjectEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS6_INS0_8JSRegExpEEES8_NS6_INS0_15RegExpMatchInfoEEE(%"class.v8::internal::Isolate"* %2, i64* %77, i64* %1, i64* %130, i64* %167) #6
  br label %1209

1073:                                             ; preds = %1036, %1030
  %1074 = bitcast %"class.v8::internal::RegExpGlobalCache"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1074) #6
  call void @_ZN2v88internal17RegExpGlobalCacheC1ENS0_6HandleINS0_8JSRegExpEEENS2_INS0_6StringEEEPNS0_7IsolateE(%"class.v8::internal::RegExpGlobalCache"* nonnull %15, i64* %1, i64* %77, %"class.v8::internal::Isolate"* %2) #6
  %1075 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %15, i64 0, i32 0
  %1076 = load i32, i32* %1075, align 8
  %1077 = icmp slt i32 %1076, 0
  br i1 %1077, label %1078, label %1081

1078:                                             ; preds = %1073
  %1079 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %1080 = load i64, i64* %1079, align 8
  br label %1207

1081:                                             ; preds = %1073
  %1082 = call i32* @_ZN2v88internal17RegExpGlobalCache9FetchNextEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %15) #6
  %1083 = icmp eq i32* %1082, null
  br i1 %1083, label %1084, label %1092

1084:                                             ; preds = %1081
  %1085 = load i32, i32* %1075, align 8
  %1086 = icmp slt i32 %1085, 0
  br i1 %1086, label %1087, label %1090

1087:                                             ; preds = %1084
  %1088 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %1089 = load i64, i64* %1088, align 8
  br label %1207

1090:                                             ; preds = %1084
  %1091 = load i64, i64* %77, align 8
  br label %1207

1092:                                             ; preds = %1081
  %1093 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %990 to i64*
  %1094 = load i64, i64* %1093, align 8
  %1095 = bitcast %"class.v8::internal::CompiledReplacement"* %14 to i64*
  %1096 = load i64, i64* %1095, align 8
  %1097 = sub i64 %1094, %1096
  %1098 = lshr exact i64 %1097, 1
  %1099 = trunc i64 %1098 to i32
  %1100 = and i32 %1099, -4
  %1101 = add i32 %1100, 5
  %1102 = bitcast %"class.v8::internal::ReplacementStringBuilder"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1102) #6
  %1103 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 2
  call void @_ZN2v88internal24ReplacementStringBuilderC1EPNS0_4HeapENS0_6HandleINS0_6StringEEEi(%"class.v8::internal::ReplacementStringBuilder"* nonnull %16, %"class.v8::internal::Heap"* %1103, i64* %77, i32 %1101) #6
  %1104 = getelementptr inbounds %"class.v8::internal::ReplacementStringBuilder", %"class.v8::internal::ReplacementStringBuilder"* %16, i64 0, i32 1
  %1105 = getelementptr inbounds %"class.v8::internal::ReplacementStringBuilder", %"class.v8::internal::ReplacementStringBuilder"* %16, i64 0, i32 3
  br i1 %1003, label %1106, label %1137

1106:                                             ; preds = %1092, %1134
  %1107 = phi i32 [ %1111, %1134 ], [ 0, %1092 ]
  %1108 = phi i32* [ %1135, %1134 ], [ %1082, %1092 ]
  %1109 = load i32, i32* %1108, align 4
  %1110 = getelementptr inbounds i32, i32* %1108, i64 1
  %1111 = load i32, i32* %1110, align 4
  %1112 = icmp sgt i32 %1109, %1107
  br i1 %1112, label %1113, label %1134

1113:                                             ; preds = %1106
  call void @_ZN2v88internal24ReplacementStringBuilder14EnsureCapacityEi(%"class.v8::internal::ReplacementStringBuilder"* nonnull %16, i32 2) #6
  %1114 = sub nsw i32 %1109, %1107
  %1115 = icmp ult i32 %1114, 2048
  %1116 = icmp ult i32 %1107, 524288
  %1117 = and i1 %1116, %1115
  br i1 %1117, label %1122, label %1118

1118:                                             ; preds = %1113
  %1119 = sub nsw i32 0, %1114
  %1120 = sext i32 %1119 to i64
  %1121 = shl nsw i64 %1120, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* %1104, i64 %1121) #6
  br label %1125

1122:                                             ; preds = %1113
  %1123 = shl i32 %1107, 11
  %1124 = or i32 %1114, %1123
  br label %1125

1125:                                             ; preds = %1122, %1118
  %1126 = phi i32 [ %1124, %1122 ], [ %1107, %1118 ]
  %1127 = sext i32 %1126 to i64
  %1128 = shl nsw i64 %1127, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* %1104, i64 %1128) #6
  %1129 = load i32, i32* %1105, align 8
  %1130 = sub nsw i32 536870888, %1114
  %1131 = icmp sgt i32 %1129, %1130
  %1132 = add nsw i32 %1129, %1114
  %1133 = select i1 %1131, i32 2147483647, i32 %1132
  store i32 %1133, i32* %1105, align 8
  br label %1134

1134:                                             ; preds = %1125, %1106
  call void @_ZN2v88internal24ReplacementStringBuilder9AddStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::ReplacementStringBuilder"* nonnull %16, i64* %130) #6
  %1135 = call i32* @_ZN2v88internal17RegExpGlobalCache9FetchNextEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %15) #6
  %1136 = icmp eq i32* %1135, null
  br i1 %1136, label %1168, label %1106

1137:                                             ; preds = %1092, %1165
  %1138 = phi i32 [ %1142, %1165 ], [ 0, %1092 ]
  %1139 = phi i32* [ %1166, %1165 ], [ %1082, %1092 ]
  %1140 = load i32, i32* %1139, align 4
  %1141 = getelementptr inbounds i32, i32* %1139, i64 1
  %1142 = load i32, i32* %1141, align 4
  %1143 = icmp sgt i32 %1140, %1138
  br i1 %1143, label %1144, label %1165

1144:                                             ; preds = %1137
  call void @_ZN2v88internal24ReplacementStringBuilder14EnsureCapacityEi(%"class.v8::internal::ReplacementStringBuilder"* nonnull %16, i32 2) #6
  %1145 = sub nsw i32 %1140, %1138
  %1146 = icmp ult i32 %1145, 2048
  %1147 = icmp ult i32 %1138, 524288
  %1148 = and i1 %1147, %1146
  br i1 %1148, label %1149, label %1152

1149:                                             ; preds = %1144
  %1150 = shl i32 %1138, 11
  %1151 = or i32 %1145, %1150
  br label %1156

1152:                                             ; preds = %1144
  %1153 = sub nsw i32 0, %1145
  %1154 = sext i32 %1153 to i64
  %1155 = shl nsw i64 %1154, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* %1104, i64 %1155) #6
  br label %1156

1156:                                             ; preds = %1152, %1149
  %1157 = phi i32 [ %1138, %1152 ], [ %1151, %1149 ]
  %1158 = sext i32 %1157 to i64
  %1159 = shl nsw i64 %1158, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* %1104, i64 %1159) #6
  %1160 = load i32, i32* %1105, align 8
  %1161 = sub nsw i32 536870888, %1145
  %1162 = icmp sgt i32 %1160, %1161
  %1163 = add nsw i32 %1160, %1145
  %1164 = select i1 %1162, i32 2147483647, i32 %1163
  store i32 %1164, i32* %1105, align 8
  br label %1165

1165:                                             ; preds = %1156, %1137
  call void @_ZN2v88internal19CompiledReplacement5ApplyEPNS0_24ReplacementStringBuilderEiiPi(%"class.v8::internal::CompiledReplacement"* nonnull %14, %"class.v8::internal::ReplacementStringBuilder"* nonnull %16, i32 %1140, i32 %1142, i32* nonnull %1139) #6
  %1166 = call i32* @_ZN2v88internal17RegExpGlobalCache9FetchNextEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %15) #6
  %1167 = icmp eq i32* %1166, null
  br i1 %1167, label %1168, label %1137

1168:                                             ; preds = %1165, %1134
  %1169 = phi i32 [ %1111, %1134 ], [ %1142, %1165 ]
  %1170 = load i32, i32* %1075, align 8
  %1171 = icmp slt i32 %1170, 0
  br i1 %1171, label %1172, label %1174

1172:                                             ; preds = %1168
  %1173 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %1204

1174:                                             ; preds = %1168
  %1175 = icmp sgt i32 %981, %1169
  br i1 %1175, label %1176, label %1197

1176:                                             ; preds = %1174
  call void @_ZN2v88internal24ReplacementStringBuilder14EnsureCapacityEi(%"class.v8::internal::ReplacementStringBuilder"* nonnull %16, i32 2) #6
  %1177 = sub nsw i32 %981, %1169
  %1178 = icmp ult i32 %1177, 2048
  %1179 = icmp ult i32 %1169, 524288
  %1180 = and i1 %1179, %1178
  br i1 %1180, label %1181, label %1184

1181:                                             ; preds = %1176
  %1182 = shl i32 %1169, 11
  %1183 = or i32 %1177, %1182
  br label %1188

1184:                                             ; preds = %1176
  %1185 = sub nsw i32 0, %1177
  %1186 = sext i32 %1185 to i64
  %1187 = shl nsw i64 %1186, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* %1104, i64 %1187) #6
  br label %1188

1188:                                             ; preds = %1184, %1181
  %1189 = phi i32 [ %1169, %1184 ], [ %1183, %1181 ]
  %1190 = sext i32 %1189 to i64
  %1191 = shl nsw i64 %1190, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* %1104, i64 %1191) #6
  %1192 = load i32, i32* %1105, align 8
  %1193 = sub nsw i32 536870888, %1177
  %1194 = icmp sgt i32 %1192, %1193
  %1195 = add nsw i32 %1192, %1177
  %1196 = select i1 %1194, i32 2147483647, i32 %1195
  store i32 %1196, i32* %1105, align 8
  br label %1197

1197:                                             ; preds = %1188, %1174
  %1198 = call i32* @_ZN2v88internal17RegExpGlobalCache19LastSuccessfulMatchEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %15) #6
  %1199 = call i64* @_ZN2v88internal6RegExp16SetLastMatchInfoEPNS0_7IsolateENS0_6HandleINS0_15RegExpMatchInfoEEENS4_INS0_6StringEEEiPi(%"class.v8::internal::Isolate"* %2, i64* %167, i64* %77, i32 %977, i32* %1198) #6
  %1200 = call i64* @_ZN2v88internal24ReplacementStringBuilder8ToStringEv(%"class.v8::internal::ReplacementStringBuilder"* nonnull %16) #6
  %1201 = icmp eq i64* %1200, null
  %1202 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %1203 = select i1 %1201, i64* %1202, i64* %1200
  br label %1204

1204:                                             ; preds = %1197, %1172
  %1205 = phi i64* [ %1173, %1172 ], [ %1203, %1197 ]
  %1206 = load i64, i64* %1205, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1102) #6
  br label %1207

1207:                                             ; preds = %1204, %1090, %1087, %1078
  %1208 = phi i64 [ %1080, %1078 ], [ %1089, %1087 ], [ %1091, %1090 ], [ %1206, %1204 ]
  call void @_ZN2v88internal17RegExpGlobalCacheD1Ev(%"class.v8::internal::RegExpGlobalCache"* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1074) #6
  br label %1209

1209:                                             ; preds = %1207, %1071, %1069
  %1210 = phi i64 [ %1070, %1069 ], [ %1072, %1071 ], [ %1208, %1207 ]
  %1211 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %14, i64 0, i32 1, i32 0
  %1212 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %1211, align 8
  %1213 = bitcast %"struct.std::__1::aligned_storage<64, 8>::type"* %996 to %"class.v8::internal::Handle"*
  %1214 = icmp eq %"class.v8::internal::Handle"* %1212, %1213
  br i1 %1214, label %1217, label %1215

1215:                                             ; preds = %1209
  %1216 = bitcast %"class.v8::internal::Handle"* %1212 to i8*
  call void @free(i8* %1216) #6
  br label %1217

1217:                                             ; preds = %1215, %1209
  %1218 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %14, i64 0, i32 0, i32 0
  %1219 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %1218, align 8
  %1220 = bitcast %"struct.std::__1::aligned_storage<64, 4>::type"* %988 to %"struct.v8::internal::CompiledReplacement::ReplacementPart"*
  %1221 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %1219, %1220
  br i1 %1221, label %1224, label %1222

1222:                                             ; preds = %1217
  %1223 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %1219 to i8*
  call void @free(i8* %1223) #6
  br label %1224

1224:                                             ; preds = %1222, %1217
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %987) #6
  br label %1225

1225:                                             ; preds = %1224, %983
  %1226 = phi i64 [ %1210, %1224 ], [ %985, %983 ]
  %1227 = and i64 %1226, 1
  %1228 = icmp eq i64 %1227, 0
  br i1 %1228, label %1261, label %1229

1229:                                             ; preds = %1225
  %1230 = and i64 %1226, -4294967296
  %1231 = add i64 %1226, -1
  %1232 = inttoptr i64 %1231 to i32*
  %1233 = load atomic i32, i32* %1232 monotonic, align 4
  %1234 = zext i32 %1233 to i64
  %1235 = or i64 %1230, %1234
  %1236 = add i64 %1235, 7
  %1237 = inttoptr i64 %1236 to i16*
  %1238 = load atomic i16, i16* %1237 monotonic, align 2
  %1239 = icmp ult i16 %1238, 64
  br i1 %1239, label %1240, label %1261

1240:                                             ; preds = %1229
  %1241 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %149, align 8
  %1242 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1241, null
  br i1 %1242, label %1246, label %1243

1243:                                             ; preds = %1240
  %1244 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1241, i64 %1226) #6
  %1245 = ptrtoint i64* %1244 to i64
  br label %1258

1246:                                             ; preds = %1240
  %1247 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %1248 = load i64*, i64** %1247, align 8
  %1249 = load i64*, i64** %35, align 8
  %1250 = icmp eq i64* %1248, %1249
  br i1 %1250, label %1251, label %1253

1251:                                             ; preds = %1246
  %1252 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %1253

1253:                                             ; preds = %1251, %1246
  %1254 = phi i64* [ %1252, %1251 ], [ %1248, %1246 ]
  %1255 = ptrtoint i64* %1254 to i64
  %1256 = add i64 %1255, 8
  %1257 = inttoptr i64 %1256 to i64*
  store i64* %1257, i64** %1247, align 8
  store i64 %1226, i64* %1254, align 8
  br label %1258

1258:                                             ; preds = %1253, %1243, %927, %917, %716, %706, %428, %287
  %1259 = phi i64 [ %288, %287 ], [ %429, %428 ], [ %708, %706 ], [ %718, %716 ], [ %919, %917 ], [ %929, %927 ], [ %1245, %1243 ], [ %1255, %1253 ]
  %1260 = icmp eq i64 %1259, 0
  br i1 %1260, label %1261, label %1264

1261:                                             ; preds = %1258, %1229, %1225, %430, %272, %224
  %1262 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %1263 = load i64, i64* %1262, align 8
  br label %2398

1264:                                             ; preds = %1258
  %1265 = inttoptr i64 %1259 to i64*
  %1266 = load i64, i64* %1265, align 8
  br label %2398

1267:                                             ; preds = %109
  %1268 = load i64, i64* %77, align 8
  %1269 = add i64 %1268, 7
  %1270 = inttoptr i64 %1269 to i32*
  %1271 = load i32, i32* %1270, align 4
  %1272 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 341
  %1273 = bitcast %"class.v8::internal::LookupIterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %1273) #6
  %1274 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 0
  %1275 = load i64, i64* %1272, align 8
  %1276 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 4
  %1277 = load i64, i64* %1276, align 8
  %1278 = add i64 %1275, -1
  %1279 = inttoptr i64 %1278 to i32*
  %1280 = load atomic i32, i32* %1279 monotonic, align 4
  %1281 = and i64 %1277, 4294967295
  %1282 = icmp eq i64 %1281, 0
  tail call void @llvm.assume(i1 %1282) #6
  %1283 = zext i32 %1280 to i64
  %1284 = or i64 %1277, %1283
  %1285 = add i64 %1284, 7
  %1286 = inttoptr i64 %1285 to i16*
  %1287 = load atomic i16, i16* %1286 monotonic, align 2
  %1288 = icmp eq i16 %1287, 64
  br i1 %1288, label %1289, label %1295

1289:                                             ; preds = %1267
  %1290 = add i64 %1275, 7
  %1291 = inttoptr i64 %1290 to i32*
  %1292 = load i32, i32* %1291, align 4
  %1293 = and i32 %1292, 1
  %1294 = icmp eq i32 %1293, 0
  br i1 %1294, label %1295, label %1296

1295:                                             ; preds = %1289, %1267
  br label %1296

1296:                                             ; preds = %1295, %1289
  %1297 = phi i32 [ 3, %1295 ], [ 0, %1289 ]
  store i32 %1297, i32* %1274, align 8
  %1298 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 1
  store i32 4, i32* %1298, align 4
  %1299 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 2
  store i8 0, i8* %1299, align 8
  %1300 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 3
  store i32 0, i32* %1300, align 4
  %1301 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 4, i32 0
  store i32 0, i32* %1301, align 8
  %1302 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %1302, align 8
  %1303 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 6, i32 0, i32 0
  store i64* %1272, i64** %1303, align 8
  %1304 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %1304, align 8
  %1305 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 8, i32 0, i32 0
  store i64* %1, i64** %1305, align 8
  %1306 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %1306, align 8
  %1307 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 10
  %1308 = bitcast %"class.v8::internal::Handle.1169"* %1307 to i64*
  store i64 %31, i64* %1308, align 8
  %1309 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 11
  %1310 = bitcast i64* %1309 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1310, i8 -1, i64 16, i1 false) #6
  %1311 = and i64 %1275, -4294967296
  %1312 = load atomic i32, i32* %1279 monotonic, align 4
  %1313 = zext i32 %1312 to i64
  %1314 = or i64 %1311, %1313
  %1315 = add i64 %1314, 7
  %1316 = inttoptr i64 %1315 to i16*
  %1317 = load atomic i16, i16* %1316 monotonic, align 2
  %1318 = and i16 %1317, -32
  %1319 = icmp eq i16 %1318, 32
  br i1 %1319, label %1320, label %1324

1320:                                             ; preds = %1296
  %1321 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 5, i32 0, i32 0, i32 0
  %1322 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %1321, align 8
  %1323 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %1322, %"class.v8::internal::Isolate"* %2, i64* %1272) #6
  br label %1324

1324:                                             ; preds = %1320, %1296
  %1325 = phi i64* [ %1323, %1320 ], [ %1272, %1296 ]
  store i64* %1325, i64** %1303, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %11) #6
  %1326 = load i32, i32* %1298, align 4
  %1327 = icmp eq i32 %1326, 4
  br i1 %1327, label %1328, label %1333

1328:                                             ; preds = %1324
  %1329 = bitcast %"class.v8::internal::Isolate"** %1302 to %"class.v8::internal::Factory"**
  %1330 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %1329, align 8
  %1331 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %1330, i64 160
  %1332 = bitcast %"class.v8::internal::Factory"* %1331 to i64*
  br label %1335

1333:                                             ; preds = %1324
  %1334 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %11, i1 zeroext false) #6
  br label %1335

1335:                                             ; preds = %1333, %1328
  %1336 = phi i64* [ %1334, %1333 ], [ %1332, %1328 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %1273) #6
  %1337 = icmp eq i64* %1336, null
  br i1 %1337, label %1338, label %1341

1338:                                             ; preds = %1335
  %1339 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %1340 = load i64, i64* %1339, align 8
  br label %2398

1341:                                             ; preds = %1335
  %1342 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1342) #6
  %1343 = load i64, i64* %1336, align 8
  %1344 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %20, i64 0, i32 0, i32 0, i32 0
  store i64 %1343, i64* %1344, align 8
  %1345 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %20, i64 0, i32 0
  %1346 = call zeroext i1 @_ZN2v88internal6Object12BooleanValueEPNS0_7IsolateE(%"class.v8::internal::Object"* nonnull %1345, %"class.v8::internal::Isolate"* %2) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1342) #6
  br i1 %1346, label %1347, label %1427

1347:                                             ; preds = %1341
  %1348 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 463
  %1349 = bitcast %"class.v8::internal::LookupIterator"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %1349) #6
  %1350 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 0
  %1351 = load i64, i64* %1348, align 8
  %1352 = load i64, i64* %1276, align 8
  %1353 = add i64 %1351, -1
  %1354 = inttoptr i64 %1353 to i32*
  %1355 = load atomic i32, i32* %1354 monotonic, align 4
  %1356 = and i64 %1352, 4294967295
  %1357 = icmp eq i64 %1356, 0
  call void @llvm.assume(i1 %1357) #6
  %1358 = zext i32 %1355 to i64
  %1359 = or i64 %1352, %1358
  %1360 = add i64 %1359, 7
  %1361 = inttoptr i64 %1360 to i16*
  %1362 = load atomic i16, i16* %1361 monotonic, align 2
  %1363 = icmp eq i16 %1362, 64
  br i1 %1363, label %1364, label %1370

1364:                                             ; preds = %1347
  %1365 = add i64 %1351, 7
  %1366 = inttoptr i64 %1365 to i32*
  %1367 = load i32, i32* %1366, align 4
  %1368 = and i32 %1367, 1
  %1369 = icmp eq i32 %1368, 0
  br i1 %1369, label %1370, label %1371

1370:                                             ; preds = %1364, %1347
  br label %1371

1371:                                             ; preds = %1370, %1364
  %1372 = phi i32 [ 3, %1370 ], [ 0, %1364 ]
  store i32 %1372, i32* %1350, align 8
  %1373 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 1
  store i32 4, i32* %1373, align 4
  %1374 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 2
  store i8 0, i8* %1374, align 8
  %1375 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 3
  store i32 0, i32* %1375, align 4
  %1376 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 4, i32 0
  store i32 0, i32* %1376, align 8
  %1377 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %1377, align 8
  %1378 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 6, i32 0, i32 0
  store i64* %1348, i64** %1378, align 8
  %1379 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %1379, align 8
  %1380 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 8, i32 0, i32 0
  store i64* %1, i64** %1380, align 8
  %1381 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %1381, align 8
  %1382 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 10
  %1383 = bitcast %"class.v8::internal::Handle.1169"* %1382 to i64*
  store i64 %31, i64* %1383, align 8
  %1384 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 11
  %1385 = bitcast i64* %1384 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1385, i8 -1, i64 16, i1 false) #6
  %1386 = and i64 %1351, -4294967296
  %1387 = load atomic i32, i32* %1354 monotonic, align 4
  %1388 = zext i32 %1387 to i64
  %1389 = or i64 %1386, %1388
  %1390 = add i64 %1389, 7
  %1391 = inttoptr i64 %1390 to i16*
  %1392 = load atomic i16, i16* %1391 monotonic, align 2
  %1393 = and i16 %1392, -32
  %1394 = icmp eq i16 %1393, 32
  br i1 %1394, label %1395, label %1399

1395:                                             ; preds = %1371
  %1396 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 5, i32 0, i32 0, i32 0
  %1397 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %1396, align 8
  %1398 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %1397, %"class.v8::internal::Isolate"* %2, i64* %1348) #6
  br label %1399

1399:                                             ; preds = %1395, %1371
  %1400 = phi i64* [ %1398, %1395 ], [ %1348, %1371 ]
  store i64* %1400, i64** %1378, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %10) #6
  %1401 = load i32, i32* %1373, align 4
  %1402 = icmp eq i32 %1401, 4
  br i1 %1402, label %1403, label %1408

1403:                                             ; preds = %1399
  %1404 = bitcast %"class.v8::internal::Isolate"** %1377 to %"class.v8::internal::Factory"**
  %1405 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %1404, align 8
  %1406 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %1405, i64 160
  %1407 = bitcast %"class.v8::internal::Factory"* %1406 to i64*
  br label %1410

1408:                                             ; preds = %1399
  %1409 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %10, i1 zeroext false) #6
  br label %1410

1410:                                             ; preds = %1408, %1403
  %1411 = phi i64* [ %1409, %1408 ], [ %1407, %1403 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %1349) #6
  %1412 = icmp eq i64* %1411, null
  br i1 %1412, label %1413, label %1416

1413:                                             ; preds = %1410
  %1414 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %1415 = load i64, i64* %1414, align 8
  br label %2398

1416:                                             ; preds = %1410
  %1417 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1417) #6
  %1418 = load i64, i64* %1411, align 8
  %1419 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %21, i64 0, i32 0, i32 0, i32 0
  store i64 %1418, i64* %1419, align 8
  %1420 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %21, i64 0, i32 0
  %1421 = call zeroext i1 @_ZN2v88internal6Object12BooleanValueEPNS0_7IsolateE(%"class.v8::internal::Object"* nonnull %1420, %"class.v8::internal::Isolate"* %2) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1417) #6
  %1422 = call i64* @_ZN2v88internal11RegExpUtils12SetLastIndexEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEEm(%"class.v8::internal::Isolate"* %2, i64* %1, i64 0) #6
  %1423 = icmp eq i64* %1422, null
  br i1 %1423, label %1424, label %1427

1424:                                             ; preds = %1416
  %1425 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %1426 = load i64, i64* %1425, align 8
  br label %2398

1427:                                             ; preds = %1416, %1341
  %1428 = phi i1 [ false, %1341 ], [ %1421, %1416 ]
  %1429 = bitcast %"class.v8::base::SmallVector.1203"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %1429) #6
  %1430 = getelementptr inbounds %"class.v8::base::SmallVector.1203", %"class.v8::base::SmallVector.1203"* %22, i64 0, i32 3
  %1431 = bitcast %"class.v8::base::SmallVector.1203"* %22 to %"struct.std::__1::aligned_storage<64, 8>::type"**
  store %"struct.std::__1::aligned_storage<64, 8>::type"* %1430, %"struct.std::__1::aligned_storage<64, 8>::type"** %1431, align 8
  %1432 = getelementptr inbounds %"class.v8::base::SmallVector.1203", %"class.v8::base::SmallVector.1203"* %22, i64 0, i32 1
  %1433 = bitcast %"class.v8::internal::Handle.1169"** %1432 to %"struct.std::__1::aligned_storage<64, 8>::type"**
  store %"struct.std::__1::aligned_storage<64, 8>::type"* %1430, %"struct.std::__1::aligned_storage<64, 8>::type"** %1433, align 8
  %1434 = getelementptr inbounds %"class.v8::base::SmallVector.1203", %"class.v8::base::SmallVector.1203"* %22, i64 0, i32 2
  %1435 = getelementptr inbounds %"struct.std::__1::aligned_storage<64, 8>::type", %"struct.std::__1::aligned_storage<64, 8>::type"* %1430, i64 1
  %1436 = bitcast %"class.v8::internal::Handle.1169"** %1434 to %"struct.std::__1::aligned_storage<64, 8>::type"**
  store %"struct.std::__1::aligned_storage<64, 8>::type"* %1435, %"struct.std::__1::aligned_storage<64, 8>::type"** %1436, align 8
  %1437 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 4
  %1438 = call i64* @_ZN2v88internal11RegExpUtils10RegExpExecEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEENS4_INS0_6StringEEENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %2, i64* %1, i64* %77, i64* %1437) #6
  %1439 = icmp eq i64* %1438, null
  br i1 %1439, label %1520, label %1440

1440:                                             ; preds = %1427
  %1441 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 6
  %1442 = bitcast %"class.v8::internal::LookupIterator"* %9 to i8*
  %1443 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 0
  %1444 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 1
  %1445 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 2
  %1446 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 3
  %1447 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 4, i32 0
  %1448 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 5
  %1449 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 8, i32 0, i32 0
  %1450 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 9, i32 0, i32 0
  %1451 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 10
  %1452 = bitcast %"class.v8::internal::Handle.1169"* %1451 to i64*
  %1453 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 11
  %1454 = bitcast %"class.v8::internal::Isolate"** %1448 to %"class.v8::internal::Factory"**
  br i1 %1346, label %1455, label %1523

1455:                                             ; preds = %1440
  %1456 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 6, i32 0, i32 0
  %1457 = bitcast i64** %1456 to i8*
  %1458 = bitcast i64* %1453 to <2 x i64>*
  br label %1459

1459:                                             ; preds = %1517, %1455
  %1460 = phi i64* [ %1518, %1517 ], [ %1438, %1455 ]
  %1461 = ptrtoint i64* %1460 to i64
  %1462 = load i64, i64* %1460, align 8
  %1463 = load i64, i64* %1441, align 8
  %1464 = trunc i64 %1462 to i32
  %1465 = trunc i64 %1463 to i32
  %1466 = icmp eq i32 %1464, %1465
  br i1 %1466, label %1549, label %1467

1467:                                             ; preds = %1459
  %1468 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %1432, align 8
  %1469 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %1434, align 8
  %1470 = icmp eq %"class.v8::internal::Handle.1169"* %1468, %1469
  br i1 %1470, label %1471, label %1473, !prof !2

1471:                                             ; preds = %1467
  %1472 = call %"class.v8::internal::Handle.1169"* @_ZN2v84base11SmallVectorINS_8internal6HandleINS2_6ObjectEEELm8EE4GrowEv(%"class.v8::base::SmallVector.1203"* nonnull %22) #6
  br label %1473

1473:                                             ; preds = %1471, %1467
  %1474 = phi %"class.v8::internal::Handle.1169"* [ %1472, %1471 ], [ %1468, %1467 ]
  %1475 = bitcast %"class.v8::internal::Handle.1169"* %1474 to i64*
  store i64 %1461, i64* %1475, align 8
  %1476 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %1474, i64 1
  store %"class.v8::internal::Handle.1169"* %1476, %"class.v8::internal::Handle.1169"** %1432, align 8
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %1442) #6
  store i32 3, i32* %1443, align 8
  store i32 4, i32* %1444, align 4
  store i8 0, i8* %1445, align 8
  store i32 0, i32* %1446, align 4
  store i32 0, i32* %1447, align 8
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %1448, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1457, i8 0, i64 16, i1 false) #6
  store i64* %1460, i64** %1449, align 8
  store i64* null, i64** %1450, align 8
  store i64 %1461, i64* %1452, align 8
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %1458, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"* nonnull %9) #6
  %1477 = load i32, i32* %1444, align 4
  %1478 = icmp eq i32 %1477, 4
  br i1 %1478, label %1481, label %1479

1479:                                             ; preds = %1473
  %1480 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %9, i1 zeroext false) #6
  br label %1485

1481:                                             ; preds = %1473
  %1482 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %1454, align 8
  %1483 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %1482, i64 160
  %1484 = bitcast %"class.v8::internal::Factory"* %1483 to i64*
  br label %1485

1485:                                             ; preds = %1481, %1479
  %1486 = phi i64* [ %1480, %1479 ], [ %1484, %1481 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %1442) #6
  %1487 = icmp eq i64* %1486, null
  br i1 %1487, label %1540, label %1488

1488:                                             ; preds = %1485
  %1489 = load i64, i64* %1486, align 8
  %1490 = and i64 %1489, 1
  %1491 = icmp eq i64 %1490, 0
  br i1 %1491, label %1503, label %1492

1492:                                             ; preds = %1488
  %1493 = and i64 %1489, -4294967296
  %1494 = add i64 %1489, -1
  %1495 = inttoptr i64 %1494 to i32*
  %1496 = load atomic i32, i32* %1495 monotonic, align 4
  %1497 = zext i32 %1496 to i64
  %1498 = or i64 %1493, %1497
  %1499 = add i64 %1498, 7
  %1500 = inttoptr i64 %1499 to i16*
  %1501 = load atomic i16, i16* %1500 monotonic, align 2
  %1502 = icmp ult i16 %1501, 64
  br i1 %1502, label %1508, label %1503

1503:                                             ; preds = %1492, %1488
  %1504 = call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* nonnull %1486) #6
  %1505 = icmp eq i64* %1504, null
  br i1 %1505, label %1543, label %1506

1506:                                             ; preds = %1503
  %1507 = load i64, i64* %1504, align 8
  br label %1508

1508:                                             ; preds = %1506, %1492
  %1509 = phi i64 [ %1507, %1506 ], [ %1489, %1492 ]
  %1510 = add i64 %1509, 7
  %1511 = inttoptr i64 %1510 to i32*
  %1512 = load i32, i32* %1511, align 4
  %1513 = icmp eq i32 %1512, 0
  br i1 %1513, label %1514, label %1517

1514:                                             ; preds = %1508
  %1515 = call i64* @_ZN2v88internal11RegExpUtils22SetAdvancedStringIndexEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEENS4_INS0_6StringEEEb(%"class.v8::internal::Isolate"* %2, i64* %1, i64* %77, i1 zeroext %1428) #6
  %1516 = icmp eq i64* %1515, null
  br i1 %1516, label %1546, label %1517

1517:                                             ; preds = %1514, %1508
  %1518 = call i64* @_ZN2v88internal11RegExpUtils10RegExpExecEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEENS4_INS0_6StringEEENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %2, i64* %1, i64* %77, i64* %1437) #6
  %1519 = icmp eq i64* %1518, null
  br i1 %1519, label %1520, label %1459

1520:                                             ; preds = %1517, %1427
  %1521 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %1522 = load i64, i64* %1521, align 8
  br label %2389

1523:                                             ; preds = %1440
  %1524 = ptrtoint i64* %1438 to i64
  %1525 = load i64, i64* %1438, align 8
  %1526 = load i64, i64* %1441, align 8
  %1527 = trunc i64 %1525 to i32
  %1528 = trunc i64 %1526 to i32
  %1529 = icmp eq i32 %1527, %1528
  br i1 %1529, label %1549, label %1530

1530:                                             ; preds = %1523
  %1531 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %1432, align 8
  %1532 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %1434, align 8
  %1533 = icmp eq %"class.v8::internal::Handle.1169"* %1531, %1532
  br i1 %1533, label %1534, label %1536, !prof !2

1534:                                             ; preds = %1530
  %1535 = call %"class.v8::internal::Handle.1169"* @_ZN2v84base11SmallVectorINS_8internal6HandleINS2_6ObjectEEELm8EE4GrowEv(%"class.v8::base::SmallVector.1203"* nonnull %22) #6
  br label %1536

1536:                                             ; preds = %1534, %1530
  %1537 = phi %"class.v8::internal::Handle.1169"* [ %1535, %1534 ], [ %1531, %1530 ]
  %1538 = bitcast %"class.v8::internal::Handle.1169"* %1537 to i64*
  store i64 %1524, i64* %1538, align 8
  %1539 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %1537, i64 1
  store %"class.v8::internal::Handle.1169"* %1539, %"class.v8::internal::Handle.1169"** %1432, align 8
  br label %1549

1540:                                             ; preds = %1485
  %1541 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %1542 = load i64, i64* %1541, align 8
  br label %2389

1543:                                             ; preds = %1503
  %1544 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %1545 = load i64, i64* %1544, align 8
  br label %2389

1546:                                             ; preds = %1514
  %1547 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %1548 = load i64, i64* %1547, align 8
  br label %2389

1549:                                             ; preds = %1459, %1536, %1523
  %1550 = bitcast %"class.v8::internal::IncrementalStringBuilder"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1550) #6
  call void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %23, %"class.v8::internal::Isolate"* %2) #6
  %1551 = getelementptr inbounds %"class.v8::base::SmallVector.1203", %"class.v8::base::SmallVector.1203"* %22, i64 0, i32 0
  %1552 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %1551, align 8
  %1553 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %1432, align 8
  %1554 = icmp eq %"class.v8::internal::Handle.1169"* %1552, %1553
  br i1 %1554, label %2366, label %1555

1555:                                             ; preds = %1549
  %1556 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 363
  %1557 = bitcast %"class.v8::internal::LookupIterator"* %8 to i8*
  %1558 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 0
  %1559 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 1
  %1560 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 2
  %1561 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 3
  %1562 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 4, i32 0
  %1563 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 5
  %1564 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 6, i32 0, i32 0
  %1565 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 7, i32 0, i32 0
  %1566 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 8, i32 0, i32 0
  %1567 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 9, i32 0, i32 0
  %1568 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 10
  %1569 = bitcast %"class.v8::internal::Handle.1169"* %1568 to i64*
  %1570 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 11
  %1571 = bitcast i64* %1570 to i8*
  %1572 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 5, i32 0, i32 0, i32 0
  %1573 = bitcast %"class.v8::internal::Isolate"** %1563 to %"class.v8::internal::Factory"**
  %1574 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %1575 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %1576 = bitcast %"class.v8::internal::LookupIterator"* %7 to i8*
  %1577 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 0
  %1578 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 1
  %1579 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 2
  %1580 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 3
  %1581 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 4, i32 0
  %1582 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 5
  %1583 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 6, i32 0, i32 0
  %1584 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 8, i32 0, i32 0
  %1585 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 9, i32 0, i32 0
  %1586 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 10
  %1587 = bitcast %"class.v8::internal::Handle.1169"* %1586 to i64*
  %1588 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 11
  %1589 = bitcast %"class.v8::internal::Isolate"** %1582 to %"class.v8::internal::Factory"**
  %1590 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 350
  %1591 = bitcast %"class.v8::internal::LookupIterator"* %6 to i8*
  %1592 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 0
  %1593 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 1
  %1594 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 2
  %1595 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 3
  %1596 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 4, i32 0
  %1597 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 5
  %1598 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 6, i32 0, i32 0
  %1599 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 7, i32 0, i32 0
  %1600 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 8, i32 0, i32 0
  %1601 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 9, i32 0, i32 0
  %1602 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 10
  %1603 = bitcast %"class.v8::internal::Handle.1169"* %1602 to i64*
  %1604 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 11
  %1605 = bitcast i64* %1604 to i8*
  %1606 = bitcast %"class.v8::internal::Isolate"** %1597 to %"class.v8::internal::Factory"**
  %1607 = bitcast %"class.v8::base::SmallVector.1203"* %24 to i8*
  %1608 = getelementptr inbounds %"class.v8::base::SmallVector.1203", %"class.v8::base::SmallVector.1203"* %24, i64 0, i32 3
  %1609 = bitcast %"class.v8::base::SmallVector.1203"* %24 to %"struct.std::__1::aligned_storage<64, 8>::type"**
  %1610 = getelementptr inbounds %"class.v8::base::SmallVector.1203", %"class.v8::base::SmallVector.1203"* %24, i64 0, i32 1
  %1611 = bitcast %"class.v8::internal::Handle.1169"** %1610 to %"struct.std::__1::aligned_storage<64, 8>::type"**
  %1612 = getelementptr inbounds %"class.v8::base::SmallVector.1203", %"class.v8::base::SmallVector.1203"* %24, i64 0, i32 2
  %1613 = getelementptr inbounds %"struct.std::__1::aligned_storage<64, 8>::type", %"struct.std::__1::aligned_storage<64, 8>::type"* %1608, i64 1
  %1614 = bitcast %"class.v8::internal::Handle.1169"** %1612 to %"struct.std::__1::aligned_storage<64, 8>::type"**
  %1615 = bitcast %"class.v8::internal::LookupIterator"* %5 to i8*
  %1616 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 1
  %1617 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 5
  %1618 = bitcast %"class.v8::internal::Isolate"** %1617 to %"class.v8::internal::Factory"**
  %1619 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %1620 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 343
  %1621 = bitcast %"class.v8::internal::LookupIterator"* %4 to i8*
  %1622 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 0
  %1623 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 1
  %1624 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 2
  %1625 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 3
  %1626 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 4, i32 0
  %1627 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 5
  %1628 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 6, i32 0, i32 0
  %1629 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 7, i32 0, i32 0
  %1630 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 8, i32 0, i32 0
  %1631 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 9, i32 0, i32 0
  %1632 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 10
  %1633 = bitcast %"class.v8::internal::Handle.1169"* %1632 to i64*
  %1634 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 11
  %1635 = bitcast i64* %1634 to i8*
  %1636 = bitcast %"class.v8::internal::Isolate"** %1627 to %"class.v8::internal::Factory"**
  %1637 = bitcast %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %25 to i8*
  %1638 = getelementptr inbounds %"class.v8::base::SmallVector.1203", %"class.v8::base::SmallVector.1203"* %24, i64 0, i32 0
  %1639 = bitcast %"class.v8::internal::Handle.1169"** %1610 to i64*
  %1640 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %25, i64 0, i32 0, i32 0
  %1641 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %25, i64 0, i32 1
  %1642 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %25, i64 0, i32 2, i32 0, i32 0
  %1643 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %25, i64 0, i32 3, i32 0, i32 0
  %1644 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %25, i64 0, i32 4
  %1645 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %25, i64 0, i32 5, i32 0
  %1646 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %25, i64 0, i32 5, i32 1
  %1647 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %25, i64 0, i32 7, i32 0, i32 0
  %1648 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %25, i64 0, i32 6
  %1649 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %25, i64 0, i32 0
  %1650 = ptrtoint i64* %77 to i64
  %1651 = bitcast %"struct.std::__1::aligned_storage<64, 8>::type"* %1608 to %"class.v8::internal::Handle.1169"*
  %1652 = icmp eq %"class.v8::internal::Isolate"* %2, null
  %1653 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %32, i64 0, i32 0
  %1654 = bitcast i64** %1583 to i8*
  %1655 = bitcast i64* %1588 to <2 x i64>*
  br label %1658

1656:                                             ; preds = %2363
  %1657 = icmp eq %"class.v8::internal::Handle.1169"* %2365, %1553
  br i1 %1657, label %2366, label %1658

1658:                                             ; preds = %1656, %1555
  %1659 = phi i64 [ undef, %1555 ], [ %2350, %1656 ]
  %1660 = phi i32 [ 0, %1555 ], [ %2348, %1656 ]
  %1661 = phi %"class.v8::internal::Handle.1169"* [ %1552, %1555 ], [ %2365, %1656 ]
  %1662 = load i64, i64* %33, align 8
  %1663 = load i64*, i64** %35, align 8
  %1664 = load i32, i32* %37, align 8
  %1665 = add nsw i32 %1664, 1
  store i32 %1665, i32* %37, align 8
  %1666 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %1661, i64 0, i32 0, i32 0
  %1667 = load i64*, i64** %1666, align 8
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %1557) #6
  %1668 = ptrtoint i64* %1667 to i64
  %1669 = load i64, i64* %1556, align 8
  %1670 = load i64, i64* %1276, align 8
  %1671 = add i64 %1669, -1
  %1672 = inttoptr i64 %1671 to i32*
  %1673 = load atomic i32, i32* %1672 monotonic, align 4
  %1674 = and i64 %1670, 4294967295
  %1675 = icmp eq i64 %1674, 0
  call void @llvm.assume(i1 %1675) #6
  %1676 = zext i32 %1673 to i64
  %1677 = or i64 %1670, %1676
  %1678 = add i64 %1677, 7
  %1679 = inttoptr i64 %1678 to i16*
  %1680 = load atomic i16, i16* %1679 monotonic, align 2
  %1681 = icmp eq i16 %1680, 64
  br i1 %1681, label %1682, label %1688

1682:                                             ; preds = %1658
  %1683 = add i64 %1669, 7
  %1684 = inttoptr i64 %1683 to i32*
  %1685 = load i32, i32* %1684, align 4
  %1686 = and i32 %1685, 1
  %1687 = icmp eq i32 %1686, 0
  br i1 %1687, label %1688, label %1689

1688:                                             ; preds = %1682, %1658
  br label %1689

1689:                                             ; preds = %1688, %1682
  %1690 = phi i32 [ 3, %1688 ], [ 0, %1682 ]
  store i32 %1690, i32* %1558, align 8
  store i32 4, i32* %1559, align 4
  store i8 0, i8* %1560, align 8
  store i32 0, i32* %1561, align 4
  store i32 0, i32* %1562, align 8
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %1563, align 8
  store i64* %1556, i64** %1564, align 8
  store i64* null, i64** %1565, align 8
  store i64* %1667, i64** %1566, align 8
  store i64* null, i64** %1567, align 8
  store i64 %1668, i64* %1569, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1571, i8 -1, i64 16, i1 false) #6
  %1691 = and i64 %1669, -4294967296
  %1692 = load atomic i32, i32* %1672 monotonic, align 4
  %1693 = zext i32 %1692 to i64
  %1694 = or i64 %1691, %1693
  %1695 = add i64 %1694, 7
  %1696 = inttoptr i64 %1695 to i16*
  %1697 = load atomic i16, i16* %1696 monotonic, align 2
  %1698 = and i16 %1697, -32
  %1699 = icmp eq i16 %1698, 32
  br i1 %1699, label %1700, label %1703

1700:                                             ; preds = %1689
  %1701 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %1572, align 8
  %1702 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %1701, %"class.v8::internal::Isolate"* %2, i64* %1556) #6
  br label %1703

1703:                                             ; preds = %1700, %1689
  %1704 = phi i64* [ %1702, %1700 ], [ %1556, %1689 ]
  store i64* %1704, i64** %1564, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %8) #6
  %1705 = load i32, i32* %1559, align 4
  %1706 = icmp eq i32 %1705, 4
  br i1 %1706, label %1707, label %1711

1707:                                             ; preds = %1703
  %1708 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %1573, align 8
  %1709 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %1708, i64 160
  %1710 = bitcast %"class.v8::internal::Factory"* %1709 to i64*
  br label %1713

1711:                                             ; preds = %1703
  %1712 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %8, i1 zeroext false) #6
  br label %1713

1713:                                             ; preds = %1711, %1707
  %1714 = phi i64* [ %1712, %1711 ], [ %1710, %1707 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %1557) #6
  %1715 = icmp eq i64* %1714, null
  br i1 %1715, label %1716, label %1718

1716:                                             ; preds = %1713
  %1717 = load i64, i64* %1619, align 8
  br label %2347

1718:                                             ; preds = %1713
  %1719 = load i64, i64* %1714, align 8
  %1720 = and i64 %1719, 1
  %1721 = icmp eq i64 %1720, 0
  br i1 %1721, label %1722, label %1744

1722:                                             ; preds = %1718
  %1723 = trunc i64 %1719 to i32
  %1724 = ashr i32 %1723, 1
  %1725 = icmp sgt i32 %1724, 0
  %1726 = select i1 %1725, i32 %1724, i32 0
  %1727 = shl nuw nsw i32 %1726, 1
  %1728 = zext i32 %1727 to i64
  %1729 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %1574, align 8
  %1730 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1729, null
  br i1 %1730, label %1733, label %1731

1731:                                             ; preds = %1722
  %1732 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1729, i64 %1728) #6
  br label %1746

1733:                                             ; preds = %1722
  %1734 = load i64*, i64** %1575, align 8
  %1735 = load i64*, i64** %35, align 8
  %1736 = icmp eq i64* %1734, %1735
  br i1 %1736, label %1737, label %1739

1737:                                             ; preds = %1733
  %1738 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %1739

1739:                                             ; preds = %1737, %1733
  %1740 = phi i64* [ %1738, %1737 ], [ %1734, %1733 ]
  %1741 = ptrtoint i64* %1740 to i64
  %1742 = add i64 %1741, 8
  %1743 = inttoptr i64 %1742 to i64*
  store i64* %1743, i64** %1575, align 8
  store i64 %1728, i64* %1740, align 8
  br label %1746

1744:                                             ; preds = %1718
  %1745 = call i64* @_ZN2v88internal6Object15ConvertToLengthEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* nonnull %1714) #6
  br label %1746

1746:                                             ; preds = %1744, %1739, %1731
  %1747 = phi i64* [ %1745, %1744 ], [ %1732, %1731 ], [ %1740, %1739 ]
  %1748 = icmp eq i64* %1747, null
  br i1 %1748, label %1749, label %1751

1749:                                             ; preds = %1746
  %1750 = load i64, i64* %1619, align 8
  br label %2347

1751:                                             ; preds = %1746
  %1752 = load i64, i64* %1747, align 8
  %1753 = and i64 %1752, 1
  %1754 = icmp eq i64 %1753, 0
  br i1 %1754, label %1755, label %1760

1755:                                             ; preds = %1751
  %1756 = trunc i64 %1752 to i32
  %1757 = ashr i32 %1756, 1
  %1758 = icmp slt i32 %1756, 2
  %1759 = select i1 %1758, i32 0, i32 %1757
  br label %1769

1760:                                             ; preds = %1751
  %1761 = add i64 %1752, 3
  %1762 = inttoptr i64 %1761 to double*
  %1763 = load double, double* %1762, align 1
  %1764 = fcmp ult double %1763, 1.000000e+00
  br i1 %1764, label %1769, label %1765

1765:                                             ; preds = %1760
  %1766 = fcmp olt double %1763, 0x41EFFFFFFFE00000
  %1767 = select i1 %1766, double %1763, double 0x41EFFFFFFFE00000
  %1768 = fptoui double %1767 to i32
  br label %1769

1769:                                             ; preds = %1765, %1760, %1755
  %1770 = phi i32 [ %1759, %1755 ], [ 0, %1760 ], [ %1768, %1765 ]
  %1771 = load i64*, i64** %1666, align 8
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %1576) #6
  %1772 = ptrtoint i64* %1771 to i64
  store i32 3, i32* %1577, align 8
  store i32 4, i32* %1578, align 4
  store i8 0, i8* %1579, align 8
  store i32 0, i32* %1580, align 4
  store i32 0, i32* %1581, align 8
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %1582, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1654, i8 0, i64 16, i1 false) #6
  store i64* %1771, i64** %1584, align 8
  store i64* null, i64** %1585, align 8
  store i64 %1772, i64* %1587, align 8
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %1655, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"* nonnull %7) #6
  %1773 = load i32, i32* %1578, align 4
  %1774 = icmp eq i32 %1773, 4
  br i1 %1774, label %1775, label %1779

1775:                                             ; preds = %1769
  %1776 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %1589, align 8
  %1777 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %1776, i64 160
  %1778 = bitcast %"class.v8::internal::Factory"* %1777 to i64*
  br label %1781

1779:                                             ; preds = %1769
  %1780 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %7, i1 zeroext false) #6
  br label %1781

1781:                                             ; preds = %1779, %1775
  %1782 = phi i64* [ %1780, %1779 ], [ %1778, %1775 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %1576) #6
  %1783 = icmp eq i64* %1782, null
  br i1 %1783, label %1784, label %1786

1784:                                             ; preds = %1781
  %1785 = load i64, i64* %1619, align 8
  br label %2347

1786:                                             ; preds = %1781
  %1787 = load i64, i64* %1782, align 8
  %1788 = and i64 %1787, 1
  %1789 = icmp eq i64 %1788, 0
  br i1 %1789, label %1801, label %1790

1790:                                             ; preds = %1786
  %1791 = and i64 %1787, -4294967296
  %1792 = add i64 %1787, -1
  %1793 = inttoptr i64 %1792 to i32*
  %1794 = load atomic i32, i32* %1793 monotonic, align 4
  %1795 = zext i32 %1794 to i64
  %1796 = or i64 %1791, %1795
  %1797 = add i64 %1796, 7
  %1798 = inttoptr i64 %1797 to i16*
  %1799 = load atomic i16, i16* %1798 monotonic, align 2
  %1800 = icmp ult i16 %1799, 64
  br i1 %1800, label %1808, label %1801

1801:                                             ; preds = %1790, %1786
  %1802 = call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* nonnull %1782) #6
  %1803 = icmp eq i64* %1802, null
  br i1 %1803, label %1806, label %1804

1804:                                             ; preds = %1801
  %1805 = load i64, i64* %1802, align 8
  br label %1808

1806:                                             ; preds = %1801
  %1807 = load i64, i64* %1619, align 8
  br label %2347

1808:                                             ; preds = %1804, %1790
  %1809 = phi i64 [ %1805, %1804 ], [ %1787, %1790 ]
  %1810 = phi i64* [ %1802, %1804 ], [ %1782, %1790 ]
  %1811 = add i64 %1809, 7
  %1812 = inttoptr i64 %1811 to i32*
  %1813 = load i32, i32* %1812, align 4
  %1814 = load i64*, i64** %1666, align 8
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %1591) #6
  %1815 = ptrtoint i64* %1814 to i64
  %1816 = load i64, i64* %1590, align 8
  %1817 = load i64, i64* %1276, align 8
  %1818 = add i64 %1816, -1
  %1819 = inttoptr i64 %1818 to i32*
  %1820 = load atomic i32, i32* %1819 monotonic, align 4
  %1821 = and i64 %1817, 4294967295
  %1822 = icmp eq i64 %1821, 0
  call void @llvm.assume(i1 %1822) #6
  %1823 = zext i32 %1820 to i64
  %1824 = or i64 %1817, %1823
  %1825 = add i64 %1824, 7
  %1826 = inttoptr i64 %1825 to i16*
  %1827 = load atomic i16, i16* %1826 monotonic, align 2
  %1828 = icmp eq i16 %1827, 64
  br i1 %1828, label %1829, label %1835

1829:                                             ; preds = %1808
  %1830 = add i64 %1816, 7
  %1831 = inttoptr i64 %1830 to i32*
  %1832 = load i32, i32* %1831, align 4
  %1833 = and i32 %1832, 1
  %1834 = icmp eq i32 %1833, 0
  br i1 %1834, label %1835, label %1836

1835:                                             ; preds = %1829, %1808
  br label %1836

1836:                                             ; preds = %1835, %1829
  %1837 = phi i32 [ 3, %1835 ], [ 0, %1829 ]
  store i32 %1837, i32* %1592, align 8
  store i32 4, i32* %1593, align 4
  store i8 0, i8* %1594, align 8
  store i32 0, i32* %1595, align 4
  store i32 0, i32* %1596, align 8
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %1597, align 8
  store i64* %1590, i64** %1598, align 8
  store i64* null, i64** %1599, align 8
  store i64* %1814, i64** %1600, align 8
  store i64* null, i64** %1601, align 8
  store i64 %1815, i64* %1603, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1605, i8 -1, i64 16, i1 false) #6
  %1838 = and i64 %1816, -4294967296
  %1839 = load atomic i32, i32* %1819 monotonic, align 4
  %1840 = zext i32 %1839 to i64
  %1841 = or i64 %1838, %1840
  %1842 = add i64 %1841, 7
  %1843 = inttoptr i64 %1842 to i16*
  %1844 = load atomic i16, i16* %1843 monotonic, align 2
  %1845 = and i16 %1844, -32
  %1846 = icmp eq i16 %1845, 32
  br i1 %1846, label %1847, label %1850

1847:                                             ; preds = %1836
  %1848 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %1572, align 8
  %1849 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %1848, %"class.v8::internal::Isolate"* %2, i64* %1590) #6
  br label %1850

1850:                                             ; preds = %1847, %1836
  %1851 = phi i64* [ %1849, %1847 ], [ %1590, %1836 ]
  store i64* %1851, i64** %1598, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %6) #6
  %1852 = load i32, i32* %1593, align 4
  %1853 = icmp eq i32 %1852, 4
  br i1 %1853, label %1854, label %1858

1854:                                             ; preds = %1850
  %1855 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %1606, align 8
  %1856 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %1855, i64 160
  %1857 = bitcast %"class.v8::internal::Factory"* %1856 to i64*
  br label %1860

1858:                                             ; preds = %1850
  %1859 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %6, i1 zeroext false) #6
  br label %1860

1860:                                             ; preds = %1858, %1854
  %1861 = phi i64* [ %1859, %1858 ], [ %1857, %1854 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %1591) #6
  %1862 = icmp eq i64* %1861, null
  br i1 %1862, label %1863, label %1865

1863:                                             ; preds = %1860
  %1864 = load i64, i64* %1619, align 8
  br label %2347

1865:                                             ; preds = %1860
  %1866 = load i64, i64* %1861, align 8
  %1867 = and i64 %1866, 1
  %1868 = icmp eq i64 %1867, 0
  br i1 %1868, label %1876, label %1869

1869:                                             ; preds = %1865
  %1870 = call i64* @_ZN2v88internal6Object16ConvertToIntegerEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* nonnull %1861) #6
  %1871 = icmp eq i64* %1870, null
  br i1 %1871, label %1874, label %1872

1872:                                             ; preds = %1869
  %1873 = load i64, i64* %1870, align 8
  br label %1876

1874:                                             ; preds = %1869
  %1875 = load i64, i64* %1619, align 8
  br label %2347

1876:                                             ; preds = %1872, %1865
  %1877 = phi i64 [ %1873, %1872 ], [ %1866, %1865 ]
  %1878 = and i64 %1877, 1
  %1879 = icmp eq i64 %1878, 0
  br i1 %1879, label %1880, label %1885

1880:                                             ; preds = %1876
  %1881 = trunc i64 %1877 to i32
  %1882 = ashr i32 %1881, 1
  %1883 = icmp slt i32 %1881, 2
  %1884 = select i1 %1883, i32 0, i32 %1882
  br label %1894

1885:                                             ; preds = %1876
  %1886 = add i64 %1877, 3
  %1887 = inttoptr i64 %1886 to double*
  %1888 = load double, double* %1887, align 1
  %1889 = fcmp ult double %1888, 1.000000e+00
  br i1 %1889, label %1894, label %1890

1890:                                             ; preds = %1885
  %1891 = fcmp olt double %1888, 0x41EFFFFFFFE00000
  %1892 = select i1 %1891, double %1888, double 0x41EFFFFFFFE00000
  %1893 = fptoui double %1892 to i32
  br label %1894

1894:                                             ; preds = %1890, %1885, %1880
  %1895 = phi i32 [ %1884, %1880 ], [ 0, %1885 ], [ %1893, %1890 ]
  %1896 = icmp ult i32 %1271, %1895
  %1897 = select i1 %1896, i32 %1271, i32 %1895
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %1607) #6
  store %"struct.std::__1::aligned_storage<64, 8>::type"* %1608, %"struct.std::__1::aligned_storage<64, 8>::type"** %1609, align 8
  store %"struct.std::__1::aligned_storage<64, 8>::type"* %1608, %"struct.std::__1::aligned_storage<64, 8>::type"** %1611, align 8
  store %"struct.std::__1::aligned_storage<64, 8>::type"* %1613, %"struct.std::__1::aligned_storage<64, 8>::type"** %1614, align 8
  %1898 = icmp eq i32 %1770, 0
  %1899 = load i64*, i64** %1666, align 8
  br i1 %1898, label %1958, label %1900

1900:                                             ; preds = %1894
  %1901 = zext i32 %1770 to i64
  br label %1902

1902:                                             ; preds = %1951, %1900
  %1903 = phi i64 [ 0, %1900 ], [ %1955, %1951 ]
  %1904 = phi i64* [ %1899, %1900 ], [ %1956, %1951 ]
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %1615) #6
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %5, %"class.v8::internal::Isolate"* %2, i64* %1904, i64* null, i64 %1903, i64* %1904, i32 3) #6
  %1905 = load i32, i32* %1616, align 4
  %1906 = icmp eq i32 %1905, 4
  br i1 %1906, label %1907, label %1911

1907:                                             ; preds = %1902
  %1908 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %1618, align 8
  %1909 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %1908, i64 160
  %1910 = bitcast %"class.v8::internal::Factory"* %1909 to i64*
  br label %1913

1911:                                             ; preds = %1902
  %1912 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %5, i1 zeroext false) #6
  br label %1913

1913:                                             ; preds = %1911, %1907
  %1914 = phi i64* [ %1912, %1911 ], [ %1910, %1907 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %1615) #6
  %1915 = icmp eq i64* %1914, null
  br i1 %1915, label %1916, label %1918

1916:                                             ; preds = %1913
  %1917 = load i64, i64* %1619, align 8
  br label %2338

1918:                                             ; preds = %1913
  %1919 = load i64, i64* %1914, align 8
  %1920 = load i64, i64* %1437, align 8
  %1921 = trunc i64 %1919 to i32
  %1922 = trunc i64 %1920 to i32
  %1923 = icmp eq i32 %1921, %1922
  br i1 %1923, label %1943, label %1924

1924:                                             ; preds = %1918
  %1925 = and i64 %1919, 1
  %1926 = icmp eq i64 %1925, 0
  br i1 %1926, label %1938, label %1927

1927:                                             ; preds = %1924
  %1928 = and i64 %1919, -4294967296
  %1929 = add i64 %1919, -1
  %1930 = inttoptr i64 %1929 to i32*
  %1931 = load atomic i32, i32* %1930 monotonic, align 4
  %1932 = zext i32 %1931 to i64
  %1933 = or i64 %1928, %1932
  %1934 = add i64 %1933, 7
  %1935 = inttoptr i64 %1934 to i16*
  %1936 = load atomic i16, i16* %1935 monotonic, align 2
  %1937 = icmp ult i16 %1936, 64
  br i1 %1937, label %1943, label %1938

1938:                                             ; preds = %1927, %1924
  %1939 = call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* nonnull %1914) #6
  %1940 = icmp eq i64* %1939, null
  br i1 %1940, label %1941, label %1943

1941:                                             ; preds = %1938
  %1942 = load i64, i64* %1619, align 8
  br label %2338

1943:                                             ; preds = %1938, %1927, %1918
  %1944 = phi i64* [ %1914, %1918 ], [ %1939, %1938 ], [ %1914, %1927 ]
  %1945 = ptrtoint i64* %1944 to i64
  %1946 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %1610, align 8
  %1947 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %1612, align 8
  %1948 = icmp eq %"class.v8::internal::Handle.1169"* %1946, %1947
  br i1 %1948, label %1949, label %1951, !prof !2

1949:                                             ; preds = %1943
  %1950 = call %"class.v8::internal::Handle.1169"* @_ZN2v84base11SmallVectorINS_8internal6HandleINS2_6ObjectEEELm8EE4GrowEv(%"class.v8::base::SmallVector.1203"* nonnull %24) #6
  br label %1951

1951:                                             ; preds = %1949, %1943
  %1952 = phi %"class.v8::internal::Handle.1169"* [ %1950, %1949 ], [ %1946, %1943 ]
  %1953 = bitcast %"class.v8::internal::Handle.1169"* %1952 to i64*
  store i64 %1945, i64* %1953, align 8
  %1954 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %1952, i64 1
  store %"class.v8::internal::Handle.1169"* %1954, %"class.v8::internal::Handle.1169"** %1610, align 8
  %1955 = add nuw nsw i64 %1903, 1
  %1956 = load i64*, i64** %1666, align 8
  %1957 = icmp eq i64 %1955, %1901
  br i1 %1957, label %1958, label %1902

1958:                                             ; preds = %1951, %1894
  %1959 = phi i64* [ %1899, %1894 ], [ %1956, %1951 ]
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %1621) #6
  %1960 = ptrtoint i64* %1959 to i64
  %1961 = load i64, i64* %1620, align 8
  %1962 = load i64, i64* %1276, align 8
  %1963 = add i64 %1961, -1
  %1964 = inttoptr i64 %1963 to i32*
  %1965 = load atomic i32, i32* %1964 monotonic, align 4
  %1966 = and i64 %1962, 4294967295
  %1967 = icmp eq i64 %1966, 0
  call void @llvm.assume(i1 %1967) #6
  %1968 = zext i32 %1965 to i64
  %1969 = or i64 %1962, %1968
  %1970 = add i64 %1969, 7
  %1971 = inttoptr i64 %1970 to i16*
  %1972 = load atomic i16, i16* %1971 monotonic, align 2
  %1973 = icmp eq i16 %1972, 64
  br i1 %1973, label %1974, label %1980

1974:                                             ; preds = %1958
  %1975 = add i64 %1961, 7
  %1976 = inttoptr i64 %1975 to i32*
  %1977 = load i32, i32* %1976, align 4
  %1978 = and i32 %1977, 1
  %1979 = icmp eq i32 %1978, 0
  br i1 %1979, label %1980, label %1981

1980:                                             ; preds = %1974, %1958
  br label %1981

1981:                                             ; preds = %1980, %1974
  %1982 = phi i32 [ 3, %1980 ], [ 0, %1974 ]
  store i32 %1982, i32* %1622, align 8
  store i32 4, i32* %1623, align 4
  store i8 0, i8* %1624, align 8
  store i32 0, i32* %1625, align 4
  store i32 0, i32* %1626, align 8
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %1627, align 8
  store i64* %1620, i64** %1628, align 8
  store i64* null, i64** %1629, align 8
  store i64* %1959, i64** %1630, align 8
  store i64* null, i64** %1631, align 8
  store i64 %1960, i64* %1633, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1635, i8 -1, i64 16, i1 false) #6
  %1983 = and i64 %1961, -4294967296
  %1984 = load atomic i32, i32* %1964 monotonic, align 4
  %1985 = zext i32 %1984 to i64
  %1986 = or i64 %1983, %1985
  %1987 = add i64 %1986, 7
  %1988 = inttoptr i64 %1987 to i16*
  %1989 = load atomic i16, i16* %1988 monotonic, align 2
  %1990 = and i16 %1989, -32
  %1991 = icmp eq i16 %1990, 32
  br i1 %1991, label %1992, label %1995

1992:                                             ; preds = %1981
  %1993 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %1572, align 8
  %1994 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %1993, %"class.v8::internal::Isolate"* %2, i64* %1620) #6
  br label %1995

1995:                                             ; preds = %1992, %1981
  %1996 = phi i64* [ %1994, %1992 ], [ %1620, %1981 ]
  store i64* %1996, i64** %1628, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %4) #6
  %1997 = load i32, i32* %1623, align 4
  %1998 = icmp eq i32 %1997, 4
  br i1 %1998, label %1999, label %2003

1999:                                             ; preds = %1995
  %2000 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %1636, align 8
  %2001 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %2000, i64 160
  %2002 = bitcast %"class.v8::internal::Factory"* %2001 to i64*
  br label %2005

2003:                                             ; preds = %1995
  %2004 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %4, i1 zeroext false) #6
  br label %2005

2005:                                             ; preds = %2003, %1999
  %2006 = phi i64* [ %2004, %2003 ], [ %2002, %1999 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %1621) #6
  %2007 = icmp eq i64* %2006, null
  br i1 %2007, label %2008, label %2010

2008:                                             ; preds = %2005
  %2009 = load i64, i64* %1619, align 8
  br label %2338

2010:                                             ; preds = %2005
  %2011 = ptrtoint i64* %2006 to i64
  %2012 = load i64, i64* %2006, align 8
  %2013 = load i64, i64* %1437, align 8
  %2014 = trunc i64 %2012 to i32
  %2015 = trunc i64 %2013 to i32
  %2016 = icmp eq i32 %2014, %2015
  br i1 %110, label %2017, label %2277

2017:                                             ; preds = %2010
  %2018 = icmp ugt i32 %1770, 65534
  br i1 %2018, label %2023, label %2019

2019:                                             ; preds = %2017
  %2020 = select i1 %2016, i32 2, i32 3
  %2021 = add nuw nsw i32 %2020, %1770
  %2022 = icmp ugt i32 %2021, 65534
  br i1 %2022, label %2023, label %2027

2023:                                             ; preds = %2019, %2017
  %2024 = call i64* @_ZN2v88internal7Factory13NewRangeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %76, i32 323, i64* null, i64* null, i64* null) #6
  %2025 = load i64, i64* %2024, align 8
  %2026 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %2, i64 %2025, %"class.v8::internal::MessageLocation"* null) #6
  br label %2338

2027:                                             ; preds = %2019
  %2028 = zext i32 %2021 to i64
  %2029 = shl nuw nsw i64 %2028, 3
  %2030 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %2029, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #20
  %2031 = icmp eq i8* %2030, null
  br i1 %2031, label %2032, label %2041

2032:                                             ; preds = %2027
  %2033 = call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #6
  %2034 = bitcast %"class.v8::Platform"* %2033 to void (%"class.v8::Platform"*)***
  %2035 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %2034, align 8
  %2036 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %2035, i64 3
  %2037 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %2036, align 8
  call void %2037(%"class.v8::Platform"* %2033) #6
  %2038 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %2029, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #20
  %2039 = icmp eq i8* %2038, null
  br i1 %2039, label %2040, label %2041

2040:                                             ; preds = %2032
  call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0)) #18
  unreachable

2041:                                             ; preds = %2032, %2027
  %2042 = phi i8* [ %2030, %2027 ], [ %2038, %2032 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2042, i8 0, i64 %2029, i1 false) #6
  %2043 = bitcast i8* %2042 to %"class.v8::internal::Handle.1169"*
  br i1 %1898, label %2157, label %2044

2044:                                             ; preds = %2041
  %2045 = zext i32 %1770 to i64
  %2046 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %1638, align 8
  %2047 = icmp ult i32 %1770, 4
  br i1 %2047, label %2048, label %2069

2048:                                             ; preds = %2155, %2069, %2044
  %2049 = phi i64 [ 0, %2069 ], [ 0, %2044 ], [ %2079, %2155 ]
  %2050 = sub nsw i64 %2045, %2049
  %2051 = xor i64 %2049, -1
  %2052 = add nsw i64 %2051, %2045
  %2053 = and i64 %2050, 7
  %2054 = icmp eq i64 %2053, 0
  br i1 %2054, label %2066, label %2055

2055:                                             ; preds = %2048, %2055
  %2056 = phi i64 [ %2059, %2055 ], [ %2049, %2048 ]
  %2057 = phi i64 [ %2064, %2055 ], [ %2053, %2048 ]
  %2058 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2046, i64 %2056
  %2059 = add nuw nsw i64 %2056, 1
  %2060 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2043, i64 %2056
  %2061 = bitcast %"class.v8::internal::Handle.1169"* %2058 to i64*
  %2062 = bitcast %"class.v8::internal::Handle.1169"* %2060 to i64*
  %2063 = load i64, i64* %2061, align 8
  store i64 %2063, i64* %2062, align 8
  %2064 = add i64 %2057, -1
  %2065 = icmp eq i64 %2064, 0
  br i1 %2065, label %2066, label %2055, !llvm.loop !6

2066:                                             ; preds = %2055, %2048
  %2067 = phi i64 [ %2049, %2048 ], [ %2059, %2055 ]
  %2068 = icmp ult i64 %2052, 7
  br i1 %2068, label %2157, label %2185

2069:                                             ; preds = %2044
  %2070 = bitcast %"class.v8::internal::Handle.1169"* %2046 to i8*
  %2071 = shl nuw nsw i64 %2045, 3
  %2072 = getelementptr i8, i8* %2042, i64 %2071
  %2073 = getelementptr %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2046, i64 %2045
  %2074 = bitcast %"class.v8::internal::Handle.1169"* %2073 to i8*
  %2075 = icmp ult i8* %2042, %2074
  %2076 = icmp ugt i8* %2072, %2070
  %2077 = and i1 %2075, %2076
  br i1 %2077, label %2048, label %2078

2078:                                             ; preds = %2069
  %2079 = and i64 %2045, 4294967292
  %2080 = add nsw i64 %2079, -4
  %2081 = lshr exact i64 %2080, 2
  %2082 = add nuw nsw i64 %2081, 1
  %2083 = and i64 %2082, 3
  %2084 = icmp ult i64 %2080, 12
  br i1 %2084, label %2136, label %2085

2085:                                             ; preds = %2078
  %2086 = sub nsw i64 %2082, %2083
  br label %2087

2087:                                             ; preds = %2087, %2085
  %2088 = phi i64 [ 0, %2085 ], [ %2133, %2087 ]
  %2089 = phi i64 [ %2086, %2085 ], [ %2134, %2087 ]
  %2090 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2046, i64 %2088
  %2091 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2043, i64 %2088
  %2092 = bitcast %"class.v8::internal::Handle.1169"* %2090 to <2 x i64>*
  %2093 = load <2 x i64>, <2 x i64>* %2092, align 8, !alias.scope !8
  %2094 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2090, i64 2
  %2095 = bitcast %"class.v8::internal::Handle.1169"* %2094 to <2 x i64>*
  %2096 = load <2 x i64>, <2 x i64>* %2095, align 8, !alias.scope !8
  %2097 = bitcast %"class.v8::internal::Handle.1169"* %2091 to <2 x i64>*
  store <2 x i64> %2093, <2 x i64>* %2097, align 8, !alias.scope !11, !noalias !8
  %2098 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2091, i64 2
  %2099 = bitcast %"class.v8::internal::Handle.1169"* %2098 to <2 x i64>*
  store <2 x i64> %2096, <2 x i64>* %2099, align 8, !alias.scope !11, !noalias !8
  %2100 = or i64 %2088, 4
  %2101 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2046, i64 %2100
  %2102 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2043, i64 %2100
  %2103 = bitcast %"class.v8::internal::Handle.1169"* %2101 to <2 x i64>*
  %2104 = load <2 x i64>, <2 x i64>* %2103, align 8, !alias.scope !8
  %2105 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2101, i64 2
  %2106 = bitcast %"class.v8::internal::Handle.1169"* %2105 to <2 x i64>*
  %2107 = load <2 x i64>, <2 x i64>* %2106, align 8, !alias.scope !8
  %2108 = bitcast %"class.v8::internal::Handle.1169"* %2102 to <2 x i64>*
  store <2 x i64> %2104, <2 x i64>* %2108, align 8, !alias.scope !11, !noalias !8
  %2109 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2102, i64 2
  %2110 = bitcast %"class.v8::internal::Handle.1169"* %2109 to <2 x i64>*
  store <2 x i64> %2107, <2 x i64>* %2110, align 8, !alias.scope !11, !noalias !8
  %2111 = or i64 %2088, 8
  %2112 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2046, i64 %2111
  %2113 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2043, i64 %2111
  %2114 = bitcast %"class.v8::internal::Handle.1169"* %2112 to <2 x i64>*
  %2115 = load <2 x i64>, <2 x i64>* %2114, align 8, !alias.scope !8
  %2116 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2112, i64 2
  %2117 = bitcast %"class.v8::internal::Handle.1169"* %2116 to <2 x i64>*
  %2118 = load <2 x i64>, <2 x i64>* %2117, align 8, !alias.scope !8
  %2119 = bitcast %"class.v8::internal::Handle.1169"* %2113 to <2 x i64>*
  store <2 x i64> %2115, <2 x i64>* %2119, align 8, !alias.scope !11, !noalias !8
  %2120 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2113, i64 2
  %2121 = bitcast %"class.v8::internal::Handle.1169"* %2120 to <2 x i64>*
  store <2 x i64> %2118, <2 x i64>* %2121, align 8, !alias.scope !11, !noalias !8
  %2122 = or i64 %2088, 12
  %2123 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2046, i64 %2122
  %2124 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2043, i64 %2122
  %2125 = bitcast %"class.v8::internal::Handle.1169"* %2123 to <2 x i64>*
  %2126 = load <2 x i64>, <2 x i64>* %2125, align 8, !alias.scope !8
  %2127 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2123, i64 2
  %2128 = bitcast %"class.v8::internal::Handle.1169"* %2127 to <2 x i64>*
  %2129 = load <2 x i64>, <2 x i64>* %2128, align 8, !alias.scope !8
  %2130 = bitcast %"class.v8::internal::Handle.1169"* %2124 to <2 x i64>*
  store <2 x i64> %2126, <2 x i64>* %2130, align 8, !alias.scope !11, !noalias !8
  %2131 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2124, i64 2
  %2132 = bitcast %"class.v8::internal::Handle.1169"* %2131 to <2 x i64>*
  store <2 x i64> %2129, <2 x i64>* %2132, align 8, !alias.scope !11, !noalias !8
  %2133 = add i64 %2088, 16
  %2134 = add i64 %2089, -4
  %2135 = icmp eq i64 %2134, 0
  br i1 %2135, label %2136, label %2087, !llvm.loop !13

2136:                                             ; preds = %2087, %2078
  %2137 = phi i64 [ 0, %2078 ], [ %2133, %2087 ]
  %2138 = icmp eq i64 %2083, 0
  br i1 %2138, label %2155, label %2139

2139:                                             ; preds = %2136, %2139
  %2140 = phi i64 [ %2152, %2139 ], [ %2137, %2136 ]
  %2141 = phi i64 [ %2153, %2139 ], [ %2083, %2136 ]
  %2142 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2046, i64 %2140
  %2143 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2043, i64 %2140
  %2144 = bitcast %"class.v8::internal::Handle.1169"* %2142 to <2 x i64>*
  %2145 = load <2 x i64>, <2 x i64>* %2144, align 8, !alias.scope !8
  %2146 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2142, i64 2
  %2147 = bitcast %"class.v8::internal::Handle.1169"* %2146 to <2 x i64>*
  %2148 = load <2 x i64>, <2 x i64>* %2147, align 8, !alias.scope !8
  %2149 = bitcast %"class.v8::internal::Handle.1169"* %2143 to <2 x i64>*
  store <2 x i64> %2145, <2 x i64>* %2149, align 8, !alias.scope !11, !noalias !8
  %2150 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2143, i64 2
  %2151 = bitcast %"class.v8::internal::Handle.1169"* %2150 to <2 x i64>*
  store <2 x i64> %2148, <2 x i64>* %2151, align 8, !alias.scope !11, !noalias !8
  %2152 = add i64 %2140, 4
  %2153 = add i64 %2141, -1
  %2154 = icmp eq i64 %2153, 0
  br i1 %2154, label %2155, label %2139, !llvm.loop !15

2155:                                             ; preds = %2139, %2136
  %2156 = icmp eq i64 %2079, %2045
  br i1 %2156, label %2157, label %2048

2157:                                             ; preds = %2066, %2185, %2155, %2041
  %2158 = sext i32 %1897 to i64
  %2159 = shl nsw i64 %2158, 1
  %2160 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %1574, align 8
  %2161 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %2160, null
  br i1 %2161, label %2165, label %2162

2162:                                             ; preds = %2157
  %2163 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %2160, i64 %2159) #6
  %2164 = ptrtoint i64* %2163 to i64
  br label %2176

2165:                                             ; preds = %2157
  %2166 = load i64*, i64** %1575, align 8
  %2167 = load i64*, i64** %35, align 8
  %2168 = icmp eq i64* %2166, %2167
  br i1 %2168, label %2169, label %2171

2169:                                             ; preds = %2165
  %2170 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %2171

2171:                                             ; preds = %2169, %2165
  %2172 = phi i64* [ %2170, %2169 ], [ %2166, %2165 ]
  %2173 = ptrtoint i64* %2172 to i64
  %2174 = add i64 %2173, 8
  %2175 = inttoptr i64 %2174 to i64*
  store i64* %2175, i64** %1575, align 8
  store i64 %2159, i64* %2172, align 8
  br label %2176

2176:                                             ; preds = %2171, %2162
  %2177 = phi i64 [ %2164, %2162 ], [ %2173, %2171 ]
  %2178 = add nuw nsw i32 %1770, 1
  %2179 = zext i32 %1770 to i64
  %2180 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2043, i64 %2179
  %2181 = bitcast %"class.v8::internal::Handle.1169"* %2180 to i64*
  store i64 %2177, i64* %2181, align 8
  %2182 = zext i32 %2178 to i64
  %2183 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2043, i64 %2182
  %2184 = bitcast %"class.v8::internal::Handle.1169"* %2183 to i64*
  store i64 %1650, i64* %2184, align 8
  br i1 %2016, label %2241, label %2236

2185:                                             ; preds = %2066, %2185
  %2186 = phi i64 [ %2230, %2185 ], [ %2067, %2066 ]
  %2187 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2046, i64 %2186
  %2188 = add nuw nsw i64 %2186, 1
  %2189 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2043, i64 %2186
  %2190 = bitcast %"class.v8::internal::Handle.1169"* %2187 to i64*
  %2191 = bitcast %"class.v8::internal::Handle.1169"* %2189 to i64*
  %2192 = load i64, i64* %2190, align 8
  store i64 %2192, i64* %2191, align 8
  %2193 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2046, i64 %2188
  %2194 = add nuw nsw i64 %2186, 2
  %2195 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2043, i64 %2188
  %2196 = bitcast %"class.v8::internal::Handle.1169"* %2193 to i64*
  %2197 = bitcast %"class.v8::internal::Handle.1169"* %2195 to i64*
  %2198 = load i64, i64* %2196, align 8
  store i64 %2198, i64* %2197, align 8
  %2199 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2046, i64 %2194
  %2200 = add nuw nsw i64 %2186, 3
  %2201 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2043, i64 %2194
  %2202 = bitcast %"class.v8::internal::Handle.1169"* %2199 to i64*
  %2203 = bitcast %"class.v8::internal::Handle.1169"* %2201 to i64*
  %2204 = load i64, i64* %2202, align 8
  store i64 %2204, i64* %2203, align 8
  %2205 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2046, i64 %2200
  %2206 = add nuw nsw i64 %2186, 4
  %2207 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2043, i64 %2200
  %2208 = bitcast %"class.v8::internal::Handle.1169"* %2205 to i64*
  %2209 = bitcast %"class.v8::internal::Handle.1169"* %2207 to i64*
  %2210 = load i64, i64* %2208, align 8
  store i64 %2210, i64* %2209, align 8
  %2211 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2046, i64 %2206
  %2212 = add nuw nsw i64 %2186, 5
  %2213 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2043, i64 %2206
  %2214 = bitcast %"class.v8::internal::Handle.1169"* %2211 to i64*
  %2215 = bitcast %"class.v8::internal::Handle.1169"* %2213 to i64*
  %2216 = load i64, i64* %2214, align 8
  store i64 %2216, i64* %2215, align 8
  %2217 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2046, i64 %2212
  %2218 = add nuw nsw i64 %2186, 6
  %2219 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2043, i64 %2212
  %2220 = bitcast %"class.v8::internal::Handle.1169"* %2217 to i64*
  %2221 = bitcast %"class.v8::internal::Handle.1169"* %2219 to i64*
  %2222 = load i64, i64* %2220, align 8
  store i64 %2222, i64* %2221, align 8
  %2223 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2046, i64 %2218
  %2224 = add nuw nsw i64 %2186, 7
  %2225 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2043, i64 %2218
  %2226 = bitcast %"class.v8::internal::Handle.1169"* %2223 to i64*
  %2227 = bitcast %"class.v8::internal::Handle.1169"* %2225 to i64*
  %2228 = load i64, i64* %2226, align 8
  store i64 %2228, i64* %2227, align 8
  %2229 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2046, i64 %2224
  %2230 = add nuw nsw i64 %2186, 8
  %2231 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2043, i64 %2224
  %2232 = bitcast %"class.v8::internal::Handle.1169"* %2229 to i64*
  %2233 = bitcast %"class.v8::internal::Handle.1169"* %2231 to i64*
  %2234 = load i64, i64* %2232, align 8
  store i64 %2234, i64* %2233, align 8
  %2235 = icmp eq i64 %2230, %2045
  br i1 %2235, label %2157, label %2185, !llvm.loop !16

2236:                                             ; preds = %2176
  %2237 = add nuw nsw i32 %1770, 2
  %2238 = zext i32 %2237 to i64
  %2239 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2043, i64 %2238
  %2240 = bitcast %"class.v8::internal::Handle.1169"* %2239 to i64*
  store i64 %2011, i64* %2240, align 8
  br label %2241

2241:                                             ; preds = %2236, %2176
  %2242 = call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %2, i64* %75, i64* %1437, i32 %2021, %"class.v8::internal::Handle.1169"* %2043) #6
  %2243 = icmp eq i64* %2242, null
  br i1 %2243, label %2244, label %2246

2244:                                             ; preds = %2241
  %2245 = load i64, i64* %1619, align 8
  br label %2269

2246:                                             ; preds = %2241
  %2247 = load i64, i64* %2242, align 8
  %2248 = and i64 %2247, 1
  %2249 = icmp eq i64 %2248, 0
  br i1 %2249, label %2261, label %2250

2250:                                             ; preds = %2246
  %2251 = and i64 %2247, -4294967296
  %2252 = add i64 %2247, -1
  %2253 = inttoptr i64 %2252 to i32*
  %2254 = load atomic i32, i32* %2253 monotonic, align 4
  %2255 = zext i32 %2254 to i64
  %2256 = or i64 %2251, %2255
  %2257 = add i64 %2256, 7
  %2258 = inttoptr i64 %2257 to i16*
  %2259 = load atomic i16, i16* %2258 monotonic, align 2
  %2260 = icmp ult i16 %2259, 64
  br i1 %2260, label %2264, label %2261

2261:                                             ; preds = %2250, %2246
  %2262 = call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* nonnull %2242) #6
  %2263 = icmp eq i64* %2262, null
  br i1 %2263, label %2267, label %2264

2264:                                             ; preds = %2261, %2250
  %2265 = phi i64* [ %2262, %2261 ], [ %2242, %2250 ]
  %2266 = ptrtoint i64* %2265 to i64
  br label %2269

2267:                                             ; preds = %2261
  %2268 = load i64, i64* %1619, align 8
  br label %2269

2269:                                             ; preds = %2267, %2264, %2244
  %2270 = phi i64 [ 0, %2244 ], [ 0, %2267 ], [ %2266, %2264 ]
  %2271 = phi i32 [ 1, %2244 ], [ 1, %2267 ], [ 0, %2264 ]
  %2272 = phi i64 [ %2245, %2244 ], [ %2268, %2267 ], [ %1659, %2264 ]
  %2273 = icmp eq i8* %2042, null
  br i1 %2273, label %2275, label %2274

2274:                                             ; preds = %2269
  call void @_ZdaPv(i8* nonnull %2042) #20
  br label %2275

2275:                                             ; preds = %2274, %2269
  %2276 = icmp eq i32 %2271, 0
  br i1 %2276, label %2320, label %2338

2277:                                             ; preds = %2010
  br i1 %2016, label %2297, label %2278

2278:                                             ; preds = %2277
  %2279 = and i64 %2012, 1
  %2280 = icmp eq i64 %2279, 0
  br i1 %2280, label %2292, label %2281

2281:                                             ; preds = %2278
  %2282 = and i64 %2012, -4294967296
  %2283 = add i64 %2012, -1
  %2284 = inttoptr i64 %2283 to i32*
  %2285 = load atomic i32, i32* %2284 monotonic, align 4
  %2286 = zext i32 %2285 to i64
  %2287 = or i64 %2282, %2286
  %2288 = add i64 %2287, 7
  %2289 = inttoptr i64 %2288 to i16*
  %2290 = load atomic i16, i16* %2289 monotonic, align 2
  %2291 = icmp ugt i16 %2290, 185
  br i1 %2291, label %2297, label %2292

2292:                                             ; preds = %2281, %2278
  %2293 = call i64* @_ZN2v88internal6Object12ToObjectImplEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"* %2, i64* nonnull %2006, i8* null) #6
  %2294 = icmp eq i64* %2293, null
  br i1 %2294, label %2295, label %2297

2295:                                             ; preds = %2292
  %2296 = load i64, i64* %1619, align 8
  br label %2338

2297:                                             ; preds = %2292, %2281, %2277
  %2298 = phi i64* [ %2006, %2277 ], [ %2293, %2292 ], [ %2006, %2281 ]
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1637) #6
  %2299 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %1638, align 8
  %2300 = load i64, i64* %1639, align 8
  %2301 = ptrtoint %"class.v8::internal::Handle.1169"* %2299 to i64
  %2302 = sub i64 %2300, %2301
  %2303 = ashr exact i64 %2302, 3
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2v88internal12_GLOBAL__N_117VectorBackedMatchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1640, align 8
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %1641, align 8
  store i64* null, i64** %1642, align 8
  store i64* %1810, i64** %1643, align 8
  store i32 %1897, i32* %1644, align 8
  store %"class.v8::internal::Handle.1169"* %2299, %"class.v8::internal::Handle.1169"** %1645, align 8
  store i64 %2303, i64* %1646, align 8
  store i64* null, i64** %1647, align 8
  %2304 = call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %77, i8 zeroext 0) #6
  store i64* %2304, i64** %1642, align 8
  %2305 = load i64, i64* %2298, align 8
  %2306 = load i64, i64* %1437, align 8
  %2307 = trunc i64 %2305 to i32
  %2308 = trunc i64 %2306 to i32
  %2309 = icmp eq i32 %2307, %2308
  %2310 = xor i1 %2309, true
  %2311 = zext i1 %2310 to i8
  store i8 %2311, i8* %1648, align 8
  br i1 %2309, label %2313, label %2312

2312:                                             ; preds = %2297
  store i64* %2298, i64** %1647, align 8
  br label %2313

2313:                                             ; preds = %2312, %2297
  %2314 = call i64* @_ZN2v88internal6String15GetSubstitutionEPNS0_7IsolateEPNS1_5MatchENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"* %2, %"class.v8::internal::String::Match"* nonnull %1649, i64* %111, i32 0) #6
  %2315 = icmp eq i64* %2314, null
  br i1 %2315, label %2318, label %2316

2316:                                             ; preds = %2313
  %2317 = ptrtoint i64* %2314 to i64
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1637) #6
  br label %2320

2318:                                             ; preds = %2313
  %2319 = load i64, i64* %1619, align 8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1637) #6
  br label %2338

2320:                                             ; preds = %2316, %2275
  %2321 = phi i64 [ %2270, %2275 ], [ %2317, %2316 ]
  %2322 = phi i64 [ %2272, %2275 ], [ %1659, %2316 ]
  %2323 = icmp ult i32 %1897, %1660
  br i1 %2323, label %2338, label %2324

2324:                                             ; preds = %2320
  %2325 = icmp eq i32 %1660, 0
  br i1 %2325, label %2326, label %2332

2326:                                             ; preds = %2324
  %2327 = load i64, i64* %77, align 8
  %2328 = add i64 %2327, 7
  %2329 = inttoptr i64 %2328 to i32*
  %2330 = load i32, i32* %2329, align 4
  %2331 = icmp eq i32 %2330, %1897
  br i1 %2331, label %2334, label %2332

2332:                                             ; preds = %2326, %2324
  %2333 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %76, i64* %77, i32 %1660, i32 %1897) #6
  br label %2334

2334:                                             ; preds = %2332, %2326
  %2335 = phi i64* [ %2333, %2332 ], [ %77, %2326 ]
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %23, i64* %2335) #6
  %2336 = inttoptr i64 %2321 to i64*
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %23, i64* %2336) #6
  %2337 = add i32 %1897, %1813
  br label %2338

2338:                                             ; preds = %2334, %2320, %2318, %2295, %2275, %2023, %2008, %1941, %1916
  %2339 = phi i32 [ %1660, %1941 ], [ %1660, %1916 ], [ %1660, %2008 ], [ %1660, %2275 ], [ %1660, %2318 ], [ %1660, %2295 ], [ %2337, %2334 ], [ %1660, %2320 ], [ %1660, %2023 ]
  %2340 = phi i32 [ 1, %1941 ], [ 1, %1916 ], [ 1, %2008 ], [ 1, %2275 ], [ 1, %2318 ], [ 1, %2295 ], [ 0, %2334 ], [ 0, %2320 ], [ 1, %2023 ]
  %2341 = phi i64 [ %1942, %1941 ], [ %1917, %1916 ], [ %2009, %2008 ], [ %2272, %2275 ], [ %2319, %2318 ], [ %2296, %2295 ], [ %2322, %2334 ], [ %2322, %2320 ], [ %2026, %2023 ]
  %2342 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %1638, align 8
  %2343 = icmp eq %"class.v8::internal::Handle.1169"* %2342, %1651
  br i1 %2343, label %2346, label %2344

2344:                                             ; preds = %2338
  %2345 = bitcast %"class.v8::internal::Handle.1169"* %2342 to i8*
  call void @free(i8* %2345) #6
  br label %2346

2346:                                             ; preds = %2344, %2338
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %1607) #6
  br label %2347

2347:                                             ; preds = %2346, %1874, %1863, %1806, %1784, %1749, %1716
  %2348 = phi i32 [ %1660, %1749 ], [ %1660, %1716 ], [ %1660, %1784 ], [ %1660, %1806 ], [ %2339, %2346 ], [ %1660, %1874 ], [ %1660, %1863 ]
  %2349 = phi i32 [ 1, %1749 ], [ 1, %1716 ], [ 1, %1784 ], [ 1, %1806 ], [ %2340, %2346 ], [ 1, %1874 ], [ 1, %1863 ]
  %2350 = phi i64 [ %1750, %1749 ], [ %1717, %1716 ], [ %1785, %1784 ], [ %1807, %1806 ], [ %2341, %2346 ], [ %1875, %1874 ], [ %1864, %1863 ]
  br i1 %1652, label %2363, label %2351

2351:                                             ; preds = %2347
  %2352 = inttoptr i64 %1662 to i64*
  %2353 = load i64*, i64** %1653, align 8
  store i64 %1662, i64* %33, align 8
  %2354 = load i32, i32* %37, align 8
  %2355 = add nsw i32 %2354, -1
  store i32 %2355, i32* %37, align 8
  %2356 = load i64*, i64** %35, align 8
  %2357 = icmp eq i64* %2356, %1663
  br i1 %2357, label %2360, label %2358

2358:                                             ; preds = %2351
  store i64* %1663, i64** %35, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %2359 = load i64*, i64** %1653, align 8
  br label %2360

2360:                                             ; preds = %2358, %2351
  %2361 = phi i64* [ %2359, %2358 ], [ %2352, %2351 ]
  %2362 = phi i64* [ %1663, %2358 ], [ %2353, %2351 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %2361, i64* %2362) #6
  br label %2363

2363:                                             ; preds = %2360, %2347
  %2364 = icmp eq i32 %2349, 0
  %2365 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %1661, i64 1
  br i1 %2364, label %1656, label %2387

2366:                                             ; preds = %1656, %1549
  %2367 = phi i32 [ 0, %1549 ], [ %2348, %1656 ]
  %2368 = icmp ult i32 %2367, %1271
  br i1 %2368, label %2369, label %2381

2369:                                             ; preds = %2366
  %2370 = icmp eq i32 %2367, 0
  br i1 %2370, label %2371, label %2377

2371:                                             ; preds = %2369
  %2372 = load i64, i64* %77, align 8
  %2373 = add i64 %2372, 7
  %2374 = inttoptr i64 %2373 to i32*
  %2375 = load i32, i32* %2374, align 4
  %2376 = icmp eq i32 %2375, %1271
  br i1 %2376, label %2379, label %2377

2377:                                             ; preds = %2371, %2369
  %2378 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %76, i64* %77, i32 %2367, i32 %1271) #6
  br label %2379

2379:                                             ; preds = %2377, %2371
  %2380 = phi i64* [ %2378, %2377 ], [ %77, %2371 ]
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %23, i64* %2380) #6
  br label %2381

2381:                                             ; preds = %2379, %2366
  %2382 = call i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %23) #6
  %2383 = icmp eq i64* %2382, null
  %2384 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %2385 = select i1 %2383, i64* %2384, i64* %2382
  %2386 = load i64, i64* %2385, align 8
  br label %2387

2387:                                             ; preds = %2363, %2381
  %2388 = phi i64 [ %2386, %2381 ], [ %2350, %2363 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1550) #6
  br label %2389

2389:                                             ; preds = %2387, %1546, %1543, %1540, %1520
  %2390 = phi i64 [ %2388, %2387 ], [ %1545, %1543 ], [ %1548, %1546 ], [ %1542, %1540 ], [ %1522, %1520 ]
  %2391 = getelementptr inbounds %"class.v8::base::SmallVector.1203", %"class.v8::base::SmallVector.1203"* %22, i64 0, i32 0
  %2392 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %2391, align 8
  %2393 = bitcast %"struct.std::__1::aligned_storage<64, 8>::type"* %1430 to %"class.v8::internal::Handle.1169"*
  %2394 = icmp eq %"class.v8::internal::Handle.1169"* %2392, %2393
  br i1 %2394, label %2397, label %2395

2395:                                             ; preds = %2389
  %2396 = bitcast %"class.v8::internal::Handle.1169"* %2392 to i8*
  call void @free(i8* %2396) #6
  br label %2397

2397:                                             ; preds = %2395, %2389
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %1429) #6
  br label %2398

2398:                                             ; preds = %2397, %1424, %1413, %1338, %1264, %1261, %106
  %2399 = phi i64 [ %108, %106 ], [ %1266, %1264 ], [ %1263, %1261 ], [ %1340, %1338 ], [ %2390, %2397 ], [ %1426, %1424 ], [ %1415, %1413 ]
  %2400 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %2400, label %2414, label %2401

2401:                                             ; preds = %2398
  %2402 = inttoptr i64 %34 to i64*
  %2403 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %32, i64 0, i32 0
  %2404 = load i64*, i64** %2403, align 8
  store i64 %34, i64* %33, align 8
  %2405 = load i32, i32* %37, align 8
  %2406 = add nsw i32 %2405, -1
  store i32 %2406, i32* %37, align 8
  %2407 = load i64*, i64** %35, align 8
  %2408 = icmp eq i64* %2407, %36
  br i1 %2408, label %2411, label %2409

2409:                                             ; preds = %2401
  store i64* %36, i64** %35, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %2410 = load i64*, i64** %2403, align 8
  br label %2411

2411:                                             ; preds = %2409, %2401
  %2412 = phi i64* [ %2410, %2409 ], [ %2402, %2401 ]
  %2413 = phi i64* [ %36, %2409 ], [ %2404, %2401 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %2412, i64* %2413) #6
  br label %2414

2414:                                             ; preds = %2411, %2398, %28
  %2415 = phi i64 [ %29, %28 ], [ %2399, %2398 ], [ %2399, %2411 ]
  ret i64 %2415
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL29Stats_Runtime_RegExpReplaceRTEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #5 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1163"], align 16
  %5 = alloca %"class.v8::internal::LookupIterator", align 8
  %6 = alloca %"class.v8::internal::LookupIterator", align 8
  %7 = alloca %"class.v8::internal::LookupIterator", align 8
  %8 = alloca %"class.v8::internal::LookupIterator", align 8
  %9 = alloca %"class.v8::internal::LookupIterator", align 8
  %10 = alloca %"class.v8::internal::LookupIterator", align 8
  %11 = alloca %"class.v8::internal::LookupIterator", align 8
  %12 = alloca %"class.v8::internal::LookupIterator", align 8
  %13 = alloca %"class.v8::internal::RegExpGlobalCache", align 8
  %14 = alloca %"class.v8::internal::RegExpGlobalCache", align 8
  %15 = alloca %"class.v8::internal::CompiledReplacement", align 8
  %16 = alloca %"class.v8::internal::RegExpGlobalCache", align 8
  %17 = alloca %"class.v8::internal::ReplacementStringBuilder", align 8
  %18 = alloca %"class.v8::internal::IncrementalStringBuilder", align 8
  %19 = alloca %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", align 8
  %20 = alloca %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", align 8
  %21 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %22 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %23 = alloca %"class.v8::base::SmallVector.1203", align 8
  %24 = alloca %"class.v8::internal::IncrementalStringBuilder", align 8
  %25 = alloca %"class.v8::base::SmallVector.1203", align 8
  %26 = alloca %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", align 8
  %27 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %28 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %29 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %29) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 40, i1 false) #6
  %30 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1153", %"struct.std::__1::atomic.1153"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %38, label %32, !prof !3

32:                                               ; preds = %3
  %33 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %27, i64 0, i32 0
  %34 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %27, i64 0, i32 1
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %36 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %36, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %37, %"class.v8::internal::RuntimeCallStats"** %33, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %37, %"class.v8::internal::RuntimeCallTimer"* %34, i32 547) #6
  br label %38

38:                                               ; preds = %3, %32
  %39 = load atomic i64, i64* @_ZZN2v88internalL29Stats_Runtime_RegExpReplaceRTEiPmPNS0_7IsolateEE29trace_event_unique_atomic1786 monotonic, align 8
  %40 = inttoptr i64 %39 to i8*
  %41 = icmp eq i64 %39, 0
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %44 = bitcast %"class.v8::TracingController"* %43 to i8* (%"class.v8::TracingController"*, i8*)***
  %45 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %44, align 8
  %46 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %45, i64 2
  %47 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %46, align 8
  %48 = call i8* %47(%"class.v8::TracingController"* %43, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0)) #6
  %49 = ptrtoint i8* %48 to i64
  store atomic volatile i64 %49, i64* @_ZZN2v88internalL29Stats_Runtime_RegExpReplaceRTEiPmPNS0_7IsolateEE29trace_event_unique_atomic1786 monotonic, align 8
  br label %50

50:                                               ; preds = %38, %42
  %51 = phi i8* [ %40, %38 ], [ %48, %42 ]
  %52 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %52) #6
  %53 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %28, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %53, align 8
  %54 = load atomic i8, i8* %51 monotonic, align 1
  %55 = and i8 %54, 5
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %88, label %57

57:                                               ; preds = %50
  %58 = bitcast [2 x %"class.std::__1::unique_ptr.1163"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #6
  %59 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %58, i8 0, i64 16, i1 false) #6
  %60 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %61 = bitcast %"class.v8::TracingController"* %60 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)***
  %62 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*** %61, align 8
  %63 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)** %62, i64 3
  %64 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)** %63, align 8
  %65 = call i64 %64(%"class.v8::TracingController"* %60, i8 signext 88, i8* %51, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.34, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1163"* nonnull %59, i32 0) #6
  %66 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %67 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %66, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %66, align 8
  %68 = icmp eq %"class.v8::ConvertableToTraceFormat"* %67, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %57
  %70 = bitcast %"class.v8::ConvertableToTraceFormat"* %67 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %71 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %71, i64 1
  %73 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %72, align 8
  call void %73(%"class.v8::ConvertableToTraceFormat"* nonnull %67) #6
  br label %74

74:                                               ; preds = %69, %57
  %75 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %75, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %75, align 16
  %77 = icmp eq %"class.v8::ConvertableToTraceFormat"* %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %74
  %79 = bitcast %"class.v8::ConvertableToTraceFormat"* %76 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %80 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %80, i64 1
  %82 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %81, align 8
  call void %82(%"class.v8::ConvertableToTraceFormat"* nonnull %76) #6
  br label %83

83:                                               ; preds = %74, %78
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #6
  %84 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %28, i64 0, i32 1
  %85 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %84, i64 0, i32 0
  store i8* %51, i8** %85, align 8
  %86 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %28, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.34, i64 0, i64 0), i8** %86, align 8
  %87 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %28, i64 0, i32 1, i32 2
  store i64 %65, i64* %87, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %84, %"struct.v8::internal::tracing::ScopedTracer::Data"** %53, align 8
  br label %88

88:                                               ; preds = %50, %83
  %89 = ptrtoint i64* %1 to i64
  %90 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %91 = bitcast %"struct.v8::internal::HandleScopeData"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %94 = load i64*, i64** %93, align 8
  %95 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %96 = load i32, i32* %95, align 8
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %95, align 8
  %98 = load i64, i64* %1, align 8
  %99 = and i64 %98, 1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %112, label %101, !prof !4

101:                                              ; preds = %88
  %102 = and i64 %98, -4294967296
  %103 = add i64 %98, -1
  %104 = inttoptr i64 %103 to i32*
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = zext i32 %105 to i64
  %107 = or i64 %102, %106
  %108 = add i64 %107, 7
  %109 = inttoptr i64 %108 to i16*
  %110 = load atomic i16, i16* %109 monotonic, align 2
  %111 = icmp ugt i16 %110, 185
  br i1 %111, label %113, label %112, !prof !3

112:                                              ; preds = %101, %88
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0)) #18
  unreachable

113:                                              ; preds = %101
  %114 = add i64 %89, -8
  %115 = inttoptr i64 %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = and i64 %116, 1
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %130, label %119, !prof !4

119:                                              ; preds = %113
  %120 = and i64 %116, -4294967296
  %121 = add i64 %116, -1
  %122 = inttoptr i64 %121 to i32*
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = zext i32 %123 to i64
  %125 = or i64 %120, %124
  %126 = add i64 %125, 7
  %127 = inttoptr i64 %126 to i16*
  %128 = load atomic i16, i16* %127 monotonic, align 2
  %129 = icmp ult i16 %128, 64
  br i1 %129, label %131, label %130, !prof !3

130:                                              ; preds = %119, %113
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

131:                                              ; preds = %119
  %132 = add i64 %89, -16
  %133 = inttoptr i64 %132 to i64*
  %134 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %135 = call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %115, i8 zeroext 0) #6
  %136 = load i64, i64* %133, align 8
  %137 = and i64 %136, 1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %159, label %139

139:                                              ; preds = %131
  %140 = and i64 %136, -4294967296
  %141 = add i64 %136, -1
  %142 = inttoptr i64 %141 to i32*
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = zext i32 %143 to i64
  %145 = or i64 %140, %144
  %146 = add i64 %145, 9
  %147 = inttoptr i64 %146 to i8*
  %148 = load atomic i8, i8* %147 monotonic, align 1
  %149 = and i8 %148, 2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %151, label %167

151:                                              ; preds = %139
  %152 = load atomic i32, i32* %142 monotonic, align 4
  %153 = zext i32 %152 to i64
  %154 = or i64 %140, %153
  %155 = add i64 %154, 7
  %156 = inttoptr i64 %155 to i16*
  %157 = load atomic i16, i16* %156 monotonic, align 2
  %158 = icmp ult i16 %157, 64
  br i1 %158, label %161, label %159

159:                                              ; preds = %151, %131
  %160 = call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* %133) #6
  br label %161

161:                                              ; preds = %159, %151
  %162 = phi i64* [ %160, %159 ], [ %133, %151 ]
  %163 = icmp eq i64* %162, null
  br i1 %163, label %164, label %167

164:                                              ; preds = %161
  %165 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %166 = load i64, i64* %165, align 8
  br label %2456

167:                                              ; preds = %161, %139
  %168 = phi i1 [ true, %139 ], [ false, %161 ]
  %169 = phi i64* [ null, %139 ], [ %162, %161 ]
  %170 = call zeroext i1 @_ZN2v88internal11RegExpUtils18IsUnmodifiedRegExpEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"* %2, i64* %1) #6
  br i1 %170, label %171, label %1325

171:                                              ; preds = %167
  br i1 %168, label %172, label %173, !prof !2

172:                                              ; preds = %171
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.35, i64 0, i64 0)) #18
  unreachable

173:                                              ; preds = %171
  %174 = load i64, i64* %1, align 8
  %175 = and i64 %174, -4294967296
  %176 = add i64 %174, 11
  %177 = inttoptr i64 %176 to i32*
  %178 = load i32, i32* %177, align 4
  %179 = zext i32 %178 to i64
  %180 = or i64 %175, %179
  %181 = add i64 %180, 15
  %182 = inttoptr i64 %181 to i32*
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = and i32 %183, 16
  %187 = icmp ne i32 %186, 0
  %188 = call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %169, i8 zeroext 0) #6
  %189 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load i64, i64* %189, align 8
  %191 = and i64 %190, -4294967296
  %192 = add i64 %190, -1
  %193 = inttoptr i64 %192 to i32*
  %194 = load atomic i32, i32* %193 monotonic, align 4
  %195 = zext i32 %194 to i64
  %196 = or i64 %191, %195
  %197 = add i64 %196, 19
  %198 = inttoptr i64 %197 to i32*
  %199 = load i32, i32* %198, align 4
  %200 = zext i32 %199 to i64
  %201 = or i64 %191, %200
  %202 = add i64 %201, 631
  %203 = inttoptr i64 %202 to i32*
  %204 = load atomic i32, i32* %203 monotonic, align 4
  %205 = zext i32 %204 to i64
  %206 = or i64 %191, %205
  %207 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %208 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %207, align 8
  %209 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %208, null
  br i1 %209, label %212, label %210

210:                                              ; preds = %173
  %211 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %208, i64 %206) #6
  br label %224

212:                                              ; preds = %173
  %213 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %214 = load i64*, i64** %213, align 8
  %215 = load i64*, i64** %93, align 8
  %216 = icmp eq i64* %214, %215
  br i1 %216, label %217, label %219

217:                                              ; preds = %212
  %218 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %219

219:                                              ; preds = %217, %212
  %220 = phi i64* [ %218, %217 ], [ %214, %212 ]
  %221 = ptrtoint i64* %220 to i64
  %222 = add i64 %221, 8
  %223 = inttoptr i64 %222 to i64*
  store i64* %223, i64** %213, align 8
  store i64 %206, i64* %220, align 8
  br label %224

224:                                              ; preds = %219, %210
  %225 = phi i64* [ %211, %210 ], [ %220, %219 ]
  br i1 %185, label %226, label %488

226:                                              ; preds = %224
  br i1 %187, label %227, label %303

227:                                              ; preds = %226
  %228 = load i64, i64* %1, align 8
  %229 = and i64 %228, -4294967296
  %230 = add i64 %228, 23
  %231 = inttoptr i64 %230 to i32*
  %232 = load i32, i32* %231, align 4
  %233 = zext i32 %232 to i64
  %234 = or i64 %229, %233
  %235 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %207, align 8
  %236 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %235, null
  br i1 %236, label %240, label %237

237:                                              ; preds = %227
  %238 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %235, i64 %234) #6
  %239 = load i64, i64* %238, align 8
  br label %252

240:                                              ; preds = %227
  %241 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %242 = load i64*, i64** %241, align 8
  %243 = load i64*, i64** %93, align 8
  %244 = icmp eq i64* %242, %243
  br i1 %244, label %245, label %247

245:                                              ; preds = %240
  %246 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %247

247:                                              ; preds = %245, %240
  %248 = phi i64* [ %246, %245 ], [ %242, %240 ]
  %249 = ptrtoint i64* %248 to i64
  %250 = add i64 %249, 8
  %251 = inttoptr i64 %250 to i64*
  store i64* %251, i64** %241, align 8
  store i64 %234, i64* %248, align 8
  br label %252

252:                                              ; preds = %247, %237
  %253 = phi i64 [ %239, %237 ], [ %234, %247 ]
  %254 = phi i64* [ %238, %237 ], [ %248, %247 ]
  %255 = and i64 %253, 1
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %257, label %280

257:                                              ; preds = %252
  %258 = trunc i64 %253 to i32
  %259 = ashr i32 %258, 1
  %260 = icmp sgt i32 %259, 0
  %261 = select i1 %260, i32 %259, i32 0
  %262 = shl nuw nsw i32 %261, 1
  %263 = zext i32 %262 to i64
  %264 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %207, align 8
  %265 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %264, null
  br i1 %265, label %268, label %266

266:                                              ; preds = %257
  %267 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %264, i64 %263) #6
  br label %282

268:                                              ; preds = %257
  %269 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %270 = load i64*, i64** %269, align 8
  %271 = load i64*, i64** %93, align 8
  %272 = icmp eq i64* %270, %271
  br i1 %272, label %273, label %275

273:                                              ; preds = %268
  %274 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %275

275:                                              ; preds = %273, %268
  %276 = phi i64* [ %274, %273 ], [ %270, %268 ]
  %277 = ptrtoint i64* %276 to i64
  %278 = add i64 %277, 8
  %279 = inttoptr i64 %278 to i64*
  store i64* %279, i64** %269, align 8
  store i64 %263, i64* %276, align 8
  br label %282

280:                                              ; preds = %252
  %281 = call i64* @_ZN2v88internal6Object15ConvertToLengthEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* %254) #6
  br label %282

282:                                              ; preds = %280, %275, %266
  %283 = phi i64* [ %281, %280 ], [ %267, %266 ], [ %276, %275 ]
  %284 = icmp eq i64* %283, null
  br i1 %284, label %1319, label %285

285:                                              ; preds = %282
  %286 = load i64, i64* %283, align 8
  %287 = and i64 %286, 1
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %289, label %294

289:                                              ; preds = %285
  %290 = trunc i64 %286 to i32
  %291 = ashr i32 %290, 1
  %292 = icmp slt i32 %290, 2
  %293 = select i1 %292, i32 0, i32 %291
  br label %303

294:                                              ; preds = %285
  %295 = add i64 %286, 3
  %296 = inttoptr i64 %295 to double*
  %297 = load double, double* %296, align 1
  %298 = fcmp ult double %297, 1.000000e+00
  br i1 %298, label %303, label %299

299:                                              ; preds = %294
  %300 = fcmp olt double %297, 0x41EFFFFFFFE00000
  %301 = select i1 %300, double %297, double 0x41EFFFFFFFE00000
  %302 = fptoui double %301 to i32
  br label %303

303:                                              ; preds = %299, %294, %289, %226
  %304 = phi i32 [ 0, %226 ], [ %302, %299 ], [ 0, %294 ], [ %293, %289 ]
  %305 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 6
  %306 = load i64, i64* %305, align 8
  %307 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %207, align 8
  %308 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %307, null
  br i1 %308, label %311, label %309

309:                                              ; preds = %303
  %310 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %307, i64 %306) #6
  br label %323

311:                                              ; preds = %303
  %312 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %313 = load i64*, i64** %312, align 8
  %314 = load i64*, i64** %93, align 8
  %315 = icmp eq i64* %313, %314
  br i1 %315, label %316, label %318

316:                                              ; preds = %311
  %317 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %318

318:                                              ; preds = %316, %311
  %319 = phi i64* [ %317, %316 ], [ %313, %311 ]
  %320 = ptrtoint i64* %319 to i64
  %321 = add i64 %320, 8
  %322 = inttoptr i64 %321 to i64*
  store i64* %322, i64** %312, align 8
  store i64 %306, i64* %319, align 8
  br label %323

323:                                              ; preds = %318, %309
  %324 = phi i64* [ %310, %309 ], [ %319, %318 ]
  %325 = load i64, i64* %135, align 8
  %326 = add i64 %325, 7
  %327 = inttoptr i64 %326 to i32*
  %328 = load i32, i32* %327, align 4
  %329 = icmp ugt i32 %304, %328
  br i1 %329, label %333, label %330

330:                                              ; preds = %323
  %331 = call i64* @_ZN2v88internal6RegExp4ExecEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiNS4_INS0_15RegExpMatchInfoEEENS1_10ExecQuirksE(%"class.v8::internal::Isolate"* %2, i64* %1, i64* %135, i32 %304, i64* %225, i32 0) #6
  %332 = icmp eq i64* %331, null
  br i1 %332, label %1319, label %333

333:                                              ; preds = %330, %323
  %334 = phi i64* [ %324, %323 ], [ %331, %330 ]
  %335 = load i64, i64* %334, align 8
  %336 = load i64, i64* %305, align 8
  %337 = trunc i64 %335 to i32
  %338 = trunc i64 %336 to i32
  %339 = icmp eq i32 %337, %338
  br i1 %339, label %340, label %347

340:                                              ; preds = %333
  br i1 %187, label %341, label %345

341:                                              ; preds = %340
  %342 = load i64, i64* %1, align 8
  %343 = add i64 %342, 23
  %344 = inttoptr i64 %343 to i32*
  store atomic volatile i32 0, i32* %344 monotonic, align 4
  br label %345

345:                                              ; preds = %341, %340
  %346 = ptrtoint i64* %135 to i64
  br label %1316

347:                                              ; preds = %333
  %348 = add i64 %335, 19
  %349 = inttoptr i64 %348 to i32*
  %350 = load atomic i32, i32* %349 monotonic, align 4
  %351 = ashr i32 %350, 1
  %352 = add i64 %335, 23
  %353 = inttoptr i64 %352 to i32*
  %354 = load atomic i32, i32* %353 monotonic, align 4
  %355 = ashr i32 %354, 1
  br i1 %187, label %356, label %361

356:                                              ; preds = %347
  %357 = load i64, i64* %1, align 8
  %358 = and i32 %354, -2
  %359 = add i64 %357, 23
  %360 = inttoptr i64 %359 to i32*
  store atomic volatile i32 %358, i32* %360 monotonic, align 4
  br label %361

361:                                              ; preds = %356, %347
  %362 = bitcast %"class.v8::internal::IncrementalStringBuilder"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %362) #6
  call void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %18, %"class.v8::internal::Isolate"* %2) #6
  %363 = load i64, i64* %135, align 8
  %364 = add i64 %363, 7
  %365 = inttoptr i64 %364 to i32*
  %366 = load i32, i32* %365, align 4
  %367 = icmp eq i32 %366, %351
  br i1 %367, label %370, label %368

368:                                              ; preds = %361
  %369 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %134, i64* %135, i32 0, i32 %351) #6
  br label %370

370:                                              ; preds = %368, %361
  %371 = phi i64* [ %369, %368 ], [ %135, %361 ]
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %18, i64* %371) #6
  %372 = load i64, i64* %188, align 8
  %373 = add i64 %372, 7
  %374 = inttoptr i64 %373 to i32*
  %375 = load i32, i32* %374, align 4
  %376 = icmp sgt i32 %375, 0
  br i1 %376, label %377, label %474

377:                                              ; preds = %370
  %378 = bitcast %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %378) #6
  %379 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %19, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2v88internal12_GLOBAL__N_120MatchInfoBackedMatchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %379, align 8
  %380 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %19, i64 0, i32 1
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %380, align 8
  %381 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %19, i64 0, i32 2, i32 0, i32 0
  %382 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %19, i64 0, i32 3, i32 0, i32 0
  store i64* %334, i64** %382, align 8
  %383 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %19, i64 0, i32 5, i32 0, i32 0
  store i64* null, i64** %383, align 8
  %384 = call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %135, i8 zeroext 0) #6
  store i64* %384, i64** %381, align 8
  %385 = load i64, i64* %1, align 8
  %386 = and i64 %385, -4294967296
  %387 = add i64 %385, 11
  %388 = inttoptr i64 %387 to i32*
  %389 = load i32, i32* %388, align 4
  %390 = zext i32 %389 to i64
  %391 = or i64 %386, %390
  %392 = and i64 %390, 1
  %393 = icmp eq i64 %392, 0
  br i1 %393, label %417, label %394

394:                                              ; preds = %377
  %395 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %396 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %395, null
  br i1 %396, label %403, label %397

397:                                              ; preds = %394
  %398 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %395, i64 0, i32 0, i32 1
  %399 = load i8, i8* %398, align 8, !range !5
  %400 = icmp eq i8 %399, 0
  br i1 %400, label %403, label %401

401:                                              ; preds = %397
  %402 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %395, i64 0, i32 1, i64 0
  br label %411

403:                                              ; preds = %397, %394
  %404 = and i64 %391, -262144
  %405 = or i64 %404, 16
  %406 = inttoptr i64 %405 to i64*
  %407 = load i64, i64* %406, align 16
  %408 = add i64 %407, -41416
  %409 = inttoptr i64 %408 to %"class.v8::internal::Isolate"*
  %410 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %409, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %411

411:                                              ; preds = %403, %401
  %412 = phi i64* [ %410, %403 ], [ %402, %401 ]
  %413 = getelementptr inbounds i64, i64* %412, i64 4
  %414 = load i64, i64* %413, align 8
  %415 = trunc i64 %414 to i32
  %416 = icmp eq i32 %389, %415
  br i1 %416, label %466, label %417

417:                                              ; preds = %411, %377
  %418 = add i64 %391, 7
  %419 = inttoptr i64 %418 to i32*
  %420 = load atomic i32, i32* %419 monotonic, align 4
  %421 = ashr i32 %420, 1
  %422 = or i32 %421, 1
  %423 = icmp eq i32 %422, 3
  br i1 %423, label %424, label %466

424:                                              ; preds = %417
  %425 = add i64 %391, 43
  %426 = inttoptr i64 %425 to i32*
  %427 = load atomic i32, i32* %426 monotonic, align 4
  %428 = zext i32 %427 to i64
  %429 = or i64 %386, %428
  %430 = and i64 %428, 1
  %431 = icmp eq i64 %430, 0
  br i1 %431, label %432, label %434

432:                                              ; preds = %424
  %433 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %19, i64 0, i32 4
  store i8 0, i8* %433, align 8
  br label %468

434:                                              ; preds = %424
  %435 = add i64 %429, -1
  %436 = inttoptr i64 %435 to i32*
  %437 = load atomic i32, i32* %436 monotonic, align 4
  %438 = zext i32 %437 to i64
  %439 = or i64 %386, %438
  %440 = add i64 %439, 7
  %441 = inttoptr i64 %440 to i16*
  %442 = load atomic i16, i16* %441 monotonic, align 2
  %443 = add i16 %442, -119
  %444 = icmp ult i16 %443, 13
  %445 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %19, i64 0, i32 4
  %446 = zext i1 %444 to i8
  store i8 %446, i8* %445, align 8
  br i1 %444, label %447, label %468

447:                                              ; preds = %434
  %448 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %207, align 8
  %449 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %448, null
  br i1 %449, label %452, label %450

450:                                              ; preds = %447
  %451 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %448, i64 %429) #6
  br label %464

452:                                              ; preds = %447
  %453 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %454 = load i64*, i64** %453, align 8
  %455 = load i64*, i64** %93, align 8
  %456 = icmp eq i64* %454, %455
  br i1 %456, label %457, label %459

457:                                              ; preds = %452
  %458 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %459

459:                                              ; preds = %457, %452
  %460 = phi i64* [ %458, %457 ], [ %454, %452 ]
  %461 = ptrtoint i64* %460 to i64
  %462 = add i64 %461, 8
  %463 = inttoptr i64 %462 to i64*
  store i64* %463, i64** %453, align 8
  store i64 %429, i64* %460, align 8
  br label %464

464:                                              ; preds = %459, %450
  %465 = phi i64* [ %451, %450 ], [ %460, %459 ]
  store i64* %465, i64** %383, align 8
  br label %468

466:                                              ; preds = %417, %411
  %467 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %19, i64 0, i32 4
  store i8 0, i8* %467, align 8
  br label %468

468:                                              ; preds = %466, %464, %434, %432
  %469 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %19, i64 0, i32 0
  %470 = call i64* @_ZN2v88internal6String15GetSubstitutionEPNS0_7IsolateEPNS1_5MatchENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"* %2, %"class.v8::internal::String::Match"* nonnull %469, i64* %188, i32 0) #6
  %471 = icmp eq i64* %470, null
  br i1 %471, label %472, label %473

472:                                              ; preds = %468
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %378) #6
  br label %486

473:                                              ; preds = %468
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %18, i64* nonnull %470) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %378) #6
  br label %474

474:                                              ; preds = %473, %370
  %475 = icmp eq i32 %355, 0
  br i1 %475, label %482, label %476

476:                                              ; preds = %474
  %477 = load i64, i64* %135, align 8
  %478 = add i64 %477, 7
  %479 = inttoptr i64 %478 to i32*
  %480 = load i32, i32* %479, align 4
  %481 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %134, i64* %135, i32 %355, i32 %480) #6
  br label %482

482:                                              ; preds = %476, %474
  %483 = phi i64* [ %481, %476 ], [ %135, %474 ]
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %18, i64* %483) #6
  %484 = call i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %18) #6
  %485 = ptrtoint i64* %484 to i64
  br label %486

486:                                              ; preds = %482, %472
  %487 = phi i64 [ %485, %482 ], [ 0, %472 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %362) #6
  br label %1316

488:                                              ; preds = %224
  %489 = call i64* @_ZN2v88internal11RegExpUtils12SetLastIndexEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEEm(%"class.v8::internal::Isolate"* %2, i64* %1, i64 0) #6
  %490 = icmp eq i64* %489, null
  br i1 %490, label %1319, label %491

491:                                              ; preds = %488
  %492 = load i8, i8* @_ZN2v88internal19FLAG_regexp_tier_upE, align 1, !range !5
  %493 = icmp eq i8 %492, 0
  br i1 %493, label %542, label %494

494:                                              ; preds = %491
  %495 = load i64, i64* %1, align 8
  %496 = and i64 %495, -4294967296
  %497 = add i64 %495, 11
  %498 = inttoptr i64 %497 to i32*
  %499 = load i32, i32* %498, align 4
  %500 = zext i32 %499 to i64
  %501 = or i64 %496, %500
  %502 = and i64 %500, 1
  %503 = icmp eq i64 %502, 0
  br i1 %503, label %527, label %504

504:                                              ; preds = %494
  %505 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %506 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %505, null
  br i1 %506, label %513, label %507

507:                                              ; preds = %504
  %508 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %505, i64 0, i32 0, i32 1
  %509 = load i8, i8* %508, align 8, !range !5
  %510 = icmp eq i8 %509, 0
  br i1 %510, label %513, label %511

511:                                              ; preds = %507
  %512 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %505, i64 0, i32 1, i64 0
  br label %521

513:                                              ; preds = %507, %504
  %514 = and i64 %501, -262144
  %515 = or i64 %514, 16
  %516 = inttoptr i64 %515 to i64*
  %517 = load i64, i64* %516, align 16
  %518 = add i64 %517, -41416
  %519 = inttoptr i64 %518 to %"class.v8::internal::Isolate"*
  %520 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %519, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %521

521:                                              ; preds = %513, %511
  %522 = phi i64* [ %520, %513 ], [ %512, %511 ]
  %523 = getelementptr inbounds i64, i64* %522, i64 4
  %524 = load i64, i64* %523, align 8
  %525 = trunc i64 %524 to i32
  %526 = icmp eq i32 %499, %525
  br i1 %526, label %542, label %527

527:                                              ; preds = %521, %494
  %528 = add i64 %501, 7
  %529 = inttoptr i64 %528 to i32*
  %530 = load atomic i32, i32* %529 monotonic, align 4
  %531 = and i32 %530, -2
  %532 = icmp eq i32 %531, 4
  br i1 %532, label %533, label %542

533:                                              ; preds = %527
  %534 = bitcast %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %534) #6
  %535 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %495, i64* %535, align 8
  %536 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %20, i64 0, i32 0
  call void @_ZN2v88internal8JSRegExp21MarkTierUpForNextExecEv(%"class.v8::internal::JSRegExp"* nonnull %536) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %534) #6
  %537 = load i8, i8* @_ZN2v88internal25FLAG_trace_regexp_tier_upE, align 1, !range !5
  %538 = icmp eq i8 %537, 0
  br i1 %538, label %542, label %539

539:                                              ; preds = %533
  %540 = bitcast i64* %1 to i8**
  %541 = load i8*, i8** %540, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.36, i64 0, i64 0), i8* %541) #6
  br label %542

542:                                              ; preds = %539, %533, %527, %521, %491
  %543 = load i64, i64* %188, align 8
  %544 = add i64 %543, 7
  %545 = inttoptr i64 %544 to i32*
  %546 = load i32, i32* %545, align 4
  %547 = icmp eq i32 %546, 0
  br i1 %547, label %548, label %990

548:                                              ; preds = %542
  %549 = load i64, i64* %135, align 8
  %550 = and i64 %549, -4294967296
  %551 = add i64 %549, -1
  %552 = inttoptr i64 %551 to i32*
  %553 = load atomic i32, i32* %552 monotonic, align 4
  %554 = zext i32 %553 to i64
  %555 = or i64 %550, %554
  %556 = add i64 %555, 7
  %557 = inttoptr i64 %556 to i16*
  %558 = load atomic i16, i16* %557 monotonic, align 2
  %559 = and i16 %558, 8
  %560 = icmp eq i16 %559, 0
  %561 = load i64, i64* %1, align 8
  %562 = and i64 %561, -4294967296
  %563 = add i64 %561, 11
  %564 = inttoptr i64 %563 to i32*
  %565 = load i32, i32* %564, align 4
  %566 = zext i32 %565 to i64
  %567 = or i64 %562, %566
  %568 = and i64 %566, 1
  %569 = icmp eq i64 %568, 0
  br i1 %560, label %779, label %570

570:                                              ; preds = %548
  br i1 %569, label %594, label %571

571:                                              ; preds = %570
  %572 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %573 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %572, null
  br i1 %573, label %580, label %574

574:                                              ; preds = %571
  %575 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %572, i64 0, i32 0, i32 1
  %576 = load i8, i8* %575, align 8, !range !5
  %577 = icmp eq i8 %576, 0
  br i1 %577, label %580, label %578

578:                                              ; preds = %574
  %579 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %572, i64 0, i32 1, i64 0
  br label %588

580:                                              ; preds = %574, %571
  %581 = and i64 %567, -262144
  %582 = or i64 %581, 16
  %583 = inttoptr i64 %582 to i64*
  %584 = load i64, i64* %583, align 16
  %585 = add i64 %584, -41416
  %586 = inttoptr i64 %585 to %"class.v8::internal::Isolate"*
  %587 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %586, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %588

588:                                              ; preds = %580, %578
  %589 = phi i64* [ %587, %580 ], [ %579, %578 ]
  %590 = getelementptr inbounds i64, i64* %589, i64 4
  %591 = load i64, i64* %590, align 8
  %592 = trunc i64 %591 to i32
  %593 = icmp eq i32 %565, %592
  br i1 %593, label %614, label %594

594:                                              ; preds = %588, %570
  %595 = add i64 %567, 7
  %596 = inttoptr i64 %595 to i32*
  %597 = load atomic i32, i32* %596 monotonic, align 4
  %598 = and i32 %597, -2
  %599 = icmp eq i32 %598, 2
  br i1 %599, label %600, label %614

600:                                              ; preds = %594
  %601 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 9
  %602 = load atomic i32, i32* %552 monotonic, align 4
  %603 = zext i32 %602 to i64
  %604 = or i64 %550, %603
  %605 = add i64 %604, 7
  %606 = inttoptr i64 %605 to i16*
  %607 = load atomic i16, i16* %606 monotonic, align 2
  %608 = and i16 %607, 8
  %609 = icmp eq i16 %608, 0
  br i1 %609, label %612, label %610

610:                                              ; preds = %600
  %611 = call fastcc i64 @_ZN2v88internalL39StringReplaceGlobalAtomRegExpWithStringINS0_16SeqOneByteStringEEENS0_6ObjectEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS6_INS0_8JSRegExpEEES8_NS6_INS0_15RegExpMatchInfoEEE(%"class.v8::internal::Isolate"* %2, i64* %135, i64* %1, i64* %601, i64* %225) #6
  br label %760

612:                                              ; preds = %600
  %613 = call fastcc i64 @_ZN2v88internalL39StringReplaceGlobalAtomRegExpWithStringINS0_16SeqTwoByteStringEEENS0_6ObjectEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS6_INS0_8JSRegExpEEES8_NS6_INS0_15RegExpMatchInfoEEE(%"class.v8::internal::Isolate"* %2, i64* %135, i64* %1, i64* %601, i64* %225) #6
  br label %760

614:                                              ; preds = %594, %588
  %615 = bitcast %"class.v8::internal::RegExpGlobalCache"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %615) #6
  call void @_ZN2v88internal17RegExpGlobalCacheC1ENS0_6HandleINS0_8JSRegExpEEENS2_INS0_6StringEEEPNS0_7IsolateE(%"class.v8::internal::RegExpGlobalCache"* nonnull %13, i64* %1, i64* %135, %"class.v8::internal::Isolate"* %2) #6
  %616 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %13, i64 0, i32 0
  %617 = load i32, i32* %616, align 8
  %618 = icmp slt i32 %617, 0
  br i1 %618, label %619, label %621

619:                                              ; preds = %614
  %620 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %755

621:                                              ; preds = %614
  %622 = call i32* @_ZN2v88internal17RegExpGlobalCache9FetchNextEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %13) #6
  %623 = icmp eq i32* %622, null
  br i1 %623, label %624, label %629

624:                                              ; preds = %621
  %625 = load i32, i32* %616, align 8
  %626 = icmp slt i32 %625, 0
  %627 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %628 = select i1 %626, i64* %627, i64* %135
  br label %755

629:                                              ; preds = %621
  %630 = load i32, i32* %622, align 4
  %631 = getelementptr inbounds i32, i32* %622, i64 1
  %632 = load i32, i32* %631, align 4
  %633 = load i64, i64* %1, align 8
  %634 = and i64 %633, -4294967296
  %635 = add i64 %633, 11
  %636 = inttoptr i64 %635 to i32*
  %637 = load i32, i32* %636, align 4
  %638 = zext i32 %637 to i64
  %639 = or i64 %634, %638
  %640 = and i64 %638, 1
  %641 = icmp eq i64 %640, 0
  br i1 %641, label %665, label %642

642:                                              ; preds = %629
  %643 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %644 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %643, null
  br i1 %644, label %651, label %645

645:                                              ; preds = %642
  %646 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %643, i64 0, i32 0, i32 1
  %647 = load i8, i8* %646, align 8, !range !5
  %648 = icmp eq i8 %647, 0
  br i1 %648, label %651, label %649

649:                                              ; preds = %645
  %650 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %643, i64 0, i32 1, i64 0
  br label %659

651:                                              ; preds = %645, %642
  %652 = and i64 %639, -262144
  %653 = or i64 %652, 16
  %654 = inttoptr i64 %653 to i64*
  %655 = load i64, i64* %654, align 16
  %656 = add i64 %655, -41416
  %657 = inttoptr i64 %656 to %"class.v8::internal::Isolate"*
  %658 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %657, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %659

659:                                              ; preds = %651, %649
  %660 = phi i64* [ %658, %651 ], [ %650, %649 ]
  %661 = getelementptr inbounds i64, i64* %660, i64 4
  %662 = load i64, i64* %661, align 8
  %663 = trunc i64 %662 to i32
  %664 = icmp eq i32 %637, %663
  br i1 %664, label %675, label %665

665:                                              ; preds = %659, %629
  %666 = add i64 %639, 7
  %667 = inttoptr i64 %666 to i32*
  %668 = load atomic i32, i32* %667 monotonic, align 4
  %669 = ashr i32 %668, 1
  switch i32 %669, label %675 [
    i32 1, label %676
    i32 3, label %670
    i32 2, label %670
  ]

670:                                              ; preds = %665, %665
  %671 = add i64 %639, 39
  %672 = inttoptr i64 %671 to i32*
  %673 = load atomic i32, i32* %672 monotonic, align 4
  %674 = ashr i32 %673, 1
  br label %676

675:                                              ; preds = %665, %659
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #18
  unreachable

676:                                              ; preds = %670, %665
  %677 = phi i32 [ %674, %670 ], [ 0, %665 ]
  %678 = load i64, i64* %135, align 8
  %679 = add i64 %678, 7
  %680 = inttoptr i64 %679 to i32*
  %681 = load i32, i32* %680, align 4
  %682 = sub i32 %630, %632
  %683 = add i32 %681, %682
  %684 = icmp eq i32 %683, 0
  br i1 %684, label %685, label %687

685:                                              ; preds = %676
  %686 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 9
  br label %755

687:                                              ; preds = %676
  %688 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %689 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewRawOneByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %688, i32 %683, i8 zeroext 0) #6
  %690 = icmp eq i64* %689, null
  br i1 %690, label %691, label %692, !prof !2

691:                                              ; preds = %687
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.37, i64 0, i64 0)) #18
  unreachable

692:                                              ; preds = %687, %709
  %693 = phi i32 [ %710, %709 ], [ 0, %687 ]
  %694 = phi i32 [ %698, %709 ], [ 0, %687 ]
  %695 = phi i32* [ %711, %709 ], [ %622, %687 ]
  %696 = load i32, i32* %695, align 4
  %697 = getelementptr inbounds i32, i32* %695, i64 1
  %698 = load i32, i32* %697, align 4
  %699 = icmp sgt i32 %696, %694
  br i1 %699, label %700, label %709

700:                                              ; preds = %692
  %701 = load i64, i64* %135, align 8
  %702 = load i64, i64* %689, align 8
  %703 = add i64 %702, 11
  %704 = inttoptr i64 %703 to i8*
  %705 = sext i32 %693 to i64
  %706 = getelementptr inbounds i8, i8* %704, i64 %705
  call void @_ZN2v88internal6String11WriteToFlatIhEEvS1_PT_ii(i64 %701, i8* %706, i32 %694, i32 %696) #6
  %707 = sub i32 %693, %694
  %708 = add i32 %707, %696
  br label %709

709:                                              ; preds = %700, %692
  %710 = phi i32 [ %708, %700 ], [ %693, %692 ]
  %711 = call i32* @_ZN2v88internal17RegExpGlobalCache9FetchNextEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %13) #6
  %712 = icmp eq i32* %711, null
  br i1 %712, label %713, label %692

713:                                              ; preds = %709
  %714 = load i32, i32* %616, align 8
  %715 = icmp slt i32 %714, 0
  br i1 %715, label %716, label %718

716:                                              ; preds = %713
  %717 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %755

718:                                              ; preds = %713
  %719 = call i32* @_ZN2v88internal17RegExpGlobalCache19LastSuccessfulMatchEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %13) #6
  %720 = call i64* @_ZN2v88internal6RegExp16SetLastMatchInfoEPNS0_7IsolateENS0_6HandleINS0_15RegExpMatchInfoEEENS4_INS0_6StringEEEiPi(%"class.v8::internal::Isolate"* %2, i64* %225, i64* %135, i32 %677, i32* %719) #6
  %721 = icmp sgt i32 %681, %698
  br i1 %721, label %722, label %731

722:                                              ; preds = %718
  %723 = load i64, i64* %135, align 8
  %724 = load i64, i64* %689, align 8
  %725 = add i64 %724, 11
  %726 = inttoptr i64 %725 to i8*
  %727 = sext i32 %710 to i64
  %728 = getelementptr inbounds i8, i8* %726, i64 %727
  call void @_ZN2v88internal6String11WriteToFlatIhEEvS1_PT_ii(i64 %723, i8* %728, i32 %698, i32 %681) #6
  %729 = sub i32 %681, %698
  %730 = add nsw i32 %729, %710
  br label %731

731:                                              ; preds = %722, %718
  %732 = phi i32 [ %730, %722 ], [ %710, %718 ]
  %733 = icmp eq i32 %732, 0
  br i1 %733, label %734, label %736

734:                                              ; preds = %731
  %735 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 9
  br label %755

736:                                              ; preds = %731
  %737 = add i32 %732, 15
  %738 = and i32 %737, -4
  %739 = add i32 %683, 15
  %740 = and i32 %739, -4
  %741 = sub nsw i32 %740, %738
  %742 = load i64, i64* %689, align 8
  %743 = add i64 %742, 7
  %744 = inttoptr i64 %743 to i32*
  store i32 %732, i32* %744, align 4
  %745 = icmp eq i32 %741, 0
  %746 = load i64, i64* %689, align 8
  br i1 %745, label %758, label %747

747:                                              ; preds = %736
  %748 = call zeroext i1 @_ZN2v88internal4Heap13IsLargeObjectENS0_10HeapObjectE(i64 %746) #6
  br i1 %748, label %755, label %749

749:                                              ; preds = %747
  %750 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 2
  %751 = sext i32 %738 to i64
  %752 = add nsw i64 %751, -1
  %753 = add i64 %752, %746
  %754 = call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %750, i64 %753, i32 %741, i32 1) #6
  br label %755

755:                                              ; preds = %624, %747, %749, %619, %685, %716, %734
  %756 = phi i64* [ %735, %734 ], [ %717, %716 ], [ %686, %685 ], [ %620, %619 ], [ %689, %749 ], [ %689, %747 ], [ %628, %624 ]
  %757 = load i64, i64* %756, align 8
  br label %758

758:                                              ; preds = %755, %736
  %759 = phi i64 [ %746, %736 ], [ %757, %755 ]
  call void @_ZN2v88internal17RegExpGlobalCacheD1Ev(%"class.v8::internal::RegExpGlobalCache"* nonnull %13) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %615) #6
  br label %760

760:                                              ; preds = %758, %612, %610
  %761 = phi i64 [ %759, %758 ], [ %611, %610 ], [ %613, %612 ]
  %762 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %207, align 8
  %763 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %762, null
  br i1 %763, label %767, label %764

764:                                              ; preds = %760
  %765 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %762, i64 %761) #6
  %766 = ptrtoint i64* %765 to i64
  br label %1316

767:                                              ; preds = %760
  %768 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %769 = load i64*, i64** %768, align 8
  %770 = load i64*, i64** %93, align 8
  %771 = icmp eq i64* %769, %770
  br i1 %771, label %772, label %774

772:                                              ; preds = %767
  %773 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %774

774:                                              ; preds = %772, %767
  %775 = phi i64* [ %773, %772 ], [ %769, %767 ]
  %776 = ptrtoint i64* %775 to i64
  %777 = add i64 %776, 8
  %778 = inttoptr i64 %777 to i64*
  store i64* %778, i64** %768, align 8
  store i64 %761, i64* %775, align 8
  br label %1316

779:                                              ; preds = %548
  br i1 %569, label %803, label %780

780:                                              ; preds = %779
  %781 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %782 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %781, null
  br i1 %782, label %789, label %783

783:                                              ; preds = %780
  %784 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %781, i64 0, i32 0, i32 1
  %785 = load i8, i8* %784, align 8, !range !5
  %786 = icmp eq i8 %785, 0
  br i1 %786, label %789, label %787

787:                                              ; preds = %783
  %788 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %781, i64 0, i32 1, i64 0
  br label %797

789:                                              ; preds = %783, %780
  %790 = and i64 %567, -262144
  %791 = or i64 %790, 16
  %792 = inttoptr i64 %791 to i64*
  %793 = load i64, i64* %792, align 16
  %794 = add i64 %793, -41416
  %795 = inttoptr i64 %794 to %"class.v8::internal::Isolate"*
  %796 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %795, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %797

797:                                              ; preds = %789, %787
  %798 = phi i64* [ %796, %789 ], [ %788, %787 ]
  %799 = getelementptr inbounds i64, i64* %798, i64 4
  %800 = load i64, i64* %799, align 8
  %801 = trunc i64 %800 to i32
  %802 = icmp eq i32 %565, %801
  br i1 %802, label %823, label %803

803:                                              ; preds = %797, %779
  %804 = add i64 %567, 7
  %805 = inttoptr i64 %804 to i32*
  %806 = load atomic i32, i32* %805 monotonic, align 4
  %807 = and i32 %806, -2
  %808 = icmp eq i32 %807, 2
  br i1 %808, label %809, label %823

809:                                              ; preds = %803
  %810 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 9
  %811 = load atomic i32, i32* %552 monotonic, align 4
  %812 = zext i32 %811 to i64
  %813 = or i64 %550, %812
  %814 = add i64 %813, 7
  %815 = inttoptr i64 %814 to i16*
  %816 = load atomic i16, i16* %815 monotonic, align 2
  %817 = and i16 %816, 8
  %818 = icmp eq i16 %817, 0
  br i1 %818, label %821, label %819

819:                                              ; preds = %809
  %820 = call fastcc i64 @_ZN2v88internalL39StringReplaceGlobalAtomRegExpWithStringINS0_16SeqOneByteStringEEENS0_6ObjectEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS6_INS0_8JSRegExpEEES8_NS6_INS0_15RegExpMatchInfoEEE(%"class.v8::internal::Isolate"* %2, i64* %135, i64* %1, i64* %810, i64* %225) #6
  br label %971

821:                                              ; preds = %809
  %822 = call fastcc i64 @_ZN2v88internalL39StringReplaceGlobalAtomRegExpWithStringINS0_16SeqTwoByteStringEEENS0_6ObjectEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS6_INS0_8JSRegExpEEES8_NS6_INS0_15RegExpMatchInfoEEE(%"class.v8::internal::Isolate"* %2, i64* %135, i64* %1, i64* %810, i64* %225) #6
  br label %971

823:                                              ; preds = %803, %797
  %824 = bitcast %"class.v8::internal::RegExpGlobalCache"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %824) #6
  call void @_ZN2v88internal17RegExpGlobalCacheC1ENS0_6HandleINS0_8JSRegExpEEENS2_INS0_6StringEEEPNS0_7IsolateE(%"class.v8::internal::RegExpGlobalCache"* nonnull %14, i64* %1, i64* %135, %"class.v8::internal::Isolate"* %2) #6
  %825 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %14, i64 0, i32 0
  %826 = load i32, i32* %825, align 8
  %827 = icmp slt i32 %826, 0
  br i1 %827, label %828, label %830

828:                                              ; preds = %823
  %829 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %966

830:                                              ; preds = %823
  %831 = call i32* @_ZN2v88internal17RegExpGlobalCache9FetchNextEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %14) #6
  %832 = icmp eq i32* %831, null
  br i1 %832, label %833, label %838

833:                                              ; preds = %830
  %834 = load i32, i32* %825, align 8
  %835 = icmp slt i32 %834, 0
  %836 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %837 = select i1 %835, i64* %836, i64* %135
  br label %966

838:                                              ; preds = %830
  %839 = load i32, i32* %831, align 4
  %840 = getelementptr inbounds i32, i32* %831, i64 1
  %841 = load i32, i32* %840, align 4
  %842 = load i64, i64* %1, align 8
  %843 = and i64 %842, -4294967296
  %844 = add i64 %842, 11
  %845 = inttoptr i64 %844 to i32*
  %846 = load i32, i32* %845, align 4
  %847 = zext i32 %846 to i64
  %848 = or i64 %843, %847
  %849 = and i64 %847, 1
  %850 = icmp eq i64 %849, 0
  br i1 %850, label %874, label %851

851:                                              ; preds = %838
  %852 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %853 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %852, null
  br i1 %853, label %860, label %854

854:                                              ; preds = %851
  %855 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %852, i64 0, i32 0, i32 1
  %856 = load i8, i8* %855, align 8, !range !5
  %857 = icmp eq i8 %856, 0
  br i1 %857, label %860, label %858

858:                                              ; preds = %854
  %859 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %852, i64 0, i32 1, i64 0
  br label %868

860:                                              ; preds = %854, %851
  %861 = and i64 %848, -262144
  %862 = or i64 %861, 16
  %863 = inttoptr i64 %862 to i64*
  %864 = load i64, i64* %863, align 16
  %865 = add i64 %864, -41416
  %866 = inttoptr i64 %865 to %"class.v8::internal::Isolate"*
  %867 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %866, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %868

868:                                              ; preds = %860, %858
  %869 = phi i64* [ %867, %860 ], [ %859, %858 ]
  %870 = getelementptr inbounds i64, i64* %869, i64 4
  %871 = load i64, i64* %870, align 8
  %872 = trunc i64 %871 to i32
  %873 = icmp eq i32 %846, %872
  br i1 %873, label %884, label %874

874:                                              ; preds = %868, %838
  %875 = add i64 %848, 7
  %876 = inttoptr i64 %875 to i32*
  %877 = load atomic i32, i32* %876 monotonic, align 4
  %878 = ashr i32 %877, 1
  switch i32 %878, label %884 [
    i32 1, label %885
    i32 3, label %879
    i32 2, label %879
  ]

879:                                              ; preds = %874, %874
  %880 = add i64 %848, 39
  %881 = inttoptr i64 %880 to i32*
  %882 = load atomic i32, i32* %881 monotonic, align 4
  %883 = ashr i32 %882, 1
  br label %885

884:                                              ; preds = %874, %868
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #18
  unreachable

885:                                              ; preds = %879, %874
  %886 = phi i32 [ %883, %879 ], [ 0, %874 ]
  %887 = load i64, i64* %135, align 8
  %888 = add i64 %887, 7
  %889 = inttoptr i64 %888 to i32*
  %890 = load i32, i32* %889, align 4
  %891 = sub i32 %839, %841
  %892 = add i32 %890, %891
  %893 = icmp eq i32 %892, 0
  br i1 %893, label %894, label %896

894:                                              ; preds = %885
  %895 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 9
  br label %966

896:                                              ; preds = %885
  %897 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %898 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewRawTwoByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %897, i32 %892, i8 zeroext 0) #6
  %899 = icmp eq i64* %898, null
  br i1 %899, label %900, label %901, !prof !2

900:                                              ; preds = %896
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.37, i64 0, i64 0)) #18
  unreachable

901:                                              ; preds = %896, %918
  %902 = phi i32 [ %919, %918 ], [ 0, %896 ]
  %903 = phi i32 [ %907, %918 ], [ 0, %896 ]
  %904 = phi i32* [ %920, %918 ], [ %831, %896 ]
  %905 = load i32, i32* %904, align 4
  %906 = getelementptr inbounds i32, i32* %904, i64 1
  %907 = load i32, i32* %906, align 4
  %908 = icmp sgt i32 %905, %903
  br i1 %908, label %909, label %918

909:                                              ; preds = %901
  %910 = load i64, i64* %135, align 8
  %911 = load i64, i64* %898, align 8
  %912 = add i64 %911, 11
  %913 = inttoptr i64 %912 to i16*
  %914 = sext i32 %902 to i64
  %915 = getelementptr inbounds i16, i16* %913, i64 %914
  call void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_ii(i64 %910, i16* %915, i32 %903, i32 %905) #6
  %916 = sub i32 %902, %903
  %917 = add i32 %916, %905
  br label %918

918:                                              ; preds = %909, %901
  %919 = phi i32 [ %917, %909 ], [ %902, %901 ]
  %920 = call i32* @_ZN2v88internal17RegExpGlobalCache9FetchNextEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %14) #6
  %921 = icmp eq i32* %920, null
  br i1 %921, label %922, label %901

922:                                              ; preds = %918
  %923 = load i32, i32* %825, align 8
  %924 = icmp slt i32 %923, 0
  br i1 %924, label %925, label %927

925:                                              ; preds = %922
  %926 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %966

927:                                              ; preds = %922
  %928 = call i32* @_ZN2v88internal17RegExpGlobalCache19LastSuccessfulMatchEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %14) #6
  %929 = call i64* @_ZN2v88internal6RegExp16SetLastMatchInfoEPNS0_7IsolateENS0_6HandleINS0_15RegExpMatchInfoEEENS4_INS0_6StringEEEiPi(%"class.v8::internal::Isolate"* %2, i64* %225, i64* %135, i32 %886, i32* %928) #6
  %930 = icmp sgt i32 %890, %907
  br i1 %930, label %931, label %940

931:                                              ; preds = %927
  %932 = load i64, i64* %135, align 8
  %933 = load i64, i64* %898, align 8
  %934 = add i64 %933, 11
  %935 = inttoptr i64 %934 to i16*
  %936 = sext i32 %919 to i64
  %937 = getelementptr inbounds i16, i16* %935, i64 %936
  call void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_ii(i64 %932, i16* %937, i32 %907, i32 %890) #6
  %938 = sub i32 %890, %907
  %939 = add nsw i32 %938, %919
  br label %940

940:                                              ; preds = %931, %927
  %941 = phi i32 [ %939, %931 ], [ %919, %927 ]
  %942 = icmp eq i32 %941, 0
  br i1 %942, label %943, label %945

943:                                              ; preds = %940
  %944 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 9
  br label %966

945:                                              ; preds = %940
  %946 = shl i32 %941, 1
  %947 = add i32 %946, 15
  %948 = and i32 %947, -4
  %949 = shl i32 %892, 1
  %950 = add i32 %949, 15
  %951 = and i32 %950, -4
  %952 = sub nsw i32 %951, %948
  %953 = load i64, i64* %898, align 8
  %954 = add i64 %953, 7
  %955 = inttoptr i64 %954 to i32*
  store i32 %941, i32* %955, align 4
  %956 = icmp eq i32 %952, 0
  %957 = load i64, i64* %898, align 8
  br i1 %956, label %969, label %958

958:                                              ; preds = %945
  %959 = call zeroext i1 @_ZN2v88internal4Heap13IsLargeObjectENS0_10HeapObjectE(i64 %957) #6
  br i1 %959, label %966, label %960

960:                                              ; preds = %958
  %961 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 2
  %962 = sext i32 %948 to i64
  %963 = add nsw i64 %962, -1
  %964 = add i64 %963, %957
  %965 = call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %961, i64 %964, i32 %952, i32 1) #6
  br label %966

966:                                              ; preds = %833, %958, %960, %828, %894, %925, %943
  %967 = phi i64* [ %944, %943 ], [ %926, %925 ], [ %895, %894 ], [ %829, %828 ], [ %898, %960 ], [ %898, %958 ], [ %837, %833 ]
  %968 = load i64, i64* %967, align 8
  br label %969

969:                                              ; preds = %966, %945
  %970 = phi i64 [ %957, %945 ], [ %968, %966 ]
  call void @_ZN2v88internal17RegExpGlobalCacheD1Ev(%"class.v8::internal::RegExpGlobalCache"* nonnull %14) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %824) #6
  br label %971

971:                                              ; preds = %969, %821, %819
  %972 = phi i64 [ %970, %969 ], [ %820, %819 ], [ %822, %821 ]
  %973 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %207, align 8
  %974 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %973, null
  br i1 %974, label %978, label %975

975:                                              ; preds = %971
  %976 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %973, i64 %972) #6
  %977 = ptrtoint i64* %976 to i64
  br label %1316

978:                                              ; preds = %971
  %979 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %980 = load i64*, i64** %979, align 8
  %981 = load i64*, i64** %93, align 8
  %982 = icmp eq i64* %980, %981
  br i1 %982, label %983, label %985

983:                                              ; preds = %978
  %984 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %985

985:                                              ; preds = %983, %978
  %986 = phi i64* [ %984, %983 ], [ %980, %978 ]
  %987 = ptrtoint i64* %986 to i64
  %988 = add i64 %987, 8
  %989 = inttoptr i64 %988 to i64*
  store i64* %989, i64** %979, align 8
  store i64 %972, i64* %986, align 8
  br label %1316

990:                                              ; preds = %542
  %991 = load i64, i64* %1, align 8
  %992 = and i64 %991, -4294967296
  %993 = add i64 %991, 11
  %994 = inttoptr i64 %993 to i32*
  %995 = load i32, i32* %994, align 4
  %996 = zext i32 %995 to i64
  %997 = or i64 %992, %996
  %998 = and i64 %996, 1
  %999 = icmp eq i64 %998, 0
  br i1 %999, label %1023, label %1000

1000:                                             ; preds = %990
  %1001 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %1002 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %1001, null
  br i1 %1002, label %1009, label %1003

1003:                                             ; preds = %1000
  %1004 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %1001, i64 0, i32 0, i32 1
  %1005 = load i8, i8* %1004, align 8, !range !5
  %1006 = icmp eq i8 %1005, 0
  br i1 %1006, label %1009, label %1007

1007:                                             ; preds = %1003
  %1008 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %1001, i64 0, i32 1, i64 0
  br label %1017

1009:                                             ; preds = %1003, %1000
  %1010 = and i64 %997, -262144
  %1011 = or i64 %1010, 16
  %1012 = inttoptr i64 %1011 to i64*
  %1013 = load i64, i64* %1012, align 16
  %1014 = add i64 %1013, -41416
  %1015 = inttoptr i64 %1014 to %"class.v8::internal::Isolate"*
  %1016 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1015, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %1017

1017:                                             ; preds = %1009, %1007
  %1018 = phi i64* [ %1016, %1009 ], [ %1008, %1007 ]
  %1019 = getelementptr inbounds i64, i64* %1018, i64 4
  %1020 = load i64, i64* %1019, align 8
  %1021 = trunc i64 %1020 to i32
  %1022 = icmp eq i32 %995, %1021
  br i1 %1022, label %1033, label %1023

1023:                                             ; preds = %1017, %990
  %1024 = add i64 %997, 7
  %1025 = inttoptr i64 %1024 to i32*
  %1026 = load atomic i32, i32* %1025 monotonic, align 4
  %1027 = ashr i32 %1026, 1
  switch i32 %1027, label %1033 [
    i32 1, label %1034
    i32 3, label %1028
    i32 2, label %1028
  ]

1028:                                             ; preds = %1023, %1023
  %1029 = add i64 %997, 39
  %1030 = inttoptr i64 %1029 to i32*
  %1031 = load atomic i32, i32* %1030 monotonic, align 4
  %1032 = ashr i32 %1031, 1
  br label %1034

1033:                                             ; preds = %1023, %1017
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #18
  unreachable

1034:                                             ; preds = %1028, %1023
  %1035 = phi i32 [ %1032, %1028 ], [ 0, %1023 ]
  %1036 = load i64, i64* %135, align 8
  %1037 = add i64 %1036, 7
  %1038 = inttoptr i64 %1037 to i32*
  %1039 = load i32, i32* %1038, align 4
  %1040 = call zeroext i1 @_ZN2v88internal6RegExp19EnsureFullyCompiledEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEE(%"class.v8::internal::Isolate"* %2, i64* %1, i64* %135) #6
  br i1 %1040, label %1044, label %1041

1041:                                             ; preds = %1034
  %1042 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %1043 = load i64, i64* %1042, align 8
  br label %1283

1044:                                             ; preds = %1034
  %1045 = bitcast %"class.v8::internal::CompiledReplacement"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %1045) #6
  %1046 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %15, i64 0, i32 0, i32 3
  %1047 = bitcast %"class.v8::internal::CompiledReplacement"* %15 to %"struct.std::__1::aligned_storage<64, 4>::type"**
  store %"struct.std::__1::aligned_storage<64, 4>::type"* %1046, %"struct.std::__1::aligned_storage<64, 4>::type"** %1047, align 8
  %1048 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %15, i64 0, i32 0, i32 1
  %1049 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %1048 to %"struct.std::__1::aligned_storage<64, 4>::type"**
  store %"struct.std::__1::aligned_storage<64, 4>::type"* %1046, %"struct.std::__1::aligned_storage<64, 4>::type"** %1049, align 8
  %1050 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %15, i64 0, i32 0, i32 2
  %1051 = getelementptr inbounds %"struct.std::__1::aligned_storage<64, 4>::type", %"struct.std::__1::aligned_storage<64, 4>::type"* %1046, i64 1
  %1052 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %1050 to %"struct.std::__1::aligned_storage<64, 4>::type"**
  store %"struct.std::__1::aligned_storage<64, 4>::type"* %1051, %"struct.std::__1::aligned_storage<64, 4>::type"** %1052, align 8
  %1053 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %15, i64 0, i32 1
  %1054 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %15, i64 0, i32 1, i32 3
  %1055 = bitcast %"class.v8::base::SmallVector.0"* %1053 to %"struct.std::__1::aligned_storage<64, 8>::type"**
  store %"struct.std::__1::aligned_storage<64, 8>::type"* %1054, %"struct.std::__1::aligned_storage<64, 8>::type"** %1055, align 8
  %1056 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %15, i64 0, i32 1, i32 1
  %1057 = bitcast %"class.v8::internal::Handle"** %1056 to %"struct.std::__1::aligned_storage<64, 8>::type"**
  store %"struct.std::__1::aligned_storage<64, 8>::type"* %1054, %"struct.std::__1::aligned_storage<64, 8>::type"** %1057, align 8
  %1058 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %15, i64 0, i32 1, i32 2
  %1059 = getelementptr inbounds %"struct.std::__1::aligned_storage<64, 8>::type", %"struct.std::__1::aligned_storage<64, 8>::type"* %1054, i64 1
  %1060 = bitcast %"class.v8::internal::Handle"** %1058 to %"struct.std::__1::aligned_storage<64, 8>::type"**
  store %"struct.std::__1::aligned_storage<64, 8>::type"* %1059, %"struct.std::__1::aligned_storage<64, 8>::type"** %1060, align 8
  %1061 = call zeroext i1 @_ZN2v88internal19CompiledReplacement7CompileEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEii(%"class.v8::internal::CompiledReplacement"* nonnull %15, %"class.v8::internal::Isolate"* %2, i64* %1, i64* %188, i32 %1035, i32 %1039) #6
  %1062 = load i64, i64* %1, align 8
  %1063 = and i64 %1062, -4294967296
  %1064 = add i64 %1062, 11
  %1065 = inttoptr i64 %1064 to i32*
  %1066 = load i32, i32* %1065, align 4
  %1067 = zext i32 %1066 to i64
  %1068 = or i64 %1063, %1067
  %1069 = and i64 %1067, 1
  %1070 = icmp eq i64 %1069, 0
  br i1 %1070, label %1094, label %1071

1071:                                             ; preds = %1044
  %1072 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %1073 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %1072, null
  br i1 %1073, label %1080, label %1074

1074:                                             ; preds = %1071
  %1075 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %1072, i64 0, i32 0, i32 1
  %1076 = load i8, i8* %1075, align 8, !range !5
  %1077 = icmp eq i8 %1076, 0
  br i1 %1077, label %1080, label %1078

1078:                                             ; preds = %1074
  %1079 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %1072, i64 0, i32 1, i64 0
  br label %1088

1080:                                             ; preds = %1074, %1071
  %1081 = and i64 %1068, -262144
  %1082 = or i64 %1081, 16
  %1083 = inttoptr i64 %1082 to i64*
  %1084 = load i64, i64* %1083, align 16
  %1085 = add i64 %1084, -41416
  %1086 = inttoptr i64 %1085 to %"class.v8::internal::Isolate"*
  %1087 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1086, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %1088

1088:                                             ; preds = %1080, %1078
  %1089 = phi i64* [ %1087, %1080 ], [ %1079, %1078 ]
  %1090 = getelementptr inbounds i64, i64* %1089, i64 4
  %1091 = load i64, i64* %1090, align 8
  %1092 = trunc i64 %1091 to i32
  %1093 = icmp eq i32 %1066, %1092
  br i1 %1093, label %1131, label %1094

1094:                                             ; preds = %1088, %1044
  %1095 = add i64 %1068, 7
  %1096 = inttoptr i64 %1095 to i32*
  %1097 = load atomic i32, i32* %1096 monotonic, align 4
  %1098 = and i32 %1097, -2
  %1099 = icmp eq i32 %1098, 2
  %1100 = and i1 %1061, %1099
  br i1 %1100, label %1101, label %1131

1101:                                             ; preds = %1094
  %1102 = load i64, i64* %135, align 8
  %1103 = and i64 %1102, -4294967296
  %1104 = add i64 %1102, -1
  %1105 = inttoptr i64 %1104 to i32*
  %1106 = load atomic i32, i32* %1105 monotonic, align 4
  %1107 = zext i32 %1106 to i64
  %1108 = or i64 %1103, %1107
  %1109 = add i64 %1108, 7
  %1110 = inttoptr i64 %1109 to i16*
  %1111 = load atomic i16, i16* %1110 monotonic, align 2
  %1112 = and i16 %1111, 8
  %1113 = icmp eq i16 %1112, 0
  br i1 %1113, label %1129, label %1114

1114:                                             ; preds = %1101
  %1115 = load i64, i64* %188, align 8
  %1116 = and i64 %1115, -4294967296
  %1117 = add i64 %1115, -1
  %1118 = inttoptr i64 %1117 to i32*
  %1119 = load atomic i32, i32* %1118 monotonic, align 4
  %1120 = zext i32 %1119 to i64
  %1121 = or i64 %1116, %1120
  %1122 = add i64 %1121, 7
  %1123 = inttoptr i64 %1122 to i16*
  %1124 = load atomic i16, i16* %1123 monotonic, align 2
  %1125 = and i16 %1124, 8
  %1126 = icmp eq i16 %1125, 0
  br i1 %1126, label %1129, label %1127

1127:                                             ; preds = %1114
  %1128 = call fastcc i64 @_ZN2v88internalL39StringReplaceGlobalAtomRegExpWithStringINS0_16SeqOneByteStringEEENS0_6ObjectEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS6_INS0_8JSRegExpEEES8_NS6_INS0_15RegExpMatchInfoEEE(%"class.v8::internal::Isolate"* %2, i64* %135, i64* %1, i64* %188, i64* %225) #6
  br label %1267

1129:                                             ; preds = %1114, %1101
  %1130 = call fastcc i64 @_ZN2v88internalL39StringReplaceGlobalAtomRegExpWithStringINS0_16SeqTwoByteStringEEENS0_6ObjectEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS6_INS0_8JSRegExpEEES8_NS6_INS0_15RegExpMatchInfoEEE(%"class.v8::internal::Isolate"* %2, i64* %135, i64* %1, i64* %188, i64* %225) #6
  br label %1267

1131:                                             ; preds = %1094, %1088
  %1132 = bitcast %"class.v8::internal::RegExpGlobalCache"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1132) #6
  call void @_ZN2v88internal17RegExpGlobalCacheC1ENS0_6HandleINS0_8JSRegExpEEENS2_INS0_6StringEEEPNS0_7IsolateE(%"class.v8::internal::RegExpGlobalCache"* nonnull %16, i64* %1, i64* %135, %"class.v8::internal::Isolate"* %2) #6
  %1133 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %16, i64 0, i32 0
  %1134 = load i32, i32* %1133, align 8
  %1135 = icmp slt i32 %1134, 0
  br i1 %1135, label %1136, label %1139

1136:                                             ; preds = %1131
  %1137 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %1138 = load i64, i64* %1137, align 8
  br label %1265

1139:                                             ; preds = %1131
  %1140 = call i32* @_ZN2v88internal17RegExpGlobalCache9FetchNextEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %16) #6
  %1141 = icmp eq i32* %1140, null
  br i1 %1141, label %1142, label %1150

1142:                                             ; preds = %1139
  %1143 = load i32, i32* %1133, align 8
  %1144 = icmp slt i32 %1143, 0
  br i1 %1144, label %1145, label %1148

1145:                                             ; preds = %1142
  %1146 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %1147 = load i64, i64* %1146, align 8
  br label %1265

1148:                                             ; preds = %1142
  %1149 = load i64, i64* %135, align 8
  br label %1265

1150:                                             ; preds = %1139
  %1151 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %1048 to i64*
  %1152 = load i64, i64* %1151, align 8
  %1153 = bitcast %"class.v8::internal::CompiledReplacement"* %15 to i64*
  %1154 = load i64, i64* %1153, align 8
  %1155 = sub i64 %1152, %1154
  %1156 = lshr exact i64 %1155, 1
  %1157 = trunc i64 %1156 to i32
  %1158 = and i32 %1157, -4
  %1159 = add i32 %1158, 5
  %1160 = bitcast %"class.v8::internal::ReplacementStringBuilder"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1160) #6
  %1161 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 2
  call void @_ZN2v88internal24ReplacementStringBuilderC1EPNS0_4HeapENS0_6HandleINS0_6StringEEEi(%"class.v8::internal::ReplacementStringBuilder"* nonnull %17, %"class.v8::internal::Heap"* %1161, i64* %135, i32 %1159) #6
  %1162 = getelementptr inbounds %"class.v8::internal::ReplacementStringBuilder", %"class.v8::internal::ReplacementStringBuilder"* %17, i64 0, i32 1
  %1163 = getelementptr inbounds %"class.v8::internal::ReplacementStringBuilder", %"class.v8::internal::ReplacementStringBuilder"* %17, i64 0, i32 3
  br i1 %1061, label %1164, label %1195

1164:                                             ; preds = %1150, %1192
  %1165 = phi i32 [ %1169, %1192 ], [ 0, %1150 ]
  %1166 = phi i32* [ %1193, %1192 ], [ %1140, %1150 ]
  %1167 = load i32, i32* %1166, align 4
  %1168 = getelementptr inbounds i32, i32* %1166, i64 1
  %1169 = load i32, i32* %1168, align 4
  %1170 = icmp sgt i32 %1167, %1165
  br i1 %1170, label %1171, label %1192

1171:                                             ; preds = %1164
  call void @_ZN2v88internal24ReplacementStringBuilder14EnsureCapacityEi(%"class.v8::internal::ReplacementStringBuilder"* nonnull %17, i32 2) #6
  %1172 = sub nsw i32 %1167, %1165
  %1173 = icmp ult i32 %1172, 2048
  %1174 = icmp ult i32 %1165, 524288
  %1175 = and i1 %1174, %1173
  br i1 %1175, label %1180, label %1176

1176:                                             ; preds = %1171
  %1177 = sub nsw i32 0, %1172
  %1178 = sext i32 %1177 to i64
  %1179 = shl nsw i64 %1178, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* %1162, i64 %1179) #6
  br label %1183

1180:                                             ; preds = %1171
  %1181 = shl i32 %1165, 11
  %1182 = or i32 %1172, %1181
  br label %1183

1183:                                             ; preds = %1180, %1176
  %1184 = phi i32 [ %1182, %1180 ], [ %1165, %1176 ]
  %1185 = sext i32 %1184 to i64
  %1186 = shl nsw i64 %1185, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* %1162, i64 %1186) #6
  %1187 = load i32, i32* %1163, align 8
  %1188 = sub nsw i32 536870888, %1172
  %1189 = icmp sgt i32 %1187, %1188
  %1190 = add nsw i32 %1187, %1172
  %1191 = select i1 %1189, i32 2147483647, i32 %1190
  store i32 %1191, i32* %1163, align 8
  br label %1192

1192:                                             ; preds = %1183, %1164
  call void @_ZN2v88internal24ReplacementStringBuilder9AddStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::ReplacementStringBuilder"* nonnull %17, i64* %188) #6
  %1193 = call i32* @_ZN2v88internal17RegExpGlobalCache9FetchNextEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %16) #6
  %1194 = icmp eq i32* %1193, null
  br i1 %1194, label %1226, label %1164

1195:                                             ; preds = %1150, %1223
  %1196 = phi i32 [ %1200, %1223 ], [ 0, %1150 ]
  %1197 = phi i32* [ %1224, %1223 ], [ %1140, %1150 ]
  %1198 = load i32, i32* %1197, align 4
  %1199 = getelementptr inbounds i32, i32* %1197, i64 1
  %1200 = load i32, i32* %1199, align 4
  %1201 = icmp sgt i32 %1198, %1196
  br i1 %1201, label %1202, label %1223

1202:                                             ; preds = %1195
  call void @_ZN2v88internal24ReplacementStringBuilder14EnsureCapacityEi(%"class.v8::internal::ReplacementStringBuilder"* nonnull %17, i32 2) #6
  %1203 = sub nsw i32 %1198, %1196
  %1204 = icmp ult i32 %1203, 2048
  %1205 = icmp ult i32 %1196, 524288
  %1206 = and i1 %1205, %1204
  br i1 %1206, label %1207, label %1210

1207:                                             ; preds = %1202
  %1208 = shl i32 %1196, 11
  %1209 = or i32 %1203, %1208
  br label %1214

1210:                                             ; preds = %1202
  %1211 = sub nsw i32 0, %1203
  %1212 = sext i32 %1211 to i64
  %1213 = shl nsw i64 %1212, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* %1162, i64 %1213) #6
  br label %1214

1214:                                             ; preds = %1210, %1207
  %1215 = phi i32 [ %1196, %1210 ], [ %1209, %1207 ]
  %1216 = sext i32 %1215 to i64
  %1217 = shl nsw i64 %1216, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* %1162, i64 %1217) #6
  %1218 = load i32, i32* %1163, align 8
  %1219 = sub nsw i32 536870888, %1203
  %1220 = icmp sgt i32 %1218, %1219
  %1221 = add nsw i32 %1218, %1203
  %1222 = select i1 %1220, i32 2147483647, i32 %1221
  store i32 %1222, i32* %1163, align 8
  br label %1223

1223:                                             ; preds = %1214, %1195
  call void @_ZN2v88internal19CompiledReplacement5ApplyEPNS0_24ReplacementStringBuilderEiiPi(%"class.v8::internal::CompiledReplacement"* nonnull %15, %"class.v8::internal::ReplacementStringBuilder"* nonnull %17, i32 %1198, i32 %1200, i32* nonnull %1197) #6
  %1224 = call i32* @_ZN2v88internal17RegExpGlobalCache9FetchNextEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %16) #6
  %1225 = icmp eq i32* %1224, null
  br i1 %1225, label %1226, label %1195

1226:                                             ; preds = %1223, %1192
  %1227 = phi i32 [ %1169, %1192 ], [ %1200, %1223 ]
  %1228 = load i32, i32* %1133, align 8
  %1229 = icmp slt i32 %1228, 0
  br i1 %1229, label %1230, label %1232

1230:                                             ; preds = %1226
  %1231 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %1262

1232:                                             ; preds = %1226
  %1233 = icmp sgt i32 %1039, %1227
  br i1 %1233, label %1234, label %1255

1234:                                             ; preds = %1232
  call void @_ZN2v88internal24ReplacementStringBuilder14EnsureCapacityEi(%"class.v8::internal::ReplacementStringBuilder"* nonnull %17, i32 2) #6
  %1235 = sub nsw i32 %1039, %1227
  %1236 = icmp ult i32 %1235, 2048
  %1237 = icmp ult i32 %1227, 524288
  %1238 = and i1 %1237, %1236
  br i1 %1238, label %1239, label %1242

1239:                                             ; preds = %1234
  %1240 = shl i32 %1227, 11
  %1241 = or i32 %1235, %1240
  br label %1246

1242:                                             ; preds = %1234
  %1243 = sub nsw i32 0, %1235
  %1244 = sext i32 %1243 to i64
  %1245 = shl nsw i64 %1244, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* %1162, i64 %1245) #6
  br label %1246

1246:                                             ; preds = %1242, %1239
  %1247 = phi i32 [ %1227, %1242 ], [ %1241, %1239 ]
  %1248 = sext i32 %1247 to i64
  %1249 = shl nsw i64 %1248, 1
  call void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"* %1162, i64 %1249) #6
  %1250 = load i32, i32* %1163, align 8
  %1251 = sub nsw i32 536870888, %1235
  %1252 = icmp sgt i32 %1250, %1251
  %1253 = add nsw i32 %1250, %1235
  %1254 = select i1 %1252, i32 2147483647, i32 %1253
  store i32 %1254, i32* %1163, align 8
  br label %1255

1255:                                             ; preds = %1246, %1232
  %1256 = call i32* @_ZN2v88internal17RegExpGlobalCache19LastSuccessfulMatchEv(%"class.v8::internal::RegExpGlobalCache"* nonnull %16) #6
  %1257 = call i64* @_ZN2v88internal6RegExp16SetLastMatchInfoEPNS0_7IsolateENS0_6HandleINS0_15RegExpMatchInfoEEENS4_INS0_6StringEEEiPi(%"class.v8::internal::Isolate"* %2, i64* %225, i64* %135, i32 %1035, i32* %1256) #6
  %1258 = call i64* @_ZN2v88internal24ReplacementStringBuilder8ToStringEv(%"class.v8::internal::ReplacementStringBuilder"* nonnull %17) #6
  %1259 = icmp eq i64* %1258, null
  %1260 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %1261 = select i1 %1259, i64* %1260, i64* %1258
  br label %1262

1262:                                             ; preds = %1255, %1230
  %1263 = phi i64* [ %1231, %1230 ], [ %1261, %1255 ]
  %1264 = load i64, i64* %1263, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1160) #6
  br label %1265

1265:                                             ; preds = %1262, %1148, %1145, %1136
  %1266 = phi i64 [ %1138, %1136 ], [ %1147, %1145 ], [ %1149, %1148 ], [ %1264, %1262 ]
  call void @_ZN2v88internal17RegExpGlobalCacheD1Ev(%"class.v8::internal::RegExpGlobalCache"* nonnull %16) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1132) #6
  br label %1267

1267:                                             ; preds = %1265, %1129, %1127
  %1268 = phi i64 [ %1128, %1127 ], [ %1130, %1129 ], [ %1266, %1265 ]
  %1269 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %15, i64 0, i32 1, i32 0
  %1270 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %1269, align 8
  %1271 = bitcast %"struct.std::__1::aligned_storage<64, 8>::type"* %1054 to %"class.v8::internal::Handle"*
  %1272 = icmp eq %"class.v8::internal::Handle"* %1270, %1271
  br i1 %1272, label %1275, label %1273

1273:                                             ; preds = %1267
  %1274 = bitcast %"class.v8::internal::Handle"* %1270 to i8*
  call void @free(i8* %1274) #6
  br label %1275

1275:                                             ; preds = %1273, %1267
  %1276 = getelementptr inbounds %"class.v8::internal::CompiledReplacement", %"class.v8::internal::CompiledReplacement"* %15, i64 0, i32 0, i32 0
  %1277 = load %"struct.v8::internal::CompiledReplacement::ReplacementPart"*, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %1276, align 8
  %1278 = bitcast %"struct.std::__1::aligned_storage<64, 4>::type"* %1046 to %"struct.v8::internal::CompiledReplacement::ReplacementPart"*
  %1279 = icmp eq %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %1277, %1278
  br i1 %1279, label %1282, label %1280

1280:                                             ; preds = %1275
  %1281 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %1277 to i8*
  call void @free(i8* %1281) #6
  br label %1282

1282:                                             ; preds = %1280, %1275
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %1045) #6
  br label %1283

1283:                                             ; preds = %1282, %1041
  %1284 = phi i64 [ %1268, %1282 ], [ %1043, %1041 ]
  %1285 = and i64 %1284, 1
  %1286 = icmp eq i64 %1285, 0
  br i1 %1286, label %1319, label %1287

1287:                                             ; preds = %1283
  %1288 = and i64 %1284, -4294967296
  %1289 = add i64 %1284, -1
  %1290 = inttoptr i64 %1289 to i32*
  %1291 = load atomic i32, i32* %1290 monotonic, align 4
  %1292 = zext i32 %1291 to i64
  %1293 = or i64 %1288, %1292
  %1294 = add i64 %1293, 7
  %1295 = inttoptr i64 %1294 to i16*
  %1296 = load atomic i16, i16* %1295 monotonic, align 2
  %1297 = icmp ult i16 %1296, 64
  br i1 %1297, label %1298, label %1319

1298:                                             ; preds = %1287
  %1299 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %207, align 8
  %1300 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1299, null
  br i1 %1300, label %1304, label %1301

1301:                                             ; preds = %1298
  %1302 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1299, i64 %1284) #6
  %1303 = ptrtoint i64* %1302 to i64
  br label %1316

1304:                                             ; preds = %1298
  %1305 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %1306 = load i64*, i64** %1305, align 8
  %1307 = load i64*, i64** %93, align 8
  %1308 = icmp eq i64* %1306, %1307
  br i1 %1308, label %1309, label %1311

1309:                                             ; preds = %1304
  %1310 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %1311

1311:                                             ; preds = %1309, %1304
  %1312 = phi i64* [ %1310, %1309 ], [ %1306, %1304 ]
  %1313 = ptrtoint i64* %1312 to i64
  %1314 = add i64 %1313, 8
  %1315 = inttoptr i64 %1314 to i64*
  store i64* %1315, i64** %1305, align 8
  store i64 %1284, i64* %1312, align 8
  br label %1316

1316:                                             ; preds = %1311, %1301, %985, %975, %774, %764, %486, %345
  %1317 = phi i64 [ %346, %345 ], [ %487, %486 ], [ %766, %764 ], [ %776, %774 ], [ %977, %975 ], [ %987, %985 ], [ %1303, %1301 ], [ %1313, %1311 ]
  %1318 = icmp eq i64 %1317, 0
  br i1 %1318, label %1319, label %1322

1319:                                             ; preds = %1316, %1287, %1283, %488, %330, %282
  %1320 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %1321 = load i64, i64* %1320, align 8
  br label %2456

1322:                                             ; preds = %1316
  %1323 = inttoptr i64 %1317 to i64*
  %1324 = load i64, i64* %1323, align 8
  br label %2456

1325:                                             ; preds = %167
  %1326 = load i64, i64* %135, align 8
  %1327 = add i64 %1326, 7
  %1328 = inttoptr i64 %1327 to i32*
  %1329 = load i32, i32* %1328, align 4
  %1330 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 341
  %1331 = bitcast %"class.v8::internal::LookupIterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %1331) #6
  %1332 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %12, i64 0, i32 0
  %1333 = load i64, i64* %1330, align 8
  %1334 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 4
  %1335 = load i64, i64* %1334, align 8
  %1336 = add i64 %1333, -1
  %1337 = inttoptr i64 %1336 to i32*
  %1338 = load atomic i32, i32* %1337 monotonic, align 4
  %1339 = and i64 %1335, 4294967295
  %1340 = icmp eq i64 %1339, 0
  call void @llvm.assume(i1 %1340) #6
  %1341 = zext i32 %1338 to i64
  %1342 = or i64 %1335, %1341
  %1343 = add i64 %1342, 7
  %1344 = inttoptr i64 %1343 to i16*
  %1345 = load atomic i16, i16* %1344 monotonic, align 2
  %1346 = icmp eq i16 %1345, 64
  br i1 %1346, label %1347, label %1353

1347:                                             ; preds = %1325
  %1348 = add i64 %1333, 7
  %1349 = inttoptr i64 %1348 to i32*
  %1350 = load i32, i32* %1349, align 4
  %1351 = and i32 %1350, 1
  %1352 = icmp eq i32 %1351, 0
  br i1 %1352, label %1353, label %1354

1353:                                             ; preds = %1347, %1325
  br label %1354

1354:                                             ; preds = %1353, %1347
  %1355 = phi i32 [ 3, %1353 ], [ 0, %1347 ]
  store i32 %1355, i32* %1332, align 8
  %1356 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %12, i64 0, i32 1
  store i32 4, i32* %1356, align 4
  %1357 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %12, i64 0, i32 2
  store i8 0, i8* %1357, align 8
  %1358 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %12, i64 0, i32 3
  store i32 0, i32* %1358, align 4
  %1359 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %12, i64 0, i32 4, i32 0
  store i32 0, i32* %1359, align 8
  %1360 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %12, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %1360, align 8
  %1361 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %12, i64 0, i32 6, i32 0, i32 0
  store i64* %1330, i64** %1361, align 8
  %1362 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %12, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %1362, align 8
  %1363 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %12, i64 0, i32 8, i32 0, i32 0
  store i64* %1, i64** %1363, align 8
  %1364 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %12, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %1364, align 8
  %1365 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %12, i64 0, i32 10
  %1366 = bitcast %"class.v8::internal::Handle.1169"* %1365 to i64*
  store i64 %89, i64* %1366, align 8
  %1367 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %12, i64 0, i32 11
  %1368 = bitcast i64* %1367 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1368, i8 -1, i64 16, i1 false) #6
  %1369 = and i64 %1333, -4294967296
  %1370 = load atomic i32, i32* %1337 monotonic, align 4
  %1371 = zext i32 %1370 to i64
  %1372 = or i64 %1369, %1371
  %1373 = add i64 %1372, 7
  %1374 = inttoptr i64 %1373 to i16*
  %1375 = load atomic i16, i16* %1374 monotonic, align 2
  %1376 = and i16 %1375, -32
  %1377 = icmp eq i16 %1376, 32
  br i1 %1377, label %1378, label %1382

1378:                                             ; preds = %1354
  %1379 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 5, i32 0, i32 0, i32 0
  %1380 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %1379, align 8
  %1381 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %1380, %"class.v8::internal::Isolate"* %2, i64* %1330) #6
  br label %1382

1382:                                             ; preds = %1378, %1354
  %1383 = phi i64* [ %1381, %1378 ], [ %1330, %1354 ]
  store i64* %1383, i64** %1361, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %12) #6
  %1384 = load i32, i32* %1356, align 4
  %1385 = icmp eq i32 %1384, 4
  br i1 %1385, label %1386, label %1391

1386:                                             ; preds = %1382
  %1387 = bitcast %"class.v8::internal::Isolate"** %1360 to %"class.v8::internal::Factory"**
  %1388 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %1387, align 8
  %1389 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %1388, i64 160
  %1390 = bitcast %"class.v8::internal::Factory"* %1389 to i64*
  br label %1393

1391:                                             ; preds = %1382
  %1392 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %12, i1 zeroext false) #6
  br label %1393

1393:                                             ; preds = %1391, %1386
  %1394 = phi i64* [ %1392, %1391 ], [ %1390, %1386 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %1331) #6
  %1395 = icmp eq i64* %1394, null
  br i1 %1395, label %1396, label %1399

1396:                                             ; preds = %1393
  %1397 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %1398 = load i64, i64* %1397, align 8
  br label %2456

1399:                                             ; preds = %1393
  %1400 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1400) #6
  %1401 = load i64, i64* %1394, align 8
  %1402 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %21, i64 0, i32 0, i32 0, i32 0
  store i64 %1401, i64* %1402, align 8
  %1403 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %21, i64 0, i32 0
  %1404 = call zeroext i1 @_ZN2v88internal6Object12BooleanValueEPNS0_7IsolateE(%"class.v8::internal::Object"* nonnull %1403, %"class.v8::internal::Isolate"* %2) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1400) #6
  br i1 %1404, label %1405, label %1485

1405:                                             ; preds = %1399
  %1406 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 463
  %1407 = bitcast %"class.v8::internal::LookupIterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %1407) #6
  %1408 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 0
  %1409 = load i64, i64* %1406, align 8
  %1410 = load i64, i64* %1334, align 8
  %1411 = add i64 %1409, -1
  %1412 = inttoptr i64 %1411 to i32*
  %1413 = load atomic i32, i32* %1412 monotonic, align 4
  %1414 = and i64 %1410, 4294967295
  %1415 = icmp eq i64 %1414, 0
  call void @llvm.assume(i1 %1415) #6
  %1416 = zext i32 %1413 to i64
  %1417 = or i64 %1410, %1416
  %1418 = add i64 %1417, 7
  %1419 = inttoptr i64 %1418 to i16*
  %1420 = load atomic i16, i16* %1419 monotonic, align 2
  %1421 = icmp eq i16 %1420, 64
  br i1 %1421, label %1422, label %1428

1422:                                             ; preds = %1405
  %1423 = add i64 %1409, 7
  %1424 = inttoptr i64 %1423 to i32*
  %1425 = load i32, i32* %1424, align 4
  %1426 = and i32 %1425, 1
  %1427 = icmp eq i32 %1426, 0
  br i1 %1427, label %1428, label %1429

1428:                                             ; preds = %1422, %1405
  br label %1429

1429:                                             ; preds = %1428, %1422
  %1430 = phi i32 [ 3, %1428 ], [ 0, %1422 ]
  store i32 %1430, i32* %1408, align 8
  %1431 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 1
  store i32 4, i32* %1431, align 4
  %1432 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 2
  store i8 0, i8* %1432, align 8
  %1433 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 3
  store i32 0, i32* %1433, align 4
  %1434 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 4, i32 0
  store i32 0, i32* %1434, align 8
  %1435 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %1435, align 8
  %1436 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 6, i32 0, i32 0
  store i64* %1406, i64** %1436, align 8
  %1437 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %1437, align 8
  %1438 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 8, i32 0, i32 0
  store i64* %1, i64** %1438, align 8
  %1439 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %1439, align 8
  %1440 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 10
  %1441 = bitcast %"class.v8::internal::Handle.1169"* %1440 to i64*
  store i64 %89, i64* %1441, align 8
  %1442 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 11
  %1443 = bitcast i64* %1442 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1443, i8 -1, i64 16, i1 false) #6
  %1444 = and i64 %1409, -4294967296
  %1445 = load atomic i32, i32* %1412 monotonic, align 4
  %1446 = zext i32 %1445 to i64
  %1447 = or i64 %1444, %1446
  %1448 = add i64 %1447, 7
  %1449 = inttoptr i64 %1448 to i16*
  %1450 = load atomic i16, i16* %1449 monotonic, align 2
  %1451 = and i16 %1450, -32
  %1452 = icmp eq i16 %1451, 32
  br i1 %1452, label %1453, label %1457

1453:                                             ; preds = %1429
  %1454 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 5, i32 0, i32 0, i32 0
  %1455 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %1454, align 8
  %1456 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %1455, %"class.v8::internal::Isolate"* %2, i64* %1406) #6
  br label %1457

1457:                                             ; preds = %1453, %1429
  %1458 = phi i64* [ %1456, %1453 ], [ %1406, %1429 ]
  store i64* %1458, i64** %1436, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %11) #6
  %1459 = load i32, i32* %1431, align 4
  %1460 = icmp eq i32 %1459, 4
  br i1 %1460, label %1461, label %1466

1461:                                             ; preds = %1457
  %1462 = bitcast %"class.v8::internal::Isolate"** %1435 to %"class.v8::internal::Factory"**
  %1463 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %1462, align 8
  %1464 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %1463, i64 160
  %1465 = bitcast %"class.v8::internal::Factory"* %1464 to i64*
  br label %1468

1466:                                             ; preds = %1457
  %1467 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %11, i1 zeroext false) #6
  br label %1468

1468:                                             ; preds = %1466, %1461
  %1469 = phi i64* [ %1467, %1466 ], [ %1465, %1461 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %1407) #6
  %1470 = icmp eq i64* %1469, null
  br i1 %1470, label %1471, label %1474

1471:                                             ; preds = %1468
  %1472 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %1473 = load i64, i64* %1472, align 8
  br label %2456

1474:                                             ; preds = %1468
  %1475 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1475) #6
  %1476 = load i64, i64* %1469, align 8
  %1477 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %22, i64 0, i32 0, i32 0, i32 0
  store i64 %1476, i64* %1477, align 8
  %1478 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %22, i64 0, i32 0
  %1479 = call zeroext i1 @_ZN2v88internal6Object12BooleanValueEPNS0_7IsolateE(%"class.v8::internal::Object"* nonnull %1478, %"class.v8::internal::Isolate"* %2) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1475) #6
  %1480 = call i64* @_ZN2v88internal11RegExpUtils12SetLastIndexEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEEm(%"class.v8::internal::Isolate"* %2, i64* %1, i64 0) #6
  %1481 = icmp eq i64* %1480, null
  br i1 %1481, label %1482, label %1485

1482:                                             ; preds = %1474
  %1483 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %1484 = load i64, i64* %1483, align 8
  br label %2456

1485:                                             ; preds = %1474, %1399
  %1486 = phi i1 [ false, %1399 ], [ %1479, %1474 ]
  %1487 = bitcast %"class.v8::base::SmallVector.1203"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %1487) #6
  %1488 = getelementptr inbounds %"class.v8::base::SmallVector.1203", %"class.v8::base::SmallVector.1203"* %23, i64 0, i32 3
  %1489 = bitcast %"class.v8::base::SmallVector.1203"* %23 to %"struct.std::__1::aligned_storage<64, 8>::type"**
  store %"struct.std::__1::aligned_storage<64, 8>::type"* %1488, %"struct.std::__1::aligned_storage<64, 8>::type"** %1489, align 8
  %1490 = getelementptr inbounds %"class.v8::base::SmallVector.1203", %"class.v8::base::SmallVector.1203"* %23, i64 0, i32 1
  %1491 = bitcast %"class.v8::internal::Handle.1169"** %1490 to %"struct.std::__1::aligned_storage<64, 8>::type"**
  store %"struct.std::__1::aligned_storage<64, 8>::type"* %1488, %"struct.std::__1::aligned_storage<64, 8>::type"** %1491, align 8
  %1492 = getelementptr inbounds %"class.v8::base::SmallVector.1203", %"class.v8::base::SmallVector.1203"* %23, i64 0, i32 2
  %1493 = getelementptr inbounds %"struct.std::__1::aligned_storage<64, 8>::type", %"struct.std::__1::aligned_storage<64, 8>::type"* %1488, i64 1
  %1494 = bitcast %"class.v8::internal::Handle.1169"** %1492 to %"struct.std::__1::aligned_storage<64, 8>::type"**
  store %"struct.std::__1::aligned_storage<64, 8>::type"* %1493, %"struct.std::__1::aligned_storage<64, 8>::type"** %1494, align 8
  %1495 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 4
  %1496 = call i64* @_ZN2v88internal11RegExpUtils10RegExpExecEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEENS4_INS0_6StringEEENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %2, i64* %1, i64* %135, i64* %1495) #6
  %1497 = icmp eq i64* %1496, null
  br i1 %1497, label %1578, label %1498

1498:                                             ; preds = %1485
  %1499 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 6
  %1500 = bitcast %"class.v8::internal::LookupIterator"* %10 to i8*
  %1501 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 0
  %1502 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 1
  %1503 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 2
  %1504 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 3
  %1505 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 4, i32 0
  %1506 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 5
  %1507 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 8, i32 0, i32 0
  %1508 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 9, i32 0, i32 0
  %1509 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 10
  %1510 = bitcast %"class.v8::internal::Handle.1169"* %1509 to i64*
  %1511 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 11
  %1512 = bitcast %"class.v8::internal::Isolate"** %1506 to %"class.v8::internal::Factory"**
  br i1 %1404, label %1513, label %1581

1513:                                             ; preds = %1498
  %1514 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 6, i32 0, i32 0
  %1515 = bitcast i64** %1514 to i8*
  %1516 = bitcast i64* %1511 to <2 x i64>*
  br label %1517

1517:                                             ; preds = %1575, %1513
  %1518 = phi i64* [ %1576, %1575 ], [ %1496, %1513 ]
  %1519 = ptrtoint i64* %1518 to i64
  %1520 = load i64, i64* %1518, align 8
  %1521 = load i64, i64* %1499, align 8
  %1522 = trunc i64 %1520 to i32
  %1523 = trunc i64 %1521 to i32
  %1524 = icmp eq i32 %1522, %1523
  br i1 %1524, label %1607, label %1525

1525:                                             ; preds = %1517
  %1526 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %1490, align 8
  %1527 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %1492, align 8
  %1528 = icmp eq %"class.v8::internal::Handle.1169"* %1526, %1527
  br i1 %1528, label %1529, label %1531, !prof !2

1529:                                             ; preds = %1525
  %1530 = call %"class.v8::internal::Handle.1169"* @_ZN2v84base11SmallVectorINS_8internal6HandleINS2_6ObjectEEELm8EE4GrowEv(%"class.v8::base::SmallVector.1203"* nonnull %23) #6
  br label %1531

1531:                                             ; preds = %1529, %1525
  %1532 = phi %"class.v8::internal::Handle.1169"* [ %1530, %1529 ], [ %1526, %1525 ]
  %1533 = bitcast %"class.v8::internal::Handle.1169"* %1532 to i64*
  store i64 %1519, i64* %1533, align 8
  %1534 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %1532, i64 1
  store %"class.v8::internal::Handle.1169"* %1534, %"class.v8::internal::Handle.1169"** %1490, align 8
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %1500) #6
  store i32 3, i32* %1501, align 8
  store i32 4, i32* %1502, align 4
  store i8 0, i8* %1503, align 8
  store i32 0, i32* %1504, align 4
  store i32 0, i32* %1505, align 8
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %1506, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1515, i8 0, i64 16, i1 false) #6
  store i64* %1518, i64** %1507, align 8
  store i64* null, i64** %1508, align 8
  store i64 %1519, i64* %1510, align 8
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %1516, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"* nonnull %10) #6
  %1535 = load i32, i32* %1502, align 4
  %1536 = icmp eq i32 %1535, 4
  br i1 %1536, label %1539, label %1537

1537:                                             ; preds = %1531
  %1538 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %10, i1 zeroext false) #6
  br label %1543

1539:                                             ; preds = %1531
  %1540 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %1512, align 8
  %1541 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %1540, i64 160
  %1542 = bitcast %"class.v8::internal::Factory"* %1541 to i64*
  br label %1543

1543:                                             ; preds = %1539, %1537
  %1544 = phi i64* [ %1538, %1537 ], [ %1542, %1539 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %1500) #6
  %1545 = icmp eq i64* %1544, null
  br i1 %1545, label %1598, label %1546

1546:                                             ; preds = %1543
  %1547 = load i64, i64* %1544, align 8
  %1548 = and i64 %1547, 1
  %1549 = icmp eq i64 %1548, 0
  br i1 %1549, label %1561, label %1550

1550:                                             ; preds = %1546
  %1551 = and i64 %1547, -4294967296
  %1552 = add i64 %1547, -1
  %1553 = inttoptr i64 %1552 to i32*
  %1554 = load atomic i32, i32* %1553 monotonic, align 4
  %1555 = zext i32 %1554 to i64
  %1556 = or i64 %1551, %1555
  %1557 = add i64 %1556, 7
  %1558 = inttoptr i64 %1557 to i16*
  %1559 = load atomic i16, i16* %1558 monotonic, align 2
  %1560 = icmp ult i16 %1559, 64
  br i1 %1560, label %1566, label %1561

1561:                                             ; preds = %1550, %1546
  %1562 = call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* nonnull %1544) #6
  %1563 = icmp eq i64* %1562, null
  br i1 %1563, label %1601, label %1564

1564:                                             ; preds = %1561
  %1565 = load i64, i64* %1562, align 8
  br label %1566

1566:                                             ; preds = %1564, %1550
  %1567 = phi i64 [ %1565, %1564 ], [ %1547, %1550 ]
  %1568 = add i64 %1567, 7
  %1569 = inttoptr i64 %1568 to i32*
  %1570 = load i32, i32* %1569, align 4
  %1571 = icmp eq i32 %1570, 0
  br i1 %1571, label %1572, label %1575

1572:                                             ; preds = %1566
  %1573 = call i64* @_ZN2v88internal11RegExpUtils22SetAdvancedStringIndexEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEENS4_INS0_6StringEEEb(%"class.v8::internal::Isolate"* %2, i64* %1, i64* %135, i1 zeroext %1486) #6
  %1574 = icmp eq i64* %1573, null
  br i1 %1574, label %1604, label %1575

1575:                                             ; preds = %1572, %1566
  %1576 = call i64* @_ZN2v88internal11RegExpUtils10RegExpExecEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEENS4_INS0_6StringEEENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %2, i64* %1, i64* %135, i64* %1495) #6
  %1577 = icmp eq i64* %1576, null
  br i1 %1577, label %1578, label %1517

1578:                                             ; preds = %1575, %1485
  %1579 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %1580 = load i64, i64* %1579, align 8
  br label %2447

1581:                                             ; preds = %1498
  %1582 = ptrtoint i64* %1496 to i64
  %1583 = load i64, i64* %1496, align 8
  %1584 = load i64, i64* %1499, align 8
  %1585 = trunc i64 %1583 to i32
  %1586 = trunc i64 %1584 to i32
  %1587 = icmp eq i32 %1585, %1586
  br i1 %1587, label %1607, label %1588

1588:                                             ; preds = %1581
  %1589 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %1490, align 8
  %1590 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %1492, align 8
  %1591 = icmp eq %"class.v8::internal::Handle.1169"* %1589, %1590
  br i1 %1591, label %1592, label %1594, !prof !2

1592:                                             ; preds = %1588
  %1593 = call %"class.v8::internal::Handle.1169"* @_ZN2v84base11SmallVectorINS_8internal6HandleINS2_6ObjectEEELm8EE4GrowEv(%"class.v8::base::SmallVector.1203"* nonnull %23) #6
  br label %1594

1594:                                             ; preds = %1592, %1588
  %1595 = phi %"class.v8::internal::Handle.1169"* [ %1593, %1592 ], [ %1589, %1588 ]
  %1596 = bitcast %"class.v8::internal::Handle.1169"* %1595 to i64*
  store i64 %1582, i64* %1596, align 8
  %1597 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %1595, i64 1
  store %"class.v8::internal::Handle.1169"* %1597, %"class.v8::internal::Handle.1169"** %1490, align 8
  br label %1607

1598:                                             ; preds = %1543
  %1599 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %1600 = load i64, i64* %1599, align 8
  br label %2447

1601:                                             ; preds = %1561
  %1602 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %1603 = load i64, i64* %1602, align 8
  br label %2447

1604:                                             ; preds = %1572
  %1605 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %1606 = load i64, i64* %1605, align 8
  br label %2447

1607:                                             ; preds = %1517, %1594, %1581
  %1608 = bitcast %"class.v8::internal::IncrementalStringBuilder"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1608) #6
  call void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %24, %"class.v8::internal::Isolate"* %2) #6
  %1609 = getelementptr inbounds %"class.v8::base::SmallVector.1203", %"class.v8::base::SmallVector.1203"* %23, i64 0, i32 0
  %1610 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %1609, align 8
  %1611 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %1490, align 8
  %1612 = icmp eq %"class.v8::internal::Handle.1169"* %1610, %1611
  br i1 %1612, label %2424, label %1613

1613:                                             ; preds = %1607
  %1614 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 363
  %1615 = bitcast %"class.v8::internal::LookupIterator"* %9 to i8*
  %1616 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 0
  %1617 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 1
  %1618 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 2
  %1619 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 3
  %1620 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 4, i32 0
  %1621 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 5
  %1622 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 6, i32 0, i32 0
  %1623 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 7, i32 0, i32 0
  %1624 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 8, i32 0, i32 0
  %1625 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 9, i32 0, i32 0
  %1626 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 10
  %1627 = bitcast %"class.v8::internal::Handle.1169"* %1626 to i64*
  %1628 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 11
  %1629 = bitcast i64* %1628 to i8*
  %1630 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 5, i32 0, i32 0, i32 0
  %1631 = bitcast %"class.v8::internal::Isolate"** %1621 to %"class.v8::internal::Factory"**
  %1632 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %1633 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %1634 = bitcast %"class.v8::internal::LookupIterator"* %8 to i8*
  %1635 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 0
  %1636 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 1
  %1637 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 2
  %1638 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 3
  %1639 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 4, i32 0
  %1640 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 5
  %1641 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 6, i32 0, i32 0
  %1642 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 8, i32 0, i32 0
  %1643 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 9, i32 0, i32 0
  %1644 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 10
  %1645 = bitcast %"class.v8::internal::Handle.1169"* %1644 to i64*
  %1646 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 11
  %1647 = bitcast %"class.v8::internal::Isolate"** %1640 to %"class.v8::internal::Factory"**
  %1648 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 350
  %1649 = bitcast %"class.v8::internal::LookupIterator"* %7 to i8*
  %1650 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 0
  %1651 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 1
  %1652 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 2
  %1653 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 3
  %1654 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 4, i32 0
  %1655 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 5
  %1656 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 6, i32 0, i32 0
  %1657 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 7, i32 0, i32 0
  %1658 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 8, i32 0, i32 0
  %1659 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 9, i32 0, i32 0
  %1660 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 10
  %1661 = bitcast %"class.v8::internal::Handle.1169"* %1660 to i64*
  %1662 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 11
  %1663 = bitcast i64* %1662 to i8*
  %1664 = bitcast %"class.v8::internal::Isolate"** %1655 to %"class.v8::internal::Factory"**
  %1665 = bitcast %"class.v8::base::SmallVector.1203"* %25 to i8*
  %1666 = getelementptr inbounds %"class.v8::base::SmallVector.1203", %"class.v8::base::SmallVector.1203"* %25, i64 0, i32 3
  %1667 = bitcast %"class.v8::base::SmallVector.1203"* %25 to %"struct.std::__1::aligned_storage<64, 8>::type"**
  %1668 = getelementptr inbounds %"class.v8::base::SmallVector.1203", %"class.v8::base::SmallVector.1203"* %25, i64 0, i32 1
  %1669 = bitcast %"class.v8::internal::Handle.1169"** %1668 to %"struct.std::__1::aligned_storage<64, 8>::type"**
  %1670 = getelementptr inbounds %"class.v8::base::SmallVector.1203", %"class.v8::base::SmallVector.1203"* %25, i64 0, i32 2
  %1671 = getelementptr inbounds %"struct.std::__1::aligned_storage<64, 8>::type", %"struct.std::__1::aligned_storage<64, 8>::type"* %1666, i64 1
  %1672 = bitcast %"class.v8::internal::Handle.1169"** %1670 to %"struct.std::__1::aligned_storage<64, 8>::type"**
  %1673 = bitcast %"class.v8::internal::LookupIterator"* %6 to i8*
  %1674 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 1
  %1675 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 5
  %1676 = bitcast %"class.v8::internal::Isolate"** %1675 to %"class.v8::internal::Factory"**
  %1677 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %1678 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 343
  %1679 = bitcast %"class.v8::internal::LookupIterator"* %5 to i8*
  %1680 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 0
  %1681 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 1
  %1682 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 2
  %1683 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 3
  %1684 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 4, i32 0
  %1685 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 5
  %1686 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 6, i32 0, i32 0
  %1687 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 7, i32 0, i32 0
  %1688 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 8, i32 0, i32 0
  %1689 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 9, i32 0, i32 0
  %1690 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 10
  %1691 = bitcast %"class.v8::internal::Handle.1169"* %1690 to i64*
  %1692 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 11
  %1693 = bitcast i64* %1692 to i8*
  %1694 = bitcast %"class.v8::internal::Isolate"** %1685 to %"class.v8::internal::Factory"**
  %1695 = bitcast %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %26 to i8*
  %1696 = getelementptr inbounds %"class.v8::base::SmallVector.1203", %"class.v8::base::SmallVector.1203"* %25, i64 0, i32 0
  %1697 = bitcast %"class.v8::internal::Handle.1169"** %1668 to i64*
  %1698 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %26, i64 0, i32 0, i32 0
  %1699 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %26, i64 0, i32 1
  %1700 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %26, i64 0, i32 2, i32 0, i32 0
  %1701 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %26, i64 0, i32 3, i32 0, i32 0
  %1702 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %26, i64 0, i32 4
  %1703 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %26, i64 0, i32 5, i32 0
  %1704 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %26, i64 0, i32 5, i32 1
  %1705 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %26, i64 0, i32 7, i32 0, i32 0
  %1706 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %26, i64 0, i32 6
  %1707 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %26, i64 0, i32 0
  %1708 = ptrtoint i64* %135 to i64
  %1709 = bitcast %"struct.std::__1::aligned_storage<64, 8>::type"* %1666 to %"class.v8::internal::Handle.1169"*
  %1710 = icmp eq %"class.v8::internal::Isolate"* %2, null
  %1711 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %90, i64 0, i32 0
  %1712 = bitcast i64** %1641 to i8*
  %1713 = bitcast i64* %1646 to <2 x i64>*
  br label %1716

1714:                                             ; preds = %2421
  %1715 = icmp eq %"class.v8::internal::Handle.1169"* %2423, %1611
  br i1 %1715, label %2424, label %1716

1716:                                             ; preds = %1714, %1613
  %1717 = phi i64 [ undef, %1613 ], [ %2408, %1714 ]
  %1718 = phi i32 [ 0, %1613 ], [ %2406, %1714 ]
  %1719 = phi %"class.v8::internal::Handle.1169"* [ %1610, %1613 ], [ %2423, %1714 ]
  %1720 = load i64, i64* %91, align 8
  %1721 = load i64*, i64** %93, align 8
  %1722 = load i32, i32* %95, align 8
  %1723 = add nsw i32 %1722, 1
  store i32 %1723, i32* %95, align 8
  %1724 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %1719, i64 0, i32 0, i32 0
  %1725 = load i64*, i64** %1724, align 8
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %1615) #6
  %1726 = ptrtoint i64* %1725 to i64
  %1727 = load i64, i64* %1614, align 8
  %1728 = load i64, i64* %1334, align 8
  %1729 = add i64 %1727, -1
  %1730 = inttoptr i64 %1729 to i32*
  %1731 = load atomic i32, i32* %1730 monotonic, align 4
  %1732 = and i64 %1728, 4294967295
  %1733 = icmp eq i64 %1732, 0
  call void @llvm.assume(i1 %1733) #6
  %1734 = zext i32 %1731 to i64
  %1735 = or i64 %1728, %1734
  %1736 = add i64 %1735, 7
  %1737 = inttoptr i64 %1736 to i16*
  %1738 = load atomic i16, i16* %1737 monotonic, align 2
  %1739 = icmp eq i16 %1738, 64
  br i1 %1739, label %1740, label %1746

1740:                                             ; preds = %1716
  %1741 = add i64 %1727, 7
  %1742 = inttoptr i64 %1741 to i32*
  %1743 = load i32, i32* %1742, align 4
  %1744 = and i32 %1743, 1
  %1745 = icmp eq i32 %1744, 0
  br i1 %1745, label %1746, label %1747

1746:                                             ; preds = %1740, %1716
  br label %1747

1747:                                             ; preds = %1746, %1740
  %1748 = phi i32 [ 3, %1746 ], [ 0, %1740 ]
  store i32 %1748, i32* %1616, align 8
  store i32 4, i32* %1617, align 4
  store i8 0, i8* %1618, align 8
  store i32 0, i32* %1619, align 4
  store i32 0, i32* %1620, align 8
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %1621, align 8
  store i64* %1614, i64** %1622, align 8
  store i64* null, i64** %1623, align 8
  store i64* %1725, i64** %1624, align 8
  store i64* null, i64** %1625, align 8
  store i64 %1726, i64* %1627, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1629, i8 -1, i64 16, i1 false) #6
  %1749 = and i64 %1727, -4294967296
  %1750 = load atomic i32, i32* %1730 monotonic, align 4
  %1751 = zext i32 %1750 to i64
  %1752 = or i64 %1749, %1751
  %1753 = add i64 %1752, 7
  %1754 = inttoptr i64 %1753 to i16*
  %1755 = load atomic i16, i16* %1754 monotonic, align 2
  %1756 = and i16 %1755, -32
  %1757 = icmp eq i16 %1756, 32
  br i1 %1757, label %1758, label %1761

1758:                                             ; preds = %1747
  %1759 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %1630, align 8
  %1760 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %1759, %"class.v8::internal::Isolate"* %2, i64* %1614) #6
  br label %1761

1761:                                             ; preds = %1758, %1747
  %1762 = phi i64* [ %1760, %1758 ], [ %1614, %1747 ]
  store i64* %1762, i64** %1622, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %9) #6
  %1763 = load i32, i32* %1617, align 4
  %1764 = icmp eq i32 %1763, 4
  br i1 %1764, label %1765, label %1769

1765:                                             ; preds = %1761
  %1766 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %1631, align 8
  %1767 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %1766, i64 160
  %1768 = bitcast %"class.v8::internal::Factory"* %1767 to i64*
  br label %1771

1769:                                             ; preds = %1761
  %1770 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %9, i1 zeroext false) #6
  br label %1771

1771:                                             ; preds = %1769, %1765
  %1772 = phi i64* [ %1770, %1769 ], [ %1768, %1765 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %1615) #6
  %1773 = icmp eq i64* %1772, null
  br i1 %1773, label %1774, label %1776

1774:                                             ; preds = %1771
  %1775 = load i64, i64* %1677, align 8
  br label %2405

1776:                                             ; preds = %1771
  %1777 = load i64, i64* %1772, align 8
  %1778 = and i64 %1777, 1
  %1779 = icmp eq i64 %1778, 0
  br i1 %1779, label %1780, label %1802

1780:                                             ; preds = %1776
  %1781 = trunc i64 %1777 to i32
  %1782 = ashr i32 %1781, 1
  %1783 = icmp sgt i32 %1782, 0
  %1784 = select i1 %1783, i32 %1782, i32 0
  %1785 = shl nuw nsw i32 %1784, 1
  %1786 = zext i32 %1785 to i64
  %1787 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %1632, align 8
  %1788 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1787, null
  br i1 %1788, label %1791, label %1789

1789:                                             ; preds = %1780
  %1790 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1787, i64 %1786) #6
  br label %1804

1791:                                             ; preds = %1780
  %1792 = load i64*, i64** %1633, align 8
  %1793 = load i64*, i64** %93, align 8
  %1794 = icmp eq i64* %1792, %1793
  br i1 %1794, label %1795, label %1797

1795:                                             ; preds = %1791
  %1796 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %1797

1797:                                             ; preds = %1795, %1791
  %1798 = phi i64* [ %1796, %1795 ], [ %1792, %1791 ]
  %1799 = ptrtoint i64* %1798 to i64
  %1800 = add i64 %1799, 8
  %1801 = inttoptr i64 %1800 to i64*
  store i64* %1801, i64** %1633, align 8
  store i64 %1786, i64* %1798, align 8
  br label %1804

1802:                                             ; preds = %1776
  %1803 = call i64* @_ZN2v88internal6Object15ConvertToLengthEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* nonnull %1772) #6
  br label %1804

1804:                                             ; preds = %1802, %1797, %1789
  %1805 = phi i64* [ %1803, %1802 ], [ %1790, %1789 ], [ %1798, %1797 ]
  %1806 = icmp eq i64* %1805, null
  br i1 %1806, label %1807, label %1809

1807:                                             ; preds = %1804
  %1808 = load i64, i64* %1677, align 8
  br label %2405

1809:                                             ; preds = %1804
  %1810 = load i64, i64* %1805, align 8
  %1811 = and i64 %1810, 1
  %1812 = icmp eq i64 %1811, 0
  br i1 %1812, label %1813, label %1818

1813:                                             ; preds = %1809
  %1814 = trunc i64 %1810 to i32
  %1815 = ashr i32 %1814, 1
  %1816 = icmp slt i32 %1814, 2
  %1817 = select i1 %1816, i32 0, i32 %1815
  br label %1827

1818:                                             ; preds = %1809
  %1819 = add i64 %1810, 3
  %1820 = inttoptr i64 %1819 to double*
  %1821 = load double, double* %1820, align 1
  %1822 = fcmp ult double %1821, 1.000000e+00
  br i1 %1822, label %1827, label %1823

1823:                                             ; preds = %1818
  %1824 = fcmp olt double %1821, 0x41EFFFFFFFE00000
  %1825 = select i1 %1824, double %1821, double 0x41EFFFFFFFE00000
  %1826 = fptoui double %1825 to i32
  br label %1827

1827:                                             ; preds = %1823, %1818, %1813
  %1828 = phi i32 [ %1817, %1813 ], [ 0, %1818 ], [ %1826, %1823 ]
  %1829 = load i64*, i64** %1724, align 8
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %1634) #6
  %1830 = ptrtoint i64* %1829 to i64
  store i32 3, i32* %1635, align 8
  store i32 4, i32* %1636, align 4
  store i8 0, i8* %1637, align 8
  store i32 0, i32* %1638, align 4
  store i32 0, i32* %1639, align 8
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %1640, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1712, i8 0, i64 16, i1 false) #6
  store i64* %1829, i64** %1642, align 8
  store i64* null, i64** %1643, align 8
  store i64 %1830, i64* %1645, align 8
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %1713, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"* nonnull %8) #6
  %1831 = load i32, i32* %1636, align 4
  %1832 = icmp eq i32 %1831, 4
  br i1 %1832, label %1833, label %1837

1833:                                             ; preds = %1827
  %1834 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %1647, align 8
  %1835 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %1834, i64 160
  %1836 = bitcast %"class.v8::internal::Factory"* %1835 to i64*
  br label %1839

1837:                                             ; preds = %1827
  %1838 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %8, i1 zeroext false) #6
  br label %1839

1839:                                             ; preds = %1837, %1833
  %1840 = phi i64* [ %1838, %1837 ], [ %1836, %1833 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %1634) #6
  %1841 = icmp eq i64* %1840, null
  br i1 %1841, label %1842, label %1844

1842:                                             ; preds = %1839
  %1843 = load i64, i64* %1677, align 8
  br label %2405

1844:                                             ; preds = %1839
  %1845 = load i64, i64* %1840, align 8
  %1846 = and i64 %1845, 1
  %1847 = icmp eq i64 %1846, 0
  br i1 %1847, label %1859, label %1848

1848:                                             ; preds = %1844
  %1849 = and i64 %1845, -4294967296
  %1850 = add i64 %1845, -1
  %1851 = inttoptr i64 %1850 to i32*
  %1852 = load atomic i32, i32* %1851 monotonic, align 4
  %1853 = zext i32 %1852 to i64
  %1854 = or i64 %1849, %1853
  %1855 = add i64 %1854, 7
  %1856 = inttoptr i64 %1855 to i16*
  %1857 = load atomic i16, i16* %1856 monotonic, align 2
  %1858 = icmp ult i16 %1857, 64
  br i1 %1858, label %1866, label %1859

1859:                                             ; preds = %1848, %1844
  %1860 = call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* nonnull %1840) #6
  %1861 = icmp eq i64* %1860, null
  br i1 %1861, label %1864, label %1862

1862:                                             ; preds = %1859
  %1863 = load i64, i64* %1860, align 8
  br label %1866

1864:                                             ; preds = %1859
  %1865 = load i64, i64* %1677, align 8
  br label %2405

1866:                                             ; preds = %1862, %1848
  %1867 = phi i64 [ %1863, %1862 ], [ %1845, %1848 ]
  %1868 = phi i64* [ %1860, %1862 ], [ %1840, %1848 ]
  %1869 = add i64 %1867, 7
  %1870 = inttoptr i64 %1869 to i32*
  %1871 = load i32, i32* %1870, align 4
  %1872 = load i64*, i64** %1724, align 8
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %1649) #6
  %1873 = ptrtoint i64* %1872 to i64
  %1874 = load i64, i64* %1648, align 8
  %1875 = load i64, i64* %1334, align 8
  %1876 = add i64 %1874, -1
  %1877 = inttoptr i64 %1876 to i32*
  %1878 = load atomic i32, i32* %1877 monotonic, align 4
  %1879 = and i64 %1875, 4294967295
  %1880 = icmp eq i64 %1879, 0
  call void @llvm.assume(i1 %1880) #6
  %1881 = zext i32 %1878 to i64
  %1882 = or i64 %1875, %1881
  %1883 = add i64 %1882, 7
  %1884 = inttoptr i64 %1883 to i16*
  %1885 = load atomic i16, i16* %1884 monotonic, align 2
  %1886 = icmp eq i16 %1885, 64
  br i1 %1886, label %1887, label %1893

1887:                                             ; preds = %1866
  %1888 = add i64 %1874, 7
  %1889 = inttoptr i64 %1888 to i32*
  %1890 = load i32, i32* %1889, align 4
  %1891 = and i32 %1890, 1
  %1892 = icmp eq i32 %1891, 0
  br i1 %1892, label %1893, label %1894

1893:                                             ; preds = %1887, %1866
  br label %1894

1894:                                             ; preds = %1893, %1887
  %1895 = phi i32 [ 3, %1893 ], [ 0, %1887 ]
  store i32 %1895, i32* %1650, align 8
  store i32 4, i32* %1651, align 4
  store i8 0, i8* %1652, align 8
  store i32 0, i32* %1653, align 4
  store i32 0, i32* %1654, align 8
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %1655, align 8
  store i64* %1648, i64** %1656, align 8
  store i64* null, i64** %1657, align 8
  store i64* %1872, i64** %1658, align 8
  store i64* null, i64** %1659, align 8
  store i64 %1873, i64* %1661, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1663, i8 -1, i64 16, i1 false) #6
  %1896 = and i64 %1874, -4294967296
  %1897 = load atomic i32, i32* %1877 monotonic, align 4
  %1898 = zext i32 %1897 to i64
  %1899 = or i64 %1896, %1898
  %1900 = add i64 %1899, 7
  %1901 = inttoptr i64 %1900 to i16*
  %1902 = load atomic i16, i16* %1901 monotonic, align 2
  %1903 = and i16 %1902, -32
  %1904 = icmp eq i16 %1903, 32
  br i1 %1904, label %1905, label %1908

1905:                                             ; preds = %1894
  %1906 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %1630, align 8
  %1907 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %1906, %"class.v8::internal::Isolate"* %2, i64* %1648) #6
  br label %1908

1908:                                             ; preds = %1905, %1894
  %1909 = phi i64* [ %1907, %1905 ], [ %1648, %1894 ]
  store i64* %1909, i64** %1656, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %7) #6
  %1910 = load i32, i32* %1651, align 4
  %1911 = icmp eq i32 %1910, 4
  br i1 %1911, label %1912, label %1916

1912:                                             ; preds = %1908
  %1913 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %1664, align 8
  %1914 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %1913, i64 160
  %1915 = bitcast %"class.v8::internal::Factory"* %1914 to i64*
  br label %1918

1916:                                             ; preds = %1908
  %1917 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %7, i1 zeroext false) #6
  br label %1918

1918:                                             ; preds = %1916, %1912
  %1919 = phi i64* [ %1917, %1916 ], [ %1915, %1912 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %1649) #6
  %1920 = icmp eq i64* %1919, null
  br i1 %1920, label %1921, label %1923

1921:                                             ; preds = %1918
  %1922 = load i64, i64* %1677, align 8
  br label %2405

1923:                                             ; preds = %1918
  %1924 = load i64, i64* %1919, align 8
  %1925 = and i64 %1924, 1
  %1926 = icmp eq i64 %1925, 0
  br i1 %1926, label %1934, label %1927

1927:                                             ; preds = %1923
  %1928 = call i64* @_ZN2v88internal6Object16ConvertToIntegerEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* nonnull %1919) #6
  %1929 = icmp eq i64* %1928, null
  br i1 %1929, label %1932, label %1930

1930:                                             ; preds = %1927
  %1931 = load i64, i64* %1928, align 8
  br label %1934

1932:                                             ; preds = %1927
  %1933 = load i64, i64* %1677, align 8
  br label %2405

1934:                                             ; preds = %1930, %1923
  %1935 = phi i64 [ %1931, %1930 ], [ %1924, %1923 ]
  %1936 = and i64 %1935, 1
  %1937 = icmp eq i64 %1936, 0
  br i1 %1937, label %1938, label %1943

1938:                                             ; preds = %1934
  %1939 = trunc i64 %1935 to i32
  %1940 = ashr i32 %1939, 1
  %1941 = icmp slt i32 %1939, 2
  %1942 = select i1 %1941, i32 0, i32 %1940
  br label %1952

1943:                                             ; preds = %1934
  %1944 = add i64 %1935, 3
  %1945 = inttoptr i64 %1944 to double*
  %1946 = load double, double* %1945, align 1
  %1947 = fcmp ult double %1946, 1.000000e+00
  br i1 %1947, label %1952, label %1948

1948:                                             ; preds = %1943
  %1949 = fcmp olt double %1946, 0x41EFFFFFFFE00000
  %1950 = select i1 %1949, double %1946, double 0x41EFFFFFFFE00000
  %1951 = fptoui double %1950 to i32
  br label %1952

1952:                                             ; preds = %1948, %1943, %1938
  %1953 = phi i32 [ %1942, %1938 ], [ 0, %1943 ], [ %1951, %1948 ]
  %1954 = icmp ult i32 %1329, %1953
  %1955 = select i1 %1954, i32 %1329, i32 %1953
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %1665) #6
  store %"struct.std::__1::aligned_storage<64, 8>::type"* %1666, %"struct.std::__1::aligned_storage<64, 8>::type"** %1667, align 8
  store %"struct.std::__1::aligned_storage<64, 8>::type"* %1666, %"struct.std::__1::aligned_storage<64, 8>::type"** %1669, align 8
  store %"struct.std::__1::aligned_storage<64, 8>::type"* %1671, %"struct.std::__1::aligned_storage<64, 8>::type"** %1672, align 8
  %1956 = icmp eq i32 %1828, 0
  %1957 = load i64*, i64** %1724, align 8
  br i1 %1956, label %2016, label %1958

1958:                                             ; preds = %1952
  %1959 = zext i32 %1828 to i64
  br label %1960

1960:                                             ; preds = %2009, %1958
  %1961 = phi i64 [ 0, %1958 ], [ %2013, %2009 ]
  %1962 = phi i64* [ %1957, %1958 ], [ %2014, %2009 ]
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %1673) #6
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %6, %"class.v8::internal::Isolate"* %2, i64* %1962, i64* null, i64 %1961, i64* %1962, i32 3) #6
  %1963 = load i32, i32* %1674, align 4
  %1964 = icmp eq i32 %1963, 4
  br i1 %1964, label %1965, label %1969

1965:                                             ; preds = %1960
  %1966 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %1676, align 8
  %1967 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %1966, i64 160
  %1968 = bitcast %"class.v8::internal::Factory"* %1967 to i64*
  br label %1971

1969:                                             ; preds = %1960
  %1970 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %6, i1 zeroext false) #6
  br label %1971

1971:                                             ; preds = %1969, %1965
  %1972 = phi i64* [ %1970, %1969 ], [ %1968, %1965 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %1673) #6
  %1973 = icmp eq i64* %1972, null
  br i1 %1973, label %1974, label %1976

1974:                                             ; preds = %1971
  %1975 = load i64, i64* %1677, align 8
  br label %2396

1976:                                             ; preds = %1971
  %1977 = load i64, i64* %1972, align 8
  %1978 = load i64, i64* %1495, align 8
  %1979 = trunc i64 %1977 to i32
  %1980 = trunc i64 %1978 to i32
  %1981 = icmp eq i32 %1979, %1980
  br i1 %1981, label %2001, label %1982

1982:                                             ; preds = %1976
  %1983 = and i64 %1977, 1
  %1984 = icmp eq i64 %1983, 0
  br i1 %1984, label %1996, label %1985

1985:                                             ; preds = %1982
  %1986 = and i64 %1977, -4294967296
  %1987 = add i64 %1977, -1
  %1988 = inttoptr i64 %1987 to i32*
  %1989 = load atomic i32, i32* %1988 monotonic, align 4
  %1990 = zext i32 %1989 to i64
  %1991 = or i64 %1986, %1990
  %1992 = add i64 %1991, 7
  %1993 = inttoptr i64 %1992 to i16*
  %1994 = load atomic i16, i16* %1993 monotonic, align 2
  %1995 = icmp ult i16 %1994, 64
  br i1 %1995, label %2001, label %1996

1996:                                             ; preds = %1985, %1982
  %1997 = call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* nonnull %1972) #6
  %1998 = icmp eq i64* %1997, null
  br i1 %1998, label %1999, label %2001

1999:                                             ; preds = %1996
  %2000 = load i64, i64* %1677, align 8
  br label %2396

2001:                                             ; preds = %1996, %1985, %1976
  %2002 = phi i64* [ %1972, %1976 ], [ %1997, %1996 ], [ %1972, %1985 ]
  %2003 = ptrtoint i64* %2002 to i64
  %2004 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %1668, align 8
  %2005 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %1670, align 8
  %2006 = icmp eq %"class.v8::internal::Handle.1169"* %2004, %2005
  br i1 %2006, label %2007, label %2009, !prof !2

2007:                                             ; preds = %2001
  %2008 = call %"class.v8::internal::Handle.1169"* @_ZN2v84base11SmallVectorINS_8internal6HandleINS2_6ObjectEEELm8EE4GrowEv(%"class.v8::base::SmallVector.1203"* nonnull %25) #6
  br label %2009

2009:                                             ; preds = %2007, %2001
  %2010 = phi %"class.v8::internal::Handle.1169"* [ %2008, %2007 ], [ %2004, %2001 ]
  %2011 = bitcast %"class.v8::internal::Handle.1169"* %2010 to i64*
  store i64 %2003, i64* %2011, align 8
  %2012 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2010, i64 1
  store %"class.v8::internal::Handle.1169"* %2012, %"class.v8::internal::Handle.1169"** %1668, align 8
  %2013 = add nuw nsw i64 %1961, 1
  %2014 = load i64*, i64** %1724, align 8
  %2015 = icmp eq i64 %2013, %1959
  br i1 %2015, label %2016, label %1960

2016:                                             ; preds = %2009, %1952
  %2017 = phi i64* [ %1957, %1952 ], [ %2014, %2009 ]
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %1679) #6
  %2018 = ptrtoint i64* %2017 to i64
  %2019 = load i64, i64* %1678, align 8
  %2020 = load i64, i64* %1334, align 8
  %2021 = add i64 %2019, -1
  %2022 = inttoptr i64 %2021 to i32*
  %2023 = load atomic i32, i32* %2022 monotonic, align 4
  %2024 = and i64 %2020, 4294967295
  %2025 = icmp eq i64 %2024, 0
  call void @llvm.assume(i1 %2025) #6
  %2026 = zext i32 %2023 to i64
  %2027 = or i64 %2020, %2026
  %2028 = add i64 %2027, 7
  %2029 = inttoptr i64 %2028 to i16*
  %2030 = load atomic i16, i16* %2029 monotonic, align 2
  %2031 = icmp eq i16 %2030, 64
  br i1 %2031, label %2032, label %2038

2032:                                             ; preds = %2016
  %2033 = add i64 %2019, 7
  %2034 = inttoptr i64 %2033 to i32*
  %2035 = load i32, i32* %2034, align 4
  %2036 = and i32 %2035, 1
  %2037 = icmp eq i32 %2036, 0
  br i1 %2037, label %2038, label %2039

2038:                                             ; preds = %2032, %2016
  br label %2039

2039:                                             ; preds = %2038, %2032
  %2040 = phi i32 [ 3, %2038 ], [ 0, %2032 ]
  store i32 %2040, i32* %1680, align 8
  store i32 4, i32* %1681, align 4
  store i8 0, i8* %1682, align 8
  store i32 0, i32* %1683, align 4
  store i32 0, i32* %1684, align 8
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %1685, align 8
  store i64* %1678, i64** %1686, align 8
  store i64* null, i64** %1687, align 8
  store i64* %2017, i64** %1688, align 8
  store i64* null, i64** %1689, align 8
  store i64 %2018, i64* %1691, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1693, i8 -1, i64 16, i1 false) #6
  %2041 = and i64 %2019, -4294967296
  %2042 = load atomic i32, i32* %2022 monotonic, align 4
  %2043 = zext i32 %2042 to i64
  %2044 = or i64 %2041, %2043
  %2045 = add i64 %2044, 7
  %2046 = inttoptr i64 %2045 to i16*
  %2047 = load atomic i16, i16* %2046 monotonic, align 2
  %2048 = and i16 %2047, -32
  %2049 = icmp eq i16 %2048, 32
  br i1 %2049, label %2050, label %2053

2050:                                             ; preds = %2039
  %2051 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %1630, align 8
  %2052 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %2051, %"class.v8::internal::Isolate"* %2, i64* %1678) #6
  br label %2053

2053:                                             ; preds = %2050, %2039
  %2054 = phi i64* [ %2052, %2050 ], [ %1678, %2039 ]
  store i64* %2054, i64** %1686, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %5) #6
  %2055 = load i32, i32* %1681, align 4
  %2056 = icmp eq i32 %2055, 4
  br i1 %2056, label %2057, label %2061

2057:                                             ; preds = %2053
  %2058 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %1694, align 8
  %2059 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %2058, i64 160
  %2060 = bitcast %"class.v8::internal::Factory"* %2059 to i64*
  br label %2063

2061:                                             ; preds = %2053
  %2062 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %5, i1 zeroext false) #6
  br label %2063

2063:                                             ; preds = %2061, %2057
  %2064 = phi i64* [ %2062, %2061 ], [ %2060, %2057 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %1679) #6
  %2065 = icmp eq i64* %2064, null
  br i1 %2065, label %2066, label %2068

2066:                                             ; preds = %2063
  %2067 = load i64, i64* %1677, align 8
  br label %2396

2068:                                             ; preds = %2063
  %2069 = ptrtoint i64* %2064 to i64
  %2070 = load i64, i64* %2064, align 8
  %2071 = load i64, i64* %1495, align 8
  %2072 = trunc i64 %2070 to i32
  %2073 = trunc i64 %2071 to i32
  %2074 = icmp eq i32 %2072, %2073
  br i1 %168, label %2075, label %2335

2075:                                             ; preds = %2068
  %2076 = icmp ugt i32 %1828, 65534
  br i1 %2076, label %2081, label %2077

2077:                                             ; preds = %2075
  %2078 = select i1 %2074, i32 2, i32 3
  %2079 = add nuw nsw i32 %2078, %1828
  %2080 = icmp ugt i32 %2079, 65534
  br i1 %2080, label %2081, label %2085

2081:                                             ; preds = %2077, %2075
  %2082 = call i64* @_ZN2v88internal7Factory13NewRangeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %134, i32 323, i64* null, i64* null, i64* null) #6
  %2083 = load i64, i64* %2082, align 8
  %2084 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %2, i64 %2083, %"class.v8::internal::MessageLocation"* null) #6
  br label %2396

2085:                                             ; preds = %2077
  %2086 = zext i32 %2079 to i64
  %2087 = shl nuw nsw i64 %2086, 3
  %2088 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %2087, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #20
  %2089 = icmp eq i8* %2088, null
  br i1 %2089, label %2090, label %2099

2090:                                             ; preds = %2085
  %2091 = call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #6
  %2092 = bitcast %"class.v8::Platform"* %2091 to void (%"class.v8::Platform"*)***
  %2093 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %2092, align 8
  %2094 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %2093, i64 3
  %2095 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %2094, align 8
  call void %2095(%"class.v8::Platform"* %2091) #6
  %2096 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %2087, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #20
  %2097 = icmp eq i8* %2096, null
  br i1 %2097, label %2098, label %2099

2098:                                             ; preds = %2090
  call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0)) #18
  unreachable

2099:                                             ; preds = %2090, %2085
  %2100 = phi i8* [ %2088, %2085 ], [ %2096, %2090 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2100, i8 0, i64 %2087, i1 false) #6
  %2101 = bitcast i8* %2100 to %"class.v8::internal::Handle.1169"*
  br i1 %1956, label %2215, label %2102

2102:                                             ; preds = %2099
  %2103 = zext i32 %1828 to i64
  %2104 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %1696, align 8
  %2105 = icmp ult i32 %1828, 4
  br i1 %2105, label %2106, label %2127

2106:                                             ; preds = %2213, %2127, %2102
  %2107 = phi i64 [ 0, %2127 ], [ 0, %2102 ], [ %2137, %2213 ]
  %2108 = sub nsw i64 %2103, %2107
  %2109 = xor i64 %2107, -1
  %2110 = add nsw i64 %2109, %2103
  %2111 = and i64 %2108, 7
  %2112 = icmp eq i64 %2111, 0
  br i1 %2112, label %2124, label %2113

2113:                                             ; preds = %2106, %2113
  %2114 = phi i64 [ %2117, %2113 ], [ %2107, %2106 ]
  %2115 = phi i64 [ %2122, %2113 ], [ %2111, %2106 ]
  %2116 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2104, i64 %2114
  %2117 = add nuw nsw i64 %2114, 1
  %2118 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2101, i64 %2114
  %2119 = bitcast %"class.v8::internal::Handle.1169"* %2116 to i64*
  %2120 = bitcast %"class.v8::internal::Handle.1169"* %2118 to i64*
  %2121 = load i64, i64* %2119, align 8
  store i64 %2121, i64* %2120, align 8
  %2122 = add i64 %2115, -1
  %2123 = icmp eq i64 %2122, 0
  br i1 %2123, label %2124, label %2113, !llvm.loop !17

2124:                                             ; preds = %2113, %2106
  %2125 = phi i64 [ %2107, %2106 ], [ %2117, %2113 ]
  %2126 = icmp ult i64 %2110, 7
  br i1 %2126, label %2215, label %2243

2127:                                             ; preds = %2102
  %2128 = bitcast %"class.v8::internal::Handle.1169"* %2104 to i8*
  %2129 = shl nuw nsw i64 %2103, 3
  %2130 = getelementptr i8, i8* %2100, i64 %2129
  %2131 = getelementptr %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2104, i64 %2103
  %2132 = bitcast %"class.v8::internal::Handle.1169"* %2131 to i8*
  %2133 = icmp ult i8* %2100, %2132
  %2134 = icmp ugt i8* %2130, %2128
  %2135 = and i1 %2133, %2134
  br i1 %2135, label %2106, label %2136

2136:                                             ; preds = %2127
  %2137 = and i64 %2103, 4294967292
  %2138 = add nsw i64 %2137, -4
  %2139 = lshr exact i64 %2138, 2
  %2140 = add nuw nsw i64 %2139, 1
  %2141 = and i64 %2140, 3
  %2142 = icmp ult i64 %2138, 12
  br i1 %2142, label %2194, label %2143

2143:                                             ; preds = %2136
  %2144 = sub nsw i64 %2140, %2141
  br label %2145

2145:                                             ; preds = %2145, %2143
  %2146 = phi i64 [ 0, %2143 ], [ %2191, %2145 ]
  %2147 = phi i64 [ %2144, %2143 ], [ %2192, %2145 ]
  %2148 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2104, i64 %2146
  %2149 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2101, i64 %2146
  %2150 = bitcast %"class.v8::internal::Handle.1169"* %2148 to <2 x i64>*
  %2151 = load <2 x i64>, <2 x i64>* %2150, align 8, !alias.scope !18
  %2152 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2148, i64 2
  %2153 = bitcast %"class.v8::internal::Handle.1169"* %2152 to <2 x i64>*
  %2154 = load <2 x i64>, <2 x i64>* %2153, align 8, !alias.scope !18
  %2155 = bitcast %"class.v8::internal::Handle.1169"* %2149 to <2 x i64>*
  store <2 x i64> %2151, <2 x i64>* %2155, align 8, !alias.scope !21, !noalias !18
  %2156 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2149, i64 2
  %2157 = bitcast %"class.v8::internal::Handle.1169"* %2156 to <2 x i64>*
  store <2 x i64> %2154, <2 x i64>* %2157, align 8, !alias.scope !21, !noalias !18
  %2158 = or i64 %2146, 4
  %2159 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2104, i64 %2158
  %2160 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2101, i64 %2158
  %2161 = bitcast %"class.v8::internal::Handle.1169"* %2159 to <2 x i64>*
  %2162 = load <2 x i64>, <2 x i64>* %2161, align 8, !alias.scope !18
  %2163 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2159, i64 2
  %2164 = bitcast %"class.v8::internal::Handle.1169"* %2163 to <2 x i64>*
  %2165 = load <2 x i64>, <2 x i64>* %2164, align 8, !alias.scope !18
  %2166 = bitcast %"class.v8::internal::Handle.1169"* %2160 to <2 x i64>*
  store <2 x i64> %2162, <2 x i64>* %2166, align 8, !alias.scope !21, !noalias !18
  %2167 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2160, i64 2
  %2168 = bitcast %"class.v8::internal::Handle.1169"* %2167 to <2 x i64>*
  store <2 x i64> %2165, <2 x i64>* %2168, align 8, !alias.scope !21, !noalias !18
  %2169 = or i64 %2146, 8
  %2170 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2104, i64 %2169
  %2171 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2101, i64 %2169
  %2172 = bitcast %"class.v8::internal::Handle.1169"* %2170 to <2 x i64>*
  %2173 = load <2 x i64>, <2 x i64>* %2172, align 8, !alias.scope !18
  %2174 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2170, i64 2
  %2175 = bitcast %"class.v8::internal::Handle.1169"* %2174 to <2 x i64>*
  %2176 = load <2 x i64>, <2 x i64>* %2175, align 8, !alias.scope !18
  %2177 = bitcast %"class.v8::internal::Handle.1169"* %2171 to <2 x i64>*
  store <2 x i64> %2173, <2 x i64>* %2177, align 8, !alias.scope !21, !noalias !18
  %2178 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2171, i64 2
  %2179 = bitcast %"class.v8::internal::Handle.1169"* %2178 to <2 x i64>*
  store <2 x i64> %2176, <2 x i64>* %2179, align 8, !alias.scope !21, !noalias !18
  %2180 = or i64 %2146, 12
  %2181 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2104, i64 %2180
  %2182 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2101, i64 %2180
  %2183 = bitcast %"class.v8::internal::Handle.1169"* %2181 to <2 x i64>*
  %2184 = load <2 x i64>, <2 x i64>* %2183, align 8, !alias.scope !18
  %2185 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2181, i64 2
  %2186 = bitcast %"class.v8::internal::Handle.1169"* %2185 to <2 x i64>*
  %2187 = load <2 x i64>, <2 x i64>* %2186, align 8, !alias.scope !18
  %2188 = bitcast %"class.v8::internal::Handle.1169"* %2182 to <2 x i64>*
  store <2 x i64> %2184, <2 x i64>* %2188, align 8, !alias.scope !21, !noalias !18
  %2189 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2182, i64 2
  %2190 = bitcast %"class.v8::internal::Handle.1169"* %2189 to <2 x i64>*
  store <2 x i64> %2187, <2 x i64>* %2190, align 8, !alias.scope !21, !noalias !18
  %2191 = add i64 %2146, 16
  %2192 = add i64 %2147, -4
  %2193 = icmp eq i64 %2192, 0
  br i1 %2193, label %2194, label %2145, !llvm.loop !23

2194:                                             ; preds = %2145, %2136
  %2195 = phi i64 [ 0, %2136 ], [ %2191, %2145 ]
  %2196 = icmp eq i64 %2141, 0
  br i1 %2196, label %2213, label %2197

2197:                                             ; preds = %2194, %2197
  %2198 = phi i64 [ %2210, %2197 ], [ %2195, %2194 ]
  %2199 = phi i64 [ %2211, %2197 ], [ %2141, %2194 ]
  %2200 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2104, i64 %2198
  %2201 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2101, i64 %2198
  %2202 = bitcast %"class.v8::internal::Handle.1169"* %2200 to <2 x i64>*
  %2203 = load <2 x i64>, <2 x i64>* %2202, align 8, !alias.scope !18
  %2204 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2200, i64 2
  %2205 = bitcast %"class.v8::internal::Handle.1169"* %2204 to <2 x i64>*
  %2206 = load <2 x i64>, <2 x i64>* %2205, align 8, !alias.scope !18
  %2207 = bitcast %"class.v8::internal::Handle.1169"* %2201 to <2 x i64>*
  store <2 x i64> %2203, <2 x i64>* %2207, align 8, !alias.scope !21, !noalias !18
  %2208 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2201, i64 2
  %2209 = bitcast %"class.v8::internal::Handle.1169"* %2208 to <2 x i64>*
  store <2 x i64> %2206, <2 x i64>* %2209, align 8, !alias.scope !21, !noalias !18
  %2210 = add i64 %2198, 4
  %2211 = add i64 %2199, -1
  %2212 = icmp eq i64 %2211, 0
  br i1 %2212, label %2213, label %2197, !llvm.loop !24

2213:                                             ; preds = %2197, %2194
  %2214 = icmp eq i64 %2137, %2103
  br i1 %2214, label %2215, label %2106

2215:                                             ; preds = %2124, %2243, %2213, %2099
  %2216 = sext i32 %1955 to i64
  %2217 = shl nsw i64 %2216, 1
  %2218 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %1632, align 8
  %2219 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %2218, null
  br i1 %2219, label %2223, label %2220

2220:                                             ; preds = %2215
  %2221 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %2218, i64 %2217) #6
  %2222 = ptrtoint i64* %2221 to i64
  br label %2234

2223:                                             ; preds = %2215
  %2224 = load i64*, i64** %1633, align 8
  %2225 = load i64*, i64** %93, align 8
  %2226 = icmp eq i64* %2224, %2225
  br i1 %2226, label %2227, label %2229

2227:                                             ; preds = %2223
  %2228 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %2229

2229:                                             ; preds = %2227, %2223
  %2230 = phi i64* [ %2228, %2227 ], [ %2224, %2223 ]
  %2231 = ptrtoint i64* %2230 to i64
  %2232 = add i64 %2231, 8
  %2233 = inttoptr i64 %2232 to i64*
  store i64* %2233, i64** %1633, align 8
  store i64 %2217, i64* %2230, align 8
  br label %2234

2234:                                             ; preds = %2229, %2220
  %2235 = phi i64 [ %2222, %2220 ], [ %2231, %2229 ]
  %2236 = add nuw nsw i32 %1828, 1
  %2237 = zext i32 %1828 to i64
  %2238 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2101, i64 %2237
  %2239 = bitcast %"class.v8::internal::Handle.1169"* %2238 to i64*
  store i64 %2235, i64* %2239, align 8
  %2240 = zext i32 %2236 to i64
  %2241 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2101, i64 %2240
  %2242 = bitcast %"class.v8::internal::Handle.1169"* %2241 to i64*
  store i64 %1708, i64* %2242, align 8
  br i1 %2074, label %2299, label %2294

2243:                                             ; preds = %2124, %2243
  %2244 = phi i64 [ %2288, %2243 ], [ %2125, %2124 ]
  %2245 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2104, i64 %2244
  %2246 = add nuw nsw i64 %2244, 1
  %2247 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2101, i64 %2244
  %2248 = bitcast %"class.v8::internal::Handle.1169"* %2245 to i64*
  %2249 = bitcast %"class.v8::internal::Handle.1169"* %2247 to i64*
  %2250 = load i64, i64* %2248, align 8
  store i64 %2250, i64* %2249, align 8
  %2251 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2104, i64 %2246
  %2252 = add nuw nsw i64 %2244, 2
  %2253 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2101, i64 %2246
  %2254 = bitcast %"class.v8::internal::Handle.1169"* %2251 to i64*
  %2255 = bitcast %"class.v8::internal::Handle.1169"* %2253 to i64*
  %2256 = load i64, i64* %2254, align 8
  store i64 %2256, i64* %2255, align 8
  %2257 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2104, i64 %2252
  %2258 = add nuw nsw i64 %2244, 3
  %2259 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2101, i64 %2252
  %2260 = bitcast %"class.v8::internal::Handle.1169"* %2257 to i64*
  %2261 = bitcast %"class.v8::internal::Handle.1169"* %2259 to i64*
  %2262 = load i64, i64* %2260, align 8
  store i64 %2262, i64* %2261, align 8
  %2263 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2104, i64 %2258
  %2264 = add nuw nsw i64 %2244, 4
  %2265 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2101, i64 %2258
  %2266 = bitcast %"class.v8::internal::Handle.1169"* %2263 to i64*
  %2267 = bitcast %"class.v8::internal::Handle.1169"* %2265 to i64*
  %2268 = load i64, i64* %2266, align 8
  store i64 %2268, i64* %2267, align 8
  %2269 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2104, i64 %2264
  %2270 = add nuw nsw i64 %2244, 5
  %2271 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2101, i64 %2264
  %2272 = bitcast %"class.v8::internal::Handle.1169"* %2269 to i64*
  %2273 = bitcast %"class.v8::internal::Handle.1169"* %2271 to i64*
  %2274 = load i64, i64* %2272, align 8
  store i64 %2274, i64* %2273, align 8
  %2275 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2104, i64 %2270
  %2276 = add nuw nsw i64 %2244, 6
  %2277 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2101, i64 %2270
  %2278 = bitcast %"class.v8::internal::Handle.1169"* %2275 to i64*
  %2279 = bitcast %"class.v8::internal::Handle.1169"* %2277 to i64*
  %2280 = load i64, i64* %2278, align 8
  store i64 %2280, i64* %2279, align 8
  %2281 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2104, i64 %2276
  %2282 = add nuw nsw i64 %2244, 7
  %2283 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2101, i64 %2276
  %2284 = bitcast %"class.v8::internal::Handle.1169"* %2281 to i64*
  %2285 = bitcast %"class.v8::internal::Handle.1169"* %2283 to i64*
  %2286 = load i64, i64* %2284, align 8
  store i64 %2286, i64* %2285, align 8
  %2287 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2104, i64 %2282
  %2288 = add nuw nsw i64 %2244, 8
  %2289 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2101, i64 %2282
  %2290 = bitcast %"class.v8::internal::Handle.1169"* %2287 to i64*
  %2291 = bitcast %"class.v8::internal::Handle.1169"* %2289 to i64*
  %2292 = load i64, i64* %2290, align 8
  store i64 %2292, i64* %2291, align 8
  %2293 = icmp eq i64 %2288, %2103
  br i1 %2293, label %2215, label %2243, !llvm.loop !25

2294:                                             ; preds = %2234
  %2295 = add nuw nsw i32 %1828, 2
  %2296 = zext i32 %2295 to i64
  %2297 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %2101, i64 %2296
  %2298 = bitcast %"class.v8::internal::Handle.1169"* %2297 to i64*
  store i64 %2069, i64* %2298, align 8
  br label %2299

2299:                                             ; preds = %2294, %2234
  %2300 = call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %2, i64* %133, i64* %1495, i32 %2079, %"class.v8::internal::Handle.1169"* %2101) #6
  %2301 = icmp eq i64* %2300, null
  br i1 %2301, label %2302, label %2304

2302:                                             ; preds = %2299
  %2303 = load i64, i64* %1677, align 8
  br label %2327

2304:                                             ; preds = %2299
  %2305 = load i64, i64* %2300, align 8
  %2306 = and i64 %2305, 1
  %2307 = icmp eq i64 %2306, 0
  br i1 %2307, label %2319, label %2308

2308:                                             ; preds = %2304
  %2309 = and i64 %2305, -4294967296
  %2310 = add i64 %2305, -1
  %2311 = inttoptr i64 %2310 to i32*
  %2312 = load atomic i32, i32* %2311 monotonic, align 4
  %2313 = zext i32 %2312 to i64
  %2314 = or i64 %2309, %2313
  %2315 = add i64 %2314, 7
  %2316 = inttoptr i64 %2315 to i16*
  %2317 = load atomic i16, i16* %2316 monotonic, align 2
  %2318 = icmp ult i16 %2317, 64
  br i1 %2318, label %2322, label %2319

2319:                                             ; preds = %2308, %2304
  %2320 = call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* nonnull %2300) #6
  %2321 = icmp eq i64* %2320, null
  br i1 %2321, label %2325, label %2322

2322:                                             ; preds = %2319, %2308
  %2323 = phi i64* [ %2320, %2319 ], [ %2300, %2308 ]
  %2324 = ptrtoint i64* %2323 to i64
  br label %2327

2325:                                             ; preds = %2319
  %2326 = load i64, i64* %1677, align 8
  br label %2327

2327:                                             ; preds = %2325, %2322, %2302
  %2328 = phi i64 [ 0, %2302 ], [ 0, %2325 ], [ %2324, %2322 ]
  %2329 = phi i32 [ 1, %2302 ], [ 1, %2325 ], [ 0, %2322 ]
  %2330 = phi i64 [ %2303, %2302 ], [ %2326, %2325 ], [ %1717, %2322 ]
  %2331 = icmp eq i8* %2100, null
  br i1 %2331, label %2333, label %2332

2332:                                             ; preds = %2327
  call void @_ZdaPv(i8* nonnull %2100) #20
  br label %2333

2333:                                             ; preds = %2332, %2327
  %2334 = icmp eq i32 %2329, 0
  br i1 %2334, label %2378, label %2396

2335:                                             ; preds = %2068
  br i1 %2074, label %2355, label %2336

2336:                                             ; preds = %2335
  %2337 = and i64 %2070, 1
  %2338 = icmp eq i64 %2337, 0
  br i1 %2338, label %2350, label %2339

2339:                                             ; preds = %2336
  %2340 = and i64 %2070, -4294967296
  %2341 = add i64 %2070, -1
  %2342 = inttoptr i64 %2341 to i32*
  %2343 = load atomic i32, i32* %2342 monotonic, align 4
  %2344 = zext i32 %2343 to i64
  %2345 = or i64 %2340, %2344
  %2346 = add i64 %2345, 7
  %2347 = inttoptr i64 %2346 to i16*
  %2348 = load atomic i16, i16* %2347 monotonic, align 2
  %2349 = icmp ugt i16 %2348, 185
  br i1 %2349, label %2355, label %2350

2350:                                             ; preds = %2339, %2336
  %2351 = call i64* @_ZN2v88internal6Object12ToObjectImplEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"* %2, i64* nonnull %2064, i8* null) #6
  %2352 = icmp eq i64* %2351, null
  br i1 %2352, label %2353, label %2355

2353:                                             ; preds = %2350
  %2354 = load i64, i64* %1677, align 8
  br label %2396

2355:                                             ; preds = %2350, %2339, %2335
  %2356 = phi i64* [ %2064, %2335 ], [ %2351, %2350 ], [ %2064, %2339 ]
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1695) #6
  %2357 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %1696, align 8
  %2358 = load i64, i64* %1697, align 8
  %2359 = ptrtoint %"class.v8::internal::Handle.1169"* %2357 to i64
  %2360 = sub i64 %2358, %2359
  %2361 = ashr exact i64 %2360, 3
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2v88internal12_GLOBAL__N_117VectorBackedMatchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1698, align 8
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %1699, align 8
  store i64* null, i64** %1700, align 8
  store i64* %1868, i64** %1701, align 8
  store i32 %1955, i32* %1702, align 8
  store %"class.v8::internal::Handle.1169"* %2357, %"class.v8::internal::Handle.1169"** %1703, align 8
  store i64 %2361, i64* %1704, align 8
  store i64* null, i64** %1705, align 8
  %2362 = call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %135, i8 zeroext 0) #6
  store i64* %2362, i64** %1700, align 8
  %2363 = load i64, i64* %2356, align 8
  %2364 = load i64, i64* %1495, align 8
  %2365 = trunc i64 %2363 to i32
  %2366 = trunc i64 %2364 to i32
  %2367 = icmp eq i32 %2365, %2366
  %2368 = xor i1 %2367, true
  %2369 = zext i1 %2368 to i8
  store i8 %2369, i8* %1706, align 8
  br i1 %2367, label %2371, label %2370

2370:                                             ; preds = %2355
  store i64* %2356, i64** %1705, align 8
  br label %2371

2371:                                             ; preds = %2370, %2355
  %2372 = call i64* @_ZN2v88internal6String15GetSubstitutionEPNS0_7IsolateEPNS1_5MatchENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"* %2, %"class.v8::internal::String::Match"* nonnull %1707, i64* %169, i32 0) #6
  %2373 = icmp eq i64* %2372, null
  br i1 %2373, label %2376, label %2374

2374:                                             ; preds = %2371
  %2375 = ptrtoint i64* %2372 to i64
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1695) #6
  br label %2378

2376:                                             ; preds = %2371
  %2377 = load i64, i64* %1677, align 8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1695) #6
  br label %2396

2378:                                             ; preds = %2374, %2333
  %2379 = phi i64 [ %2328, %2333 ], [ %2375, %2374 ]
  %2380 = phi i64 [ %2330, %2333 ], [ %1717, %2374 ]
  %2381 = icmp ult i32 %1955, %1718
  br i1 %2381, label %2396, label %2382

2382:                                             ; preds = %2378
  %2383 = icmp eq i32 %1718, 0
  br i1 %2383, label %2384, label %2390

2384:                                             ; preds = %2382
  %2385 = load i64, i64* %135, align 8
  %2386 = add i64 %2385, 7
  %2387 = inttoptr i64 %2386 to i32*
  %2388 = load i32, i32* %2387, align 4
  %2389 = icmp eq i32 %2388, %1955
  br i1 %2389, label %2392, label %2390

2390:                                             ; preds = %2384, %2382
  %2391 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %134, i64* %135, i32 %1718, i32 %1955) #6
  br label %2392

2392:                                             ; preds = %2390, %2384
  %2393 = phi i64* [ %2391, %2390 ], [ %135, %2384 ]
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %24, i64* %2393) #6
  %2394 = inttoptr i64 %2379 to i64*
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %24, i64* %2394) #6
  %2395 = add i32 %1955, %1871
  br label %2396

2396:                                             ; preds = %2392, %2378, %2376, %2353, %2333, %2081, %2066, %1999, %1974
  %2397 = phi i32 [ %1718, %1999 ], [ %1718, %1974 ], [ %1718, %2066 ], [ %1718, %2333 ], [ %1718, %2376 ], [ %1718, %2353 ], [ %2395, %2392 ], [ %1718, %2378 ], [ %1718, %2081 ]
  %2398 = phi i32 [ 1, %1999 ], [ 1, %1974 ], [ 1, %2066 ], [ 1, %2333 ], [ 1, %2376 ], [ 1, %2353 ], [ 0, %2392 ], [ 0, %2378 ], [ 1, %2081 ]
  %2399 = phi i64 [ %2000, %1999 ], [ %1975, %1974 ], [ %2067, %2066 ], [ %2330, %2333 ], [ %2377, %2376 ], [ %2354, %2353 ], [ %2380, %2392 ], [ %2380, %2378 ], [ %2084, %2081 ]
  %2400 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %1696, align 8
  %2401 = icmp eq %"class.v8::internal::Handle.1169"* %2400, %1709
  br i1 %2401, label %2404, label %2402

2402:                                             ; preds = %2396
  %2403 = bitcast %"class.v8::internal::Handle.1169"* %2400 to i8*
  call void @free(i8* %2403) #6
  br label %2404

2404:                                             ; preds = %2402, %2396
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %1665) #6
  br label %2405

2405:                                             ; preds = %2404, %1932, %1921, %1864, %1842, %1807, %1774
  %2406 = phi i32 [ %1718, %1807 ], [ %1718, %1774 ], [ %1718, %1842 ], [ %1718, %1864 ], [ %2397, %2404 ], [ %1718, %1932 ], [ %1718, %1921 ]
  %2407 = phi i32 [ 1, %1807 ], [ 1, %1774 ], [ 1, %1842 ], [ 1, %1864 ], [ %2398, %2404 ], [ 1, %1932 ], [ 1, %1921 ]
  %2408 = phi i64 [ %1808, %1807 ], [ %1775, %1774 ], [ %1843, %1842 ], [ %1865, %1864 ], [ %2399, %2404 ], [ %1933, %1932 ], [ %1922, %1921 ]
  br i1 %1710, label %2421, label %2409

2409:                                             ; preds = %2405
  %2410 = inttoptr i64 %1720 to i64*
  %2411 = load i64*, i64** %1711, align 8
  store i64 %1720, i64* %91, align 8
  %2412 = load i32, i32* %95, align 8
  %2413 = add nsw i32 %2412, -1
  store i32 %2413, i32* %95, align 8
  %2414 = load i64*, i64** %93, align 8
  %2415 = icmp eq i64* %2414, %1721
  br i1 %2415, label %2418, label %2416

2416:                                             ; preds = %2409
  store i64* %1721, i64** %93, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %2417 = load i64*, i64** %1711, align 8
  br label %2418

2418:                                             ; preds = %2416, %2409
  %2419 = phi i64* [ %2417, %2416 ], [ %2410, %2409 ]
  %2420 = phi i64* [ %1721, %2416 ], [ %2411, %2409 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %2419, i64* %2420) #6
  br label %2421

2421:                                             ; preds = %2418, %2405
  %2422 = icmp eq i32 %2407, 0
  %2423 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %1719, i64 1
  br i1 %2422, label %1714, label %2445

2424:                                             ; preds = %1714, %1607
  %2425 = phi i32 [ 0, %1607 ], [ %2406, %1714 ]
  %2426 = icmp ult i32 %2425, %1329
  br i1 %2426, label %2427, label %2439

2427:                                             ; preds = %2424
  %2428 = icmp eq i32 %2425, 0
  br i1 %2428, label %2429, label %2435

2429:                                             ; preds = %2427
  %2430 = load i64, i64* %135, align 8
  %2431 = add i64 %2430, 7
  %2432 = inttoptr i64 %2431 to i32*
  %2433 = load i32, i32* %2432, align 4
  %2434 = icmp eq i32 %2433, %1329
  br i1 %2434, label %2437, label %2435

2435:                                             ; preds = %2429, %2427
  %2436 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %134, i64* %135, i32 %2425, i32 %1329) #6
  br label %2437

2437:                                             ; preds = %2435, %2429
  %2438 = phi i64* [ %2436, %2435 ], [ %135, %2429 ]
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %24, i64* %2438) #6
  br label %2439

2439:                                             ; preds = %2437, %2424
  %2440 = call i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %24) #6
  %2441 = icmp eq i64* %2440, null
  %2442 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %2443 = select i1 %2441, i64* %2442, i64* %2440
  %2444 = load i64, i64* %2443, align 8
  br label %2445

2445:                                             ; preds = %2421, %2439
  %2446 = phi i64 [ %2444, %2439 ], [ %2408, %2421 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1608) #6
  br label %2447

2447:                                             ; preds = %2445, %1604, %1601, %1598, %1578
  %2448 = phi i64 [ %2446, %2445 ], [ %1603, %1601 ], [ %1606, %1604 ], [ %1600, %1598 ], [ %1580, %1578 ]
  %2449 = getelementptr inbounds %"class.v8::base::SmallVector.1203", %"class.v8::base::SmallVector.1203"* %23, i64 0, i32 0
  %2450 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %2449, align 8
  %2451 = bitcast %"struct.std::__1::aligned_storage<64, 8>::type"* %1488 to %"class.v8::internal::Handle.1169"*
  %2452 = icmp eq %"class.v8::internal::Handle.1169"* %2450, %2451
  br i1 %2452, label %2455, label %2453

2453:                                             ; preds = %2447
  %2454 = bitcast %"class.v8::internal::Handle.1169"* %2450 to i8*
  call void @free(i8* %2454) #6
  br label %2455

2455:                                             ; preds = %2453, %2447
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %1487) #6
  br label %2456

2456:                                             ; preds = %2455, %1482, %1471, %1396, %1322, %1319, %164
  %2457 = phi i64 [ %166, %164 ], [ %1324, %1322 ], [ %1321, %1319 ], [ %1398, %1396 ], [ %2448, %2455 ], [ %1484, %1482 ], [ %1473, %1471 ]
  %2458 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %2458, label %2472, label %2459

2459:                                             ; preds = %2456
  %2460 = inttoptr i64 %92 to i64*
  %2461 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %90, i64 0, i32 0
  %2462 = load i64*, i64** %2461, align 8
  store i64 %92, i64* %91, align 8
  %2463 = load i32, i32* %95, align 8
  %2464 = add nsw i32 %2463, -1
  store i32 %2464, i32* %95, align 8
  %2465 = load i64*, i64** %93, align 8
  %2466 = icmp eq i64* %2465, %94
  br i1 %2466, label %2469, label %2467

2467:                                             ; preds = %2459
  store i64* %94, i64** %93, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %2468 = load i64*, i64** %2461, align 8
  br label %2469

2469:                                             ; preds = %2467, %2459
  %2470 = phi i64* [ %2468, %2467 ], [ %2460, %2459 ]
  %2471 = phi i64* [ %94, %2467 ], [ %2462, %2459 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %2470, i64* %2471) #6
  br label %2472

2472:                                             ; preds = %2456, %2469
  %2473 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %53, align 8
  %2474 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %2473, null
  br i1 %2474, label %2491, label %2475

2475:                                             ; preds = %2472
  %2476 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %28, i64 0, i32 1, i32 0
  %2477 = load i8*, i8** %2476, align 8
  %2478 = load atomic i8, i8* %2477 monotonic, align 1
  %2479 = icmp eq i8 %2478, 0
  br i1 %2479, label %2491, label %2480

2480:                                             ; preds = %2475
  %2481 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %2482 = load i8*, i8** %2476, align 8
  %2483 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %28, i64 0, i32 1, i32 1
  %2484 = load i8*, i8** %2483, align 8
  %2485 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %28, i64 0, i32 1, i32 2
  %2486 = load i64, i64* %2485, align 8
  %2487 = bitcast %"class.v8::TracingController"* %2481 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %2488 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %2487, align 8
  %2489 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %2488, i64 5
  %2490 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %2489, align 8
  call void %2490(%"class.v8::TracingController"* %2481, i8* %2482, i8* %2484, i64 %2486) #6
  br label %2491

2491:                                             ; preds = %2472, %2475, %2480
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %52) #6
  %2492 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %27, i64 0, i32 0
  %2493 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %2492, align 8
  %2494 = icmp eq %"class.v8::internal::RuntimeCallStats"* %2493, null
  br i1 %2494, label %2497, label %2495, !prof !3

2495:                                             ; preds = %2491
  %2496 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %27, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %2493, %"class.v8::internal::RuntimeCallTimer"* %2496) #6
  br label %2497

2497:                                             ; preds = %2491, %2495
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %29) #6
  ret i64 %2457
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal34Runtime_RegExpInitializeAndCompileEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1153", %"struct.std::__1::atomic.1153"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !3

6:                                                ; preds = %3
  %7 = tail call fastcc i64 @_ZN2v88internalL40Stats_Runtime_RegExpInitializeAndCompileEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %89

8:                                                ; preds = %3
  %9 = ptrtoint i64* %1 to i64
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %11 = bitcast %"struct.v8::internal::HandleScopeData"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 8
  %18 = load i64, i64* %1, align 8
  %19 = and i64 %18, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %32, label %21, !prof !4

21:                                               ; preds = %8
  %22 = and i64 %18, -4294967296
  %23 = add i64 %18, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %22, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = icmp eq i16 %30, 1102
  br i1 %31, label %33, label %32, !prof !3

32:                                               ; preds = %21, %8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0)) #18
  unreachable

33:                                               ; preds = %21
  %34 = add i64 %9, -8
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, 1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %50, label %39, !prof !4

39:                                               ; preds = %33
  %40 = and i64 %36, -4294967296
  %41 = add i64 %36, -1
  %42 = inttoptr i64 %41 to i32*
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = zext i32 %43 to i64
  %45 = or i64 %40, %44
  %46 = add i64 %45, 7
  %47 = inttoptr i64 %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = icmp ult i16 %48, 64
  br i1 %49, label %51, label %50, !prof !3

50:                                               ; preds = %39, %33
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

51:                                               ; preds = %39
  %52 = add i64 %9, -16
  %53 = inttoptr i64 %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %68, label %57, !prof !4

57:                                               ; preds = %51
  %58 = and i64 %54, -4294967296
  %59 = add i64 %54, -1
  %60 = inttoptr i64 %59 to i32*
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = zext i32 %61 to i64
  %63 = or i64 %58, %62
  %64 = add i64 %63, 7
  %65 = inttoptr i64 %64 to i16*
  %66 = load atomic i16, i16* %65 monotonic, align 2
  %67 = icmp ult i16 %66, 64
  br i1 %67, label %69, label %68, !prof !3

68:                                               ; preds = %57, %51
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.40, i64 0, i64 0)) #18
  unreachable

69:                                               ; preds = %57
  %70 = tail call i64* @_ZN2v88internal8JSRegExp10InitializeENS0_6HandleIS1_EENS2_INS0_6StringEEES5_(i64* %1, i64* %35, i64* %53) #6
  %71 = icmp eq i64* %70, null
  %72 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %73 = select i1 %71, i64* %72, i64* %1
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %69
  %77 = inttoptr i64 %12 to i64*
  %78 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %10, i64 0, i32 0
  %79 = load i64*, i64** %78, align 8
  store i64 %12, i64* %11, align 8
  %80 = load i32, i32* %15, align 8
  %81 = add nsw i32 %80, -1
  store i32 %81, i32* %15, align 8
  %82 = load i64*, i64** %13, align 8
  %83 = icmp eq i64* %82, %14
  br i1 %83, label %86, label %84

84:                                               ; preds = %76
  store i64* %14, i64** %13, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %85 = load i64*, i64** %78, align 8
  br label %86

86:                                               ; preds = %84, %76
  %87 = phi i64* [ %85, %84 ], [ %77, %76 ]
  %88 = phi i64* [ %14, %84 ], [ %79, %76 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %87, i64* %88) #6
  br label %89

89:                                               ; preds = %86, %69, %6
  %90 = phi i64 [ %7, %6 ], [ %74, %69 ], [ %74, %86 ]
  ret i64 %90
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL40Stats_Runtime_RegExpInitializeAndCompileEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #5 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1163"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 40, i1 false) #6
  %8 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1153", %"struct.std::__1::atomic.1153"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10, !prof !3

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %14 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %14, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallStats"** %11, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallTimer"* %12, i32 546) #6
  br label %16

16:                                               ; preds = %3, %10
  %17 = load atomic i64, i64* @_ZZN2v88internalL40Stats_Runtime_RegExpInitializeAndCompileEiPmPNS0_7IsolateEE29trace_event_unique_atomic1984 monotonic, align 8
  %18 = inttoptr i64 %17 to i8*
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %22 = bitcast %"class.v8::TracingController"* %21 to i8* (%"class.v8::TracingController"*, i8*)***
  %23 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %23, i64 2
  %25 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, align 8
  %26 = call i8* %25(%"class.v8::TracingController"* %21, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0)) #6
  %27 = ptrtoint i8* %26 to i64
  store atomic volatile i64 %27, i64* @_ZZN2v88internalL40Stats_Runtime_RegExpInitializeAndCompileEiPmPNS0_7IsolateEE29trace_event_unique_atomic1984 monotonic, align 8
  br label %28

28:                                               ; preds = %16, %20
  %29 = phi i8* [ %18, %16 ], [ %26, %20 ]
  %30 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #6
  %31 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %32 = load atomic i8, i8* %29 monotonic, align 1
  %33 = and i8 %32, 5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %66, label %35

35:                                               ; preds = %28
  %36 = bitcast [2 x %"class.std::__1::unique_ptr.1163"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #6
  %37 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 0, i64 16, i1 false) #6
  %38 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %39 = bitcast %"class.v8::TracingController"* %38 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)***
  %40 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)** %40, i64 3
  %42 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)** %41, align 8
  %43 = call i64 %42(%"class.v8::TracingController"* %38, i8 signext 88, i8* %29, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.39, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1163"* nonnull %37, i32 0) #6
  %44 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %45 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  %46 = icmp eq %"class.v8::ConvertableToTraceFormat"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %35
  %48 = bitcast %"class.v8::ConvertableToTraceFormat"* %45 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %49 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %49, i64 1
  %51 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, align 8
  call void %51(%"class.v8::ConvertableToTraceFormat"* nonnull %45) #6
  br label %52

52:                                               ; preds = %47, %35
  %53 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  %55 = icmp eq %"class.v8::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.v8::ConvertableToTraceFormat"* %54 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.v8::ConvertableToTraceFormat"* nonnull %54) #6
  br label %61

61:                                               ; preds = %52, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #6
  %62 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, i64 0, i32 0
  store i8* %29, i8** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.39, i64 0, i64 0), i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %43, i64* %65, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  br label %66

66:                                               ; preds = %28, %61
  %67 = ptrtoint i64* %1 to i64
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %69 = bitcast %"struct.v8::internal::HandleScopeData"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %72 = load i64*, i64** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %74 = load i32, i32* %73, align 8
  %75 = add nsw i32 %74, 1
  store i32 %75, i32* %73, align 8
  %76 = load i64, i64* %1, align 8
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %90, label %79, !prof !4

79:                                               ; preds = %66
  %80 = and i64 %76, -4294967296
  %81 = add i64 %76, -1
  %82 = inttoptr i64 %81 to i32*
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = zext i32 %83 to i64
  %85 = or i64 %80, %84
  %86 = add i64 %85, 7
  %87 = inttoptr i64 %86 to i16*
  %88 = load atomic i16, i16* %87 monotonic, align 2
  %89 = icmp eq i16 %88, 1102
  br i1 %89, label %91, label %90, !prof !3

90:                                               ; preds = %79, %66
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0)) #18
  unreachable

91:                                               ; preds = %79
  %92 = add i64 %67, -8
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = and i64 %94, 1
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %108, label %97, !prof !4

97:                                               ; preds = %91
  %98 = and i64 %94, -4294967296
  %99 = add i64 %94, -1
  %100 = inttoptr i64 %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = zext i32 %101 to i64
  %103 = or i64 %98, %102
  %104 = add i64 %103, 7
  %105 = inttoptr i64 %104 to i16*
  %106 = load atomic i16, i16* %105 monotonic, align 2
  %107 = icmp ult i16 %106, 64
  br i1 %107, label %109, label %108, !prof !3

108:                                              ; preds = %97, %91
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

109:                                              ; preds = %97
  %110 = add i64 %67, -16
  %111 = inttoptr i64 %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, 1
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %126, label %115, !prof !4

115:                                              ; preds = %109
  %116 = and i64 %112, -4294967296
  %117 = add i64 %112, -1
  %118 = inttoptr i64 %117 to i32*
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = zext i32 %119 to i64
  %121 = or i64 %116, %120
  %122 = add i64 %121, 7
  %123 = inttoptr i64 %122 to i16*
  %124 = load atomic i16, i16* %123 monotonic, align 2
  %125 = icmp ult i16 %124, 64
  br i1 %125, label %127, label %126, !prof !3

126:                                              ; preds = %115, %109
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.40, i64 0, i64 0)) #18
  unreachable

127:                                              ; preds = %115
  %128 = call i64* @_ZN2v88internal8JSRegExp10InitializeENS0_6HandleIS1_EENS2_INS0_6StringEEES5_(i64* %1, i64* %93, i64* %111) #6
  %129 = icmp eq i64* %128, null
  %130 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %131 = select i1 %129, i64* %130, i64* %1
  %132 = load i64, i64* %131, align 8
  %133 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %127
  %135 = inttoptr i64 %70 to i64*
  %136 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %68, i64 0, i32 0
  %137 = load i64*, i64** %136, align 8
  store i64 %70, i64* %69, align 8
  %138 = load i32, i32* %73, align 8
  %139 = add nsw i32 %138, -1
  store i32 %139, i32* %73, align 8
  %140 = load i64*, i64** %71, align 8
  %141 = icmp eq i64* %140, %72
  br i1 %141, label %144, label %142

142:                                              ; preds = %134
  store i64* %72, i64** %71, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %143 = load i64*, i64** %136, align 8
  br label %144

144:                                              ; preds = %142, %134
  %145 = phi i64* [ %143, %142 ], [ %135, %134 ]
  %146 = phi i64* [ %72, %142 ], [ %137, %134 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %145, i64* %146) #6
  br label %147

147:                                              ; preds = %127, %144
  %148 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %149 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %148, null
  br i1 %149, label %166, label %150

150:                                              ; preds = %147
  %151 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %152 = load i8*, i8** %151, align 8
  %153 = load atomic i8, i8* %152 monotonic, align 1
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %166, label %155

155:                                              ; preds = %150
  %156 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %157 = load i8*, i8** %151, align 8
  %158 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %159 = load i8*, i8** %158, align 8
  %160 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %161 = load i64, i64* %160, align 8
  %162 = bitcast %"class.v8::TracingController"* %156 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %163 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %162, align 8
  %164 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %163, i64 5
  %165 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %164, align 8
  call void %165(%"class.v8::TracingController"* %156, i8* %157, i8* %159, i64 %161) #6
  br label %166

166:                                              ; preds = %147, %150, %155
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #6
  %167 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %168 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %167, align 8
  %169 = icmp eq %"class.v8::internal::RuntimeCallStats"* %168, null
  br i1 %169, label %172, label %170, !prof !3

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %168, %"class.v8::internal::RuntimeCallTimer"* %171) #6
  br label %172

172:                                              ; preds = %166, %170
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #6
  ret i64 %132
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal16Runtime_IsRegExpEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1153", %"struct.std::__1::atomic.1153"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !3

6:                                                ; preds = %3
  %7 = tail call fastcc i64 @_ZN2v88internalL22Stats_Runtime_IsRegExpEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %38

8:                                                ; preds = %3
  %9 = load i64, i64* %1, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 2
  %11 = and i64 %9, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = ptrtoint %"class.v8::internal::Heap"* %10 to i64
  %15 = add i64 %14, -41416
  %16 = inttoptr i64 %15 to %"class.v8::internal::Isolate"*
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 0, i32 7, i32 0, i64 8
  br label %35

18:                                               ; preds = %8
  %19 = and i64 %9, -4294967296
  %20 = add i64 %9, -1
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %19, %23
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = icmp eq i16 %27, 1102
  %29 = ptrtoint %"class.v8::internal::Heap"* %10 to i64
  %30 = add i64 %29, -41416
  %31 = inttoptr i64 %30 to %"class.v8::internal::Isolate"*
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 0, i32 7, i32 0, i64 7
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 0, i32 7, i32 0, i64 8
  %34 = select i1 %28, i64* %32, i64* %33
  br label %35

35:                                               ; preds = %13, %18
  %36 = phi i64* [ %17, %13 ], [ %34, %18 ]
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %35, %6
  %39 = phi i64 [ %7, %6 ], [ %37, %35 ]
  ret i64 %39
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL22Stats_Runtime_IsRegExpEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #5 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1163"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 40, i1 false) #6
  %8 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1153", %"struct.std::__1::atomic.1153"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10, !prof !3

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %14 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %14, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallStats"** %11, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallTimer"* %12, i32 539) #6
  br label %16

16:                                               ; preds = %3, %10
  %17 = load atomic i64, i64* @_ZZN2v88internalL22Stats_Runtime_IsRegExpEiPmPNS0_7IsolateEE29trace_event_unique_atomic2000 monotonic, align 8
  %18 = inttoptr i64 %17 to i8*
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %22 = bitcast %"class.v8::TracingController"* %21 to i8* (%"class.v8::TracingController"*, i8*)***
  %23 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %23, i64 2
  %25 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, align 8
  %26 = call i8* %25(%"class.v8::TracingController"* %21, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0)) #6
  %27 = ptrtoint i8* %26 to i64
  store atomic volatile i64 %27, i64* @_ZZN2v88internalL22Stats_Runtime_IsRegExpEiPmPNS0_7IsolateEE29trace_event_unique_atomic2000 monotonic, align 8
  br label %28

28:                                               ; preds = %16, %20
  %29 = phi i8* [ %18, %16 ], [ %26, %20 ]
  %30 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #6
  %31 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %32 = load atomic i8, i8* %29 monotonic, align 1
  %33 = and i8 %32, 5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %66, label %35

35:                                               ; preds = %28
  %36 = bitcast [2 x %"class.std::__1::unique_ptr.1163"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #6
  %37 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 0, i64 16, i1 false) #6
  %38 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %39 = bitcast %"class.v8::TracingController"* %38 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)***
  %40 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)** %40, i64 3
  %42 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)** %41, align 8
  %43 = call i64 %42(%"class.v8::TracingController"* %38, i8 signext 88, i8* %29, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.41, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1163"* nonnull %37, i32 0) #6
  %44 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %45 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  %46 = icmp eq %"class.v8::ConvertableToTraceFormat"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %35
  %48 = bitcast %"class.v8::ConvertableToTraceFormat"* %45 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %49 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %49, i64 1
  %51 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, align 8
  call void %51(%"class.v8::ConvertableToTraceFormat"* nonnull %45) #6
  br label %52

52:                                               ; preds = %47, %35
  %53 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  %55 = icmp eq %"class.v8::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.v8::ConvertableToTraceFormat"* %54 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.v8::ConvertableToTraceFormat"* nonnull %54) #6
  br label %61

61:                                               ; preds = %52, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #6
  %62 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, i64 0, i32 0
  store i8* %29, i8** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.41, i64 0, i64 0), i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %43, i64* %65, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  br label %66

66:                                               ; preds = %28, %61
  %67 = phi %"struct.v8::internal::tracing::ScopedTracer::Data"* [ null, %28 ], [ %62, %61 ]
  %68 = load i64, i64* %1, align 8
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 2
  %70 = and i64 %68, 1
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %77

72:                                               ; preds = %66
  %73 = ptrtoint %"class.v8::internal::Heap"* %69 to i64
  %74 = add i64 %73, -41416
  %75 = inttoptr i64 %74 to %"class.v8::internal::Isolate"*
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %75, i64 0, i32 0, i32 7, i32 0, i64 8
  br label %94

77:                                               ; preds = %66
  %78 = and i64 %68, -4294967296
  %79 = add i64 %68, -1
  %80 = inttoptr i64 %79 to i32*
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = zext i32 %81 to i64
  %83 = or i64 %78, %82
  %84 = add i64 %83, 7
  %85 = inttoptr i64 %84 to i16*
  %86 = load atomic i16, i16* %85 monotonic, align 2
  %87 = icmp eq i16 %86, 1102
  %88 = ptrtoint %"class.v8::internal::Heap"* %69 to i64
  %89 = add i64 %88, -41416
  %90 = inttoptr i64 %89 to %"class.v8::internal::Isolate"*
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %90, i64 0, i32 0, i32 7, i32 0, i64 7
  %92 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %90, i64 0, i32 0, i32 7, i32 0, i64 8
  %93 = select i1 %87, i64* %91, i64* %92
  br label %94

94:                                               ; preds = %72, %77
  %95 = phi i64* [ %76, %72 ], [ %93, %77 ]
  %96 = load i64, i64* %95, align 8
  %97 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %67, null
  br i1 %97, label %114, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %100 = load i8*, i8** %99, align 8
  %101 = load atomic i8, i8* %100 monotonic, align 1
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %114, label %103

103:                                              ; preds = %98
  %104 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %105 = load i8*, i8** %99, align 8
  %106 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %107 = load i8*, i8** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.v8::TracingController"* %104 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %111 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %111, i64 5
  %113 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %112, align 8
  call void %113(%"class.v8::TracingController"* %104, i8* %105, i8* %107, i64 %109) #6
  br label %114

114:                                              ; preds = %94, %98, %103
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #6
  %115 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %116 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %115, align 8
  %117 = icmp eq %"class.v8::internal::RuntimeCallStats"* %116, null
  br i1 %117, label %120, label %118, !prof !3

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %116, %"class.v8::internal::RuntimeCallTimer"* %119) #6
  br label %120

120:                                              ; preds = %114, %118
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #6
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal29Runtime_RegExpStringFromFlagsEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1153", %"struct.std::__1::atomic.1153"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !3

6:                                                ; preds = %3
  %7 = tail call fastcc i64 @_ZN2v88internalL35Stats_Runtime_RegExpStringFromFlagsEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %58

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %10 = bitcast %"struct.v8::internal::HandleScopeData"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %14, align 8
  %17 = load i64, i64* %1, align 8
  %18 = and i64 %17, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %31, label %20, !prof !4

20:                                               ; preds = %8
  %21 = and i64 %17, -4294967296
  %22 = add i64 %17, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %21, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = icmp eq i16 %29, 1102
  br i1 %30, label %32, label %31, !prof !3

31:                                               ; preds = %20, %8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0)) #18
  unreachable

32:                                               ; preds = %20
  %33 = add i64 %17, 11
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %21, %36
  %38 = add i64 %37, 15
  %39 = inttoptr i64 %38 to i32*
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = ashr i32 %40, 1
  %42 = tail call i64* @_ZN2v88internal8JSRegExp15StringFromFlagsEPNS0_7IsolateENS_4base5FlagsINS1_4FlagEiEE(%"class.v8::internal::Isolate"* %2, i32 %41) #6
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %32
  %46 = inttoptr i64 %11 to i64*
  %47 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %9, i64 0, i32 0
  %48 = load i64*, i64** %47, align 8
  store i64 %11, i64* %10, align 8
  %49 = load i32, i32* %14, align 8
  %50 = add nsw i32 %49, -1
  store i32 %50, i32* %14, align 8
  %51 = load i64*, i64** %12, align 8
  %52 = icmp eq i64* %51, %13
  br i1 %52, label %55, label %53

53:                                               ; preds = %45
  store i64* %13, i64** %12, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %54 = load i64*, i64** %47, align 8
  br label %55

55:                                               ; preds = %53, %45
  %56 = phi i64* [ %54, %53 ], [ %46, %45 ]
  %57 = phi i64* [ %13, %53 ], [ %48, %45 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %56, i64* %57) #6
  br label %58

58:                                               ; preds = %55, %32, %6
  %59 = phi i64 [ %7, %6 ], [ %43, %32 ], [ %43, %55 ]
  ret i64 %59
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL35Stats_Runtime_RegExpStringFromFlagsEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #5 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1163"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 40, i1 false) #6
  %8 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1153", %"struct.std::__1::atomic.1153"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10, !prof !3

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %14 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %14, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallStats"** %11, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallTimer"* %12, i32 549) #6
  br label %16

16:                                               ; preds = %3, %10
  %17 = load atomic i64, i64* @_ZZN2v88internalL35Stats_Runtime_RegExpStringFromFlagsEiPmPNS0_7IsolateEE29trace_event_unique_atomic2007 monotonic, align 8
  %18 = inttoptr i64 %17 to i8*
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %22 = bitcast %"class.v8::TracingController"* %21 to i8* (%"class.v8::TracingController"*, i8*)***
  %23 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %23, i64 2
  %25 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, align 8
  %26 = call i8* %25(%"class.v8::TracingController"* %21, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0)) #6
  %27 = ptrtoint i8* %26 to i64
  store atomic volatile i64 %27, i64* @_ZZN2v88internalL35Stats_Runtime_RegExpStringFromFlagsEiPmPNS0_7IsolateEE29trace_event_unique_atomic2007 monotonic, align 8
  br label %28

28:                                               ; preds = %16, %20
  %29 = phi i8* [ %18, %16 ], [ %26, %20 ]
  %30 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #6
  %31 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %32 = load atomic i8, i8* %29 monotonic, align 1
  %33 = and i8 %32, 5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %66, label %35

35:                                               ; preds = %28
  %36 = bitcast [2 x %"class.std::__1::unique_ptr.1163"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #6
  %37 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 0, i64 16, i1 false) #6
  %38 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %39 = bitcast %"class.v8::TracingController"* %38 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)***
  %40 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)** %40, i64 3
  %42 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1163"*, i32)** %41, align 8
  %43 = call i64 %42(%"class.v8::TracingController"* %38, i8 signext 88, i8* %29, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.43, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1163"* nonnull %37, i32 0) #6
  %44 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %45 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  %46 = icmp eq %"class.v8::ConvertableToTraceFormat"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %35
  %48 = bitcast %"class.v8::ConvertableToTraceFormat"* %45 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %49 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %49, i64 1
  %51 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, align 8
  call void %51(%"class.v8::ConvertableToTraceFormat"* nonnull %45) #6
  br label %52

52:                                               ; preds = %47, %35
  %53 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1163"], [2 x %"class.std::__1::unique_ptr.1163"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  %55 = icmp eq %"class.v8::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.v8::ConvertableToTraceFormat"* %54 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.v8::ConvertableToTraceFormat"* nonnull %54) #6
  br label %61

61:                                               ; preds = %52, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #6
  %62 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, i64 0, i32 0
  store i8* %29, i8** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.43, i64 0, i64 0), i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %43, i64* %65, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  br label %66

66:                                               ; preds = %28, %61
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %68 = bitcast %"struct.v8::internal::HandleScopeData"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %71 = load i64*, i64** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %73 = load i32, i32* %72, align 8
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %72, align 8
  %75 = load i64, i64* %1, align 8
  %76 = and i64 %75, 1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %89, label %78, !prof !4

78:                                               ; preds = %66
  %79 = and i64 %75, -4294967296
  %80 = add i64 %75, -1
  %81 = inttoptr i64 %80 to i32*
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %79, %83
  %85 = add i64 %84, 7
  %86 = inttoptr i64 %85 to i16*
  %87 = load atomic i16, i16* %86 monotonic, align 2
  %88 = icmp eq i16 %87, 1102
  br i1 %88, label %90, label %89, !prof !3

89:                                               ; preds = %78, %66
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0)) #18
  unreachable

90:                                               ; preds = %78
  %91 = add i64 %75, 11
  %92 = inttoptr i64 %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = zext i32 %93 to i64
  %95 = or i64 %79, %94
  %96 = add i64 %95, 15
  %97 = inttoptr i64 %96 to i32*
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = ashr i32 %98, 1
  %100 = call i64* @_ZN2v88internal8JSRegExp15StringFromFlagsEPNS0_7IsolateENS_4base5FlagsINS1_4FlagEiEE(%"class.v8::internal::Isolate"* %2, i32 %99) #6
  %101 = load i64, i64* %100, align 8
  %102 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %102, label %116, label %103

103:                                              ; preds = %90
  %104 = inttoptr i64 %69 to i64*
  %105 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %67, i64 0, i32 0
  %106 = load i64*, i64** %105, align 8
  store i64 %69, i64* %68, align 8
  %107 = load i32, i32* %72, align 8
  %108 = add nsw i32 %107, -1
  store i32 %108, i32* %72, align 8
  %109 = load i64*, i64** %70, align 8
  %110 = icmp eq i64* %109, %71
  br i1 %110, label %113, label %111

111:                                              ; preds = %103
  store i64* %71, i64** %70, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #6
  %112 = load i64*, i64** %105, align 8
  br label %113

113:                                              ; preds = %111, %103
  %114 = phi i64* [ %112, %111 ], [ %104, %103 ]
  %115 = phi i64* [ %71, %111 ], [ %106, %103 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %114, i64* %115) #6
  br label %116

116:                                              ; preds = %90, %113
  %117 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %118 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %117, null
  br i1 %118, label %135, label %119

119:                                              ; preds = %116
  %120 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %121 = load i8*, i8** %120, align 8
  %122 = load atomic i8, i8* %121 monotonic, align 1
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %135, label %124

124:                                              ; preds = %119
  %125 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #6
  %126 = load i8*, i8** %120, align 8
  %127 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %128 = load i8*, i8** %127, align 8
  %129 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"class.v8::TracingController"* %125 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %132 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %131, align 8
  %133 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %132, i64 5
  %134 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %133, align 8
  call void %134(%"class.v8::TracingController"* %125, i8* %126, i8* %128, i64 %130) #6
  br label %135

135:                                              ; preds = %116, %119, %124
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #6
  %136 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %137 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %136, align 8
  %138 = icmp eq %"class.v8::internal::RuntimeCallStats"* %137, null
  br i1 %138, label %141, label %139, !prof !3

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %137, %"class.v8::internal::RuntimeCallTimer"* %140) #6
  br label %141

141:                                              ; preds = %135, %139
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #6
  ret i64 %101
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @llvm.assume(i1) #6

declare i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"*, i64*, i32, i32) local_unnamed_addr #2

declare void @_ZN2v88internal24ReplacementStringBuilder14EnsureCapacityEi(%"class.v8::internal::ReplacementStringBuilder"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal17FixedArrayBuilder3AddENS0_3SmiE(%"class.v8::internal::FixedArrayBuilder"*, i64) local_unnamed_addr #2

declare %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() local_unnamed_addr #2

declare void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*) local_unnamed_addr #2

declare i64 @_ZN2v88internal18RegExpResultsCache6LookupEPNS0_4HeapENS0_6StringENS0_6ObjectEPNS0_10FixedArrayENS1_16ResultsCacheTypeE(%"class.v8::internal::Heap"*, i64, i64, %"class.v8::internal::FixedArray"*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) local_unnamed_addr #7 comdat align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = icmp ult i16 %13, 64
  br i1 %14, label %15, label %72

15:                                               ; preds = %3
  %16 = load atomic i32, i32* %7 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %5, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = and i16 %21, 7
  %23 = icmp eq i16 %22, 1
  br i1 %23, label %24, label %72

24:                                               ; preds = %15
  %25 = load atomic i32, i32* %7 acquire, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %5, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = and i16 %30, 7
  %32 = icmp eq i16 %31, 1
  br i1 %32, label %33, label %43

33:                                               ; preds = %24
  %34 = add i64 %4, 15
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %5, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %70

43:                                               ; preds = %24, %33
  %44 = load i64, i64* %1, align 8
  %45 = and i64 %44, -4294967296
  %46 = add i64 %44, 11
  %47 = inttoptr i64 %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %45, %49
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %52 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %51, align 8
  %53 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %43
  %55 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %52, i64 %50) #6
  %56 = load i64, i64* %55, align 8
  br label %72

57:                                               ; preds = %43
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %61 = load i64*, i64** %60, align 8
  %62 = icmp eq i64* %59, %61
  br i1 %62, label %63, label %65

63:                                               ; preds = %57
  %64 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %65

65:                                               ; preds = %63, %57
  %66 = phi i64* [ %64, %63 ], [ %59, %57 ]
  %67 = ptrtoint i64* %66 to i64
  %68 = add i64 %67, 8
  %69 = inttoptr i64 %68 to i64*
  store i64* %69, i64** %58, align 8
  store i64 %50, i64* %66, align 8
  br label %72

70:                                               ; preds = %33
  %71 = tail call i64* @_ZN2v88internal6String11SlowFlattenEPNS0_7IsolateENS0_6HandleINS0_10ConsStringEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %1, i8 zeroext %2) #6
  br label %118

72:                                               ; preds = %65, %54, %3, %15
  %73 = phi i64 [ %4, %15 ], [ %4, %3 ], [ %50, %65 ], [ %56, %54 ]
  %74 = phi i64* [ %1, %15 ], [ %1, %3 ], [ %66, %65 ], [ %55, %54 ]
  %75 = and i64 %73, -4294967296
  %76 = add i64 %73, -1
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %75, %79
  %81 = add i64 %80, 7
  %82 = inttoptr i64 %81 to i16*
  %83 = load atomic i16, i16* %82 monotonic, align 2
  %84 = icmp ult i16 %83, 64
  br i1 %84, label %85, label %118

85:                                               ; preds = %72
  %86 = load atomic i32, i32* %77 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %75, %87
  %89 = add i64 %88, 7
  %90 = inttoptr i64 %89 to i16*
  %91 = load atomic i16, i16* %90 monotonic, align 2
  %92 = and i16 %91, 7
  %93 = icmp eq i16 %92, 5
  br i1 %93, label %94, label %118

94:                                               ; preds = %85
  %95 = add i64 %73, 11
  %96 = inttoptr i64 %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  %99 = or i64 %75, %98
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %101 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %100, align 8
  %102 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %101, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %94
  %104 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %101, i64 %99) #6
  br label %118

105:                                              ; preds = %94
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %107 = load i64*, i64** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %109 = load i64*, i64** %108, align 8
  %110 = icmp eq i64* %107, %109
  br i1 %110, label %111, label %113

111:                                              ; preds = %105
  %112 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %113

113:                                              ; preds = %111, %105
  %114 = phi i64* [ %112, %111 ], [ %107, %105 ]
  %115 = ptrtoint i64* %114 to i64
  %116 = add i64 %115, 8
  %117 = inttoptr i64 %116 to i64*
  store i64* %117, i64** %106, align 8
  store i64 %99, i64* %114, align 8
  br label %118

118:                                              ; preds = %72, %85, %103, %113, %70
  %119 = phi i64* [ %71, %70 ], [ %74, %85 ], [ %104, %103 ], [ %114, %113 ], [ %74, %72 ]
  ret i64* %119
}

declare i64* @_ZN2v88internal7Factory10NewJSArrayENS0_12ElementsKindEiiNS0_26ArrayStorageAllocationModeENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i8 zeroext, i32, i32, i32, i8 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal18RegExpResultsCache5EnterEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS4_INS0_6ObjectEEENS4_INS0_10FixedArrayEEESA_NS1_16ResultsCacheTypeE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #8

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i64*, i8 zeroext, i32, i8 zeroext) local_unnamed_addr #2

declare i64* @_ZN2v88internal6String11SlowFlattenEPNS0_7IsolateENS0_6HandleINS0_10ConsStringEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #2

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #2

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal6Object7ToInt32EPi(%"class.v8::internal::Object"*, i32*) local_unnamed_addr #2

declare i64* @_ZN2v88internal6RegExp4ExecEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiNS4_INS0_15RegExpMatchInfoEEENS1_10ExecQuirksE(%"class.v8::internal::Isolate"*, i64*, i64*, i32, i64*, i32) local_unnamed_addr #2

declare i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal6RegExp23ExperimentalOneshotExecEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiNS4_INS0_15RegExpMatchInfoEEENS1_10ExecQuirksE(%"class.v8::internal::Isolate"*, i64*, i64*, i32, i64*, i32) local_unnamed_addr #2

declare i64* @_ZN2v88internal21JSRegExpResultIndices12BuildIndicesEPNS0_7IsolateENS0_6HandleINS0_15RegExpMatchInfoEEENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal8JSRegExp21MarkTierUpForNextExecEv(%"class.v8::internal::JSRegExp"*) local_unnamed_addr #2

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory21CopyFixedArrayWithMapENS0_6HandleINS0_10FixedArrayEEENS2_INS0_3MapEEE(%"class.v8::internal::Factory"*, i64*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal6RegExp16SetLastMatchInfoEPNS0_7IsolateENS0_6HandleINS0_15RegExpMatchInfoEEENS4_INS0_6StringEEEiPi(%"class.v8::internal::Isolate"*, i64*, i64*, i32, i32*) local_unnamed_addr #2

declare void @_ZN2v88internal17RegExpGlobalCacheC1ENS0_6HandleINS0_8JSRegExpEEENS2_INS0_6StringEEEPNS0_7IsolateE(%"class.v8::internal::RegExpGlobalCache"*, i64*, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #2

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE22NewFixedArrayWithHolesEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal17FixedArrayBuilderC1ENS0_6HandleINS0_10FixedArrayEEE(%"class.v8::internal::FixedArrayBuilder"*, i64*) unnamed_addr #2

declare i32* @_ZN2v88internal17RegExpGlobalCache9FetchNextEv(%"class.v8::internal::RegExpGlobalCache"*) local_unnamed_addr #2

declare void @_ZN2v88internal17FixedArrayBuilder14EnsureCapacityEPNS0_7IsolateEi(%"class.v8::internal::FixedArrayBuilder"*, %"class.v8::internal::Isolate"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal17FixedArrayBuilder3AddENS0_6ObjectE(%"class.v8::internal::FixedArrayBuilder"*, i64) local_unnamed_addr #2

declare i32* @_ZN2v88internal17RegExpGlobalCache19LastSuccessfulMatchEv(%"class.v8::internal::RegExpGlobalCache"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #2

declare i64* @_ZN2v88internal10FixedArray13ShrinkOrEmptyEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #2

declare i64* @_ZN2v88internal17FixedArrayBuilder9ToJSArrayENS0_6HandleINS0_7JSArrayEEE(%"class.v8::internal::FixedArrayBuilder"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88internal17RegExpGlobalCacheD1Ev(%"class.v8::internal::RegExpGlobalCache"*) unnamed_addr #12

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #8

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnamRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #13

declare %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"*, i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8JSObject24EnsureCanContainElementsENS0_6HandleIS1_EENS2_INS0_14FixedArrayBaseEEEjNS0_18EnsureElementsModeE(i64*, i64*, i32, i32) local_unnamed_addr #7 comdat align 2 {
  %5 = load i64, i64* %0, align 8
  %6 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %7 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %6, i64 0, i32 0, i32 1
  %10 = load i8, i8* %9, align 8, !range !5
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %6, i64 0, i32 1, i64 0
  br label %22

14:                                               ; preds = %8, %4
  %15 = and i64 %5, -262144
  %16 = or i64 %15, 16
  %17 = inttoptr i64 %16 to i64*
  %18 = load i64, i64* %17, align 16
  %19 = add i64 %18, -41416
  %20 = inttoptr i64 %19 to %"class.v8::internal::Isolate"*
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %20, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %22

22:                                               ; preds = %12, %14
  %23 = phi i64* [ %21, %14 ], [ %13, %12 ]
  %24 = load i64, i64* %1, align 8
  %25 = add i64 %24, -1
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = getelementptr inbounds i64, i64* %23, i64 45
  %29 = load i64, i64* %28, align 8
  %30 = trunc i64 %29 to i32
  %31 = icmp eq i32 %27, %30
  br i1 %31, label %36, label %32

32:                                               ; preds = %22
  %33 = icmp eq i32 %3, 1
  %34 = select i1 %33, i32 0, i32 %3
  %35 = add i64 %24, 7
  tail call void @_ZN2v88internal8JSObject24EnsureCanContainElementsINS0_20CompressedObjectSlotEEEvNS0_6HandleIS1_EET_jNS0_18EnsureElementsModeE(i64* %0, i64 %35, i32 %2, i32 %34)
  br label %73

36:                                               ; preds = %22
  %37 = and i64 %5, -4294967296
  %38 = add i64 %5, -1
  %39 = inttoptr i64 %38 to i32*
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = zext i32 %40 to i64
  %42 = or i64 %37, %41
  %43 = add i64 %42, 10
  %44 = inttoptr i64 %43 to i8*
  %45 = load i8, i8* %44, align 1
  %46 = and i8 %45, -4
  %47 = icmp eq i8 %46, 4
  br i1 %47, label %48, label %49

48:                                               ; preds = %36
  tail call void @_ZN2v88internal8JSObject22TransitionElementsKindENS0_6HandleIS1_EENS0_12ElementsKindE(i64* %0, i8 zeroext 5) #6
  br label %73

49:                                               ; preds = %36
  %50 = load atomic i32, i32* %39 monotonic, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %37, %51
  %53 = add i64 %52, 10
  %54 = inttoptr i64 %53 to i8*
  %55 = load i8, i8* %54, align 1
  %56 = icmp ult i8 %55, 4
  br i1 %56, label %57, label %73

57:                                               ; preds = %49
  %58 = icmp eq i32 %2, 0
  br i1 %58, label %72, label %61

59:                                               ; preds = %61
  %60 = icmp eq i32 %70, %2
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %59
  %62 = phi i32 [ %70, %59 ], [ 0, %57 ]
  %63 = shl nsw i32 %62, 3
  %64 = or i32 %63, 7
  %65 = sext i32 %64 to i64
  %66 = add i64 %24, %65
  %67 = inttoptr i64 %66 to i64*
  %68 = load i64, i64* %67, align 1
  %69 = icmp eq i64 %68, -2251799814209537
  %70 = add nuw i32 %62, 1
  br i1 %69, label %71, label %59

71:                                               ; preds = %61
  tail call void @_ZN2v88internal8JSObject22TransitionElementsKindENS0_6HandleIS1_EENS0_12ElementsKindE(i64* %0, i8 zeroext 5) #6
  br label %73

72:                                               ; preds = %59, %57
  tail call void @_ZN2v88internal8JSObject22TransitionElementsKindENS0_6HandleIS1_EENS0_12ElementsKindE(i64* %0, i8 zeroext 4) #6
  br label %73

73:                                               ; preds = %48, %49, %72, %71, %32
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8JSObject24EnsureCanContainElementsINS0_20CompressedObjectSlotEEEvNS0_6HandleIS1_EET_jNS0_18EnsureElementsModeE(i64*, i64, i32, i32) local_unnamed_addr #7 comdat align 2 {
  %5 = load i64, i64* %0, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 10
  %13 = inttoptr i64 %12 to i8*
  %14 = load i8, i8* %13, align 1
  %15 = lshr i8 %14, 2
  %16 = icmp eq i8 %15, 3
  br i1 %16, label %131, label %17

17:                                               ; preds = %4
  %18 = icmp ult i8 %14, 24
  %19 = and i8 %14, 4
  %20 = icmp ne i8 %19, 0
  %21 = and i1 %18, %20
  %22 = zext i1 %21 to i8
  %23 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %24 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %23, i64 0, i32 0, i32 1
  %27 = load i8, i8* %26, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %23, i64 0, i32 1, i64 0
  br label %39

31:                                               ; preds = %25, %17
  %32 = and i64 %5, -262144
  %33 = or i64 %32, 16
  %34 = inttoptr i64 %33 to i64*
  %35 = load i64, i64* %34, align 16
  %36 = add i64 %35, -41416
  %37 = inttoptr i64 %36 to %"class.v8::internal::Isolate"*
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %37, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %39

39:                                               ; preds = %29, %31
  %40 = phi i64* [ %38, %31 ], [ %30, %29 ]
  %41 = icmp eq i32 %2, 0
  br i1 %41, label %131, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds i64, i64* %40, i64 5
  %44 = load i64, i64* %43, align 8
  %45 = trunc i64 %44 to i32
  %46 = icmp eq i32 %3, 2
  br i1 %46, label %47, label %96

47:                                               ; preds = %42, %90
  %48 = phi i8 [ %92, %90 ], [ %15, %42 ]
  %49 = phi i8 [ %91, %90 ], [ %22, %42 ]
  %50 = phi i32 [ %93, %90 ], [ 0, %42 ]
  %51 = phi i64 [ %94, %90 ], [ %1, %42 ]
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = and i64 %51, -4294967296
  %55 = zext i32 %53 to i64
  %56 = or i64 %54, %55
  %57 = icmp eq i32 %53, %45
  br i1 %57, label %79, label %58

58:                                               ; preds = %47
  %59 = and i64 %55, 1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %90, label %61

61:                                               ; preds = %58
  %62 = add i64 %56, -1
  %63 = inttoptr i64 %62 to i32*
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = zext i32 %64 to i64
  %66 = or i64 %54, %65
  %67 = add i64 %66, 7
  %68 = inttoptr i64 %67 to i16*
  %69 = load atomic i16, i16* %68 monotonic, align 2
  %70 = icmp eq i16 %69, 66
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = and i8 %49, 1
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %90, label %127

74:                                               ; preds = %61
  %75 = icmp ult i8 %48, 2
  br i1 %75, label %76, label %90

76:                                               ; preds = %74
  %77 = and i8 %49, 1
  %78 = or i8 %77, 4
  br label %90

79:                                               ; preds = %47
  %80 = icmp ult i8 %48, 7
  br i1 %80, label %81, label %90

81:                                               ; preds = %79
  %82 = lshr i8 85, %48
  %83 = and i8 %82, 1
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %81
  %86 = zext i8 %48 to i56
  %87 = shl nuw nsw i56 %86, 3
  %88 = lshr i56 1971445840412929, %87
  %89 = trunc i56 %88 to i8
  br label %90

90:                                               ; preds = %81, %79, %85, %76, %74, %71, %58
  %91 = phi i8 [ %49, %58 ], [ %49, %74 ], [ %49, %76 ], [ %49, %71 ], [ 1, %85 ], [ 1, %81 ], [ 1, %79 ]
  %92 = phi i8 [ %48, %58 ], [ %48, %74 ], [ %78, %76 ], [ 2, %71 ], [ %89, %85 ], [ %48, %81 ], [ %48, %79 ]
  %93 = add nuw i32 %50, 1
  %94 = add i64 %51, 4
  %95 = icmp eq i32 %93, %2
  br i1 %95, label %127, label %47

96:                                               ; preds = %42, %121
  %97 = phi i8 [ %123, %121 ], [ %15, %42 ]
  %98 = phi i8 [ %122, %121 ], [ %22, %42 ]
  %99 = phi i32 [ %124, %121 ], [ 0, %42 ]
  %100 = phi i64 [ %125, %121 ], [ %1, %42 ]
  %101 = inttoptr i64 %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, %45
  br i1 %103, label %104, label %106

104:                                              ; preds = %96
  %105 = icmp ult i8 %97, 7
  br i1 %105, label %112, label %121

106:                                              ; preds = %96
  %107 = and i32 %102, 1
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %121, label %109

109:                                              ; preds = %106
  %110 = and i8 %98, 1
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %121, label %127

112:                                              ; preds = %104
  %113 = lshr i8 85, %97
  %114 = and i8 %113, 1
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %121, label %116

116:                                              ; preds = %112
  %117 = zext i8 %97 to i56
  %118 = shl nuw nsw i56 %117, 3
  %119 = lshr i56 1971445840412929, %118
  %120 = trunc i56 %119 to i8
  br label %121

121:                                              ; preds = %112, %104, %116, %106, %109
  %122 = phi i8 [ %98, %106 ], [ %98, %109 ], [ 1, %116 ], [ 1, %112 ], [ 1, %104 ]
  %123 = phi i8 [ %97, %106 ], [ 2, %109 ], [ %120, %116 ], [ %97, %112 ], [ %97, %104 ]
  %124 = add nuw i32 %99, 1
  %125 = add i64 %100, 4
  %126 = icmp eq i32 %124, %2
  br i1 %126, label %127, label %96

127:                                              ; preds = %109, %121, %71, %90
  %128 = phi i8 [ 3, %71 ], [ %92, %90 ], [ 3, %109 ], [ %123, %121 ]
  %129 = icmp eq i8 %128, %15
  br i1 %129, label %131, label %130

130:                                              ; preds = %127
  tail call void @_ZN2v88internal8JSObject22TransitionElementsKindENS0_6HandleIS1_EENS0_12ElementsKindE(i64* %0, i8 zeroext %128) #6
  br label %131

131:                                              ; preds = %39, %4, %127, %130
  ret void
}

declare void @_ZN2v88internal8JSObject22TransitionElementsKindENS0_6HandleIS1_EENS0_12ElementsKindE(i64*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_133ConstructNamedCaptureGroupsObjectEPNS0_7IsolateENS0_6HandleINS0_10FixedArrayEEERKNSt3__18functionIFNS0_6ObjectEiEEE(%"class.v8::internal::Isolate"*, i64*, %"class.std::__1::function"* dereferenceable(32)) unnamed_addr #0 {
  %4 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %5 = tail call i64* @_ZN2v88internal7Factory24NewJSObjectWithNullProtoEv(%"class.v8::internal::Factory"* %4) #6
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 3
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 3
  br i1 %10, label %11, label %19

11:                                               ; preds = %3
  %12 = lshr i32 %9, 2
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %16 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0
  %18 = zext i32 %12 to i64
  br label %20

19:                                               ; preds = %76, %3
  ret i64* %5

20:                                               ; preds = %80, %11
  %21 = phi i64 [ %6, %11 ], [ %81, %80 ]
  %22 = phi i64 [ 0, %11 ], [ %78, %80 ]
  %23 = and i64 %21, -4294967296
  %24 = shl i64 %22, 35
  %25 = ashr exact i64 %24, 32
  %26 = or i64 %25, 7
  %27 = add i64 %21, %26
  %28 = inttoptr i64 %27 to i32*
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %23, %30
  %32 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %13, align 8
  %33 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %20
  %35 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %32, i64 %31) #6
  br label %47

36:                                               ; preds = %20
  %37 = load i64*, i64** %14, align 8
  %38 = load i64*, i64** %15, align 8
  %39 = icmp eq i64* %37, %38
  br i1 %39, label %40, label %42

40:                                               ; preds = %36
  %41 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %42

42:                                               ; preds = %40, %36
  %43 = phi i64* [ %41, %40 ], [ %37, %36 ]
  %44 = ptrtoint i64* %43 to i64
  %45 = add i64 %44, 8
  %46 = inttoptr i64 %45 to i64*
  store i64* %46, i64** %14, align 8
  store i64 %31, i64* %43, align 8
  br label %47

47:                                               ; preds = %34, %42
  %48 = phi i64* [ %35, %34 ], [ %43, %42 ]
  %49 = load i64, i64* %1, align 8
  %50 = trunc i64 %22 to i32
  %51 = shl i32 %50, 3
  %52 = or i32 %51, 4
  %53 = sext i32 %52 to i64
  %54 = add nsw i64 %53, 7
  %55 = add i64 %54, %49
  %56 = inttoptr i64 %55 to i32*
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = ashr i32 %57, 1
  %59 = load i64 (%"union.std::__1::__function::__policy_storage"*, i32)*, i64 (%"union.std::__1::__function::__policy_storage"*, i32)** %16, align 8
  %60 = tail call i64 %59(%"union.std::__1::__function::__policy_storage"* %17, i32 %58) #6
  %61 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %13, align 8
  %62 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %47
  %64 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %61, i64 %60) #6
  br label %76

65:                                               ; preds = %47
  %66 = load i64*, i64** %14, align 8
  %67 = load i64*, i64** %15, align 8
  %68 = icmp eq i64* %66, %67
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  %70 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %71

71:                                               ; preds = %69, %65
  %72 = phi i64* [ %70, %69 ], [ %66, %65 ]
  %73 = ptrtoint i64* %72 to i64
  %74 = add i64 %73, 8
  %75 = inttoptr i64 %74 to i64*
  store i64* %75, i64** %14, align 8
  store i64 %60, i64* %72, align 8
  br label %76

76:                                               ; preds = %63, %71
  %77 = phi i64* [ %64, %63 ], [ %72, %71 ]
  tail call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* %5, i64* %48, i64* %77, i32 0) #6
  %78 = add nuw nsw i64 %22, 1
  %79 = icmp ult i64 %78, %18
  br i1 %79, label %80, label %19

80:                                               ; preds = %76
  %81 = load i64, i64* %1, align 8
  br label %20
}

declare i64* @_ZN2v88internal7Factory24NewJSObjectWithNullProtoEv(%"class.v8::internal::Factory"*) local_unnamed_addr #2

declare void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i64 @_ZNSt3__110__function16__policy_invokerIFN2v88internal6ObjectEiEE11__call_implINS0_20__default_alloc_funcIZNS3_12_GLOBAL__N_120SearchRegExpMultipleILb1EEES4_PNS3_7IsolateENS3_6HandleINS3_6StringEEENSD_INS3_8JSRegExpEEENSD_INS3_15RegExpMatchInfoEEENSD_INS3_7JSArrayEEEEUliE_S5_EEEES4_PKNS0_16__policy_storageEi(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32) #14 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, -4294967296
  %7 = shl i32 %1, 2
  %8 = sext i32 %7 to i64
  %9 = add nsw i64 %8, 7
  %10 = add i64 %9, %5
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %6, %13
  ret i64 %14
}

declare void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"*, %"class.v8::internal::Isolate"*) unnamed_addr #2

declare void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory13NewRangeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"*, i32, i64*, i64*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal11RegExpUtils20GenericCaptureGetterEPNS0_7IsolateENS0_6HandleINS0_15RegExpMatchInfoEEEiPb(%"class.v8::internal::Isolate"*, i64*, i32, i8*) local_unnamed_addr #2

declare i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"*, i64*, i64*, i32, %"class.v8::internal::Handle.1169"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal6Object15ConvertToLengthEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"*, i64, %"class.v8::internal::MessageLocation"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZNSt3__110__function16__policy_invokerIFN2v88internal6ObjectEiEE11__call_implINS0_20__default_alloc_funcIZNS3_L58__RT_impl_Runtime_StringReplaceNonGlobalRegExpWithFunctionENS3_9ArgumentsILNS3_13ArgumentsTypeE0EEEPNS3_7IsolateEEUliE_S5_EEEES4_PKNS0_16__policy_storageEi(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32) #15 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.v8::internal::Vector.1191"**
  %4 = load %"class.v8::internal::Vector.1191"*, %"class.v8::internal::Vector.1191"** %3, align 8
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.v8::internal::Vector.1191", %"class.v8::internal::Vector.1191"* %4, i64 0, i32 0
  %7 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %7, i64 %5, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %9, align 8
  ret i64 %10
}

declare i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal6Object18SpeciesConstructorEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEENS4_INS0_10JSFunctionEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory35LookupSingleCharacterStringFromCodeEt(%"class.v8::internal::Factory"*, i16 zeroext) local_unnamed_addr #2

declare i32 @_ZN2v88internal6String7IndexOfEPNS0_7IsolateENS0_6HandleIS1_EES5_i(%"class.v8::internal::Isolate"*, i64*, i64*, i32) local_unnamed_addr #2

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewConsStringENS0_6HandleINS0_6StringEEES6_NS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i64*, i64*, i8 zeroext) local_unnamed_addr #2

declare i64* @_ZN2v88internal9Execution3NewEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEiPS6_(%"class.v8::internal::Isolate"*, i64*, i32, %"class.v8::internal::Handle.1169"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal11RegExpUtils10RegExpExecEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEENS4_INS0_6StringEEENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal11RegExpUtils12SetLastIndexEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEEm(%"class.v8::internal::Isolate"*, i64*, i64) local_unnamed_addr #2

declare i64 @_ZN2v88internal11RegExpUtils18AdvanceStringIndexENS0_6HandleINS0_6StringEEEmb(i64*, i64, i1 zeroext) local_unnamed_addr #2

declare i64* @_ZN2v88internal11RegExpUtils12GetLastIndexEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal10FixedArray10SetAndGrowEPNS0_7IsolateENS0_6HandleIS1_EEiNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i32, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64*, i32) unnamed_addr #7 comdat align 2 {
  %8 = ptrtoint i64* %5 to i64
  %9 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 0
  %10 = icmp eq i64* %3, null
  br i1 %10, label %32, label %11

11:                                               ; preds = %7
  %12 = load i64, i64* %3, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %12, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i64 %14, 4294967295
  %19 = icmp eq i64 %18, 0
  tail call void @llvm.assume(i1 %19) #6
  %20 = zext i32 %17 to i64
  %21 = or i64 %14, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = icmp eq i16 %24, 64
  br i1 %25, label %26, label %32

26:                                               ; preds = %11
  %27 = add i64 %12, 7
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %26, %11, %7
  br label %33

33:                                               ; preds = %26, %32
  %34 = phi i32 [ %6, %32 ], [ 0, %26 ]
  store i32 %34, i32* %9, align 8
  %35 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 4, i32* %35, align 4
  %36 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 2
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  store i64* %3, i64** %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  store i64* %2, i64** %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 10
  %45 = bitcast %"class.v8::internal::Handle.1169"* %44 to i64*
  store i64 %8, i64* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  store i64 %4, i64* %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 -1, i64* %47, align 8
  %48 = icmp eq i64 %4, -1
  br i1 %48, label %115, label %49

49:                                               ; preds = %33
  %50 = icmp ugt i64 %4, 4294967294
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %10, label %114, label %99

53:                                               ; preds = %49
  %54 = load i64, i64* %5, align 8
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %10, label %72, label %78

59:                                               ; preds = %53
  %60 = and i64 %54, -4294967296
  %61 = add i64 %54, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %60, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = icmp eq i16 %68, 1080
  %70 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %69, label %98, label %71

71:                                               ; preds = %59
  br i1 %10, label %72, label %78

72:                                               ; preds = %57, %71
  %73 = phi %"class.v8::internal::Handle.1188"* [ %58, %57 ], [ %70, %71 ]
  %74 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::Factory"*
  %75 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %74, i64 %4, i1 zeroext true) #6
  %76 = ptrtoint i64* %75 to i64
  %77 = bitcast %"class.v8::internal::Handle.1188"* %73 to i64*
  store i64 %76, i64* %77, align 8
  br label %78

78:                                               ; preds = %57, %72, %71
  %79 = phi i64* [ %3, %57 ], [ %75, %72 ], [ %3, %71 ]
  %80 = load i64, i64* %79, align 8
  %81 = and i64 %80, -4294967296
  %82 = add i64 %80, -1
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %81, %85
  %87 = add i64 %86, 7
  %88 = inttoptr i64 %87 to i16*
  %89 = load atomic i16, i16* %88 monotonic, align 2
  %90 = and i16 %89, -32
  %91 = icmp eq i16 %90, 32
  br i1 %91, label %92, label %96

92:                                               ; preds = %78
  %93 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %94 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %93, align 8
  %95 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %94, %"class.v8::internal::Isolate"* %1, i64* %79) #6
  br label %96

96:                                               ; preds = %78, %92
  %97 = phi i64* [ %95, %92 ], [ %79, %78 ]
  store i64* %97, i64** %40, align 8
  br label %114

98:                                               ; preds = %59
  br i1 %10, label %114, label %99

99:                                               ; preds = %51, %98
  %100 = phi %"class.v8::internal::Handle.1188"* [ %52, %51 ], [ %70, %98 ]
  %101 = load i64, i64* %3, align 8
  %102 = and i64 %101, -4294967296
  %103 = add i64 %101, -1
  %104 = inttoptr i64 %103 to i32*
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = zext i32 %105 to i64
  %107 = or i64 %102, %106
  %108 = add i64 %107, 7
  %109 = inttoptr i64 %108 to i16*
  %110 = load atomic i16, i16* %109 monotonic, align 2
  %111 = icmp ult i16 %110, 32
  br i1 %111, label %114, label %112

112:                                              ; preds = %99
  %113 = bitcast %"class.v8::internal::Handle.1188"* %100 to i64*
  store i64 0, i64* %113, align 8
  br label %114

114:                                              ; preds = %98, %51, %99, %112, %96
  tail call void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"* %0) #6
  br label %134

115:                                              ; preds = %33
  %116 = load i64, i64* %3, align 8
  %117 = and i64 %116, -4294967296
  %118 = add i64 %116, -1
  %119 = inttoptr i64 %118 to i32*
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = zext i32 %120 to i64
  %122 = or i64 %117, %121
  %123 = add i64 %122, 7
  %124 = inttoptr i64 %123 to i16*
  %125 = load atomic i16, i16* %124 monotonic, align 2
  %126 = and i16 %125, -32
  %127 = icmp eq i16 %126, 32
  br i1 %127, label %128, label %132

128:                                              ; preds = %115
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %130 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %129, align 8
  %131 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %130, %"class.v8::internal::Isolate"* %1, i64* %3) #6
  br label %132

132:                                              ; preds = %115, %128
  %133 = phi i64* [ %131, %128 ], [ %3, %115 ]
  store i64* %133, i64** %40, align 8
  tail call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* %0) #6
  br label %134

134:                                              ; preds = %132, %114
  ret void
}

declare i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"*, i64, i1 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #2

declare void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal6Object24ConvertToNumberOrNumericEPNS0_7IsolateENS0_6HandleIS1_EENS1_10ConversionE(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal11RegExpUtils18IsUnmodifiedRegExpEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal6Object12BooleanValueEPNS0_7IsolateE(%"class.v8::internal::Object"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal11RegExpUtils22SetAdvancedStringIndexEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEENS4_INS0_6StringEEEb(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #2

declare i64* @_ZN2v88internal6String15GetSubstitutionEPNS0_7IsolateEPNS1_5MatchENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"*, %"class.v8::internal::String::Match"*, i64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6String5MatchD2Ev(%"class.v8::internal::String::Match"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i64* @_ZN2v88internal12_GLOBAL__N_120MatchInfoBackedMatch8GetMatchEv(%"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = tail call i64* @_ZN2v88internal11RegExpUtils20GenericCaptureGetterEPNS0_7IsolateENS0_6HandleINS0_15RegExpMatchInfoEEEiPb(%"class.v8::internal::Isolate"* %3, i64* %5, i32 0, i8* null) #6
  ret i64* %6
}

; Function Attrs: nounwind ssp uwtable
define internal i64* @_ZN2v88internal12_GLOBAL__N_120MatchInfoBackedMatch9GetPrefixEv(%"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 19
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = ashr i32 %7, 1
  %9 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, %8
  br i1 %15, label %21, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %0, i64 0, i32 1
  %18 = bitcast %"class.v8::internal::Isolate"** %17 to %"class.v8::internal::Factory"**
  %19 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %18, align 8
  %20 = tail call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %19, i64* %10, i32 0, i32 %8) #6
  br label %21

21:                                               ; preds = %1, %16
  %22 = phi i64* [ %20, %16 ], [ %10, %1 ]
  ret i64* %22
}

; Function Attrs: nounwind ssp uwtable
define internal i64* @_ZN2v88internal12_GLOBAL__N_120MatchInfoBackedMatch9GetSuffixEv(%"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 23
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = ashr i32 %7, 1
  %9 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %1
  %13 = load i64, i64* %10, align 8
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %0, i64 0, i32 1
  %18 = bitcast %"class.v8::internal::Isolate"** %17 to %"class.v8::internal::Factory"**
  %19 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %18, align 8
  %20 = tail call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %19, i64* %10, i32 %8, i32 %16) #6
  br label %21

21:                                               ; preds = %1, %12
  %22 = phi i64* [ %20, %12 ], [ %10, %1 ]
  ret i64* %22
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN2v88internal12_GLOBAL__N_120MatchInfoBackedMatch12CaptureCountEv(%"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 7
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = ashr i32 %7, 1
  %9 = sdiv i32 %8, 2
  ret i32 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN2v88internal12_GLOBAL__N_120MatchInfoBackedMatch16HasNamedCapturesEv(%"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* nocapture readonly) unnamed_addr #15 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !5
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define internal i64* @_ZN2v88internal12_GLOBAL__N_120MatchInfoBackedMatch10GetCaptureEiPb(%"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* nocapture readonly, i32, i8*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %0, i64 0, i32 1
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = tail call i64* @_ZN2v88internal11RegExpUtils20GenericCaptureGetterEPNS0_7IsolateENS0_6HandleINS0_15RegExpMatchInfoEEEiPb(%"class.v8::internal::Isolate"* %5, i64* %7, i32 %1, i8* %2) #6
  %9 = load i8, i8* %2, align 1, !range !5
  %10 = icmp eq i8 %9, 0
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  br i1 %10, label %29, label %12

12:                                               ; preds = %3
  %13 = load i64, i64* %8, align 8
  %14 = and i64 %13, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %27, label %16

16:                                               ; preds = %12
  %17 = and i64 %13, -4294967296
  %18 = add i64 %13, -1
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %17, %21
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = icmp ult i16 %25, 64
  br i1 %26, label %31, label %27

27:                                               ; preds = %16, %12
  %28 = tail call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %11, i64* %8) #6
  br label %31

29:                                               ; preds = %3
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 7, i32 0, i64 9
  br label %31

31:                                               ; preds = %27, %16, %29
  %32 = phi i64* [ %30, %29 ], [ %28, %27 ], [ %8, %16 ]
  ret i64* %32
}

; Function Attrs: nounwind ssp uwtable
define internal i64* @_ZN2v88internal12_GLOBAL__N_120MatchInfoBackedMatch15GetNamedCaptureENS0_6HandleINS0_6StringEEEPNS4_5Match12CaptureStateE(%"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"*, i64*, i32* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::String", align 8
  %5 = alloca %"class.std::__1::function.1205", align 8
  %6 = alloca i8, align 1
  %7 = bitcast %"class.std::__1::function.1205"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #6
  %8 = ptrtoint i64* %1 to i64
  %9 = getelementptr inbounds %"class.std::__1::function.1205", %"class.std::__1::function.1205"* %5, i64 0, i32 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.std::__1::function.1205", %"class.std::__1::function.1205"* %5, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::String"*)* @_ZNSt3__110__function16__policy_invokerIFbN2v88internal6StringEEE11__call_implINS0_20__default_alloc_funcIZNS3_12_GLOBAL__N_120MatchInfoBackedMatch15GetNamedCaptureENS3_6HandleIS4_EEPNS4_5Match12CaptureStateEEUlS4_E_S5_EEEEbPKNS0_16__policy_storageEOS4_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::String"*)** %9, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal12_GLOBAL__N_120MatchInfoBackedMatch15GetNamedCaptureENS5_6HandleINS5_6StringEEEPNS9_5Match12CaptureStateEEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %10, align 8
  %11 = bitcast %"class.std::__1::function.1205"* %5 to i64*
  store i64 %8, i64* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %0, i64 0, i32 5, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 3
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, 3
  br i1 %18, label %19, label %58

19:                                               ; preds = %3
  %20 = lshr i32 %17, 2
  %21 = and i64 %14, -4294967296
  %22 = bitcast %"class.v8::internal::String"* %4 to i8*
  %23 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::function.1205", %"class.std::__1::function.1205"* %5, i64 0, i32 0, i32 0
  %25 = zext i32 %20 to i64
  %26 = add i64 %14, 7
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %21, %29
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #6
  store i64 %30, i64* %23, align 8
  %31 = call zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbN2v88internal6StringEEE11__call_implINS0_20__default_alloc_funcIZNS3_12_GLOBAL__N_120MatchInfoBackedMatch15GetNamedCaptureENS3_6HandleIS4_EEPNS4_5Match12CaptureStateEEUlS4_E_S5_EEEEbPKNS0_16__policy_storageEOS4_(%"union.std::__1::__function::__policy_storage"* nonnull %24, %"class.v8::internal::String"* nonnull dereferenceable(8) %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #6
  br i1 %31, label %35, label %42

32:                                               ; preds = %46
  %33 = or i32 %49, 4
  %34 = sext i32 %33 to i64
  br label %35

35:                                               ; preds = %32, %19
  %36 = phi i64 [ %34, %32 ], [ 4, %19 ]
  %37 = add i64 %14, 7
  %38 = add i64 %37, %36
  %39 = inttoptr i64 %38 to i32*
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = ashr i32 %40, 1
  br label %58

42:                                               ; preds = %19, %46
  %43 = phi i64 [ %44, %46 ], [ 0, %19 ]
  %44 = add nuw nsw i64 %43, 1
  %45 = icmp ult i64 %44, %25
  br i1 %45, label %46, label %58

46:                                               ; preds = %42
  %47 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::String"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::String"*)** %9, align 8
  %48 = trunc i64 %44 to i32
  %49 = shl i32 %48, 3
  %50 = or i32 %49, 7
  %51 = sext i32 %50 to i64
  %52 = add i64 %14, %51
  %53 = inttoptr i64 %52 to i32*
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = zext i32 %54 to i64
  %56 = or i64 %21, %55
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #6
  store i64 %56, i64* %23, align 8
  %57 = call zeroext i1 %47(%"union.std::__1::__function::__policy_storage"* nonnull %24, %"class.v8::internal::String"* nonnull dereferenceable(8) %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #6
  br i1 %57, label %32, label %42

58:                                               ; preds = %42, %3, %35
  %59 = phi i32 [ %41, %35 ], [ -1, %3 ], [ -1, %42 ]
  %60 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %10, align 8
  %61 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %60, i64 0, i32 1
  %62 = load void (i8*)*, void (i8*)** %61, align 8
  %63 = icmp eq void (i8*)* %62, null
  br i1 %63, label %67, label %64

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.std::__1::function.1205", %"class.std::__1::function.1205"* %5, i64 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  call void %62(i8* %66) #6
  br label %67

67:                                               ; preds = %58, %64
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #6
  %68 = icmp eq i32 %59, -1
  br i1 %68, label %69, label %75

69:                                               ; preds = %67
  store i32 0, i32* %2, align 4
  %70 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %0, i64 0, i32 1
  %71 = bitcast %"class.v8::internal::Isolate"** %70 to %"class.v8::internal::Factory"**
  %72 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %72, i64 200
  %74 = ptrtoint %"class.v8::internal::Factory"* %73 to i64
  br label %95

75:                                               ; preds = %67
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #6
  %76 = bitcast %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %0 to i64* (%"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"*, i32, i8*)***
  %77 = load i64* (%"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"*, i32, i8*)**, i64* (%"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"*, i32, i8*)*** %76, align 8
  %78 = getelementptr inbounds i64* (%"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"*, i32, i8*)*, i64* (%"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"*, i32, i8*)** %77, i64 5
  %79 = load i64* (%"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"*, i32, i8*)*, i64* (%"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"*, i32, i8*)** %78, align 8
  %80 = call i64* %79(%"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %0, i32 %59, i8* nonnull %6) #6
  %81 = icmp eq i64* %80, null
  br i1 %81, label %93, label %82

82:                                               ; preds = %75
  %83 = load i8, i8* %6, align 1, !range !5
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %91

85:                                               ; preds = %82
  store i32 0, i32* %2, align 4
  %86 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch", %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %0, i64 0, i32 1
  %87 = bitcast %"class.v8::internal::Isolate"** %86 to %"class.v8::internal::Factory"**
  %88 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %88, i64 200
  %90 = ptrtoint %"class.v8::internal::Factory"* %89 to i64
  br label %93

91:                                               ; preds = %82
  %92 = ptrtoint i64* %80 to i64
  store i32 1, i32* %2, align 4
  br label %93

93:                                               ; preds = %75, %91, %85
  %94 = phi i64 [ %90, %85 ], [ %92, %91 ], [ 0, %75 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #6
  br label %95

95:                                               ; preds = %93, %69
  %96 = phi i64 [ %74, %69 ], [ %94, %93 ]
  %97 = inttoptr i64 %96 to i64*
  ret i64* %97
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2v88internal12_GLOBAL__N_120MatchInfoBackedMatchD0Ev(%"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"*) unnamed_addr #7 align 2 {
  %2 = bitcast %"class.v8::internal::(anonymous namespace)::MatchInfoBackedMatch"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbN2v88internal6StringEEE11__call_implINS0_20__default_alloc_funcIZNS3_12_GLOBAL__N_120MatchInfoBackedMatch15GetNamedCaptureENS3_6HandleIS4_EEPNS4_5Match12CaptureStateEEUlS4_E_S5_EEEEbPKNS0_16__policy_storageEOS4_(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.v8::internal::String"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = getelementptr %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i64**
  %7 = load i64*, i64** %6, align 8
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6
  %10 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %5, i64* %10, align 8
  %11 = trunc i64 %8 to i32
  %12 = trunc i64 %5 to i32
  %13 = icmp eq i32 %11, %12
  br i1 %13, label %38, label %14

14:                                               ; preds = %2
  %15 = and i64 %5, -4294967296
  %16 = add i64 %5, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %15, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = icmp ult i16 %23, 32
  br i1 %24, label %25, label %36

25:                                               ; preds = %14
  %26 = and i64 %8, -4294967296
  %27 = add i64 %8, -1
  %28 = inttoptr i64 %27 to i32*
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %26, %30
  %32 = add i64 %31, 7
  %33 = inttoptr i64 %32 to i16*
  %34 = load atomic i16, i16* %33 monotonic, align 2
  %35 = icmp ult i16 %34, 32
  br i1 %35, label %38, label %36

36:                                               ; preds = %25, %14
  %37 = call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nonnull %3, i64 %8) #6
  br label %38

38:                                               ; preds = %2, %25, %36
  %39 = phi i1 [ %37, %36 ], [ true, %2 ], [ false, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6
  ret i1 %39
}

declare zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL39StringReplaceGlobalAtomRegExpWithStringINS0_16SeqOneByteStringEEENS0_6ObjectEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS6_INS0_8JSRegExpEEES8_NS6_INS0_15RegExpMatchInfoEEE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i64*) unnamed_addr #0 {
  %6 = alloca [2 x i32], align 4
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 44
  %8 = bitcast %"class.std::__1::vector.817"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 44, i32 0, i32 1
  %11 = bitcast i32** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = load i64, i64* %2, align 8
  %13 = and i64 %12, -4294967296
  %14 = add i64 %12, 11
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %13, %17
  %19 = add i64 %18, 19
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %13, %22
  %24 = load i64, i64* %1, align 8
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = add i64 %23, 7
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = load i64, i64* %3, align 8
  %32 = add i64 %31, 7
  %33 = inttoptr i64 %32 to i32*
  %34 = load i32, i32* %33, align 4
  tail call void @_ZN2v88internal25FindStringIndicesDispatchEPNS0_7IsolateENS0_6StringES3_PNSt3__16vectorIiNS4_9allocatorIiEEEEj(%"class.v8::internal::Isolate"* %0, i64 %24, i64 %23, %"class.std::__1::vector.817"* %7, i32 -1)
  %35 = getelementptr inbounds %"class.std::__1::vector.817", %"class.std::__1::vector.817"* %7, i64 0, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = load i32*, i32** %10, align 8
  %38 = icmp eq i32* %36, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %5
  %40 = load i64, i64* %1, align 8
  br label %154

41:                                               ; preds = %5
  %42 = ptrtoint i32* %36 to i64
  %43 = ptrtoint i32* %37 to i64
  %44 = sext i32 %34 to i64
  %45 = sext i32 %30 to i64
  %46 = sub nsw i64 %44, %45
  %47 = sub i64 %43, %42
  %48 = ashr exact i64 %47, 2
  %49 = mul nsw i64 %48, %46
  %50 = sext i32 %27 to i64
  %51 = add nsw i64 %49, %50
  %52 = icmp sgt i64 %51, 536870888
  %53 = trunc i64 %51 to i32
  %54 = select i1 %52, i32 2147483647, i32 %53
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %41
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 9
  %58 = load i64, i64* %57, align 8
  br label %154

59:                                               ; preds = %41
  %60 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %61 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewRawOneByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %60, i32 %54, i8 zeroext 0) #6
  %62 = icmp eq i64* %61, null
  br i1 %62, label %63, label %66

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 32
  %65 = load i64, i64* %64, align 8
  br label %154

66:                                               ; preds = %59
  %67 = load i32*, i32** %35, align 8
  %68 = load i32*, i32** %10, align 8
  %69 = icmp eq i32* %67, %68
  br i1 %69, label %99, label %70

70:                                               ; preds = %66
  %71 = icmp sgt i32 %34, 0
  br i1 %71, label %72, label %103

72:                                               ; preds = %70, %87
  %73 = phi i32 [ %96, %87 ], [ 0, %70 ]
  %74 = phi i32 [ %95, %87 ], [ 0, %70 ]
  %75 = phi i32* [ %97, %87 ], [ %67, %70 ]
  %76 = load i32, i32* %75, align 4
  %77 = icmp sgt i32 %76, %73
  br i1 %77, label %78, label %87

78:                                               ; preds = %72
  %79 = load i64, i64* %1, align 8
  %80 = load i64, i64* %61, align 8
  %81 = add i64 %80, 11
  %82 = inttoptr i64 %81 to i8*
  %83 = sext i32 %74 to i64
  %84 = getelementptr inbounds i8, i8* %82, i64 %83
  tail call void @_ZN2v88internal6String11WriteToFlatIhEEvS1_PT_ii(i64 %79, i8* %84, i32 %73, i32 %76) #6
  %85 = sub i32 %74, %73
  %86 = add i32 %85, %76
  br label %87

87:                                               ; preds = %72, %78
  %88 = phi i32 [ %86, %78 ], [ %74, %72 ]
  %89 = load i64, i64* %3, align 8
  %90 = load i64, i64* %61, align 8
  %91 = add i64 %90, 11
  %92 = inttoptr i64 %91 to i8*
  %93 = sext i32 %88 to i64
  %94 = getelementptr inbounds i8, i8* %92, i64 %93
  tail call void @_ZN2v88internal6String11WriteToFlatIhEEvS1_PT_ii(i64 %89, i8* %94, i32 0, i32 %34) #6
  %95 = add nsw i32 %88, %34
  %96 = add nsw i32 %76, %30
  %97 = getelementptr inbounds i32, i32* %75, i64 1
  %98 = icmp eq i32* %97, %68
  br i1 %98, label %99, label %72

99:                                               ; preds = %118, %87, %66
  %100 = phi i32 [ 0, %66 ], [ %95, %87 ], [ %119, %118 ]
  %101 = phi i32 [ 0, %66 ], [ %96, %87 ], [ %120, %118 ]
  %102 = icmp slt i32 %101, %27
  br i1 %102, label %123, label %130

103:                                              ; preds = %70, %118
  %104 = phi i32 [ %120, %118 ], [ 0, %70 ]
  %105 = phi i32 [ %119, %118 ], [ 0, %70 ]
  %106 = phi i32* [ %121, %118 ], [ %67, %70 ]
  %107 = load i32, i32* %106, align 4
  %108 = icmp sgt i32 %107, %104
  br i1 %108, label %109, label %118

109:                                              ; preds = %103
  %110 = load i64, i64* %1, align 8
  %111 = load i64, i64* %61, align 8
  %112 = add i64 %111, 11
  %113 = inttoptr i64 %112 to i8*
  %114 = sext i32 %105 to i64
  %115 = getelementptr inbounds i8, i8* %113, i64 %114
  tail call void @_ZN2v88internal6String11WriteToFlatIhEEvS1_PT_ii(i64 %110, i8* %115, i32 %104, i32 %107) #6
  %116 = sub i32 %105, %104
  %117 = add i32 %116, %107
  br label %118

118:                                              ; preds = %103, %109
  %119 = phi i32 [ %117, %109 ], [ %105, %103 ]
  %120 = add nsw i32 %107, %30
  %121 = getelementptr inbounds i32, i32* %106, i64 1
  %122 = icmp eq i32* %121, %68
  br i1 %122, label %99, label %103

123:                                              ; preds = %99
  %124 = load i64, i64* %1, align 8
  %125 = load i64, i64* %61, align 8
  %126 = add i64 %125, 11
  %127 = inttoptr i64 %126 to i8*
  %128 = sext i32 %100 to i64
  %129 = getelementptr inbounds i8, i8* %127, i64 %128
  tail call void @_ZN2v88internal6String11WriteToFlatIhEEvS1_PT_ii(i64 %124, i8* %129, i32 %101, i32 %27) #6
  br label %130

130:                                              ; preds = %123, %99
  %131 = bitcast [2 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #6
  %132 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 0
  %133 = load i32*, i32** %10, align 8
  %134 = getelementptr inbounds i32, i32* %133, i64 -1
  %135 = load i32, i32* %134, align 4
  store i32 %135, i32* %132, align 4
  %136 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 1
  %137 = load i32, i32* %134, align 4
  %138 = add nsw i32 %137, %30
  store i32 %138, i32* %136, align 4
  %139 = call i64* @_ZN2v88internal6RegExp16SetLastMatchInfoEPNS0_7IsolateENS0_6HandleINS0_15RegExpMatchInfoEEENS4_INS0_6StringEEEiPi(%"class.v8::internal::Isolate"* %0, i64* %4, i64* %1, i32 0, i32* nonnull %132) #6
  %140 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 44, i32 0, i32 2, i32 0, i32 0
  %141 = bitcast i32** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = load i64, i64* %8, align 8
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 2
  %146 = icmp ugt i64 %145, 2048
  br i1 %146, label %147, label %152

147:                                              ; preds = %130
  %148 = icmp eq i64 %143, 0
  %149 = bitcast %"class.std::__1::vector.817"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %149, i8 0, i64 24, i1 false) #6
  br i1 %148, label %152, label %150

150:                                              ; preds = %147
  %151 = inttoptr i64 %143 to i8*
  call void @_ZdlPv(i8* %151) #20
  br label %152

152:                                              ; preds = %130, %147, %150
  %153 = load i64, i64* %61, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #6
  br label %154

154:                                              ; preds = %152, %63, %56, %39
  %155 = phi i64 [ %40, %39 ], [ %58, %56 ], [ %153, %152 ], [ %65, %63 ]
  ret i64 %155
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL39StringReplaceGlobalAtomRegExpWithStringINS0_16SeqTwoByteStringEEENS0_6ObjectEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS6_INS0_8JSRegExpEEES8_NS6_INS0_15RegExpMatchInfoEEE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i64*) unnamed_addr #0 {
  %6 = alloca [2 x i32], align 4
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 44
  %8 = bitcast %"class.std::__1::vector.817"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 44, i32 0, i32 1
  %11 = bitcast i32** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = load i64, i64* %2, align 8
  %13 = and i64 %12, -4294967296
  %14 = add i64 %12, 11
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %13, %17
  %19 = add i64 %18, 19
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %13, %22
  %24 = load i64, i64* %1, align 8
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = add i64 %23, 7
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = load i64, i64* %3, align 8
  %32 = add i64 %31, 7
  %33 = inttoptr i64 %32 to i32*
  %34 = load i32, i32* %33, align 4
  tail call void @_ZN2v88internal25FindStringIndicesDispatchEPNS0_7IsolateENS0_6StringES3_PNSt3__16vectorIiNS4_9allocatorIiEEEEj(%"class.v8::internal::Isolate"* %0, i64 %24, i64 %23, %"class.std::__1::vector.817"* %7, i32 -1)
  %35 = getelementptr inbounds %"class.std::__1::vector.817", %"class.std::__1::vector.817"* %7, i64 0, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = load i32*, i32** %10, align 8
  %38 = icmp eq i32* %36, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %5
  %40 = load i64, i64* %1, align 8
  br label %154

41:                                               ; preds = %5
  %42 = ptrtoint i32* %36 to i64
  %43 = ptrtoint i32* %37 to i64
  %44 = sext i32 %34 to i64
  %45 = sext i32 %30 to i64
  %46 = sub nsw i64 %44, %45
  %47 = sub i64 %43, %42
  %48 = ashr exact i64 %47, 2
  %49 = mul nsw i64 %48, %46
  %50 = sext i32 %27 to i64
  %51 = add nsw i64 %49, %50
  %52 = icmp sgt i64 %51, 536870888
  %53 = trunc i64 %51 to i32
  %54 = select i1 %52, i32 2147483647, i32 %53
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %41
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 9
  %58 = load i64, i64* %57, align 8
  br label %154

59:                                               ; preds = %41
  %60 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %61 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewRawTwoByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %60, i32 %54, i8 zeroext 0) #6
  %62 = icmp eq i64* %61, null
  br i1 %62, label %63, label %66

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 32
  %65 = load i64, i64* %64, align 8
  br label %154

66:                                               ; preds = %59
  %67 = load i32*, i32** %35, align 8
  %68 = load i32*, i32** %10, align 8
  %69 = icmp eq i32* %67, %68
  br i1 %69, label %99, label %70

70:                                               ; preds = %66
  %71 = icmp sgt i32 %34, 0
  br i1 %71, label %72, label %103

72:                                               ; preds = %70, %87
  %73 = phi i32 [ %96, %87 ], [ 0, %70 ]
  %74 = phi i32 [ %95, %87 ], [ 0, %70 ]
  %75 = phi i32* [ %97, %87 ], [ %67, %70 ]
  %76 = load i32, i32* %75, align 4
  %77 = icmp sgt i32 %76, %73
  br i1 %77, label %78, label %87

78:                                               ; preds = %72
  %79 = load i64, i64* %1, align 8
  %80 = load i64, i64* %61, align 8
  %81 = add i64 %80, 11
  %82 = inttoptr i64 %81 to i16*
  %83 = sext i32 %74 to i64
  %84 = getelementptr inbounds i16, i16* %82, i64 %83
  tail call void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_ii(i64 %79, i16* %84, i32 %73, i32 %76) #6
  %85 = sub i32 %74, %73
  %86 = add i32 %85, %76
  br label %87

87:                                               ; preds = %72, %78
  %88 = phi i32 [ %86, %78 ], [ %74, %72 ]
  %89 = load i64, i64* %3, align 8
  %90 = load i64, i64* %61, align 8
  %91 = add i64 %90, 11
  %92 = inttoptr i64 %91 to i16*
  %93 = sext i32 %88 to i64
  %94 = getelementptr inbounds i16, i16* %92, i64 %93
  tail call void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_ii(i64 %89, i16* %94, i32 0, i32 %34) #6
  %95 = add nsw i32 %88, %34
  %96 = add nsw i32 %76, %30
  %97 = getelementptr inbounds i32, i32* %75, i64 1
  %98 = icmp eq i32* %97, %68
  br i1 %98, label %99, label %72

99:                                               ; preds = %118, %87, %66
  %100 = phi i32 [ 0, %66 ], [ %95, %87 ], [ %119, %118 ]
  %101 = phi i32 [ 0, %66 ], [ %96, %87 ], [ %120, %118 ]
  %102 = icmp slt i32 %101, %27
  br i1 %102, label %123, label %130

103:                                              ; preds = %70, %118
  %104 = phi i32 [ %120, %118 ], [ 0, %70 ]
  %105 = phi i32 [ %119, %118 ], [ 0, %70 ]
  %106 = phi i32* [ %121, %118 ], [ %67, %70 ]
  %107 = load i32, i32* %106, align 4
  %108 = icmp sgt i32 %107, %104
  br i1 %108, label %109, label %118

109:                                              ; preds = %103
  %110 = load i64, i64* %1, align 8
  %111 = load i64, i64* %61, align 8
  %112 = add i64 %111, 11
  %113 = inttoptr i64 %112 to i16*
  %114 = sext i32 %105 to i64
  %115 = getelementptr inbounds i16, i16* %113, i64 %114
  tail call void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_ii(i64 %110, i16* %115, i32 %104, i32 %107) #6
  %116 = sub i32 %105, %104
  %117 = add i32 %116, %107
  br label %118

118:                                              ; preds = %103, %109
  %119 = phi i32 [ %117, %109 ], [ %105, %103 ]
  %120 = add nsw i32 %107, %30
  %121 = getelementptr inbounds i32, i32* %106, i64 1
  %122 = icmp eq i32* %121, %68
  br i1 %122, label %99, label %103

123:                                              ; preds = %99
  %124 = load i64, i64* %1, align 8
  %125 = load i64, i64* %61, align 8
  %126 = add i64 %125, 11
  %127 = inttoptr i64 %126 to i16*
  %128 = sext i32 %100 to i64
  %129 = getelementptr inbounds i16, i16* %127, i64 %128
  tail call void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_ii(i64 %124, i16* %129, i32 %101, i32 %27) #6
  br label %130

130:                                              ; preds = %123, %99
  %131 = bitcast [2 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #6
  %132 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 0
  %133 = load i32*, i32** %10, align 8
  %134 = getelementptr inbounds i32, i32* %133, i64 -1
  %135 = load i32, i32* %134, align 4
  store i32 %135, i32* %132, align 4
  %136 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 1
  %137 = load i32, i32* %134, align 4
  %138 = add nsw i32 %137, %30
  store i32 %138, i32* %136, align 4
  %139 = call i64* @_ZN2v88internal6RegExp16SetLastMatchInfoEPNS0_7IsolateENS0_6HandleINS0_15RegExpMatchInfoEEENS4_INS0_6StringEEEiPi(%"class.v8::internal::Isolate"* %0, i64* %4, i64* %1, i32 0, i32* nonnull %132) #6
  %140 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 44, i32 0, i32 2, i32 0, i32 0
  %141 = bitcast i32** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = load i64, i64* %8, align 8
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 2
  %146 = icmp ugt i64 %145, 2048
  br i1 %146, label %147, label %152

147:                                              ; preds = %130
  %148 = icmp eq i64 %143, 0
  %149 = bitcast %"class.std::__1::vector.817"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %149, i8 0, i64 24, i1 false) #6
  br i1 %148, label %152, label %150

150:                                              ; preds = %147
  %151 = inttoptr i64 %143 to i8*
  call void @_ZdlPv(i8* %151) #20
  br label %152

152:                                              ; preds = %130, %147, %150
  %153 = load i64, i64* %61, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #6
  br label %154

154:                                              ; preds = %152, %63, %56, %39
  %155 = phi i64 [ %40, %39 ], [ %58, %56 ], [ %153, %152 ], [ %65, %63 ]
  ret i64 %155
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewRawOneByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal6String11WriteToFlatIhEEvS1_PT_ii(i64, i8*, i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal4Heap13IsLargeObjectENS0_10HeapObjectE(i64) local_unnamed_addr #2

declare i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"*, i64, i32, i32) local_unnamed_addr #2

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewRawTwoByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_ii(i64, i16*, i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal6RegExp19EnsureFullyCompiledEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal24ReplacementStringBuilderC1EPNS0_4HeapENS0_6HandleINS0_6StringEEEi(%"class.v8::internal::ReplacementStringBuilder"*, %"class.v8::internal::Heap"*, i64*, i32) unnamed_addr #2

declare i64* @_ZN2v88internal24ReplacementStringBuilder8ToStringEv(%"class.v8::internal::ReplacementStringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #12

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::Handle.1169"* @_ZN2v84base11SmallVectorINS_8internal6HandleINS2_6ObjectEEELm8EE4GrowEv(%"class.v8::base::SmallVector.1203"*) local_unnamed_addr #5 comdat align 2 {
  %2 = tail call %"class.v8::internal::Handle.1169"* @_ZN2v84base11SmallVectorINS_8internal6HandleINS2_6ObjectEEELm8EE4GrowEm(%"class.v8::base::SmallVector.1203"* %0, i64 0)
  ret %"class.v8::internal::Handle.1169"* %2
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::Handle.1169"* @_ZN2v84base11SmallVectorINS_8internal6HandleINS2_6ObjectEEELm8EE4GrowEm(%"class.v8::base::SmallVector.1203"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::base::SmallVector.1203", %"class.v8::base::SmallVector.1203"* %0, i64 0, i32 1
  %4 = bitcast %"class.v8::internal::Handle.1169"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.v8::base::SmallVector.1203"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = getelementptr inbounds %"class.v8::base::SmallVector.1203", %"class.v8::base::SmallVector.1203"* %0, i64 0, i32 2
  %11 = bitcast %"class.v8::internal::Handle.1169"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %7
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %14, %1
  %16 = select i1 %15, i64 %14, i64 %1
  %17 = tail call i64 @_ZN2v84base4bits21RoundUpToPowerOfTwo64Em(i64 %16) #6
  %18 = shl i64 %17, 3
  %19 = tail call noalias i8* @malloc(i64 %18) #6
  %20 = bitcast i8* %19 to %"class.v8::internal::Handle.1169"*
  %21 = icmp eq i8* %19, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.38, i64 0, i64 0)) #18
  unreachable

23:                                               ; preds = %2
  %24 = bitcast %"class.v8::base::SmallVector.1203"* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %19, i8* align 1 %25, i64 %8, i1 false) #6
  %26 = getelementptr inbounds %"class.v8::base::SmallVector.1203", %"class.v8::base::SmallVector.1203"* %0, i64 0, i32 3, i32 0, i64 0
  %27 = icmp eq i8* %25, %26
  br i1 %27, label %29, label %28

28:                                               ; preds = %23
  tail call void @free(i8* %25) #6
  br label %29

29:                                               ; preds = %23, %28
  store i8* %19, i8** %24, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %20, i64 %9
  store %"class.v8::internal::Handle.1169"* %30, %"class.v8::internal::Handle.1169"** %3, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %20, i64 %17
  store %"class.v8::internal::Handle.1169"* %31, %"class.v8::internal::Handle.1169"** %10, align 8
  ret %"class.v8::internal::Handle.1169"* %30
}

declare i64 @_ZN2v84base4bits21RoundUpToPowerOfTwo64Em(i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #16

declare i64* @_ZN2v88internal6Object16ConvertToIntegerEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal6Object12ToObjectImplEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"*, i64*, i8*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64* @_ZN2v88internal12_GLOBAL__N_117VectorBackedMatch8GetMatchEv(%"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* nocapture readonly) unnamed_addr #15 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: nounwind ssp uwtable
define internal i64* @_ZN2v88internal12_GLOBAL__N_117VectorBackedMatch9GetPrefixEv(%"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = load i64, i64* %3, align 8
  %7 = add i64 %6, 7
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, %5
  br i1 %10, label %16, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %0, i64 0, i32 1
  %13 = bitcast %"class.v8::internal::Isolate"** %12 to %"class.v8::internal::Factory"**
  %14 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %13, align 8
  %15 = tail call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %14, i64* %3, i32 0, i32 %5) #6
  br label %16

16:                                               ; preds = %1, %11
  %17 = phi i64* [ %15, %11 ], [ %3, %1 ]
  ret i64* %17
}

; Function Attrs: nounwind ssp uwtable
define internal i64* @_ZN2v88internal12_GLOBAL__N_117VectorBackedMatch9GetSuffixEv(%"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 7
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = add nsw i32 %9, %3
  %11 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %23, label %14

14:                                               ; preds = %1
  %15 = load i64, i64* %12, align 8
  %16 = add i64 %15, 7
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %0, i64 0, i32 1
  %20 = bitcast %"class.v8::internal::Isolate"** %19 to %"class.v8::internal::Factory"**
  %21 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %20, align 8
  %22 = tail call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %21, i64* %12, i32 %10, i32 %18) #6
  br label %23

23:                                               ; preds = %1, %14
  %24 = phi i64* [ %22, %14 ], [ %12, %1 ]
  ret i64* %24
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZN2v88internal12_GLOBAL__N_117VectorBackedMatch12CaptureCountEv(%"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* nocapture readonly) unnamed_addr #15 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %0, i64 0, i32 5, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  ret i32 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN2v88internal12_GLOBAL__N_117VectorBackedMatch16HasNamedCapturesEv(%"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* nocapture readonly) unnamed_addr #15 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %0, i64 0, i32 6
  %3 = load i8, i8* %2, align 8, !range !5
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define internal i64* @_ZN2v88internal12_GLOBAL__N_117VectorBackedMatch10GetCaptureEiPb(%"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* nocapture readonly, i32, i8* nocapture) unnamed_addr #0 align 2 {
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %0, i64 0, i32 5, i32 0
  %6 = load %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Handle.1169", %"class.v8::internal::Handle.1169"* %6, i64 %4, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %0, i64 0, i32 1
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 7, i32 0, i64 4
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %9 to i32
  %15 = trunc i64 %13 to i32
  %16 = icmp eq i32 %14, %15
  br i1 %16, label %17, label %22

17:                                               ; preds = %3
  store i8 0, i8* %2, align 1
  %18 = bitcast %"class.v8::internal::Isolate"** %10 to %"class.v8::internal::Factory"**
  %19 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %19, i64 200
  %21 = bitcast %"class.v8::internal::Factory"* %20 to i64*
  br label %40

22:                                               ; preds = %3
  store i8 1, i8* %2, align 1
  %23 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %24 = load i64, i64* %8, align 8
  %25 = and i64 %24, 1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %38, label %27

27:                                               ; preds = %22
  %28 = and i64 %24, -4294967296
  %29 = add i64 %24, -1
  %30 = inttoptr i64 %29 to i32*
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = zext i32 %31 to i64
  %33 = or i64 %28, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = icmp ult i16 %36, 64
  br i1 %37, label %40, label %38

38:                                               ; preds = %27, %22
  %39 = tail call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %23, i64* %8) #6
  br label %40

40:                                               ; preds = %38, %27, %17
  %41 = phi i64* [ %21, %17 ], [ %39, %38 ], [ %8, %27 ]
  ret i64* %41
}

; Function Attrs: nounwind ssp uwtable
define internal i64* @_ZN2v88internal12_GLOBAL__N_117VectorBackedMatch15GetNamedCaptureENS0_6HandleINS0_6StringEEEPNS4_5Match12CaptureStateE(%"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* nocapture readonly, i64*, i32* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::LookupIterator", align 8
  %5 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %0, i64 0, i32 1
  %6 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::VectorBackedMatch", %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %0, i64 0, i32 7, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = bitcast %"class.v8::internal::LookupIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %9) #6
  %10 = ptrtoint i64* %8 to i64
  %11 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 0
  %12 = icmp eq i64* %1, null
  br i1 %12, label %13, label %17

13:                                               ; preds = %3
  %14 = load i64, i64* null, align 536870912
  %15 = add i64 %14, -1
  %16 = inttoptr i64 %15 to i32*
  br label %38

17:                                               ; preds = %3
  %18 = load i64, i64* %1, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 0, i32 4
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %18, -1
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i64 %20, 4294967295
  %25 = icmp eq i64 %24, 0
  tail call void @llvm.assume(i1 %25) #6
  %26 = zext i32 %23 to i64
  %27 = or i64 %20, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = icmp eq i16 %30, 64
  br i1 %31, label %32, label %38

32:                                               ; preds = %17
  %33 = add i64 %18, 7
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %32, %17, %13
  %39 = phi i32* [ %16, %13 ], [ %22, %32 ], [ %22, %17 ]
  %40 = phi i64 [ %14, %13 ], [ %18, %32 ], [ %18, %17 ]
  br label %41

41:                                               ; preds = %38, %32
  %42 = phi i32* [ %39, %38 ], [ %22, %32 ]
  %43 = phi i64 [ %40, %38 ], [ %18, %32 ]
  %44 = phi i32 [ 3, %38 ], [ 0, %32 ]
  store i32 %44, i32* %11, align 8
  %45 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 1
  store i32 4, i32* %45, align 4
  %46 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 2
  store i8 0, i8* %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 3
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 4, i32 0
  store i32 0, i32* %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %6, %"class.v8::internal::Isolate"** %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 6, i32 0, i32 0
  store i64* %1, i64** %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 8, i32 0, i32 0
  store i64* %8, i64** %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 10
  %55 = bitcast %"class.v8::internal::Handle.1169"* %54 to i64*
  store i64 %10, i64* %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 11
  %57 = bitcast i64* %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 -1, i64 16, i1 false) #6
  %58 = and i64 %43, -4294967296
  %59 = load atomic i32, i32* %42 monotonic, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %58, %60
  %62 = add i64 %61, 7
  %63 = inttoptr i64 %62 to i16*
  %64 = load atomic i16, i16* %63 monotonic, align 2
  %65 = and i16 %64, -32
  %66 = icmp eq i16 %65, 32
  br i1 %66, label %67, label %71

67:                                               ; preds = %41
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 5, i32 0, i32 0, i32 0
  %69 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %68, align 8
  %70 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %69, %"class.v8::internal::Isolate"* %6, i64* %1) #6
  br label %71

71:                                               ; preds = %67, %41
  %72 = phi i64* [ %70, %67 ], [ %1, %41 ]
  store i64* %72, i64** %50, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %4) #6
  %73 = load i32, i32* %45, align 4
  %74 = icmp eq i32 %73, 4
  br i1 %74, label %75, label %80

75:                                               ; preds = %71
  %76 = bitcast %"class.v8::internal::Isolate"** %49 to %"class.v8::internal::Factory"**
  %77 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %77, i64 160
  %79 = bitcast %"class.v8::internal::Factory"* %78 to i64*
  br label %82

80:                                               ; preds = %71
  %81 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %4, i1 zeroext false) #6
  br label %82

82:                                               ; preds = %75, %80
  %83 = phi i64* [ %81, %80 ], [ %79, %75 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %9) #6
  %84 = icmp eq i64* %83, null
  br i1 %84, label %119, label %85

85:                                               ; preds = %82
  %86 = load i64, i64* %83, align 8
  %87 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %88 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %87, i64 0, i32 0, i32 7, i32 0, i64 4
  %89 = load i64, i64* %88, align 8
  %90 = trunc i64 %86 to i32
  %91 = trunc i64 %89 to i32
  %92 = icmp eq i32 %90, %91
  br i1 %92, label %93, label %98

93:                                               ; preds = %85
  store i32 0, i32* %2, align 4
  %94 = bitcast %"class.v8::internal::Isolate"** %5 to %"class.v8::internal::Factory"**
  %95 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %95, i64 200
  %97 = ptrtoint %"class.v8::internal::Factory"* %96 to i64
  br label %119

98:                                               ; preds = %85
  store i32 1, i32* %2, align 4
  %99 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %100 = load i64, i64* %83, align 8
  %101 = and i64 %100, 1
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %114, label %103

103:                                              ; preds = %98
  %104 = and i64 %100, -4294967296
  %105 = add i64 %100, -1
  %106 = inttoptr i64 %105 to i32*
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = zext i32 %107 to i64
  %109 = or i64 %104, %108
  %110 = add i64 %109, 7
  %111 = inttoptr i64 %110 to i16*
  %112 = load atomic i16, i16* %111 monotonic, align 2
  %113 = icmp ult i16 %112, 64
  br i1 %113, label %116, label %114

114:                                              ; preds = %103, %98
  %115 = call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %99, i64* nonnull %83) #6
  br label %116

116:                                              ; preds = %103, %114
  %117 = phi i64* [ %115, %114 ], [ %83, %103 ]
  %118 = ptrtoint i64* %117 to i64
  br label %119

119:                                              ; preds = %82, %116, %93
  %120 = phi i64 [ %97, %93 ], [ %118, %116 ], [ 0, %82 ]
  %121 = inttoptr i64 %120 to i64*
  ret i64* %121
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2v88internal12_GLOBAL__N_117VectorBackedMatchD0Ev(%"class.v8::internal::(anonymous namespace)::VectorBackedMatch"*) unnamed_addr #7 align 2 {
  %2 = bitcast %"class.v8::internal::(anonymous namespace)::VectorBackedMatch"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #20
  ret void
}

declare i64* @_ZN2v88internal8JSRegExp10InitializeENS0_6HandleIS1_EENS2_INS0_6StringEEES5_(i64*, i64*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal8JSRegExp15StringFromFlagsEPNS0_7IsolateENS_4base5FlagsINS1_4FlagEiEE(%"class.v8::internal::Isolate"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden %"struct.v8::internal::CompiledReplacement::ReplacementPart"* @_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEv(%"class.v8::base::SmallVector"*) local_unnamed_addr #5 comdat align 2 {
  %2 = tail call %"struct.v8::internal::CompiledReplacement::ReplacementPart"* @_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEm(%"class.v8::base::SmallVector"* %0, i64 0)
  ret %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %2
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden %"struct.v8::internal::CompiledReplacement::ReplacementPart"* @_ZN2v84base11SmallVectorINS_8internal19CompiledReplacement15ReplacementPartELm8EE4GrowEm(%"class.v8::base::SmallVector"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %0, i64 0, i32 1
  %4 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.v8::base::SmallVector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %0, i64 0, i32 2
  %11 = bitcast %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %7
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %14, %1
  %16 = select i1 %15, i64 %14, i64 %1
  %17 = tail call i64 @_ZN2v84base4bits21RoundUpToPowerOfTwo64Em(i64 %16) #6
  %18 = shl i64 %17, 3
  %19 = tail call noalias i8* @malloc(i64 %18) #6
  %20 = bitcast i8* %19 to %"struct.v8::internal::CompiledReplacement::ReplacementPart"*
  %21 = icmp eq i8* %19, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.38, i64 0, i64 0)) #18
  unreachable

23:                                               ; preds = %2
  %24 = bitcast %"class.v8::base::SmallVector"* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %19, i8* align 1 %25, i64 %8, i1 false) #6
  %26 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %0, i64 0, i32 3, i32 0, i64 0
  %27 = icmp eq i8* %25, %26
  br i1 %27, label %29, label %28

28:                                               ; preds = %23
  tail call void @free(i8* %25) #6
  br label %29

29:                                               ; preds = %23, %28
  store i8* %19, i8** %24, align 8
  %30 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %20, i64 %9
  store %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %30, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %3, align 8
  %31 = getelementptr inbounds %"struct.v8::internal::CompiledReplacement::ReplacementPart", %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %20, i64 %17
  store %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %31, %"struct.v8::internal::CompiledReplacement::ReplacementPart"** %10, align 8
  ret %"struct.v8::internal::CompiledReplacement::ReplacementPart"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbN2v88internal6StringEEE11__call_implINS0_20__default_alloc_funcIZNS3_19CompiledReplacement23ParseReplacementPatternIKhEEbNS3_6VectorIT_EENS3_10FixedArrayEiiEUlS4_E_S5_EEEEbPKNS0_16__policy_storageEOS4_(%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::String"* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %5, i64* %7, align 8
  %8 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %11 = bitcast [8 x i8]* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE0EhEEbNS0_6VectorIKT0_EE(%"class.v8::internal::String"* nonnull %3, i8* %9, i64 %12) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  ret i1 %13
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE0EhEEbNS0_6VectorIKT0_EE(%"class.v8::internal::String"*, i8*, i64) local_unnamed_addr #7 comdat align 2 {
  %4 = alloca %"class.v8::internal::SharedStringAccessGuardIfNeeded", align 8
  %5 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #6, !alias.scope !26
  %9 = add i64 %6, 7
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = icmp eq i64 %12, %2
  br i1 %13, label %14, label %162

14:                                               ; preds = %3, %148
  %15 = phi i64 [ %154, %148 ], [ %6, %3 ]
  %16 = phi i32 [ %149, %148 ], [ 0, %3 ]
  %17 = add i64 %15, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %7, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = and i16 %24, 15
  %26 = zext i16 %25 to i32
  switch i32 %26, label %147 [
    i32 8, label %27
    i32 0, label %34
    i32 10, label %53
    i32 2, label %91
    i32 11, label %141
    i32 3, label %141
    i32 9, label %155
    i32 1, label %155
    i32 13, label %148
    i32 5, label %148
  ]

27:                                               ; preds = %14
  %28 = add i64 %15, 11
  %29 = inttoptr i64 %28 to i8*
  %30 = sext i32 %16 to i64
  %31 = getelementptr inbounds i8, i8* %29, i64 %30
  %32 = tail call i32 @bcmp(i8* %31, i8* %1, i64 %2) #6
  %33 = icmp eq i32 %32, 0
  br label %162

34:                                               ; preds = %14
  %35 = add i64 %15, 11
  %36 = inttoptr i64 %35 to i16*
  %37 = sext i32 %16 to i64
  %38 = getelementptr inbounds i16, i16* %36, i64 %37
  %39 = getelementptr inbounds i16, i16* %38, i64 %2
  %40 = icmp sgt i64 %2, 0
  br i1 %40, label %41, label %162

41:                                               ; preds = %34, %49
  %42 = phi i16* [ %50, %49 ], [ %38, %34 ]
  %43 = phi i8* [ %51, %49 ], [ %1, %34 ]
  %44 = load i16, i16* %42, align 2
  %45 = zext i16 %44 to i32
  %46 = load i8, i8* %43, align 1
  %47 = zext i8 %46 to i32
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %49, label %162

49:                                               ; preds = %41
  %50 = getelementptr inbounds i16, i16* %42, i64 1
  %51 = getelementptr inbounds i8, i8* %43, i64 1
  %52 = icmp ult i16* %50, %39
  br i1 %52, label %41, label %162

53:                                               ; preds = %14
  %54 = inttoptr i64 %17 to i32*
  %55 = and i64 %15, -4294967296
  %56 = load atomic i32, i32* %54 monotonic, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %55, %57
  %59 = add i64 %58, 7
  %60 = inttoptr i64 %59 to i16*
  %61 = load atomic i16, i16* %60 monotonic, align 2
  %62 = and i16 %61, 16
  %63 = icmp eq i16 %62, 0
  %64 = add i64 %15, 11
  %65 = inttoptr i64 %64 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %63, label %78, label %66

66:                                               ; preds = %53
  %67 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %65, align 1
  %68 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %67, i64 0, i32 0
  %69 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %67 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %70 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %69, align 8
  %71 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %70, i64 2
  %72 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %71, align 8
  %73 = tail call zeroext i1 %72(%"class.v8::String::ExternalStringResourceBase"* %68) #6
  br i1 %73, label %74, label %78

74:                                               ; preds = %66
  %75 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %65, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %75) #6
  %76 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %75, i64 0, i32 1
  %77 = load i8*, i8** %76, align 8
  br label %85

78:                                               ; preds = %66, %53
  %79 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %65, align 1
  %80 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %79 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %81 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %80, align 8
  %82 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %81, i64 6
  %83 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %82, align 8
  %84 = tail call i8* %83(%"class.v8::String::ExternalOneByteStringResource"* %79) #6
  br label %85

85:                                               ; preds = %78, %74
  %86 = phi i8* [ %77, %74 ], [ %84, %78 ]
  %87 = sext i32 %16 to i64
  %88 = getelementptr inbounds i8, i8* %86, i64 %87
  %89 = tail call i32 @bcmp(i8* %88, i8* %1, i64 %2) #6
  %90 = icmp eq i32 %89, 0
  br label %162

91:                                               ; preds = %14
  %92 = inttoptr i64 %17 to i32*
  %93 = and i64 %15, -4294967296
  %94 = load atomic i32, i32* %92 monotonic, align 4
  %95 = zext i32 %94 to i64
  %96 = or i64 %93, %95
  %97 = add i64 %96, 7
  %98 = inttoptr i64 %97 to i16*
  %99 = load atomic i16, i16* %98 monotonic, align 2
  %100 = and i16 %99, 16
  %101 = icmp eq i16 %100, 0
  %102 = add i64 %15, 11
  %103 = inttoptr i64 %102 to %"class.v8::String::ExternalStringResource"**
  br i1 %101, label %116, label %104

104:                                              ; preds = %91
  %105 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %103, align 1
  %106 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %105, i64 0, i32 0
  %107 = bitcast %"class.v8::String::ExternalStringResource"* %105 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %108 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %107, align 8
  %109 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %108, i64 2
  %110 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %109, align 8
  %111 = tail call zeroext i1 %110(%"class.v8::String::ExternalStringResourceBase"* %106) #6
  br i1 %111, label %112, label %116

112:                                              ; preds = %104
  %113 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %103, align 1
  tail call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %113) #6
  %114 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %113, i64 0, i32 1
  %115 = load i16*, i16** %114, align 8
  br label %123

116:                                              ; preds = %104, %91
  %117 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %103, align 1
  %118 = bitcast %"class.v8::String::ExternalStringResource"* %117 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %119 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %118, align 8
  %120 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %119, i64 6
  %121 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %120, align 8
  %122 = tail call i16* %121(%"class.v8::String::ExternalStringResource"* %117) #6
  br label %123

123:                                              ; preds = %116, %112
  %124 = phi i16* [ %115, %112 ], [ %122, %116 ]
  %125 = sext i32 %16 to i64
  %126 = getelementptr inbounds i16, i16* %124, i64 %125
  %127 = getelementptr inbounds i16, i16* %126, i64 %2
  %128 = icmp sgt i64 %2, 0
  br i1 %128, label %129, label %162

129:                                              ; preds = %123, %137
  %130 = phi i16* [ %138, %137 ], [ %126, %123 ]
  %131 = phi i8* [ %139, %137 ], [ %1, %123 ]
  %132 = load i16, i16* %130, align 2
  %133 = zext i16 %132 to i32
  %134 = load i8, i8* %131, align 1
  %135 = zext i8 %134 to i32
  %136 = icmp eq i32 %133, %135
  br i1 %136, label %137, label %162

137:                                              ; preds = %129
  %138 = getelementptr inbounds i16, i16* %130, i64 1
  %139 = getelementptr inbounds i8, i8* %131, i64 1
  %140 = icmp ult i16* %138, %127
  br i1 %140, label %129, label %162

141:                                              ; preds = %14, %14
  %142 = add i64 %15, 15
  %143 = inttoptr i64 %142 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = ashr i32 %144, 1
  %146 = add nsw i32 %145, %16
  br label %148

147:                                              ; preds = %14
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #18
  unreachable

148:                                              ; preds = %141, %14, %14
  %149 = phi i32 [ %146, %141 ], [ %16, %14 ], [ %16, %14 ]
  %150 = add i64 %15, 11
  %151 = inttoptr i64 %150 to i32*
  %152 = load i32, i32* %151, align 4
  %153 = zext i32 %152 to i64
  %154 = or i64 %7, %153
  br label %14

155:                                              ; preds = %14, %14
  %156 = call zeroext i1 @_ZN2v88internal6String23IsConsStringEqualToImplIhEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE(i64 %15, i32 %16, i8* %1, i64 %2, i64 %7, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* nonnull dereferenceable(16) %4) #6
  %157 = load i8, i8* %8, align 8, !range !5
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %162, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %161 = load %"class.v8::base::SharedMutex"*, %"class.v8::base::SharedMutex"** %160, align 8
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %161) #6
  br label %162

162:                                              ; preds = %129, %137, %41, %49, %85, %27, %34, %123, %3, %155, %159
  %163 = phi i1 [ %156, %155 ], [ %156, %159 ], [ %90, %85 ], [ %33, %27 ], [ true, %34 ], [ true, %123 ], [ false, %3 ], [ false, %41 ], [ true, %49 ], [ false, %129 ], [ true, %137 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #6
  ret i1 %163
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal6String23IsConsStringEqualToImplIhEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE(i64, i32, i8*, i64, i64, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16)) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca i32, align 4
  %8 = alloca %"class.v8::internal::ConsStringIterator", align 8
  store i32 %1, i32* %7, align 4
  %9 = bitcast %"class.v8::internal::ConsStringIterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %9) #6
  %10 = trunc i64 %0 to i32
  %11 = icmp eq i32 %10, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 268, i1 false) #6
  br i1 %11, label %12, label %13

12:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %189

13:                                               ; preds = %6
  call void @_ZN2v88internal18ConsStringIterator10InitializeENS0_10ConsStringEi(%"class.v8::internal::ConsStringIterator"* nonnull %8, i64 %0, i32 %1) #6
  %14 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %8, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  store i32 0, i32* %7, align 4
  %17 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %8, i64 0, i32 2
  br i1 %16, label %189, label %18

18:                                               ; preds = %13
  %19 = call i64 @_ZN2v88internal18ConsStringIterator8ContinueEPi(%"class.v8::internal::ConsStringIterator"* nonnull %8, i32* nonnull %7) #6
  %20 = trunc i64 %19 to i32
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %189, label %22

22:                                               ; preds = %18
  %23 = and i64 %4, 4294967295
  %24 = icmp eq i64 %23, 0
  call void @llvm.assume(i1 %24) #6
  br label %25

25:                                               ; preds = %22, %185
  %26 = phi i64 [ %3, %22 ], [ %180, %185 ]
  %27 = phi i64 [ %19, %22 ], [ %186, %185 ]
  %28 = phi i8* [ %2, %22 ], [ %179, %185 ]
  %29 = add i64 %27, 7
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = sext i32 %31 to i64
  %33 = icmp ult i64 %26, %32
  %34 = select i1 %33, i64 %26, i64 %32
  br label %35

35:                                               ; preds = %169, %25
  %36 = phi i64 [ %27, %25 ], [ %175, %169 ]
  %37 = phi i32 [ 0, %25 ], [ %170, %169 ]
  %38 = add i64 %36, -1
  %39 = inttoptr i64 %38 to i32*
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = zext i32 %40 to i64
  %42 = or i64 %41, %4
  %43 = add i64 %42, 7
  %44 = inttoptr i64 %43 to i16*
  %45 = load atomic i16, i16* %44 monotonic, align 2
  %46 = and i16 %45, 15
  %47 = zext i16 %46 to i32
  switch i32 %47, label %168 [
    i32 8, label %48
    i32 0, label %55
    i32 10, label %74
    i32 2, label %112
    i32 11, label %162
    i32 3, label %162
    i32 9, label %176
    i32 1, label %176
    i32 13, label %169
    i32 5, label %169
  ]

48:                                               ; preds = %35
  %49 = add i64 %36, 11
  %50 = inttoptr i64 %49 to i8*
  %51 = sext i32 %37 to i64
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = call i32 @bcmp(i8* %52, i8* %28, i64 %34) #6
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %178, label %189

55:                                               ; preds = %35
  %56 = add i64 %36, 11
  %57 = inttoptr i64 %56 to i16*
  %58 = sext i32 %37 to i64
  %59 = getelementptr inbounds i16, i16* %57, i64 %58
  %60 = getelementptr inbounds i16, i16* %59, i64 %34
  %61 = icmp sgt i64 %34, 0
  br i1 %61, label %62, label %178

62:                                               ; preds = %55, %70
  %63 = phi i16* [ %71, %70 ], [ %59, %55 ]
  %64 = phi i8* [ %72, %70 ], [ %28, %55 ]
  %65 = load i16, i16* %63, align 2
  %66 = zext i16 %65 to i32
  %67 = load i8, i8* %64, align 1
  %68 = zext i8 %67 to i32
  %69 = icmp eq i32 %66, %68
  br i1 %69, label %70, label %189

70:                                               ; preds = %62
  %71 = getelementptr inbounds i16, i16* %63, i64 1
  %72 = getelementptr inbounds i8, i8* %64, i64 1
  %73 = icmp ult i16* %71, %60
  br i1 %73, label %62, label %178

74:                                               ; preds = %35
  %75 = inttoptr i64 %38 to i32*
  %76 = and i64 %36, -4294967296
  %77 = load atomic i32, i32* %75 monotonic, align 4
  %78 = zext i32 %77 to i64
  %79 = or i64 %76, %78
  %80 = add i64 %79, 7
  %81 = inttoptr i64 %80 to i16*
  %82 = load atomic i16, i16* %81 monotonic, align 2
  %83 = and i16 %82, 16
  %84 = icmp eq i16 %83, 0
  %85 = add i64 %36, 11
  %86 = inttoptr i64 %85 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %84, label %99, label %87

87:                                               ; preds = %74
  %88 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %86, align 1
  %89 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %88, i64 0, i32 0
  %90 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %88 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %91 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %90, align 8
  %92 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %91, i64 2
  %93 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %92, align 8
  %94 = call zeroext i1 %93(%"class.v8::String::ExternalStringResourceBase"* %89) #6
  br i1 %94, label %95, label %99

95:                                               ; preds = %87
  %96 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %86, align 1
  call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %96) #6
  %97 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %96, i64 0, i32 1
  %98 = load i8*, i8** %97, align 8
  br label %106

99:                                               ; preds = %74, %87
  %100 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %86, align 1
  %101 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %100 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %102 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %101, align 8
  %103 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %102, i64 6
  %104 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %103, align 8
  %105 = call i8* %104(%"class.v8::String::ExternalOneByteStringResource"* %100) #6
  br label %106

106:                                              ; preds = %99, %95
  %107 = phi i8* [ %98, %95 ], [ %105, %99 ]
  %108 = sext i32 %37 to i64
  %109 = getelementptr inbounds i8, i8* %107, i64 %108
  %110 = call i32 @bcmp(i8* %109, i8* %28, i64 %34) #6
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %178, label %189

112:                                              ; preds = %35
  %113 = inttoptr i64 %38 to i32*
  %114 = and i64 %36, -4294967296
  %115 = load atomic i32, i32* %113 monotonic, align 4
  %116 = zext i32 %115 to i64
  %117 = or i64 %114, %116
  %118 = add i64 %117, 7
  %119 = inttoptr i64 %118 to i16*
  %120 = load atomic i16, i16* %119 monotonic, align 2
  %121 = and i16 %120, 16
  %122 = icmp eq i16 %121, 0
  %123 = add i64 %36, 11
  %124 = inttoptr i64 %123 to %"class.v8::String::ExternalStringResource"**
  br i1 %122, label %137, label %125

125:                                              ; preds = %112
  %126 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %124, align 1
  %127 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %126, i64 0, i32 0
  %128 = bitcast %"class.v8::String::ExternalStringResource"* %126 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %129 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %128, align 8
  %130 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %129, i64 2
  %131 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %130, align 8
  %132 = call zeroext i1 %131(%"class.v8::String::ExternalStringResourceBase"* %127) #6
  br i1 %132, label %133, label %137

133:                                              ; preds = %125
  %134 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %124, align 1
  call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %134) #6
  %135 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %134, i64 0, i32 1
  %136 = load i16*, i16** %135, align 8
  br label %144

137:                                              ; preds = %112, %125
  %138 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %124, align 1
  %139 = bitcast %"class.v8::String::ExternalStringResource"* %138 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %140 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %139, align 8
  %141 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %140, i64 6
  %142 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %141, align 8
  %143 = call i16* %142(%"class.v8::String::ExternalStringResource"* %138) #6
  br label %144

144:                                              ; preds = %137, %133
  %145 = phi i16* [ %136, %133 ], [ %143, %137 ]
  %146 = sext i32 %37 to i64
  %147 = getelementptr inbounds i16, i16* %145, i64 %146
  %148 = getelementptr inbounds i16, i16* %147, i64 %34
  %149 = icmp sgt i64 %34, 0
  br i1 %149, label %150, label %178

150:                                              ; preds = %144, %158
  %151 = phi i16* [ %159, %158 ], [ %147, %144 ]
  %152 = phi i8* [ %160, %158 ], [ %28, %144 ]
  %153 = load i16, i16* %151, align 2
  %154 = zext i16 %153 to i32
  %155 = load i8, i8* %152, align 1
  %156 = zext i8 %155 to i32
  %157 = icmp eq i32 %154, %156
  br i1 %157, label %158, label %189

158:                                              ; preds = %150
  %159 = getelementptr inbounds i16, i16* %151, i64 1
  %160 = getelementptr inbounds i8, i8* %152, i64 1
  %161 = icmp ult i16* %159, %148
  br i1 %161, label %150, label %178

162:                                              ; preds = %35, %35
  %163 = add i64 %36, 15
  %164 = inttoptr i64 %163 to i32*
  %165 = load i32, i32* %164, align 4
  %166 = ashr i32 %165, 1
  %167 = add nsw i32 %166, %37
  br label %169

168:                                              ; preds = %35
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #18
  unreachable

169:                                              ; preds = %35, %35, %162
  %170 = phi i32 [ %167, %162 ], [ %37, %35 ], [ %37, %35 ]
  %171 = add i64 %36, 11
  %172 = inttoptr i64 %171 to i32*
  %173 = load i32, i32* %172, align 4
  %174 = zext i32 %173 to i64
  %175 = or i64 %174, %4
  br label %35

176:                                              ; preds = %35, %35
  %177 = call zeroext i1 @_ZN2v88internal6String23IsConsStringEqualToImplIhEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE(i64 %36, i32 %37, i8* %28, i64 %34, i64 %4, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %5) #6
  br i1 %177, label %178, label %189

178:                                              ; preds = %158, %70, %55, %144, %106, %48, %176
  %179 = getelementptr inbounds i8, i8* %28, i64 %34
  %180 = sub i64 %26, %34
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %189, label %182

182:                                              ; preds = %178
  store i32 0, i32* %7, align 4
  %183 = load i32, i32* %17, align 8
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %189, label %185

185:                                              ; preds = %182
  %186 = call i64 @_ZN2v88internal18ConsStringIterator8ContinueEPi(%"class.v8::internal::ConsStringIterator"* nonnull %8, i32* nonnull %7) #6
  %187 = trunc i64 %186 to i32
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %25

189:                                              ; preds = %182, %178, %185, %106, %48, %176, %150, %62, %12, %13, %18
  %190 = phi i1 [ true, %18 ], [ true, %13 ], [ true, %12 ], [ false, %62 ], [ false, %150 ], [ true, %182 ], [ true, %178 ], [ true, %185 ], [ false, %106 ], [ false, %48 ], [ false, %176 ]
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %9) #6
  ret i1 %190
}

declare void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"*) local_unnamed_addr #2

declare void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"*) local_unnamed_addr #2

declare void @_ZN2v88internal18ConsStringIterator10InitializeENS0_10ConsStringEi(%"class.v8::internal::ConsStringIterator"*, i64, i32) local_unnamed_addr #2

declare i64 @_ZN2v88internal18ConsStringIterator8ContinueEPi(%"class.v8::internal::ConsStringIterator"*, i32*) local_unnamed_addr #2

declare void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbN2v88internal6StringEEE11__call_implINS0_20__default_alloc_funcIZNS3_19CompiledReplacement23ParseReplacementPatternIKtEEbNS3_6VectorIT_EENS3_10FixedArrayEiiEUlS4_E_S5_EEEEbPKNS0_16__policy_storageEOS4_(%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::String"* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %5, i64* %7, align 8
  %8 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i16**
  %9 = load i16*, i16** %8, align 8
  %10 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %11 = bitcast [8 x i8]* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE0EtEEbNS0_6VectorIKT0_EE(%"class.v8::internal::String"* nonnull %3, i16* %9, i64 %12) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  ret i1 %13
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE0EtEEbNS0_6VectorIKT0_EE(%"class.v8::internal::String"*, i16*, i64) local_unnamed_addr #7 comdat align 2 {
  %4 = alloca %"class.v8::internal::SharedStringAccessGuardIfNeeded", align 8
  %5 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #6, !alias.scope !29
  %9 = add i64 %6, 7
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = icmp eq i64 %12, %2
  br i1 %13, label %14, label %168

14:                                               ; preds = %3, %154
  %15 = phi i64 [ %160, %154 ], [ %6, %3 ]
  %16 = phi i32 [ %155, %154 ], [ 0, %3 ]
  %17 = add i64 %15, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %7, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = and i16 %24, 15
  %26 = zext i16 %25 to i32
  switch i32 %26, label %153 [
    i32 8, label %27
    i32 0, label %46
    i32 10, label %56
    i32 2, label %106
    i32 11, label %147
    i32 3, label %147
    i32 9, label %161
    i32 1, label %161
    i32 13, label %154
    i32 5, label %154
  ]

27:                                               ; preds = %14
  %28 = add i64 %15, 11
  %29 = inttoptr i64 %28 to i8*
  %30 = sext i32 %16 to i64
  %31 = getelementptr inbounds i8, i8* %29, i64 %30
  %32 = getelementptr inbounds i8, i8* %31, i64 %2
  %33 = icmp sgt i64 %2, 0
  br i1 %33, label %34, label %168

34:                                               ; preds = %27, %42
  %35 = phi i8* [ %43, %42 ], [ %31, %27 ]
  %36 = phi i16* [ %44, %42 ], [ %1, %27 ]
  %37 = load i8, i8* %35, align 1
  %38 = zext i8 %37 to i32
  %39 = load i16, i16* %36, align 2
  %40 = zext i16 %39 to i32
  %41 = icmp eq i32 %38, %40
  br i1 %41, label %42, label %168

42:                                               ; preds = %34
  %43 = getelementptr inbounds i8, i8* %35, i64 1
  %44 = getelementptr inbounds i16, i16* %36, i64 1
  %45 = icmp ult i8* %43, %32
  br i1 %45, label %34, label %168

46:                                               ; preds = %14
  %47 = add i64 %15, 11
  %48 = inttoptr i64 %47 to i16*
  %49 = sext i32 %16 to i64
  %50 = getelementptr inbounds i16, i16* %48, i64 %49
  %51 = bitcast i16* %50 to i8*
  %52 = bitcast i16* %1 to i8*
  %53 = shl i64 %2, 1
  %54 = tail call i32 @bcmp(i8* %51, i8* %52, i64 %53) #6
  %55 = icmp eq i32 %54, 0
  br label %168

56:                                               ; preds = %14
  %57 = inttoptr i64 %17 to i32*
  %58 = and i64 %15, -4294967296
  %59 = load atomic i32, i32* %57 monotonic, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %58, %60
  %62 = add i64 %61, 7
  %63 = inttoptr i64 %62 to i16*
  %64 = load atomic i16, i16* %63 monotonic, align 2
  %65 = and i16 %64, 16
  %66 = icmp eq i16 %65, 0
  %67 = add i64 %15, 11
  %68 = inttoptr i64 %67 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %66, label %81, label %69

69:                                               ; preds = %56
  %70 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %68, align 1
  %71 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %70, i64 0, i32 0
  %72 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %70 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %73 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %72, align 8
  %74 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %73, i64 2
  %75 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %74, align 8
  %76 = tail call zeroext i1 %75(%"class.v8::String::ExternalStringResourceBase"* %71) #6
  br i1 %76, label %77, label %81

77:                                               ; preds = %69
  %78 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %68, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %78) #6
  %79 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %78, i64 0, i32 1
  %80 = load i8*, i8** %79, align 8
  br label %88

81:                                               ; preds = %69, %56
  %82 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %68, align 1
  %83 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %82 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %84 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %83, align 8
  %85 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %84, i64 6
  %86 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %85, align 8
  %87 = tail call i8* %86(%"class.v8::String::ExternalOneByteStringResource"* %82) #6
  br label %88

88:                                               ; preds = %81, %77
  %89 = phi i8* [ %80, %77 ], [ %87, %81 ]
  %90 = sext i32 %16 to i64
  %91 = getelementptr inbounds i8, i8* %89, i64 %90
  %92 = getelementptr inbounds i8, i8* %91, i64 %2
  %93 = icmp sgt i64 %2, 0
  br i1 %93, label %94, label %168

94:                                               ; preds = %88, %102
  %95 = phi i8* [ %103, %102 ], [ %91, %88 ]
  %96 = phi i16* [ %104, %102 ], [ %1, %88 ]
  %97 = load i8, i8* %95, align 1
  %98 = zext i8 %97 to i32
  %99 = load i16, i16* %96, align 2
  %100 = zext i16 %99 to i32
  %101 = icmp eq i32 %98, %100
  br i1 %101, label %102, label %168

102:                                              ; preds = %94
  %103 = getelementptr inbounds i8, i8* %95, i64 1
  %104 = getelementptr inbounds i16, i16* %96, i64 1
  %105 = icmp ult i8* %103, %92
  br i1 %105, label %94, label %168

106:                                              ; preds = %14
  %107 = inttoptr i64 %17 to i32*
  %108 = and i64 %15, -4294967296
  %109 = load atomic i32, i32* %107 monotonic, align 4
  %110 = zext i32 %109 to i64
  %111 = or i64 %108, %110
  %112 = add i64 %111, 7
  %113 = inttoptr i64 %112 to i16*
  %114 = load atomic i16, i16* %113 monotonic, align 2
  %115 = and i16 %114, 16
  %116 = icmp eq i16 %115, 0
  %117 = add i64 %15, 11
  %118 = inttoptr i64 %117 to %"class.v8::String::ExternalStringResource"**
  br i1 %116, label %131, label %119

119:                                              ; preds = %106
  %120 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %118, align 1
  %121 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %120, i64 0, i32 0
  %122 = bitcast %"class.v8::String::ExternalStringResource"* %120 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %123 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %122, align 8
  %124 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %123, i64 2
  %125 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %124, align 8
  %126 = tail call zeroext i1 %125(%"class.v8::String::ExternalStringResourceBase"* %121) #6
  br i1 %126, label %127, label %131

127:                                              ; preds = %119
  %128 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %118, align 1
  tail call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %128) #6
  %129 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %128, i64 0, i32 1
  %130 = load i16*, i16** %129, align 8
  br label %138

131:                                              ; preds = %119, %106
  %132 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %118, align 1
  %133 = bitcast %"class.v8::String::ExternalStringResource"* %132 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %134 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %133, align 8
  %135 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %134, i64 6
  %136 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %135, align 8
  %137 = tail call i16* %136(%"class.v8::String::ExternalStringResource"* %132) #6
  br label %138

138:                                              ; preds = %131, %127
  %139 = phi i16* [ %130, %127 ], [ %137, %131 ]
  %140 = sext i32 %16 to i64
  %141 = getelementptr inbounds i16, i16* %139, i64 %140
  %142 = bitcast i16* %141 to i8*
  %143 = bitcast i16* %1 to i8*
  %144 = shl i64 %2, 1
  %145 = tail call i32 @bcmp(i8* %142, i8* %143, i64 %144) #6
  %146 = icmp eq i32 %145, 0
  br label %168

147:                                              ; preds = %14, %14
  %148 = add i64 %15, 15
  %149 = inttoptr i64 %148 to i32*
  %150 = load i32, i32* %149, align 4
  %151 = ashr i32 %150, 1
  %152 = add nsw i32 %151, %16
  br label %154

153:                                              ; preds = %14
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #18
  unreachable

154:                                              ; preds = %147, %14, %14
  %155 = phi i32 [ %152, %147 ], [ %16, %14 ], [ %16, %14 ]
  %156 = add i64 %15, 11
  %157 = inttoptr i64 %156 to i32*
  %158 = load i32, i32* %157, align 4
  %159 = zext i32 %158 to i64
  %160 = or i64 %7, %159
  br label %14

161:                                              ; preds = %14, %14
  %162 = call zeroext i1 @_ZN2v88internal6String23IsConsStringEqualToImplItEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE(i64 %15, i32 %16, i16* %1, i64 %2, i64 %7, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* nonnull dereferenceable(16) %4) #6
  %163 = load i8, i8* %8, align 8, !range !5
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %168, label %165

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %167 = load %"class.v8::base::SharedMutex"*, %"class.v8::base::SharedMutex"** %166, align 8
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %167) #6
  br label %168

168:                                              ; preds = %94, %102, %34, %42, %138, %46, %27, %88, %3, %161, %165
  %169 = phi i1 [ %162, %161 ], [ %162, %165 ], [ %146, %138 ], [ %55, %46 ], [ true, %27 ], [ true, %88 ], [ false, %3 ], [ false, %34 ], [ true, %42 ], [ false, %94 ], [ true, %102 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #6
  ret i1 %169
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal6String23IsConsStringEqualToImplItEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE(i64, i32, i16*, i64, i64, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16)) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca i32, align 4
  %8 = alloca %"class.v8::internal::ConsStringIterator", align 8
  store i32 %1, i32* %7, align 4
  %9 = bitcast %"class.v8::internal::ConsStringIterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %9) #6
  %10 = trunc i64 %0 to i32
  %11 = icmp eq i32 %10, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 268, i1 false) #6
  br i1 %11, label %12, label %13

12:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %195

13:                                               ; preds = %6
  call void @_ZN2v88internal18ConsStringIterator10InitializeENS0_10ConsStringEi(%"class.v8::internal::ConsStringIterator"* nonnull %8, i64 %0, i32 %1) #6
  %14 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %8, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  store i32 0, i32* %7, align 4
  %17 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %8, i64 0, i32 2
  br i1 %16, label %195, label %18

18:                                               ; preds = %13
  %19 = call i64 @_ZN2v88internal18ConsStringIterator8ContinueEPi(%"class.v8::internal::ConsStringIterator"* nonnull %8, i32* nonnull %7) #6
  %20 = trunc i64 %19 to i32
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %195, label %22

22:                                               ; preds = %18
  %23 = and i64 %4, 4294967295
  %24 = icmp eq i64 %23, 0
  call void @llvm.assume(i1 %24) #6
  br label %25

25:                                               ; preds = %22, %191
  %26 = phi i64 [ %3, %22 ], [ %186, %191 ]
  %27 = phi i64 [ %19, %22 ], [ %192, %191 ]
  %28 = phi i16* [ %2, %22 ], [ %185, %191 ]
  %29 = add i64 %27, 7
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = sext i32 %31 to i64
  %33 = icmp ult i64 %26, %32
  %34 = select i1 %33, i64 %26, i64 %32
  br label %35

35:                                               ; preds = %175, %25
  %36 = phi i64 [ %27, %25 ], [ %181, %175 ]
  %37 = phi i32 [ 0, %25 ], [ %176, %175 ]
  %38 = add i64 %36, -1
  %39 = inttoptr i64 %38 to i32*
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = zext i32 %40 to i64
  %42 = or i64 %41, %4
  %43 = add i64 %42, 7
  %44 = inttoptr i64 %43 to i16*
  %45 = load atomic i16, i16* %44 monotonic, align 2
  %46 = and i16 %45, 15
  %47 = zext i16 %46 to i32
  switch i32 %47, label %174 [
    i32 8, label %48
    i32 0, label %67
    i32 10, label %77
    i32 2, label %127
    i32 11, label %168
    i32 3, label %168
    i32 9, label %182
    i32 1, label %182
    i32 13, label %175
    i32 5, label %175
  ]

48:                                               ; preds = %35
  %49 = add i64 %36, 11
  %50 = inttoptr i64 %49 to i8*
  %51 = sext i32 %37 to i64
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = getelementptr inbounds i8, i8* %52, i64 %34
  %54 = icmp sgt i64 %34, 0
  br i1 %54, label %55, label %184

55:                                               ; preds = %48, %63
  %56 = phi i8* [ %64, %63 ], [ %52, %48 ]
  %57 = phi i16* [ %65, %63 ], [ %28, %48 ]
  %58 = load i8, i8* %56, align 1
  %59 = zext i8 %58 to i32
  %60 = load i16, i16* %57, align 2
  %61 = zext i16 %60 to i32
  %62 = icmp eq i32 %59, %61
  br i1 %62, label %63, label %195

63:                                               ; preds = %55
  %64 = getelementptr inbounds i8, i8* %56, i64 1
  %65 = getelementptr inbounds i16, i16* %57, i64 1
  %66 = icmp ult i8* %64, %53
  br i1 %66, label %55, label %184

67:                                               ; preds = %35
  %68 = add i64 %36, 11
  %69 = inttoptr i64 %68 to i16*
  %70 = sext i32 %37 to i64
  %71 = getelementptr inbounds i16, i16* %69, i64 %70
  %72 = bitcast i16* %71 to i8*
  %73 = bitcast i16* %28 to i8*
  %74 = shl i64 %34, 1
  %75 = call i32 @bcmp(i8* %72, i8* %73, i64 %74) #6
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %184, label %195

77:                                               ; preds = %35
  %78 = inttoptr i64 %38 to i32*
  %79 = and i64 %36, -4294967296
  %80 = load atomic i32, i32* %78 monotonic, align 4
  %81 = zext i32 %80 to i64
  %82 = or i64 %79, %81
  %83 = add i64 %82, 7
  %84 = inttoptr i64 %83 to i16*
  %85 = load atomic i16, i16* %84 monotonic, align 2
  %86 = and i16 %85, 16
  %87 = icmp eq i16 %86, 0
  %88 = add i64 %36, 11
  %89 = inttoptr i64 %88 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %87, label %102, label %90

90:                                               ; preds = %77
  %91 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %89, align 1
  %92 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %91, i64 0, i32 0
  %93 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %91 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %94 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %93, align 8
  %95 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %94, i64 2
  %96 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %95, align 8
  %97 = call zeroext i1 %96(%"class.v8::String::ExternalStringResourceBase"* %92) #6
  br i1 %97, label %98, label %102

98:                                               ; preds = %90
  %99 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %89, align 1
  call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %99) #6
  %100 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %99, i64 0, i32 1
  %101 = load i8*, i8** %100, align 8
  br label %109

102:                                              ; preds = %77, %90
  %103 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %89, align 1
  %104 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %103 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %105 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %104, align 8
  %106 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %105, i64 6
  %107 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %106, align 8
  %108 = call i8* %107(%"class.v8::String::ExternalOneByteStringResource"* %103) #6
  br label %109

109:                                              ; preds = %102, %98
  %110 = phi i8* [ %101, %98 ], [ %108, %102 ]
  %111 = sext i32 %37 to i64
  %112 = getelementptr inbounds i8, i8* %110, i64 %111
  %113 = getelementptr inbounds i8, i8* %112, i64 %34
  %114 = icmp sgt i64 %34, 0
  br i1 %114, label %115, label %184

115:                                              ; preds = %109, %123
  %116 = phi i8* [ %124, %123 ], [ %112, %109 ]
  %117 = phi i16* [ %125, %123 ], [ %28, %109 ]
  %118 = load i8, i8* %116, align 1
  %119 = zext i8 %118 to i32
  %120 = load i16, i16* %117, align 2
  %121 = zext i16 %120 to i32
  %122 = icmp eq i32 %119, %121
  br i1 %122, label %123, label %195

123:                                              ; preds = %115
  %124 = getelementptr inbounds i8, i8* %116, i64 1
  %125 = getelementptr inbounds i16, i16* %117, i64 1
  %126 = icmp ult i8* %124, %113
  br i1 %126, label %115, label %184

127:                                              ; preds = %35
  %128 = inttoptr i64 %38 to i32*
  %129 = and i64 %36, -4294967296
  %130 = load atomic i32, i32* %128 monotonic, align 4
  %131 = zext i32 %130 to i64
  %132 = or i64 %129, %131
  %133 = add i64 %132, 7
  %134 = inttoptr i64 %133 to i16*
  %135 = load atomic i16, i16* %134 monotonic, align 2
  %136 = and i16 %135, 16
  %137 = icmp eq i16 %136, 0
  %138 = add i64 %36, 11
  %139 = inttoptr i64 %138 to %"class.v8::String::ExternalStringResource"**
  br i1 %137, label %152, label %140

140:                                              ; preds = %127
  %141 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %139, align 1
  %142 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %141, i64 0, i32 0
  %143 = bitcast %"class.v8::String::ExternalStringResource"* %141 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %144 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %143, align 8
  %145 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %144, i64 2
  %146 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %145, align 8
  %147 = call zeroext i1 %146(%"class.v8::String::ExternalStringResourceBase"* %142) #6
  br i1 %147, label %148, label %152

148:                                              ; preds = %140
  %149 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %139, align 1
  call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %149) #6
  %150 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %149, i64 0, i32 1
  %151 = load i16*, i16** %150, align 8
  br label %159

152:                                              ; preds = %127, %140
  %153 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %139, align 1
  %154 = bitcast %"class.v8::String::ExternalStringResource"* %153 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %155 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %154, align 8
  %156 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %155, i64 6
  %157 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %156, align 8
  %158 = call i16* %157(%"class.v8::String::ExternalStringResource"* %153) #6
  br label %159

159:                                              ; preds = %152, %148
  %160 = phi i16* [ %151, %148 ], [ %158, %152 ]
  %161 = sext i32 %37 to i64
  %162 = getelementptr inbounds i16, i16* %160, i64 %161
  %163 = bitcast i16* %162 to i8*
  %164 = bitcast i16* %28 to i8*
  %165 = shl i64 %34, 1
  %166 = call i32 @bcmp(i8* %163, i8* %164, i64 %165) #6
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %184, label %195

168:                                              ; preds = %35, %35
  %169 = add i64 %36, 15
  %170 = inttoptr i64 %169 to i32*
  %171 = load i32, i32* %170, align 4
  %172 = ashr i32 %171, 1
  %173 = add nsw i32 %172, %37
  br label %175

174:                                              ; preds = %35
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #18
  unreachable

175:                                              ; preds = %35, %35, %168
  %176 = phi i32 [ %173, %168 ], [ %37, %35 ], [ %37, %35 ]
  %177 = add i64 %36, 11
  %178 = inttoptr i64 %177 to i32*
  %179 = load i32, i32* %178, align 4
  %180 = zext i32 %179 to i64
  %181 = or i64 %180, %4
  br label %35

182:                                              ; preds = %35, %35
  %183 = call zeroext i1 @_ZN2v88internal6String23IsConsStringEqualToImplItEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE(i64 %36, i32 %37, i16* %28, i64 %34, i64 %4, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %5) #6
  br i1 %183, label %184, label %195

184:                                              ; preds = %123, %63, %48, %109, %159, %67, %182
  %185 = getelementptr inbounds i16, i16* %28, i64 %34
  %186 = sub i64 %26, %34
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %195, label %188

188:                                              ; preds = %184
  store i32 0, i32* %7, align 4
  %189 = load i32, i32* %17, align 8
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %195, label %191

191:                                              ; preds = %188
  %192 = call i64 @_ZN2v88internal18ConsStringIterator8ContinueEPi(%"class.v8::internal::ConsStringIterator"* nonnull %8, i32* nonnull %7) #6
  %193 = trunc i64 %192 to i32
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %25

195:                                              ; preds = %188, %184, %191, %159, %67, %182, %115, %55, %12, %13, %18
  %196 = phi i1 [ true, %18 ], [ true, %13 ], [ true, %12 ], [ false, %55 ], [ false, %115 ], [ true, %188 ], [ true, %184 ], [ true, %191 ], [ false, %159 ], [ false, %67 ], [ false, %182 ]
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %9) #6
  ret i1 %196
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::Handle"* @_ZN2v84base11SmallVectorINS_8internal6HandleINS2_6StringEEELm8EE4GrowEv(%"class.v8::base::SmallVector.0"*) local_unnamed_addr #5 comdat align 2 {
  %2 = tail call %"class.v8::internal::Handle"* @_ZN2v84base11SmallVectorINS_8internal6HandleINS2_6StringEEELm8EE4GrowEm(%"class.v8::base::SmallVector.0"* %0, i64 0)
  ret %"class.v8::internal::Handle"* %2
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::Handle"* @_ZN2v84base11SmallVectorINS_8internal6HandleINS2_6StringEEELm8EE4GrowEm(%"class.v8::base::SmallVector.0"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::base::SmallVector.0", %"class.v8::base::SmallVector.0"* %0, i64 0, i32 1
  %4 = bitcast %"class.v8::internal::Handle"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.v8::base::SmallVector.0"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = getelementptr inbounds %"class.v8::base::SmallVector.0", %"class.v8::base::SmallVector.0"* %0, i64 0, i32 2
  %11 = bitcast %"class.v8::internal::Handle"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %7
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %14, %1
  %16 = select i1 %15, i64 %14, i64 %1
  %17 = tail call i64 @_ZN2v84base4bits21RoundUpToPowerOfTwo64Em(i64 %16) #6
  %18 = shl i64 %17, 3
  %19 = tail call noalias i8* @malloc(i64 %18) #6
  %20 = bitcast i8* %19 to %"class.v8::internal::Handle"*
  %21 = icmp eq i8* %19, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.38, i64 0, i64 0)) #18
  unreachable

23:                                               ; preds = %2
  %24 = bitcast %"class.v8::base::SmallVector.0"* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %19, i8* align 1 %25, i64 %8, i1 false) #6
  %26 = getelementptr inbounds %"class.v8::base::SmallVector.0", %"class.v8::base::SmallVector.0"* %0, i64 0, i32 3, i32 0, i64 0
  %27 = icmp eq i8* %25, %26
  br i1 %27, label %29, label %28

28:                                               ; preds = %23
  tail call void @free(i8* %25) #6
  br label %29

29:                                               ; preds = %23, %28
  store i8* %19, i8** %24, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %20, i64 %9
  store %"class.v8::internal::Handle"* %30, %"class.v8::internal::Handle"** %3, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %20, i64 %17
  store %"class.v8::internal::Handle"* %31, %"class.v8::internal::Handle"** %10, align 8
  ret %"class.v8::internal::Handle"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhhE12LinearSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %65, label %13

13:                                               ; preds = %4
  %14 = load i8, i8* %6, align 1
  %15 = add nsw i32 %11, 1
  %16 = zext i8 %14 to i32
  %17 = ptrtoint i8* %1 to i64
  %18 = getelementptr inbounds i8, i8* %6, i64 1
  %19 = shl i64 %8, 32
  %20 = add i64 %19, -4294967296
  %21 = ashr exact i64 %20, 32
  br label %24

22:                                               ; preds = %53
  %23 = icmp sgt i32 %11, %47
  br i1 %23, label %44, label %65

24:                                               ; preds = %44, %13
  %25 = phi i32 [ %3, %13 ], [ %45, %44 ]
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %1, i64 %26
  %28 = sub i32 %15, %25
  %29 = sext i32 %28 to i64
  %30 = tail call i8* @memchr(i8* %27, i32 %16, i64 %29) #19
  %31 = icmp eq i8* %30, null
  br i1 %31, label %65, label %32

32:                                               ; preds = %24
  %33 = ptrtoint i8* %30 to i64
  %34 = sub i64 %33, %17
  %35 = trunc i64 %34 to i32
  %36 = shl i64 %34, 32
  %37 = ashr exact i64 %36, 32
  %38 = getelementptr inbounds i8, i8* %1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, %14
  br i1 %40, label %46, label %41

41:                                               ; preds = %32
  %42 = add nsw i32 %35, 1
  %43 = icmp sgt i32 %11, %35
  br i1 %43, label %44, label %65

44:                                               ; preds = %41, %22
  %45 = phi i32 [ %42, %41 ], [ %50, %22 ]
  br label %24

46:                                               ; preds = %32
  %47 = trunc i64 %34 to i32
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %65, label %49

49:                                               ; preds = %46
  %50 = add nuw nsw i32 %47, 1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  br label %53

53:                                               ; preds = %60, %49
  %54 = phi i64 [ %61, %60 ], [ 0, %49 ]
  %55 = getelementptr inbounds i8, i8* %18, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = getelementptr inbounds i8, i8* %52, i64 %54
  %58 = load i8, i8* %57, align 1
  %59 = icmp eq i8 %56, %58
  br i1 %59, label %60, label %22

60:                                               ; preds = %53
  %61 = add nuw nsw i64 %54, 1
  %62 = icmp slt i64 %61, %21
  br i1 %62, label %53, label %63

63:                                               ; preds = %60
  %64 = trunc i64 %34 to i32
  br label %65

65:                                               ; preds = %22, %46, %41, %24, %63, %4
  %66 = phi i32 [ -1, %4 ], [ %64, %63 ], [ -1, %24 ], [ -1, %41 ], [ -1, %46 ], [ -1, %22 ]
  ret i32 %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhhE13InitialSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %281, label %13

13:                                               ; preds = %4
  %14 = shl i32 %9, 2
  %15 = sub nsw i32 -10, %14
  %16 = add nsw i32 %11, 1
  %17 = ptrtoint i8* %1 to i64
  %18 = shl i64 %8, 32
  %19 = ashr exact i64 %18, 32
  br label %20

20:                                               ; preds = %275, %13
  %21 = phi i32 [ %15, %13 ], [ %276, %275 ]
  %22 = phi i32 [ %3, %13 ], [ %277, %275 ]
  %23 = add nsw i32 %21, 1
  %24 = icmp slt i32 %21, 0
  br i1 %24, label %25, label %72

25:                                               ; preds = %20
  %26 = load i8, i8* %6, align 1
  %27 = zext i8 %26 to i32
  br label %28

28:                                               ; preds = %45, %25
  %29 = phi i32 [ %22, %25 ], [ %46, %45 ]
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %1, i64 %30
  %32 = sub i32 %16, %29
  %33 = sext i32 %32 to i64
  %34 = tail call i8* @memchr(i8* %31, i32 %27, i64 %33) #19
  %35 = icmp eq i8* %34, null
  br i1 %35, label %281, label %36

36:                                               ; preds = %28
  %37 = ptrtoint i8* %34 to i64
  %38 = sub i64 %37, %17
  %39 = trunc i64 %38 to i32
  %40 = shl i64 %38, 32
  %41 = ashr exact i64 %40, 32
  %42 = getelementptr inbounds i8, i8* %1, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, %26
  br i1 %44, label %48, label %45

45:                                               ; preds = %36
  %46 = add nsw i32 %39, 1
  %47 = icmp sgt i32 %11, %39
  br i1 %47, label %28, label %281

48:                                               ; preds = %36
  %49 = trunc i64 %38 to i32
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %281, label %51

51:                                               ; preds = %48
  %52 = shl i64 %38, 32
  %53 = ashr exact i64 %52, 32
  br label %54

54:                                               ; preds = %51, %63
  %55 = phi i64 [ 1, %51 ], [ %64, %63 ]
  %56 = phi i32 [ 1, %51 ], [ %65, %63 ]
  %57 = getelementptr inbounds i8, i8* %6, i64 %55
  %58 = load i8, i8* %57, align 1
  %59 = add nsw i64 %55, %53
  %60 = getelementptr inbounds i8, i8* %1, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = icmp eq i8 %58, %61
  br i1 %62, label %63, label %67

63:                                               ; preds = %54
  %64 = add nuw nsw i64 %55, 1
  %65 = add nuw nsw i32 %56, 1
  %66 = icmp slt i64 %64, %19
  br i1 %66, label %54, label %69

67:                                               ; preds = %54
  %68 = trunc i64 %55 to i32
  br label %69

69:                                               ; preds = %63, %67
  %70 = phi i32 [ %68, %67 ], [ %65, %63 ]
  %71 = icmp eq i32 %70, %9
  br i1 %71, label %279, label %275

72:                                               ; preds = %20
  %73 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 0
  %74 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %212, label %78

78:                                               ; preds = %72
  %79 = add nsw i32 %76, -1
  %80 = insertelement <4 x i32> undef, i32 %79, i32 0
  %81 = shufflevector <4 x i32> %80, <4 x i32> undef, <4 x i32> zeroinitializer
  %82 = insertelement <4 x i32> undef, i32 %79, i32 0
  %83 = shufflevector <4 x i32> %82, <4 x i32> undef, <4 x i32> zeroinitializer
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 0
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %85, align 4
  %86 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 4
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %87, align 4
  %88 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 8
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %89, align 4
  %90 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 12
  %91 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %91, align 4
  %92 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 16
  %93 = bitcast i32* %92 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %93, align 4
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 20
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %95, align 4
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 24
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %97, align 4
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 28
  %99 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %99, align 4
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 32
  %101 = bitcast i32* %100 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %101, align 4
  %102 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 36
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %103, align 4
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 40
  %105 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %105, align 4
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 44
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %107, align 4
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 48
  %109 = bitcast i32* %108 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %109, align 4
  %110 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 52
  %111 = bitcast i32* %110 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %111, align 4
  %112 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 56
  %113 = bitcast i32* %112 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %113, align 4
  %114 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 60
  %115 = bitcast i32* %114 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %115, align 4
  %116 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 64
  %117 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %117, align 4
  %118 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 68
  %119 = bitcast i32* %118 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %119, align 4
  %120 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 72
  %121 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %121, align 4
  %122 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 76
  %123 = bitcast i32* %122 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %123, align 4
  %124 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 80
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %125, align 4
  %126 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 84
  %127 = bitcast i32* %126 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %127, align 4
  %128 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 88
  %129 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %129, align 4
  %130 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 92
  %131 = bitcast i32* %130 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %131, align 4
  %132 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 96
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %133, align 4
  %134 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 100
  %135 = bitcast i32* %134 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %135, align 4
  %136 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 104
  %137 = bitcast i32* %136 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %137, align 4
  %138 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 108
  %139 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %139, align 4
  %140 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 112
  %141 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %141, align 4
  %142 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 116
  %143 = bitcast i32* %142 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %143, align 4
  %144 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 120
  %145 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %145, align 4
  %146 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 124
  %147 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %147, align 4
  %148 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 128
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %149, align 4
  %150 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 132
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %151, align 4
  %152 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 136
  %153 = bitcast i32* %152 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %153, align 4
  %154 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 140
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %155, align 4
  %156 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 144
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %157, align 4
  %158 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 148
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %159, align 4
  %160 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 152
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %161, align 4
  %162 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 156
  %163 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %163, align 4
  %164 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 160
  %165 = bitcast i32* %164 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %165, align 4
  %166 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 164
  %167 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %167, align 4
  %168 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 168
  %169 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %169, align 4
  %170 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 172
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %171, align 4
  %172 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 176
  %173 = bitcast i32* %172 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %173, align 4
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 180
  %175 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %175, align 4
  %176 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 184
  %177 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %177, align 4
  %178 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 188
  %179 = bitcast i32* %178 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %179, align 4
  %180 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 192
  %181 = bitcast i32* %180 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %181, align 4
  %182 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 196
  %183 = bitcast i32* %182 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %183, align 4
  %184 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 200
  %185 = bitcast i32* %184 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %185, align 4
  %186 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 204
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %187, align 4
  %188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 208
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %189, align 4
  %190 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 212
  %191 = bitcast i32* %190 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %191, align 4
  %192 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 216
  %193 = bitcast i32* %192 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %193, align 4
  %194 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 220
  %195 = bitcast i32* %194 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %195, align 4
  %196 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 224
  %197 = bitcast i32* %196 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %197, align 4
  %198 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 228
  %199 = bitcast i32* %198 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %199, align 4
  %200 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 232
  %201 = bitcast i32* %200 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %201, align 4
  %202 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 236
  %203 = bitcast i32* %202 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %203, align 4
  %204 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 240
  %205 = bitcast i32* %204 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %205, align 4
  %206 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 244
  %207 = bitcast i32* %206 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %207, align 4
  %208 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 248
  %209 = bitcast i32* %208 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %209, align 4
  %210 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 252
  %211 = bitcast i32* %210 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %211, align 4
  br label %215

212:                                              ; preds = %72
  %213 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 0
  %214 = bitcast i32* %213 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %214, i8 -1, i64 1024, i1 false) #6
  br label %215

215:                                              ; preds = %78, %212
  %216 = add i32 %9, -1
  %217 = icmp slt i32 %76, %216
  br i1 %217, label %218, label %272

218:                                              ; preds = %215
  %219 = sext i32 %76 to i64
  %220 = sext i32 %216 to i64
  %221 = sub nsw i64 %220, %219
  %222 = xor i64 %219, -1
  %223 = add nsw i64 %222, %220
  %224 = and i64 %221, 3
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %238, label %226

226:                                              ; preds = %218, %226
  %227 = phi i64 [ %235, %226 ], [ %219, %218 ]
  %228 = phi i64 [ %236, %226 ], [ %224, %218 ]
  %229 = load i8*, i8** %5, align 8
  %230 = getelementptr inbounds i8, i8* %229, i64 %227
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i64
  %233 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 %232
  %234 = trunc i64 %227 to i32
  store i32 %234, i32* %233, align 4
  %235 = add nsw i64 %227, 1
  %236 = add i64 %228, -1
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %238, label %226, !llvm.loop !32

238:                                              ; preds = %226, %218
  %239 = phi i64 [ %219, %218 ], [ %235, %226 ]
  %240 = icmp ult i64 %223, 3
  br i1 %240, label %272, label %241

241:                                              ; preds = %238, %241
  %242 = phi i64 [ %270, %241 ], [ %239, %238 ]
  %243 = load i8*, i8** %5, align 8
  %244 = getelementptr inbounds i8, i8* %243, i64 %242
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i64
  %247 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 %246
  %248 = trunc i64 %242 to i32
  store i32 %248, i32* %247, align 4
  %249 = add nsw i64 %242, 1
  %250 = load i8*, i8** %5, align 8
  %251 = getelementptr inbounds i8, i8* %250, i64 %249
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i64
  %254 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 %253
  %255 = trunc i64 %249 to i32
  store i32 %255, i32* %254, align 4
  %256 = add nsw i64 %242, 2
  %257 = load i8*, i8** %5, align 8
  %258 = getelementptr inbounds i8, i8* %257, i64 %256
  %259 = load i8, i8* %258, align 1
  %260 = zext i8 %259 to i64
  %261 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 %260
  %262 = trunc i64 %256 to i32
  store i32 %262, i32* %261, align 4
  %263 = add nsw i64 %242, 3
  %264 = load i8*, i8** %5, align 8
  %265 = getelementptr inbounds i8, i8* %264, i64 %263
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i64
  %268 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 %267
  %269 = trunc i64 %263 to i32
  store i32 %269, i32* %268, align 4
  %270 = add nsw i64 %242, 4
  %271 = icmp eq i64 %270, %220
  br i1 %271, label %272, label %241

272:                                              ; preds = %238, %241, %215
  %273 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIhhE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)** %273, align 8
  %274 = tail call i32 @_ZN2v88internal12StringSearchIhhE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch"* %0, i8* %1, i64 %2, i32 %22)
  br label %281

275:                                              ; preds = %69
  %276 = add nsw i32 %23, %70
  %277 = add nsw i32 %49, 1
  %278 = icmp sgt i32 %11, %49
  br i1 %278, label %20, label %281

279:                                              ; preds = %69
  %280 = trunc i64 %38 to i32
  br label %281

281:                                              ; preds = %48, %275, %45, %28, %279, %4, %272
  %282 = phi i32 [ %274, %272 ], [ -1, %4 ], [ %280, %279 ], [ -1, %28 ], [ -1, %45 ], [ -1, %275 ], [ -1, %48 ]
  ret i32 %282
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhhE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 0
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = add nsw i32 %10, -1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %6, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = sub nsw i32 %13, %19
  %21 = sub nsw i32 %9, %10
  %22 = add i32 %10, -2
  %23 = icmp sgt i32 %22, -1
  %24 = sub i32 %10, %20
  br i1 %23, label %25, label %68

25:                                               ; preds = %4
  %26 = sub nsw i32 0, %10
  %27 = sext i32 %22 to i64
  br label %28

28:                                               ; preds = %25, %57
  %29 = phi i32 [ %59, %57 ], [ %3, %25 ]
  %30 = phi i32 [ %61, %57 ], [ %26, %25 ]
  %31 = icmp sgt i32 %29, %21
  br i1 %31, label %173, label %32

32:                                               ; preds = %28, %40
  %33 = phi i32 [ %45, %40 ], [ %29, %28 ]
  %34 = phi i32 [ %47, %40 ], [ %30, %28 ]
  %35 = add nsw i32 %33, %13
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = icmp eq i8 %16, %38
  br i1 %39, label %66, label %40

40:                                               ; preds = %32
  %41 = zext i8 %38 to i64
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = sub nsw i32 %13, %43
  %45 = add nsw i32 %44, %33
  %46 = add i32 %34, 1
  %47 = sub i32 %46, %44
  %48 = icmp sgt i32 %45, %21
  br i1 %48, label %173, label %32

49:                                               ; preds = %66, %63
  %50 = phi i64 [ %27, %66 ], [ %64, %63 ]
  %51 = getelementptr inbounds i8, i8* %6, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = add nsw i64 %50, %67
  %54 = getelementptr inbounds i8, i8* %1, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = icmp eq i8 %52, %55
  br i1 %56, label %63, label %57

57:                                               ; preds = %49
  %58 = trunc i64 %50 to i32
  %59 = add nsw i32 %33, %20
  %60 = add i32 %24, %34
  %61 = sub i32 %60, %58
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %84, label %28

63:                                               ; preds = %49
  %64 = add nsw i64 %50, -1
  %65 = icmp sgt i64 %50, 0
  br i1 %65, label %49, label %173

66:                                               ; preds = %32
  %67 = sext i32 %33 to i64
  br label %49

68:                                               ; preds = %4
  %69 = icmp slt i32 %21, %3
  br i1 %69, label %173, label %70

70:                                               ; preds = %68, %77
  %71 = phi i32 [ %82, %77 ], [ %3, %68 ]
  %72 = add nsw i32 %71, %13
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8, i8* %1, i64 %73
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %16, %75
  br i1 %76, label %173, label %77

77:                                               ; preds = %70
  %78 = zext i8 %75 to i64
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %78
  %80 = load i32, i32* %79, align 4
  %81 = sub nsw i32 %13, %80
  %82 = add nsw i32 %81, %71
  %83 = icmp sgt i32 %82, %21
  br i1 %83, label %173, label %70

84:                                               ; preds = %57
  tail call void @_ZN2v88internal12StringSearchIhhE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch"* %0)
  %85 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIhhE16BoyerMooreSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)** %85, align 8
  %86 = load i8*, i8** %5, align 8
  %87 = load i64, i64* %7, align 8
  %88 = trunc i64 %87 to i32
  %89 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 3
  %90 = load i32, i32* %89, align 8
  %91 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %92 = sext i32 %90 to i64
  %93 = sub nsw i64 0, %92
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %91, i64 0, i32 122, i64 %93
  %95 = add nsw i32 %88, -1
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* %86, i64 %96
  %98 = load i8, i8* %97, align 1
  %99 = sub nsw i32 %9, %88
  %100 = icmp slt i32 %99, %59
  br i1 %100, label %173, label %101

101:                                              ; preds = %84
  %102 = icmp sgt i32 %88, 0
  %103 = zext i8 %98 to i64
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %91, i64 0, i32 121, i64 %103
  br i1 %102, label %105, label %159

105:                                              ; preds = %101
  %106 = shl i64 %87, 32
  %107 = ashr exact i64 %106, 32
  br label %108

108:                                              ; preds = %122, %105
  %109 = phi i32 [ %59, %105 ], [ %123, %122 ]
  %110 = add nsw i32 %109, %95
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %1, i64 %111
  %113 = load i8, i8* %112, align 1
  %114 = icmp eq i8 %98, %113
  br i1 %114, label %157, label %115

115:                                              ; preds = %108
  %116 = zext i8 %113 to i64
  %117 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %91, i64 0, i32 121, i64 %116
  %118 = load i32, i32* %117, align 4
  %119 = sub nsw i32 %95, %118
  %120 = add nsw i32 %119, %109
  %121 = icmp sgt i32 %120, %99
  br i1 %121, label %173, label %122

122:                                              ; preds = %115, %151
  %123 = phi i32 [ %120, %115 ], [ %153, %151 ]
  br label %108

124:                                              ; preds = %157, %155
  %125 = phi i64 [ %107, %157 ], [ %126, %155 ]
  %126 = add nsw i64 %125, -1
  %127 = getelementptr inbounds i8, i8* %86, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = add nsw i64 %126, %158
  %130 = getelementptr inbounds i8, i8* %1, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = icmp eq i8 %128, %131
  br i1 %132, label %155, label %133

133:                                              ; preds = %124
  %134 = trunc i64 %126 to i32
  %135 = icmp sgt i32 %90, %134
  br i1 %135, label %148, label %136

136:                                              ; preds = %133
  %137 = shl i64 %126, 32
  %138 = add i64 %137, 4294967296
  %139 = ashr exact i64 %138, 32
  %140 = getelementptr inbounds i32, i32* %94, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = zext i8 %131 to i64
  %143 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %91, i64 0, i32 121, i64 %142
  %144 = load i32, i32* %143, align 4
  %145 = sub nsw i32 %134, %144
  %146 = icmp sgt i32 %141, %145
  %147 = select i1 %146, i32 %141, i32 %145
  br label %151

148:                                              ; preds = %133
  %149 = load i32, i32* %104, align 4
  %150 = sub nsw i32 %95, %149
  br label %151

151:                                              ; preds = %148, %136
  %152 = phi i32 [ %150, %148 ], [ %147, %136 ]
  %153 = add nsw i32 %152, %109
  %154 = icmp sgt i32 %153, %99
  br i1 %154, label %173, label %122

155:                                              ; preds = %124
  %156 = icmp sgt i64 %126, 0
  br i1 %156, label %124, label %173

157:                                              ; preds = %108
  %158 = sext i32 %109 to i64
  br label %124

159:                                              ; preds = %101, %166
  %160 = phi i32 [ %171, %166 ], [ %59, %101 ]
  %161 = add nsw i32 %160, %95
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds i8, i8* %1, i64 %162
  %164 = load i8, i8* %163, align 1
  %165 = icmp eq i8 %98, %164
  br i1 %165, label %173, label %166

166:                                              ; preds = %159
  %167 = zext i8 %164 to i64
  %168 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %91, i64 0, i32 121, i64 %167
  %169 = load i32, i32* %168, align 4
  %170 = sub nsw i32 %95, %169
  %171 = add nsw i32 %170, %160
  %172 = icmp sgt i32 %171, %99
  br i1 %172, label %173, label %159

173:                                              ; preds = %77, %70, %28, %40, %63, %166, %159, %151, %115, %155, %68, %84
  %174 = phi i32 [ -1, %84 ], [ -1, %68 ], [ %109, %155 ], [ -1, %115 ], [ -1, %151 ], [ %160, %159 ], [ -1, %166 ], [ %33, %63 ], [ -1, %40 ], [ -1, %28 ], [ %71, %70 ], [ -1, %77 ]
  ret i32 %174
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StringSearchIhhE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = sub nsw i32 %4, %8
  %10 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = sext i32 %8 to i64
  %13 = sub nsw i64 0, %12
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %13
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 123, i64 %13
  %16 = icmp slt i32 %8, %4
  br i1 %16, label %17, label %100

17:                                               ; preds = %1
  %18 = shl i64 %3, 32
  %19 = ashr exact i64 %18, 32
  %20 = shl i64 %3, 32
  %21 = ashr exact i64 %20, 32
  %22 = sub nsw i64 %21, %12
  %23 = icmp ult i64 %22, 8
  br i1 %23, label %24, label %26

24:                                               ; preds = %98, %17
  %25 = phi i64 [ %12, %17 ], [ %28, %98 ]
  br label %106

26:                                               ; preds = %17
  %27 = and i64 %22, -8
  %28 = add nsw i64 %27, %12
  %29 = insertelement <4 x i32> undef, i32 %9, i32 0
  %30 = shufflevector <4 x i32> %29, <4 x i32> undef, <4 x i32> zeroinitializer
  %31 = insertelement <4 x i32> undef, i32 %9, i32 0
  %32 = shufflevector <4 x i32> %31, <4 x i32> undef, <4 x i32> zeroinitializer
  %33 = add nsw i64 %27, -8
  %34 = lshr exact i64 %33, 3
  %35 = add nuw nsw i64 %34, 1
  %36 = and i64 %35, 7
  %37 = icmp ult i64 %33, 56
  br i1 %37, label %85, label %38

38:                                               ; preds = %26
  %39 = sub nsw i64 %35, %36
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi i64 [ 0, %38 ], [ %82, %40 ]
  %42 = phi i64 [ %39, %38 ], [ %83, %40 ]
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %41
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %44, align 4
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %46, align 4
  %47 = or i64 %41, 8
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %49, align 4
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %51, align 4
  %52 = or i64 %41, 16
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %54, align 4
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %56, align 4
  %57 = or i64 %41, 24
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %59, align 4
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %61, align 4
  %62 = or i64 %41, 32
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %64, align 4
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %66, align 4
  %67 = or i64 %41, 40
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %69, align 4
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %71, align 4
  %72 = or i64 %41, 48
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %74, align 4
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %76, align 4
  %77 = or i64 %41, 56
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %77
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %79, align 4
  %80 = getelementptr inbounds i32, i32* %78, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %81, align 4
  %82 = add i64 %41, 64
  %83 = add i64 %42, -8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %40, !llvm.loop !33

85:                                               ; preds = %40, %26
  %86 = phi i64 [ 0, %26 ], [ %82, %40 ]
  %87 = icmp eq i64 %36, 0
  br i1 %87, label %98, label %88

88:                                               ; preds = %85, %88
  %89 = phi i64 [ %95, %88 ], [ %86, %85 ]
  %90 = phi i64 [ %96, %88 ], [ %36, %85 ]
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %89
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %92, align 4
  %93 = getelementptr inbounds i32, i32* %91, i64 4
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %94, align 4
  %95 = add i64 %89, 8
  %96 = add i64 %90, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %88, !llvm.loop !34

98:                                               ; preds = %88, %85
  %99 = icmp eq i64 %22, %27
  br i1 %99, label %100, label %24

100:                                              ; preds = %106, %98, %1
  %101 = shl i64 %3, 32
  %102 = ashr exact i64 %101, 32
  %103 = getelementptr inbounds i32, i32* %14, i64 %102
  store i32 1, i32* %103, align 4
  %104 = add nsw i32 %4, 1
  %105 = getelementptr inbounds i32, i32* %15, i64 %102
  store i32 %104, i32* %105, align 4
  br i1 %16, label %111, label %227

106:                                              ; preds = %24, %106
  %107 = phi i64 [ %109, %106 ], [ %25, %24 ]
  %108 = getelementptr inbounds i32, i32* %14, i64 %107
  store i32 %9, i32* %108, align 4
  %109 = add nsw i64 %107, 1
  %110 = icmp eq i64 %109, %19
  br i1 %110, label %100, label %106, !llvm.loop !35

111:                                              ; preds = %100
  %112 = add i64 %101, -4294967296
  %113 = ashr exact i64 %112, 32
  %114 = getelementptr inbounds i8, i8* %6, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = shl i64 %3, 32
  %117 = ashr exact i64 %116, 32
  br label %118

118:                                              ; preds = %111, %172
  %119 = phi i32 [ %4, %111 ], [ %174, %172 ]
  %120 = phi i32 [ %104, %111 ], [ %173, %172 ]
  %121 = add nsw i32 %119, -1
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i8, i8* %6, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = icmp sgt i32 %120, %4
  br i1 %125, label %144, label %126

126:                                              ; preds = %118, %140
  %127 = phi i32 [ %142, %140 ], [ %120, %118 ]
  %128 = add nsw i32 %127, -1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i8, i8* %6, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = icmp eq i8 %124, %131
  br i1 %132, label %144, label %133

133:                                              ; preds = %126
  %134 = sext i32 %127 to i64
  %135 = getelementptr inbounds i32, i32* %14, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, %9
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = sub nsw i32 %127, %119
  store i32 %139, i32* %135, align 4
  br label %140

140:                                              ; preds = %138, %133
  %141 = getelementptr inbounds i32, i32* %15, i64 %134
  %142 = load i32, i32* %141, align 4
  %143 = icmp sgt i32 %142, %4
  br i1 %143, label %144, label %126

144:                                              ; preds = %140, %126, %118
  %145 = phi i32 [ %120, %118 ], [ %127, %126 ], [ %142, %140 ]
  %146 = add nsw i32 %145, -1
  %147 = getelementptr inbounds i32, i32* %15, i64 %122
  store i32 %146, i32* %147, align 4
  %148 = icmp eq i32 %146, %4
  %149 = icmp sgt i32 %121, %8
  %150 = and i1 %148, %149
  br i1 %150, label %151, label %172

151:                                              ; preds = %144, %163
  %152 = phi i64 [ %153, %163 ], [ %122, %144 ]
  %153 = add nsw i64 %152, -1
  %154 = getelementptr inbounds i8, i8* %6, i64 %153
  %155 = load i8, i8* %154, align 1
  %156 = icmp eq i8 %155, %115
  br i1 %156, label %166, label %157

157:                                              ; preds = %151
  %158 = load i32, i32* %103, align 4
  %159 = icmp eq i32 %158, %9
  br i1 %159, label %160, label %163

160:                                              ; preds = %157
  %161 = sub nsw i64 %117, %152
  %162 = trunc i64 %161 to i32
  store i32 %162, i32* %103, align 4
  br label %163

163:                                              ; preds = %160, %157
  %164 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %4, i32* %164, align 4
  %165 = icmp sgt i64 %153, %12
  br i1 %165, label %151, label %170

166:                                              ; preds = %151
  %167 = trunc i64 %153 to i32
  %168 = add nsw i32 %145, -2
  %169 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %168, i32* %169, align 4
  br label %172

170:                                              ; preds = %163
  %171 = trunc i64 %153 to i32
  br label %172

172:                                              ; preds = %170, %166, %144
  %173 = phi i32 [ %168, %166 ], [ %146, %144 ], [ %4, %170 ]
  %174 = phi i32 [ %167, %166 ], [ %121, %144 ], [ %171, %170 ]
  %175 = icmp sgt i32 %174, %8
  br i1 %175, label %118, label %176

176:                                              ; preds = %172
  %177 = icmp sge i32 %173, %4
  %178 = icmp sgt i32 %8, %4
  %179 = or i1 %177, %178
  br i1 %179, label %227, label %180

180:                                              ; preds = %176
  %181 = shl i64 %3, 32
  %182 = ashr exact i64 %181, 32
  %183 = add nsw i64 %182, 1
  %184 = sub nsw i64 %183, %12
  %185 = and i64 %184, 1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %202, label %187

187:                                              ; preds = %180
  %188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, %9
  br i1 %190, label %191, label %193

191:                                              ; preds = %187
  %192 = sub nsw i32 %173, %8
  store i32 %192, i32* %188, align 4
  br label %193

193:                                              ; preds = %191, %187
  %194 = icmp eq i32 %173, %8
  br i1 %194, label %195, label %199

195:                                              ; preds = %193
  %196 = sext i32 %173 to i64
  %197 = getelementptr inbounds i32, i32* %15, i64 %196
  %198 = load i32, i32* %197, align 4
  br label %199

199:                                              ; preds = %195, %193
  %200 = phi i32 [ %198, %195 ], [ %173, %193 ]
  %201 = add nsw i64 %12, 1
  br label %202

202:                                              ; preds = %180, %199
  %203 = phi i64 [ %12, %180 ], [ %201, %199 ]
  %204 = phi i32 [ %173, %180 ], [ %200, %199 ]
  %205 = icmp eq i64 %182, %12
  br i1 %205, label %227, label %206

206:                                              ; preds = %202, %237
  %207 = phi i64 [ %239, %237 ], [ %203, %202 ]
  %208 = phi i32 [ %238, %237 ], [ %204, %202 ]
  %209 = getelementptr inbounds i32, i32* %14, i64 %207
  %210 = load i32, i32* %209, align 4
  %211 = icmp eq i32 %210, %9
  br i1 %211, label %212, label %214

212:                                              ; preds = %206
  %213 = sub nsw i32 %208, %8
  store i32 %213, i32* %209, align 4
  br label %214

214:                                              ; preds = %212, %206
  %215 = trunc i64 %207 to i32
  %216 = icmp eq i32 %208, %215
  br i1 %216, label %217, label %221

217:                                              ; preds = %214
  %218 = sext i32 %208 to i64
  %219 = getelementptr inbounds i32, i32* %15, i64 %218
  %220 = load i32, i32* %219, align 4
  br label %221

221:                                              ; preds = %214, %217
  %222 = phi i32 [ %220, %217 ], [ %208, %214 ]
  %223 = add nsw i64 %207, 1
  %224 = getelementptr inbounds i32, i32* %14, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = icmp eq i32 %225, %9
  br i1 %226, label %228, label %230

227:                                              ; preds = %202, %237, %176, %100
  ret void

228:                                              ; preds = %221
  %229 = sub nsw i32 %222, %8
  store i32 %229, i32* %224, align 4
  br label %230

230:                                              ; preds = %228, %221
  %231 = trunc i64 %223 to i32
  %232 = icmp eq i32 %222, %231
  br i1 %232, label %233, label %237

233:                                              ; preds = %230
  %234 = sext i32 %222 to i64
  %235 = getelementptr inbounds i32, i32* %15, i64 %234
  %236 = load i32, i32* %235, align 4
  br label %237

237:                                              ; preds = %233, %230
  %238 = phi i32 [ %236, %233 ], [ %222, %230 ]
  %239 = add nsw i64 %207, 2
  %240 = icmp slt i64 %223, %117
  br i1 %240, label %206, label %227
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhhE16BoyerMooreSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %15 = sext i32 %12 to i64
  %16 = sub nsw i64 0, %15
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 122, i64 %16
  %18 = add nsw i32 %10, -1
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %6, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = sub nsw i32 %9, %10
  %23 = icmp slt i32 %22, %3
  br i1 %23, label %96, label %24

24:                                               ; preds = %4
  %25 = icmp sgt i32 %10, 0
  %26 = zext i8 %21 to i64
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %26
  br i1 %25, label %28, label %82

28:                                               ; preds = %24
  %29 = shl i64 %8, 32
  %30 = ashr exact i64 %29, 32
  br label %31

31:                                               ; preds = %45, %28
  %32 = phi i32 [ %3, %28 ], [ %46, %45 ]
  %33 = add nsw i32 %32, %18
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i8, i8* %1, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %21, %36
  br i1 %37, label %80, label %38

38:                                               ; preds = %31
  %39 = zext i8 %36 to i64
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = sub nsw i32 %18, %41
  %43 = add nsw i32 %42, %32
  %44 = icmp sgt i32 %43, %22
  br i1 %44, label %96, label %45

45:                                               ; preds = %38, %74
  %46 = phi i32 [ %43, %38 ], [ %76, %74 ]
  br label %31

47:                                               ; preds = %80, %78
  %48 = phi i64 [ %30, %80 ], [ %49, %78 ]
  %49 = add i64 %48, -1
  %50 = getelementptr inbounds i8, i8* %6, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = add nsw i64 %49, %81
  %53 = getelementptr inbounds i8, i8* %1, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %51, %54
  br i1 %55, label %78, label %56

56:                                               ; preds = %47
  %57 = trunc i64 %49 to i32
  %58 = icmp sgt i32 %12, %57
  br i1 %58, label %71, label %59

59:                                               ; preds = %56
  %60 = shl i64 %49, 32
  %61 = add i64 %60, 4294967296
  %62 = ashr exact i64 %61, 32
  %63 = getelementptr inbounds i32, i32* %17, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = zext i8 %54 to i64
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %65
  %67 = load i32, i32* %66, align 4
  %68 = sub nsw i32 %57, %67
  %69 = icmp sgt i32 %64, %68
  %70 = select i1 %69, i32 %64, i32 %68
  br label %74

71:                                               ; preds = %56
  %72 = load i32, i32* %27, align 4
  %73 = sub nsw i32 %18, %72
  br label %74

74:                                               ; preds = %71, %59
  %75 = phi i32 [ %73, %71 ], [ %70, %59 ]
  %76 = add nsw i32 %75, %32
  %77 = icmp sgt i32 %76, %22
  br i1 %77, label %96, label %45

78:                                               ; preds = %47
  %79 = icmp sgt i64 %49, 0
  br i1 %79, label %47, label %96

80:                                               ; preds = %31
  %81 = sext i32 %32 to i64
  br label %47

82:                                               ; preds = %24, %89
  %83 = phi i32 [ %94, %89 ], [ %3, %24 ]
  %84 = add nsw i32 %83, %18
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %1, i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %21, %87
  br i1 %88, label %96, label %89

89:                                               ; preds = %82
  %90 = zext i8 %87 to i64
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %90
  %92 = load i32, i32* %91, align 4
  %93 = sub nsw i32 %18, %92
  %94 = add nsw i32 %93, %83
  %95 = icmp sgt i32 %94, %22
  br i1 %95, label %96, label %82

96:                                               ; preds = %89, %82, %74, %38, %78, %4
  %97 = phi i32 [ -1, %4 ], [ %32, %78 ], [ -1, %38 ], [ -1, %74 ], [ %83, %82 ], [ -1, %89 ]
  ret i32 %97
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIthE10FailSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1236"*, i8*, i64, i32) #0 comdat align 2 {
  ret i32 -1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIthE16SingleCharSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1236"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = load i16, i16* %6, align 2
  %8 = icmp ugt i16 %7, 255
  br i1 %8, label %48, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %0, i64 0, i32 1, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %2 to i32
  %13 = trunc i64 %11 to i32
  %14 = sub nsw i32 %12, %13
  %15 = add nsw i32 %14, 1
  %16 = trunc i16 %7 to i8
  %17 = lshr i16 %7, 8
  %18 = trunc i16 %17 to i8
  %19 = icmp ult i8 %16, %18
  %20 = select i1 %19, i8 %18, i8 %16
  %21 = zext i8 %20 to i32
  %22 = ptrtoint i8* %1 to i64
  %23 = and i16 %7, 255
  %24 = zext i16 %23 to i32
  br label %25

25:                                               ; preds = %43, %9
  %26 = phi i32 [ %3, %9 ], [ %44, %43 ]
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %1, i64 %27
  %29 = sub i32 %15, %26
  %30 = sext i32 %29 to i64
  %31 = tail call i8* @memchr(i8* %28, i32 %21, i64 %30) #19
  %32 = icmp eq i8* %31, null
  br i1 %32, label %48, label %33

33:                                               ; preds = %25
  %34 = ptrtoint i8* %31 to i64
  %35 = sub i64 %34, %22
  %36 = trunc i64 %35 to i32
  %37 = shl i64 %35, 32
  %38 = ashr exact i64 %37, 32
  %39 = getelementptr inbounds i8, i8* %1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = icmp eq i32 %41, %24
  br i1 %42, label %46, label %43

43:                                               ; preds = %33
  %44 = add nsw i32 %36, 1
  %45 = icmp sgt i32 %14, %36
  br i1 %45, label %25, label %48

46:                                               ; preds = %33
  %47 = trunc i64 %35 to i32
  br label %48

48:                                               ; preds = %43, %25, %46, %4
  %49 = phi i32 [ -1, %4 ], [ %47, %46 ], [ -1, %25 ], [ -1, %43 ]
  ret i32 %49
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIthE12LinearSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1236"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %75, label %13

13:                                               ; preds = %4
  %14 = load i16, i16* %6, align 2
  %15 = add nsw i32 %11, 1
  %16 = trunc i16 %14 to i8
  %17 = lshr i16 %14, 8
  %18 = trunc i16 %17 to i8
  %19 = icmp ult i8 %16, %18
  %20 = select i1 %19, i8 %18, i8 %16
  %21 = zext i8 %20 to i32
  %22 = ptrtoint i8* %1 to i64
  %23 = and i16 %14, 255
  %24 = zext i16 %23 to i32
  %25 = getelementptr inbounds i16, i16* %6, i64 1
  %26 = shl i64 %8, 32
  %27 = add i64 %26, -4294967296
  %28 = ashr exact i64 %27, 32
  br label %31

29:                                               ; preds = %61
  %30 = icmp sgt i32 %11, %55
  br i1 %30, label %52, label %75

31:                                               ; preds = %52, %13
  %32 = phi i32 [ %3, %13 ], [ %53, %52 ]
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %1, i64 %33
  %35 = sub i32 %15, %32
  %36 = sext i32 %35 to i64
  %37 = tail call i8* @memchr(i8* %34, i32 %21, i64 %36) #19
  %38 = icmp eq i8* %37, null
  br i1 %38, label %75, label %39

39:                                               ; preds = %31
  %40 = ptrtoint i8* %37 to i64
  %41 = sub i64 %40, %22
  %42 = trunc i64 %41 to i32
  %43 = shl i64 %41, 32
  %44 = ashr exact i64 %43, 32
  %45 = getelementptr inbounds i8, i8* %1, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = icmp eq i32 %47, %24
  br i1 %48, label %54, label %49

49:                                               ; preds = %39
  %50 = add nsw i32 %42, 1
  %51 = icmp sgt i32 %11, %42
  br i1 %51, label %52, label %75

52:                                               ; preds = %49, %29
  %53 = phi i32 [ %50, %49 ], [ %58, %29 ]
  br label %31

54:                                               ; preds = %39
  %55 = trunc i64 %41 to i32
  %56 = icmp eq i32 %55, -1
  br i1 %56, label %75, label %57

57:                                               ; preds = %54
  %58 = add nuw nsw i32 %55, 1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %1, i64 %59
  br label %61

61:                                               ; preds = %70, %57
  %62 = phi i64 [ %71, %70 ], [ 0, %57 ]
  %63 = getelementptr inbounds i16, i16* %25, i64 %62
  %64 = load i16, i16* %63, align 2
  %65 = zext i16 %64 to i32
  %66 = getelementptr inbounds i8, i8* %60, i64 %62
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = icmp eq i32 %65, %68
  br i1 %69, label %70, label %29

70:                                               ; preds = %61
  %71 = add nuw nsw i64 %62, 1
  %72 = icmp slt i64 %71, %28
  br i1 %72, label %61, label %73

73:                                               ; preds = %70
  %74 = trunc i64 %41 to i32
  br label %75

75:                                               ; preds = %29, %54, %49, %31, %73, %4
  %76 = phi i32 [ -1, %4 ], [ %74, %73 ], [ -1, %31 ], [ -1, %49 ], [ -1, %54 ], [ -1, %29 ]
  ret i32 %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIthE13InitialSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1236"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %275, label %13

13:                                               ; preds = %4
  %14 = shl i32 %9, 2
  %15 = sub nsw i32 -10, %14
  %16 = add nsw i32 %11, 1
  %17 = ptrtoint i8* %1 to i64
  %18 = shl i64 %8, 32
  %19 = ashr exact i64 %18, 32
  br label %20

20:                                               ; preds = %269, %13
  %21 = phi i32 [ %15, %13 ], [ %270, %269 ]
  %22 = phi i32 [ %3, %13 ], [ %271, %269 ]
  %23 = add nsw i32 %21, 1
  %24 = icmp slt i32 %21, 0
  br i1 %24, label %25, label %82

25:                                               ; preds = %20
  %26 = load i16, i16* %6, align 2
  %27 = trunc i16 %26 to i8
  %28 = lshr i16 %26, 8
  %29 = trunc i16 %28 to i8
  %30 = icmp ult i8 %27, %29
  %31 = select i1 %30, i8 %29, i8 %27
  %32 = zext i8 %31 to i32
  %33 = and i16 %26, 255
  %34 = zext i16 %33 to i32
  br label %35

35:                                               ; preds = %53, %25
  %36 = phi i32 [ %22, %25 ], [ %54, %53 ]
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %1, i64 %37
  %39 = sub i32 %16, %36
  %40 = sext i32 %39 to i64
  %41 = tail call i8* @memchr(i8* %38, i32 %32, i64 %40) #19
  %42 = icmp eq i8* %41, null
  br i1 %42, label %275, label %43

43:                                               ; preds = %35
  %44 = ptrtoint i8* %41 to i64
  %45 = sub i64 %44, %17
  %46 = trunc i64 %45 to i32
  %47 = shl i64 %45, 32
  %48 = ashr exact i64 %47, 32
  %49 = getelementptr inbounds i8, i8* %1, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = icmp eq i32 %51, %34
  br i1 %52, label %56, label %53

53:                                               ; preds = %43
  %54 = add nsw i32 %46, 1
  %55 = icmp sgt i32 %11, %46
  br i1 %55, label %35, label %275

56:                                               ; preds = %43
  %57 = trunc i64 %45 to i32
  %58 = icmp eq i32 %57, -1
  br i1 %58, label %275, label %59

59:                                               ; preds = %56
  %60 = shl i64 %45, 32
  %61 = ashr exact i64 %60, 32
  br label %62

62:                                               ; preds = %59, %73
  %63 = phi i64 [ 1, %59 ], [ %74, %73 ]
  %64 = phi i32 [ 1, %59 ], [ %75, %73 ]
  %65 = getelementptr inbounds i16, i16* %6, i64 %63
  %66 = load i16, i16* %65, align 2
  %67 = zext i16 %66 to i32
  %68 = add nsw i64 %63, %61
  %69 = getelementptr inbounds i8, i8* %1, i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = icmp eq i32 %67, %71
  br i1 %72, label %73, label %77

73:                                               ; preds = %62
  %74 = add nuw nsw i64 %63, 1
  %75 = add nuw nsw i32 %64, 1
  %76 = icmp slt i64 %74, %19
  br i1 %76, label %62, label %79

77:                                               ; preds = %62
  %78 = trunc i64 %63 to i32
  br label %79

79:                                               ; preds = %73, %77
  %80 = phi i32 [ %78, %77 ], [ %75, %73 ]
  %81 = icmp eq i32 %80, %9
  br i1 %81, label %273, label %269

82:                                               ; preds = %20
  %83 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %0, i64 0, i32 0
  %84 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %83, align 8
  %85 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %222, label %88

88:                                               ; preds = %82
  %89 = add nsw i32 %86, -1
  %90 = insertelement <4 x i32> undef, i32 %89, i32 0
  %91 = shufflevector <4 x i32> %90, <4 x i32> undef, <4 x i32> zeroinitializer
  %92 = insertelement <4 x i32> undef, i32 %89, i32 0
  %93 = shufflevector <4 x i32> %92, <4 x i32> undef, <4 x i32> zeroinitializer
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 0
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %95, align 4
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 4
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %97, align 4
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 8
  %99 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %99, align 4
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 12
  %101 = bitcast i32* %100 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %101, align 4
  %102 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 16
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %103, align 4
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 20
  %105 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %105, align 4
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 24
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %107, align 4
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 28
  %109 = bitcast i32* %108 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %109, align 4
  %110 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 32
  %111 = bitcast i32* %110 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %111, align 4
  %112 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 36
  %113 = bitcast i32* %112 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %113, align 4
  %114 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 40
  %115 = bitcast i32* %114 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %115, align 4
  %116 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 44
  %117 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %117, align 4
  %118 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 48
  %119 = bitcast i32* %118 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %119, align 4
  %120 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 52
  %121 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %121, align 4
  %122 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 56
  %123 = bitcast i32* %122 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %123, align 4
  %124 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 60
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %125, align 4
  %126 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 64
  %127 = bitcast i32* %126 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %127, align 4
  %128 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 68
  %129 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %129, align 4
  %130 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 72
  %131 = bitcast i32* %130 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %131, align 4
  %132 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 76
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %133, align 4
  %134 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 80
  %135 = bitcast i32* %134 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %135, align 4
  %136 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 84
  %137 = bitcast i32* %136 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %137, align 4
  %138 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 88
  %139 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %139, align 4
  %140 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 92
  %141 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %141, align 4
  %142 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 96
  %143 = bitcast i32* %142 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %143, align 4
  %144 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 100
  %145 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %145, align 4
  %146 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 104
  %147 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %147, align 4
  %148 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 108
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %149, align 4
  %150 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 112
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %151, align 4
  %152 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 116
  %153 = bitcast i32* %152 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %153, align 4
  %154 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 120
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %155, align 4
  %156 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 124
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %157, align 4
  %158 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 128
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %159, align 4
  %160 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 132
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %161, align 4
  %162 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 136
  %163 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %163, align 4
  %164 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 140
  %165 = bitcast i32* %164 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %165, align 4
  %166 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 144
  %167 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %167, align 4
  %168 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 148
  %169 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %169, align 4
  %170 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 152
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %171, align 4
  %172 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 156
  %173 = bitcast i32* %172 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %173, align 4
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 160
  %175 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %175, align 4
  %176 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 164
  %177 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %177, align 4
  %178 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 168
  %179 = bitcast i32* %178 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %179, align 4
  %180 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 172
  %181 = bitcast i32* %180 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %181, align 4
  %182 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 176
  %183 = bitcast i32* %182 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %183, align 4
  %184 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 180
  %185 = bitcast i32* %184 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %185, align 4
  %186 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 184
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %187, align 4
  %188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 188
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %189, align 4
  %190 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 192
  %191 = bitcast i32* %190 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %191, align 4
  %192 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 196
  %193 = bitcast i32* %192 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %193, align 4
  %194 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 200
  %195 = bitcast i32* %194 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %195, align 4
  %196 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 204
  %197 = bitcast i32* %196 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %197, align 4
  %198 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 208
  %199 = bitcast i32* %198 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %199, align 4
  %200 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 212
  %201 = bitcast i32* %200 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %201, align 4
  %202 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 216
  %203 = bitcast i32* %202 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %203, align 4
  %204 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 220
  %205 = bitcast i32* %204 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %205, align 4
  %206 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 224
  %207 = bitcast i32* %206 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %207, align 4
  %208 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 228
  %209 = bitcast i32* %208 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %209, align 4
  %210 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 232
  %211 = bitcast i32* %210 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %211, align 4
  %212 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 236
  %213 = bitcast i32* %212 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %213, align 4
  %214 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 240
  %215 = bitcast i32* %214 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %215, align 4
  %216 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 244
  %217 = bitcast i32* %216 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %217, align 4
  %218 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 248
  %219 = bitcast i32* %218 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %219, align 4
  %220 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 252
  %221 = bitcast i32* %220 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %221, align 4
  br label %225

222:                                              ; preds = %82
  %223 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 0
  %224 = bitcast i32* %223 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %224, i8 -1, i64 1024, i1 false) #6
  br label %225

225:                                              ; preds = %88, %222
  %226 = add i32 %9, -1
  %227 = icmp slt i32 %86, %226
  br i1 %227, label %228, label %266

228:                                              ; preds = %225
  %229 = sext i32 %86 to i64
  %230 = sext i32 %226 to i64
  %231 = sub nsw i64 %230, %229
  %232 = xor i64 %229, -1
  %233 = and i64 %231, 1
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %243, label %235

235:                                              ; preds = %228
  %236 = load i16*, i16** %5, align 8
  %237 = getelementptr inbounds i16, i16* %236, i64 %229
  %238 = load i16, i16* %237, align 2
  %239 = and i16 %238, 255
  %240 = zext i16 %239 to i64
  %241 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 %240
  store i32 %86, i32* %241, align 4
  %242 = add nsw i64 %229, 1
  br label %243

243:                                              ; preds = %228, %235
  %244 = phi i64 [ %229, %228 ], [ %242, %235 ]
  %245 = sub nsw i64 0, %230
  %246 = icmp eq i64 %232, %245
  br i1 %246, label %266, label %247

247:                                              ; preds = %243, %247
  %248 = phi i64 [ %264, %247 ], [ %244, %243 ]
  %249 = load i16*, i16** %5, align 8
  %250 = getelementptr inbounds i16, i16* %249, i64 %248
  %251 = load i16, i16* %250, align 2
  %252 = and i16 %251, 255
  %253 = zext i16 %252 to i64
  %254 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 %253
  %255 = trunc i64 %248 to i32
  store i32 %255, i32* %254, align 4
  %256 = add nsw i64 %248, 1
  %257 = load i16*, i16** %5, align 8
  %258 = getelementptr inbounds i16, i16* %257, i64 %256
  %259 = load i16, i16* %258, align 2
  %260 = and i16 %259, 255
  %261 = zext i16 %260 to i64
  %262 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 %261
  %263 = trunc i64 %256 to i32
  store i32 %263, i32* %262, align 4
  %264 = add nsw i64 %248, 2
  %265 = icmp eq i64 %264, %230
  br i1 %265, label %266, label %247

266:                                              ; preds = %243, %247, %225
  %267 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1236"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIthE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch.1236"*, i8*, i64, i32)** %267, align 8
  %268 = tail call i32 @_ZN2v88internal12StringSearchIthE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1236"* %0, i8* %1, i64 %2, i32 %22)
  br label %275

269:                                              ; preds = %79
  %270 = add nsw i32 %23, %80
  %271 = add nsw i32 %57, 1
  %272 = icmp sgt i32 %11, %57
  br i1 %272, label %20, label %275

273:                                              ; preds = %79
  %274 = trunc i64 %45 to i32
  br label %275

275:                                              ; preds = %56, %269, %53, %35, %273, %4, %266
  %276 = phi i32 [ %268, %266 ], [ -1, %4 ], [ %274, %273 ], [ -1, %35 ], [ -1, %53 ], [ -1, %269 ], [ -1, %56 ]
  ret i32 %276
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIthE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1236"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %0, i64 0, i32 0
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = add nsw i32 %10, -1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i16, i16* %6, i64 %14
  %16 = load i16, i16* %15, align 2
  %17 = and i16 %16, 255
  %18 = zext i16 %17 to i64
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = sub nsw i32 %13, %20
  %22 = sub nsw i32 %9, %10
  %23 = zext i16 %16 to i32
  %24 = add i32 %10, -2
  %25 = icmp sgt i32 %24, -1
  %26 = sub i32 %10, %21
  br i1 %25, label %27, label %73

27:                                               ; preds = %4
  %28 = sub nsw i32 0, %10
  %29 = sext i32 %24 to i64
  br label %30

30:                                               ; preds = %27, %62
  %31 = phi i32 [ %64, %62 ], [ %3, %27 ]
  %32 = phi i32 [ %66, %62 ], [ %28, %27 ]
  %33 = icmp sgt i32 %31, %22
  br i1 %33, label %93, label %34

34:                                               ; preds = %30, %43
  %35 = phi i32 [ %48, %43 ], [ %31, %30 ]
  %36 = phi i32 [ %50, %43 ], [ %32, %30 ]
  %37 = add nsw i32 %35, %13
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = icmp eq i32 %23, %41
  br i1 %42, label %71, label %43

43:                                               ; preds = %34
  %44 = zext i8 %40 to i64
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = sub nsw i32 %13, %46
  %48 = add nsw i32 %47, %35
  %49 = add i32 %36, 1
  %50 = sub i32 %49, %47
  %51 = icmp sgt i32 %48, %22
  br i1 %51, label %93, label %34

52:                                               ; preds = %71, %68
  %53 = phi i64 [ %29, %71 ], [ %69, %68 ]
  %54 = getelementptr inbounds i16, i16* %6, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = add nsw i64 %53, %72
  %58 = getelementptr inbounds i8, i8* %1, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = icmp eq i32 %56, %60
  br i1 %61, label %68, label %62

62:                                               ; preds = %52
  %63 = trunc i64 %53 to i32
  %64 = add nsw i32 %35, %21
  %65 = add i32 %26, %36
  %66 = sub i32 %65, %63
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %90, label %30

68:                                               ; preds = %52
  %69 = add nsw i64 %53, -1
  %70 = icmp sgt i64 %53, 0
  br i1 %70, label %52, label %93

71:                                               ; preds = %34
  %72 = sext i32 %35 to i64
  br label %52

73:                                               ; preds = %4
  %74 = icmp slt i32 %22, %3
  br i1 %74, label %93, label %75

75:                                               ; preds = %73, %83
  %76 = phi i32 [ %88, %83 ], [ %3, %73 ]
  %77 = add nsw i32 %76, %13
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i8, i8* %1, i64 %78
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = icmp eq i32 %23, %81
  br i1 %82, label %93, label %83

83:                                               ; preds = %75
  %84 = zext i8 %80 to i64
  %85 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = sub nsw i32 %13, %86
  %88 = add nsw i32 %87, %76
  %89 = icmp sgt i32 %88, %22
  br i1 %89, label %93, label %75

90:                                               ; preds = %62
  tail call void @_ZN2v88internal12StringSearchIthE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch.1236"* %0)
  %91 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1236"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIthE16BoyerMooreSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch.1236"*, i8*, i64, i32)** %91, align 8
  %92 = tail call i32 @_ZN2v88internal12StringSearchIthE16BoyerMooreSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1236"* %0, i8* %1, i64 %2, i32 %64)
  br label %93

93:                                               ; preds = %83, %75, %30, %43, %68, %73, %90
  %94 = phi i32 [ %92, %90 ], [ -1, %73 ], [ %35, %68 ], [ -1, %43 ], [ -1, %30 ], [ %76, %75 ], [ -1, %83 ]
  ret i32 %94
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StringSearchIthE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch.1236"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %0, i64 0, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = sub nsw i32 %4, %8
  %10 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = sext i32 %8 to i64
  %13 = sub nsw i64 0, %12
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %13
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 123, i64 %13
  %16 = icmp slt i32 %8, %4
  br i1 %16, label %17, label %100

17:                                               ; preds = %1
  %18 = shl i64 %3, 32
  %19 = ashr exact i64 %18, 32
  %20 = shl i64 %3, 32
  %21 = ashr exact i64 %20, 32
  %22 = sub nsw i64 %21, %12
  %23 = icmp ult i64 %22, 8
  br i1 %23, label %24, label %26

24:                                               ; preds = %98, %17
  %25 = phi i64 [ %12, %17 ], [ %28, %98 ]
  br label %106

26:                                               ; preds = %17
  %27 = and i64 %22, -8
  %28 = add nsw i64 %27, %12
  %29 = insertelement <4 x i32> undef, i32 %9, i32 0
  %30 = shufflevector <4 x i32> %29, <4 x i32> undef, <4 x i32> zeroinitializer
  %31 = insertelement <4 x i32> undef, i32 %9, i32 0
  %32 = shufflevector <4 x i32> %31, <4 x i32> undef, <4 x i32> zeroinitializer
  %33 = add nsw i64 %27, -8
  %34 = lshr exact i64 %33, 3
  %35 = add nuw nsw i64 %34, 1
  %36 = and i64 %35, 7
  %37 = icmp ult i64 %33, 56
  br i1 %37, label %85, label %38

38:                                               ; preds = %26
  %39 = sub nsw i64 %35, %36
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi i64 [ 0, %38 ], [ %82, %40 ]
  %42 = phi i64 [ %39, %38 ], [ %83, %40 ]
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %41
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %44, align 4
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %46, align 4
  %47 = or i64 %41, 8
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %49, align 4
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %51, align 4
  %52 = or i64 %41, 16
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %54, align 4
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %56, align 4
  %57 = or i64 %41, 24
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %59, align 4
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %61, align 4
  %62 = or i64 %41, 32
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %64, align 4
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %66, align 4
  %67 = or i64 %41, 40
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %69, align 4
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %71, align 4
  %72 = or i64 %41, 48
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %74, align 4
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %76, align 4
  %77 = or i64 %41, 56
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %77
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %79, align 4
  %80 = getelementptr inbounds i32, i32* %78, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %81, align 4
  %82 = add i64 %41, 64
  %83 = add i64 %42, -8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %40, !llvm.loop !37

85:                                               ; preds = %40, %26
  %86 = phi i64 [ 0, %26 ], [ %82, %40 ]
  %87 = icmp eq i64 %36, 0
  br i1 %87, label %98, label %88

88:                                               ; preds = %85, %88
  %89 = phi i64 [ %95, %88 ], [ %86, %85 ]
  %90 = phi i64 [ %96, %88 ], [ %36, %85 ]
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %89
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %92, align 4
  %93 = getelementptr inbounds i32, i32* %91, i64 4
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %94, align 4
  %95 = add i64 %89, 8
  %96 = add i64 %90, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %88, !llvm.loop !38

98:                                               ; preds = %88, %85
  %99 = icmp eq i64 %22, %27
  br i1 %99, label %100, label %24

100:                                              ; preds = %106, %98, %1
  %101 = shl i64 %3, 32
  %102 = ashr exact i64 %101, 32
  %103 = getelementptr inbounds i32, i32* %14, i64 %102
  store i32 1, i32* %103, align 4
  %104 = add nsw i32 %4, 1
  %105 = getelementptr inbounds i32, i32* %15, i64 %102
  store i32 %104, i32* %105, align 4
  br i1 %16, label %111, label %227

106:                                              ; preds = %24, %106
  %107 = phi i64 [ %109, %106 ], [ %25, %24 ]
  %108 = getelementptr inbounds i32, i32* %14, i64 %107
  store i32 %9, i32* %108, align 4
  %109 = add nsw i64 %107, 1
  %110 = icmp eq i64 %109, %19
  br i1 %110, label %100, label %106, !llvm.loop !39

111:                                              ; preds = %100
  %112 = add i64 %101, -4294967296
  %113 = ashr exact i64 %112, 32
  %114 = getelementptr inbounds i16, i16* %6, i64 %113
  %115 = load i16, i16* %114, align 2
  %116 = shl i64 %3, 32
  %117 = ashr exact i64 %116, 32
  br label %118

118:                                              ; preds = %111, %172
  %119 = phi i32 [ %4, %111 ], [ %174, %172 ]
  %120 = phi i32 [ %104, %111 ], [ %173, %172 ]
  %121 = add nsw i32 %119, -1
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i16, i16* %6, i64 %122
  %124 = load i16, i16* %123, align 2
  %125 = icmp sgt i32 %120, %4
  br i1 %125, label %144, label %126

126:                                              ; preds = %118, %140
  %127 = phi i32 [ %142, %140 ], [ %120, %118 ]
  %128 = add nsw i32 %127, -1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i16, i16* %6, i64 %129
  %131 = load i16, i16* %130, align 2
  %132 = icmp eq i16 %124, %131
  br i1 %132, label %144, label %133

133:                                              ; preds = %126
  %134 = sext i32 %127 to i64
  %135 = getelementptr inbounds i32, i32* %14, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, %9
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = sub nsw i32 %127, %119
  store i32 %139, i32* %135, align 4
  br label %140

140:                                              ; preds = %138, %133
  %141 = getelementptr inbounds i32, i32* %15, i64 %134
  %142 = load i32, i32* %141, align 4
  %143 = icmp sgt i32 %142, %4
  br i1 %143, label %144, label %126

144:                                              ; preds = %140, %126, %118
  %145 = phi i32 [ %120, %118 ], [ %127, %126 ], [ %142, %140 ]
  %146 = add nsw i32 %145, -1
  %147 = getelementptr inbounds i32, i32* %15, i64 %122
  store i32 %146, i32* %147, align 4
  %148 = icmp eq i32 %146, %4
  %149 = icmp sgt i32 %121, %8
  %150 = and i1 %148, %149
  br i1 %150, label %151, label %172

151:                                              ; preds = %144, %163
  %152 = phi i64 [ %153, %163 ], [ %122, %144 ]
  %153 = add nsw i64 %152, -1
  %154 = getelementptr inbounds i16, i16* %6, i64 %153
  %155 = load i16, i16* %154, align 2
  %156 = icmp eq i16 %155, %115
  br i1 %156, label %166, label %157

157:                                              ; preds = %151
  %158 = load i32, i32* %103, align 4
  %159 = icmp eq i32 %158, %9
  br i1 %159, label %160, label %163

160:                                              ; preds = %157
  %161 = sub nsw i64 %117, %152
  %162 = trunc i64 %161 to i32
  store i32 %162, i32* %103, align 4
  br label %163

163:                                              ; preds = %160, %157
  %164 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %4, i32* %164, align 4
  %165 = icmp sgt i64 %153, %12
  br i1 %165, label %151, label %170

166:                                              ; preds = %151
  %167 = trunc i64 %153 to i32
  %168 = add nsw i32 %145, -2
  %169 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %168, i32* %169, align 4
  br label %172

170:                                              ; preds = %163
  %171 = trunc i64 %153 to i32
  br label %172

172:                                              ; preds = %170, %166, %144
  %173 = phi i32 [ %168, %166 ], [ %146, %144 ], [ %4, %170 ]
  %174 = phi i32 [ %167, %166 ], [ %121, %144 ], [ %171, %170 ]
  %175 = icmp sgt i32 %174, %8
  br i1 %175, label %118, label %176

176:                                              ; preds = %172
  %177 = icmp sge i32 %173, %4
  %178 = icmp sgt i32 %8, %4
  %179 = or i1 %177, %178
  br i1 %179, label %227, label %180

180:                                              ; preds = %176
  %181 = shl i64 %3, 32
  %182 = ashr exact i64 %181, 32
  %183 = add nsw i64 %182, 1
  %184 = sub nsw i64 %183, %12
  %185 = and i64 %184, 1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %202, label %187

187:                                              ; preds = %180
  %188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, %9
  br i1 %190, label %191, label %193

191:                                              ; preds = %187
  %192 = sub nsw i32 %173, %8
  store i32 %192, i32* %188, align 4
  br label %193

193:                                              ; preds = %191, %187
  %194 = icmp eq i32 %173, %8
  br i1 %194, label %195, label %199

195:                                              ; preds = %193
  %196 = sext i32 %173 to i64
  %197 = getelementptr inbounds i32, i32* %15, i64 %196
  %198 = load i32, i32* %197, align 4
  br label %199

199:                                              ; preds = %195, %193
  %200 = phi i32 [ %198, %195 ], [ %173, %193 ]
  %201 = add nsw i64 %12, 1
  br label %202

202:                                              ; preds = %180, %199
  %203 = phi i64 [ %12, %180 ], [ %201, %199 ]
  %204 = phi i32 [ %173, %180 ], [ %200, %199 ]
  %205 = icmp eq i64 %182, %12
  br i1 %205, label %227, label %206

206:                                              ; preds = %202, %237
  %207 = phi i64 [ %239, %237 ], [ %203, %202 ]
  %208 = phi i32 [ %238, %237 ], [ %204, %202 ]
  %209 = getelementptr inbounds i32, i32* %14, i64 %207
  %210 = load i32, i32* %209, align 4
  %211 = icmp eq i32 %210, %9
  br i1 %211, label %212, label %214

212:                                              ; preds = %206
  %213 = sub nsw i32 %208, %8
  store i32 %213, i32* %209, align 4
  br label %214

214:                                              ; preds = %212, %206
  %215 = trunc i64 %207 to i32
  %216 = icmp eq i32 %208, %215
  br i1 %216, label %217, label %221

217:                                              ; preds = %214
  %218 = sext i32 %208 to i64
  %219 = getelementptr inbounds i32, i32* %15, i64 %218
  %220 = load i32, i32* %219, align 4
  br label %221

221:                                              ; preds = %214, %217
  %222 = phi i32 [ %220, %217 ], [ %208, %214 ]
  %223 = add nsw i64 %207, 1
  %224 = getelementptr inbounds i32, i32* %14, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = icmp eq i32 %225, %9
  br i1 %226, label %228, label %230

227:                                              ; preds = %202, %237, %176, %100
  ret void

228:                                              ; preds = %221
  %229 = sub nsw i32 %222, %8
  store i32 %229, i32* %224, align 4
  br label %230

230:                                              ; preds = %228, %221
  %231 = trunc i64 %223 to i32
  %232 = icmp eq i32 %222, %231
  br i1 %232, label %233, label %237

233:                                              ; preds = %230
  %234 = sext i32 %222 to i64
  %235 = getelementptr inbounds i32, i32* %15, i64 %234
  %236 = load i32, i32* %235, align 4
  br label %237

237:                                              ; preds = %233, %230
  %238 = phi i32 [ %236, %233 ], [ %222, %230 ]
  %239 = add nsw i64 %207, 2
  %240 = icmp slt i64 %223, %117
  br i1 %240, label %206, label %227
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIthE16BoyerMooreSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1236"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::StringSearch.1236", %"class.v8::internal::StringSearch.1236"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %15 = sext i32 %12 to i64
  %16 = sub nsw i64 0, %15
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 122, i64 %16
  %18 = add nsw i32 %10, -1
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i16, i16* %6, i64 %19
  %21 = load i16, i16* %20, align 2
  %22 = sub nsw i32 %9, %10
  %23 = icmp slt i32 %22, %3
  br i1 %23, label %102, label %24

24:                                               ; preds = %4
  %25 = zext i16 %21 to i32
  %26 = icmp sgt i32 %10, 0
  %27 = and i16 %21, 255
  %28 = zext i16 %27 to i64
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %28
  br i1 %26, label %30, label %87

30:                                               ; preds = %24
  %31 = shl i64 %8, 32
  %32 = ashr exact i64 %31, 32
  br label %33

33:                                               ; preds = %48, %30
  %34 = phi i32 [ %3, %30 ], [ %49, %48 ]
  %35 = add nsw i32 %34, %18
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = icmp eq i32 %25, %39
  br i1 %40, label %85, label %41

41:                                               ; preds = %33
  %42 = zext i8 %38 to i64
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = sub nsw i32 %18, %44
  %46 = add nsw i32 %45, %34
  %47 = icmp sgt i32 %46, %22
  br i1 %47, label %102, label %48

48:                                               ; preds = %41, %79
  %49 = phi i32 [ %46, %41 ], [ %81, %79 ]
  br label %33

50:                                               ; preds = %85, %83
  %51 = phi i64 [ %32, %85 ], [ %52, %83 ]
  %52 = add i64 %51, -1
  %53 = getelementptr inbounds i16, i16* %6, i64 %52
  %54 = load i16, i16* %53, align 2
  %55 = zext i16 %54 to i32
  %56 = add nsw i64 %52, %86
  %57 = getelementptr inbounds i8, i8* %1, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = icmp eq i32 %55, %59
  br i1 %60, label %83, label %61

61:                                               ; preds = %50
  %62 = trunc i64 %52 to i32
  %63 = icmp sgt i32 %12, %62
  br i1 %63, label %76, label %64

64:                                               ; preds = %61
  %65 = shl i64 %52, 32
  %66 = add i64 %65, 4294967296
  %67 = ashr exact i64 %66, 32
  %68 = getelementptr inbounds i32, i32* %17, i64 %67
  %69 = load i32, i32* %68, align 4
  %70 = zext i8 %58 to i64
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %70
  %72 = load i32, i32* %71, align 4
  %73 = sub nsw i32 %62, %72
  %74 = icmp sgt i32 %69, %73
  %75 = select i1 %74, i32 %69, i32 %73
  br label %79

76:                                               ; preds = %61
  %77 = load i32, i32* %29, align 4
  %78 = sub nsw i32 %18, %77
  br label %79

79:                                               ; preds = %76, %64
  %80 = phi i32 [ %78, %76 ], [ %75, %64 ]
  %81 = add nsw i32 %80, %34
  %82 = icmp sgt i32 %81, %22
  br i1 %82, label %102, label %48

83:                                               ; preds = %50
  %84 = icmp sgt i64 %52, 0
  br i1 %84, label %50, label %102

85:                                               ; preds = %33
  %86 = sext i32 %34 to i64
  br label %50

87:                                               ; preds = %24, %95
  %88 = phi i32 [ %100, %95 ], [ %3, %24 ]
  %89 = add nsw i32 %88, %18
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i8, i8* %1, i64 %90
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = icmp eq i32 %25, %93
  br i1 %94, label %102, label %95

95:                                               ; preds = %87
  %96 = zext i8 %92 to i64
  %97 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %96
  %98 = load i32, i32* %97, align 4
  %99 = sub nsw i32 %18, %98
  %100 = add nsw i32 %99, %88
  %101 = icmp sgt i32 %100, %22
  br i1 %101, label %102, label %87

102:                                              ; preds = %95, %87, %79, %41, %83, %4
  %103 = phi i32 [ -1, %4 ], [ %34, %83 ], [ -1, %41 ], [ -1, %79 ], [ %88, %87 ], [ -1, %95 ]
  ret i32 %103
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhtE12LinearSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1239"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1239", %"class.v8::internal::StringSearch.1239"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1239", %"class.v8::internal::StringSearch.1239"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %108, label %13

13:                                               ; preds = %4
  %14 = load i8, i8* %6, align 1
  %15 = add nsw i32 %11, 1
  %16 = icmp eq i8 %14, 0
  %17 = zext i8 %14 to i32
  %18 = ptrtoint i16* %1 to i64
  %19 = sext i32 %11 to i64
  %20 = getelementptr inbounds i8, i8* %6, i64 1
  %21 = shl i64 %8, 32
  %22 = add i64 %21, -4294967296
  %23 = ashr exact i64 %22, 32
  br i1 %16, label %24, label %58

24:                                               ; preds = %13, %54
  %25 = phi i32 [ %39, %54 ], [ %3, %13 ]
  %26 = sext i32 %25 to i64
  br label %27

27:                                               ; preds = %32, %24
  %28 = phi i64 [ %26, %24 ], [ %33, %32 ]
  %29 = getelementptr inbounds i16, i16* %1, i64 %28
  %30 = load i16, i16* %29, align 2
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %27
  %33 = add nsw i64 %28, 1
  %34 = icmp slt i64 %28, %19
  br i1 %34, label %27, label %108

35:                                               ; preds = %27
  %36 = trunc i64 %28 to i32
  %37 = icmp eq i32 %36, -1
  br i1 %37, label %108, label %38

38:                                               ; preds = %35
  %39 = add nuw nsw i32 %36, 1
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i16, i16* %1, i64 %40
  br label %42

42:                                               ; preds = %51, %38
  %43 = phi i64 [ %52, %51 ], [ 0, %38 ]
  %44 = getelementptr inbounds i8, i8* %20, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = getelementptr inbounds i16, i16* %41, i64 %43
  %48 = load i16, i16* %47, align 2
  %49 = zext i16 %48 to i32
  %50 = icmp eq i32 %46, %49
  br i1 %50, label %51, label %54

51:                                               ; preds = %42
  %52 = add nuw nsw i64 %43, 1
  %53 = icmp slt i64 %52, %23
  br i1 %53, label %42, label %104

54:                                               ; preds = %42
  %55 = icmp sgt i32 %11, %36
  br i1 %55, label %24, label %108

56:                                               ; preds = %92
  %57 = icmp sgt i32 %11, %86
  br i1 %57, label %83, label %108

58:                                               ; preds = %13, %83
  %59 = phi i32 [ %84, %83 ], [ %3, %13 ]
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i16, i16* %1, i64 %60
  %62 = bitcast i16* %61 to i8*
  %63 = sub i32 %15, %59
  %64 = sext i32 %63 to i64
  %65 = shl nsw i64 %64, 1
  %66 = tail call i8* @memchr(i8* %62, i32 %17, i64 %65) #19
  %67 = icmp eq i8* %66, null
  br i1 %67, label %108, label %68

68:                                               ; preds = %58
  %69 = ptrtoint i8* %66 to i64
  %70 = and i64 %69, -2
  %71 = sub i64 %70, %18
  %72 = lshr exact i64 %71, 1
  %73 = trunc i64 %72 to i32
  %74 = shl i64 %71, 31
  %75 = ashr exact i64 %74, 32
  %76 = getelementptr inbounds i16, i16* %1, i64 %75
  %77 = load i16, i16* %76, align 2
  %78 = zext i16 %77 to i32
  %79 = icmp eq i32 %78, %17
  br i1 %79, label %85, label %80

80:                                               ; preds = %68
  %81 = add nsw i32 %73, 1
  %82 = icmp sgt i32 %11, %73
  br i1 %82, label %83, label %108

83:                                               ; preds = %80, %56
  %84 = phi i32 [ %81, %80 ], [ %89, %56 ]
  br label %58

85:                                               ; preds = %68
  %86 = trunc i64 %72 to i32
  %87 = icmp eq i32 %86, -1
  br i1 %87, label %108, label %88

88:                                               ; preds = %85
  %89 = add nuw nsw i32 %86, 1
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i16, i16* %1, i64 %90
  br label %92

92:                                               ; preds = %101, %88
  %93 = phi i64 [ %102, %101 ], [ 0, %88 ]
  %94 = getelementptr inbounds i8, i8* %20, i64 %93
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = getelementptr inbounds i16, i16* %91, i64 %93
  %98 = load i16, i16* %97, align 2
  %99 = zext i16 %98 to i32
  %100 = icmp eq i32 %96, %99
  br i1 %100, label %101, label %56

101:                                              ; preds = %92
  %102 = add nuw nsw i64 %93, 1
  %103 = icmp slt i64 %102, %23
  br i1 %103, label %92, label %106

104:                                              ; preds = %51
  %105 = trunc i64 %28 to i32
  br label %108

106:                                              ; preds = %101
  %107 = trunc i64 %72 to i32
  br label %108

108:                                              ; preds = %56, %85, %80, %58, %54, %35, %32, %106, %104, %4
  %109 = phi i32 [ -1, %4 ], [ %105, %104 ], [ %107, %106 ], [ -1, %32 ], [ -1, %35 ], [ -1, %54 ], [ -1, %58 ], [ -1, %80 ], [ -1, %85 ], [ -1, %56 ]
  ret i32 %109
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhtE13InitialSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1239"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1239", %"class.v8::internal::StringSearch.1239"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1239", %"class.v8::internal::StringSearch.1239"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %302, label %13

13:                                               ; preds = %4
  %14 = shl i32 %9, 2
  %15 = sub nsw i32 -10, %14
  %16 = add nsw i32 %11, 1
  %17 = ptrtoint i16* %1 to i64
  %18 = sext i32 %11 to i64
  %19 = shl i64 %8, 32
  %20 = ashr exact i64 %19, 32
  br label %21

21:                                               ; preds = %296, %13
  %22 = phi i32 [ %15, %13 ], [ %297, %296 ]
  %23 = phi i32 [ %3, %13 ], [ %298, %296 ]
  %24 = add nsw i32 %22, 1
  %25 = icmp slt i32 %22, 0
  br i1 %25, label %26, label %93

26:                                               ; preds = %21
  %27 = load i8, i8* %6, align 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %26
  %30 = zext i8 %27 to i32
  br label %41

31:                                               ; preds = %26
  %32 = sext i32 %23 to i64
  br label %33

33:                                               ; preds = %38, %31
  %34 = phi i64 [ %32, %31 ], [ %39, %38 ]
  %35 = getelementptr inbounds i16, i16* %1, i64 %34
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %66, label %38

38:                                               ; preds = %33
  %39 = add nsw i64 %34, 1
  %40 = icmp slt i64 %34, %18
  br i1 %40, label %33, label %302

41:                                               ; preds = %63, %29
  %42 = phi i32 [ %64, %63 ], [ %23, %29 ]
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i16, i16* %1, i64 %43
  %45 = bitcast i16* %44 to i8*
  %46 = sub i32 %16, %42
  %47 = sext i32 %46 to i64
  %48 = shl nsw i64 %47, 1
  %49 = tail call i8* @memchr(i8* %45, i32 %30, i64 %48) #19
  %50 = icmp eq i8* %49, null
  br i1 %50, label %302, label %51

51:                                               ; preds = %41
  %52 = ptrtoint i8* %49 to i64
  %53 = and i64 %52, -2
  %54 = sub i64 %53, %17
  %55 = lshr exact i64 %54, 1
  %56 = trunc i64 %55 to i32
  %57 = shl i64 %54, 31
  %58 = ashr exact i64 %57, 32
  %59 = getelementptr inbounds i16, i16* %1, i64 %58
  %60 = load i16, i16* %59, align 2
  %61 = zext i16 %60 to i32
  %62 = icmp eq i32 %61, %30
  br i1 %62, label %66, label %63

63:                                               ; preds = %51
  %64 = add nsw i32 %56, 1
  %65 = icmp sgt i32 %11, %56
  br i1 %65, label %41, label %302

66:                                               ; preds = %51, %33
  %67 = phi i64 [ %34, %33 ], [ %55, %51 ]
  %68 = trunc i64 %67 to i32
  %69 = icmp eq i32 %68, -1
  br i1 %69, label %302, label %70

70:                                               ; preds = %66
  %71 = shl i64 %67, 32
  %72 = ashr exact i64 %71, 32
  br label %73

73:                                               ; preds = %70, %84
  %74 = phi i64 [ 1, %70 ], [ %85, %84 ]
  %75 = phi i32 [ 1, %70 ], [ %86, %84 ]
  %76 = getelementptr inbounds i8, i8* %6, i64 %74
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = add nsw i64 %74, %72
  %80 = getelementptr inbounds i16, i16* %1, i64 %79
  %81 = load i16, i16* %80, align 2
  %82 = zext i16 %81 to i32
  %83 = icmp eq i32 %78, %82
  br i1 %83, label %84, label %88

84:                                               ; preds = %73
  %85 = add nuw nsw i64 %74, 1
  %86 = add nuw nsw i32 %75, 1
  %87 = icmp slt i64 %85, %20
  br i1 %87, label %73, label %90

88:                                               ; preds = %73
  %89 = trunc i64 %74 to i32
  br label %90

90:                                               ; preds = %84, %88
  %91 = phi i32 [ %89, %88 ], [ %86, %84 ]
  %92 = icmp eq i32 %91, %9
  br i1 %92, label %300, label %296

93:                                               ; preds = %21
  %94 = getelementptr inbounds %"class.v8::internal::StringSearch.1239", %"class.v8::internal::StringSearch.1239"* %0, i64 0, i32 0
  %95 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::StringSearch.1239", %"class.v8::internal::StringSearch.1239"* %0, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %233, label %99

99:                                               ; preds = %93
  %100 = add nsw i32 %97, -1
  %101 = insertelement <4 x i32> undef, i32 %100, i32 0
  %102 = shufflevector <4 x i32> %101, <4 x i32> undef, <4 x i32> zeroinitializer
  %103 = insertelement <4 x i32> undef, i32 %100, i32 0
  %104 = shufflevector <4 x i32> %103, <4 x i32> undef, <4 x i32> zeroinitializer
  %105 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 0
  %106 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %106, align 4
  %107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 4
  %108 = bitcast i32* %107 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %108, align 4
  %109 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 8
  %110 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %110, align 4
  %111 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 12
  %112 = bitcast i32* %111 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %112, align 4
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 16
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %114, align 4
  %115 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 20
  %116 = bitcast i32* %115 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %116, align 4
  %117 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 24
  %118 = bitcast i32* %117 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %118, align 4
  %119 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 28
  %120 = bitcast i32* %119 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %120, align 4
  %121 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 32
  %122 = bitcast i32* %121 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %122, align 4
  %123 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 36
  %124 = bitcast i32* %123 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %124, align 4
  %125 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 40
  %126 = bitcast i32* %125 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %126, align 4
  %127 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 44
  %128 = bitcast i32* %127 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %128, align 4
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 48
  %130 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %130, align 4
  %131 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 52
  %132 = bitcast i32* %131 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %132, align 4
  %133 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 56
  %134 = bitcast i32* %133 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %134, align 4
  %135 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 60
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %136, align 4
  %137 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 64
  %138 = bitcast i32* %137 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %138, align 4
  %139 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 68
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %140, align 4
  %141 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 72
  %142 = bitcast i32* %141 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %142, align 4
  %143 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 76
  %144 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %144, align 4
  %145 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 80
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %146, align 4
  %147 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 84
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %148, align 4
  %149 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 88
  %150 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %150, align 4
  %151 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 92
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %152, align 4
  %153 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 96
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %154, align 4
  %155 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 100
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %156, align 4
  %157 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 104
  %158 = bitcast i32* %157 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %158, align 4
  %159 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 108
  %160 = bitcast i32* %159 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %160, align 4
  %161 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 112
  %162 = bitcast i32* %161 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %162, align 4
  %163 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 116
  %164 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %164, align 4
  %165 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 120
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %166, align 4
  %167 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 124
  %168 = bitcast i32* %167 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %168, align 4
  %169 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 128
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %170, align 4
  %171 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 132
  %172 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %172, align 4
  %173 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 136
  %174 = bitcast i32* %173 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %174, align 4
  %175 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 140
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %176, align 4
  %177 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 144
  %178 = bitcast i32* %177 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %178, align 4
  %179 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 148
  %180 = bitcast i32* %179 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %180, align 4
  %181 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 152
  %182 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %182, align 4
  %183 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 156
  %184 = bitcast i32* %183 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %184, align 4
  %185 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 160
  %186 = bitcast i32* %185 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %186, align 4
  %187 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 164
  %188 = bitcast i32* %187 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %188, align 4
  %189 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 168
  %190 = bitcast i32* %189 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %190, align 4
  %191 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 172
  %192 = bitcast i32* %191 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %192, align 4
  %193 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 176
  %194 = bitcast i32* %193 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %194, align 4
  %195 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 180
  %196 = bitcast i32* %195 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %196, align 4
  %197 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 184
  %198 = bitcast i32* %197 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %198, align 4
  %199 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 188
  %200 = bitcast i32* %199 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %200, align 4
  %201 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 192
  %202 = bitcast i32* %201 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %202, align 4
  %203 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 196
  %204 = bitcast i32* %203 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %204, align 4
  %205 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 200
  %206 = bitcast i32* %205 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %206, align 4
  %207 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 204
  %208 = bitcast i32* %207 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %208, align 4
  %209 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 208
  %210 = bitcast i32* %209 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %210, align 4
  %211 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 212
  %212 = bitcast i32* %211 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %212, align 4
  %213 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 216
  %214 = bitcast i32* %213 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %214, align 4
  %215 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 220
  %216 = bitcast i32* %215 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %216, align 4
  %217 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 224
  %218 = bitcast i32* %217 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %218, align 4
  %219 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 228
  %220 = bitcast i32* %219 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %220, align 4
  %221 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 232
  %222 = bitcast i32* %221 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %222, align 4
  %223 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 236
  %224 = bitcast i32* %223 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %224, align 4
  %225 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 240
  %226 = bitcast i32* %225 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %226, align 4
  %227 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 244
  %228 = bitcast i32* %227 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %228, align 4
  %229 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 248
  %230 = bitcast i32* %229 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %230, align 4
  %231 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 252
  %232 = bitcast i32* %231 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %232, align 4
  br label %236

233:                                              ; preds = %93
  %234 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 0
  %235 = bitcast i32* %234 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %235, i8 -1, i64 1024, i1 false) #6
  br label %236

236:                                              ; preds = %99, %233
  %237 = add i32 %9, -1
  %238 = icmp slt i32 %97, %237
  br i1 %238, label %239, label %293

239:                                              ; preds = %236
  %240 = sext i32 %97 to i64
  %241 = sext i32 %237 to i64
  %242 = sub nsw i64 %241, %240
  %243 = xor i64 %240, -1
  %244 = add nsw i64 %243, %241
  %245 = and i64 %242, 3
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %259, label %247

247:                                              ; preds = %239, %247
  %248 = phi i64 [ %256, %247 ], [ %240, %239 ]
  %249 = phi i64 [ %257, %247 ], [ %245, %239 ]
  %250 = load i8*, i8** %5, align 8
  %251 = getelementptr inbounds i8, i8* %250, i64 %248
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i64
  %254 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 %253
  %255 = trunc i64 %248 to i32
  store i32 %255, i32* %254, align 4
  %256 = add nsw i64 %248, 1
  %257 = add i64 %249, -1
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %247, !llvm.loop !40

259:                                              ; preds = %247, %239
  %260 = phi i64 [ %240, %239 ], [ %256, %247 ]
  %261 = icmp ult i64 %244, 3
  br i1 %261, label %293, label %262

262:                                              ; preds = %259, %262
  %263 = phi i64 [ %291, %262 ], [ %260, %259 ]
  %264 = load i8*, i8** %5, align 8
  %265 = getelementptr inbounds i8, i8* %264, i64 %263
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i64
  %268 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 %267
  %269 = trunc i64 %263 to i32
  store i32 %269, i32* %268, align 4
  %270 = add nsw i64 %263, 1
  %271 = load i8*, i8** %5, align 8
  %272 = getelementptr inbounds i8, i8* %271, i64 %270
  %273 = load i8, i8* %272, align 1
  %274 = zext i8 %273 to i64
  %275 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 %274
  %276 = trunc i64 %270 to i32
  store i32 %276, i32* %275, align 4
  %277 = add nsw i64 %263, 2
  %278 = load i8*, i8** %5, align 8
  %279 = getelementptr inbounds i8, i8* %278, i64 %277
  %280 = load i8, i8* %279, align 1
  %281 = zext i8 %280 to i64
  %282 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 %281
  %283 = trunc i64 %277 to i32
  store i32 %283, i32* %282, align 4
  %284 = add nsw i64 %263, 3
  %285 = load i8*, i8** %5, align 8
  %286 = getelementptr inbounds i8, i8* %285, i64 %284
  %287 = load i8, i8* %286, align 1
  %288 = zext i8 %287 to i64
  %289 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 %288
  %290 = trunc i64 %284 to i32
  store i32 %290, i32* %289, align 4
  %291 = add nsw i64 %263, 4
  %292 = icmp eq i64 %291, %241
  br i1 %292, label %293, label %262

293:                                              ; preds = %259, %262, %236
  %294 = getelementptr inbounds %"class.v8::internal::StringSearch.1239", %"class.v8::internal::StringSearch.1239"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1239"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIhtE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1239"*, i16*, i64, i32)** %294, align 8
  %295 = tail call i32 @_ZN2v88internal12StringSearchIhtE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1239"* %0, i16* %1, i64 %2, i32 %23)
  br label %302

296:                                              ; preds = %90
  %297 = add nsw i32 %24, %91
  %298 = add nsw i32 %68, 1
  %299 = icmp sgt i32 %11, %68
  br i1 %299, label %21, label %302

300:                                              ; preds = %90
  %301 = trunc i64 %67 to i32
  br label %302

302:                                              ; preds = %300, %66, %296, %63, %41, %38, %4, %293
  %303 = phi i32 [ %295, %293 ], [ -1, %4 ], [ -1, %38 ], [ -1, %41 ], [ -1, %63 ], [ %301, %300 ], [ -1, %66 ], [ -1, %296 ]
  ret i32 %303
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhtE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1239"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1239", %"class.v8::internal::StringSearch.1239"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1239", %"class.v8::internal::StringSearch.1239"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch.1239", %"class.v8::internal::StringSearch.1239"* %0, i64 0, i32 0
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = add nsw i32 %10, -1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %6, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = sub nsw i32 %13, %19
  %21 = sub nsw i32 %9, %10
  %22 = zext i8 %16 to i32
  %23 = add i32 %10, -2
  %24 = icmp sgt i32 %23, -1
  %25 = sub i32 %10, %20
  br i1 %24, label %26, label %76

26:                                               ; preds = %4
  %27 = sub nsw i32 0, %10
  %28 = sext i32 %23 to i64
  br label %29

29:                                               ; preds = %26, %65
  %30 = phi i32 [ %67, %65 ], [ %3, %26 ]
  %31 = phi i32 [ %69, %65 ], [ %27, %26 ]
  %32 = icmp sgt i32 %30, %21
  br i1 %32, label %100, label %33

33:                                               ; preds = %29, %48
  %34 = phi i32 [ %51, %48 ], [ %30, %29 ]
  %35 = phi i32 [ %53, %48 ], [ %31, %29 ]
  %36 = add nsw i32 %34, %13
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i16, i16* %1, i64 %37
  %39 = load i16, i16* %38, align 2
  %40 = zext i16 %39 to i32
  %41 = icmp eq i32 %22, %40
  br i1 %41, label %74, label %42

42:                                               ; preds = %33
  %43 = icmp ugt i16 %39, 255
  br i1 %43, label %48, label %44

44:                                               ; preds = %42
  %45 = zext i16 %39 to i64
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %45
  %47 = load i32, i32* %46, align 4
  br label %48

48:                                               ; preds = %44, %42
  %49 = phi i32 [ %47, %44 ], [ -1, %42 ]
  %50 = sub nsw i32 %13, %49
  %51 = add nsw i32 %50, %34
  %52 = add i32 %35, 1
  %53 = sub i32 %52, %50
  %54 = icmp sgt i32 %51, %21
  br i1 %54, label %100, label %33

55:                                               ; preds = %74, %71
  %56 = phi i64 [ %28, %74 ], [ %72, %71 ]
  %57 = getelementptr inbounds i8, i8* %6, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = add nsw i64 %56, %75
  %61 = getelementptr inbounds i16, i16* %1, i64 %60
  %62 = load i16, i16* %61, align 2
  %63 = zext i16 %62 to i32
  %64 = icmp eq i32 %59, %63
  br i1 %64, label %71, label %65

65:                                               ; preds = %55
  %66 = trunc i64 %56 to i32
  %67 = add nsw i32 %34, %20
  %68 = add i32 %25, %35
  %69 = sub i32 %68, %66
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %97, label %29

71:                                               ; preds = %55
  %72 = add nsw i64 %56, -1
  %73 = icmp sgt i64 %56, 0
  br i1 %73, label %55, label %100

74:                                               ; preds = %33
  %75 = sext i32 %34 to i64
  br label %55

76:                                               ; preds = %4
  %77 = icmp slt i32 %21, %3
  br i1 %77, label %100, label %78

78:                                               ; preds = %76, %92
  %79 = phi i32 [ %95, %92 ], [ %3, %76 ]
  %80 = add nsw i32 %79, %13
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i16, i16* %1, i64 %81
  %83 = load i16, i16* %82, align 2
  %84 = zext i16 %83 to i32
  %85 = icmp eq i32 %22, %84
  br i1 %85, label %100, label %86

86:                                               ; preds = %78
  %87 = icmp ugt i16 %83, 255
  br i1 %87, label %92, label %88

88:                                               ; preds = %86
  %89 = zext i16 %83 to i64
  %90 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %89
  %91 = load i32, i32* %90, align 4
  br label %92

92:                                               ; preds = %86, %88
  %93 = phi i32 [ %91, %88 ], [ -1, %86 ]
  %94 = sub nsw i32 %13, %93
  %95 = add nsw i32 %94, %79
  %96 = icmp sgt i32 %95, %21
  br i1 %96, label %100, label %78

97:                                               ; preds = %65
  tail call void @_ZN2v88internal12StringSearchIhtE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch.1239"* %0)
  %98 = getelementptr inbounds %"class.v8::internal::StringSearch.1239", %"class.v8::internal::StringSearch.1239"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1239"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIhtE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1239"*, i16*, i64, i32)** %98, align 8
  %99 = tail call i32 @_ZN2v88internal12StringSearchIhtE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1239"* %0, i16* %1, i64 %2, i32 %67)
  br label %100

100:                                              ; preds = %92, %78, %29, %48, %71, %76, %97
  %101 = phi i32 [ %99, %97 ], [ -1, %76 ], [ %34, %71 ], [ -1, %48 ], [ -1, %29 ], [ %79, %78 ], [ -1, %92 ]
  ret i32 %101
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StringSearchIhtE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch.1239"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::StringSearch.1239", %"class.v8::internal::StringSearch.1239"* %0, i64 0, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1239", %"class.v8::internal::StringSearch.1239"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1239", %"class.v8::internal::StringSearch.1239"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = sub nsw i32 %4, %8
  %10 = getelementptr inbounds %"class.v8::internal::StringSearch.1239", %"class.v8::internal::StringSearch.1239"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = sext i32 %8 to i64
  %13 = sub nsw i64 0, %12
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %13
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 123, i64 %13
  %16 = icmp slt i32 %8, %4
  br i1 %16, label %17, label %100

17:                                               ; preds = %1
  %18 = shl i64 %3, 32
  %19 = ashr exact i64 %18, 32
  %20 = shl i64 %3, 32
  %21 = ashr exact i64 %20, 32
  %22 = sub nsw i64 %21, %12
  %23 = icmp ult i64 %22, 8
  br i1 %23, label %24, label %26

24:                                               ; preds = %98, %17
  %25 = phi i64 [ %12, %17 ], [ %28, %98 ]
  br label %106

26:                                               ; preds = %17
  %27 = and i64 %22, -8
  %28 = add nsw i64 %27, %12
  %29 = insertelement <4 x i32> undef, i32 %9, i32 0
  %30 = shufflevector <4 x i32> %29, <4 x i32> undef, <4 x i32> zeroinitializer
  %31 = insertelement <4 x i32> undef, i32 %9, i32 0
  %32 = shufflevector <4 x i32> %31, <4 x i32> undef, <4 x i32> zeroinitializer
  %33 = add nsw i64 %27, -8
  %34 = lshr exact i64 %33, 3
  %35 = add nuw nsw i64 %34, 1
  %36 = and i64 %35, 7
  %37 = icmp ult i64 %33, 56
  br i1 %37, label %85, label %38

38:                                               ; preds = %26
  %39 = sub nsw i64 %35, %36
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi i64 [ 0, %38 ], [ %82, %40 ]
  %42 = phi i64 [ %39, %38 ], [ %83, %40 ]
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %41
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %44, align 4
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %46, align 4
  %47 = or i64 %41, 8
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %49, align 4
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %51, align 4
  %52 = or i64 %41, 16
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %54, align 4
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %56, align 4
  %57 = or i64 %41, 24
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %59, align 4
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %61, align 4
  %62 = or i64 %41, 32
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %64, align 4
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %66, align 4
  %67 = or i64 %41, 40
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %69, align 4
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %71, align 4
  %72 = or i64 %41, 48
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %74, align 4
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %76, align 4
  %77 = or i64 %41, 56
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %77
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %79, align 4
  %80 = getelementptr inbounds i32, i32* %78, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %81, align 4
  %82 = add i64 %41, 64
  %83 = add i64 %42, -8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %40, !llvm.loop !41

85:                                               ; preds = %40, %26
  %86 = phi i64 [ 0, %26 ], [ %82, %40 ]
  %87 = icmp eq i64 %36, 0
  br i1 %87, label %98, label %88

88:                                               ; preds = %85, %88
  %89 = phi i64 [ %95, %88 ], [ %86, %85 ]
  %90 = phi i64 [ %96, %88 ], [ %36, %85 ]
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %89
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %92, align 4
  %93 = getelementptr inbounds i32, i32* %91, i64 4
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %94, align 4
  %95 = add i64 %89, 8
  %96 = add i64 %90, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %88, !llvm.loop !42

98:                                               ; preds = %88, %85
  %99 = icmp eq i64 %22, %27
  br i1 %99, label %100, label %24

100:                                              ; preds = %106, %98, %1
  %101 = shl i64 %3, 32
  %102 = ashr exact i64 %101, 32
  %103 = getelementptr inbounds i32, i32* %14, i64 %102
  store i32 1, i32* %103, align 4
  %104 = add nsw i32 %4, 1
  %105 = getelementptr inbounds i32, i32* %15, i64 %102
  store i32 %104, i32* %105, align 4
  br i1 %16, label %111, label %227

106:                                              ; preds = %24, %106
  %107 = phi i64 [ %109, %106 ], [ %25, %24 ]
  %108 = getelementptr inbounds i32, i32* %14, i64 %107
  store i32 %9, i32* %108, align 4
  %109 = add nsw i64 %107, 1
  %110 = icmp eq i64 %109, %19
  br i1 %110, label %100, label %106, !llvm.loop !43

111:                                              ; preds = %100
  %112 = add i64 %101, -4294967296
  %113 = ashr exact i64 %112, 32
  %114 = getelementptr inbounds i8, i8* %6, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = shl i64 %3, 32
  %117 = ashr exact i64 %116, 32
  br label %118

118:                                              ; preds = %111, %172
  %119 = phi i32 [ %4, %111 ], [ %174, %172 ]
  %120 = phi i32 [ %104, %111 ], [ %173, %172 ]
  %121 = add nsw i32 %119, -1
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i8, i8* %6, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = icmp sgt i32 %120, %4
  br i1 %125, label %144, label %126

126:                                              ; preds = %118, %140
  %127 = phi i32 [ %142, %140 ], [ %120, %118 ]
  %128 = add nsw i32 %127, -1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i8, i8* %6, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = icmp eq i8 %124, %131
  br i1 %132, label %144, label %133

133:                                              ; preds = %126
  %134 = sext i32 %127 to i64
  %135 = getelementptr inbounds i32, i32* %14, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, %9
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = sub nsw i32 %127, %119
  store i32 %139, i32* %135, align 4
  br label %140

140:                                              ; preds = %138, %133
  %141 = getelementptr inbounds i32, i32* %15, i64 %134
  %142 = load i32, i32* %141, align 4
  %143 = icmp sgt i32 %142, %4
  br i1 %143, label %144, label %126

144:                                              ; preds = %140, %126, %118
  %145 = phi i32 [ %120, %118 ], [ %127, %126 ], [ %142, %140 ]
  %146 = add nsw i32 %145, -1
  %147 = getelementptr inbounds i32, i32* %15, i64 %122
  store i32 %146, i32* %147, align 4
  %148 = icmp eq i32 %146, %4
  %149 = icmp sgt i32 %121, %8
  %150 = and i1 %148, %149
  br i1 %150, label %151, label %172

151:                                              ; preds = %144, %163
  %152 = phi i64 [ %153, %163 ], [ %122, %144 ]
  %153 = add nsw i64 %152, -1
  %154 = getelementptr inbounds i8, i8* %6, i64 %153
  %155 = load i8, i8* %154, align 1
  %156 = icmp eq i8 %155, %115
  br i1 %156, label %166, label %157

157:                                              ; preds = %151
  %158 = load i32, i32* %103, align 4
  %159 = icmp eq i32 %158, %9
  br i1 %159, label %160, label %163

160:                                              ; preds = %157
  %161 = sub nsw i64 %117, %152
  %162 = trunc i64 %161 to i32
  store i32 %162, i32* %103, align 4
  br label %163

163:                                              ; preds = %160, %157
  %164 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %4, i32* %164, align 4
  %165 = icmp sgt i64 %153, %12
  br i1 %165, label %151, label %170

166:                                              ; preds = %151
  %167 = trunc i64 %153 to i32
  %168 = add nsw i32 %145, -2
  %169 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %168, i32* %169, align 4
  br label %172

170:                                              ; preds = %163
  %171 = trunc i64 %153 to i32
  br label %172

172:                                              ; preds = %170, %166, %144
  %173 = phi i32 [ %168, %166 ], [ %146, %144 ], [ %4, %170 ]
  %174 = phi i32 [ %167, %166 ], [ %121, %144 ], [ %171, %170 ]
  %175 = icmp sgt i32 %174, %8
  br i1 %175, label %118, label %176

176:                                              ; preds = %172
  %177 = icmp sge i32 %173, %4
  %178 = icmp sgt i32 %8, %4
  %179 = or i1 %177, %178
  br i1 %179, label %227, label %180

180:                                              ; preds = %176
  %181 = shl i64 %3, 32
  %182 = ashr exact i64 %181, 32
  %183 = add nsw i64 %182, 1
  %184 = sub nsw i64 %183, %12
  %185 = and i64 %184, 1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %202, label %187

187:                                              ; preds = %180
  %188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, %9
  br i1 %190, label %191, label %193

191:                                              ; preds = %187
  %192 = sub nsw i32 %173, %8
  store i32 %192, i32* %188, align 4
  br label %193

193:                                              ; preds = %191, %187
  %194 = icmp eq i32 %173, %8
  br i1 %194, label %195, label %199

195:                                              ; preds = %193
  %196 = sext i32 %173 to i64
  %197 = getelementptr inbounds i32, i32* %15, i64 %196
  %198 = load i32, i32* %197, align 4
  br label %199

199:                                              ; preds = %195, %193
  %200 = phi i32 [ %198, %195 ], [ %173, %193 ]
  %201 = add nsw i64 %12, 1
  br label %202

202:                                              ; preds = %180, %199
  %203 = phi i64 [ %12, %180 ], [ %201, %199 ]
  %204 = phi i32 [ %173, %180 ], [ %200, %199 ]
  %205 = icmp eq i64 %182, %12
  br i1 %205, label %227, label %206

206:                                              ; preds = %202, %237
  %207 = phi i64 [ %239, %237 ], [ %203, %202 ]
  %208 = phi i32 [ %238, %237 ], [ %204, %202 ]
  %209 = getelementptr inbounds i32, i32* %14, i64 %207
  %210 = load i32, i32* %209, align 4
  %211 = icmp eq i32 %210, %9
  br i1 %211, label %212, label %214

212:                                              ; preds = %206
  %213 = sub nsw i32 %208, %8
  store i32 %213, i32* %209, align 4
  br label %214

214:                                              ; preds = %212, %206
  %215 = trunc i64 %207 to i32
  %216 = icmp eq i32 %208, %215
  br i1 %216, label %217, label %221

217:                                              ; preds = %214
  %218 = sext i32 %208 to i64
  %219 = getelementptr inbounds i32, i32* %15, i64 %218
  %220 = load i32, i32* %219, align 4
  br label %221

221:                                              ; preds = %214, %217
  %222 = phi i32 [ %220, %217 ], [ %208, %214 ]
  %223 = add nsw i64 %207, 1
  %224 = getelementptr inbounds i32, i32* %14, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = icmp eq i32 %225, %9
  br i1 %226, label %228, label %230

227:                                              ; preds = %202, %237, %176, %100
  ret void

228:                                              ; preds = %221
  %229 = sub nsw i32 %222, %8
  store i32 %229, i32* %224, align 4
  br label %230

230:                                              ; preds = %228, %221
  %231 = trunc i64 %223 to i32
  %232 = icmp eq i32 %222, %231
  br i1 %232, label %233, label %237

233:                                              ; preds = %230
  %234 = sext i32 %222 to i64
  %235 = getelementptr inbounds i32, i32* %15, i64 %234
  %236 = load i32, i32* %235, align 4
  br label %237

237:                                              ; preds = %233, %230
  %238 = phi i32 [ %236, %233 ], [ %222, %230 ]
  %239 = add nsw i64 %207, 2
  %240 = icmp slt i64 %223, %117
  br i1 %240, label %206, label %227
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhtE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1239"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1239", %"class.v8::internal::StringSearch.1239"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1239", %"class.v8::internal::StringSearch.1239"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch.1239", %"class.v8::internal::StringSearch.1239"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::StringSearch.1239", %"class.v8::internal::StringSearch.1239"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %15 = sext i32 %12 to i64
  %16 = sub nsw i64 0, %15
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 122, i64 %16
  %18 = add nsw i32 %10, -1
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %6, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = sub nsw i32 %9, %10
  %23 = icmp slt i32 %22, %3
  br i1 %23, label %113, label %24

24:                                               ; preds = %4
  %25 = zext i8 %21 to i32
  %26 = icmp sgt i32 %10, 0
  %27 = zext i8 %21 to i64
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %27
  br i1 %26, label %29, label %94

29:                                               ; preds = %24
  %30 = shl i64 %8, 32
  %31 = ashr exact i64 %30, 32
  br label %32

32:                                               ; preds = %51, %29
  %33 = phi i32 [ %3, %29 ], [ %52, %51 ]
  %34 = add nsw i32 %33, %18
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  %37 = load i16, i16* %36, align 2
  %38 = zext i16 %37 to i32
  %39 = icmp eq i32 %25, %38
  br i1 %39, label %92, label %40

40:                                               ; preds = %32
  %41 = icmp ugt i16 %37, 255
  br i1 %41, label %46, label %42

42:                                               ; preds = %40
  %43 = zext i16 %37 to i64
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %43
  %45 = load i32, i32* %44, align 4
  br label %46

46:                                               ; preds = %42, %40
  %47 = phi i32 [ %45, %42 ], [ -1, %40 ]
  %48 = sub nsw i32 %18, %47
  %49 = add nsw i32 %48, %33
  %50 = icmp sgt i32 %49, %22
  br i1 %50, label %113, label %51

51:                                               ; preds = %46, %86
  %52 = phi i32 [ %49, %46 ], [ %88, %86 ]
  br label %32

53:                                               ; preds = %92, %90
  %54 = phi i64 [ %31, %92 ], [ %55, %90 ]
  %55 = add i64 %54, -1
  %56 = getelementptr inbounds i8, i8* %6, i64 %55
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = add nsw i64 %55, %93
  %60 = getelementptr inbounds i16, i16* %1, i64 %59
  %61 = load i16, i16* %60, align 2
  %62 = zext i16 %61 to i32
  %63 = icmp eq i32 %58, %62
  br i1 %63, label %90, label %64

64:                                               ; preds = %53
  %65 = trunc i64 %55 to i32
  %66 = icmp sgt i32 %12, %65
  br i1 %66, label %83, label %67

67:                                               ; preds = %64
  %68 = shl i64 %55, 32
  %69 = add i64 %68, 4294967296
  %70 = ashr exact i64 %69, 32
  %71 = getelementptr inbounds i32, i32* %17, i64 %70
  %72 = load i32, i32* %71, align 4
  %73 = icmp ugt i16 %61, 255
  br i1 %73, label %78, label %74

74:                                               ; preds = %67
  %75 = zext i16 %61 to i64
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %75
  %77 = load i32, i32* %76, align 4
  br label %78

78:                                               ; preds = %74, %67
  %79 = phi i32 [ %77, %74 ], [ -1, %67 ]
  %80 = sub nsw i32 %65, %79
  %81 = icmp sgt i32 %72, %80
  %82 = select i1 %81, i32 %72, i32 %80
  br label %86

83:                                               ; preds = %64
  %84 = load i32, i32* %28, align 4
  %85 = sub nsw i32 %18, %84
  br label %86

86:                                               ; preds = %83, %78
  %87 = phi i32 [ %85, %83 ], [ %82, %78 ]
  %88 = add nsw i32 %87, %33
  %89 = icmp sgt i32 %88, %22
  br i1 %89, label %113, label %51

90:                                               ; preds = %53
  %91 = icmp sgt i64 %55, 0
  br i1 %91, label %53, label %113

92:                                               ; preds = %32
  %93 = sext i32 %33 to i64
  br label %53

94:                                               ; preds = %24, %108
  %95 = phi i32 [ %111, %108 ], [ %3, %24 ]
  %96 = add nsw i32 %95, %18
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i16, i16* %1, i64 %97
  %99 = load i16, i16* %98, align 2
  %100 = zext i16 %99 to i32
  %101 = icmp eq i32 %25, %100
  br i1 %101, label %113, label %102

102:                                              ; preds = %94
  %103 = icmp ugt i16 %99, 255
  br i1 %103, label %108, label %104

104:                                              ; preds = %102
  %105 = zext i16 %99 to i64
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %105
  %107 = load i32, i32* %106, align 4
  br label %108

108:                                              ; preds = %102, %104
  %109 = phi i32 [ %107, %104 ], [ -1, %102 ]
  %110 = sub nsw i32 %18, %109
  %111 = add nsw i32 %110, %95
  %112 = icmp sgt i32 %111, %22
  br i1 %112, label %113, label %94

113:                                              ; preds = %108, %94, %86, %46, %90, %4
  %114 = phi i32 [ -1, %4 ], [ %33, %90 ], [ -1, %46 ], [ -1, %86 ], [ %95, %94 ], [ -1, %108 ]
  ret i32 %114
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIttE12LinearSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %108, label %13

13:                                               ; preds = %4
  %14 = load i16, i16* %6, align 2
  %15 = add nsw i32 %11, 1
  %16 = icmp eq i16 %14, 0
  %17 = trunc i16 %14 to i8
  %18 = lshr i16 %14, 8
  %19 = trunc i16 %18 to i8
  %20 = icmp ult i8 %17, %19
  %21 = select i1 %20, i8 %19, i8 %17
  %22 = zext i8 %21 to i32
  %23 = ptrtoint i16* %1 to i64
  %24 = sext i32 %11 to i64
  %25 = getelementptr inbounds i16, i16* %6, i64 1
  %26 = shl i64 %8, 32
  %27 = add i64 %26, -4294967296
  %28 = ashr exact i64 %27, 32
  br i1 %16, label %29, label %61

29:                                               ; preds = %13, %57
  %30 = phi i32 [ %44, %57 ], [ %3, %13 ]
  %31 = sext i32 %30 to i64
  br label %32

32:                                               ; preds = %37, %29
  %33 = phi i64 [ %31, %29 ], [ %38, %37 ]
  %34 = getelementptr inbounds i16, i16* %1, i64 %33
  %35 = load i16, i16* %34, align 2
  %36 = icmp eq i16 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = add nsw i64 %33, 1
  %39 = icmp slt i64 %33, %24
  br i1 %39, label %32, label %108

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = icmp eq i32 %41, -1
  br i1 %42, label %108, label %43

43:                                               ; preds = %40
  %44 = add nuw nsw i32 %41, 1
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i16, i16* %1, i64 %45
  br label %47

47:                                               ; preds = %54, %43
  %48 = phi i64 [ %55, %54 ], [ 0, %43 ]
  %49 = getelementptr inbounds i16, i16* %25, i64 %48
  %50 = load i16, i16* %49, align 2
  %51 = getelementptr inbounds i16, i16* %46, i64 %48
  %52 = load i16, i16* %51, align 2
  %53 = icmp eq i16 %50, %52
  br i1 %53, label %54, label %57

54:                                               ; preds = %47
  %55 = add nuw nsw i64 %48, 1
  %56 = icmp slt i64 %55, %28
  br i1 %56, label %47, label %104

57:                                               ; preds = %47
  %58 = icmp sgt i32 %11, %41
  br i1 %58, label %29, label %108

59:                                               ; preds = %94
  %60 = icmp sgt i32 %11, %88
  br i1 %60, label %85, label %108

61:                                               ; preds = %13, %85
  %62 = phi i32 [ %86, %85 ], [ %3, %13 ]
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i16, i16* %1, i64 %63
  %65 = bitcast i16* %64 to i8*
  %66 = sub i32 %15, %62
  %67 = sext i32 %66 to i64
  %68 = shl nsw i64 %67, 1
  %69 = tail call i8* @memchr(i8* %65, i32 %22, i64 %68) #19
  %70 = icmp eq i8* %69, null
  br i1 %70, label %108, label %71

71:                                               ; preds = %61
  %72 = ptrtoint i8* %69 to i64
  %73 = and i64 %72, -2
  %74 = sub i64 %73, %23
  %75 = lshr exact i64 %74, 1
  %76 = trunc i64 %75 to i32
  %77 = shl i64 %74, 31
  %78 = ashr exact i64 %77, 32
  %79 = getelementptr inbounds i16, i16* %1, i64 %78
  %80 = load i16, i16* %79, align 2
  %81 = icmp eq i16 %80, %14
  br i1 %81, label %87, label %82

82:                                               ; preds = %71
  %83 = add nsw i32 %76, 1
  %84 = icmp sgt i32 %11, %76
  br i1 %84, label %85, label %108

85:                                               ; preds = %82, %59
  %86 = phi i32 [ %83, %82 ], [ %91, %59 ]
  br label %61

87:                                               ; preds = %71
  %88 = trunc i64 %75 to i32
  %89 = icmp eq i32 %88, -1
  br i1 %89, label %108, label %90

90:                                               ; preds = %87
  %91 = add nuw nsw i32 %88, 1
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i16, i16* %1, i64 %92
  br label %94

94:                                               ; preds = %101, %90
  %95 = phi i64 [ %102, %101 ], [ 0, %90 ]
  %96 = getelementptr inbounds i16, i16* %25, i64 %95
  %97 = load i16, i16* %96, align 2
  %98 = getelementptr inbounds i16, i16* %93, i64 %95
  %99 = load i16, i16* %98, align 2
  %100 = icmp eq i16 %97, %99
  br i1 %100, label %101, label %59

101:                                              ; preds = %94
  %102 = add nuw nsw i64 %95, 1
  %103 = icmp slt i64 %102, %28
  br i1 %103, label %94, label %106

104:                                              ; preds = %54
  %105 = trunc i64 %33 to i32
  br label %108

106:                                              ; preds = %101
  %107 = trunc i64 %75 to i32
  br label %108

108:                                              ; preds = %59, %87, %82, %61, %57, %40, %37, %106, %104, %4
  %109 = phi i32 [ -1, %4 ], [ %105, %104 ], [ %107, %106 ], [ -1, %37 ], [ -1, %40 ], [ -1, %57 ], [ -1, %61 ], [ -1, %82 ], [ -1, %87 ], [ -1, %59 ]
  ret i32 %109
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIttE13InitialSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %288, label %13

13:                                               ; preds = %4
  %14 = shl i32 %9, 2
  %15 = sub nsw i32 -10, %14
  %16 = add nsw i32 %11, 1
  %17 = ptrtoint i16* %1 to i64
  %18 = sext i32 %11 to i64
  %19 = shl i64 %8, 32
  %20 = ashr exact i64 %19, 32
  br label %21

21:                                               ; preds = %282, %13
  %22 = phi i32 [ %15, %13 ], [ %283, %282 ]
  %23 = phi i32 [ %3, %13 ], [ %284, %282 ]
  %24 = add nsw i32 %22, 1
  %25 = icmp slt i32 %22, 0
  br i1 %25, label %26, label %95

26:                                               ; preds = %21
  %27 = load i16, i16* %6, align 2
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %29, label %39

29:                                               ; preds = %26
  %30 = sext i32 %23 to i64
  br label %31

31:                                               ; preds = %36, %29
  %32 = phi i64 [ %30, %29 ], [ %37, %36 ]
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  %34 = load i16, i16* %33, align 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %70, label %36

36:                                               ; preds = %31
  %37 = add nsw i64 %32, 1
  %38 = icmp slt i64 %32, %18
  br i1 %38, label %31, label %288

39:                                               ; preds = %26
  %40 = trunc i16 %27 to i8
  %41 = lshr i16 %27, 8
  %42 = trunc i16 %41 to i8
  %43 = icmp ult i8 %40, %42
  %44 = select i1 %43, i8 %42, i8 %40
  %45 = zext i8 %44 to i32
  br label %46

46:                                               ; preds = %67, %39
  %47 = phi i32 [ %23, %39 ], [ %68, %67 ]
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i16, i16* %1, i64 %48
  %50 = bitcast i16* %49 to i8*
  %51 = sub i32 %16, %47
  %52 = sext i32 %51 to i64
  %53 = shl nsw i64 %52, 1
  %54 = tail call i8* @memchr(i8* %50, i32 %45, i64 %53) #19
  %55 = icmp eq i8* %54, null
  br i1 %55, label %288, label %56

56:                                               ; preds = %46
  %57 = ptrtoint i8* %54 to i64
  %58 = and i64 %57, -2
  %59 = sub i64 %58, %17
  %60 = lshr exact i64 %59, 1
  %61 = trunc i64 %60 to i32
  %62 = shl i64 %59, 31
  %63 = ashr exact i64 %62, 32
  %64 = getelementptr inbounds i16, i16* %1, i64 %63
  %65 = load i16, i16* %64, align 2
  %66 = icmp eq i16 %65, %27
  br i1 %66, label %70, label %67

67:                                               ; preds = %56
  %68 = add nsw i32 %61, 1
  %69 = icmp sgt i32 %11, %61
  br i1 %69, label %46, label %288

70:                                               ; preds = %56, %31
  %71 = phi i64 [ %32, %31 ], [ %60, %56 ]
  %72 = trunc i64 %71 to i32
  %73 = icmp eq i32 %72, -1
  br i1 %73, label %288, label %74

74:                                               ; preds = %70
  %75 = shl i64 %71, 32
  %76 = ashr exact i64 %75, 32
  br label %77

77:                                               ; preds = %74, %86
  %78 = phi i64 [ 1, %74 ], [ %87, %86 ]
  %79 = phi i32 [ 1, %74 ], [ %88, %86 ]
  %80 = getelementptr inbounds i16, i16* %6, i64 %78
  %81 = load i16, i16* %80, align 2
  %82 = add nsw i64 %78, %76
  %83 = getelementptr inbounds i16, i16* %1, i64 %82
  %84 = load i16, i16* %83, align 2
  %85 = icmp eq i16 %81, %84
  br i1 %85, label %86, label %90

86:                                               ; preds = %77
  %87 = add nuw nsw i64 %78, 1
  %88 = add nuw nsw i32 %79, 1
  %89 = icmp slt i64 %87, %20
  br i1 %89, label %77, label %92

90:                                               ; preds = %77
  %91 = trunc i64 %78 to i32
  br label %92

92:                                               ; preds = %86, %90
  %93 = phi i32 [ %91, %90 ], [ %88, %86 ]
  %94 = icmp eq i32 %93, %9
  br i1 %94, label %286, label %282

95:                                               ; preds = %21
  %96 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 0
  %97 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 3
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %235, label %101

101:                                              ; preds = %95
  %102 = add nsw i32 %99, -1
  %103 = insertelement <4 x i32> undef, i32 %102, i32 0
  %104 = shufflevector <4 x i32> %103, <4 x i32> undef, <4 x i32> zeroinitializer
  %105 = insertelement <4 x i32> undef, i32 %102, i32 0
  %106 = shufflevector <4 x i32> %105, <4 x i32> undef, <4 x i32> zeroinitializer
  %107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 0
  %108 = bitcast i32* %107 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %108, align 4
  %109 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %110, align 4
  %111 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 8
  %112 = bitcast i32* %111 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %112, align 4
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 12
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %114, align 4
  %115 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 16
  %116 = bitcast i32* %115 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %116, align 4
  %117 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 20
  %118 = bitcast i32* %117 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %118, align 4
  %119 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 24
  %120 = bitcast i32* %119 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %120, align 4
  %121 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 28
  %122 = bitcast i32* %121 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %122, align 4
  %123 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 32
  %124 = bitcast i32* %123 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %124, align 4
  %125 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 36
  %126 = bitcast i32* %125 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %126, align 4
  %127 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 40
  %128 = bitcast i32* %127 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %128, align 4
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 44
  %130 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %130, align 4
  %131 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 48
  %132 = bitcast i32* %131 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %132, align 4
  %133 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 52
  %134 = bitcast i32* %133 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %134, align 4
  %135 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 56
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %136, align 4
  %137 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 60
  %138 = bitcast i32* %137 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %138, align 4
  %139 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 64
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %140, align 4
  %141 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 68
  %142 = bitcast i32* %141 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %142, align 4
  %143 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 72
  %144 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %144, align 4
  %145 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 76
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %146, align 4
  %147 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 80
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %148, align 4
  %149 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 84
  %150 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %150, align 4
  %151 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 88
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %152, align 4
  %153 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 92
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %154, align 4
  %155 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 96
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %156, align 4
  %157 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 100
  %158 = bitcast i32* %157 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %158, align 4
  %159 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 104
  %160 = bitcast i32* %159 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %160, align 4
  %161 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 108
  %162 = bitcast i32* %161 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %162, align 4
  %163 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 112
  %164 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %164, align 4
  %165 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 116
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %166, align 4
  %167 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 120
  %168 = bitcast i32* %167 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %168, align 4
  %169 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 124
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %170, align 4
  %171 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 128
  %172 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %172, align 4
  %173 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 132
  %174 = bitcast i32* %173 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %174, align 4
  %175 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 136
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %176, align 4
  %177 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 140
  %178 = bitcast i32* %177 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %178, align 4
  %179 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 144
  %180 = bitcast i32* %179 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %180, align 4
  %181 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 148
  %182 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %182, align 4
  %183 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 152
  %184 = bitcast i32* %183 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %184, align 4
  %185 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 156
  %186 = bitcast i32* %185 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %186, align 4
  %187 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 160
  %188 = bitcast i32* %187 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %188, align 4
  %189 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 164
  %190 = bitcast i32* %189 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %190, align 4
  %191 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 168
  %192 = bitcast i32* %191 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %192, align 4
  %193 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 172
  %194 = bitcast i32* %193 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %194, align 4
  %195 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 176
  %196 = bitcast i32* %195 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %196, align 4
  %197 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 180
  %198 = bitcast i32* %197 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %198, align 4
  %199 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 184
  %200 = bitcast i32* %199 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %200, align 4
  %201 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 188
  %202 = bitcast i32* %201 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %202, align 4
  %203 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 192
  %204 = bitcast i32* %203 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %204, align 4
  %205 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 196
  %206 = bitcast i32* %205 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %206, align 4
  %207 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 200
  %208 = bitcast i32* %207 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %208, align 4
  %209 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 204
  %210 = bitcast i32* %209 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %210, align 4
  %211 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 208
  %212 = bitcast i32* %211 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %212, align 4
  %213 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 212
  %214 = bitcast i32* %213 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %214, align 4
  %215 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 216
  %216 = bitcast i32* %215 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %216, align 4
  %217 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 220
  %218 = bitcast i32* %217 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %218, align 4
  %219 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 224
  %220 = bitcast i32* %219 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %220, align 4
  %221 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 228
  %222 = bitcast i32* %221 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %222, align 4
  %223 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 232
  %224 = bitcast i32* %223 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %224, align 4
  %225 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 236
  %226 = bitcast i32* %225 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %226, align 4
  %227 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 240
  %228 = bitcast i32* %227 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %228, align 4
  %229 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 244
  %230 = bitcast i32* %229 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %230, align 4
  %231 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 248
  %232 = bitcast i32* %231 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %232, align 4
  %233 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 252
  %234 = bitcast i32* %233 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %234, align 4
  br label %238

235:                                              ; preds = %95
  %236 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 0
  %237 = bitcast i32* %236 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %237, i8 -1, i64 1024, i1 false) #6
  br label %238

238:                                              ; preds = %101, %235
  %239 = add i32 %9, -1
  %240 = icmp slt i32 %99, %239
  br i1 %240, label %241, label %279

241:                                              ; preds = %238
  %242 = sext i32 %99 to i64
  %243 = sext i32 %239 to i64
  %244 = sub nsw i64 %243, %242
  %245 = xor i64 %242, -1
  %246 = and i64 %244, 1
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %256, label %248

248:                                              ; preds = %241
  %249 = load i16*, i16** %5, align 8
  %250 = getelementptr inbounds i16, i16* %249, i64 %242
  %251 = load i16, i16* %250, align 2
  %252 = and i16 %251, 255
  %253 = zext i16 %252 to i64
  %254 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 %253
  store i32 %99, i32* %254, align 4
  %255 = add nsw i64 %242, 1
  br label %256

256:                                              ; preds = %241, %248
  %257 = phi i64 [ %242, %241 ], [ %255, %248 ]
  %258 = sub nsw i64 0, %243
  %259 = icmp eq i64 %245, %258
  br i1 %259, label %279, label %260

260:                                              ; preds = %256, %260
  %261 = phi i64 [ %277, %260 ], [ %257, %256 ]
  %262 = load i16*, i16** %5, align 8
  %263 = getelementptr inbounds i16, i16* %262, i64 %261
  %264 = load i16, i16* %263, align 2
  %265 = and i16 %264, 255
  %266 = zext i16 %265 to i64
  %267 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 %266
  %268 = trunc i64 %261 to i32
  store i32 %268, i32* %267, align 4
  %269 = add nsw i64 %261, 1
  %270 = load i16*, i16** %5, align 8
  %271 = getelementptr inbounds i16, i16* %270, i64 %269
  %272 = load i16, i16* %271, align 2
  %273 = and i16 %272, 255
  %274 = zext i16 %273 to i64
  %275 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 %274
  %276 = trunc i64 %269 to i32
  store i32 %276, i32* %275, align 4
  %277 = add nsw i64 %261, 2
  %278 = icmp eq i64 %277, %243
  br i1 %278, label %279, label %260

279:                                              ; preds = %256, %260, %238
  %280 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIttE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32)** %280, align 8
  %281 = tail call i32 @_ZN2v88internal12StringSearchIttE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1241"* %0, i16* %1, i64 %2, i32 %23)
  br label %288

282:                                              ; preds = %92
  %283 = add nsw i32 %24, %93
  %284 = add nsw i32 %72, 1
  %285 = icmp sgt i32 %11, %72
  br i1 %285, label %21, label %288

286:                                              ; preds = %92
  %287 = trunc i64 %71 to i32
  br label %288

288:                                              ; preds = %286, %70, %282, %67, %46, %36, %4, %279
  %289 = phi i32 [ %281, %279 ], [ -1, %4 ], [ -1, %36 ], [ -1, %46 ], [ -1, %67 ], [ %287, %286 ], [ -1, %70 ], [ -1, %282 ]
  ret i32 %289
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIttE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 0
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = add nsw i32 %10, -1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i16, i16* %6, i64 %14
  %16 = load i16, i16* %15, align 2
  %17 = and i16 %16, 255
  %18 = zext i16 %17 to i64
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = sub nsw i32 %13, %20
  %22 = sub nsw i32 %9, %10
  %23 = add i32 %10, -2
  %24 = icmp sgt i32 %23, -1
  %25 = sub i32 %10, %21
  br i1 %24, label %26, label %70

26:                                               ; preds = %4
  %27 = sub nsw i32 0, %10
  %28 = sext i32 %23 to i64
  br label %29

29:                                               ; preds = %26, %59
  %30 = phi i32 [ %61, %59 ], [ %3, %26 ]
  %31 = phi i32 [ %63, %59 ], [ %27, %26 ]
  %32 = icmp sgt i32 %30, %22
  br i1 %32, label %90, label %33

33:                                               ; preds = %29, %41
  %34 = phi i32 [ %47, %41 ], [ %30, %29 ]
  %35 = phi i32 [ %49, %41 ], [ %31, %29 ]
  %36 = add nsw i32 %34, %13
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i16, i16* %1, i64 %37
  %39 = load i16, i16* %38, align 2
  %40 = icmp eq i16 %16, %39
  br i1 %40, label %68, label %41

41:                                               ; preds = %33
  %42 = and i16 %39, 255
  %43 = zext i16 %42 to i64
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = sub nsw i32 %13, %45
  %47 = add nsw i32 %46, %34
  %48 = add i32 %35, 1
  %49 = sub i32 %48, %46
  %50 = icmp sgt i32 %47, %22
  br i1 %50, label %90, label %33

51:                                               ; preds = %68, %65
  %52 = phi i64 [ %28, %68 ], [ %66, %65 ]
  %53 = getelementptr inbounds i16, i16* %6, i64 %52
  %54 = load i16, i16* %53, align 2
  %55 = add nsw i64 %52, %69
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  %57 = load i16, i16* %56, align 2
  %58 = icmp eq i16 %54, %57
  br i1 %58, label %65, label %59

59:                                               ; preds = %51
  %60 = trunc i64 %52 to i32
  %61 = add nsw i32 %34, %21
  %62 = add i32 %25, %35
  %63 = sub i32 %62, %60
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %87, label %29

65:                                               ; preds = %51
  %66 = add nsw i64 %52, -1
  %67 = icmp sgt i64 %52, 0
  br i1 %67, label %51, label %90

68:                                               ; preds = %33
  %69 = sext i32 %34 to i64
  br label %51

70:                                               ; preds = %4
  %71 = icmp slt i32 %22, %3
  br i1 %71, label %90, label %72

72:                                               ; preds = %70, %79
  %73 = phi i32 [ %85, %79 ], [ %3, %70 ]
  %74 = add nsw i32 %73, %13
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i16, i16* %1, i64 %75
  %77 = load i16, i16* %76, align 2
  %78 = icmp eq i16 %16, %77
  br i1 %78, label %90, label %79

79:                                               ; preds = %72
  %80 = and i16 %77, 255
  %81 = zext i16 %80 to i64
  %82 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = sub nsw i32 %13, %83
  %85 = add nsw i32 %84, %73
  %86 = icmp sgt i32 %85, %22
  br i1 %86, label %90, label %72

87:                                               ; preds = %59
  tail call void @_ZN2v88internal12StringSearchIttE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch.1241"* %0)
  %88 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIttE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32)** %88, align 8
  %89 = tail call i32 @_ZN2v88internal12StringSearchIttE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1241"* %0, i16* %1, i64 %2, i32 %61)
  br label %90

90:                                               ; preds = %79, %72, %29, %41, %65, %70, %87
  %91 = phi i32 [ %89, %87 ], [ -1, %70 ], [ %34, %65 ], [ -1, %41 ], [ -1, %29 ], [ %73, %72 ], [ -1, %79 ]
  ret i32 %91
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StringSearchIttE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch.1241"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = sub nsw i32 %4, %8
  %10 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = sext i32 %8 to i64
  %13 = sub nsw i64 0, %12
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %13
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 123, i64 %13
  %16 = icmp slt i32 %8, %4
  br i1 %16, label %17, label %100

17:                                               ; preds = %1
  %18 = shl i64 %3, 32
  %19 = ashr exact i64 %18, 32
  %20 = shl i64 %3, 32
  %21 = ashr exact i64 %20, 32
  %22 = sub nsw i64 %21, %12
  %23 = icmp ult i64 %22, 8
  br i1 %23, label %24, label %26

24:                                               ; preds = %98, %17
  %25 = phi i64 [ %12, %17 ], [ %28, %98 ]
  br label %106

26:                                               ; preds = %17
  %27 = and i64 %22, -8
  %28 = add nsw i64 %27, %12
  %29 = insertelement <4 x i32> undef, i32 %9, i32 0
  %30 = shufflevector <4 x i32> %29, <4 x i32> undef, <4 x i32> zeroinitializer
  %31 = insertelement <4 x i32> undef, i32 %9, i32 0
  %32 = shufflevector <4 x i32> %31, <4 x i32> undef, <4 x i32> zeroinitializer
  %33 = add nsw i64 %27, -8
  %34 = lshr exact i64 %33, 3
  %35 = add nuw nsw i64 %34, 1
  %36 = and i64 %35, 7
  %37 = icmp ult i64 %33, 56
  br i1 %37, label %85, label %38

38:                                               ; preds = %26
  %39 = sub nsw i64 %35, %36
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi i64 [ 0, %38 ], [ %82, %40 ]
  %42 = phi i64 [ %39, %38 ], [ %83, %40 ]
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %41
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %44, align 4
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %46, align 4
  %47 = or i64 %41, 8
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %49, align 4
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %51, align 4
  %52 = or i64 %41, 16
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %54, align 4
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %56, align 4
  %57 = or i64 %41, 24
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %59, align 4
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %61, align 4
  %62 = or i64 %41, 32
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %64, align 4
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %66, align 4
  %67 = or i64 %41, 40
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %69, align 4
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %71, align 4
  %72 = or i64 %41, 48
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %74, align 4
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %76, align 4
  %77 = or i64 %41, 56
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %77
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %79, align 4
  %80 = getelementptr inbounds i32, i32* %78, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %81, align 4
  %82 = add i64 %41, 64
  %83 = add i64 %42, -8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %40, !llvm.loop !44

85:                                               ; preds = %40, %26
  %86 = phi i64 [ 0, %26 ], [ %82, %40 ]
  %87 = icmp eq i64 %36, 0
  br i1 %87, label %98, label %88

88:                                               ; preds = %85, %88
  %89 = phi i64 [ %95, %88 ], [ %86, %85 ]
  %90 = phi i64 [ %96, %88 ], [ %36, %85 ]
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %89
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %92, align 4
  %93 = getelementptr inbounds i32, i32* %91, i64 4
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %94, align 4
  %95 = add i64 %89, 8
  %96 = add i64 %90, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %88, !llvm.loop !45

98:                                               ; preds = %88, %85
  %99 = icmp eq i64 %22, %27
  br i1 %99, label %100, label %24

100:                                              ; preds = %106, %98, %1
  %101 = shl i64 %3, 32
  %102 = ashr exact i64 %101, 32
  %103 = getelementptr inbounds i32, i32* %14, i64 %102
  store i32 1, i32* %103, align 4
  %104 = add nsw i32 %4, 1
  %105 = getelementptr inbounds i32, i32* %15, i64 %102
  store i32 %104, i32* %105, align 4
  br i1 %16, label %111, label %227

106:                                              ; preds = %24, %106
  %107 = phi i64 [ %109, %106 ], [ %25, %24 ]
  %108 = getelementptr inbounds i32, i32* %14, i64 %107
  store i32 %9, i32* %108, align 4
  %109 = add nsw i64 %107, 1
  %110 = icmp eq i64 %109, %19
  br i1 %110, label %100, label %106, !llvm.loop !46

111:                                              ; preds = %100
  %112 = add i64 %101, -4294967296
  %113 = ashr exact i64 %112, 32
  %114 = getelementptr inbounds i16, i16* %6, i64 %113
  %115 = load i16, i16* %114, align 2
  %116 = shl i64 %3, 32
  %117 = ashr exact i64 %116, 32
  br label %118

118:                                              ; preds = %111, %172
  %119 = phi i32 [ %4, %111 ], [ %174, %172 ]
  %120 = phi i32 [ %104, %111 ], [ %173, %172 ]
  %121 = add nsw i32 %119, -1
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i16, i16* %6, i64 %122
  %124 = load i16, i16* %123, align 2
  %125 = icmp sgt i32 %120, %4
  br i1 %125, label %144, label %126

126:                                              ; preds = %118, %140
  %127 = phi i32 [ %142, %140 ], [ %120, %118 ]
  %128 = add nsw i32 %127, -1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i16, i16* %6, i64 %129
  %131 = load i16, i16* %130, align 2
  %132 = icmp eq i16 %124, %131
  br i1 %132, label %144, label %133

133:                                              ; preds = %126
  %134 = sext i32 %127 to i64
  %135 = getelementptr inbounds i32, i32* %14, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, %9
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = sub nsw i32 %127, %119
  store i32 %139, i32* %135, align 4
  br label %140

140:                                              ; preds = %138, %133
  %141 = getelementptr inbounds i32, i32* %15, i64 %134
  %142 = load i32, i32* %141, align 4
  %143 = icmp sgt i32 %142, %4
  br i1 %143, label %144, label %126

144:                                              ; preds = %140, %126, %118
  %145 = phi i32 [ %120, %118 ], [ %127, %126 ], [ %142, %140 ]
  %146 = add nsw i32 %145, -1
  %147 = getelementptr inbounds i32, i32* %15, i64 %122
  store i32 %146, i32* %147, align 4
  %148 = icmp eq i32 %146, %4
  %149 = icmp sgt i32 %121, %8
  %150 = and i1 %148, %149
  br i1 %150, label %151, label %172

151:                                              ; preds = %144, %163
  %152 = phi i64 [ %153, %163 ], [ %122, %144 ]
  %153 = add nsw i64 %152, -1
  %154 = getelementptr inbounds i16, i16* %6, i64 %153
  %155 = load i16, i16* %154, align 2
  %156 = icmp eq i16 %155, %115
  br i1 %156, label %166, label %157

157:                                              ; preds = %151
  %158 = load i32, i32* %103, align 4
  %159 = icmp eq i32 %158, %9
  br i1 %159, label %160, label %163

160:                                              ; preds = %157
  %161 = sub nsw i64 %117, %152
  %162 = trunc i64 %161 to i32
  store i32 %162, i32* %103, align 4
  br label %163

163:                                              ; preds = %160, %157
  %164 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %4, i32* %164, align 4
  %165 = icmp sgt i64 %153, %12
  br i1 %165, label %151, label %170

166:                                              ; preds = %151
  %167 = trunc i64 %153 to i32
  %168 = add nsw i32 %145, -2
  %169 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %168, i32* %169, align 4
  br label %172

170:                                              ; preds = %163
  %171 = trunc i64 %153 to i32
  br label %172

172:                                              ; preds = %170, %166, %144
  %173 = phi i32 [ %168, %166 ], [ %146, %144 ], [ %4, %170 ]
  %174 = phi i32 [ %167, %166 ], [ %121, %144 ], [ %171, %170 ]
  %175 = icmp sgt i32 %174, %8
  br i1 %175, label %118, label %176

176:                                              ; preds = %172
  %177 = icmp sge i32 %173, %4
  %178 = icmp sgt i32 %8, %4
  %179 = or i1 %177, %178
  br i1 %179, label %227, label %180

180:                                              ; preds = %176
  %181 = shl i64 %3, 32
  %182 = ashr exact i64 %181, 32
  %183 = add nsw i64 %182, 1
  %184 = sub nsw i64 %183, %12
  %185 = and i64 %184, 1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %202, label %187

187:                                              ; preds = %180
  %188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, %9
  br i1 %190, label %191, label %193

191:                                              ; preds = %187
  %192 = sub nsw i32 %173, %8
  store i32 %192, i32* %188, align 4
  br label %193

193:                                              ; preds = %191, %187
  %194 = icmp eq i32 %173, %8
  br i1 %194, label %195, label %199

195:                                              ; preds = %193
  %196 = sext i32 %173 to i64
  %197 = getelementptr inbounds i32, i32* %15, i64 %196
  %198 = load i32, i32* %197, align 4
  br label %199

199:                                              ; preds = %195, %193
  %200 = phi i32 [ %198, %195 ], [ %173, %193 ]
  %201 = add nsw i64 %12, 1
  br label %202

202:                                              ; preds = %180, %199
  %203 = phi i64 [ %12, %180 ], [ %201, %199 ]
  %204 = phi i32 [ %173, %180 ], [ %200, %199 ]
  %205 = icmp eq i64 %182, %12
  br i1 %205, label %227, label %206

206:                                              ; preds = %202, %237
  %207 = phi i64 [ %239, %237 ], [ %203, %202 ]
  %208 = phi i32 [ %238, %237 ], [ %204, %202 ]
  %209 = getelementptr inbounds i32, i32* %14, i64 %207
  %210 = load i32, i32* %209, align 4
  %211 = icmp eq i32 %210, %9
  br i1 %211, label %212, label %214

212:                                              ; preds = %206
  %213 = sub nsw i32 %208, %8
  store i32 %213, i32* %209, align 4
  br label %214

214:                                              ; preds = %212, %206
  %215 = trunc i64 %207 to i32
  %216 = icmp eq i32 %208, %215
  br i1 %216, label %217, label %221

217:                                              ; preds = %214
  %218 = sext i32 %208 to i64
  %219 = getelementptr inbounds i32, i32* %15, i64 %218
  %220 = load i32, i32* %219, align 4
  br label %221

221:                                              ; preds = %214, %217
  %222 = phi i32 [ %220, %217 ], [ %208, %214 ]
  %223 = add nsw i64 %207, 1
  %224 = getelementptr inbounds i32, i32* %14, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = icmp eq i32 %225, %9
  br i1 %226, label %228, label %230

227:                                              ; preds = %202, %237, %176, %100
  ret void

228:                                              ; preds = %221
  %229 = sub nsw i32 %222, %8
  store i32 %229, i32* %224, align 4
  br label %230

230:                                              ; preds = %228, %221
  %231 = trunc i64 %223 to i32
  %232 = icmp eq i32 %222, %231
  br i1 %232, label %233, label %237

233:                                              ; preds = %230
  %234 = sext i32 %222 to i64
  %235 = getelementptr inbounds i32, i32* %15, i64 %234
  %236 = load i32, i32* %235, align 4
  br label %237

237:                                              ; preds = %233, %230
  %238 = phi i32 [ %236, %233 ], [ %222, %230 ]
  %239 = add nsw i64 %207, 2
  %240 = icmp slt i64 %223, %117
  br i1 %240, label %206, label %227
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIttE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %15 = sext i32 %12 to i64
  %16 = sub nsw i64 0, %15
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 122, i64 %16
  %18 = add nsw i32 %10, -1
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i16, i16* %6, i64 %19
  %21 = load i16, i16* %20, align 2
  %22 = sub nsw i32 %9, %10
  %23 = icmp slt i32 %22, %3
  br i1 %23, label %100, label %24

24:                                               ; preds = %4
  %25 = icmp sgt i32 %10, 0
  %26 = and i16 %21, 255
  %27 = zext i16 %26 to i64
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %27
  br i1 %25, label %29, label %85

29:                                               ; preds = %24
  %30 = shl i64 %8, 32
  %31 = ashr exact i64 %30, 32
  br label %32

32:                                               ; preds = %47, %29
  %33 = phi i32 [ %3, %29 ], [ %48, %47 ]
  %34 = add nsw i32 %33, %18
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  %37 = load i16, i16* %36, align 2
  %38 = icmp eq i16 %21, %37
  br i1 %38, label %83, label %39

39:                                               ; preds = %32
  %40 = and i16 %37, 255
  %41 = zext i16 %40 to i64
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = sub nsw i32 %18, %43
  %45 = add nsw i32 %44, %33
  %46 = icmp sgt i32 %45, %22
  br i1 %46, label %100, label %47

47:                                               ; preds = %39, %77
  %48 = phi i32 [ %45, %39 ], [ %79, %77 ]
  br label %32

49:                                               ; preds = %83, %81
  %50 = phi i64 [ %31, %83 ], [ %51, %81 ]
  %51 = add i64 %50, -1
  %52 = getelementptr inbounds i16, i16* %6, i64 %51
  %53 = load i16, i16* %52, align 2
  %54 = add nsw i64 %51, %84
  %55 = getelementptr inbounds i16, i16* %1, i64 %54
  %56 = load i16, i16* %55, align 2
  %57 = icmp eq i16 %53, %56
  br i1 %57, label %81, label %58

58:                                               ; preds = %49
  %59 = trunc i64 %51 to i32
  %60 = icmp sgt i32 %12, %59
  br i1 %60, label %74, label %61

61:                                               ; preds = %58
  %62 = shl i64 %51, 32
  %63 = add i64 %62, 4294967296
  %64 = ashr exact i64 %63, 32
  %65 = getelementptr inbounds i32, i32* %17, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = and i16 %56, 255
  %68 = zext i16 %67 to i64
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = sub nsw i32 %59, %70
  %72 = icmp sgt i32 %66, %71
  %73 = select i1 %72, i32 %66, i32 %71
  br label %77

74:                                               ; preds = %58
  %75 = load i32, i32* %28, align 4
  %76 = sub nsw i32 %18, %75
  br label %77

77:                                               ; preds = %74, %61
  %78 = phi i32 [ %76, %74 ], [ %73, %61 ]
  %79 = add nsw i32 %78, %33
  %80 = icmp sgt i32 %79, %22
  br i1 %80, label %100, label %47

81:                                               ; preds = %49
  %82 = icmp sgt i64 %51, 0
  br i1 %82, label %49, label %100

83:                                               ; preds = %32
  %84 = sext i32 %33 to i64
  br label %49

85:                                               ; preds = %24, %92
  %86 = phi i32 [ %98, %92 ], [ %3, %24 ]
  %87 = add nsw i32 %86, %18
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i16, i16* %1, i64 %88
  %90 = load i16, i16* %89, align 2
  %91 = icmp eq i16 %21, %90
  br i1 %91, label %100, label %92

92:                                               ; preds = %85
  %93 = and i16 %90, 255
  %94 = zext i16 %93 to i64
  %95 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %94
  %96 = load i32, i32* %95, align 4
  %97 = sub nsw i32 %18, %96
  %98 = add nsw i32 %97, %86
  %99 = icmp sgt i32 %98, %22
  br i1 %99, label %100, label %85

100:                                              ; preds = %92, %85, %77, %39, %81, %4
  %101 = phi i32 [ -1, %4 ], [ %33, %81 ], [ -1, %39 ], [ -1, %77 ], [ %86, %85 ], [ -1, %92 ]
  ret i32 %101
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #17

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nofree nounwind readonly }
attributes #18 = { noreturn nounwind }
attributes #19 = { nounwind readonly }
attributes #20 = { builtin nounwind }
attributes #21 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1073205, i32 2146410443}
!5 = !{i8 0, i8 2}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = !{!9}
!9 = distinct !{!9, !10}
!10 = distinct !{!10, !"LVerDomain"}
!11 = !{!12}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.isvectorized", i32 1}
!15 = distinct !{!15, !7}
!16 = distinct !{!16, !14}
!17 = distinct !{!17, !7}
!18 = !{!19}
!19 = distinct !{!19, !20}
!20 = distinct !{!20, !"LVerDomain"}
!21 = !{!22}
!22 = distinct !{!22, !20}
!23 = distinct !{!23, !14}
!24 = distinct !{!24, !7}
!25 = distinct !{!25, !14}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN2v88internal31SharedStringAccessGuardIfNeeded9NotNeededEv: argument 0"}
!28 = distinct !{!28, !"_ZN2v88internal31SharedStringAccessGuardIfNeeded9NotNeededEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN2v88internal31SharedStringAccessGuardIfNeeded9NotNeededEv: argument 0"}
!31 = distinct !{!31, !"_ZN2v88internal31SharedStringAccessGuardIfNeeded9NotNeededEv"}
!32 = distinct !{!32, !7}
!33 = distinct !{!33, !14}
!34 = distinct !{!34, !7}
!35 = distinct !{!35, !36, !14}
!36 = !{!"llvm.loop.unroll.runtime.disable"}
!37 = distinct !{!37, !14}
!38 = distinct !{!38, !7}
!39 = distinct !{!39, !36, !14}
!40 = distinct !{!40, !7}
!41 = distinct !{!41, !14}
!42 = distinct !{!42, !7}
!43 = distinct !{!43, !36, !14}
!44 = distinct !{!44, !14}
!45 = distinct !{!45, !7}
!46 = distinct !{!46, !36, !14}
