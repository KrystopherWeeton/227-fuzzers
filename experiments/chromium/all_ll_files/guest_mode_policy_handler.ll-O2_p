; ModuleID = '../../chrome/browser/profiles/guest_mode_policy_handler.cc'
source_filename = "../../chrome/browser/profiles/guest_mode_policy_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.policy::GuestModePolicyHandler" = type { %"class.policy::TypeCheckingPolicyHandler.base", [7 x i8] }
%"class.policy::TypeCheckingPolicyHandler.base" = type <{ %"class.policy::NamedPolicyHandler", i8 }>
%"class.policy::NamedPolicyHandler" = type { %"class.policy::ConfigurationPolicyHandler", i8* }
%"class.policy::ConfigurationPolicyHandler" = type { i32 (...)** }
%"class.policy::TypeCheckingPolicyHandler" = type <{ %"class.policy::NamedPolicyHandler", i8, [7 x i8] }>
%"class.policy::PolicyMap" = type { %"class.std::__1::map", i8, %"class.base::internal::flat_tree", %"class.base::internal::flat_tree" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::basic_string"* }
%class.PrefValueMap = type { i32 (...)**, %"class.std::__1::map.14" }
%"class.std::__1::map.14" = type { %"class.std::__1::__tree.15" }
%"class.std::__1::__tree.15" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.23" }
%"union.absl::variant_internal::DestructibleUnionImpl.23" = type { %"union.absl::variant_internal::DestructibleUnionImpl.24" }
%"union.absl::variant_internal::DestructibleUnionImpl.24" = type { %"union.absl::variant_internal::DestructibleUnionImpl.25" }
%"union.absl::variant_internal::DestructibleUnionImpl.25" = type { %"union.absl::variant_internal::DestructibleUnionImpl.26" }
%"union.absl::variant_internal::DestructibleUnionImpl.26" = type { %"class.std::__1::basic_string" }
%"class.policy::PolicyErrorMap" = type opaque
%"struct.policy::PolicyHandlerParameters" = type opaque

@_ZN6policy3key24kBrowserGuestModeEnabledE = external constant [0 x i8], align 1
@_ZTVN6policy22GuestModePolicyHandlerE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.policy::GuestModePolicyHandler"*)* @_ZN6policy22GuestModePolicyHandlerD2Ev to i8*), i8* bitcast (void (%"class.policy::GuestModePolicyHandler"*)* @_ZN6policy22GuestModePolicyHandlerD0Ev to i8*), i8* bitcast (i1 (%"class.policy::TypeCheckingPolicyHandler"*, %"class.policy::PolicyMap"*, %"class.policy::PolicyErrorMap"*)* @_ZN6policy25TypeCheckingPolicyHandler19CheckPolicySettingsERKNS_9PolicyMapEPNS_14PolicyErrorMapE to i8*), i8* bitcast (void (%"class.policy::ConfigurationPolicyHandler"*, %"class.policy::PolicyMap"*, %"struct.policy::PolicyHandlerParameters"*, %class.PrefValueMap*)* @_ZN6policy26ConfigurationPolicyHandler33ApplyPolicySettingsWithParametersERKNS_9PolicyMapERKNS_23PolicyHandlerParametersEP12PrefValueMap to i8*), i8* bitcast (void (%"class.policy::ConfigurationPolicyHandler"*, %"class.policy::PolicyMap"*)* @_ZNK6policy26ConfigurationPolicyHandler20PrepareForDisplayingEPNS_9PolicyMapE to i8*), i8* bitcast (void (%"class.policy::GuestModePolicyHandler"*, %"class.policy::PolicyMap"*, %class.PrefValueMap*)* @_ZN6policy22GuestModePolicyHandler19ApplyPolicySettingsERKNS_9PolicyMapEP12PrefValueMap to i8*)] }, align 8
@_ZN5prefs24kBrowserGuestModeEnabledE = external constant [0 x i8], align 1
@_ZN6policy3key14kBrowserSigninE = external constant [0 x i8], align 1
@_ZN6policy3key19kForceBrowserSigninE = external constant [0 x i8], align 1

@_ZN6policy22GuestModePolicyHandlerC1Ev = hidden unnamed_addr alias void (%"class.policy::GuestModePolicyHandler"*), void (%"class.policy::GuestModePolicyHandler"*)* @_ZN6policy22GuestModePolicyHandlerC2Ev
@_ZN6policy22GuestModePolicyHandlerD1Ev = hidden unnamed_addr alias void (%"class.policy::GuestModePolicyHandler"*), void (%"class.policy::GuestModePolicyHandler"*)* @_ZN6policy22GuestModePolicyHandlerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy22GuestModePolicyHandlerC2Ev(%"class.policy::GuestModePolicyHandler"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.policy::GuestModePolicyHandler"* %0 to %"class.policy::TypeCheckingPolicyHandler"*
  tail call void @_ZN6policy25TypeCheckingPolicyHandlerC2EPKcN4base5Value4TypeE(%"class.policy::TypeCheckingPolicyHandler"* %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6policy3key24kBrowserGuestModeEnabledE, i64 0, i64 0), i8 zeroext 1) #8
  %3 = getelementptr inbounds %"class.policy::GuestModePolicyHandler", %"class.policy::GuestModePolicyHandler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN6policy22GuestModePolicyHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN6policy25TypeCheckingPolicyHandlerC2EPKcN4base5Value4TypeE(%"class.policy::TypeCheckingPolicyHandler"*, i8*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6policy25TypeCheckingPolicyHandlerD2Ev(%"class.policy::TypeCheckingPolicyHandler"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy22GuestModePolicyHandlerD2Ev(%"class.policy::GuestModePolicyHandler"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.policy::GuestModePolicyHandler"* %0 to %"class.policy::TypeCheckingPolicyHandler"*
  tail call void @_ZN6policy25TypeCheckingPolicyHandlerD2Ev(%"class.policy::TypeCheckingPolicyHandler"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy22GuestModePolicyHandlerD0Ev(%"class.policy::GuestModePolicyHandler"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.policy::GuestModePolicyHandler"* %0 to %"class.policy::TypeCheckingPolicyHandler"*
  tail call void @_ZN6policy25TypeCheckingPolicyHandlerD2Ev(%"class.policy::TypeCheckingPolicyHandler"* %2) #8
  %3 = bitcast %"class.policy::GuestModePolicyHandler"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy22GuestModePolicyHandler19ApplyPolicySettingsERKNS_9PolicyMapEP12PrefValueMap(%"class.policy::GuestModePolicyHandler"*, %"class.policy::PolicyMap"* dereferenceable(80), %class.PrefValueMap*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.policy::GuestModePolicyHandler", %"class.policy::GuestModePolicyHandler"* %0, i64 0, i32 0, i32 0
  %12 = tail call i8* @_ZNK6policy18NamedPolicyHandler11policy_nameEv(%"class.policy::NamedPolicyHandler"* %11) #8
  %13 = tail call i64 @strlen(i8* %12) #8
  %14 = icmp ugt i64 %13, -17
  br i1 %14, label %15, label %17

15:                                               ; preds = %3
  %16 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %16) #10
  unreachable

17:                                               ; preds = %3
  %18 = icmp ult i64 %13, 23
  br i1 %18, label %28, label %19

19:                                               ; preds = %17
  %20 = add nuw i64 %13, 16
  %21 = and i64 %20, -16
  %22 = tail call i8* @_Znwm(i64 %21) #9
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %22, i8** %23, align 8
  %24 = or i64 %21, -9223372036854775808
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %13, i64* %26, align 8
  %27 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %33

28:                                               ; preds = %17
  %29 = trunc i64 %13 to i8
  %30 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  store i8 %29, i8* %31, align 1
  %32 = icmp eq i64 %13, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %28, %19
  %34 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %30, %28 ], [ %27, %19 ]
  %35 = phi i8* [ %10, %28 ], [ %22, %19 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %35, i8* align 1 %12, i64 %13, i1 false) #8
  br label %36

36:                                               ; preds = %28, %33
  %37 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %30, %28 ], [ %34, %33 ]
  %38 = phi i8* [ %10, %28 ], [ %35, %33 ]
  %39 = getelementptr inbounds i8, i8* %38, i64 %13
  store i8 0, i8* %39, align 1
  %40 = call %"class.base::Value"* @_ZNK6policy9PolicyMap8GetValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.policy::PolicyMap"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #8
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %46) #9
  br label %47

47:                                               ; preds = %36, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8
  %48 = icmp eq %"class.base::Value"* %40, null
  br i1 %48, label %91, label %49

49:                                               ; preds = %47
  %50 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = trunc i64 %51 to i8
  %53 = icmp eq i8 %52, 1
  br i1 %53, label %54, label %91

54:                                               ; preds = %49
  %55 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #8
  %56 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs24kBrowserGuestModeEnabledE, i64 0, i64 0)) #8
  %57 = icmp ugt i64 %56, -17
  br i1 %57, label %58, label %60

58:                                               ; preds = %54
  %59 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %59) #10
  unreachable

60:                                               ; preds = %54
  %61 = icmp ult i64 %56, 23
  br i1 %61, label %71, label %62

62:                                               ; preds = %60
  %63 = add nuw i64 %56, 16
  %64 = and i64 %63, -16
  %65 = call i8* @_Znwm(i64 %64) #9
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %65, i8** %66, align 8
  %67 = or i64 %64, -9223372036854775808
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %56, i64* %69, align 8
  %70 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %76

71:                                               ; preds = %60
  %72 = trunc i64 %56 to i8
  %73 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  store i8 %72, i8* %74, align 1
  %75 = icmp eq i64 %56, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %71, %62
  %77 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %73, %71 ], [ %70, %62 ]
  %78 = phi i8* [ %55, %71 ], [ %65, %62 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %78, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs24kBrowserGuestModeEnabledE, i64 0, i64 0), i64 %56, i1 false) #8
  br label %79

79:                                               ; preds = %71, %76
  %80 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %73, %71 ], [ %77, %76 ]
  %81 = phi i8* [ %55, %71 ], [ %78, %76 ]
  %82 = getelementptr inbounds i8, i8* %81, i64 %56
  store i8 0, i8* %82, align 1
  %83 = call zeroext i1 @_ZNK4base5Value7GetBoolEv(%"class.base::Value"* nonnull %40) #8
  call void @_ZN12PrefValueMap10SetBooleanERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(%class.PrefValueMap* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, i1 zeroext %83) #8
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %79
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  call void @_ZdlPv(i8* %89) #9
  br label %90

90:                                               ; preds = %79, %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #8
  br label %256

91:                                               ; preds = %47, %49
  %92 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #8
  %93 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6policy3key14kBrowserSigninE, i64 0, i64 0)) #8
  %94 = icmp ugt i64 %93, -17
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  %96 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %96) #10
  unreachable

97:                                               ; preds = %91
  %98 = icmp ult i64 %93, 23
  br i1 %98, label %108, label %99

99:                                               ; preds = %97
  %100 = add nuw i64 %93, 16
  %101 = and i64 %100, -16
  %102 = call i8* @_Znwm(i64 %101) #9
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %102, i8** %103, align 8
  %104 = or i64 %101, -9223372036854775808
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %93, i64* %106, align 8
  %107 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %113

108:                                              ; preds = %97
  %109 = trunc i64 %93 to i8
  %110 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  store i8 %109, i8* %111, align 1
  %112 = icmp eq i64 %93, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %108, %99
  %114 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %110, %108 ], [ %107, %99 ]
  %115 = phi i8* [ %92, %108 ], [ %102, %99 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %115, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6policy3key14kBrowserSigninE, i64 0, i64 0), i64 %93, i1 false) #8
  br label %116

116:                                              ; preds = %108, %113
  %117 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %110, %108 ], [ %114, %113 ]
  %118 = phi i8* [ %92, %108 ], [ %115, %113 ]
  %119 = getelementptr inbounds i8, i8* %118, i64 %93
  store i8 0, i8* %119, align 1
  %120 = call %"class.base::Value"* @_ZNK6policy9PolicyMap8GetValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.policy::PolicyMap"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #8
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  call void @_ZdlPv(i8* %126) #9
  br label %127

127:                                              ; preds = %116, %124
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #8
  %128 = icmp eq %"class.base::Value"* %120, null
  br i1 %128, label %173, label %129

129:                                              ; preds = %127
  %130 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %131 = load i64, i64* %130, align 8
  %132 = trunc i64 %131 to i8
  %133 = icmp eq i8 %132, 2
  br i1 %133, label %134, label %173

134:                                              ; preds = %129
  %135 = call i32 @_ZNK4base5Value6GetIntEv(%"class.base::Value"* nonnull %120) #8
  %136 = icmp eq i32 %135, 2
  br i1 %136, label %137, label %173

137:                                              ; preds = %134
  %138 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %138) #8
  %139 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs24kBrowserGuestModeEnabledE, i64 0, i64 0)) #8
  %140 = icmp ugt i64 %139, -17
  br i1 %140, label %141, label %143

141:                                              ; preds = %137
  %142 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %142) #10
  unreachable

143:                                              ; preds = %137
  %144 = icmp ult i64 %139, 23
  br i1 %144, label %154, label %145

145:                                              ; preds = %143
  %146 = add nuw i64 %139, 16
  %147 = and i64 %146, -16
  %148 = call i8* @_Znwm(i64 %147) #9
  %149 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %148, i8** %149, align 8
  %150 = or i64 %147, -9223372036854775808
  %151 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %139, i64* %152, align 8
  %153 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %159

154:                                              ; preds = %143
  %155 = trunc i64 %139 to i8
  %156 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %156, i64 0, i32 1, i32 0
  store i8 %155, i8* %157, align 1
  %158 = icmp eq i64 %139, 0
  br i1 %158, label %162, label %159

159:                                              ; preds = %154, %145
  %160 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %156, %154 ], [ %153, %145 ]
  %161 = phi i8* [ %138, %154 ], [ %148, %145 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %161, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs24kBrowserGuestModeEnabledE, i64 0, i64 0), i64 %139, i1 false) #8
  br label %162

162:                                              ; preds = %154, %159
  %163 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %156, %154 ], [ %160, %159 ]
  %164 = phi i8* [ %138, %154 ], [ %161, %159 ]
  %165 = getelementptr inbounds i8, i8* %164, i64 %139
  store i8 0, i8* %165, align 1
  call void @_ZN12PrefValueMap10SetBooleanERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(%class.PrefValueMap* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, i1 zeroext false) #8
  %166 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %163, i64 0, i32 1, i32 0
  %167 = load i8, i8* %166, align 1
  %168 = icmp slt i8 %167, 0
  br i1 %168, label %169, label %172

169:                                              ; preds = %162
  %170 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load i8*, i8** %170, align 8
  call void @_ZdlPv(i8* %171) #9
  br label %172

172:                                              ; preds = %162, %169
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #8
  br label %256

173:                                              ; preds = %127, %134, %129
  %174 = phi i1 [ false, %134 ], [ true, %129 ], [ true, %127 ]
  %175 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %175) #8
  %176 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6policy3key19kForceBrowserSigninE, i64 0, i64 0)) #8
  %177 = icmp ugt i64 %176, -17
  br i1 %177, label %178, label %180

178:                                              ; preds = %173
  %179 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %179) #10
  unreachable

180:                                              ; preds = %173
  %181 = icmp ult i64 %176, 23
  br i1 %181, label %191, label %182

182:                                              ; preds = %180
  %183 = add nuw i64 %176, 16
  %184 = and i64 %183, -16
  %185 = call i8* @_Znwm(i64 %184) #9
  %186 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %185, i8** %186, align 8
  %187 = or i64 %184, -9223372036854775808
  %188 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %176, i64* %189, align 8
  %190 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %196

191:                                              ; preds = %180
  %192 = trunc i64 %176 to i8
  %193 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %194 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %193, i64 0, i32 1, i32 0
  store i8 %192, i8* %194, align 1
  %195 = icmp eq i64 %176, 0
  br i1 %195, label %199, label %196

196:                                              ; preds = %191, %182
  %197 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %193, %191 ], [ %190, %182 ]
  %198 = phi i8* [ %175, %191 ], [ %185, %182 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %198, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6policy3key19kForceBrowserSigninE, i64 0, i64 0), i64 %176, i1 false) #8
  br label %199

199:                                              ; preds = %191, %196
  %200 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %193, %191 ], [ %197, %196 ]
  %201 = phi i8* [ %175, %191 ], [ %198, %196 ]
  %202 = getelementptr inbounds i8, i8* %201, i64 %176
  store i8 0, i8* %202, align 1
  %203 = call %"class.base::Value"* @_ZNK6policy9PolicyMap8GetValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.policy::PolicyMap"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #8
  %204 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %200, i64 0, i32 1, i32 0
  %205 = load i8, i8* %204, align 1
  %206 = icmp slt i8 %205, 0
  br i1 %206, label %207, label %210

207:                                              ; preds = %199
  %208 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load i8*, i8** %208, align 8
  call void @_ZdlPv(i8* %209) #9
  br label %210

210:                                              ; preds = %199, %207
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %175) #8
  %211 = icmp ne %"class.base::Value"* %203, null
  %212 = and i1 %174, %211
  br i1 %212, label %213, label %256

213:                                              ; preds = %210
  %214 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %203, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %215 = load i64, i64* %214, align 8
  %216 = trunc i64 %215 to i8
  %217 = icmp eq i8 %216, 1
  br i1 %217, label %218, label %256

218:                                              ; preds = %213
  %219 = call zeroext i1 @_ZNK4base5Value7GetBoolEv(%"class.base::Value"* nonnull %203) #8
  br i1 %219, label %220, label %256

220:                                              ; preds = %218
  %221 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %221) #8
  %222 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs24kBrowserGuestModeEnabledE, i64 0, i64 0)) #8
  %223 = icmp ugt i64 %222, -17
  br i1 %223, label %224, label %226

224:                                              ; preds = %220
  %225 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %225) #10
  unreachable

226:                                              ; preds = %220
  %227 = icmp ult i64 %222, 23
  br i1 %227, label %237, label %228

228:                                              ; preds = %226
  %229 = add nuw i64 %222, 16
  %230 = and i64 %229, -16
  %231 = call i8* @_Znwm(i64 %230) #9
  %232 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %231, i8** %232, align 8
  %233 = or i64 %230, -9223372036854775808
  %234 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %233, i64* %234, align 8
  %235 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %222, i64* %235, align 8
  %236 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %242

237:                                              ; preds = %226
  %238 = trunc i64 %222 to i8
  %239 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %240 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %239, i64 0, i32 1, i32 0
  store i8 %238, i8* %240, align 1
  %241 = icmp eq i64 %222, 0
  br i1 %241, label %245, label %242

242:                                              ; preds = %237, %228
  %243 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %239, %237 ], [ %236, %228 ]
  %244 = phi i8* [ %221, %237 ], [ %231, %228 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %244, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs24kBrowserGuestModeEnabledE, i64 0, i64 0), i64 %222, i1 false) #8
  br label %245

245:                                              ; preds = %237, %242
  %246 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %239, %237 ], [ %243, %242 ]
  %247 = phi i8* [ %221, %237 ], [ %244, %242 ]
  %248 = getelementptr inbounds i8, i8* %247, i64 %222
  store i8 0, i8* %248, align 1
  call void @_ZN12PrefValueMap10SetBooleanERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(%class.PrefValueMap* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, i1 zeroext false) #8
  %249 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %246, i64 0, i32 1, i32 0
  %250 = load i8, i8* %249, align 1
  %251 = icmp slt i8 %250, 0
  br i1 %251, label %252, label %255

252:                                              ; preds = %245
  %253 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load i8*, i8** %253, align 8
  call void @_ZdlPv(i8* %254) #9
  br label %255

255:                                              ; preds = %245, %252
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %221) #8
  br label %256

256:                                              ; preds = %172, %210, %255, %218, %213, %90
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.base::Value"* @_ZNK6policy9PolicyMap8GetValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.policy::PolicyMap"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare i8* @_ZNK6policy18NamedPolicyHandler11policy_nameEv(%"class.policy::NamedPolicyHandler"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN12PrefValueMap10SetBooleanERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(%class.PrefValueMap*, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base5Value7GetBoolEv(%"class.base::Value"*) local_unnamed_addr #1

declare i32 @_ZNK4base5Value6GetIntEv(%"class.base::Value"*) local_unnamed_addr #1

declare zeroext i1 @_ZN6policy25TypeCheckingPolicyHandler19CheckPolicySettingsERKNS_9PolicyMapEPNS_14PolicyErrorMapE(%"class.policy::TypeCheckingPolicyHandler"*, %"class.policy::PolicyMap"* dereferenceable(80), %"class.policy::PolicyErrorMap"*) unnamed_addr #1

declare void @_ZN6policy26ConfigurationPolicyHandler33ApplyPolicySettingsWithParametersERKNS_9PolicyMapERKNS_23PolicyHandlerParametersEP12PrefValueMap(%"class.policy::ConfigurationPolicyHandler"*, %"class.policy::PolicyMap"* dereferenceable(80), %"struct.policy::PolicyHandlerParameters"*, %class.PrefValueMap*) unnamed_addr #1

declare void @_ZNK6policy26ConfigurationPolicyHandler20PrepareForDisplayingEPNS_9PolicyMapE(%"class.policy::ConfigurationPolicyHandler"*, %"class.policy::PolicyMap"*) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
