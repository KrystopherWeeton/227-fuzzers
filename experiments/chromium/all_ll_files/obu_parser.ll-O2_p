; ModuleID = '../../third_party/libgav1/src/src/obu_parser.cc'
source_filename = "../../third_party/libgav1/src/src/obu_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.std::nothrow_t" = type { i8 }
%"struct.libgav1::ObuSequenceHeader" = type { i8, i8, i8, i32, [32 x i32], [32 x %"struct.libgav1::BitStreamLevel"], [32 x i8], i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.libgav1::ColorConfig", i8, %"struct.libgav1::TimingInfo", i8, %"struct.libgav1::DecoderModelInfo", [32 x i8], i8, [32 x i8], i8, %"struct.libgav1::OperatingParameters" }
%"struct.libgav1::BitStreamLevel" = type { i8, i8 }
%"struct.libgav1::ColorConfig" = type { i8, i8, i32, i32, i32, i32, i8, i8, i32, i8 }
%"struct.libgav1::TimingInfo" = type { i32, i32, i8, i32 }
%"struct.libgav1::DecoderModelInfo" = type { i8, i32, i8, i8 }
%"struct.libgav1::OperatingParameters" = type { [32 x i32], [32 x i32], [32 x i8] }
%"class.libgav1::ObuParser" = type { %"class.std::__1::unique_ptr", i8*, i64, i32, %"class.libgav1::Vector", %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuFrameHeader", %"class.libgav1::Vector.4", %"struct.libgav1::ObuMetadata", i32, i8, i8, i8, %"class.libgav1::BufferPool"*, %"struct.libgav1::DecoderState"*, %"class.std::__1::shared_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.libgav1::RawBitReader"* }
%"class.libgav1::RawBitReader" = type { %"class.libgav1::BitReader", i8*, i64, i64 }
%"class.libgav1::BitReader" = type { i32 (...)** }
%"class.libgav1::Vector" = type { %"class.libgav1::internal::VectorBase" }
%"class.libgav1::internal::VectorBase" = type { %"struct.libgav1::ObuHeader"*, i64, i64 }
%"struct.libgav1::ObuHeader" = type { i8, i8, i8, i8, i8 }
%"struct.libgav1::ObuFrameHeader" = type { i16, i16, i64, [7 x i16], i32, i32, i32, i32, i32, i32, i32, %"struct.libgav1::LoopRestoration", [32 x i32], i32, %"struct.std::__1::array", %"struct.libgav1::TileInfo", %"struct.libgav1::QuantizerParameters", %"struct.libgav1::Segmentation", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], i8, i8, i8, %"struct.libgav1::Delta", %"struct.libgav1::Delta", [7 x i8], [8 x i8], %"struct.libgav1::LoopFilter", %"struct.libgav1::Cdef", %"struct.libgav1::FilmGrainParams" }
%"struct.libgav1::LoopRestoration" = type { [3 x i8], [3 x i32] }
%"struct.std::__1::array" = type { [8 x %"struct.libgav1::GlobalMotion"] }
%"struct.libgav1::GlobalMotion" = type { i8, [6 x i32], i16, i16, i16, i16 }
%"struct.libgav1::TileInfo" = type { i8, i32, i32, i32, i32, i32, [65 x i32], [65 x i32], i32, i32, [65 x i32], [65 x i32], i16, i8 }
%"struct.libgav1::QuantizerParameters" = type { i8, [3 x i8], [3 x i8], i8, [3 x i8] }
%"struct.libgav1::Segmentation" = type { i8, i8, i8, i8, i8, i8, [8 x [8 x i8]], [8 x [8 x i16]], [8 x i8], [8 x i8] }
%"struct.libgav1::Delta" = type { i8, i8, i8 }
%"struct.libgav1::LoopFilter" = type { %"struct.std::__1::array.1", i8, i8, i8, %"struct.std::__1::array.2", %"struct.std::__1::array.3" }
%"struct.std::__1::array.1" = type { [4 x i8] }
%"struct.std::__1::array.2" = type { [8 x i8] }
%"struct.std::__1::array.3" = type { [2 x i8] }
%"struct.libgav1::Cdef" = type { i8, i8, [8 x i8], [8 x i8], [8 x i8], [8 x i8] }
%"struct.libgav1::FilmGrainParams" = type { i8, i8, i8, i8, i8, i8, i8, i8, [14 x i8], [14 x i8], [10 x i8], [10 x i8], [10 x i8], [10 x i8], i8, i8, [24 x i8], [25 x i8], [25 x i8], i8, i16, i32, i32, i8, i8, i16, i8, i8, i16 }
%"class.libgav1::Vector.4" = type { %"class.libgav1::internal::VectorBase.5" }
%"class.libgav1::internal::VectorBase.5" = type { %"struct.libgav1::TileBuffer"*, i64, i64 }
%"struct.libgav1::TileBuffer" = type { i8*, i64 }
%"struct.libgav1::ObuMetadata" = type { i16, i16, [3 x i16], [3 x i16], i16, i16, i32, i32, i8, i8, %"class.std::__1::unique_ptr.6", i64 }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i8* }
%"class.libgav1::BufferPool" = type { %"class.std::__1::mutex", %"class.libgav1::Vector.12", %"class.libgav1::InternalFrameBufferList", i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Libgav1FrameBuffer*)*, void (i8*, i8*)*, i8* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.libgav1::Vector.12" = type { %"class.libgav1::internal::VectorBase.13" }
%"class.libgav1::internal::VectorBase.13" = type { %"class.libgav1::RefCountedBuffer"**, i64, i64 }
%"class.libgav1::RefCountedBuffer" = type { %"class.libgav1::BufferPool"*, i8, i8*, %"class.libgav1::YuvBuffer", i8, %"class.std::__1::mutex", i8, i32, %"class.std::__1::condition_variable", %"class.std::__1::condition_variable", %"class.std::__1::condition_variable", i8, i8, i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.libgav1::SegmentationMap", %"struct.std::__1::array", [8 x i8], %"struct.libgav1::SymbolDecoderContext", %"struct.std::__1::array.2", %"struct.std::__1::array.3", %"struct.libgav1::Segmentation", %"struct.libgav1::FilmGrainParams", %"struct.libgav1::ReferenceInfo", [16 x i8] }
%"class.libgav1::YuvBuffer" = type <{ i32, i8, [3 x i8], i32, i32, i32, i32, [3 x i32], [3 x i32], [3 x i32], [3 x i32], [3 x i32], [4 x i8], [3 x i8*], %"class.std::__1::unique_ptr.6", i64, i8, i8, [6 x i8] }>
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.14, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.14 = type { i64 }
%"class.libgav1::SegmentationMap" = type { i32, i32, %"class.std::__1::unique_ptr.16", %"class.libgav1::Array2DView" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { i8* }
%"class.libgav1::Array2DView" = type { i32, i32, i8* }
%"struct.libgav1::SymbolDecoderContext" = type { [5 x [4 x [11 x i16]]], [8 x i8], [3 x [9 x i16]], [10 x i8], [3 x [3 x i16]], [14 x i8], [3 x [3 x i16]], [14 x i8], [3 x [3 x i16]], [14 x i8], [5 x i16], [22 x i8], [5 x i16], [22 x i8], [4 x [5 x i16]], [24 x i8], [3 x i16], [26 x i8], [5 x [5 x [14 x i16]]], [4 x i8], [4 x [14 x i16]], [16 x i8], [8 x [8 x i16]], [2 x [13 x [15 x i16]]], [20 x i8], [9 x i16], [14 x i8], [6 x [17 x i16]], [20 x i8], [22 x [3 x i16]], [28 x i8], [6 x i16], [20 x i8], [4 x [3 x [4 x i16]]], [21 x [3 x i16]], [2 x i8], [5 x [13 x [3 x i16]]], [26 x i8], [3 x [4 x [17 x i16]]], [8 x i8], [2 x [4 x [13 x [17 x i16]]]], [16 x i8], [2 x [2 x [6 x i16]]], [16 x i8], [2 x [2 x [7 x i16]]], [8 x i8], [2 x [2 x [8 x i16]]], [2 x [2 x [9 x i16]]], [24 x i8], [2 x [2 x [10 x i16]]], [16 x i8], [2 x [11 x i16]], [20 x i8], [2 x [12 x i16]], [16 x i8], [5 x [2 x [9 x [3 x i16]]]], [4 x i8], [5 x [2 x [4 x [4 x i16]]]], [5 x [2 x [42 x [5 x i16]]]], [24 x i8], [5 x [2 x [21 x [5 x i16]]]], [12 x i8], [2 x [3 x [3 x i16]]], [28 x i8], [4 x i16], [24 x i8], [3 x i16], [26 x i8], [3 x i16], [26 x i8], [7 x [3 x [3 x i16]]], [2 x i8], [7 x [8 x i16]], [16 x i8], [2 x [3 x i16]], [20 x i8], [7 x [8 x i16]], [16 x i8], [2 x [7 x [5 x [9 x i16]]]], [20 x i8], [4 x [3 x i16]], [8 x i8], [5 x [3 x i16]], [2 x i8], [5 x [3 x i16]], [2 x i8], [2 x [3 x [3 x [3 x i16]]]], [20 x i8], [3 x [2 x [3 x i16]]], [28 x i8], [3 x [6 x [3 x i16]]], [20 x i8], [8 x [9 x i16]], [16 x i8], [6 x [3 x i16]], [28 x i8], [2 x [3 x i16]], [20 x i8], [6 x [3 x i16]], [28 x i8], [3 x [3 x i16]], [14 x i8], [3 x [3 x i16]], [14 x i8], [3 x [5 x i16]], [2 x i8], [22 x [3 x i16]], [28 x i8], [22 x [17 x i16]], [20 x i8], [22 x [3 x i16]], [28 x i8], [22 x [4 x i16]], [16 x i8], [6 x [3 x i16]], [28 x i8], [6 x [3 x i16]], [28 x i8], [22 x [3 x i16]], [28 x i8], [16 x [4 x i16]], [2 x [5 x i16]], [12 x i8], [2 x [2 x [3 x i16]]], [8 x i8], [2 x [2 x [12 x i16]]], [2 x [2 x [3 x i16]]], [8 x i8], [2 x [2 x [2 x [5 x i16]]]], [16 x i8], [2 x [2 x [3 x i16]]], [8 x i8], [2 x [2 x [10 x [3 x i16]]]], [16 x i8], [2 x [2 x [5 x i16]]], [24 x i8], [2 x [2 x [3 x i16]]], [8 x i8] }
%"struct.libgav1::ReferenceInfo" = type { %"struct.std::__1::array.22", %"struct.std::__1::array.2", %"struct.std::__1::array.2", %"struct.std::__1::array.23", %"struct.std::__1::array.24", %"class.libgav1::Array2D", %"class.libgav1::Array2D.32" }
%"struct.std::__1::array.22" = type { [8 x i8] }
%"struct.std::__1::array.23" = type { [8 x i8] }
%"struct.std::__1::array.24" = type { [8 x i16] }
%"class.libgav1::Array2D" = type { %"class.std::__1::unique_ptr.25", i64, i64, %"class.libgav1::Array2DView.31" }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i8* }
%"class.libgav1::Array2DView.31" = type { i32, i32, i8* }
%"class.libgav1::Array2D.32" = type { %"class.std::__1::unique_ptr.33", i64, i64, %"class.libgav1::Array2DView.40" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.libgav1::MotionVector"* }
%"struct.libgav1::MotionVector" = type { %union.anon.36 }
%union.anon.36 = type { i32 }
%"class.libgav1::Array2DView.40" = type { i32, i32, %"struct.libgav1::MotionVector"* }
%"class.libgav1::InternalFrameBufferList" = type { %"class.libgav1::Vector.41" }
%"class.libgav1::Vector.41" = type { %"class.libgav1::internal::VectorBase.42" }
%"class.libgav1::internal::VectorBase.42" = type { %"class.std::__1::unique_ptr.43"*, i64, i64 }
%"class.std::__1::unique_ptr.43" = type opaque
%struct.Libgav1FrameBuffer = type { [3 x i8*], [3 x i32], i8* }
%"struct.libgav1::DecoderState" = type { %"struct.std::__1::array.44", i32, %"struct.std::__1::array.22", i8, %"struct.std::__1::array.23", %"struct.std::__1::array.45" }
%"struct.std::__1::array.44" = type { [8 x i16] }
%"struct.std::__1::array.45" = type { [8 x %"class.std::__1::shared_ptr"] }
%"class.std::__1::shared_ptr" = type { %"class.libgav1::RefCountedBuffer"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::array.46" = type { [8 x i32] }

$_ZN7libgav112DecoderState20ClearReferenceFramesEv = comdat any

$_ZN7libgav18internal10VectorBaseINS_9ObuHeaderEE9push_backERKS2_b = comdat any

@_ZZN7libgav19ObuParser18SetFrameReferencesEaaE13kRefFrameList = internal constant [5 x i8] c"\02\03\05\06\07", align 1
@_ZN7libgav124kSegmentationFeatureBitsE = external local_unnamed_addr constant [8 x i8], align 1
@_ZN7libgav129kSegmentationFeatureMaxValuesE = external local_unnamed_addr constant [8 x i32], align 16
@_ZN7libgav127kProjectionMvDivisionLookupE = external local_unnamed_addr constant [32 x i16], align 16
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7libgav117ObuSequenceHeader17ParametersChangedERKS0_(%"struct.libgav1::ObuSequenceHeader"* nocapture readonly, %"struct.libgav1::ObuSequenceHeader"* nocapture readonly dereferenceable(692)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 0
  %5 = tail call i32 @bcmp(i8* %3, i8* %4, i64 404)
  %6 = icmp ne i32 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser16ParseColorConfigEPNS_17ObuSequenceHeaderE(%"class.libgav1::ObuParser"* nocapture readonly, %"struct.libgav1::ObuSequenceHeader"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33
  %4 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %6 = bitcast %"class.libgav1::RawBitReader"* %5 to i32 (%"class.libgav1::RawBitReader"*)***
  %7 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %7, i64 2
  %9 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %8, align 8
  %10 = tail call i32 %9(%"class.libgav1::RawBitReader"* %5) #11
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %223, label %12

12:                                               ; preds = %2
  %13 = icmp ne i32 %10, 0
  %14 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 0
  %15 = load i8, i8* %14, align 4
  %16 = icmp ne i8 %15, 2
  %17 = xor i1 %13, true
  %18 = or i1 %16, %17
  br i1 %18, label %32, label %19

19:                                               ; preds = %12
  %20 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %21 = bitcast %"class.libgav1::RawBitReader"* %20 to i32 (%"class.libgav1::RawBitReader"*)***
  %22 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %21, align 8
  %23 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %22, i64 2
  %24 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %23, align 8
  %25 = tail call i32 %24(%"class.libgav1::RawBitReader"* %20) #11
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %223, label %27

27:                                               ; preds = %19
  %28 = icmp eq i32 %25, 0
  %29 = select i1 %28, i8 10, i8 12
  %30 = getelementptr inbounds %"struct.libgav1::ColorConfig", %"struct.libgav1::ColorConfig"* %3, i64 0, i32 0
  store i8 %29, i8* %30, align 4
  %31 = load i8, i8* %14, align 4
  br label %35

32:                                               ; preds = %12
  %33 = select i1 %13, i8 10, i8 8
  %34 = getelementptr inbounds %"struct.libgav1::ColorConfig", %"struct.libgav1::ColorConfig"* %3, i64 0, i32 0
  store i8 %33, i8* %34, align 4
  br label %35

35:                                               ; preds = %32, %27
  %36 = phi i8 [ %15, %32 ], [ %31, %27 ]
  %37 = icmp eq i8 %36, 1
  br i1 %37, label %38, label %40

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 1
  store i8 0, i8* %39, align 1
  br label %52

40:                                               ; preds = %35
  %41 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %42 = bitcast %"class.libgav1::RawBitReader"* %41 to i32 (%"class.libgav1::RawBitReader"*)***
  %43 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %42, align 8
  %44 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %43, i64 2
  %45 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %44, align 8
  %46 = tail call i32 %45(%"class.libgav1::RawBitReader"* %41) #11
  %47 = icmp eq i32 %46, -1
  br i1 %47, label %223, label %48

48:                                               ; preds = %40
  %49 = icmp ne i32 %46, 0
  %50 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 1
  %51 = zext i1 %49 to i8
  store i8 %51, i8* %50, align 1
  br label %52

52:                                               ; preds = %48, %38
  %53 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %54 = bitcast %"class.libgav1::RawBitReader"* %53 to i32 (%"class.libgav1::RawBitReader"*)***
  %55 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %54, align 8
  %56 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %55, i64 2
  %57 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %56, align 8
  %58 = tail call i32 %57(%"class.libgav1::RawBitReader"* %53) #11
  switch i32 %58, label %59 [
    i32 -1, label %223
    i32 0, label %89
  ]

59:                                               ; preds = %52
  %60 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %61 = bitcast %"class.libgav1::RawBitReader"* %60 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %62 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %61, align 8
  %63 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %62, i64 3
  %64 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %63, align 8
  %65 = tail call i64 %64(%"class.libgav1::RawBitReader"* %60, i32 8) #11
  %66 = icmp eq i64 %65, -1
  br i1 %66, label %223, label %67

67:                                               ; preds = %59
  %68 = trunc i64 %65 to i32
  %69 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 2
  store i32 %68, i32* %69, align 4
  %70 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %71 = bitcast %"class.libgav1::RawBitReader"* %70 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %72 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %72, i64 3
  %74 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %73, align 8
  %75 = tail call i64 %74(%"class.libgav1::RawBitReader"* %70, i32 8) #11
  %76 = icmp eq i64 %75, -1
  br i1 %76, label %223, label %77

77:                                               ; preds = %67
  %78 = trunc i64 %75 to i32
  %79 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 3
  store i32 %78, i32* %79, align 4
  %80 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %81 = bitcast %"class.libgav1::RawBitReader"* %80 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %82 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %81, align 8
  %83 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %82, i64 3
  %84 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %83, align 8
  %85 = tail call i64 %84(%"class.libgav1::RawBitReader"* %80, i32 8) #11
  %86 = icmp eq i64 %85, -1
  br i1 %86, label %223, label %87

87:                                               ; preds = %77
  %88 = trunc i64 %85 to i32
  br label %92

89:                                               ; preds = %52
  %90 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 2
  store i32 2, i32* %90, align 4
  %91 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 3
  store i32 2, i32* %91, align 4
  br label %92

92:                                               ; preds = %89, %87
  %93 = phi i32 [ 2, %89 ], [ %88, %87 ]
  %94 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 4
  store i32 %93, i32* %94, align 4
  %95 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 1
  %96 = load i8, i8* %95, align 1, !range !2
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %111, label %98

98:                                               ; preds = %92
  %99 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %100 = bitcast %"class.libgav1::RawBitReader"* %99 to i32 (%"class.libgav1::RawBitReader"*)***
  %101 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %100, align 8
  %102 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %101, i64 2
  %103 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %102, align 8
  %104 = tail call i32 %103(%"class.libgav1::RawBitReader"* %99) #11
  %105 = icmp eq i32 %104, -1
  br i1 %105, label %223, label %106

106:                                              ; preds = %98
  %107 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 5
  store i32 %104, i32* %107, align 4
  %108 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 6
  store i8 1, i8* %108, align 4
  %109 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 7
  store i8 1, i8* %109, align 1
  %110 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 8
  store i32 0, i32* %110, align 4
  br label %210

111:                                              ; preds = %92
  %112 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 2
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %115, label %130

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 3
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %117, 13
  %119 = icmp eq i32 %93, 0
  %120 = and i1 %118, %119
  br i1 %120, label %121, label %130

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 5
  store i32 1, i32* %122, align 4
  %123 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 6
  store i8 0, i8* %123, align 4
  %124 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 7
  store i8 0, i8* %124, align 1
  %125 = load i8, i8* %14, align 4
  switch i8 %125, label %223 [
    i8 1, label %198
    i8 2, label %126
  ]

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"struct.libgav1::ColorConfig", %"struct.libgav1::ColorConfig"* %3, i64 0, i32 0
  %128 = load i8, i8* %127, align 4
  %129 = icmp eq i8 %128, 12
  br i1 %129, label %198, label %223

130:                                              ; preds = %115, %111
  %131 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %132 = bitcast %"class.libgav1::RawBitReader"* %131 to i32 (%"class.libgav1::RawBitReader"*)***
  %133 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %132, align 8
  %134 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %133, i64 2
  %135 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %134, align 8
  %136 = tail call i32 %135(%"class.libgav1::RawBitReader"* %131) #11
  %137 = icmp eq i32 %136, -1
  br i1 %137, label %223, label %138

138:                                              ; preds = %130
  %139 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 5
  store i32 %136, i32* %139, align 4
  %140 = load i8, i8* %14, align 4
  switch i8 %140, label %147 [
    i8 0, label %141
    i8 1, label %144
  ]

141:                                              ; preds = %138
  %142 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 6
  store i8 1, i8* %142, align 4
  %143 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 7
  store i8 1, i8* %143, align 1
  br label %187

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 6
  store i8 0, i8* %145, align 4
  %146 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 7
  store i8 0, i8* %146, align 1
  br label %198

147:                                              ; preds = %138
  %148 = getelementptr inbounds %"struct.libgav1::ColorConfig", %"struct.libgav1::ColorConfig"* %3, i64 0, i32 0
  %149 = load i8, i8* %148, align 4
  %150 = icmp eq i8 %149, 12
  br i1 %150, label %151, label %179

151:                                              ; preds = %147
  %152 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %153 = bitcast %"class.libgav1::RawBitReader"* %152 to i32 (%"class.libgav1::RawBitReader"*)***
  %154 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %153, align 8
  %155 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %154, i64 2
  %156 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %155, align 8
  %157 = tail call i32 %156(%"class.libgav1::RawBitReader"* %152) #11
  %158 = icmp eq i32 %157, -1
  br i1 %158, label %223, label %159

159:                                              ; preds = %151
  %160 = trunc i32 %157 to i8
  %161 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 6
  store i8 %160, i8* %161, align 4
  %162 = and i32 %157, 255
  %163 = icmp eq i32 %162, 1
  br i1 %163, label %164, label %177

164:                                              ; preds = %159
  %165 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %166 = bitcast %"class.libgav1::RawBitReader"* %165 to i32 (%"class.libgav1::RawBitReader"*)***
  %167 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %166, align 8
  %168 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %167, i64 2
  %169 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %168, align 8
  %170 = tail call i32 %169(%"class.libgav1::RawBitReader"* %165) #11
  %171 = icmp eq i32 %170, -1
  br i1 %171, label %223, label %172

172:                                              ; preds = %164
  %173 = trunc i32 %170 to i8
  %174 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 7
  store i8 %173, i8* %174, align 1
  %175 = load i8, i8* %161, align 4
  %176 = icmp eq i8 %173, 1
  br label %182

177:                                              ; preds = %159
  %178 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 7
  store i8 0, i8* %178, align 1
  br label %182

179:                                              ; preds = %147
  %180 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 6
  store i8 1, i8* %180, align 4
  %181 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 7
  store i8 0, i8* %181, align 1
  br label %198

182:                                              ; preds = %172, %177
  %183 = phi i1 [ %176, %172 ], [ false, %177 ]
  %184 = phi i8 [ %175, %172 ], [ %160, %177 ]
  %185 = icmp eq i8 %184, 1
  %186 = and i1 %185, %183
  br i1 %186, label %187, label %198

187:                                              ; preds = %182, %141
  %188 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %189 = bitcast %"class.libgav1::RawBitReader"* %188 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %190 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %189, align 8
  %191 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %190, i64 3
  %192 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %191, align 8
  %193 = tail call i64 %192(%"class.libgav1::RawBitReader"* %188, i32 2) #11
  %194 = icmp eq i64 %193, -1
  br i1 %194, label %223, label %195

195:                                              ; preds = %187
  %196 = trunc i64 %193 to i32
  %197 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 8
  store i32 %196, i32* %197, align 4
  br label %198

198:                                              ; preds = %179, %144, %121, %126, %182, %195
  %199 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %200 = bitcast %"class.libgav1::RawBitReader"* %199 to i32 (%"class.libgav1::RawBitReader"*)***
  %201 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %200, align 8
  %202 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %201, i64 2
  %203 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %202, align 8
  %204 = tail call i32 %203(%"class.libgav1::RawBitReader"* %199) #11
  %205 = icmp eq i32 %204, -1
  br i1 %205, label %223, label %206

206:                                              ; preds = %198
  %207 = icmp ne i32 %204, 0
  %208 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 9
  %209 = zext i1 %207 to i8
  store i8 %209, i8* %208, align 4
  br label %210

210:                                              ; preds = %206, %106
  %211 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 4
  %212 = load i32, i32* %211, align 4
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %222

214:                                              ; preds = %210
  %215 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 6
  %216 = load i8, i8* %215, align 4
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %218, label %223

218:                                              ; preds = %214
  %219 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 33, i32 7
  %220 = load i8, i8* %219, align 1
  %221 = icmp eq i8 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %218, %210
  br label %223

223:                                              ; preds = %19, %40, %52, %214, %218, %198, %187, %164, %151, %130, %126, %121, %98, %77, %67, %59, %222, %2
  %224 = phi i1 [ false, %2 ], [ false, %19 ], [ false, %40 ], [ false, %52 ], [ true, %222 ], [ false, %59 ], [ false, %67 ], [ false, %77 ], [ false, %98 ], [ false, %121 ], [ false, %126 ], [ false, %130 ], [ false, %151 ], [ false, %164 ], [ false, %187 ], [ false, %198 ], [ false, %218 ], [ false, %214 ]
  ret i1 %224
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser15ParseTimingInfoEPNS_17ObuSequenceHeaderE(%"class.libgav1::ObuParser"* nocapture readonly, %"struct.libgav1::ObuSequenceHeader"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %3, align 8
  %5 = bitcast %"class.libgav1::RawBitReader"* %4 to i32 (%"class.libgav1::RawBitReader"*)***
  %6 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %6, i64 2
  %8 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %7, align 8
  %9 = tail call i32 %8(%"class.libgav1::RawBitReader"* %4) #11
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %58, label %11

11:                                               ; preds = %2
  %12 = icmp ne i32 %9, 0
  %13 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 34
  %14 = zext i1 %12 to i8
  store i8 %14, i8* %13, align 4
  br i1 %12, label %15, label %58

15:                                               ; preds = %11
  %16 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %3, align 8
  %17 = bitcast %"class.libgav1::RawBitReader"* %16 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %18 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %17, align 8
  %19 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %18, i64 3
  %20 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %19, align 8
  %21 = tail call i64 %20(%"class.libgav1::RawBitReader"* %16, i32 32) #11
  %22 = icmp eq i64 %21, -1
  br i1 %22, label %58, label %23

23:                                               ; preds = %15
  %24 = trunc i64 %21 to i32
  %25 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 35, i32 0
  store i32 %24, i32* %25, align 4
  %26 = icmp eq i32 %24, 0
  br i1 %26, label %58, label %27

27:                                               ; preds = %23
  %28 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %3, align 8
  %29 = bitcast %"class.libgav1::RawBitReader"* %28 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %30 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %29, align 8
  %31 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %30, i64 3
  %32 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %31, align 8
  %33 = tail call i64 %32(%"class.libgav1::RawBitReader"* %28, i32 32) #11
  %34 = icmp eq i64 %33, -1
  br i1 %34, label %58, label %35

35:                                               ; preds = %27
  %36 = trunc i64 %33 to i32
  %37 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 35, i32 1
  store i32 %36, i32* %37, align 4
  %38 = icmp eq i32 %36, 0
  br i1 %38, label %58, label %39

39:                                               ; preds = %35
  %40 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %3, align 8
  %41 = bitcast %"class.libgav1::RawBitReader"* %40 to i32 (%"class.libgav1::RawBitReader"*)***
  %42 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %41, align 8
  %43 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %42, i64 2
  %44 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %43, align 8
  %45 = tail call i32 %44(%"class.libgav1::RawBitReader"* %40) #11
  %46 = icmp eq i32 %45, -1
  br i1 %46, label %58, label %47

47:                                               ; preds = %39
  %48 = icmp ne i32 %45, 0
  %49 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 35, i32 2
  %50 = zext i1 %48 to i8
  store i8 %50, i8* %49, align 4
  br i1 %48, label %51, label %58

51:                                               ; preds = %47
  %52 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %3, align 8
  %53 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 35, i32 3
  %54 = tail call zeroext i1 @_ZN7libgav112RawBitReader8ReadUvlcEPj(%"class.libgav1::RawBitReader"* %52, i32* %53) #11
  br i1 %54, label %55, label %58

55:                                               ; preds = %51
  %56 = load i32, i32* %53, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %53, align 4
  br label %58

58:                                               ; preds = %15, %23, %27, %35, %39, %51, %55, %47, %11, %2
  %59 = phi i1 [ false, %2 ], [ true, %11 ], [ false, %15 ], [ false, %23 ], [ false, %27 ], [ false, %35 ], [ false, %39 ], [ false, %51 ], [ true, %55 ], [ true, %47 ]
  ret i1 %59
}

declare zeroext i1 @_ZN7libgav112RawBitReader8ReadUvlcEPj(%"class.libgav1::RawBitReader"*, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser21ParseDecoderModelInfoEPNS_17ObuSequenceHeaderE(%"class.libgav1::ObuParser"* nocapture readonly, %"struct.libgav1::ObuSequenceHeader"* nocapture) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 34
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %7, align 8
  %9 = bitcast %"class.libgav1::RawBitReader"* %8 to i32 (%"class.libgav1::RawBitReader"*)***
  %10 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %10, i64 2
  %12 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %11, align 8
  %13 = tail call i32 %12(%"class.libgav1::RawBitReader"* %8) #11
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %63, label %15

15:                                               ; preds = %6
  %16 = icmp ne i32 %13, 0
  %17 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 36
  %18 = zext i1 %16 to i8
  store i8 %18, i8* %17, align 4
  br i1 %16, label %19, label %63

19:                                               ; preds = %15
  %20 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %7, align 8
  %21 = bitcast %"class.libgav1::RawBitReader"* %20 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %22 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %21, align 8
  %23 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %22, i64 3
  %24 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %23, align 8
  %25 = tail call i64 %24(%"class.libgav1::RawBitReader"* %20, i32 5) #11
  %26 = icmp eq i64 %25, -1
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = trunc i64 %25 to i8
  %29 = add i8 %28, 1
  %30 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 37, i32 0
  store i8 %29, i8* %30, align 4
  %31 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %7, align 8
  %32 = bitcast %"class.libgav1::RawBitReader"* %31 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %33 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %32, align 8
  %34 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %33, i64 3
  %35 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %34, align 8
  %36 = tail call i64 %35(%"class.libgav1::RawBitReader"* %31, i32 32) #11
  %37 = icmp eq i64 %36, -1
  br i1 %37, label %63, label %38

38:                                               ; preds = %27
  %39 = trunc i64 %36 to i32
  %40 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 37, i32 1
  store i32 %39, i32* %40, align 4
  %41 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %7, align 8
  %42 = bitcast %"class.libgav1::RawBitReader"* %41 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %43 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %42, align 8
  %44 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %43, i64 3
  %45 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %44, align 8
  %46 = tail call i64 %45(%"class.libgav1::RawBitReader"* %41, i32 5) #11
  %47 = icmp eq i64 %46, -1
  br i1 %47, label %63, label %48

48:                                               ; preds = %38
  %49 = trunc i64 %46 to i8
  %50 = add i8 %49, 1
  %51 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 37, i32 2
  store i8 %50, i8* %51, align 4
  %52 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %7, align 8
  %53 = bitcast %"class.libgav1::RawBitReader"* %52 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %54 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %53, align 8
  %55 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %54, i64 3
  %56 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %55, align 8
  %57 = tail call i64 %56(%"class.libgav1::RawBitReader"* %52, i32 5) #11
  %58 = icmp eq i64 %57, -1
  br i1 %58, label %63, label %59

59:                                               ; preds = %48
  %60 = trunc i64 %57 to i8
  %61 = add i8 %60, 1
  %62 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 37, i32 3
  store i8 %61, i8* %62, align 1
  br label %63

63:                                               ; preds = %6, %15, %48, %38, %27, %19, %59, %2
  %64 = phi i1 [ true, %2 ], [ false, %6 ], [ true, %15 ], [ true, %59 ], [ false, %19 ], [ false, %27 ], [ false, %38 ], [ false, %48 ]
  ret i1 %64
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser24ParseOperatingParametersEPNS_17ObuSequenceHeaderEi(%"class.libgav1::ObuParser"* nocapture readonly, %"struct.libgav1::ObuSequenceHeader"* nocapture, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %6 = bitcast %"class.libgav1::RawBitReader"* %5 to i32 (%"class.libgav1::RawBitReader"*)***
  %7 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %7, i64 2
  %9 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %8, align 8
  %10 = tail call i32 %9(%"class.libgav1::RawBitReader"* %5) #11
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %54, label %12

12:                                               ; preds = %3
  %13 = icmp ne i32 %10, 0
  %14 = sext i32 %2 to i64
  %15 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 38, i64 %14
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  br i1 %13, label %17, label %54

17:                                               ; preds = %12
  %18 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %19 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 37, i32 0
  %20 = load i8, i8* %19, align 4
  %21 = zext i8 %20 to i32
  %22 = bitcast %"class.libgav1::RawBitReader"* %18 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %23 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %23, i64 3
  %25 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %24, align 8
  %26 = tail call i64 %25(%"class.libgav1::RawBitReader"* %18, i32 %21) #11
  %27 = icmp eq i64 %26, -1
  br i1 %27, label %54, label %28

28:                                               ; preds = %17
  %29 = trunc i64 %26 to i32
  %30 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 42, i32 0, i64 %14
  store i32 %29, i32* %30, align 4
  %31 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %32 = load i8, i8* %19, align 4
  %33 = zext i8 %32 to i32
  %34 = bitcast %"class.libgav1::RawBitReader"* %31 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %35 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %34, align 8
  %36 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %35, i64 3
  %37 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %36, align 8
  %38 = tail call i64 %37(%"class.libgav1::RawBitReader"* %31, i32 %33) #11
  %39 = icmp eq i64 %38, -1
  br i1 %39, label %54, label %40

40:                                               ; preds = %28
  %41 = trunc i64 %38 to i32
  %42 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 42, i32 1, i64 %14
  store i32 %41, i32* %42, align 4
  %43 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %44 = bitcast %"class.libgav1::RawBitReader"* %43 to i32 (%"class.libgav1::RawBitReader"*)***
  %45 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %44, align 8
  %46 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %45, i64 2
  %47 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %46, align 8
  %48 = tail call i32 %47(%"class.libgav1::RawBitReader"* %43) #11
  %49 = icmp eq i32 %48, -1
  br i1 %49, label %54, label %50

50:                                               ; preds = %40
  %51 = icmp ne i32 %48, 0
  %52 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %1, i64 0, i32 42, i32 2, i64 %14
  %53 = zext i1 %51 to i8
  store i8 %53, i8* %52, align 1
  br label %54

54:                                               ; preds = %50, %17, %28, %40, %12, %3
  %55 = phi i1 [ false, %3 ], [ true, %12 ], [ true, %50 ], [ false, %17 ], [ false, %28 ], [ false, %40 ]
  ret i1 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser19ParseSequenceHeaderEb(%"class.libgav1::ObuParser"*, i1 zeroext) local_unnamed_addr #1 align 2 {
  %3 = alloca %"struct.libgav1::ObuSequenceHeader", align 4
  %4 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 692, i8* nonnull %4) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %4, i8 0, i64 692, i1 false)
  %5 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %7 = bitcast %"class.libgav1::RawBitReader"* %6 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %8 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %8, i64 3
  %10 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %9, align 8
  %11 = tail call i64 %10(%"class.libgav1::RawBitReader"* %6, i32 3) #11
  %12 = icmp eq i64 %11, -1
  %13 = icmp sgt i64 %11, 2
  %14 = or i1 %12, %13
  br i1 %14, label %627, label %15

15:                                               ; preds = %2
  %16 = trunc i64 %11 to i8
  store i8 %16, i8* %4, align 4
  %17 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %18 = bitcast %"class.libgav1::RawBitReader"* %17 to i32 (%"class.libgav1::RawBitReader"*)***
  %19 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %18, align 8
  %20 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %19, i64 2
  %21 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %20, align 8
  %22 = tail call i32 %21(%"class.libgav1::RawBitReader"* %17) #11
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %627, label %24

24:                                               ; preds = %15
  %25 = icmp ne i32 %22, 0
  %26 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 1
  %27 = zext i1 %25 to i8
  store i8 %27, i8* %26, align 1
  %28 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %29 = bitcast %"class.libgav1::RawBitReader"* %28 to i32 (%"class.libgav1::RawBitReader"*)***
  %30 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %29, align 8
  %31 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %30, i64 2
  %32 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %31, align 8
  %33 = tail call i32 %32(%"class.libgav1::RawBitReader"* %28) #11
  %34 = icmp eq i32 %33, -1
  br i1 %34, label %627, label %35

35:                                               ; preds = %24
  %36 = icmp ne i32 %33, 0
  %37 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 2
  %38 = zext i1 %36 to i8
  store i8 %38, i8* %37, align 2
  br i1 %36, label %39, label %57

39:                                               ; preds = %35
  br i1 %25, label %40, label %627

40:                                               ; preds = %39
  %41 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 3
  store i32 1, i32* %41, align 4
  %42 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 4, i64 0
  store i32 0, i32* %42, align 4
  %43 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %44 = bitcast %"class.libgav1::RawBitReader"* %43 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %45 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %44, align 8
  %46 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %45, i64 3
  %47 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %46, align 8
  %48 = tail call i64 %47(%"class.libgav1::RawBitReader"* %43, i32 5) #11
  %49 = icmp eq i64 %48, -1
  br i1 %49, label %627, label %50

50:                                               ; preds = %40
  %51 = trunc i64 %48 to i8
  %52 = lshr i8 %51, 2
  %53 = add nuw nsw i8 %52, 2
  %54 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 5, i64 0, i32 0
  store i8 %53, i8* %54, align 4
  %55 = and i8 %51, 3
  %56 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 5, i64 0, i32 1
  store i8 %55, i8* %56, align 1
  br label %272

57:                                               ; preds = %35
  %58 = call zeroext i1 @_ZN7libgav19ObuParser15ParseTimingInfoEPNS_17ObuSequenceHeaderE(%"class.libgav1::ObuParser"* %0, %"struct.libgav1::ObuSequenceHeader"* nonnull %3)
  br i1 %58, label %59, label %627

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 34
  %61 = load i8, i8* %60, align 4, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %119, label %63

63:                                               ; preds = %59
  %64 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %65 = bitcast %"class.libgav1::RawBitReader"* %64 to i32 (%"class.libgav1::RawBitReader"*)***
  %66 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %65, align 8
  %67 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %66, i64 2
  %68 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %67, align 8
  %69 = call i32 %68(%"class.libgav1::RawBitReader"* %64) #11
  %70 = icmp eq i32 %69, -1
  br i1 %70, label %627, label %71

71:                                               ; preds = %63
  %72 = icmp ne i32 %69, 0
  %73 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 36
  %74 = zext i1 %72 to i8
  store i8 %74, i8* %73, align 4
  br i1 %72, label %75, label %119

75:                                               ; preds = %71
  %76 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %77 = bitcast %"class.libgav1::RawBitReader"* %76 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %78 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %77, align 8
  %79 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %78, i64 3
  %80 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %79, align 8
  %81 = call i64 %80(%"class.libgav1::RawBitReader"* %76, i32 5) #11
  %82 = icmp eq i64 %81, -1
  br i1 %82, label %627, label %83

83:                                               ; preds = %75
  %84 = trunc i64 %81 to i8
  %85 = add i8 %84, 1
  %86 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 37, i32 0
  store i8 %85, i8* %86, align 4
  %87 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %88 = bitcast %"class.libgav1::RawBitReader"* %87 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %89 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %88, align 8
  %90 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %89, i64 3
  %91 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %90, align 8
  %92 = call i64 %91(%"class.libgav1::RawBitReader"* %87, i32 32) #11
  %93 = icmp eq i64 %92, -1
  br i1 %93, label %627, label %94

94:                                               ; preds = %83
  %95 = trunc i64 %92 to i32
  %96 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 37, i32 1
  store i32 %95, i32* %96, align 4
  %97 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %98 = bitcast %"class.libgav1::RawBitReader"* %97 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %99 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %98, align 8
  %100 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %99, i64 3
  %101 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %100, align 8
  %102 = call i64 %101(%"class.libgav1::RawBitReader"* %97, i32 5) #11
  %103 = icmp eq i64 %102, -1
  br i1 %103, label %627, label %104

104:                                              ; preds = %94
  %105 = trunc i64 %102 to i8
  %106 = add i8 %105, 1
  %107 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 37, i32 2
  store i8 %106, i8* %107, align 4
  %108 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %109 = bitcast %"class.libgav1::RawBitReader"* %108 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %110 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %109, align 8
  %111 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %110, i64 3
  %112 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %111, align 8
  %113 = call i64 %112(%"class.libgav1::RawBitReader"* %108, i32 5) #11
  %114 = icmp eq i64 %113, -1
  br i1 %114, label %627, label %115

115:                                              ; preds = %104
  %116 = trunc i64 %113 to i8
  %117 = add i8 %116, 1
  %118 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 37, i32 3
  store i8 %117, i8* %118, align 1
  br label %119

119:                                              ; preds = %115, %71, %59
  %120 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %121 = bitcast %"class.libgav1::RawBitReader"* %120 to i32 (%"class.libgav1::RawBitReader"*)***
  %122 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %121, align 8
  %123 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %122, i64 2
  %124 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %123, align 8
  %125 = call i32 %124(%"class.libgav1::RawBitReader"* %120) #11
  %126 = icmp eq i32 %125, -1
  br i1 %126, label %627, label %127

127:                                              ; preds = %119
  %128 = icmp eq i32 %125, 0
  %129 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %130 = bitcast %"class.libgav1::RawBitReader"* %129 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %131 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %130, align 8
  %132 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %131, i64 3
  %133 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %132, align 8
  %134 = call i64 %133(%"class.libgav1::RawBitReader"* %129, i32 5) #11
  %135 = icmp eq i64 %134, -1
  br i1 %135, label %627, label %136

136:                                              ; preds = %127
  %137 = trunc i64 %134 to i32
  %138 = add i32 %137, 1
  %139 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 3
  store i32 %138, i32* %139, align 4
  %140 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 3
  %141 = load i32, i32* %140, align 8
  %142 = icmp slt i32 %141, %138
  br i1 %142, label %143, label %627

143:                                              ; preds = %136
  %144 = icmp sgt i32 %138, 0
  br i1 %144, label %145, label %272

145:                                              ; preds = %143
  %146 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 36
  %147 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 37, i32 0
  br label %148

148:                                              ; preds = %145, %267
  %149 = phi i64 [ 0, %145 ], [ %268, %267 ]
  %150 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %151 = bitcast %"class.libgav1::RawBitReader"* %150 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %152 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %151, align 8
  %153 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %152, i64 3
  %154 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %153, align 8
  %155 = call i64 %154(%"class.libgav1::RawBitReader"* %150, i32 12) #11
  %156 = icmp eq i64 %155, -1
  br i1 %156, label %627, label %157

157:                                              ; preds = %148
  %158 = trunc i64 %155 to i32
  %159 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 4, i64 %149
  store i32 %158, i32* %159, align 4
  %160 = icmp eq i64 %149, 0
  br i1 %160, label %169, label %163

161:                                              ; preds = %163
  %162 = icmp eq i64 %168, %149
  br i1 %162, label %169, label %163

163:                                              ; preds = %157, %161
  %164 = phi i64 [ %168, %161 ], [ 0, %157 ]
  %165 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 4, i64 %164
  %166 = load i32, i32* %165, align 4
  %167 = icmp eq i32 %166, %158
  %168 = add nuw nsw i64 %164, 1
  br i1 %167, label %627, label %161

169:                                              ; preds = %161, %157
  %170 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %171 = bitcast %"class.libgav1::RawBitReader"* %170 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %172 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %171, align 8
  %173 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %172, i64 3
  %174 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %173, align 8
  %175 = call i64 %174(%"class.libgav1::RawBitReader"* %170, i32 5) #11
  %176 = icmp eq i64 %175, -1
  br i1 %176, label %627, label %177

177:                                              ; preds = %169
  %178 = trunc i64 %175 to i8
  %179 = lshr i8 %178, 2
  %180 = add nuw nsw i8 %179, 2
  %181 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 5, i64 %149, i32 0
  store i8 %180, i8* %181, align 2
  %182 = and i8 %178, 3
  %183 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 5, i64 %149, i32 1
  store i8 %182, i8* %183, align 1
  %184 = icmp ugt i8 %180, 3
  br i1 %184, label %185, label %196

185:                                              ; preds = %177
  %186 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %187 = bitcast %"class.libgav1::RawBitReader"* %186 to i32 (%"class.libgav1::RawBitReader"*)***
  %188 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %187, align 8
  %189 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %188, i64 2
  %190 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %189, align 8
  %191 = call i32 %190(%"class.libgav1::RawBitReader"* %186) #11
  %192 = icmp eq i32 %191, -1
  br i1 %192, label %627, label %193

193:                                              ; preds = %185
  %194 = trunc i32 %191 to i8
  %195 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 6, i64 %149
  store i8 %194, i8* %195, align 1
  br label %196

196:                                              ; preds = %193, %177
  %197 = load i8, i8* %146, align 4, !range !2
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %247, label %199

199:                                              ; preds = %196
  %200 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %201 = bitcast %"class.libgav1::RawBitReader"* %200 to i32 (%"class.libgav1::RawBitReader"*)***
  %202 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %201, align 8
  %203 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %202, i64 2
  %204 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %203, align 8
  %205 = call i32 %204(%"class.libgav1::RawBitReader"* %200) #11
  %206 = icmp eq i32 %205, -1
  br i1 %206, label %627, label %207

207:                                              ; preds = %199
  %208 = icmp ne i32 %205, 0
  %209 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 38, i64 %149
  %210 = zext i1 %208 to i8
  store i8 %210, i8* %209, align 1
  br i1 %208, label %211, label %247

211:                                              ; preds = %207
  %212 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %213 = load i8, i8* %147, align 4
  %214 = zext i8 %213 to i32
  %215 = bitcast %"class.libgav1::RawBitReader"* %212 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %216 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %215, align 8
  %217 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %216, i64 3
  %218 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %217, align 8
  %219 = call i64 %218(%"class.libgav1::RawBitReader"* %212, i32 %214) #11
  %220 = icmp eq i64 %219, -1
  br i1 %220, label %627, label %221

221:                                              ; preds = %211
  %222 = trunc i64 %219 to i32
  %223 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 42, i32 0, i64 %149
  store i32 %222, i32* %223, align 4
  %224 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %225 = load i8, i8* %147, align 4
  %226 = zext i8 %225 to i32
  %227 = bitcast %"class.libgav1::RawBitReader"* %224 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %228 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %227, align 8
  %229 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %228, i64 3
  %230 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %229, align 8
  %231 = call i64 %230(%"class.libgav1::RawBitReader"* %224, i32 %226) #11
  %232 = icmp eq i64 %231, -1
  br i1 %232, label %627, label %233

233:                                              ; preds = %221
  %234 = trunc i64 %231 to i32
  %235 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 42, i32 1, i64 %149
  store i32 %234, i32* %235, align 4
  %236 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %237 = bitcast %"class.libgav1::RawBitReader"* %236 to i32 (%"class.libgav1::RawBitReader"*)***
  %238 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %237, align 8
  %239 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %238, i64 2
  %240 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %239, align 8
  %241 = call i32 %240(%"class.libgav1::RawBitReader"* %236) #11
  %242 = icmp eq i32 %241, -1
  br i1 %242, label %627, label %243

243:                                              ; preds = %233
  %244 = icmp ne i32 %241, 0
  %245 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 42, i32 2, i64 %149
  %246 = zext i1 %244 to i8
  store i8 %246, i8* %245, align 1
  br label %247

247:                                              ; preds = %243, %207, %196
  br i1 %128, label %267, label %248

248:                                              ; preds = %247
  %249 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %250 = bitcast %"class.libgav1::RawBitReader"* %249 to i32 (%"class.libgav1::RawBitReader"*)***
  %251 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %250, align 8
  %252 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %251, i64 2
  %253 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %252, align 8
  %254 = call i32 %253(%"class.libgav1::RawBitReader"* %249) #11
  switch i32 %254, label %255 [
    i32 -1, label %627
    i32 0, label %267
  ]

255:                                              ; preds = %248
  %256 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %257 = bitcast %"class.libgav1::RawBitReader"* %256 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %258 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %257, align 8
  %259 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %258, i64 3
  %260 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %259, align 8
  %261 = call i64 %260(%"class.libgav1::RawBitReader"* %256, i32 4) #11
  %262 = icmp eq i64 %261, -1
  br i1 %262, label %627, label %263

263:                                              ; preds = %255
  %264 = trunc i64 %261 to i8
  %265 = add i8 %264, 1
  %266 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 40, i64 %149
  store i8 %265, i8* %266, align 1
  br label %267

267:                                              ; preds = %248, %247, %263
  %268 = add nuw nsw i64 %149, 1
  %269 = load i32, i32* %139, align 4
  %270 = sext i32 %269 to i64
  %271 = icmp slt i64 %268, %270
  br i1 %271, label %148, label %272

272:                                              ; preds = %267, %143, %50
  %273 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %274 = bitcast %"class.libgav1::RawBitReader"* %273 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %275 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %274, align 8
  %276 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %275, i64 3
  %277 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %276, align 8
  %278 = call i64 %277(%"class.libgav1::RawBitReader"* %273, i32 4) #11
  %279 = icmp eq i64 %278, -1
  br i1 %279, label %627, label %280

280:                                              ; preds = %272
  %281 = trunc i64 %278 to i8
  %282 = add i8 %281, 1
  %283 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 7
  store i8 %282, i8* %283, align 4
  %284 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %285 = bitcast %"class.libgav1::RawBitReader"* %284 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %286 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %285, align 8
  %287 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %286, i64 3
  %288 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %287, align 8
  %289 = call i64 %288(%"class.libgav1::RawBitReader"* %284, i32 4) #11
  %290 = icmp eq i64 %289, -1
  br i1 %290, label %627, label %291

291:                                              ; preds = %280
  %292 = trunc i64 %289 to i8
  %293 = add i8 %292, 1
  %294 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 8
  store i8 %293, i8* %294, align 1
  %295 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %296 = load i8, i8* %283, align 4
  %297 = sext i8 %296 to i32
  %298 = bitcast %"class.libgav1::RawBitReader"* %295 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %299 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %298, align 8
  %300 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %299, i64 3
  %301 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %300, align 8
  %302 = call i64 %301(%"class.libgav1::RawBitReader"* %295, i32 %297) #11
  %303 = icmp eq i64 %302, -1
  br i1 %303, label %627, label %304

304:                                              ; preds = %291
  %305 = trunc i64 %302 to i32
  %306 = add i32 %305, 1
  %307 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 9
  store i32 %306, i32* %307, align 4
  %308 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %309 = load i8, i8* %294, align 1
  %310 = sext i8 %309 to i32
  %311 = bitcast %"class.libgav1::RawBitReader"* %308 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %312 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %311, align 8
  %313 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %312, i64 3
  %314 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %313, align 8
  %315 = call i64 %314(%"class.libgav1::RawBitReader"* %308, i32 %310) #11
  %316 = icmp eq i64 %315, -1
  br i1 %316, label %627, label %317

317:                                              ; preds = %304
  %318 = trunc i64 %315 to i32
  %319 = add i32 %318, 1
  %320 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 10
  store i32 %319, i32* %320, align 4
  %321 = load i8, i8* %37, align 2, !range !2
  %322 = icmp eq i8 %321, 0
  br i1 %322, label %326, label %323

323:                                              ; preds = %317
  %324 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 11
  %325 = load i8, i8* %324, align 4, !range !2
  br label %338

326:                                              ; preds = %317
  %327 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %328 = bitcast %"class.libgav1::RawBitReader"* %327 to i32 (%"class.libgav1::RawBitReader"*)***
  %329 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %328, align 8
  %330 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %329, i64 2
  %331 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %330, align 8
  %332 = call i32 %331(%"class.libgav1::RawBitReader"* %327) #11
  %333 = icmp eq i32 %332, -1
  br i1 %333, label %627, label %334

334:                                              ; preds = %326
  %335 = icmp ne i32 %332, 0
  %336 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 11
  %337 = zext i1 %335 to i8
  store i8 %337, i8* %336, align 4
  br label %338

338:                                              ; preds = %323, %334
  %339 = phi i8 [ %325, %323 ], [ %337, %334 ]
  %340 = icmp eq i8 %339, 0
  br i1 %340, label %367, label %341

341:                                              ; preds = %338
  %342 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %343 = bitcast %"class.libgav1::RawBitReader"* %342 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %344 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %343, align 8
  %345 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %344, i64 3
  %346 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %345, align 8
  %347 = call i64 %346(%"class.libgav1::RawBitReader"* %342, i32 4) #11
  %348 = icmp eq i64 %347, -1
  br i1 %348, label %627, label %349

349:                                              ; preds = %341
  %350 = trunc i64 %347 to i8
  %351 = add i8 %350, 2
  %352 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 13
  store i8 %351, i8* %352, align 2
  %353 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %354 = bitcast %"class.libgav1::RawBitReader"* %353 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %355 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %354, align 8
  %356 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %355, i64 3
  %357 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %356, align 8
  %358 = call i64 %357(%"class.libgav1::RawBitReader"* %353, i32 3) #11
  %359 = icmp eq i64 %358, -1
  br i1 %359, label %627, label %360

360:                                              ; preds = %349
  %361 = load i8, i8* %352, align 2
  %362 = trunc i64 %358 to i8
  %363 = add i8 %362, 1
  %364 = add i8 %361, %363
  %365 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 12
  store i8 %364, i8* %365, align 1
  %366 = icmp sgt i8 %364, 16
  br i1 %366, label %627, label %367

367:                                              ; preds = %338, %360
  %368 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %369 = bitcast %"class.libgav1::RawBitReader"* %368 to i32 (%"class.libgav1::RawBitReader"*)***
  %370 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %369, align 8
  %371 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %370, i64 2
  %372 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %371, align 8
  %373 = call i32 %372(%"class.libgav1::RawBitReader"* %368) #11
  %374 = icmp eq i32 %373, -1
  br i1 %374, label %627, label %375

375:                                              ; preds = %367
  %376 = icmp ne i32 %373, 0
  %377 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 14
  %378 = zext i1 %376 to i8
  store i8 %378, i8* %377, align 1
  %379 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %380 = bitcast %"class.libgav1::RawBitReader"* %379 to i32 (%"class.libgav1::RawBitReader"*)***
  %381 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %380, align 8
  %382 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %381, i64 2
  %383 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %382, align 8
  %384 = call i32 %383(%"class.libgav1::RawBitReader"* %379) #11
  %385 = icmp eq i32 %384, -1
  br i1 %385, label %627, label %386

386:                                              ; preds = %375
  %387 = icmp ne i32 %384, 0
  %388 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 15
  %389 = zext i1 %387 to i8
  store i8 %389, i8* %388, align 4
  %390 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %391 = bitcast %"class.libgav1::RawBitReader"* %390 to i32 (%"class.libgav1::RawBitReader"*)***
  %392 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %391, align 8
  %393 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %392, i64 2
  %394 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %393, align 8
  %395 = call i32 %394(%"class.libgav1::RawBitReader"* %390) #11
  %396 = icmp eq i32 %395, -1
  br i1 %396, label %627, label %397

397:                                              ; preds = %386
  %398 = icmp ne i32 %395, 0
  %399 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 16
  %400 = zext i1 %398 to i8
  store i8 %400, i8* %399, align 1
  %401 = load i8, i8* %37, align 2, !range !2
  %402 = icmp eq i8 %401, 0
  br i1 %402, label %406, label %403

403:                                              ; preds = %397
  %404 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 27
  store i8 2, i8* %404, align 4
  %405 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 29
  store i8 2, i8* %405, align 2
  br label %553

406:                                              ; preds = %397
  %407 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %408 = bitcast %"class.libgav1::RawBitReader"* %407 to i32 (%"class.libgav1::RawBitReader"*)***
  %409 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %408, align 8
  %410 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %409, i64 2
  %411 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %410, align 8
  %412 = call i32 %411(%"class.libgav1::RawBitReader"* %407) #11
  %413 = icmp eq i32 %412, -1
  br i1 %413, label %627, label %414

414:                                              ; preds = %406
  %415 = icmp ne i32 %412, 0
  %416 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 17
  %417 = zext i1 %415 to i8
  store i8 %417, i8* %416, align 2
  %418 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %419 = bitcast %"class.libgav1::RawBitReader"* %418 to i32 (%"class.libgav1::RawBitReader"*)***
  %420 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %419, align 8
  %421 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %420, i64 2
  %422 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %421, align 8
  %423 = call i32 %422(%"class.libgav1::RawBitReader"* %418) #11
  %424 = icmp eq i32 %423, -1
  br i1 %424, label %627, label %425

425:                                              ; preds = %414
  %426 = icmp ne i32 %423, 0
  %427 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 18
  %428 = zext i1 %426 to i8
  store i8 %428, i8* %427, align 1
  %429 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %430 = bitcast %"class.libgav1::RawBitReader"* %429 to i32 (%"class.libgav1::RawBitReader"*)***
  %431 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %430, align 8
  %432 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %431, i64 2
  %433 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %432, align 8
  %434 = call i32 %433(%"class.libgav1::RawBitReader"* %429) #11
  %435 = icmp eq i32 %434, -1
  br i1 %435, label %627, label %436

436:                                              ; preds = %425
  %437 = icmp ne i32 %434, 0
  %438 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 19
  %439 = zext i1 %437 to i8
  store i8 %439, i8* %438, align 4
  %440 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %441 = bitcast %"class.libgav1::RawBitReader"* %440 to i32 (%"class.libgav1::RawBitReader"*)***
  %442 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %441, align 8
  %443 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %442, i64 2
  %444 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %443, align 8
  %445 = call i32 %444(%"class.libgav1::RawBitReader"* %440) #11
  %446 = icmp eq i32 %445, -1
  br i1 %446, label %627, label %447

447:                                              ; preds = %436
  %448 = icmp ne i32 %445, 0
  %449 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 20
  %450 = zext i1 %448 to i8
  store i8 %450, i8* %449, align 1
  %451 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %452 = bitcast %"class.libgav1::RawBitReader"* %451 to i32 (%"class.libgav1::RawBitReader"*)***
  %453 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %452, align 8
  %454 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %453, i64 2
  %455 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %454, align 8
  %456 = call i32 %455(%"class.libgav1::RawBitReader"* %451) #11
  %457 = icmp eq i32 %456, -1
  br i1 %457, label %627, label %458

458:                                              ; preds = %447
  %459 = icmp ne i32 %456, 0
  %460 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 21
  %461 = zext i1 %459 to i8
  store i8 %461, i8* %460, align 2
  br i1 %459, label %462, label %485

462:                                              ; preds = %458
  %463 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %464 = bitcast %"class.libgav1::RawBitReader"* %463 to i32 (%"class.libgav1::RawBitReader"*)***
  %465 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %464, align 8
  %466 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %465, i64 2
  %467 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %466, align 8
  %468 = call i32 %467(%"class.libgav1::RawBitReader"* %463) #11
  %469 = icmp eq i32 %468, -1
  br i1 %469, label %627, label %470

470:                                              ; preds = %462
  %471 = icmp ne i32 %468, 0
  %472 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 24
  %473 = zext i1 %471 to i8
  store i8 %473, i8* %472, align 1
  %474 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %475 = bitcast %"class.libgav1::RawBitReader"* %474 to i32 (%"class.libgav1::RawBitReader"*)***
  %476 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %475, align 8
  %477 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %476, i64 2
  %478 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %477, align 8
  %479 = call i32 %478(%"class.libgav1::RawBitReader"* %474) #11
  %480 = icmp eq i32 %479, -1
  br i1 %480, label %627, label %481

481:                                              ; preds = %470
  %482 = icmp ne i32 %479, 0
  %483 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 25
  %484 = zext i1 %482 to i8
  store i8 %484, i8* %483, align 2
  br label %485

485:                                              ; preds = %481, %458
  %486 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %487 = bitcast %"class.libgav1::RawBitReader"* %486 to i32 (%"class.libgav1::RawBitReader"*)***
  %488 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %487, align 8
  %489 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %488, i64 2
  %490 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %489, align 8
  %491 = call i32 %490(%"class.libgav1::RawBitReader"* %486) #11
  %492 = icmp eq i32 %491, -1
  br i1 %492, label %627, label %493

493:                                              ; preds = %485
  %494 = icmp ne i32 %491, 0
  %495 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 26
  %496 = zext i1 %494 to i8
  store i8 %496, i8* %495, align 1
  br i1 %494, label %497, label %499

497:                                              ; preds = %493
  %498 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 27
  store i8 2, i8* %498, align 4
  br label %511

499:                                              ; preds = %493
  %500 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %501 = bitcast %"class.libgav1::RawBitReader"* %500 to i32 (%"class.libgav1::RawBitReader"*)***
  %502 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %501, align 8
  %503 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %502, i64 2
  %504 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %503, align 8
  %505 = call i32 %504(%"class.libgav1::RawBitReader"* %500) #11
  %506 = icmp eq i32 %505, -1
  br i1 %506, label %627, label %507

507:                                              ; preds = %499
  %508 = trunc i32 %505 to i8
  %509 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 27
  store i8 %508, i8* %509, align 4
  %510 = icmp sgt i8 %508, 0
  br i1 %510, label %511, label %533

511:                                              ; preds = %497, %507
  %512 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %513 = bitcast %"class.libgav1::RawBitReader"* %512 to i32 (%"class.libgav1::RawBitReader"*)***
  %514 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %513, align 8
  %515 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %514, i64 2
  %516 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %515, align 8
  %517 = call i32 %516(%"class.libgav1::RawBitReader"* %512) #11
  %518 = icmp eq i32 %517, -1
  br i1 %518, label %627, label %519

519:                                              ; preds = %511
  %520 = icmp ne i32 %517, 0
  %521 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 28
  %522 = zext i1 %520 to i8
  store i8 %522, i8* %521, align 1
  br i1 %520, label %533, label %523

523:                                              ; preds = %519
  %524 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %525 = bitcast %"class.libgav1::RawBitReader"* %524 to i32 (%"class.libgav1::RawBitReader"*)***
  %526 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %525, align 8
  %527 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %526, i64 2
  %528 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %527, align 8
  %529 = call i32 %528(%"class.libgav1::RawBitReader"* %524) #11
  %530 = icmp eq i32 %529, -1
  br i1 %530, label %627, label %531

531:                                              ; preds = %523
  %532 = trunc i32 %529 to i8
  br label %533

533:                                              ; preds = %507, %519, %531
  %534 = phi i8 [ %532, %531 ], [ 2, %519 ], [ 2, %507 ]
  %535 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 29
  store i8 %534, i8* %535, align 2
  %536 = load i8, i8* %460, align 2, !range !2
  %537 = icmp eq i8 %536, 0
  br i1 %537, label %553, label %538

538:                                              ; preds = %533
  %539 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %540 = bitcast %"class.libgav1::RawBitReader"* %539 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %541 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %540, align 8
  %542 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %541, i64 3
  %543 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %542, align 8
  %544 = call i64 %543(%"class.libgav1::RawBitReader"* %539, i32 3) #11
  %545 = icmp eq i64 %544, -1
  br i1 %545, label %627, label %546

546:                                              ; preds = %538
  %547 = trunc i64 %544 to i8
  %548 = add i8 %547, 1
  %549 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 22
  store i8 %548, i8* %549, align 1
  %550 = and i8 %547, 31
  %551 = xor i8 %550, 31
  %552 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 23
  store i8 %551, i8* %552, align 4
  br label %553

553:                                              ; preds = %533, %546, %403
  %554 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %555 = bitcast %"class.libgav1::RawBitReader"* %554 to i32 (%"class.libgav1::RawBitReader"*)***
  %556 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %555, align 8
  %557 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %556, i64 2
  %558 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %557, align 8
  %559 = call i32 %558(%"class.libgav1::RawBitReader"* %554) #11
  %560 = icmp eq i32 %559, -1
  br i1 %560, label %627, label %561

561:                                              ; preds = %553
  %562 = icmp ne i32 %559, 0
  %563 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 30
  %564 = zext i1 %562 to i8
  store i8 %564, i8* %563, align 1
  %565 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %566 = bitcast %"class.libgav1::RawBitReader"* %565 to i32 (%"class.libgav1::RawBitReader"*)***
  %567 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %566, align 8
  %568 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %567, i64 2
  %569 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %568, align 8
  %570 = call i32 %569(%"class.libgav1::RawBitReader"* %565) #11
  %571 = icmp eq i32 %570, -1
  br i1 %571, label %627, label %572

572:                                              ; preds = %561
  %573 = icmp ne i32 %570, 0
  %574 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 31
  %575 = zext i1 %573 to i8
  store i8 %575, i8* %574, align 4
  %576 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %577 = bitcast %"class.libgav1::RawBitReader"* %576 to i32 (%"class.libgav1::RawBitReader"*)***
  %578 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %577, align 8
  %579 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %578, i64 2
  %580 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %579, align 8
  %581 = call i32 %580(%"class.libgav1::RawBitReader"* %576) #11
  %582 = icmp eq i32 %581, -1
  br i1 %582, label %627, label %583

583:                                              ; preds = %572
  %584 = icmp ne i32 %581, 0
  %585 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 32
  %586 = zext i1 %584 to i8
  store i8 %586, i8* %585, align 1
  %587 = call zeroext i1 @_ZN7libgav19ObuParser16ParseColorConfigEPNS_17ObuSequenceHeaderE(%"class.libgav1::ObuParser"* %0, %"struct.libgav1::ObuSequenceHeader"* nonnull %3)
  br i1 %587, label %588, label %627

588:                                              ; preds = %583
  %589 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %590 = bitcast %"class.libgav1::RawBitReader"* %589 to i32 (%"class.libgav1::RawBitReader"*)***
  %591 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %590, align 8
  %592 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %591, i64 2
  %593 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %592, align 8
  %594 = call i32 %593(%"class.libgav1::RawBitReader"* %589) #11
  %595 = icmp eq i32 %594, -1
  br i1 %595, label %627, label %596

596:                                              ; preds = %588
  %597 = icmp ne i32 %594, 0
  %598 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %3, i64 0, i32 41
  %599 = zext i1 %597 to i8
  store i8 %599, i8* %598, align 1
  %600 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 10
  %601 = load i8, i8* %600, align 4, !range !2
  %602 = icmp eq i8 %601, 0
  %603 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 0
  br i1 %602, label %604, label %605

604:                                              ; preds = %596
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %603, i8* nonnull align 4 %4, i64 692, i1 false)
  br label %616

605:                                              ; preds = %596
  %606 = call i32 @bcmp(i8* nonnull %4, i8* %603, i64 404) #11
  %607 = icmp eq i32 %606, 0
  br i1 %607, label %608, label %609

608:                                              ; preds = %605
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %603, i8* nonnull align 4 %4, i64 692, i1 false)
  br label %618

609:                                              ; preds = %605
  br i1 %1, label %627, label %610

610:                                              ; preds = %609
  %611 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 11
  store i8 1, i8* %611, align 1
  %612 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 14
  %613 = load %"struct.libgav1::DecoderState"*, %"struct.libgav1::DecoderState"** %612, align 8
  call void @_ZN7libgav112DecoderState20ClearReferenceFramesEv(%"struct.libgav1::DecoderState"* %613)
  %614 = load i8, i8* %600, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %603, i8* nonnull align 4 %4, i64 692, i1 false)
  %615 = icmp eq i8 %614, 0
  br i1 %615, label %616, label %618

616:                                              ; preds = %604, %610
  %617 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 11
  store i8 1, i8* %617, align 1
  br label %618

618:                                              ; preds = %608, %610, %616
  store i8 1, i8* %600, align 4
  %619 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 3
  %620 = load i32, i32* %619, align 8
  %621 = sext i32 %620 to i64
  %622 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 4, i64 %621
  %623 = load i32, i32* %622, align 4
  %624 = icmp eq i32 %623, 0
  %625 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 12
  %626 = zext i1 %624 to i8
  store i8 %626, i8* %625, align 2
  br label %627

627:                                              ; preds = %233, %221, %211, %199, %255, %248, %185, %169, %148, %163, %39, %136, %127, %104, %94, %83, %75, %63, %609, %588, %583, %572, %561, %553, %538, %523, %511, %499, %485, %470, %462, %447, %436, %425, %414, %406, %386, %375, %367, %360, %349, %341, %326, %304, %291, %280, %272, %119, %57, %40, %24, %15, %2, %618
  %628 = phi i1 [ true, %618 ], [ false, %2 ], [ false, %15 ], [ false, %24 ], [ false, %39 ], [ false, %40 ], [ false, %57 ], [ false, %119 ], [ false, %272 ], [ false, %280 ], [ false, %291 ], [ false, %304 ], [ false, %326 ], [ false, %341 ], [ false, %349 ], [ false, %360 ], [ false, %367 ], [ false, %375 ], [ false, %386 ], [ false, %406 ], [ false, %414 ], [ false, %425 ], [ false, %436 ], [ false, %447 ], [ false, %462 ], [ false, %470 ], [ false, %485 ], [ false, %499 ], [ false, %511 ], [ false, %523 ], [ false, %538 ], [ false, %553 ], [ false, %561 ], [ false, %572 ], [ false, %583 ], [ false, %588 ], [ false, %609 ], [ false, %63 ], [ false, %75 ], [ false, %83 ], [ false, %94 ], [ false, %104 ], [ false, %127 ], [ false, %136 ], [ false, %163 ], [ false, %148 ], [ false, %169 ], [ false, %185 ], [ false, %248 ], [ false, %255 ], [ false, %199 ], [ false, %211 ], [ false, %221 ], [ false, %233 ]
  call void @llvm.lifetime.end.p0i8(i64 692, i8* nonnull %4) #11
  ret i1 %628
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7libgav112DecoderState20ClearReferenceFramesEv(%"struct.libgav1::DecoderState"*) local_unnamed_addr #1 comdat align 2 {
  %2 = bitcast %"struct.libgav1::DecoderState"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false)
  %3 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %0, i64 0, i32 2
  %4 = bitcast %"struct.std::__1::array.22"* %3 to i64*
  store i64 0, i64* %4, align 4
  %5 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %0, i64 0, i32 5, i32 0, i64 0
  %6 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %0, i64 0, i32 5, i32 0, i64 0, i32 1
  %7 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %6, align 8
  %8 = bitcast %"class.std::__1::shared_ptr"* %5 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %8, align 8
  %9 = icmp eq %"class.std::__1::__shared_weak_count"* %7, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %7, i64 0, i32 0, i32 1
  %12 = atomicrmw add i64* %11, i64 -1 acq_rel
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %20

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %7, i64 0, i32 0
  %16 = bitcast %"class.std::__1::__shared_weak_count"* %7 to void (%"class.std::__1::__shared_count"*)***
  %17 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %17, i64 2
  %19 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %18, align 8
  tail call void %19(%"class.std::__1::__shared_count"* %15) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %7) #11
  br label %20

20:                                               ; preds = %14, %10, %1
  %21 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %0, i64 0, i32 5, i32 0, i64 1
  %22 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %0, i64 0, i32 5, i32 0, i64 1, i32 1
  %23 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %22, align 8
  %24 = bitcast %"class.std::__1::shared_ptr"* %21 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %24, align 8
  %25 = icmp eq %"class.std::__1::__shared_weak_count"* %23, null
  br i1 %25, label %36, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %23, i64 0, i32 0, i32 1
  %28 = atomicrmw add i64* %27, i64 -1 acq_rel
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %23, i64 0, i32 0
  %32 = bitcast %"class.std::__1::__shared_weak_count"* %23 to void (%"class.std::__1::__shared_count"*)***
  %33 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %33, i64 2
  %35 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %34, align 8
  tail call void %35(%"class.std::__1::__shared_count"* %31) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %23) #11
  br label %36

36:                                               ; preds = %30, %26, %20
  %37 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %0, i64 0, i32 5, i32 0, i64 2
  %38 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %0, i64 0, i32 5, i32 0, i64 2, i32 1
  %39 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %38, align 8
  %40 = bitcast %"class.std::__1::shared_ptr"* %37 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %40, align 8
  %41 = icmp eq %"class.std::__1::__shared_weak_count"* %39, null
  br i1 %41, label %52, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %39, i64 0, i32 0, i32 1
  %44 = atomicrmw add i64* %43, i64 -1 acq_rel
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %52

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %39, i64 0, i32 0
  %48 = bitcast %"class.std::__1::__shared_weak_count"* %39 to void (%"class.std::__1::__shared_count"*)***
  %49 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %49, i64 2
  %51 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %50, align 8
  tail call void %51(%"class.std::__1::__shared_count"* %47) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %39) #11
  br label %52

52:                                               ; preds = %46, %42, %36
  %53 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %0, i64 0, i32 5, i32 0, i64 3
  %54 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %0, i64 0, i32 5, i32 0, i64 3, i32 1
  %55 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %54, align 8
  %56 = bitcast %"class.std::__1::shared_ptr"* %53 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %56, align 8
  %57 = icmp eq %"class.std::__1::__shared_weak_count"* %55, null
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %55, i64 0, i32 0, i32 1
  %60 = atomicrmw add i64* %59, i64 -1 acq_rel
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %68

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %55, i64 0, i32 0
  %64 = bitcast %"class.std::__1::__shared_weak_count"* %55 to void (%"class.std::__1::__shared_count"*)***
  %65 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %65, i64 2
  %67 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %66, align 8
  tail call void %67(%"class.std::__1::__shared_count"* %63) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %55) #11
  br label %68

68:                                               ; preds = %62, %58, %52
  %69 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %0, i64 0, i32 5, i32 0, i64 4
  %70 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %0, i64 0, i32 5, i32 0, i64 4, i32 1
  %71 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %70, align 8
  %72 = bitcast %"class.std::__1::shared_ptr"* %69 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %72, align 8
  %73 = icmp eq %"class.std::__1::__shared_weak_count"* %71, null
  br i1 %73, label %84, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %71, i64 0, i32 0, i32 1
  %76 = atomicrmw add i64* %75, i64 -1 acq_rel
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %84

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %71, i64 0, i32 0
  %80 = bitcast %"class.std::__1::__shared_weak_count"* %71 to void (%"class.std::__1::__shared_count"*)***
  %81 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %81, i64 2
  %83 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %82, align 8
  tail call void %83(%"class.std::__1::__shared_count"* %79) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %71) #11
  br label %84

84:                                               ; preds = %78, %74, %68
  %85 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %0, i64 0, i32 5, i32 0, i64 5
  %86 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %0, i64 0, i32 5, i32 0, i64 5, i32 1
  %87 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %86, align 8
  %88 = bitcast %"class.std::__1::shared_ptr"* %85 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %88, align 8
  %89 = icmp eq %"class.std::__1::__shared_weak_count"* %87, null
  br i1 %89, label %100, label %90

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %87, i64 0, i32 0, i32 1
  %92 = atomicrmw add i64* %91, i64 -1 acq_rel
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %100

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %87, i64 0, i32 0
  %96 = bitcast %"class.std::__1::__shared_weak_count"* %87 to void (%"class.std::__1::__shared_count"*)***
  %97 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %97, i64 2
  %99 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %98, align 8
  tail call void %99(%"class.std::__1::__shared_count"* %95) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %87) #11
  br label %100

100:                                              ; preds = %94, %90, %84
  %101 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %0, i64 0, i32 5, i32 0, i64 6
  %102 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %0, i64 0, i32 5, i32 0, i64 6, i32 1
  %103 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %102, align 8
  %104 = bitcast %"class.std::__1::shared_ptr"* %101 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %104, align 8
  %105 = icmp eq %"class.std::__1::__shared_weak_count"* %103, null
  br i1 %105, label %116, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %103, i64 0, i32 0, i32 1
  %108 = atomicrmw add i64* %107, i64 -1 acq_rel
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %116

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %103, i64 0, i32 0
  %112 = bitcast %"class.std::__1::__shared_weak_count"* %103 to void (%"class.std::__1::__shared_count"*)***
  %113 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %113, i64 2
  %115 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %114, align 8
  tail call void %115(%"class.std::__1::__shared_count"* %111) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %103) #11
  br label %116

116:                                              ; preds = %110, %106, %100
  %117 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %0, i64 0, i32 5, i32 0, i64 7
  %118 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %0, i64 0, i32 5, i32 0, i64 7, i32 1
  %119 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %118, align 8
  %120 = bitcast %"class.std::__1::shared_ptr"* %117 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %120, align 8
  %121 = icmp eq %"class.std::__1::__shared_weak_count"* %119, null
  br i1 %121, label %132, label %122

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %119, i64 0, i32 0, i32 1
  %124 = atomicrmw add i64* %123, i64 -1 acq_rel
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %132

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %119, i64 0, i32 0
  %128 = bitcast %"class.std::__1::__shared_weak_count"* %119 to void (%"class.std::__1::__shared_count"*)***
  %129 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %129, i64 2
  %131 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %130, align 8
  tail call void %131(%"class.std::__1::__shared_count"* %127) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %119) #11
  br label %132

132:                                              ; preds = %126, %122, %116
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav19ObuParser26MarkInvalidReferenceFramesEv(%"class.libgav1::ObuParser"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 14
  %3 = load %"struct.libgav1::DecoderState"*, %"struct.libgav1::DecoderState"** %2, align 8
  %4 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %3, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 13
  %7 = load i8, i8* %6, align 2
  %8 = sext i8 %7 to i32
  %9 = shl i32 1, %8
  %10 = sub nsw i32 %5, %9
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %12, label %18

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 12
  %14 = load i8, i8* %13, align 1
  %15 = sext i8 %14 to i32
  %16 = shl i32 1, %15
  %17 = add nsw i32 %16, %10
  br label %18

18:                                               ; preds = %12, %1
  %19 = phi i32 [ %17, %12 ], [ %10, %1 ]
  %20 = phi i1 [ false, %12 ], [ true, %1 ]
  br label %22

21:                                               ; preds = %67
  ret void

22:                                               ; preds = %70, %18
  %23 = phi i32 [ %5, %18 ], [ %73, %70 ]
  %24 = phi %"struct.libgav1::DecoderState"* [ %3, %18 ], [ %71, %70 ]
  %25 = phi i64 [ 0, %18 ], [ %68, %70 ]
  %26 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %24, i64 0, i32 0, i32 0, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = icmp slt i32 %23, %28
  %30 = icmp sgt i32 %19, %28
  br i1 %20, label %31, label %49

31:                                               ; preds = %22
  %32 = or i1 %29, %30
  br i1 %32, label %33, label %67

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %24, i64 0, i32 5, i32 0, i64 %25
  %35 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %24, i64 0, i32 5, i32 0, i64 %25, i32 1
  %36 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %35, align 8
  %37 = bitcast %"class.std::__1::shared_ptr"* %34 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %37, align 8
  %38 = icmp eq %"class.std::__1::__shared_weak_count"* %36, null
  br i1 %38, label %67, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %36, i64 0, i32 0, i32 1
  %41 = atomicrmw add i64* %40, i64 -1 acq_rel
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %67

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %36, i64 0, i32 0
  %45 = bitcast %"class.std::__1::__shared_weak_count"* %36 to void (%"class.std::__1::__shared_count"*)***
  %46 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %46, i64 2
  %48 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %47, align 8
  tail call void %48(%"class.std::__1::__shared_count"* %44) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %36) #11
  br label %67

49:                                               ; preds = %22
  %50 = and i1 %29, %30
  br i1 %50, label %51, label %67

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %24, i64 0, i32 5, i32 0, i64 %25
  %53 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %24, i64 0, i32 5, i32 0, i64 %25, i32 1
  %54 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %53, align 8
  %55 = bitcast %"class.std::__1::shared_ptr"* %52 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %55, align 8
  %56 = icmp eq %"class.std::__1::__shared_weak_count"* %54, null
  br i1 %56, label %67, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %54, i64 0, i32 0, i32 1
  %59 = atomicrmw add i64* %58, i64 -1 acq_rel
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %67

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %54, i64 0, i32 0
  %63 = bitcast %"class.std::__1::__shared_weak_count"* %54 to void (%"class.std::__1::__shared_count"*)***
  %64 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %64, i64 2
  %66 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %65, align 8
  tail call void %66(%"class.std::__1::__shared_count"* %62) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %54) #11
  br label %67

67:                                               ; preds = %51, %57, %61, %33, %39, %43, %31, %49
  %68 = add nuw nsw i64 %25, 1
  %69 = icmp eq i64 %68, 8
  br i1 %69, label %21, label %70

70:                                               ; preds = %67
  %71 = load %"struct.libgav1::DecoderState"*, %"struct.libgav1::DecoderState"** %2, align 8
  %72 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %71, i64 0, i32 1
  %73 = load i32, i32* %72, align 8
  br label %22
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser27ParseFrameSizeAndRenderSizeEv(%"class.libgav1::ObuParser"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 25
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %43, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %6, align 8
  %8 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 7
  %9 = load i8, i8* %8, align 8
  %10 = sext i8 %9 to i32
  %11 = bitcast %"class.libgav1::RawBitReader"* %7 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %12 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %11, align 8
  %13 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %12, i64 3
  %14 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %13, align 8
  %15 = tail call i64 %14(%"class.libgav1::RawBitReader"* %7, i32 %10) #11
  %16 = icmp eq i64 %15, -1
  br i1 %16, label %149, label %17

17:                                               ; preds = %5
  %18 = trunc i64 %15 to i32
  %19 = add i32 %18, 1
  %20 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 4
  store i32 %19, i32* %20, align 8
  %21 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %6, align 8
  %22 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 8
  %23 = load i8, i8* %22, align 1
  %24 = sext i8 %23 to i32
  %25 = bitcast %"class.libgav1::RawBitReader"* %21 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %26 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %25, align 8
  %27 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %26, i64 3
  %28 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %27, align 8
  %29 = tail call i64 %28(%"class.libgav1::RawBitReader"* %21, i32 %24) #11
  %30 = icmp eq i64 %29, -1
  br i1 %30, label %149, label %31

31:                                               ; preds = %17
  %32 = trunc i64 %29 to i32
  %33 = add i32 %32, 1
  %34 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 5
  store i32 %33, i32* %34, align 4
  %35 = load i32, i32* %20, align 8
  %36 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 9
  %37 = load i32, i32* %36, align 4
  %38 = icmp sgt i32 %35, %37
  br i1 %38, label %149, label %39

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 10
  %41 = load i32, i32* %40, align 8
  %42 = icmp sgt i32 %33, %41
  br i1 %42, label %149, label %50

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 9
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 4
  store i32 %45, i32* %46, align 8
  %47 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 10
  %48 = load i32, i32* %47, align 8
  %49 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 5
  store i32 %48, i32* %49, align 4
  br label %50

50:                                               ; preds = %39, %43
  %51 = phi i32 [ %35, %39 ], [ %45, %43 ]
  %52 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 4
  %53 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 10
  store i32 %51, i32* %53, align 8
  %54 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 29
  store i8 0, i8* %54, align 1
  %55 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 30
  %56 = load i8, i8* %55, align 1, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %90, label %58

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %59, align 8
  %61 = bitcast %"class.libgav1::RawBitReader"* %60 to i32 (%"class.libgav1::RawBitReader"*)***
  %62 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %61, align 8
  %63 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %62, i64 2
  %64 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %63, align 8
  %65 = tail call i32 %64(%"class.libgav1::RawBitReader"* %60) #11
  %66 = icmp eq i32 %65, -1
  br i1 %66, label %149, label %67

67:                                               ; preds = %58
  %68 = icmp ne i32 %65, 0
  %69 = zext i1 %68 to i8
  store i8 %69, i8* %54, align 1
  br i1 %68, label %72, label %70

70:                                               ; preds = %67
  %71 = load i32, i32* %53, align 8
  br label %90

72:                                               ; preds = %67
  %73 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %59, align 8
  %74 = bitcast %"class.libgav1::RawBitReader"* %73 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %75 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %74, align 8
  %76 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %75, i64 3
  %77 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %76, align 8
  %78 = tail call i64 %77(%"class.libgav1::RawBitReader"* %73, i32 3) #11
  %79 = icmp eq i64 %78, -1
  br i1 %79, label %149, label %80

80:                                               ; preds = %72
  %81 = trunc i64 %78 to i8
  %82 = add i8 %81, 9
  %83 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 30
  store i8 %82, i8* %83, align 2
  %84 = load i32, i32* %53, align 8
  %85 = shl i32 %84, 3
  %86 = zext i8 %82 to i32
  %87 = lshr i32 %86, 1
  %88 = add nsw i32 %85, %87
  %89 = sdiv i32 %88, %86
  store i32 %89, i32* %52, align 8
  br label %93

90:                                               ; preds = %70, %50
  %91 = phi i32 [ %71, %70 ], [ %51, %50 ]
  %92 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 30
  store i8 8, i8* %92, align 2
  br label %93

93:                                               ; preds = %90, %80
  %94 = phi i32 [ %91, %90 ], [ %84, %80 ]
  %95 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 5
  %96 = load i32, i32* %95, align 4
  %97 = sdiv i32 2147483647, %96
  %98 = icmp sgt i32 %94, %97
  br i1 %98, label %149, label %99

99:                                               ; preds = %93
  %100 = load i32, i32* %52, align 8
  %101 = add nsw i32 %100, 7
  %102 = ashr i32 %101, 3
  %103 = shl nsw i32 %102, 1
  %104 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 6
  store i32 %103, i32* %104, align 8
  %105 = add nsw i32 %96, 7
  %106 = ashr i32 %105, 3
  %107 = shl nsw i32 %106, 1
  %108 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 7
  store i32 %107, i32* %108, align 4
  %109 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %110 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %109, align 8
  %111 = bitcast %"class.libgav1::RawBitReader"* %110 to i32 (%"class.libgav1::RawBitReader"*)***
  %112 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %111, align 8
  %113 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %112, i64 2
  %114 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %113, align 8
  %115 = tail call i32 %114(%"class.libgav1::RawBitReader"* %110) #11
  %116 = icmp eq i32 %115, -1
  br i1 %116, label %149, label %117

117:                                              ; preds = %99
  %118 = icmp ne i32 %115, 0
  %119 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 28
  %120 = zext i1 %118 to i8
  store i8 %120, i8* %119, align 8
  br i1 %118, label %121, label %144

121:                                              ; preds = %117
  %122 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %109, align 8
  %123 = bitcast %"class.libgav1::RawBitReader"* %122 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %124 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %123, align 8
  %125 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %124, i64 3
  %126 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %125, align 8
  %127 = tail call i64 %126(%"class.libgav1::RawBitReader"* %122, i32 16) #11
  %128 = icmp eq i64 %127, -1
  br i1 %128, label %149, label %129

129:                                              ; preds = %121
  %130 = trunc i64 %127 to i32
  %131 = add i32 %130, 1
  %132 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 8
  store i32 %131, i32* %132, align 8
  %133 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %109, align 8
  %134 = bitcast %"class.libgav1::RawBitReader"* %133 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %135 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %134, align 8
  %136 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %135, i64 3
  %137 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %136, align 8
  %138 = tail call i64 %137(%"class.libgav1::RawBitReader"* %133, i32 16) #11
  %139 = icmp eq i64 %138, -1
  br i1 %139, label %149, label %140

140:                                              ; preds = %129
  %141 = trunc i64 %138 to i32
  %142 = add i32 %141, 1
  %143 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 9
  store i32 %142, i32* %143, align 4
  br label %149

144:                                              ; preds = %117
  %145 = load i32, i32* %53, align 8
  %146 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 8
  store i32 %145, i32* %146, align 8
  %147 = load i32, i32* %95, align 4
  %148 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 9
  store i32 %147, i32* %148, align 4
  br label %149

149:                                              ; preds = %93, %72, %58, %140, %144, %129, %121, %99, %39, %31, %17, %5
  %150 = phi i1 [ false, %5 ], [ false, %17 ], [ false, %31 ], [ false, %39 ], [ false, %99 ], [ false, %121 ], [ false, %129 ], [ true, %144 ], [ true, %140 ], [ false, %58 ], [ false, %72 ], [ false, %93 ]
  ret i1 %150
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser42ParseSuperResParametersAndComputeImageSizeEv(%"class.libgav1::ObuParser"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 10
  store i32 %3, i32* %4, align 8
  %5 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 29
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 30
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %41, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %10, align 8
  %12 = bitcast %"class.libgav1::RawBitReader"* %11 to i32 (%"class.libgav1::RawBitReader"*)***
  %13 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %13, i64 2
  %15 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %14, align 8
  %16 = tail call i32 %15(%"class.libgav1::RawBitReader"* %11) #11
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %60, label %18

18:                                               ; preds = %9
  %19 = icmp ne i32 %16, 0
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %5, align 1
  br i1 %19, label %23, label %21

21:                                               ; preds = %18
  %22 = load i32, i32* %4, align 8
  br label %41

23:                                               ; preds = %18
  %24 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %10, align 8
  %25 = bitcast %"class.libgav1::RawBitReader"* %24 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %26 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %25, align 8
  %27 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %26, i64 3
  %28 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %27, align 8
  %29 = tail call i64 %28(%"class.libgav1::RawBitReader"* %24, i32 3) #11
  %30 = icmp eq i64 %29, -1
  br i1 %30, label %60, label %31

31:                                               ; preds = %23
  %32 = trunc i64 %29 to i8
  %33 = add i8 %32, 9
  %34 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 30
  store i8 %33, i8* %34, align 2
  %35 = load i32, i32* %4, align 8
  %36 = shl i32 %35, 3
  %37 = zext i8 %33 to i32
  %38 = lshr i32 %37, 1
  %39 = add nsw i32 %36, %38
  %40 = sdiv i32 %39, %37
  store i32 %40, i32* %2, align 8
  br label %44

41:                                               ; preds = %21, %1
  %42 = phi i32 [ %22, %21 ], [ %3, %1 ]
  %43 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 30
  store i8 8, i8* %43, align 2
  br label %44

44:                                               ; preds = %41, %31
  %45 = phi i32 [ %42, %41 ], [ %35, %31 ]
  %46 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 5
  %47 = load i32, i32* %46, align 4
  %48 = sdiv i32 2147483647, %47
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %60, label %50

50:                                               ; preds = %44
  %51 = load i32, i32* %2, align 8
  %52 = add nsw i32 %51, 7
  %53 = ashr i32 %52, 3
  %54 = shl nsw i32 %53, 1
  %55 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 6
  store i32 %54, i32* %55, align 8
  %56 = add nsw i32 %47, 7
  %57 = ashr i32 %56, 3
  %58 = shl nsw i32 %57, 1
  %59 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 7
  store i32 %58, i32* %59, align 4
  br label %60

60:                                               ; preds = %44, %23, %9, %50
  %61 = phi i1 [ true, %50 ], [ false, %9 ], [ false, %23 ], [ false, %44 ]
  ret i1 %61
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7libgav19ObuParser22ValidateInterFrameSizeEv(%"class.libgav1::ObuParser"* readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 0
  %3 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 14
  %4 = load %"struct.libgav1::DecoderState"*, %"struct.libgav1::DecoderState"** %3, align 8
  %5 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = shl nsw i32 %6, 1
  %8 = load i8, i8* %2, align 1
  %9 = sext i8 %8 to i64
  %10 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %4, i64 0, i32 5, i32 0, i64 %9, i32 0
  %11 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %10, align 8
  %12 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %11, i64 0, i32 15
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %7, %13
  br i1 %14, label %37, label %24

15:                                               ; preds = %24
  %16 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 1
  %17 = load i8, i8* %16, align 1
  %18 = sext i8 %17 to i64
  %19 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %4, i64 0, i32 5, i32 0, i64 %18, i32 0
  %20 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %19, align 8
  %21 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %20, i64 0, i32 15
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %7, %22
  br i1 %23, label %37, label %38

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 5
  %26 = load i32, i32* %25, align 4
  %27 = shl nsw i32 %26, 1
  %28 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %11, i64 0, i32 17
  %29 = load i32, i32* %28, align 4
  %30 = icmp slt i32 %27, %29
  %31 = shl nsw i32 %13, 4
  %32 = icmp sgt i32 %6, %31
  %33 = or i1 %32, %30
  %34 = shl nsw i32 %29, 4
  %35 = icmp sgt i32 %26, %34
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %15

37:                                               ; preds = %124, %114, %105, %95, %86, %76, %67, %57, %48, %38, %15, %24, %1
  ret i1 false

38:                                               ; preds = %15
  %39 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %20, i64 0, i32 17
  %40 = load i32, i32* %39, align 4
  %41 = icmp slt i32 %27, %40
  %42 = shl nsw i32 %22, 4
  %43 = icmp sgt i32 %6, %42
  %44 = or i1 %43, %41
  %45 = shl nsw i32 %40, 4
  %46 = icmp sgt i32 %26, %45
  %47 = or i1 %44, %46
  br i1 %47, label %37, label %48

48:                                               ; preds = %38
  %49 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 2
  %50 = load i8, i8* %49, align 1
  %51 = sext i8 %50 to i64
  %52 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %4, i64 0, i32 5, i32 0, i64 %51, i32 0
  %53 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %52, align 8
  %54 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %53, i64 0, i32 15
  %55 = load i32, i32* %54, align 4
  %56 = icmp slt i32 %7, %55
  br i1 %56, label %37, label %57

57:                                               ; preds = %48
  %58 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %53, i64 0, i32 17
  %59 = load i32, i32* %58, align 4
  %60 = icmp slt i32 %27, %59
  %61 = shl nsw i32 %55, 4
  %62 = icmp sgt i32 %6, %61
  %63 = or i1 %62, %60
  %64 = shl nsw i32 %59, 4
  %65 = icmp sgt i32 %26, %64
  %66 = or i1 %63, %65
  br i1 %66, label %37, label %67

67:                                               ; preds = %57
  %68 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 3
  %69 = load i8, i8* %68, align 1
  %70 = sext i8 %69 to i64
  %71 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %4, i64 0, i32 5, i32 0, i64 %70, i32 0
  %72 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %71, align 8
  %73 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %72, i64 0, i32 15
  %74 = load i32, i32* %73, align 4
  %75 = icmp slt i32 %7, %74
  br i1 %75, label %37, label %76

76:                                               ; preds = %67
  %77 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %72, i64 0, i32 17
  %78 = load i32, i32* %77, align 4
  %79 = icmp slt i32 %27, %78
  %80 = shl nsw i32 %74, 4
  %81 = icmp sgt i32 %6, %80
  %82 = or i1 %81, %79
  %83 = shl nsw i32 %78, 4
  %84 = icmp sgt i32 %26, %83
  %85 = or i1 %82, %84
  br i1 %85, label %37, label %86

86:                                               ; preds = %76
  %87 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 4
  %88 = load i8, i8* %87, align 1
  %89 = sext i8 %88 to i64
  %90 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %4, i64 0, i32 5, i32 0, i64 %89, i32 0
  %91 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %90, align 8
  %92 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %91, i64 0, i32 15
  %93 = load i32, i32* %92, align 4
  %94 = icmp slt i32 %7, %93
  br i1 %94, label %37, label %95

95:                                               ; preds = %86
  %96 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %91, i64 0, i32 17
  %97 = load i32, i32* %96, align 4
  %98 = icmp slt i32 %27, %97
  %99 = shl nsw i32 %93, 4
  %100 = icmp sgt i32 %6, %99
  %101 = or i1 %100, %98
  %102 = shl nsw i32 %97, 4
  %103 = icmp sgt i32 %26, %102
  %104 = or i1 %101, %103
  br i1 %104, label %37, label %105

105:                                              ; preds = %95
  %106 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 5
  %107 = load i8, i8* %106, align 1
  %108 = sext i8 %107 to i64
  %109 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %4, i64 0, i32 5, i32 0, i64 %108, i32 0
  %110 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %109, align 8
  %111 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %110, i64 0, i32 15
  %112 = load i32, i32* %111, align 4
  %113 = icmp slt i32 %7, %112
  br i1 %113, label %37, label %114

114:                                              ; preds = %105
  %115 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %110, i64 0, i32 17
  %116 = load i32, i32* %115, align 4
  %117 = icmp slt i32 %27, %116
  %118 = shl nsw i32 %112, 4
  %119 = icmp sgt i32 %6, %118
  %120 = or i1 %119, %117
  %121 = shl nsw i32 %116, 4
  %122 = icmp sgt i32 %26, %121
  %123 = or i1 %120, %122
  br i1 %123, label %37, label %124

124:                                              ; preds = %114
  %125 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 6
  %126 = load i8, i8* %125, align 1
  %127 = sext i8 %126 to i64
  %128 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %4, i64 0, i32 5, i32 0, i64 %127, i32 0
  %129 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %128, align 8
  %130 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %129, i64 0, i32 15
  %131 = load i32, i32* %130, align 4
  %132 = icmp slt i32 %7, %131
  br i1 %132, label %37, label %133

133:                                              ; preds = %124
  %134 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %129, i64 0, i32 17
  %135 = load i32, i32* %134, align 4
  %136 = icmp slt i32 %27, %135
  %137 = shl nsw i32 %131, 4
  %138 = icmp sgt i32 %6, %137
  %139 = or i1 %138, %136
  %140 = shl nsw i32 %135, 4
  %141 = icmp sgt i32 %26, %140
  %142 = or i1 %139, %141
  %143 = xor i1 %142, true
  ret i1 %143
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser23ParseReferenceOrderHintEv(%"class.libgav1::ObuParser"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 23
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %50, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 21
  %7 = load i8, i8* %6, align 2, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %50, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 22
  %12 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 14
  br label %13

13:                                               ; preds = %47, %9
  %14 = phi i64 [ 0, %9 ], [ %48, %47 ]
  %15 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %10, align 8
  %16 = load i8, i8* %11, align 1
  %17 = sext i8 %16 to i32
  %18 = bitcast %"class.libgav1::RawBitReader"* %15 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %19 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %18, align 8
  %20 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %19, i64 3
  %21 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %20, align 8
  %22 = tail call i64 %21(%"class.libgav1::RawBitReader"* %15, i32 %17) #11
  %23 = icmp eq i64 %22, -1
  br i1 %23, label %50, label %24

24:                                               ; preds = %13
  %25 = trunc i64 %22 to i8
  %26 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 53, i64 %14
  store i8 %25, i8* %26, align 1
  %27 = load %"struct.libgav1::DecoderState"*, %"struct.libgav1::DecoderState"** %12, align 8
  %28 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %27, i64 0, i32 2, i32 0, i64 %14
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, %25
  br i1 %30, label %47, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %27, i64 0, i32 5, i32 0, i64 %14
  %33 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %27, i64 0, i32 5, i32 0, i64 %14, i32 1
  %34 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %33, align 8
  %35 = bitcast %"class.std::__1::shared_ptr"* %32 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %35, align 8
  %36 = icmp eq %"class.std::__1::__shared_weak_count"* %34, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %34, i64 0, i32 0, i32 1
  %39 = atomicrmw add i64* %38, i64 -1 acq_rel
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %47

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %34, i64 0, i32 0
  %43 = bitcast %"class.std::__1::__shared_weak_count"* %34 to void (%"class.std::__1::__shared_count"*)***
  %44 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %44, i64 2
  %46 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %45, align 8
  tail call void %46(%"class.std::__1::__shared_count"* %42) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %34) #11
  br label %47

47:                                               ; preds = %31, %37, %41, %24
  %48 = add nuw nsw i64 %14, 1
  %49 = icmp eq i64 %48, 8
  br i1 %49, label %50, label %13

50:                                               ; preds = %13, %47, %1, %5
  %51 = phi i1 [ true, %5 ], [ true, %1 ], [ true, %47 ], [ false, %13 ]
  ret i1 %51
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN7libgav19ObuParser27FindLatestBackwardReferenceEiRKNSt3__15arrayIiLm8EEERKNS2_IbLm8EEE(i32, %"struct.std::__1::array.46"* nocapture readonly dereferenceable(32), %"struct.std::__1::array.23"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %1, i64 0, i32 0, i64 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %2, i64 0, i32 0, i64 0
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp ne i8 %7, 0
  %9 = icmp slt i32 %5, %0
  %10 = or i1 %9, %8
  %11 = sext i1 %10 to i32
  %12 = select i1 %10, i32 -2147483648, i32 %5
  %13 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %1, i64 0, i32 0, i64 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %2, i64 0, i32 0, i64 1
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = icmp ne i8 %16, 0
  %18 = icmp slt i32 %14, %0
  %19 = or i1 %18, %17
  %20 = icmp slt i32 %14, %12
  %21 = or i1 %20, %19
  %22 = select i1 %21, i32 %11, i32 1
  %23 = select i1 %21, i32 %12, i32 %14
  %24 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %1, i64 0, i32 0, i64 2
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %2, i64 0, i32 0, i64 2
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp ne i8 %27, 0
  %29 = icmp slt i32 %25, %0
  %30 = or i1 %29, %28
  %31 = icmp slt i32 %25, %23
  %32 = or i1 %31, %30
  %33 = select i1 %32, i32 %22, i32 2
  %34 = select i1 %32, i32 %23, i32 %25
  %35 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %1, i64 0, i32 0, i64 3
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %2, i64 0, i32 0, i64 3
  %38 = load i8, i8* %37, align 1, !range !2
  %39 = icmp ne i8 %38, 0
  %40 = icmp slt i32 %36, %0
  %41 = or i1 %40, %39
  %42 = icmp slt i32 %36, %34
  %43 = or i1 %42, %41
  %44 = select i1 %43, i32 %33, i32 3
  %45 = select i1 %43, i32 %34, i32 %36
  %46 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %1, i64 0, i32 0, i64 4
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %2, i64 0, i32 0, i64 4
  %49 = load i8, i8* %48, align 1, !range !2
  %50 = icmp ne i8 %49, 0
  %51 = icmp slt i32 %47, %0
  %52 = or i1 %51, %50
  %53 = icmp slt i32 %47, %45
  %54 = or i1 %53, %52
  %55 = select i1 %54, i32 %44, i32 4
  %56 = select i1 %54, i32 %45, i32 %47
  %57 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %1, i64 0, i32 0, i64 5
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %2, i64 0, i32 0, i64 5
  %60 = load i8, i8* %59, align 1, !range !2
  %61 = icmp ne i8 %60, 0
  %62 = icmp slt i32 %58, %0
  %63 = or i1 %62, %61
  %64 = icmp slt i32 %58, %56
  %65 = or i1 %64, %63
  %66 = select i1 %65, i32 %55, i32 5
  %67 = select i1 %65, i32 %56, i32 %58
  %68 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %1, i64 0, i32 0, i64 6
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %2, i64 0, i32 0, i64 6
  %71 = load i8, i8* %70, align 1, !range !2
  %72 = icmp ne i8 %71, 0
  %73 = icmp slt i32 %69, %0
  %74 = or i1 %73, %72
  %75 = icmp slt i32 %69, %67
  %76 = or i1 %75, %74
  %77 = select i1 %76, i32 %66, i32 6
  %78 = select i1 %76, i32 %67, i32 %69
  %79 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %1, i64 0, i32 0, i64 7
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %2, i64 0, i32 0, i64 7
  %82 = load i8, i8* %81, align 1, !range !2
  %83 = icmp ne i8 %82, 0
  %84 = icmp slt i32 %80, %0
  %85 = or i1 %84, %83
  %86 = icmp slt i32 %80, %78
  %87 = or i1 %86, %85
  %88 = select i1 %87, i32 %77, i32 7
  ret i32 %88
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN7libgav19ObuParser29FindEarliestBackwardReferenceEiRKNSt3__15arrayIiLm8EEERKNS2_IbLm8EEE(i32, %"struct.std::__1::array.46"* nocapture readonly dereferenceable(32), %"struct.std::__1::array.23"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %1, i64 0, i32 0, i64 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %2, i64 0, i32 0, i64 0
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  %9 = icmp sge i32 %5, %0
  %10 = and i1 %9, %8
  %11 = icmp ne i32 %5, 2147483647
  %12 = and i1 %11, %10
  %13 = xor i1 %12, true
  %14 = sext i1 %13 to i32
  %15 = select i1 %12, i32 %5, i32 2147483647
  %16 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %1, i64 0, i32 0, i64 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %2, i64 0, i32 0, i64 1
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  %21 = icmp sge i32 %17, %0
  %22 = and i1 %21, %20
  %23 = icmp slt i32 %17, %15
  %24 = and i1 %23, %22
  %25 = select i1 %24, i32 1, i32 %14
  %26 = select i1 %24, i32 %17, i32 %15
  %27 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %1, i64 0, i32 0, i64 2
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %2, i64 0, i32 0, i64 2
  %30 = load i8, i8* %29, align 1, !range !2
  %31 = icmp eq i8 %30, 0
  %32 = icmp sge i32 %28, %0
  %33 = and i1 %32, %31
  %34 = icmp slt i32 %28, %26
  %35 = and i1 %34, %33
  %36 = select i1 %35, i32 2, i32 %25
  %37 = select i1 %35, i32 %28, i32 %26
  %38 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %1, i64 0, i32 0, i64 3
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %2, i64 0, i32 0, i64 3
  %41 = load i8, i8* %40, align 1, !range !2
  %42 = icmp eq i8 %41, 0
  %43 = icmp sge i32 %39, %0
  %44 = and i1 %43, %42
  %45 = icmp slt i32 %39, %37
  %46 = and i1 %45, %44
  %47 = select i1 %46, i32 3, i32 %36
  %48 = select i1 %46, i32 %39, i32 %37
  %49 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %1, i64 0, i32 0, i64 4
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %2, i64 0, i32 0, i64 4
  %52 = load i8, i8* %51, align 1, !range !2
  %53 = icmp eq i8 %52, 0
  %54 = icmp sge i32 %50, %0
  %55 = and i1 %54, %53
  %56 = icmp slt i32 %50, %48
  %57 = and i1 %56, %55
  %58 = select i1 %57, i32 4, i32 %47
  %59 = select i1 %57, i32 %50, i32 %48
  %60 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %1, i64 0, i32 0, i64 5
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %2, i64 0, i32 0, i64 5
  %63 = load i8, i8* %62, align 1, !range !2
  %64 = icmp eq i8 %63, 0
  %65 = icmp sge i32 %61, %0
  %66 = and i1 %65, %64
  %67 = icmp slt i32 %61, %59
  %68 = and i1 %67, %66
  %69 = select i1 %68, i32 5, i32 %58
  %70 = select i1 %68, i32 %61, i32 %59
  %71 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %1, i64 0, i32 0, i64 6
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %2, i64 0, i32 0, i64 6
  %74 = load i8, i8* %73, align 1, !range !2
  %75 = icmp eq i8 %74, 0
  %76 = icmp sge i32 %72, %0
  %77 = and i1 %76, %75
  %78 = icmp slt i32 %72, %70
  %79 = and i1 %78, %77
  %80 = select i1 %79, i32 6, i32 %69
  %81 = select i1 %79, i32 %72, i32 %70
  %82 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %1, i64 0, i32 0, i64 7
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %2, i64 0, i32 0, i64 7
  %85 = load i8, i8* %84, align 1, !range !2
  %86 = icmp eq i8 %85, 0
  %87 = icmp sge i32 %83, %0
  %88 = and i1 %87, %86
  %89 = icmp slt i32 %83, %81
  %90 = and i1 %89, %88
  %91 = select i1 %90, i32 7, i32 %80
  ret i32 %91
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN7libgav19ObuParser26FindLatestForwardReferenceEiRKNSt3__15arrayIiLm8EEERKNS2_IbLm8EEE(i32, %"struct.std::__1::array.46"* nocapture readonly dereferenceable(32), %"struct.std::__1::array.23"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %1, i64 0, i32 0, i64 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %2, i64 0, i32 0, i64 0
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp ne i8 %7, 0
  %9 = icmp sge i32 %5, %0
  %10 = or i1 %9, %8
  %11 = sext i1 %10 to i32
  %12 = select i1 %10, i32 -2147483648, i32 %5
  %13 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %1, i64 0, i32 0, i64 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %2, i64 0, i32 0, i64 1
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = icmp ne i8 %16, 0
  %18 = icmp sge i32 %14, %0
  %19 = or i1 %18, %17
  %20 = icmp slt i32 %14, %12
  %21 = or i1 %20, %19
  %22 = select i1 %21, i32 %11, i32 1
  %23 = select i1 %21, i32 %12, i32 %14
  %24 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %1, i64 0, i32 0, i64 2
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %2, i64 0, i32 0, i64 2
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp ne i8 %27, 0
  %29 = icmp sge i32 %25, %0
  %30 = or i1 %29, %28
  %31 = icmp slt i32 %25, %23
  %32 = or i1 %31, %30
  %33 = select i1 %32, i32 %22, i32 2
  %34 = select i1 %32, i32 %23, i32 %25
  %35 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %1, i64 0, i32 0, i64 3
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %2, i64 0, i32 0, i64 3
  %38 = load i8, i8* %37, align 1, !range !2
  %39 = icmp ne i8 %38, 0
  %40 = icmp sge i32 %36, %0
  %41 = or i1 %40, %39
  %42 = icmp slt i32 %36, %34
  %43 = or i1 %42, %41
  %44 = select i1 %43, i32 %33, i32 3
  %45 = select i1 %43, i32 %34, i32 %36
  %46 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %1, i64 0, i32 0, i64 4
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %2, i64 0, i32 0, i64 4
  %49 = load i8, i8* %48, align 1, !range !2
  %50 = icmp ne i8 %49, 0
  %51 = icmp sge i32 %47, %0
  %52 = or i1 %51, %50
  %53 = icmp slt i32 %47, %45
  %54 = or i1 %53, %52
  %55 = select i1 %54, i32 %44, i32 4
  %56 = select i1 %54, i32 %45, i32 %47
  %57 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %1, i64 0, i32 0, i64 5
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %2, i64 0, i32 0, i64 5
  %60 = load i8, i8* %59, align 1, !range !2
  %61 = icmp ne i8 %60, 0
  %62 = icmp sge i32 %58, %0
  %63 = or i1 %62, %61
  %64 = icmp slt i32 %58, %56
  %65 = or i1 %64, %63
  %66 = select i1 %65, i32 %55, i32 5
  %67 = select i1 %65, i32 %56, i32 %58
  %68 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %1, i64 0, i32 0, i64 6
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %2, i64 0, i32 0, i64 6
  %71 = load i8, i8* %70, align 1, !range !2
  %72 = icmp ne i8 %71, 0
  %73 = icmp sge i32 %69, %0
  %74 = or i1 %73, %72
  %75 = icmp slt i32 %69, %67
  %76 = or i1 %75, %74
  %77 = select i1 %76, i32 %66, i32 6
  %78 = select i1 %76, i32 %67, i32 %69
  %79 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %1, i64 0, i32 0, i64 7
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %2, i64 0, i32 0, i64 7
  %82 = load i8, i8* %81, align 1, !range !2
  %83 = icmp ne i8 %82, 0
  %84 = icmp sge i32 %80, %0
  %85 = or i1 %84, %83
  %86 = icmp slt i32 %80, %78
  %87 = or i1 %86, %85
  %88 = select i1 %87, i32 %77, i32 7
  ret i32 %88
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN7libgav19ObuParser36FindReferenceWithSmallestOutputOrderERKNSt3__15arrayIiLm8EEE(%"struct.std::__1::array.46"* nocapture readonly dereferenceable(32)) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %0, i64 0, i32 0, i64 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 2147483647
  %5 = sext i1 %4 to i32
  %6 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %0, i64 0, i32 0, i64 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %7, %3
  %9 = select i1 %8, i32 1, i32 %5
  %10 = select i1 %8, i32 %7, i32 %3
  %11 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %0, i64 0, i32 0, i64 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, %10
  %14 = select i1 %13, i32 2, i32 %9
  %15 = select i1 %13, i32 %12, i32 %10
  %16 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %0, i64 0, i32 0, i64 3
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %17, %15
  %19 = select i1 %18, i32 3, i32 %14
  %20 = select i1 %18, i32 %17, i32 %15
  %21 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %0, i64 0, i32 0, i64 4
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, %20
  %24 = select i1 %23, i32 4, i32 %19
  %25 = select i1 %23, i32 %22, i32 %20
  %26 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %0, i64 0, i32 0, i64 5
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %27, %25
  %29 = select i1 %28, i32 5, i32 %24
  %30 = select i1 %28, i32 %27, i32 %25
  %31 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %0, i64 0, i32 0, i64 6
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, %30
  %34 = select i1 %33, i32 6, i32 %29
  %35 = select i1 %33, i32 %32, i32 %30
  %36 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %0, i64 0, i32 0, i64 7
  %37 = load i32, i32* %36, align 4
  %38 = icmp slt i32 %37, %35
  %39 = select i1 %38, i32 7, i32 %34
  ret i32 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser18SetFrameReferencesEaa(%"class.libgav1::ObuParser"*, i8 signext, i8 signext) local_unnamed_addr #1 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"struct.std::__1::array.23"*
  %6 = alloca %"struct.std::__1::array.46", align 4
  %7 = getelementptr %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 0
  %8 = getelementptr %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %8, i8 -1, i64 6, i1 false)
  store i8 %1, i8* %7, align 1
  %9 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 3
  store i8 %2, i8* %9, align 1
  %10 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %5, i64 0, i32 0, i64 1
  %12 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %5, i64 0, i32 0, i64 2
  %13 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %5, i64 0, i32 0, i64 3
  %14 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %5, i64 0, i32 0, i64 4
  %15 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %5, i64 0, i32 0, i64 5
  %16 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %5, i64 0, i32 0, i64 6
  %17 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %5, i64 0, i32 0, i64 7
  %18 = sext i8 %1 to i64
  %19 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %5, i64 0, i32 0, i64 %18
  store i64 0, i64* %4, align 8
  store i8 1, i8* %19, align 1
  %20 = sext i8 %2 to i64
  %21 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %5, i64 0, i32 0, i64 %20
  store i8 1, i8* %21, align 1
  %22 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 22
  %23 = load i8, i8* %22, align 1
  %24 = sext i8 %23 to i32
  %25 = add nsw i32 %24, -1
  %26 = shl i32 1, %25
  %27 = bitcast %"struct.std::__1::array.46"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %6, i64 0, i32 0, i64 0
  %29 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %6, i64 0, i32 0, i64 1
  %30 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %6, i64 0, i32 0, i64 2
  %31 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %6, i64 0, i32 0, i64 3
  %32 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %6, i64 0, i32 0, i64 4
  %33 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %6, i64 0, i32 0, i64 5
  %34 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %6, i64 0, i32 0, i64 6
  %35 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %6, i64 0, i32 0, i64 7
  %36 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 14
  %37 = load %"struct.libgav1::DecoderState"*, %"struct.libgav1::DecoderState"** %36, align 8
  %38 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 26
  %39 = load i8, i8* %38, align 2
  %40 = zext i8 %39 to i32
  %41 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 23
  %42 = load i8, i8* %41, align 8
  %43 = zext i8 %42 to i32
  %44 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %37, i64 0, i32 2, i32 0, i64 0
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = sub nsw i32 %46, %40
  %48 = shl i32 %47, %43
  %49 = ashr i32 %48, %43
  %50 = add nsw i32 %49, %26
  store i32 %50, i32* %28, align 4
  %51 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %37, i64 0, i32 2, i32 0, i64 1
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = sub nsw i32 %53, %40
  %55 = shl i32 %54, %43
  %56 = ashr i32 %55, %43
  %57 = add nsw i32 %56, %26
  store i32 %57, i32* %29, align 4
  %58 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %37, i64 0, i32 2, i32 0, i64 2
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = sub nsw i32 %60, %40
  %62 = shl i32 %61, %43
  %63 = ashr i32 %62, %43
  %64 = add nsw i32 %63, %26
  store i32 %64, i32* %30, align 4
  %65 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %37, i64 0, i32 2, i32 0, i64 3
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = sub nsw i32 %67, %40
  %69 = shl i32 %68, %43
  %70 = ashr i32 %69, %43
  %71 = add nsw i32 %70, %26
  store i32 %71, i32* %31, align 4
  %72 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %37, i64 0, i32 2, i32 0, i64 4
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = sub nsw i32 %74, %40
  %76 = shl i32 %75, %43
  %77 = ashr i32 %76, %43
  %78 = add nsw i32 %77, %26
  store i32 %78, i32* %32, align 4
  %79 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %37, i64 0, i32 2, i32 0, i64 5
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = sub nsw i32 %81, %40
  %83 = shl i32 %82, %43
  %84 = ashr i32 %83, %43
  %85 = add nsw i32 %84, %26
  store i32 %85, i32* %33, align 4
  %86 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %37, i64 0, i32 2, i32 0, i64 6
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = sub nsw i32 %88, %40
  %90 = shl i32 %89, %43
  %91 = ashr i32 %90, %43
  %92 = add nsw i32 %91, %26
  store i32 %92, i32* %34, align 4
  %93 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %37, i64 0, i32 2, i32 0, i64 7
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = sub nsw i32 %95, %40
  %97 = shl i32 %96, %43
  %98 = ashr i32 %97, %43
  %99 = add nsw i32 %98, %26
  store i32 %99, i32* %35, align 4
  %100 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %6, i64 0, i32 0, i64 %18
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %"struct.std::__1::array.46", %"struct.std::__1::array.46"* %6, i64 0, i32 0, i64 %20
  %103 = icmp slt i32 %101, %26
  %104 = load i32, i32* %102, align 4
  %105 = icmp slt i32 %104, %26
  %106 = and i1 %103, %105
  br i1 %106, label %107, label %425

107:                                              ; preds = %3
  %108 = load i8, i8* %10, align 8, !range !2
  %109 = icmp ne i8 %108, 0
  %110 = icmp slt i32 %49, 0
  %111 = or i1 %110, %109
  %112 = sext i1 %111 to i32
  %113 = select i1 %111, i32 -2147483648, i32 %50
  %114 = load i8, i8* %11, align 1, !range !2
  %115 = icmp ne i8 %114, 0
  %116 = icmp slt i32 %56, 0
  %117 = or i1 %116, %115
  %118 = icmp slt i32 %57, %113
  %119 = or i1 %118, %117
  %120 = select i1 %119, i32 %112, i32 1
  %121 = select i1 %119, i32 %113, i32 %57
  %122 = load i8, i8* %12, align 2, !range !2
  %123 = icmp ne i8 %122, 0
  %124 = icmp slt i32 %63, 0
  %125 = or i1 %124, %123
  %126 = icmp slt i32 %64, %121
  %127 = or i1 %125, %126
  %128 = select i1 %127, i32 %120, i32 2
  %129 = select i1 %127, i32 %121, i32 %64
  %130 = load i8, i8* %13, align 1, !range !2
  %131 = icmp ne i8 %130, 0
  %132 = icmp slt i32 %70, 0
  %133 = or i1 %132, %131
  %134 = icmp slt i32 %71, %129
  %135 = or i1 %133, %134
  %136 = select i1 %135, i32 %128, i32 3
  %137 = select i1 %135, i32 %129, i32 %71
  %138 = load i8, i8* %14, align 4, !range !2
  %139 = icmp ne i8 %138, 0
  %140 = icmp slt i32 %77, 0
  %141 = or i1 %140, %139
  %142 = icmp slt i32 %78, %137
  %143 = or i1 %141, %142
  %144 = select i1 %143, i32 %136, i32 4
  %145 = select i1 %143, i32 %137, i32 %78
  %146 = load i8, i8* %15, align 1, !range !2
  %147 = icmp ne i8 %146, 0
  %148 = icmp slt i32 %84, 0
  %149 = or i1 %148, %147
  %150 = icmp slt i32 %85, %145
  %151 = or i1 %149, %150
  %152 = select i1 %151, i32 %144, i32 5
  %153 = select i1 %151, i32 %145, i32 %85
  %154 = load i8, i8* %16, align 2, !range !2
  %155 = icmp ne i8 %154, 0
  %156 = icmp slt i32 %91, 0
  %157 = or i1 %156, %155
  %158 = icmp slt i32 %92, %153
  %159 = or i1 %157, %158
  %160 = select i1 %159, i32 %152, i32 6
  %161 = select i1 %159, i32 %153, i32 %92
  %162 = load i8, i8* %17, align 1, !range !2
  %163 = icmp ne i8 %162, 0
  %164 = icmp slt i32 %98, 0
  %165 = or i1 %164, %163
  %166 = icmp slt i32 %99, %161
  %167 = or i1 %165, %166
  %168 = select i1 %167, i32 %160, i32 7
  %169 = icmp sgt i32 %168, -1
  br i1 %169, label %170, label %183

170:                                              ; preds = %107
  %171 = trunc i32 %168 to i8
  %172 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 6
  store i8 %171, i8* %172, align 1
  %173 = sext i32 %168 to i64
  %174 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %5, i64 0, i32 0, i64 %173
  store i8 1, i8* %174, align 1
  %175 = load i8, i8* %10, align 8, !range !2
  %176 = load i8, i8* %11, align 1, !range !2
  %177 = load i8, i8* %12, align 2, !range !2
  %178 = load i8, i8* %13, align 1, !range !2
  %179 = load i8, i8* %14, align 4, !range !2
  %180 = load i8, i8* %15, align 1, !range !2
  %181 = load i8, i8* %16, align 2, !range !2
  %182 = load i8, i8* %17, align 1, !range !2
  br label %183

183:                                              ; preds = %170, %107
  %184 = phi i8 [ %182, %170 ], [ %162, %107 ]
  %185 = phi i8 [ %181, %170 ], [ %154, %107 ]
  %186 = phi i8 [ %180, %170 ], [ %146, %107 ]
  %187 = phi i8 [ %179, %170 ], [ %138, %107 ]
  %188 = phi i8 [ %178, %170 ], [ %130, %107 ]
  %189 = phi i8 [ %177, %170 ], [ %122, %107 ]
  %190 = phi i8 [ %176, %170 ], [ %114, %107 ]
  %191 = phi i8 [ %175, %170 ], [ %108, %107 ]
  %192 = icmp eq i8 %191, 0
  %193 = icmp sgt i32 %49, -1
  %194 = and i1 %193, %192
  %195 = icmp ne i32 %50, 2147483647
  %196 = and i1 %195, %194
  %197 = xor i1 %196, true
  %198 = sext i1 %197 to i32
  %199 = select i1 %196, i32 %50, i32 2147483647
  %200 = icmp eq i8 %190, 0
  %201 = icmp sgt i32 %56, -1
  %202 = and i1 %201, %200
  %203 = icmp slt i32 %57, %199
  %204 = and i1 %202, %203
  %205 = select i1 %204, i32 1, i32 %198
  %206 = select i1 %204, i32 %57, i32 %199
  %207 = icmp eq i8 %189, 0
  %208 = icmp sgt i32 %63, -1
  %209 = and i1 %208, %207
  %210 = icmp slt i32 %64, %206
  %211 = and i1 %209, %210
  %212 = select i1 %211, i32 2, i32 %205
  %213 = select i1 %211, i32 %64, i32 %206
  %214 = icmp eq i8 %188, 0
  %215 = icmp sgt i32 %70, -1
  %216 = and i1 %215, %214
  %217 = icmp slt i32 %71, %213
  %218 = and i1 %216, %217
  %219 = select i1 %218, i32 3, i32 %212
  %220 = select i1 %218, i32 %71, i32 %213
  %221 = icmp eq i8 %187, 0
  %222 = icmp sgt i32 %77, -1
  %223 = and i1 %222, %221
  %224 = icmp slt i32 %78, %220
  %225 = and i1 %223, %224
  %226 = select i1 %225, i32 4, i32 %219
  %227 = select i1 %225, i32 %78, i32 %220
  %228 = icmp eq i8 %186, 0
  %229 = icmp sgt i32 %84, -1
  %230 = and i1 %229, %228
  %231 = icmp slt i32 %85, %227
  %232 = and i1 %230, %231
  %233 = select i1 %232, i32 5, i32 %226
  %234 = select i1 %232, i32 %85, i32 %227
  %235 = icmp eq i8 %185, 0
  %236 = icmp sgt i32 %91, -1
  %237 = and i1 %236, %235
  %238 = icmp slt i32 %92, %234
  %239 = and i1 %237, %238
  %240 = select i1 %239, i32 6, i32 %233
  %241 = select i1 %239, i32 %92, i32 %234
  %242 = icmp eq i8 %184, 0
  %243 = icmp sgt i32 %98, -1
  %244 = and i1 %243, %242
  %245 = icmp slt i32 %99, %241
  %246 = and i1 %244, %245
  %247 = select i1 %246, i32 7, i32 %240
  %248 = icmp sgt i32 %247, -1
  br i1 %248, label %249, label %262

249:                                              ; preds = %183
  %250 = trunc i32 %247 to i8
  %251 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 4
  store i8 %250, i8* %251, align 1
  %252 = sext i32 %247 to i64
  %253 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %5, i64 0, i32 0, i64 %252
  store i8 1, i8* %253, align 1
  %254 = load i8, i8* %10, align 8, !range !2
  %255 = load i8, i8* %11, align 1, !range !2
  %256 = load i8, i8* %12, align 2, !range !2
  %257 = load i8, i8* %13, align 1, !range !2
  %258 = load i8, i8* %14, align 4, !range !2
  %259 = load i8, i8* %15, align 1, !range !2
  %260 = load i8, i8* %16, align 2, !range !2
  %261 = load i8, i8* %17, align 1, !range !2
  br label %262

262:                                              ; preds = %249, %183
  %263 = phi i8 [ %261, %249 ], [ %184, %183 ]
  %264 = phi i8 [ %260, %249 ], [ %185, %183 ]
  %265 = phi i8 [ %259, %249 ], [ %186, %183 ]
  %266 = phi i8 [ %258, %249 ], [ %187, %183 ]
  %267 = phi i8 [ %257, %249 ], [ %188, %183 ]
  %268 = phi i8 [ %256, %249 ], [ %189, %183 ]
  %269 = phi i8 [ %255, %249 ], [ %190, %183 ]
  %270 = phi i8 [ %254, %249 ], [ %191, %183 ]
  %271 = icmp eq i8 %270, 0
  %272 = and i1 %193, %271
  %273 = and i1 %195, %272
  %274 = xor i1 %273, true
  %275 = sext i1 %274 to i32
  %276 = select i1 %273, i32 %50, i32 2147483647
  %277 = icmp eq i8 %269, 0
  %278 = and i1 %201, %277
  %279 = icmp slt i32 %57, %276
  %280 = and i1 %278, %279
  %281 = select i1 %280, i32 1, i32 %275
  %282 = select i1 %280, i32 %57, i32 %276
  %283 = icmp eq i8 %268, 0
  %284 = and i1 %208, %283
  %285 = icmp slt i32 %64, %282
  %286 = and i1 %284, %285
  %287 = select i1 %286, i32 2, i32 %281
  %288 = select i1 %286, i32 %64, i32 %282
  %289 = icmp eq i8 %267, 0
  %290 = and i1 %215, %289
  %291 = icmp slt i32 %71, %288
  %292 = and i1 %290, %291
  %293 = select i1 %292, i32 3, i32 %287
  %294 = select i1 %292, i32 %71, i32 %288
  %295 = icmp eq i8 %266, 0
  %296 = and i1 %222, %295
  %297 = icmp slt i32 %78, %294
  %298 = and i1 %296, %297
  %299 = select i1 %298, i32 4, i32 %293
  %300 = select i1 %298, i32 %78, i32 %294
  %301 = icmp eq i8 %265, 0
  %302 = and i1 %229, %301
  %303 = icmp slt i32 %85, %300
  %304 = and i1 %302, %303
  %305 = select i1 %304, i32 5, i32 %299
  %306 = select i1 %304, i32 %85, i32 %300
  %307 = icmp eq i8 %264, 0
  %308 = and i1 %236, %307
  %309 = icmp slt i32 %92, %306
  %310 = and i1 %308, %309
  %311 = select i1 %310, i32 6, i32 %305
  %312 = select i1 %310, i32 %92, i32 %306
  %313 = icmp eq i8 %263, 0
  %314 = and i1 %243, %313
  %315 = icmp slt i32 %99, %312
  %316 = and i1 %314, %315
  %317 = select i1 %316, i32 7, i32 %311
  %318 = icmp sgt i32 %317, -1
  br i1 %318, label %320, label %319

319:                                              ; preds = %320, %262
  br label %350

320:                                              ; preds = %262
  %321 = trunc i32 %317 to i8
  %322 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 5
  store i8 %321, i8* %322, align 1
  %323 = sext i32 %317 to i64
  %324 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %5, i64 0, i32 0, i64 %323
  store i8 1, i8* %324, align 1
  br label %319

325:                                              ; preds = %417
  %326 = icmp eq i32 %50, 2147483647
  %327 = sext i1 %326 to i8
  %328 = icmp slt i32 %57, %50
  %329 = select i1 %328, i8 1, i8 %327
  %330 = select i1 %328, i32 %57, i32 %50
  %331 = icmp slt i32 %64, %330
  %332 = select i1 %331, i8 2, i8 %329
  %333 = select i1 %331, i32 %64, i32 %330
  %334 = icmp slt i32 %71, %333
  %335 = select i1 %334, i8 3, i8 %332
  %336 = select i1 %334, i32 %71, i32 %333
  %337 = icmp slt i32 %78, %336
  %338 = select i1 %337, i8 4, i8 %335
  %339 = select i1 %337, i32 %78, i32 %336
  %340 = icmp slt i32 %85, %339
  %341 = select i1 %340, i8 5, i8 %338
  %342 = select i1 %340, i32 %85, i32 %339
  %343 = icmp slt i32 %92, %342
  %344 = select i1 %343, i8 6, i8 %341
  %345 = select i1 %343, i32 %92, i32 %342
  %346 = icmp slt i32 %99, %345
  %347 = select i1 %346, i8 7, i8 %344
  %348 = load i8, i8* %7, align 1
  %349 = icmp slt i8 %348, 0
  br i1 %349, label %420, label %421

350:                                              ; preds = %319, %417
  %351 = phi i8* [ %418, %417 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZN7libgav19ObuParser18SetFrameReferencesEaaE13kRefFrameList, i64 0, i64 0), %319 ]
  %352 = load i8, i8* %351, align 1
  %353 = sext i8 %352 to i64
  %354 = add nsw i64 %353, -1
  %355 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 %354
  %356 = load i8, i8* %355, align 1
  %357 = icmp slt i8 %356, 0
  br i1 %357, label %358, label %417

358:                                              ; preds = %350
  %359 = load i8, i8* %10, align 8, !range !2
  %360 = icmp ne i8 %359, 0
  %361 = or i1 %193, %360
  %362 = sext i1 %361 to i32
  %363 = select i1 %361, i32 -2147483648, i32 %50
  %364 = load i8, i8* %11, align 1, !range !2
  %365 = icmp ne i8 %364, 0
  %366 = or i1 %201, %365
  %367 = icmp slt i32 %57, %363
  %368 = or i1 %366, %367
  %369 = select i1 %368, i32 %362, i32 1
  %370 = select i1 %368, i32 %363, i32 %57
  %371 = load i8, i8* %12, align 2, !range !2
  %372 = icmp ne i8 %371, 0
  %373 = or i1 %208, %372
  %374 = icmp slt i32 %64, %370
  %375 = or i1 %373, %374
  %376 = select i1 %375, i32 %369, i32 2
  %377 = select i1 %375, i32 %370, i32 %64
  %378 = load i8, i8* %13, align 1, !range !2
  %379 = icmp ne i8 %378, 0
  %380 = or i1 %215, %379
  %381 = icmp slt i32 %71, %377
  %382 = or i1 %380, %381
  %383 = select i1 %382, i32 %376, i32 3
  %384 = select i1 %382, i32 %377, i32 %71
  %385 = load i8, i8* %14, align 4, !range !2
  %386 = icmp ne i8 %385, 0
  %387 = or i1 %222, %386
  %388 = icmp slt i32 %78, %384
  %389 = or i1 %387, %388
  %390 = select i1 %389, i32 %383, i32 4
  %391 = select i1 %389, i32 %384, i32 %78
  %392 = load i8, i8* %15, align 1, !range !2
  %393 = icmp ne i8 %392, 0
  %394 = or i1 %229, %393
  %395 = icmp slt i32 %85, %391
  %396 = or i1 %394, %395
  %397 = select i1 %396, i32 %390, i32 5
  %398 = select i1 %396, i32 %391, i32 %85
  %399 = load i8, i8* %16, align 2, !range !2
  %400 = icmp ne i8 %399, 0
  %401 = or i1 %236, %400
  %402 = icmp slt i32 %92, %398
  %403 = or i1 %401, %402
  %404 = select i1 %403, i32 %397, i32 6
  %405 = select i1 %403, i32 %398, i32 %92
  %406 = load i8, i8* %17, align 1, !range !2
  %407 = icmp ne i8 %406, 0
  %408 = or i1 %243, %407
  %409 = icmp slt i32 %99, %405
  %410 = or i1 %408, %409
  %411 = select i1 %410, i32 %404, i32 7
  %412 = icmp sgt i32 %411, -1
  br i1 %412, label %413, label %417

413:                                              ; preds = %358
  %414 = trunc i32 %411 to i8
  store i8 %414, i8* %355, align 1
  %415 = sext i32 %411 to i64
  %416 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %5, i64 0, i32 0, i64 %415
  store i8 1, i8* %416, align 1
  br label %417

417:                                              ; preds = %358, %413, %350
  %418 = getelementptr inbounds i8, i8* %351, i64 1
  %419 = icmp eq i8* %418, getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZN7libgav19ObuParser18SetFrameReferencesEaaE13kRefFrameList, i64 1, i64 0)
  br i1 %419, label %325, label %350

420:                                              ; preds = %325
  store i8 %347, i8* %7, align 1
  br label %421

421:                                              ; preds = %420, %325
  %422 = getelementptr %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 1
  %423 = load i8, i8* %422, align 1
  %424 = icmp slt i8 %423, 0
  br i1 %424, label %427, label %428

425:                                              ; preds = %448, %452, %3
  %426 = phi i1 [ false, %3 ], [ true, %452 ], [ true, %448 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  ret i1 %426

427:                                              ; preds = %421
  store i8 %347, i8* %422, align 1
  br label %428

428:                                              ; preds = %427, %421
  %429 = getelementptr %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 2
  %430 = load i8, i8* %429, align 1
  %431 = icmp slt i8 %430, 0
  br i1 %431, label %432, label %433

432:                                              ; preds = %428
  store i8 %347, i8* %429, align 1
  br label %433

433:                                              ; preds = %432, %428
  %434 = getelementptr %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 3
  %435 = load i8, i8* %434, align 1
  %436 = icmp slt i8 %435, 0
  br i1 %436, label %437, label %438

437:                                              ; preds = %433
  store i8 %347, i8* %434, align 1
  br label %438

438:                                              ; preds = %437, %433
  %439 = getelementptr %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 4
  %440 = load i8, i8* %439, align 1
  %441 = icmp slt i8 %440, 0
  br i1 %441, label %442, label %443

442:                                              ; preds = %438
  store i8 %347, i8* %439, align 1
  br label %443

443:                                              ; preds = %442, %438
  %444 = getelementptr %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 5
  %445 = load i8, i8* %444, align 1
  %446 = icmp slt i8 %445, 0
  br i1 %446, label %447, label %448

447:                                              ; preds = %443
  store i8 %347, i8* %444, align 1
  br label %448

448:                                              ; preds = %447, %443
  %449 = getelementptr %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 6
  %450 = load i8, i8* %449, align 1
  %451 = icmp slt i8 %450, 0
  br i1 %451, label %452, label %425

452:                                              ; preds = %448
  store i8 %347, i8* %449, align 1
  br label %425
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser25ParseLoopFilterParametersEv(%"class.libgav1::ObuParser"*) local_unnamed_addr #1 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 42
  %5 = load i8, i8* %4, align 2, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 32
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %7, %1
  %12 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 4, i32 0, i64 0
  store i8 1, i8* %12, align 1
  %13 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 4, i32 0, i64 4
  store i8 -1, i8* %13, align 1
  %14 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 4, i32 0, i64 7
  store i8 -1, i8* %14, align 1
  %15 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 4, i32 0, i64 6
  store i8 -1, i8* %15, align 1
  br label %160

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 27
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 7
  br i1 %19, label %20, label %25

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 4, i32 0, i64 0
  store i8 1, i8* %21, align 1
  %22 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 4, i32 0, i64 4
  store i8 -1, i8* %22, align 1
  %23 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 4, i32 0, i64 7
  store i8 -1, i8* %23, align 1
  %24 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 4, i32 0, i64 6
  store i8 -1, i8* %24, align 1
  br label %44

25:                                               ; preds = %16
  %26 = sext i8 %18 to i64
  %27 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 14
  %30 = load %"struct.libgav1::DecoderState"*, %"struct.libgav1::DecoderState"** %29, align 8
  %31 = sext i8 %28 to i64
  %32 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %30, i64 0, i32 5, i32 0, i64 %31, i32 0
  %33 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %32, align 8
  %34 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %33, i64 0, i32 28
  %35 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 4, i32 0, i64 0
  %36 = bitcast %"struct.std::__1::array.2"* %34 to i64*
  %37 = bitcast i8* %35 to i64*
  %38 = load i64, i64* %36, align 1
  store i64 %38, i64* %37, align 1
  %39 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %33, i64 0, i32 29
  %40 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 5, i32 0, i64 0
  %41 = bitcast %"struct.std::__1::array.3"* %39 to i16*
  %42 = bitcast i8* %40 to i16*
  %43 = load i16, i16* %41, align 1
  store i16 %43, i16* %42, align 1
  br label %44

44:                                               ; preds = %25, %20
  %45 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %45, align 8
  %47 = bitcast %"class.libgav1::RawBitReader"* %46 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %48 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %47, align 8
  %49 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %48, i64 3
  %50 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %49, align 8
  %51 = tail call i64 %50(%"class.libgav1::RawBitReader"* %46, i32 6) #11
  %52 = icmp eq i64 %51, -1
  br i1 %52, label %160, label %53

53:                                               ; preds = %44
  %54 = trunc i64 %51 to i8
  %55 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 0, i32 0, i64 0
  store i8 %54, i8* %55, align 1
  %56 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %45, align 8
  %57 = bitcast %"class.libgav1::RawBitReader"* %56 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %58 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %57, align 8
  %59 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %58, i64 3
  %60 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %59, align 8
  %61 = tail call i64 %60(%"class.libgav1::RawBitReader"* %56, i32 6) #11
  %62 = icmp eq i64 %61, -1
  br i1 %62, label %160, label %271

63:                                               ; preds = %271
  %64 = load i8, i8* %55, align 1
  %65 = or i8 %64, %272
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %85, label %67

67:                                               ; preds = %63
  %68 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %45, align 8
  %69 = bitcast %"class.libgav1::RawBitReader"* %68 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %70 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %69, align 8
  %71 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %70, i64 3
  %72 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %71, align 8
  %73 = tail call i64 %72(%"class.libgav1::RawBitReader"* %68, i32 6) #11
  %74 = icmp eq i64 %73, -1
  br i1 %74, label %160, label %75

75:                                               ; preds = %67
  %76 = trunc i64 %73 to i8
  %77 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 0, i32 0, i64 2
  store i8 %76, i8* %77, align 1
  %78 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %45, align 8
  %79 = bitcast %"class.libgav1::RawBitReader"* %78 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %80 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %79, align 8
  %81 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %80, i64 3
  %82 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %81, align 8
  %83 = tail call i64 %82(%"class.libgav1::RawBitReader"* %78, i32 6) #11
  %84 = icmp eq i64 %83, -1
  br i1 %84, label %160, label %268

85:                                               ; preds = %63, %268, %271
  %86 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %45, align 8
  %87 = bitcast %"class.libgav1::RawBitReader"* %86 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %88 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %87, align 8
  %89 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %88, i64 3
  %90 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %89, align 8
  %91 = tail call i64 %90(%"class.libgav1::RawBitReader"* %86, i32 3) #11
  %92 = icmp eq i64 %91, -1
  br i1 %92, label %160, label %93

93:                                               ; preds = %85
  %94 = trunc i64 %91 to i8
  %95 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 1
  store i8 %94, i8* %95, align 1
  %96 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %45, align 8
  %97 = bitcast %"class.libgav1::RawBitReader"* %96 to i32 (%"class.libgav1::RawBitReader"*)***
  %98 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %97, align 8
  %99 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %98, i64 2
  %100 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %99, align 8
  %101 = tail call i32 %100(%"class.libgav1::RawBitReader"* %96) #11
  %102 = icmp eq i32 %101, -1
  br i1 %102, label %160, label %103

103:                                              ; preds = %93
  %104 = icmp ne i32 %101, 0
  %105 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 2
  %106 = zext i1 %104 to i8
  store i8 %106, i8* %105, align 1
  br i1 %104, label %107, label %158

107:                                              ; preds = %103
  %108 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %45, align 8
  %109 = bitcast %"class.libgav1::RawBitReader"* %108 to i32 (%"class.libgav1::RawBitReader"*)***
  %110 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %109, align 8
  %111 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %110, i64 2
  %112 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %111, align 8
  %113 = tail call i32 %112(%"class.libgav1::RawBitReader"* %108) #11
  %114 = icmp eq i32 %113, -1
  br i1 %114, label %160, label %115

115:                                              ; preds = %107
  %116 = icmp ne i32 %113, 0
  %117 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 3
  %118 = zext i1 %116 to i8
  store i8 %118, i8* %117, align 1
  br i1 %116, label %119, label %160

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 4, i32 0, i64 0
  %121 = bitcast i32* %2 to i8*
  %122 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %45, align 8
  %123 = bitcast %"class.libgav1::RawBitReader"* %122 to i32 (%"class.libgav1::RawBitReader"*)***
  %124 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %123, align 8
  %125 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %124, i64 2
  %126 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %125, align 8
  %127 = call i32 %126(%"class.libgav1::RawBitReader"* %122) #11
  switch i32 %127, label %128 [
    i32 -1, label %160
    i32 0, label %135
  ]

128:                                              ; preds = %119
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %121) #11
  store i32 -1431655766, i32* %2, align 4
  %129 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %45, align 8
  %130 = call zeroext i1 @_ZN7libgav112RawBitReader24ReadInverseSignedLiteralEiPi(%"class.libgav1::RawBitReader"* %129, i32 6, i32* nonnull %2) #11
  br i1 %130, label %131, label %134

131:                                              ; preds = %128
  %132 = load i32, i32* %2, align 4
  %133 = trunc i32 %132 to i8
  store i8 %133, i8* %120, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121) #11
  br label %135

134:                                              ; preds = %253, %239, %225, %211, %197, %183, %169, %128
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121) #11
  br label %160

135:                                              ; preds = %131, %119
  %136 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 4, i32 0, i64 1
  %137 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %45, align 8
  %138 = bitcast %"class.libgav1::RawBitReader"* %137 to i32 (%"class.libgav1::RawBitReader"*)***
  %139 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %138, align 8
  %140 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %139, i64 2
  %141 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %140, align 8
  %142 = call i32 %141(%"class.libgav1::RawBitReader"* %137) #11
  switch i32 %142, label %169 [
    i32 -1, label %160
    i32 0, label %175
  ]

143:                                              ; preds = %259
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %261) #11
  store i32 -1431655766, i32* %3, align 4
  %144 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %45, align 8
  %145 = call zeroext i1 @_ZN7libgav112RawBitReader24ReadInverseSignedLiteralEiPi(%"class.libgav1::RawBitReader"* %144, i32 6, i32* nonnull %3) #11
  br i1 %145, label %146, label %149

146:                                              ; preds = %143
  %147 = load i32, i32* %3, align 4
  %148 = trunc i32 %147 to i8
  store i8 %148, i8* %260, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %261) #11
  br label %150

149:                                              ; preds = %162, %143
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %261) #11
  br label %160

150:                                              ; preds = %146, %259
  %151 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 5, i32 0, i64 1
  %152 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %45, align 8
  %153 = bitcast %"class.libgav1::RawBitReader"* %152 to i32 (%"class.libgav1::RawBitReader"*)***
  %154 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %153, align 8
  %155 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %154, i64 2
  %156 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %155, align 8
  %157 = call i32 %156(%"class.libgav1::RawBitReader"* %152) #11
  switch i32 %157, label %162 [
    i32 -1, label %160
    i32 0, label %168
  ]

158:                                              ; preds = %103
  %159 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 3
  store i8 0, i8* %159, align 1
  br label %160

160:                                              ; preds = %44, %53, %67, %75, %119, %135, %175, %189, %203, %217, %231, %245, %259, %150, %168, %149, %134, %158, %115, %85, %93, %107, %11
  %161 = phi i1 [ true, %11 ], [ false, %85 ], [ false, %93 ], [ false, %107 ], [ true, %115 ], [ true, %158 ], [ false, %134 ], [ false, %149 ], [ false, %259 ], [ false, %150 ], [ true, %168 ], [ false, %245 ], [ false, %231 ], [ false, %217 ], [ false, %203 ], [ false, %189 ], [ false, %175 ], [ false, %135 ], [ false, %119 ], [ false, %75 ], [ false, %67 ], [ false, %53 ], [ false, %44 ]
  ret i1 %161

162:                                              ; preds = %150
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %261) #11
  store i32 -1431655766, i32* %3, align 4
  %163 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %45, align 8
  %164 = call zeroext i1 @_ZN7libgav112RawBitReader24ReadInverseSignedLiteralEiPi(%"class.libgav1::RawBitReader"* %163, i32 6, i32* nonnull %3) #11
  br i1 %164, label %165, label %149

165:                                              ; preds = %162
  %166 = load i32, i32* %3, align 4
  %167 = trunc i32 %166 to i8
  store i8 %167, i8* %151, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %261) #11
  br label %168

168:                                              ; preds = %165, %150
  br label %160

169:                                              ; preds = %135
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %121) #11
  store i32 -1431655766, i32* %2, align 4
  %170 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %45, align 8
  %171 = call zeroext i1 @_ZN7libgav112RawBitReader24ReadInverseSignedLiteralEiPi(%"class.libgav1::RawBitReader"* %170, i32 6, i32* nonnull %2) #11
  br i1 %171, label %172, label %134

172:                                              ; preds = %169
  %173 = load i32, i32* %2, align 4
  %174 = trunc i32 %173 to i8
  store i8 %174, i8* %136, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121) #11
  br label %175

175:                                              ; preds = %172, %135
  %176 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 4, i32 0, i64 2
  %177 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %45, align 8
  %178 = bitcast %"class.libgav1::RawBitReader"* %177 to i32 (%"class.libgav1::RawBitReader"*)***
  %179 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %178, align 8
  %180 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %179, i64 2
  %181 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %180, align 8
  %182 = call i32 %181(%"class.libgav1::RawBitReader"* %177) #11
  switch i32 %182, label %183 [
    i32 -1, label %160
    i32 0, label %189
  ]

183:                                              ; preds = %175
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %121) #11
  store i32 -1431655766, i32* %2, align 4
  %184 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %45, align 8
  %185 = call zeroext i1 @_ZN7libgav112RawBitReader24ReadInverseSignedLiteralEiPi(%"class.libgav1::RawBitReader"* %184, i32 6, i32* nonnull %2) #11
  br i1 %185, label %186, label %134

186:                                              ; preds = %183
  %187 = load i32, i32* %2, align 4
  %188 = trunc i32 %187 to i8
  store i8 %188, i8* %176, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121) #11
  br label %189

189:                                              ; preds = %186, %175
  %190 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 4, i32 0, i64 3
  %191 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %45, align 8
  %192 = bitcast %"class.libgav1::RawBitReader"* %191 to i32 (%"class.libgav1::RawBitReader"*)***
  %193 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %192, align 8
  %194 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %193, i64 2
  %195 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %194, align 8
  %196 = call i32 %195(%"class.libgav1::RawBitReader"* %191) #11
  switch i32 %196, label %197 [
    i32 -1, label %160
    i32 0, label %203
  ]

197:                                              ; preds = %189
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %121) #11
  store i32 -1431655766, i32* %2, align 4
  %198 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %45, align 8
  %199 = call zeroext i1 @_ZN7libgav112RawBitReader24ReadInverseSignedLiteralEiPi(%"class.libgav1::RawBitReader"* %198, i32 6, i32* nonnull %2) #11
  br i1 %199, label %200, label %134

200:                                              ; preds = %197
  %201 = load i32, i32* %2, align 4
  %202 = trunc i32 %201 to i8
  store i8 %202, i8* %190, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121) #11
  br label %203

203:                                              ; preds = %200, %189
  %204 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 4, i32 0, i64 4
  %205 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %45, align 8
  %206 = bitcast %"class.libgav1::RawBitReader"* %205 to i32 (%"class.libgav1::RawBitReader"*)***
  %207 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %206, align 8
  %208 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %207, i64 2
  %209 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %208, align 8
  %210 = call i32 %209(%"class.libgav1::RawBitReader"* %205) #11
  switch i32 %210, label %211 [
    i32 -1, label %160
    i32 0, label %217
  ]

211:                                              ; preds = %203
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %121) #11
  store i32 -1431655766, i32* %2, align 4
  %212 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %45, align 8
  %213 = call zeroext i1 @_ZN7libgav112RawBitReader24ReadInverseSignedLiteralEiPi(%"class.libgav1::RawBitReader"* %212, i32 6, i32* nonnull %2) #11
  br i1 %213, label %214, label %134

214:                                              ; preds = %211
  %215 = load i32, i32* %2, align 4
  %216 = trunc i32 %215 to i8
  store i8 %216, i8* %204, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121) #11
  br label %217

217:                                              ; preds = %214, %203
  %218 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 4, i32 0, i64 5
  %219 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %45, align 8
  %220 = bitcast %"class.libgav1::RawBitReader"* %219 to i32 (%"class.libgav1::RawBitReader"*)***
  %221 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %220, align 8
  %222 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %221, i64 2
  %223 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %222, align 8
  %224 = call i32 %223(%"class.libgav1::RawBitReader"* %219) #11
  switch i32 %224, label %225 [
    i32 -1, label %160
    i32 0, label %231
  ]

225:                                              ; preds = %217
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %121) #11
  store i32 -1431655766, i32* %2, align 4
  %226 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %45, align 8
  %227 = call zeroext i1 @_ZN7libgav112RawBitReader24ReadInverseSignedLiteralEiPi(%"class.libgav1::RawBitReader"* %226, i32 6, i32* nonnull %2) #11
  br i1 %227, label %228, label %134

228:                                              ; preds = %225
  %229 = load i32, i32* %2, align 4
  %230 = trunc i32 %229 to i8
  store i8 %230, i8* %218, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121) #11
  br label %231

231:                                              ; preds = %228, %217
  %232 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 4, i32 0, i64 6
  %233 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %45, align 8
  %234 = bitcast %"class.libgav1::RawBitReader"* %233 to i32 (%"class.libgav1::RawBitReader"*)***
  %235 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %234, align 8
  %236 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %235, i64 2
  %237 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %236, align 8
  %238 = call i32 %237(%"class.libgav1::RawBitReader"* %233) #11
  switch i32 %238, label %239 [
    i32 -1, label %160
    i32 0, label %245
  ]

239:                                              ; preds = %231
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %121) #11
  store i32 -1431655766, i32* %2, align 4
  %240 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %45, align 8
  %241 = call zeroext i1 @_ZN7libgav112RawBitReader24ReadInverseSignedLiteralEiPi(%"class.libgav1::RawBitReader"* %240, i32 6, i32* nonnull %2) #11
  br i1 %241, label %242, label %134

242:                                              ; preds = %239
  %243 = load i32, i32* %2, align 4
  %244 = trunc i32 %243 to i8
  store i8 %244, i8* %232, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121) #11
  br label %245

245:                                              ; preds = %242, %231
  %246 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 4, i32 0, i64 7
  %247 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %45, align 8
  %248 = bitcast %"class.libgav1::RawBitReader"* %247 to i32 (%"class.libgav1::RawBitReader"*)***
  %249 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %248, align 8
  %250 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %249, i64 2
  %251 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %250, align 8
  %252 = call i32 %251(%"class.libgav1::RawBitReader"* %247) #11
  switch i32 %252, label %253 [
    i32 -1, label %160
    i32 0, label %259
  ]

253:                                              ; preds = %245
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %121) #11
  store i32 -1431655766, i32* %2, align 4
  %254 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %45, align 8
  %255 = call zeroext i1 @_ZN7libgav112RawBitReader24ReadInverseSignedLiteralEiPi(%"class.libgav1::RawBitReader"* %254, i32 6, i32* nonnull %2) #11
  br i1 %255, label %256, label %134

256:                                              ; preds = %253
  %257 = load i32, i32* %2, align 4
  %258 = trunc i32 %257 to i8
  store i8 %258, i8* %246, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121) #11
  br label %259

259:                                              ; preds = %256, %245
  %260 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 5, i32 0, i64 0
  %261 = bitcast i32* %3 to i8*
  %262 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %45, align 8
  %263 = bitcast %"class.libgav1::RawBitReader"* %262 to i32 (%"class.libgav1::RawBitReader"*)***
  %264 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %263, align 8
  %265 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %264, i64 2
  %266 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %265, align 8
  %267 = call i32 %266(%"class.libgav1::RawBitReader"* %262) #11
  switch i32 %267, label %143 [
    i32 -1, label %160
    i32 0, label %150
  ]

268:                                              ; preds = %75
  %269 = trunc i64 %83 to i8
  %270 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 0, i32 0, i64 3
  store i8 %269, i8* %270, align 1
  br label %85

271:                                              ; preds = %53
  %272 = trunc i64 %61 to i8
  %273 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 0, i32 0, i64 1
  store i8 %272, i8* %273, align 1
  %274 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 33, i32 1
  %275 = load i8, i8* %274, align 1, !range !2
  %276 = icmp eq i8 %275, 0
  br i1 %276, label %63, label %85
}

declare zeroext i1 @_ZN7libgav112RawBitReader24ReadInverseSignedLiteralEiPi(%"class.libgav1::RawBitReader"*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser19ParseDeltaQuantizerEPa(%"class.libgav1::ObuParser"* nocapture readonly, i8* nocapture) local_unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  store i8 0, i8* %1, align 1
  %4 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %6 = bitcast %"class.libgav1::RawBitReader"* %5 to i32 (%"class.libgav1::RawBitReader"*)***
  %7 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %7, i64 2
  %9 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %8, align 8
  %10 = tail call i32 %9(%"class.libgav1::RawBitReader"* %5) #11
  switch i32 %10, label %11 [
    i32 -1, label %22
    i32 0, label %20
  ]

11:                                               ; preds = %2
  %12 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #11
  store i32 -1431655766, i32* %3, align 4
  %13 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %14 = call zeroext i1 @_ZN7libgav112RawBitReader24ReadInverseSignedLiteralEiPi(%"class.libgav1::RawBitReader"* %13, i32 6, i32* nonnull %3) #11
  br i1 %14, label %15, label %18

15:                                               ; preds = %11
  %16 = load i32, i32* %3, align 4
  %17 = trunc i32 %16 to i8
  store i8 %17, i8* %1, align 1
  br label %18

18:                                               ; preds = %11, %15
  %19 = phi i1 [ true, %15 ], [ false, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #11
  br label %20

20:                                               ; preds = %18, %2
  %21 = phi i1 [ true, %2 ], [ %19, %18 ]
  br label %22

22:                                               ; preds = %2, %20
  %23 = phi i1 [ %21, %20 ], [ false, %2 ]
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser24ParseQuantizerParametersEv(%"class.libgav1::ObuParser"*) local_unnamed_addr #1 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %7, align 8
  %9 = bitcast %"class.libgav1::RawBitReader"* %8 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %10 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %9, align 8
  %11 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %10, i64 3
  %12 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %11, align 8
  %13 = tail call i64 %12(%"class.libgav1::RawBitReader"* %8, i32 8) #11
  %14 = icmp eq i64 %13, -1
  br i1 %14, label %171, label %15

15:                                               ; preds = %1
  %16 = trunc i64 %13 to i8
  %17 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 16, i32 0
  store i8 %16, i8* %17, align 1
  %18 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 16, i32 1, i64 0
  store i8 0, i8* %18, align 1
  %19 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %7, align 8
  %20 = bitcast %"class.libgav1::RawBitReader"* %19 to i32 (%"class.libgav1::RawBitReader"*)***
  %21 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %20, align 8
  %22 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %21, i64 2
  %23 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %22, align 8
  %24 = tail call i32 %23(%"class.libgav1::RawBitReader"* %19) #11
  switch i32 %24, label %25 [
    i32 -1, label %171
    i32 0, label %33
  ]

25:                                               ; preds = %15
  %26 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #11
  store i32 -1431655766, i32* %6, align 4
  %27 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %7, align 8
  %28 = call zeroext i1 @_ZN7libgav112RawBitReader24ReadInverseSignedLiteralEiPi(%"class.libgav1::RawBitReader"* %27, i32 6, i32* nonnull %6) #11
  br i1 %28, label %29, label %32

29:                                               ; preds = %25
  %30 = load i32, i32* %6, align 4
  %31 = trunc i32 %30 to i8
  store i8 %31, i8* %18, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #11
  br label %33

32:                                               ; preds = %25
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #11
  br label %171

33:                                               ; preds = %29, %15
  %34 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 33, i32 1
  %35 = load i8, i8* %34, align 1, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %122

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 33, i32 9
  %39 = load i8, i8* %38, align 4, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %7, align 8
  %43 = bitcast %"class.libgav1::RawBitReader"* %42 to i32 (%"class.libgav1::RawBitReader"*)***
  %44 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %43, align 8
  %45 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %44, i64 2
  %46 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %45, align 8
  %47 = call i32 %46(%"class.libgav1::RawBitReader"* %42) #11
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %171, label %49

49:                                               ; preds = %41
  %50 = icmp ne i32 %47, 0
  br label %51

51:                                               ; preds = %37, %49
  %52 = phi i1 [ %50, %49 ], [ false, %37 ]
  %53 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 16, i32 1, i64 1
  store i8 0, i8* %53, align 1
  %54 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %7, align 8
  %55 = bitcast %"class.libgav1::RawBitReader"* %54 to i32 (%"class.libgav1::RawBitReader"*)***
  %56 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %55, align 8
  %57 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %56, i64 2
  %58 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %57, align 8
  %59 = call i32 %58(%"class.libgav1::RawBitReader"* %54) #11
  switch i32 %59, label %60 [
    i32 -1, label %171
    i32 0, label %68
  ]

60:                                               ; preds = %51
  %61 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61) #11
  store i32 -1431655766, i32* %5, align 4
  %62 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %7, align 8
  %63 = call zeroext i1 @_ZN7libgav112RawBitReader24ReadInverseSignedLiteralEiPi(%"class.libgav1::RawBitReader"* %62, i32 6, i32* nonnull %5) #11
  br i1 %63, label %64, label %67

64:                                               ; preds = %60
  %65 = load i32, i32* %5, align 4
  %66 = trunc i32 %65 to i8
  store i8 %66, i8* %53, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #11
  br label %68

67:                                               ; preds = %60
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #11
  br label %171

68:                                               ; preds = %64, %51
  %69 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 16, i32 2, i64 1
  store i8 0, i8* %69, align 1
  %70 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %7, align 8
  %71 = bitcast %"class.libgav1::RawBitReader"* %70 to i32 (%"class.libgav1::RawBitReader"*)***
  %72 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %71, align 8
  %73 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %72, i64 2
  %74 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %73, align 8
  %75 = call i32 %74(%"class.libgav1::RawBitReader"* %70) #11
  switch i32 %75, label %76 [
    i32 -1, label %171
    i32 0, label %84
  ]

76:                                               ; preds = %68
  %77 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %77) #11
  store i32 -1431655766, i32* %4, align 4
  %78 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %7, align 8
  %79 = call zeroext i1 @_ZN7libgav112RawBitReader24ReadInverseSignedLiteralEiPi(%"class.libgav1::RawBitReader"* %78, i32 6, i32* nonnull %4) #11
  br i1 %79, label %80, label %83

80:                                               ; preds = %76
  %81 = load i32, i32* %4, align 4
  %82 = trunc i32 %81 to i8
  store i8 %82, i8* %69, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %77) #11
  br label %84

83:                                               ; preds = %76
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %77) #11
  br label %171

84:                                               ; preds = %80, %68
  br i1 %52, label %85, label %117

85:                                               ; preds = %84
  %86 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 16, i32 1, i64 2
  store i8 0, i8* %86, align 1
  %87 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %7, align 8
  %88 = bitcast %"class.libgav1::RawBitReader"* %87 to i32 (%"class.libgav1::RawBitReader"*)***
  %89 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %88, align 8
  %90 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %89, i64 2
  %91 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %90, align 8
  %92 = call i32 %91(%"class.libgav1::RawBitReader"* %87) #11
  switch i32 %92, label %93 [
    i32 -1, label %171
    i32 0, label %101
  ]

93:                                               ; preds = %85
  %94 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %94) #11
  store i32 -1431655766, i32* %3, align 4
  %95 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %7, align 8
  %96 = call zeroext i1 @_ZN7libgav112RawBitReader24ReadInverseSignedLiteralEiPi(%"class.libgav1::RawBitReader"* %95, i32 6, i32* nonnull %3) #11
  br i1 %96, label %97, label %100

97:                                               ; preds = %93
  %98 = load i32, i32* %3, align 4
  %99 = trunc i32 %98 to i8
  store i8 %99, i8* %86, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %94) #11
  br label %101

100:                                              ; preds = %93
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %94) #11
  br label %171

101:                                              ; preds = %97, %85
  %102 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 16, i32 2, i64 2
  store i8 0, i8* %102, align 1
  %103 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %7, align 8
  %104 = bitcast %"class.libgav1::RawBitReader"* %103 to i32 (%"class.libgav1::RawBitReader"*)***
  %105 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %104, align 8
  %106 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %105, i64 2
  %107 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %106, align 8
  %108 = call i32 %107(%"class.libgav1::RawBitReader"* %103) #11
  switch i32 %108, label %109 [
    i32 -1, label %171
    i32 0, label %122
  ]

109:                                              ; preds = %101
  %110 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %110) #11
  store i32 -1431655766, i32* %2, align 4
  %111 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %7, align 8
  %112 = call zeroext i1 @_ZN7libgav112RawBitReader24ReadInverseSignedLiteralEiPi(%"class.libgav1::RawBitReader"* %111, i32 6, i32* nonnull %2) #11
  br i1 %112, label %113, label %116

113:                                              ; preds = %109
  %114 = load i32, i32* %2, align 4
  %115 = trunc i32 %114 to i8
  store i8 %115, i8* %102, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %110) #11
  br label %122

116:                                              ; preds = %109
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %110) #11
  br label %171

117:                                              ; preds = %84
  %118 = load i8, i8* %53, align 1
  %119 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 16, i32 1, i64 2
  store i8 %118, i8* %119, align 1
  %120 = load i8, i8* %69, align 1
  %121 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 16, i32 2, i64 2
  store i8 %120, i8* %121, align 1
  br label %122

122:                                              ; preds = %101, %113, %117, %33
  %123 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %7, align 8
  %124 = bitcast %"class.libgav1::RawBitReader"* %123 to i32 (%"class.libgav1::RawBitReader"*)***
  %125 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %124, align 8
  %126 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %125, i64 2
  %127 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %126, align 8
  %128 = call i32 %127(%"class.libgav1::RawBitReader"* %123) #11
  %129 = icmp eq i32 %128, -1
  br i1 %129, label %171, label %130

130:                                              ; preds = %122
  %131 = icmp ne i32 %128, 0
  %132 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 16, i32 3
  %133 = zext i1 %131 to i8
  store i8 %133, i8* %132, align 1
  br i1 %131, label %134, label %171

134:                                              ; preds = %130
  %135 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %7, align 8
  %136 = bitcast %"class.libgav1::RawBitReader"* %135 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %137 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %136, align 8
  %138 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %137, i64 3
  %139 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %138, align 8
  %140 = call i64 %139(%"class.libgav1::RawBitReader"* %135, i32 4) #11
  %141 = icmp eq i64 %140, -1
  br i1 %141, label %171, label %142

142:                                              ; preds = %134
  %143 = trunc i64 %140 to i8
  %144 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 16, i32 4, i64 0
  store i8 %143, i8* %144, align 1
  %145 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %7, align 8
  %146 = bitcast %"class.libgav1::RawBitReader"* %145 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %147 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %146, align 8
  %148 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %147, i64 3
  %149 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %148, align 8
  %150 = call i64 %149(%"class.libgav1::RawBitReader"* %145, i32 4) #11
  %151 = icmp eq i64 %150, -1
  br i1 %151, label %171, label %152

152:                                              ; preds = %142
  %153 = trunc i64 %150 to i8
  %154 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 16, i32 4, i64 1
  store i8 %153, i8* %154, align 1
  %155 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 33, i32 9
  %156 = load i8, i8* %155, align 4, !range !2
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %169, label %158

158:                                              ; preds = %152
  %159 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %7, align 8
  %160 = bitcast %"class.libgav1::RawBitReader"* %159 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %161 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %160, align 8
  %162 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %161, i64 3
  %163 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %162, align 8
  %164 = call i64 %163(%"class.libgav1::RawBitReader"* %159, i32 4) #11
  %165 = icmp eq i64 %164, -1
  br i1 %165, label %171, label %166

166:                                              ; preds = %158
  %167 = trunc i64 %164 to i8
  %168 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 16, i32 4, i64 2
  store i8 %167, i8* %168, align 1
  br label %171

169:                                              ; preds = %152
  %170 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 16, i32 4, i64 2
  store i8 %153, i8* %170, align 1
  br label %171

171:                                              ; preds = %101, %85, %68, %51, %15, %116, %100, %83, %67, %32, %130, %169, %166, %158, %142, %134, %122, %41, %1
  %172 = phi i1 [ false, %1 ], [ false, %32 ], [ false, %100 ], [ false, %116 ], [ false, %67 ], [ false, %83 ], [ false, %41 ], [ false, %122 ], [ false, %134 ], [ false, %142 ], [ false, %158 ], [ true, %166 ], [ true, %169 ], [ true, %130 ], [ false, %15 ], [ false, %51 ], [ false, %68 ], [ false, %85 ], [ false, %101 ]
  ret i1 %172
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser27ParseSegmentationParametersEv(%"class.libgav1::ObuParser"*) local_unnamed_addr #1 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 17
  %4 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %6 = bitcast %"class.libgav1::RawBitReader"* %5 to i32 (%"class.libgav1::RawBitReader"*)***
  %7 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %7, i64 2
  %9 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %8, align 8
  %10 = tail call i32 %9(%"class.libgav1::RawBitReader"* %5) #11
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %141, label %12

12:                                               ; preds = %1
  %13 = icmp ne i32 %10, 0
  %14 = getelementptr inbounds %"struct.libgav1::Segmentation", %"struct.libgav1::Segmentation"* %3, i64 0, i32 0
  %15 = zext i1 %13 to i8
  store i8 %15, i8* %14, align 2
  br i1 %13, label %16, label %141

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 27
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 7
  br i1 %19, label %20, label %23

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 17, i32 1
  store i8 1, i8* %21, align 1
  %22 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 17, i32 2
  store i8 1, i8* %22, align 2
  br label %69

23:                                               ; preds = %16
  %24 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %25 = bitcast %"class.libgav1::RawBitReader"* %24 to i32 (%"class.libgav1::RawBitReader"*)***
  %26 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %25, align 8
  %27 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %26, i64 2
  %28 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %27, align 8
  %29 = tail call i32 %28(%"class.libgav1::RawBitReader"* %24) #11
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %141, label %31

31:                                               ; preds = %23
  %32 = icmp ne i32 %29, 0
  %33 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 17, i32 1
  %34 = zext i1 %32 to i8
  store i8 %34, i8* %33, align 1
  br i1 %32, label %35, label %47

35:                                               ; preds = %31
  %36 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %37 = bitcast %"class.libgav1::RawBitReader"* %36 to i32 (%"class.libgav1::RawBitReader"*)***
  %38 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %37, align 8
  %39 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %38, i64 2
  %40 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %39, align 8
  %41 = tail call i32 %40(%"class.libgav1::RawBitReader"* %36) #11
  %42 = icmp eq i32 %41, -1
  br i1 %42, label %141, label %43

43:                                               ; preds = %35
  %44 = icmp ne i32 %41, 0
  %45 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 17, i32 3
  %46 = zext i1 %44 to i8
  store i8 %46, i8* %45, align 1
  br label %47

47:                                               ; preds = %43, %31
  %48 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %49 = bitcast %"class.libgav1::RawBitReader"* %48 to i32 (%"class.libgav1::RawBitReader"*)***
  %50 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %49, align 8
  %51 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %50, i64 2
  %52 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %51, align 8
  %53 = tail call i32 %52(%"class.libgav1::RawBitReader"* %48) #11
  %54 = icmp eq i32 %53, -1
  br i1 %54, label %141, label %55

55:                                               ; preds = %47
  %56 = icmp ne i32 %53, 0
  %57 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 17, i32 2
  %58 = zext i1 %56 to i8
  store i8 %58, i8* %57, align 2
  br i1 %56, label %69, label %59

59:                                               ; preds = %55
  %60 = load i8, i8* %17, align 1
  %61 = sext i8 %60 to i64
  %62 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 14
  %65 = load %"struct.libgav1::DecoderState"*, %"struct.libgav1::DecoderState"** %64, align 8
  %66 = sext i8 %63 to i64
  %67 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %65, i64 0, i32 5, i32 0, i64 %66, i32 0
  %68 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %67, align 8
  tail call void @_ZNK7libgav116RefCountedBuffer25GetSegmentationParametersEPNS_12SegmentationE(%"class.libgav1::RefCountedBuffer"* %68, %"struct.libgav1::Segmentation"* %3) #11
  br label %141

69:                                               ; preds = %55, %20
  %70 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 17, i32 5
  %71 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 17, i32 4
  %72 = bitcast i32* %2 to i8*
  br label %73

73:                                               ; preds = %138, %69
  %74 = phi i64 [ 0, %69 ], [ %139, %138 ]
  %75 = trunc i64 %74 to i8
  %76 = trunc i64 %74 to i8
  br label %77

77:                                               ; preds = %135, %73
  %78 = phi i64 [ 0, %73 ], [ %136, %135 ]
  %79 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %80 = bitcast %"class.libgav1::RawBitReader"* %79 to i32 (%"class.libgav1::RawBitReader"*)***
  %81 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %80, align 8
  %82 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %81, i64 2
  %83 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %82, align 8
  %84 = call i32 %83(%"class.libgav1::RawBitReader"* %79) #11
  %85 = icmp eq i32 %84, -1
  br i1 %85, label %141, label %86

86:                                               ; preds = %77
  %87 = icmp ne i32 %84, 0
  %88 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 17, i32 6, i64 %74, i64 %78
  %89 = zext i1 %87 to i8
  store i8 %89, i8* %88, align 1
  br i1 %87, label %90, label %135

90:                                               ; preds = %86
  %91 = icmp ult i64 %78, 5
  br i1 %91, label %92, label %110

92:                                               ; preds = %90
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %72) #11
  store i32 -1431655766, i32* %2, align 4
  %93 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %94 = getelementptr inbounds [8 x i8], [8 x i8]* @_ZN7libgav124kSegmentationFeatureBitsE, i64 0, i64 %78
  %95 = load i8, i8* %94, align 1
  %96 = sext i8 %95 to i32
  %97 = call zeroext i1 @_ZN7libgav112RawBitReader24ReadInverseSignedLiteralEiPi(%"class.libgav1::RawBitReader"* %93, i32 %96, i32* nonnull %2) #11
  br i1 %97, label %98, label %109

98:                                               ; preds = %92
  %99 = load i32, i32* %2, align 4
  %100 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZN7libgav129kSegmentationFeatureMaxValuesE, i64 0, i64 %78
  %101 = load i32, i32* %100, align 4
  %102 = sub nsw i32 0, %101
  %103 = icmp slt i32 %99, %102
  %104 = icmp sgt i32 %99, %101
  %105 = select i1 %104, i32 %101, i32 %99
  %106 = select i1 %103, i32 %102, i32 %105
  %107 = trunc i32 %106 to i16
  %108 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 17, i32 7, i64 %74, i64 %78
  store i16 %107, i16* %108, align 2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72) #11
  store i8 %76, i8* %70, align 1
  br label %135

109:                                              ; preds = %92
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72) #11
  br label %141

110:                                              ; preds = %90
  %111 = getelementptr inbounds [8 x i8], [8 x i8]* @_ZN7libgav124kSegmentationFeatureBitsE, i64 0, i64 %78
  %112 = load i8, i8* %111, align 1
  %113 = icmp sgt i8 %112, 0
  br i1 %113, label %114, label %132

114:                                              ; preds = %110
  %115 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %116 = sext i8 %112 to i32
  %117 = bitcast %"class.libgav1::RawBitReader"* %115 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %118 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %117, align 8
  %119 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %118, i64 3
  %120 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %119, align 8
  %121 = call i64 %120(%"class.libgav1::RawBitReader"* %115, i32 %116) #11
  %122 = icmp eq i64 %121, -1
  br i1 %122, label %141, label %123

123:                                              ; preds = %114
  %124 = trunc i64 %121 to i32
  %125 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZN7libgav129kSegmentationFeatureMaxValuesE, i64 0, i64 %78
  %126 = load i32, i32* %125, align 4
  %127 = icmp slt i32 %124, 0
  %128 = icmp slt i32 %126, %124
  %129 = select i1 %128, i32 %126, i32 %124
  %130 = select i1 %127, i32 0, i32 %129
  %131 = trunc i32 %130 to i16
  br label %132

132:                                              ; preds = %110, %123
  %133 = phi i16 [ %131, %123 ], [ 0, %110 ]
  %134 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 17, i32 7, i64 %74, i64 %78
  store i16 %133, i16* %134, align 2
  store i8 %75, i8* %70, align 1
  store i8 1, i8* %71, align 2
  br label %135

135:                                              ; preds = %98, %86, %132
  %136 = add nuw nsw i64 %78, 1
  %137 = icmp eq i64 %136, 8
  br i1 %137, label %138, label %77

138:                                              ; preds = %135
  %139 = add nuw nsw i64 %74, 1
  %140 = icmp eq i64 %139, 8
  br i1 %140, label %141, label %73

141:                                              ; preds = %138, %114, %77, %59, %1, %12, %23, %35, %47, %109
  %142 = phi i1 [ false, %109 ], [ true, %59 ], [ false, %1 ], [ true, %12 ], [ false, %23 ], [ false, %35 ], [ false, %47 ], [ false, %77 ], [ false, %114 ], [ true, %138 ]
  ret i1 %142
}

declare void @_ZNK7libgav116RefCountedBuffer25GetSegmentationParametersEPNS_12SegmentationE(%"class.libgav1::RefCountedBuffer"*, %"struct.libgav1::Segmentation"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser34ParseQuantizerIndexDeltaParametersEv(%"class.libgav1::ObuParser"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 16, i32 0
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %6, align 8
  %8 = bitcast %"class.libgav1::RawBitReader"* %7 to i32 (%"class.libgav1::RawBitReader"*)***
  %9 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %9, i64 2
  %11 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %10, align 8
  %12 = tail call i32 %11(%"class.libgav1::RawBitReader"* %7) #11
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %29, label %14

14:                                               ; preds = %5
  %15 = icmp ne i32 %12, 0
  %16 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 50, i32 0
  %17 = zext i1 %15 to i8
  store i8 %17, i8* %16, align 1
  br i1 %15, label %18, label %29

18:                                               ; preds = %14
  %19 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %6, align 8
  %20 = bitcast %"class.libgav1::RawBitReader"* %19 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %21 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %20, align 8
  %22 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %21, i64 3
  %23 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %22, align 8
  %24 = tail call i64 %23(%"class.libgav1::RawBitReader"* %19, i32 2) #11
  %25 = icmp eq i64 %24, -1
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = trunc i64 %24 to i8
  %28 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 50, i32 1
  store i8 %27, i8* %28, align 1
  br label %29

29:                                               ; preds = %26, %14, %1, %18, %5
  %30 = phi i1 [ false, %5 ], [ false, %18 ], [ true, %1 ], [ true, %14 ], [ true, %26 ]
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser30ParseLoopFilterDeltaParametersEv(%"class.libgav1::ObuParser"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 50, i32 0
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %51, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 32
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 51, i32 0
  %11 = load i8, i8* %10, align 2, !range !2
  br label %25

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %13, align 8
  %15 = bitcast %"class.libgav1::RawBitReader"* %14 to i32 (%"class.libgav1::RawBitReader"*)***
  %16 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %16, i64 2
  %18 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %17, align 8
  %19 = tail call i32 %18(%"class.libgav1::RawBitReader"* %14) #11
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %51, label %21

21:                                               ; preds = %12
  %22 = icmp ne i32 %19, 0
  %23 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 51, i32 0
  %24 = zext i1 %22 to i8
  store i8 %24, i8* %23, align 2
  br label %25

25:                                               ; preds = %9, %21
  %26 = phi i8 [ %11, %9 ], [ %24, %21 ]
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %51, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %29, align 8
  %31 = bitcast %"class.libgav1::RawBitReader"* %30 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %32 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %31, align 8
  %33 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %32, i64 3
  %34 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %33, align 8
  %35 = tail call i64 %34(%"class.libgav1::RawBitReader"* %30, i32 2) #11
  %36 = icmp eq i64 %35, -1
  br i1 %36, label %51, label %37

37:                                               ; preds = %28
  %38 = trunc i64 %35 to i8
  %39 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 51, i32 1
  store i8 %38, i8* %39, align 1
  %40 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %29, align 8
  %41 = bitcast %"class.libgav1::RawBitReader"* %40 to i32 (%"class.libgav1::RawBitReader"*)***
  %42 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %41, align 8
  %43 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %42, i64 2
  %44 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %43, align 8
  %45 = tail call i32 %44(%"class.libgav1::RawBitReader"* %40) #11
  %46 = icmp eq i32 %45, -1
  br i1 %46, label %51, label %47

47:                                               ; preds = %37
  %48 = icmp ne i32 %45, 0
  %49 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 51, i32 2
  %50 = zext i1 %48 to i8
  store i8 %50, i8* %49, align 2
  br label %51

51:                                               ; preds = %47, %1, %25, %37, %28, %12
  %52 = phi i1 [ false, %12 ], [ false, %28 ], [ false, %37 ], [ true, %25 ], [ true, %1 ], [ true, %47 ]
  ret i1 %52
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav19ObuParser31ComputeSegmentLosslessAndQIndexEv(%"class.libgav1::ObuParser"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 42
  store i8 1, i8* %2, align 2
  %3 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 17
  %4 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 16, i32 0
  %5 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 16, i32 1, i64 0
  %6 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 16, i32 1, i64 1
  %7 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 16, i32 2, i64 1
  %8 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 16, i32 1, i64 2
  %9 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 16, i32 2, i64 2
  br label %13

10:                                               ; preds = %43
  %11 = load i8, i8* %2, align 2, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %53, label %46

13:                                               ; preds = %43, %1
  %14 = phi i64 [ 0, %1 ], [ %44, %43 ]
  %15 = load i8, i8* %4, align 1
  %16 = zext i8 %15 to i32
  %17 = trunc i64 %14 to i32
  %18 = tail call i32 @_ZN7libgav19GetQIndexERKNS_12SegmentationEii(%"struct.libgav1::Segmentation"* dereferenceable(214) %3, i32 %17, i32 %16) #11
  %19 = trunc i32 %18 to i8
  %20 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 17, i32 9, i64 %14
  store i8 %19, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %13
  %24 = load i8, i8* %5, align 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %35

26:                                               ; preds = %23
  %27 = load i8, i8* %6, align 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %35

29:                                               ; preds = %26
  %30 = load i8, i8* %7, align 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %29
  %33 = load i8, i8* %8, align 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %32, %29, %26, %23, %13
  %36 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 17, i32 8, i64 %14
  store i8 0, i8* %36, align 1
  br label %42

37:                                               ; preds = %32
  %38 = load i8, i8* %9, align 1
  %39 = icmp eq i8 %38, 0
  %40 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 17, i32 8, i64 %14
  %41 = zext i1 %39 to i8
  store i8 %41, i8* %40, align 1
  br i1 %39, label %43, label %42

42:                                               ; preds = %35, %37
  store i8 0, i8* %2, align 2
  br label %43

43:                                               ; preds = %37, %42
  %44 = add nuw nsw i64 %14, 1
  %45 = icmp eq i64 %44, 8
  br i1 %45, label %10, label %13

46:                                               ; preds = %10
  %47 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 4
  %48 = load i32, i32* %47, align 8
  %49 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 10
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %48, %50
  %52 = zext i1 %51 to i8
  br label %53

53:                                               ; preds = %10, %46
  %54 = phi i8 [ 0, %10 ], [ %52, %46 ]
  %55 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 43
  store i8 %54, i8* %55, align 1
  ret void
}

declare i32 @_ZN7libgav19GetQIndexERKNS_12SegmentationEii(%"struct.libgav1::Segmentation"* dereferenceable(214), i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser19ParseCdefParametersEv(%"class.libgav1::ObuParser"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 33, i32 0
  %3 = load i8, i8* %2, align 4
  %4 = sext i8 %3 to i32
  %5 = add nsw i32 %4, -8
  %6 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 42
  %7 = load i8, i8* %6, align 2, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 32
  %11 = load i8, i8* %10, align 4, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 31
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %13, %9, %1
  %18 = add i8 %3, -5
  %19 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 55, i32 0
  store i8 %18, i8* %19, align 1
  br label %117

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %21, align 8
  %23 = bitcast %"class.libgav1::RawBitReader"* %22 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %24 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %23, align 8
  %25 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %24, i64 3
  %26 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %25, align 8
  %27 = tail call i64 %26(%"class.libgav1::RawBitReader"* %22, i32 2) #11
  %28 = icmp eq i64 %27, -1
  br i1 %28, label %117, label %29

29:                                               ; preds = %20
  %30 = zext i32 %5 to i64
  %31 = add nuw nsw i64 %30, 3
  %32 = add i64 %31, %27
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 55, i32 0
  store i8 %33, i8* %34, align 1
  %35 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %21, align 8
  %36 = bitcast %"class.libgav1::RawBitReader"* %35 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %37 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %36, align 8
  %38 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %37, i64 3
  %39 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %38, align 8
  %40 = tail call i64 %39(%"class.libgav1::RawBitReader"* %35, i32 2) #11
  %41 = icmp eq i64 %40, -1
  br i1 %41, label %117, label %42

42:                                               ; preds = %29
  %43 = trunc i64 %40 to i8
  %44 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 55, i32 1
  store i8 %43, i8* %44, align 1
  %45 = and i64 %40, 255
  %46 = icmp eq i64 %45, 31
  br i1 %46, label %117, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 33, i32 1
  br label %49

49:                                               ; preds = %47, %110
  %50 = phi i64 [ 0, %47 ], [ %111, %110 ]
  %51 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %21, align 8
  %52 = bitcast %"class.libgav1::RawBitReader"* %51 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %53 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %52, align 8
  %54 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %53, i64 3
  %55 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %54, align 8
  %56 = tail call i64 %55(%"class.libgav1::RawBitReader"* %51, i32 4) #11
  %57 = icmp eq i64 %56, -1
  br i1 %57, label %117, label %58

58:                                               ; preds = %49
  %59 = shl i64 %56, %30
  %60 = trunc i64 %59 to i8
  %61 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 55, i32 2, i64 %50
  store i8 %60, i8* %61, align 1
  %62 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %21, align 8
  %63 = bitcast %"class.libgav1::RawBitReader"* %62 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %64 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %63, align 8
  %65 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %64, i64 3
  %66 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %65, align 8
  %67 = tail call i64 %66(%"class.libgav1::RawBitReader"* %62, i32 2) #11
  %68 = icmp eq i64 %67, -1
  br i1 %68, label %117, label %69

69:                                               ; preds = %58
  %70 = trunc i64 %67 to i32
  %71 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 55, i32 3, i64 %50
  %72 = and i64 %67, 255
  %73 = icmp eq i64 %72, 3
  %74 = zext i1 %73 to i32
  %75 = add i32 %74, %70
  %76 = and i32 %75, 255
  %77 = shl i32 %76, %5
  %78 = trunc i32 %77 to i8
  store i8 %78, i8* %71, align 1
  %79 = load i8, i8* %48, align 1, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %110

81:                                               ; preds = %69
  %82 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %21, align 8
  %83 = bitcast %"class.libgav1::RawBitReader"* %82 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %84 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %83, align 8
  %85 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %84, i64 3
  %86 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %85, align 8
  %87 = tail call i64 %86(%"class.libgav1::RawBitReader"* %82, i32 4) #11
  %88 = icmp eq i64 %87, -1
  br i1 %88, label %117, label %89

89:                                               ; preds = %81
  %90 = shl i64 %87, %30
  %91 = trunc i64 %90 to i8
  %92 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 55, i32 4, i64 %50
  store i8 %91, i8* %92, align 1
  %93 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %21, align 8
  %94 = bitcast %"class.libgav1::RawBitReader"* %93 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %95 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %94, align 8
  %96 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %95, i64 3
  %97 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %96, align 8
  %98 = tail call i64 %97(%"class.libgav1::RawBitReader"* %93, i32 2) #11
  %99 = icmp eq i64 %98, -1
  br i1 %99, label %117, label %100

100:                                              ; preds = %89
  %101 = trunc i64 %98 to i32
  %102 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 55, i32 5, i64 %50
  %103 = and i64 %98, 255
  %104 = icmp eq i64 %103, 3
  %105 = zext i1 %104 to i32
  %106 = add i32 %105, %101
  %107 = and i32 %106, 255
  %108 = shl i32 %107, %5
  %109 = trunc i32 %108 to i8
  store i8 %109, i8* %102, align 1
  br label %110

110:                                              ; preds = %69, %100
  %111 = add nuw nsw i64 %50, 1
  %112 = load i8, i8* %44, align 1
  %113 = zext i8 %112 to i32
  %114 = shl i32 1, %113
  %115 = sext i32 %114 to i64
  %116 = icmp slt i64 %111, %115
  br i1 %116, label %49, label %117

117:                                              ; preds = %110, %49, %58, %81, %89, %42, %17, %29, %20
  %118 = phi i1 [ true, %17 ], [ false, %20 ], [ false, %29 ], [ true, %42 ], [ true, %110 ], [ false, %49 ], [ false, %58 ], [ false, %81 ], [ false, %89 ]
  ret i1 %118
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser30ParseLoopRestorationParametersEv(%"class.libgav1::ObuParser"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 43
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %105

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 32
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %105

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 32
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %105, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 33, i32 1
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  %17 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = select i1 %16, i64 3, i64 1
  br label %19

19:                                               ; preds = %30, %13
  %20 = phi i64 [ 0, %13 ], [ %39, %30 ]
  %21 = phi i8 [ 0, %13 ], [ %38, %30 ]
  %22 = phi i8 [ 0, %13 ], [ %36, %30 ]
  %23 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %17, align 8
  %24 = bitcast %"class.libgav1::RawBitReader"* %23 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %25 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %24, align 8
  %26 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %25, i64 3
  %27 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %26, align 8
  %28 = tail call i64 %27(%"class.libgav1::RawBitReader"* %23, i32 2) #11
  %29 = icmp eq i64 %28, -1
  br i1 %29, label %105, label %30

30:                                               ; preds = %19
  %31 = trunc i64 %28 to i8
  %32 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 11, i32 0, i64 %20
  store i8 %31, i8* %32, align 1
  %33 = and i64 %28, 255
  %34 = icmp eq i64 %33, 0
  %35 = icmp eq i64 %20, 0
  %36 = select i1 %34, i8 %22, i8 1
  %37 = or i1 %35, %34
  %38 = select i1 %37, i8 %21, i8 1
  %39 = add nuw nsw i64 %20, 1
  %40 = icmp eq i64 %39, %18
  br i1 %40, label %41, label %19

41:                                               ; preds = %30
  %42 = and i8 %36, 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %105, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 14
  %46 = load i8, i8* %45, align 1, !range !2
  %47 = icmp eq i8 %46, 0
  %48 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %17, align 8
  %49 = bitcast %"class.libgav1::RawBitReader"* %48 to i32 (%"class.libgav1::RawBitReader"*)***
  %50 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %49, align 8
  %51 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %50, i64 2
  %52 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %51, align 8
  %53 = tail call i32 %52(%"class.libgav1::RawBitReader"* %48) #11
  %54 = icmp eq i32 %53, -1
  br i1 %47, label %58, label %55

55:                                               ; preds = %44
  br i1 %54, label %105, label %56

56:                                               ; preds = %55
  %57 = add nuw i32 %53, 1
  br label %73

58:                                               ; preds = %44
  br i1 %54, label %105, label %59

59:                                               ; preds = %58
  %60 = and i32 %53, 255
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %73, label %62

62:                                               ; preds = %59
  %63 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %17, align 8
  %64 = bitcast %"class.libgav1::RawBitReader"* %63 to i32 (%"class.libgav1::RawBitReader"*)***
  %65 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %64, align 8
  %66 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %65, i64 2
  %67 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %66, align 8
  %68 = tail call i32 %67(%"class.libgav1::RawBitReader"* %63) #11
  %69 = icmp eq i32 %68, -1
  br i1 %69, label %105, label %70

70:                                               ; preds = %62
  %71 = and i32 %68, 255
  %72 = add nuw nsw i32 %71, %60
  br label %73

73:                                               ; preds = %59, %70, %56
  %74 = phi i32 [ %57, %56 ], [ %72, %70 ], [ %53, %59 ]
  %75 = and i32 %74, 255
  %76 = add nuw nsw i32 %75, 6
  %77 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 11, i32 1, i64 0
  store i32 %76, i32* %77, align 4
  %78 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 33, i32 6
  %79 = load i8, i8* %78, align 4
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %99, label %81

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 33, i32 7
  %83 = load i8, i8* %82, align 1
  %84 = icmp eq i8 %83, 0
  %85 = and i8 %38, 1
  %86 = icmp eq i8 %85, 0
  %87 = or i1 %86, %84
  br i1 %87, label %99, label %88

88:                                               ; preds = %81
  %89 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %17, align 8
  %90 = bitcast %"class.libgav1::RawBitReader"* %89 to i32 (%"class.libgav1::RawBitReader"*)***
  %91 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %90, align 8
  %92 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %91, i64 2
  %93 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %92, align 8
  %94 = tail call i32 %93(%"class.libgav1::RawBitReader"* %89) #11
  %95 = icmp eq i32 %94, -1
  br i1 %95, label %105, label %96

96:                                               ; preds = %88
  %97 = and i32 %94, 255
  %98 = load i32, i32* %77, align 4
  br label %99

99:                                               ; preds = %96, %73, %81
  %100 = phi i32 [ %98, %96 ], [ %76, %81 ], [ %76, %73 ]
  %101 = phi i32 [ %97, %96 ], [ 0, %81 ], [ 0, %73 ]
  %102 = sub nsw i32 %100, %101
  %103 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 11, i32 1, i64 2
  store i32 %102, i32* %103, align 4
  %104 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 11, i32 1, i64 1
  store i32 %102, i32* %104, align 4
  br label %105

105:                                              ; preds = %19, %88, %62, %58, %55, %41, %99, %1, %5, %9
  %106 = phi i1 [ true, %9 ], [ true, %5 ], [ true, %1 ], [ true, %99 ], [ true, %41 ], [ false, %55 ], [ false, %58 ], [ false, %62 ], [ false, %88 ], [ false, %19 ]
  ret i1 %106
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser17ParseTxModeSyntaxEv(%"class.libgav1::ObuParser"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 42
  %3 = load i8, i8* %2, align 2, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %17

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %6, align 8
  %8 = bitcast %"class.libgav1::RawBitReader"* %7 to i32 (%"class.libgav1::RawBitReader"*)***
  %9 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %9, i64 2
  %11 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %10, align 8
  %12 = tail call i32 %11(%"class.libgav1::RawBitReader"* %7) #11
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %20, label %14

14:                                               ; preds = %5
  %15 = icmp eq i32 %12, 1
  %16 = select i1 %15, i8 2, i8 1
  br label %17

17:                                               ; preds = %1, %14
  %18 = phi i8 [ %16, %14 ], [ 0, %1 ]
  %19 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 44
  store i8 %18, i8* %19, align 8
  br label %20

20:                                               ; preds = %17, %5
  %21 = phi i1 [ false, %5 ], [ true, %17 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser29ParseFrameReferenceModeSyntaxEv(%"class.libgav1::ObuParser"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 20
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, -3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %7, align 8
  %9 = bitcast %"class.libgav1::RawBitReader"* %8 to i32 (%"class.libgav1::RawBitReader"*)***
  %10 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %10, i64 2
  %12 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %11, align 8
  %13 = tail call i32 %12(%"class.libgav1::RawBitReader"* %8) #11
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %19, label %15

15:                                               ; preds = %6
  %16 = icmp ne i32 %13, 0
  %17 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 45
  %18 = zext i1 %16 to i8
  store i8 %18, i8* %17, align 1
  br label %19

19:                                               ; preds = %1, %15, %6
  %20 = phi i1 [ false, %6 ], [ true, %15 ], [ true, %1 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser17IsSkipModeAllowedEv(%"class.libgav1::ObuParser"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 20
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, -3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %90, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 45
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %90, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 21
  %12 = load i8, i8* %11, align 2, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %90, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 14
  %16 = load %"struct.libgav1::DecoderState"*, %"struct.libgav1::DecoderState"** %15, align 8
  %17 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 26
  %18 = load i8, i8* %17, align 2
  %19 = zext i8 %18 to i32
  %20 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 23
  %21 = load i8, i8* %20, align 8
  %22 = zext i8 %21 to i32
  %23 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 0
  %24 = load i8, i8* %23, align 1
  %25 = sext i8 %24 to i64
  %26 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %16, i64 0, i32 2, i32 0, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = sub nsw i32 %28, %19
  %30 = shl i32 %29, %22
  %31 = ashr i32 %30, %22
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %14
  %34 = icmp eq i32 %31, 0
  %35 = sext i1 %34 to i32
  %36 = select i1 %34, i32 -1, i32 %28
  br label %37

37:                                               ; preds = %33, %14
  %38 = phi i32 [ 0, %14 ], [ -1, %33 ]
  %39 = phi i32 [ -1, %14 ], [ %35, %33 ]
  %40 = phi i32 [ %28, %14 ], [ -1, %33 ]
  %41 = phi i32 [ -1, %14 ], [ %36, %33 ]
  %42 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 1
  %43 = load i8, i8* %42, align 1
  %44 = sext i8 %43 to i64
  %45 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %16, i64 0, i32 2, i32 0, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = sub nsw i32 %47, %19
  %49 = shl i32 %48, %22
  %50 = ashr i32 %49, %22
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %179, label %170

52:                                               ; preds = %341, %346, %347
  %53 = phi i32 [ %318, %347 ], [ %318, %341 ], [ %325, %346 ]
  %54 = phi i32 [ %348, %347 ], [ %317, %341 ], [ %317, %346 ]
  %55 = phi i32 [ %316, %347 ], [ %316, %341 ], [ 6, %346 ]
  %56 = icmp sgt i32 %54, -1
  br i1 %56, label %67, label %57

57:                                               ; preds = %52
  %58 = sub nsw i32 %28, %53
  %59 = shl i32 %58, %22
  %60 = icmp slt i32 %59, 0
  %61 = xor i1 %60, true
  %62 = sext i1 %61 to i32
  %63 = select i1 %60, i32 %28, i32 -1
  %64 = sub nsw i32 %47, %53
  %65 = shl i32 %64, %22
  %66 = icmp slt i32 %65, 0
  br i1 %66, label %92, label %99

67:                                               ; preds = %52
  %68 = icmp slt i32 %54, %55
  %69 = select i1 %68, i32 %54, i32 %55
  %70 = trunc i32 %69 to i8
  %71 = add nuw nsw i8 %70, 1
  %72 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 46, i64 0
  store i8 %71, i8* %72, align 2
  %73 = icmp slt i32 %55, %54
  %74 = select i1 %73, i32 %54, i32 %55
  %75 = trunc i32 %74 to i8
  %76 = add nuw nsw i8 %75, 1
  %77 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 46, i64 1
  store i8 %76, i8* %77, align 1
  br label %90

78:                                               ; preds = %163, %168, %169
  %79 = phi i32 [ %156, %169 ], [ %156, %163 ], [ 6, %168 ]
  %80 = icmp slt i32 %79, %55
  %81 = select i1 %80, i32 %79, i32 %55
  %82 = trunc i32 %81 to i8
  %83 = add nuw nsw i8 %82, 1
  %84 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 46, i64 0
  store i8 %83, i8* %84, align 2
  %85 = icmp slt i32 %55, %79
  %86 = select i1 %85, i32 %79, i32 %55
  %87 = trunc i32 %86 to i8
  %88 = add nuw nsw i8 %87, 1
  %89 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 46, i64 1
  store i8 %88, i8* %89, align 1
  br label %90

90:                                               ; preds = %67, %347, %169, %78, %1, %6, %10
  %91 = phi i1 [ false, %10 ], [ false, %6 ], [ false, %1 ], [ true, %67 ], [ false, %347 ], [ true, %78 ], [ false, %169 ]
  ret i1 %91

92:                                               ; preds = %57
  br i1 %60, label %93, label %98

93:                                               ; preds = %92
  %94 = sub nsw i32 %47, %63
  %95 = shl i32 %94, %22
  %96 = ashr i32 %95, %22
  %97 = icmp sgt i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %92, %93
  br label %99

99:                                               ; preds = %98, %93, %57
  %100 = phi i32 [ 1, %98 ], [ 0, %93 ], [ %62, %57 ]
  %101 = phi i32 [ %47, %98 ], [ %63, %93 ], [ %63, %57 ]
  %102 = sub nsw i32 %197, %53
  %103 = shl i32 %102, %22
  %104 = icmp slt i32 %103, 0
  br i1 %104, label %105, label %113

105:                                              ; preds = %99
  %106 = icmp slt i32 %100, 0
  br i1 %106, label %112, label %107

107:                                              ; preds = %105
  %108 = sub nsw i32 %197, %101
  %109 = shl i32 %108, %22
  %110 = ashr i32 %109, %22
  %111 = icmp sgt i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %107, %105
  br label %113

113:                                              ; preds = %112, %107, %99
  %114 = phi i32 [ 2, %112 ], [ %100, %107 ], [ %100, %99 ]
  %115 = phi i32 [ %197, %112 ], [ %101, %107 ], [ %101, %99 ]
  %116 = sub nsw i32 %229, %53
  %117 = shl i32 %116, %22
  %118 = icmp slt i32 %117, 0
  br i1 %118, label %119, label %127

119:                                              ; preds = %113
  %120 = icmp slt i32 %114, 0
  br i1 %120, label %126, label %121

121:                                              ; preds = %119
  %122 = sub nsw i32 %229, %115
  %123 = shl i32 %122, %22
  %124 = ashr i32 %123, %22
  %125 = icmp sgt i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %121, %119
  br label %127

127:                                              ; preds = %126, %121, %113
  %128 = phi i32 [ 3, %126 ], [ %114, %121 ], [ %114, %113 ]
  %129 = phi i32 [ %229, %126 ], [ %115, %121 ], [ %115, %113 ]
  %130 = sub nsw i32 %261, %53
  %131 = shl i32 %130, %22
  %132 = icmp slt i32 %131, 0
  br i1 %132, label %133, label %141

133:                                              ; preds = %127
  %134 = icmp slt i32 %128, 0
  br i1 %134, label %140, label %135

135:                                              ; preds = %133
  %136 = sub nsw i32 %261, %129
  %137 = shl i32 %136, %22
  %138 = ashr i32 %137, %22
  %139 = icmp sgt i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %135, %133
  br label %141

141:                                              ; preds = %140, %135, %127
  %142 = phi i32 [ 4, %140 ], [ %128, %135 ], [ %128, %127 ]
  %143 = phi i32 [ %261, %140 ], [ %129, %135 ], [ %129, %127 ]
  %144 = sub nsw i32 %293, %53
  %145 = shl i32 %144, %22
  %146 = icmp slt i32 %145, 0
  br i1 %146, label %147, label %155

147:                                              ; preds = %141
  %148 = icmp slt i32 %142, 0
  br i1 %148, label %154, label %149

149:                                              ; preds = %147
  %150 = sub nsw i32 %293, %143
  %151 = shl i32 %150, %22
  %152 = ashr i32 %151, %22
  %153 = icmp sgt i32 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %149, %147
  br label %155

155:                                              ; preds = %154, %149, %141
  %156 = phi i32 [ 5, %154 ], [ %142, %149 ], [ %142, %141 ]
  %157 = phi i32 [ %293, %154 ], [ %143, %149 ], [ %143, %141 ]
  %158 = sub nsw i32 %325, %53
  %159 = shl i32 %158, %22
  %160 = icmp slt i32 %159, 0
  %161 = icmp slt i32 %156, 0
  br i1 %160, label %162, label %169

162:                                              ; preds = %155
  br i1 %161, label %168, label %163

163:                                              ; preds = %162
  %164 = sub nsw i32 %325, %157
  %165 = shl i32 %164, %22
  %166 = ashr i32 %165, %22
  %167 = icmp sgt i32 %166, 0
  br i1 %167, label %168, label %78

168:                                              ; preds = %163, %162
  br label %78

169:                                              ; preds = %155
  br i1 %161, label %90, label %78

170:                                              ; preds = %37
  %171 = icmp eq i32 %50, 0
  br i1 %171, label %187, label %172

172:                                              ; preds = %170
  %173 = icmp slt i32 %39, 0
  br i1 %173, label %178, label %174

174:                                              ; preds = %172
  %175 = sub nsw i32 %47, %41
  %176 = shl i32 %175, %22
  %177 = icmp slt i32 %176, 0
  br i1 %177, label %178, label %187

178:                                              ; preds = %174, %172
  br label %187

179:                                              ; preds = %37
  %180 = icmp slt i32 %38, 0
  br i1 %180, label %186, label %181

181:                                              ; preds = %179
  %182 = sub nsw i32 %47, %40
  %183 = shl i32 %182, %22
  %184 = ashr i32 %183, %22
  %185 = icmp sgt i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %181, %179
  br label %187

187:                                              ; preds = %186, %181, %178, %174, %170
  %188 = phi i32 [ 1, %186 ], [ 0, %181 ], [ %38, %170 ], [ %38, %178 ], [ %38, %174 ]
  %189 = phi i32 [ %39, %186 ], [ %39, %181 ], [ %39, %170 ], [ 1, %178 ], [ 0, %174 ]
  %190 = phi i32 [ %47, %186 ], [ %40, %181 ], [ %40, %170 ], [ %40, %178 ], [ %40, %174 ]
  %191 = phi i32 [ %41, %186 ], [ %41, %181 ], [ %41, %170 ], [ %47, %178 ], [ %41, %174 ]
  %192 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 2
  %193 = load i8, i8* %192, align 1
  %194 = sext i8 %193 to i64
  %195 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %16, i64 0, i32 2, i32 0, i64 %194
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i32
  %198 = sub nsw i32 %197, %19
  %199 = shl i32 %198, %22
  %200 = ashr i32 %199, %22
  %201 = icmp slt i32 %200, 0
  br i1 %201, label %211, label %202

202:                                              ; preds = %187
  %203 = icmp eq i32 %200, 0
  br i1 %203, label %219, label %204

204:                                              ; preds = %202
  %205 = icmp slt i32 %189, 0
  br i1 %205, label %210, label %206

206:                                              ; preds = %204
  %207 = sub nsw i32 %197, %191
  %208 = shl i32 %207, %22
  %209 = icmp slt i32 %208, 0
  br i1 %209, label %210, label %219

210:                                              ; preds = %206, %204
  br label %219

211:                                              ; preds = %187
  %212 = icmp slt i32 %188, 0
  br i1 %212, label %218, label %213

213:                                              ; preds = %211
  %214 = sub nsw i32 %197, %190
  %215 = shl i32 %214, %22
  %216 = ashr i32 %215, %22
  %217 = icmp sgt i32 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %213, %211
  br label %219

219:                                              ; preds = %218, %213, %210, %206, %202
  %220 = phi i32 [ 2, %218 ], [ %188, %213 ], [ %188, %202 ], [ %188, %210 ], [ %188, %206 ]
  %221 = phi i32 [ %189, %218 ], [ %189, %213 ], [ %189, %202 ], [ 2, %210 ], [ %189, %206 ]
  %222 = phi i32 [ %197, %218 ], [ %190, %213 ], [ %190, %202 ], [ %190, %210 ], [ %190, %206 ]
  %223 = phi i32 [ %191, %218 ], [ %191, %213 ], [ %191, %202 ], [ %197, %210 ], [ %191, %206 ]
  %224 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 3
  %225 = load i8, i8* %224, align 1
  %226 = sext i8 %225 to i64
  %227 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %16, i64 0, i32 2, i32 0, i64 %226
  %228 = load i8, i8* %227, align 1
  %229 = zext i8 %228 to i32
  %230 = sub nsw i32 %229, %19
  %231 = shl i32 %230, %22
  %232 = ashr i32 %231, %22
  %233 = icmp slt i32 %232, 0
  br i1 %233, label %243, label %234

234:                                              ; preds = %219
  %235 = icmp eq i32 %232, 0
  br i1 %235, label %251, label %236

236:                                              ; preds = %234
  %237 = icmp slt i32 %221, 0
  br i1 %237, label %242, label %238

238:                                              ; preds = %236
  %239 = sub nsw i32 %229, %223
  %240 = shl i32 %239, %22
  %241 = icmp slt i32 %240, 0
  br i1 %241, label %242, label %251

242:                                              ; preds = %238, %236
  br label %251

243:                                              ; preds = %219
  %244 = icmp slt i32 %220, 0
  br i1 %244, label %250, label %245

245:                                              ; preds = %243
  %246 = sub nsw i32 %229, %222
  %247 = shl i32 %246, %22
  %248 = ashr i32 %247, %22
  %249 = icmp sgt i32 %248, 0
  br i1 %249, label %250, label %251

250:                                              ; preds = %245, %243
  br label %251

251:                                              ; preds = %250, %245, %242, %238, %234
  %252 = phi i32 [ 3, %250 ], [ %220, %245 ], [ %220, %234 ], [ %220, %242 ], [ %220, %238 ]
  %253 = phi i32 [ %221, %250 ], [ %221, %245 ], [ %221, %234 ], [ 3, %242 ], [ %221, %238 ]
  %254 = phi i32 [ %229, %250 ], [ %222, %245 ], [ %222, %234 ], [ %222, %242 ], [ %222, %238 ]
  %255 = phi i32 [ %223, %250 ], [ %223, %245 ], [ %223, %234 ], [ %229, %242 ], [ %223, %238 ]
  %256 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 4
  %257 = load i8, i8* %256, align 1
  %258 = sext i8 %257 to i64
  %259 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %16, i64 0, i32 2, i32 0, i64 %258
  %260 = load i8, i8* %259, align 1
  %261 = zext i8 %260 to i32
  %262 = sub nsw i32 %261, %19
  %263 = shl i32 %262, %22
  %264 = ashr i32 %263, %22
  %265 = icmp slt i32 %264, 0
  br i1 %265, label %275, label %266

266:                                              ; preds = %251
  %267 = icmp eq i32 %264, 0
  br i1 %267, label %283, label %268

268:                                              ; preds = %266
  %269 = icmp slt i32 %253, 0
  br i1 %269, label %274, label %270

270:                                              ; preds = %268
  %271 = sub nsw i32 %261, %255
  %272 = shl i32 %271, %22
  %273 = icmp slt i32 %272, 0
  br i1 %273, label %274, label %283

274:                                              ; preds = %270, %268
  br label %283

275:                                              ; preds = %251
  %276 = icmp slt i32 %252, 0
  br i1 %276, label %282, label %277

277:                                              ; preds = %275
  %278 = sub nsw i32 %261, %254
  %279 = shl i32 %278, %22
  %280 = ashr i32 %279, %22
  %281 = icmp sgt i32 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %277, %275
  br label %283

283:                                              ; preds = %282, %277, %274, %270, %266
  %284 = phi i32 [ 4, %282 ], [ %252, %277 ], [ %252, %266 ], [ %252, %274 ], [ %252, %270 ]
  %285 = phi i32 [ %253, %282 ], [ %253, %277 ], [ %253, %266 ], [ 4, %274 ], [ %253, %270 ]
  %286 = phi i32 [ %261, %282 ], [ %254, %277 ], [ %254, %266 ], [ %254, %274 ], [ %254, %270 ]
  %287 = phi i32 [ %255, %282 ], [ %255, %277 ], [ %255, %266 ], [ %261, %274 ], [ %255, %270 ]
  %288 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 5
  %289 = load i8, i8* %288, align 1
  %290 = sext i8 %289 to i64
  %291 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %16, i64 0, i32 2, i32 0, i64 %290
  %292 = load i8, i8* %291, align 1
  %293 = zext i8 %292 to i32
  %294 = sub nsw i32 %293, %19
  %295 = shl i32 %294, %22
  %296 = ashr i32 %295, %22
  %297 = icmp slt i32 %296, 0
  br i1 %297, label %307, label %298

298:                                              ; preds = %283
  %299 = icmp eq i32 %296, 0
  br i1 %299, label %315, label %300

300:                                              ; preds = %298
  %301 = icmp slt i32 %285, 0
  br i1 %301, label %306, label %302

302:                                              ; preds = %300
  %303 = sub nsw i32 %293, %287
  %304 = shl i32 %303, %22
  %305 = icmp slt i32 %304, 0
  br i1 %305, label %306, label %315

306:                                              ; preds = %302, %300
  br label %315

307:                                              ; preds = %283
  %308 = icmp slt i32 %284, 0
  br i1 %308, label %314, label %309

309:                                              ; preds = %307
  %310 = sub nsw i32 %293, %286
  %311 = shl i32 %310, %22
  %312 = ashr i32 %311, %22
  %313 = icmp sgt i32 %312, 0
  br i1 %313, label %314, label %315

314:                                              ; preds = %309, %307
  br label %315

315:                                              ; preds = %314, %309, %306, %302, %298
  %316 = phi i32 [ 5, %314 ], [ %284, %309 ], [ %284, %298 ], [ %284, %306 ], [ %284, %302 ]
  %317 = phi i32 [ %285, %314 ], [ %285, %309 ], [ %285, %298 ], [ 5, %306 ], [ %285, %302 ]
  %318 = phi i32 [ %293, %314 ], [ %286, %309 ], [ %286, %298 ], [ %286, %306 ], [ %286, %302 ]
  %319 = phi i32 [ %287, %314 ], [ %287, %309 ], [ %287, %298 ], [ %293, %306 ], [ %287, %302 ]
  %320 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 6
  %321 = load i8, i8* %320, align 1
  %322 = sext i8 %321 to i64
  %323 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %16, i64 0, i32 2, i32 0, i64 %322
  %324 = load i8, i8* %323, align 1
  %325 = zext i8 %324 to i32
  %326 = sub nsw i32 %325, %19
  %327 = shl i32 %326, %22
  %328 = ashr i32 %327, %22
  %329 = icmp slt i32 %328, 0
  br i1 %329, label %339, label %330

330:                                              ; preds = %315
  %331 = icmp eq i32 %328, 0
  br i1 %331, label %347, label %332

332:                                              ; preds = %330
  %333 = icmp slt i32 %317, 0
  br i1 %333, label %338, label %334

334:                                              ; preds = %332
  %335 = sub nsw i32 %325, %319
  %336 = shl i32 %335, %22
  %337 = icmp slt i32 %336, 0
  br i1 %337, label %338, label %347

338:                                              ; preds = %334, %332
  br label %347

339:                                              ; preds = %315
  %340 = icmp slt i32 %316, 0
  br i1 %340, label %346, label %341

341:                                              ; preds = %339
  %342 = sub nsw i32 %325, %318
  %343 = shl i32 %342, %22
  %344 = ashr i32 %343, %22
  %345 = icmp sgt i32 %344, 0
  br i1 %345, label %346, label %52

346:                                              ; preds = %341, %339
  br label %52

347:                                              ; preds = %338, %334, %330
  %348 = phi i32 [ %317, %330 ], [ 6, %338 ], [ %317, %334 ]
  %349 = icmp slt i32 %316, 0
  br i1 %349, label %90, label %52
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser23ParseSkipModeParametersEv(%"class.libgav1::ObuParser"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = tail call zeroext i1 @_ZN7libgav19ObuParser17IsSkipModeAllowedEv(%"class.libgav1::ObuParser"* %0)
  br i1 %2, label %3, label %16

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %6 = bitcast %"class.libgav1::RawBitReader"* %5 to i32 (%"class.libgav1::RawBitReader"*)***
  %7 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %7, i64 2
  %9 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %8, align 8
  %10 = tail call i32 %9(%"class.libgav1::RawBitReader"* %5) #11
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %16, label %12

12:                                               ; preds = %3
  %13 = icmp ne i32 %10, 0
  %14 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 47
  %15 = zext i1 %13 to i8
  store i8 %15, i8* %14, align 4
  br label %16

16:                                               ; preds = %12, %3, %1
  %17 = phi i1 [ true, %1 ], [ true, %12 ], [ false, %3 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser22ParseGlobalParamSyntaxEiiRKNSt3__15arrayINS_12GlobalMotionELm8EEE(%"class.libgav1::ObuParser"* nocapture, i32, i32, %"struct.std::__1::array"* nocapture readonly dereferenceable(288)) local_unnamed_addr #1 align 2 {
  %5 = alloca i32, align 4
  %6 = sext i32 %1 to i64
  %7 = icmp slt i32 %2, 2
  br i1 %7, label %8, label %19

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 %6, i32 0
  %10 = load i8, i8* %9, align 4
  %11 = icmp eq i8 %10, 1
  br i1 %11, label %12, label %19

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 37
  %14 = load i8, i8* %13, align 1, !range !2
  %15 = xor i8 %14, 1
  %16 = zext i8 %15 to i32
  %17 = sub nuw nsw i32 9, %16
  %18 = xor i32 %16, 3
  br label %19

19:                                               ; preds = %8, %12, %4
  %20 = phi i32 [ %18, %12 ], [ 15, %4 ], [ 6, %8 ]
  %21 = phi i32 [ %17, %12 ], [ 12, %4 ], [ 12, %8 ]
  %22 = sub nsw i32 16, %20
  %23 = srem i32 %2, 3
  %24 = icmp eq i32 %23, 2
  %25 = shl i32 1, %20
  %26 = select i1 %24, i32 %25, i32 0
  %27 = shl i32 1, %21
  %28 = sext i32 %2 to i64
  %29 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 0, i32 0, i64 %6, i32 1, i64 %28
  %30 = load i32, i32* %29, align 4
  %31 = ashr i32 %30, %22
  %32 = sub nsw i32 %31, %26
  %33 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #11
  store i32 -1431655766, i32* %5, align 4
  %34 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %34, align 8
  %36 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %35, i64 0, i32 0
  %37 = sub nsw i32 0, %27
  %38 = add nsw i32 %27, 1
  %39 = call zeroext i1 @_ZN7libgav19BitReader31DecodeSignedSubexpWithReferenceEiiiiPi(%"class.libgav1::BitReader"* %36, i32 %37, i32 %38, i32 %32, i32 3, i32* nonnull %5) #11
  br i1 %39, label %40, label %46

40:                                               ; preds = %19
  %41 = select i1 %24, i32 65536, i32 0
  %42 = load i32, i32* %5, align 4
  %43 = shl i32 %42, %22
  %44 = add nsw i32 %43, %41
  %45 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 %6, i32 1, i64 %28
  store i32 %44, i32* %45, align 4
  br label %46

46:                                               ; preds = %19, %40
  %47 = phi i1 [ true, %40 ], [ false, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #11
  ret i1 %47
}

declare zeroext i1 @_ZN7libgav19BitReader31DecodeSignedSubexpWithReferenceEiiiiPi(%"class.libgav1::BitReader"*, i32, i32, i32, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser27ParseGlobalMotionParametersEv(%"class.libgav1::ObuParser"*) local_unnamed_addr #1 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 1, i32 0
  store i8 0, i8* %8, align 4
  %9 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 1, i32 1, i64 0
  %10 = bitcast i32* %9 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 65536, i32 0>, <4 x i32>* %10, align 4
  %11 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 1, i32 1, i64 4
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 1, i32 1, i64 5
  store i32 65536, i32* %12, align 4
  %13 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 2, i32 0
  store i8 0, i8* %13, align 4
  %14 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 2, i32 1, i64 0
  %15 = bitcast i32* %14 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 65536, i32 0>, <4 x i32>* %15, align 4
  %16 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 2, i32 1, i64 4
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 2, i32 1, i64 5
  store i32 65536, i32* %17, align 4
  %18 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 3, i32 0
  store i8 0, i8* %18, align 4
  %19 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 3, i32 1, i64 0
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 3, i32 1, i64 1
  %21 = bitcast i32* %20 to <4 x i32>*
  store <4 x i32> <i32 0, i32 65536, i32 0, i32 0>, <4 x i32>* %21, align 4
  %22 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 3, i32 1, i64 5
  store i32 65536, i32* %22, align 4
  %23 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 4, i32 0
  store i8 0, i8* %23, align 4
  %24 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 4, i32 1, i64 0
  %25 = bitcast i32* %24 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 65536, i32 0>, <4 x i32>* %25, align 4
  %26 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 4, i32 1, i64 4
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 4, i32 1, i64 5
  store i32 65536, i32* %27, align 4
  %28 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 5, i32 0
  store i8 0, i8* %28, align 4
  %29 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 5, i32 1, i64 0
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 5, i32 1, i64 1
  store i32 0, i32* %30, align 4
  %31 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 5, i32 1, i64 2
  store i32 65536, i32* %31, align 4
  %32 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 5, i32 1, i64 3
  store i32 0, i32* %32, align 4
  %33 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 5, i32 1, i64 4
  store i32 0, i32* %33, align 4
  %34 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 5, i32 1, i64 5
  store i32 65536, i32* %34, align 4
  %35 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 6, i32 0
  store i8 0, i8* %35, align 4
  %36 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 6, i32 1, i64 0
  %37 = bitcast i32* %36 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 65536, i32 0>, <4 x i32>* %37, align 4
  %38 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 6, i32 1, i64 4
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 6, i32 1, i64 5
  store i32 65536, i32* %39, align 4
  %40 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 7, i32 0
  store i8 0, i8* %40, align 4
  %41 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 7, i32 1, i64 0
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 65536, i32 0>, <4 x i32>* %42, align 4
  %43 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 7, i32 1, i64 4
  store i32 0, i32* %43, align 4
  %44 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 7, i32 1, i64 5
  store i32 65536, i32* %44, align 4
  %45 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 20
  %46 = load i8, i8* %45, align 8
  %47 = and i8 %46, -3
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %229, label %49

49:                                               ; preds = %1
  %50 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 27
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 7
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14
  br label %65

55:                                               ; preds = %49
  %56 = sext i8 %51 to i64
  %57 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 14
  %60 = load %"struct.libgav1::DecoderState"*, %"struct.libgav1::DecoderState"** %59, align 8
  %61 = sext i8 %58 to i64
  %62 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %60, i64 0, i32 5, i32 0, i64 %61, i32 0
  %63 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %62, align 8
  %64 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %63, i64 0, i32 25
  br label %65

65:                                               ; preds = %55, %53
  %66 = phi %"struct.std::__1::array"* [ %54, %53 ], [ %64, %55 ]
  %67 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = bitcast i32* %2 to i8*
  %69 = bitcast i32* %3 to i8*
  %70 = bitcast i32* %4 to i8*
  %71 = bitcast i32* %5 to i8*
  %72 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 37
  %73 = bitcast i32* %6 to i8*
  %74 = bitcast i32* %7 to i8*
  br label %75

75:                                               ; preds = %226, %65
  %76 = phi i64 [ 1, %65 ], [ %227, %226 ]
  %77 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 %76
  %78 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %67, align 8
  %79 = bitcast %"class.libgav1::RawBitReader"* %78 to i32 (%"class.libgav1::RawBitReader"*)***
  %80 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %79, align 8
  %81 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %80, i64 2
  %82 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %81, align 8
  %83 = call i32 %82(%"class.libgav1::RawBitReader"* %78) #11
  switch i32 %83, label %84 [
    i32 -1, label %229
    i32 0, label %101
  ]

84:                                               ; preds = %75
  %85 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %67, align 8
  %86 = bitcast %"class.libgav1::RawBitReader"* %85 to i32 (%"class.libgav1::RawBitReader"*)***
  %87 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %86, align 8
  %88 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %87, i64 2
  %89 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %88, align 8
  %90 = call i32 %89(%"class.libgav1::RawBitReader"* %85) #11
  switch i32 %90, label %91 [
    i32 -1, label %229
    i32 0, label %93
  ]

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"struct.libgav1::GlobalMotion", %"struct.libgav1::GlobalMotion"* %77, i64 0, i32 0
  store i8 2, i8* %92, align 4
  br label %109

93:                                               ; preds = %84
  %94 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %67, align 8
  %95 = bitcast %"class.libgav1::RawBitReader"* %94 to i32 (%"class.libgav1::RawBitReader"*)***
  %96 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %95, align 8
  %97 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %96, i64 2
  %98 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %97, align 8
  %99 = call i32 %98(%"class.libgav1::RawBitReader"* %94) #11
  %100 = icmp eq i32 %99, -1
  br i1 %100, label %229, label %103

101:                                              ; preds = %75
  %102 = getelementptr inbounds %"struct.libgav1::GlobalMotion", %"struct.libgav1::GlobalMotion"* %77, i64 0, i32 0
  store i8 0, i8* %102, align 4
  br label %226

103:                                              ; preds = %93
  %104 = icmp eq i32 %99, 0
  %105 = select i1 %104, i8 3, i8 1
  %106 = getelementptr inbounds %"struct.libgav1::GlobalMotion", %"struct.libgav1::GlobalMotion"* %77, i64 0, i32 0
  store i8 %105, i8* %106, align 4
  br i1 %104, label %109, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 %76, i32 0
  br label %174

109:                                              ; preds = %91, %103
  %110 = getelementptr inbounds %"struct.libgav1::GlobalMotion", %"struct.libgav1::GlobalMotion"* %77, i64 0, i32 0
  %111 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %66, i64 0, i32 0, i64 %76, i32 1, i64 2
  %112 = load i32, i32* %111, align 4
  %113 = ashr i32 %112, 1
  %114 = add nsw i32 %113, -32768
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %68) #11
  store i32 -1431655766, i32* %2, align 4
  %115 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %67, align 8
  %116 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %115, i64 0, i32 0
  %117 = call zeroext i1 @_ZN7libgav19BitReader31DecodeSignedSubexpWithReferenceEiiiiPi(%"class.libgav1::BitReader"* %116, i32 -4096, i32 4097, i32 %114, i32 3, i32* nonnull %2) #11
  br i1 %117, label %119, label %118

118:                                              ; preds = %109
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68) #11
  br label %229

119:                                              ; preds = %109
  %120 = load i32, i32* %2, align 4
  %121 = shl i32 %120, 1
  %122 = add nsw i32 %121, 65536
  %123 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 %76, i32 1, i64 2
  store i32 %122, i32* %123, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68) #11
  %124 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %66, i64 0, i32 0, i64 %76, i32 1, i64 3
  %125 = load i32, i32* %124, align 4
  %126 = ashr i32 %125, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69) #11
  store i32 -1431655766, i32* %3, align 4
  %127 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %67, align 8
  %128 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %127, i64 0, i32 0
  %129 = call zeroext i1 @_ZN7libgav19BitReader31DecodeSignedSubexpWithReferenceEiiiiPi(%"class.libgav1::BitReader"* %128, i32 -4096, i32 4097, i32 %126, i32 3, i32* nonnull %3) #11
  br i1 %129, label %131, label %130

130:                                              ; preds = %119
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69) #11
  br label %229

131:                                              ; preds = %119
  %132 = load i32, i32* %3, align 4
  %133 = shl i32 %132, 1
  %134 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 %76, i32 1, i64 3
  store i32 %133, i32* %134, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69) #11
  %135 = load i8, i8* %110, align 4
  %136 = icmp eq i8 %135, 3
  br i1 %136, label %137, label %163

137:                                              ; preds = %131
  %138 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %66, i64 0, i32 0, i64 %76, i32 1, i64 4
  %139 = load i32, i32* %138, align 4
  %140 = ashr i32 %139, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %70) #11
  store i32 -1431655766, i32* %4, align 4
  %141 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %67, align 8
  %142 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %141, i64 0, i32 0
  %143 = call zeroext i1 @_ZN7libgav19BitReader31DecodeSignedSubexpWithReferenceEiiiiPi(%"class.libgav1::BitReader"* %142, i32 -4096, i32 4097, i32 %140, i32 3, i32* nonnull %4) #11
  br i1 %143, label %145, label %144

144:                                              ; preds = %137
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %70) #11
  br label %229

145:                                              ; preds = %137
  %146 = load i32, i32* %4, align 4
  %147 = shl i32 %146, 1
  %148 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 %76, i32 1, i64 4
  store i32 %147, i32* %148, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %70) #11
  %149 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %66, i64 0, i32 0, i64 %76, i32 1, i64 5
  %150 = load i32, i32* %149, align 4
  %151 = ashr i32 %150, 1
  %152 = add nsw i32 %151, -32768
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %71) #11
  store i32 -1431655766, i32* %5, align 4
  %153 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %67, align 8
  %154 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %153, i64 0, i32 0
  %155 = call zeroext i1 @_ZN7libgav19BitReader31DecodeSignedSubexpWithReferenceEiiiiPi(%"class.libgav1::BitReader"* %154, i32 -4096, i32 4097, i32 %152, i32 3, i32* nonnull %5) #11
  br i1 %155, label %156, label %162

156:                                              ; preds = %145
  %157 = load i32, i32* %5, align 4
  %158 = shl i32 %157, 1
  %159 = add nsw i32 %158, 65536
  %160 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 %76, i32 1, i64 5
  store i32 %159, i32* %160, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %71) #11
  %161 = load i8, i8* %110, align 4
  br label %168

162:                                              ; preds = %145
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %71) #11
  br label %229

163:                                              ; preds = %131
  %164 = sub nsw i32 0, %133
  %165 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 %76, i32 1, i64 4
  store i32 %164, i32* %165, align 4
  %166 = load i32, i32* %123, align 4
  %167 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 %76, i32 1, i64 5
  store i32 %166, i32* %167, align 4
  br label %168

168:                                              ; preds = %156, %163
  %169 = phi i8 [ %135, %163 ], [ %161, %156 ]
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %226, label %171

171:                                              ; preds = %168
  %172 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 %76, i32 0
  %173 = icmp eq i8 %169, 1
  br i1 %173, label %174, label %181

174:                                              ; preds = %107, %171
  %175 = phi i8* [ %108, %107 ], [ %172, %171 ]
  %176 = load i8, i8* %72, align 1, !range !2
  %177 = xor i8 %176, 1
  %178 = zext i8 %177 to i32
  %179 = sub nuw nsw i32 9, %178
  %180 = xor i32 %178, 3
  br label %181

181:                                              ; preds = %174, %171
  %182 = phi i8* [ %175, %174 ], [ %172, %171 ]
  %183 = phi i32 [ %180, %174 ], [ 6, %171 ]
  %184 = phi i32 [ %179, %174 ], [ 12, %171 ]
  %185 = sub nsw i32 16, %183
  %186 = shl i32 1, %184
  %187 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %66, i64 0, i32 0, i64 %76, i32 1, i64 0
  %188 = load i32, i32* %187, align 4
  %189 = ashr i32 %188, %185
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %73) #11
  store i32 -1431655766, i32* %6, align 4
  %190 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %67, align 8
  %191 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %190, i64 0, i32 0
  %192 = sub nsw i32 0, %186
  %193 = add nsw i32 %186, 1
  %194 = call zeroext i1 @_ZN7libgav19BitReader31DecodeSignedSubexpWithReferenceEiiiiPi(%"class.libgav1::BitReader"* %191, i32 %192, i32 %193, i32 %189, i32 3, i32* nonnull %6) #11
  br i1 %194, label %196, label %195

195:                                              ; preds = %181
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %73) #11
  br label %229

196:                                              ; preds = %181
  %197 = load i32, i32* %6, align 4
  %198 = shl i32 %197, %185
  %199 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 %76, i32 1, i64 0
  store i32 %198, i32* %199, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %73) #11
  %200 = load i8, i8* %182, align 4
  %201 = icmp eq i8 %200, 1
  br i1 %201, label %202, label %208

202:                                              ; preds = %196
  %203 = load i8, i8* %72, align 1, !range !2
  %204 = xor i8 %203, 1
  %205 = zext i8 %204 to i32
  %206 = sub nuw nsw i32 9, %205
  %207 = xor i32 %205, 3
  br label %208

208:                                              ; preds = %202, %196
  %209 = phi i32 [ %207, %202 ], [ 6, %196 ]
  %210 = phi i32 [ %206, %202 ], [ 12, %196 ]
  %211 = sub nsw i32 16, %209
  %212 = shl i32 1, %210
  %213 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %66, i64 0, i32 0, i64 %76, i32 1, i64 1
  %214 = load i32, i32* %213, align 4
  %215 = ashr i32 %214, %211
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74) #11
  store i32 -1431655766, i32* %7, align 4
  %216 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %67, align 8
  %217 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %216, i64 0, i32 0
  %218 = sub nsw i32 0, %212
  %219 = add nsw i32 %212, 1
  %220 = call zeroext i1 @_ZN7libgav19BitReader31DecodeSignedSubexpWithReferenceEiiiiPi(%"class.libgav1::BitReader"* %217, i32 %218, i32 %219, i32 %215, i32 3, i32* nonnull %7) #11
  br i1 %220, label %221, label %225

221:                                              ; preds = %208
  %222 = load i32, i32* %7, align 4
  %223 = shl i32 %222, %211
  %224 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14, i32 0, i64 %76, i32 1, i64 1
  store i32 %223, i32* %224, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74) #11
  br label %226

225:                                              ; preds = %208
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74) #11
  br label %229

226:                                              ; preds = %101, %221, %168
  %227 = add nuw nsw i64 %76, 1
  %228 = icmp eq i64 %227, 8
  br i1 %228, label %229, label %75

229:                                              ; preds = %75, %84, %93, %226, %130, %118, %162, %144, %225, %195, %1
  %230 = phi i1 [ true, %1 ], [ false, %130 ], [ false, %118 ], [ false, %162 ], [ false, %144 ], [ false, %225 ], [ false, %195 ], [ true, %226 ], [ false, %93 ], [ false, %84 ], [ false, %75 ]
  ret i1 %230
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser24ParseFilmGrainParametersEv(%"class.libgav1::ObuParser"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 41
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %516, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 21
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 22
  %11 = load i8, i8* %10, align 2, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %516, label %13

13:                                               ; preds = %9, %5
  %14 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %14, align 8
  %16 = bitcast %"class.libgav1::RawBitReader"* %15 to i32 (%"class.libgav1::RawBitReader"*)***
  %17 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %16, align 8
  %18 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %17, i64 2
  %19 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %18, align 8
  %20 = tail call i32 %19(%"class.libgav1::RawBitReader"* %15) #11
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %516, label %22

22:                                               ; preds = %13
  %23 = icmp ne i32 %20, 0
  %24 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 0
  %25 = zext i1 %23 to i8
  store i8 %25, i8* %24, align 4
  br i1 %23, label %26, label %516

26:                                               ; preds = %22
  %27 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %14, align 8
  %28 = bitcast %"class.libgav1::RawBitReader"* %27 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %29 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %28, align 8
  %30 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %29, i64 3
  %31 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %30, align 8
  %32 = tail call i64 %31(%"class.libgav1::RawBitReader"* %27, i32 16) #11
  %33 = icmp eq i64 %32, -1
  br i1 %33, label %516, label %34

34:                                               ; preds = %26
  %35 = trunc i64 %32 to i16
  %36 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 20
  store i16 %35, i16* %36, align 2
  %37 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 1
  store i8 1, i8* %37, align 1
  %38 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 20
  %39 = load i8, i8* %38, align 8
  %40 = icmp eq i8 %39, 1
  %41 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %14, align 8
  br i1 %40, label %47, label %42

42:                                               ; preds = %34
  %43 = bitcast %"class.libgav1::RawBitReader"* %41 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %44 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %43, align 8
  %45 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %44, i64 3
  %46 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %45, align 8
  br label %86

47:                                               ; preds = %34
  %48 = bitcast %"class.libgav1::RawBitReader"* %41 to i32 (%"class.libgav1::RawBitReader"*)***
  %49 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %48, align 8
  %50 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %49, i64 2
  %51 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %50, align 8
  %52 = tail call i32 %51(%"class.libgav1::RawBitReader"* %41) #11
  %53 = icmp eq i32 %52, -1
  br i1 %53, label %516, label %54

54:                                               ; preds = %47
  %55 = icmp ne i32 %52, 0
  %56 = zext i1 %55 to i8
  store i8 %56, i8* %37, align 1
  %57 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %14, align 8
  %58 = bitcast %"class.libgav1::RawBitReader"* %57 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %59 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %58, align 8
  %60 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %59, i64 3
  %61 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %60, align 8
  br i1 %55, label %86, label %62

62:                                               ; preds = %54
  %63 = tail call i64 %61(%"class.libgav1::RawBitReader"* %57, i32 3) #11
  %64 = icmp eq i64 %63, -1
  br i1 %64, label %516, label %65

65:                                               ; preds = %62
  %66 = trunc i64 %63 to i32
  %67 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 21
  store i32 %66, i32* %67, align 4
  %68 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 0
  %69 = load i8, i8* %68, align 1
  %70 = sext i8 %69 to i32
  %71 = icmp eq i32 %66, %70
  br i1 %71, label %72, label %518

72:                                               ; preds = %548, %542, %536, %530, %524, %518, %65
  %73 = phi i1 [ %71, %65 ], [ %523, %518 ], [ %529, %524 ], [ %535, %530 ], [ %541, %536 ], [ %547, %542 ], [ %553, %548 ]
  br i1 %73, label %74, label %516

74:                                               ; preds = %72
  %75 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 14
  %76 = load %"struct.libgav1::DecoderState"*, %"struct.libgav1::DecoderState"** %75, align 8
  %77 = shl i64 %63, 32
  %78 = ashr exact i64 %77, 32
  %79 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %76, i64 0, i32 5, i32 0, i64 %78, i32 0
  %80 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %79, align 8
  %81 = icmp eq %"class.libgav1::RefCountedBuffer"* %80, null
  br i1 %81, label %516, label %82

82:                                               ; preds = %74
  %83 = load i16, i16* %36, align 2
  %84 = load i8, i8* %37, align 1, !range !2
  %85 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %80, i64 0, i32 31, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %85, i64 172, i1 false)
  store i16 %83, i16* %36, align 2
  store i8 %84, i8* %37, align 1
  store i32 %66, i32* %67, align 4
  br label %516

86:                                               ; preds = %54, %42
  %87 = phi i64 (%"class.libgav1::RawBitReader"*, i32)* [ %46, %42 ], [ %61, %54 ]
  %88 = phi %"class.libgav1::RawBitReader"* [ %41, %42 ], [ %57, %54 ]
  %89 = tail call i64 %87(%"class.libgav1::RawBitReader"* %88, i32 4) #11
  %90 = icmp eq i64 %89, -1
  br i1 %90, label %516, label %91

91:                                               ; preds = %86
  %92 = trunc i64 %89 to i8
  %93 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 5
  store i8 %92, i8* %93, align 1
  %94 = and i64 %89, 255
  %95 = icmp ugt i64 %94, 14
  br i1 %95, label %516, label %96

96:                                               ; preds = %91
  %97 = icmp eq i8 %92, 0
  br i1 %97, label %134, label %98

98:                                               ; preds = %96, %127
  %99 = phi i64 [ %130, %127 ], [ 0, %96 ]
  %100 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %14, align 8
  %101 = bitcast %"class.libgav1::RawBitReader"* %100 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %102 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %101, align 8
  %103 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %102, i64 3
  %104 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %103, align 8
  %105 = tail call i64 %104(%"class.libgav1::RawBitReader"* %100, i32 8) #11
  %106 = icmp eq i64 %105, -1
  br i1 %106, label %516, label %107

107:                                              ; preds = %98
  %108 = trunc i64 %105 to i8
  %109 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 8, i64 %99
  store i8 %108, i8* %109, align 1
  %110 = icmp eq i64 %99, 0
  br i1 %110, label %119, label %111

111:                                              ; preds = %107
  %112 = add nsw i64 %99, -1
  %113 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 8, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = trunc i64 %105 to i32
  %117 = and i32 %116, 255
  %118 = icmp ugt i32 %117, %115
  br i1 %118, label %119, label %516

119:                                              ; preds = %111, %107
  %120 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %14, align 8
  %121 = bitcast %"class.libgav1::RawBitReader"* %120 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %122 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %121, align 8
  %123 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %122, i64 3
  %124 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %123, align 8
  %125 = tail call i64 %124(%"class.libgav1::RawBitReader"* %120, i32 8) #11
  %126 = icmp eq i64 %125, -1
  br i1 %126, label %516, label %127

127:                                              ; preds = %119
  %128 = trunc i64 %125 to i8
  %129 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 9, i64 %99
  store i8 %128, i8* %129, align 1
  %130 = add nuw nsw i64 %99, 1
  %131 = load i8, i8* %93, align 1
  %132 = zext i8 %131 to i64
  %133 = icmp ult i64 %130, %132
  br i1 %133, label %98, label %134

134:                                              ; preds = %127, %96
  %135 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 33, i32 1
  %136 = load i8, i8* %135, align 1, !range !2
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 2
  store i8 0, i8* %139, align 2
  br label %166

140:                                              ; preds = %134
  %141 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %14, align 8
  %142 = bitcast %"class.libgav1::RawBitReader"* %141 to i32 (%"class.libgav1::RawBitReader"*)***
  %143 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %142, align 8
  %144 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %143, i64 2
  %145 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %144, align 8
  %146 = tail call i32 %145(%"class.libgav1::RawBitReader"* %141) #11
  %147 = icmp eq i32 %146, -1
  br i1 %147, label %516, label %148

148:                                              ; preds = %140
  %149 = icmp ne i32 %146, 0
  %150 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 2
  %151 = zext i1 %149 to i8
  store i8 %151, i8* %150, align 2
  %152 = load i8, i8* %135, align 1
  %153 = icmp ne i8 %152, 0
  %154 = or i1 %153, %149
  br i1 %154, label %166, label %155

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 33, i32 6
  %157 = load i8, i8* %156, align 4
  %158 = icmp eq i8 %157, 1
  br i1 %158, label %159, label %169

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 33, i32 7
  %161 = load i8, i8* %160, align 1
  %162 = icmp eq i8 %161, 1
  br i1 %162, label %163, label %169

163:                                              ; preds = %159
  %164 = load i8, i8* %93, align 1
  %165 = icmp eq i8 %164, 0
  br i1 %165, label %166, label %169

166:                                              ; preds = %148, %138, %163
  %167 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 6
  store i8 0, i8* %167, align 2
  %168 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 7
  store i8 0, i8* %168, align 1
  br label %288

169:                                              ; preds = %163, %159, %155
  %170 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %14, align 8
  %171 = bitcast %"class.libgav1::RawBitReader"* %170 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %172 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %171, align 8
  %173 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %172, i64 3
  %174 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %173, align 8
  %175 = tail call i64 %174(%"class.libgav1::RawBitReader"* %170, i32 4) #11
  %176 = icmp eq i64 %175, -1
  br i1 %176, label %516, label %177

177:                                              ; preds = %169
  %178 = trunc i64 %175 to i8
  %179 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 6
  store i8 %178, i8* %179, align 2
  %180 = and i64 %175, 255
  %181 = icmp ugt i64 %180, 10
  br i1 %181, label %516, label %182

182:                                              ; preds = %177
  %183 = icmp eq i8 %178, 0
  %184 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %14, align 8
  %185 = bitcast %"class.libgav1::RawBitReader"* %184 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %186 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %185, align 8
  %187 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %186, i64 3
  %188 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %187, align 8
  br i1 %183, label %227, label %189

189:                                              ; preds = %182, %215
  %190 = phi i64 [ %218, %215 ], [ 0, %182 ]
  %191 = phi i64 (%"class.libgav1::RawBitReader"*, i32)* [ %226, %215 ], [ %188, %182 ]
  %192 = phi %"class.libgav1::RawBitReader"* [ %222, %215 ], [ %184, %182 ]
  %193 = tail call i64 %191(%"class.libgav1::RawBitReader"* %192, i32 8) #11
  %194 = icmp eq i64 %193, -1
  br i1 %194, label %516, label %195

195:                                              ; preds = %189
  %196 = trunc i64 %193 to i8
  %197 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 10, i64 %190
  store i8 %196, i8* %197, align 1
  %198 = icmp eq i64 %190, 0
  br i1 %198, label %207, label %199

199:                                              ; preds = %195
  %200 = add nsw i64 %190, -1
  %201 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 10, i64 %200
  %202 = load i8, i8* %201, align 1
  %203 = zext i8 %202 to i32
  %204 = trunc i64 %193 to i32
  %205 = and i32 %204, 255
  %206 = icmp ugt i32 %205, %203
  br i1 %206, label %207, label %516

207:                                              ; preds = %199, %195
  %208 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %14, align 8
  %209 = bitcast %"class.libgav1::RawBitReader"* %208 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %210 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %209, align 8
  %211 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %210, i64 3
  %212 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %211, align 8
  %213 = tail call i64 %212(%"class.libgav1::RawBitReader"* %208, i32 8) #11
  %214 = icmp eq i64 %213, -1
  br i1 %214, label %516, label %215

215:                                              ; preds = %207
  %216 = trunc i64 %213 to i8
  %217 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 11, i64 %190
  store i8 %216, i8* %217, align 1
  %218 = add nuw nsw i64 %190, 1
  %219 = load i8, i8* %179, align 2
  %220 = zext i8 %219 to i64
  %221 = icmp ult i64 %218, %220
  %222 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %14, align 8
  %223 = bitcast %"class.libgav1::RawBitReader"* %222 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %224 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %223, align 8
  %225 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %224, i64 3
  %226 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %225, align 8
  br i1 %221, label %189, label %227

227:                                              ; preds = %215, %182
  %228 = phi %"class.libgav1::RawBitReader"* [ %184, %182 ], [ %222, %215 ]
  %229 = phi i64 (%"class.libgav1::RawBitReader"*, i32)* [ %188, %182 ], [ %226, %215 ]
  %230 = tail call i64 %229(%"class.libgav1::RawBitReader"* %228, i32 4) #11
  %231 = icmp eq i64 %230, -1
  br i1 %231, label %516, label %232

232:                                              ; preds = %227
  %233 = trunc i64 %230 to i8
  %234 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 7
  store i8 %233, i8* %234, align 1
  %235 = trunc i64 %230 to i32
  %236 = and i32 %235, 255
  %237 = icmp ugt i32 %236, 10
  br i1 %237, label %516, label %238

238:                                              ; preds = %232
  %239 = load i8, i8* %156, align 4
  %240 = icmp eq i8 %239, 1
  br i1 %240, label %241, label %250

241:                                              ; preds = %238
  %242 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 33, i32 7
  %243 = load i8, i8* %242, align 1
  %244 = icmp eq i8 %243, 1
  br i1 %244, label %245, label %250

245:                                              ; preds = %241
  %246 = load i8, i8* %179, align 2
  %247 = icmp eq i8 %246, 0
  %248 = icmp eq i32 %236, 0
  %249 = xor i1 %248, %247
  br i1 %249, label %516, label %250

250:                                              ; preds = %245, %241, %238
  %251 = icmp eq i8 %233, 0
  br i1 %251, label %288, label %252

252:                                              ; preds = %250, %281
  %253 = phi i64 [ %284, %281 ], [ 0, %250 ]
  %254 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %14, align 8
  %255 = bitcast %"class.libgav1::RawBitReader"* %254 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %256 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %255, align 8
  %257 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %256, i64 3
  %258 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %257, align 8
  %259 = tail call i64 %258(%"class.libgav1::RawBitReader"* %254, i32 8) #11
  %260 = icmp eq i64 %259, -1
  br i1 %260, label %516, label %261

261:                                              ; preds = %252
  %262 = trunc i64 %259 to i8
  %263 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 12, i64 %253
  store i8 %262, i8* %263, align 1
  %264 = icmp eq i64 %253, 0
  br i1 %264, label %273, label %265

265:                                              ; preds = %261
  %266 = add nsw i64 %253, -1
  %267 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 12, i64 %266
  %268 = load i8, i8* %267, align 1
  %269 = zext i8 %268 to i32
  %270 = trunc i64 %259 to i32
  %271 = and i32 %270, 255
  %272 = icmp ugt i32 %271, %269
  br i1 %272, label %273, label %516

273:                                              ; preds = %265, %261
  %274 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %14, align 8
  %275 = bitcast %"class.libgav1::RawBitReader"* %274 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %276 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %275, align 8
  %277 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %276, i64 3
  %278 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %277, align 8
  %279 = tail call i64 %278(%"class.libgav1::RawBitReader"* %274, i32 8) #11
  %280 = icmp eq i64 %279, -1
  br i1 %280, label %516, label %281

281:                                              ; preds = %273
  %282 = trunc i64 %279 to i8
  %283 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 13, i64 %253
  store i8 %282, i8* %283, align 1
  %284 = add nuw nsw i64 %253, 1
  %285 = load i8, i8* %234, align 1
  %286 = zext i8 %285 to i64
  %287 = icmp ult i64 %284, %286
  br i1 %287, label %252, label %288

288:                                              ; preds = %281, %250, %166
  %289 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %14, align 8
  %290 = bitcast %"class.libgav1::RawBitReader"* %289 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %291 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %290, align 8
  %292 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %291, i64 3
  %293 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %292, align 8
  %294 = tail call i64 %293(%"class.libgav1::RawBitReader"* %289, i32 2) #11
  %295 = icmp eq i64 %294, -1
  br i1 %295, label %516, label %296

296:                                              ; preds = %288
  %297 = trunc i64 %294 to i8
  %298 = add i8 %297, 8
  %299 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 14
  store i8 %298, i8* %299, align 4
  %300 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %14, align 8
  %301 = bitcast %"class.libgav1::RawBitReader"* %300 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %302 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %301, align 8
  %303 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %302, i64 3
  %304 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %303, align 8
  %305 = tail call i64 %304(%"class.libgav1::RawBitReader"* %300, i32 2) #11
  %306 = icmp eq i64 %305, -1
  br i1 %306, label %516, label %307

307:                                              ; preds = %296
  %308 = trunc i64 %305 to i8
  %309 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 15
  store i8 %308, i8* %309, align 1
  %310 = trunc i64 %305 to i32
  %311 = shl i32 %310, 1
  %312 = and i32 %311, 510
  %313 = and i32 %310, 255
  %314 = add nuw nsw i32 %313, 1
  %315 = mul nuw nsw i32 %312, %314
  %316 = load i8, i8* %93, align 1
  %317 = icmp eq i8 %316, 0
  br i1 %317, label %338, label %318

318:                                              ; preds = %307
  %319 = or i32 %315, 1
  %320 = icmp eq i32 %315, 0
  br i1 %320, label %338, label %321

321:                                              ; preds = %318
  %322 = zext i32 %315 to i64
  br label %323

323:                                              ; preds = %332, %321
  %324 = phi i64 [ 0, %321 ], [ %336, %332 ]
  %325 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %14, align 8
  %326 = bitcast %"class.libgav1::RawBitReader"* %325 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %327 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %326, align 8
  %328 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %327, i64 3
  %329 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %328, align 8
  %330 = tail call i64 %329(%"class.libgav1::RawBitReader"* %325, i32 8) #11
  %331 = icmp eq i64 %330, -1
  br i1 %331, label %516, label %332

332:                                              ; preds = %323
  %333 = trunc i64 %330 to i8
  %334 = xor i8 %333, -128
  %335 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 16, i64 %324
  store i8 %334, i8* %335, align 1
  %336 = add nuw nsw i64 %324, 1
  %337 = icmp eq i64 %336, %322
  br i1 %337, label %338, label %323

338:                                              ; preds = %332, %318, %307
  %339 = phi i32 [ %315, %307 ], [ 1, %318 ], [ %319, %332 ]
  %340 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 2
  %341 = load i8, i8* %340, align 2, !range !2
  %342 = icmp eq i8 %341, 0
  br i1 %342, label %343, label %349

343:                                              ; preds = %338
  %344 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 6
  %345 = load i8, i8* %344, align 2
  %346 = icmp ne i8 %345, 0
  %347 = icmp sgt i32 %339, 0
  %348 = and i1 %346, %347
  br i1 %348, label %351, label %371

349:                                              ; preds = %338
  %350 = icmp sgt i32 %339, 0
  br i1 %350, label %351, label %396

351:                                              ; preds = %349, %343
  %352 = zext i32 %339 to i64
  br label %353

353:                                              ; preds = %351, %362
  %354 = phi i64 [ 0, %351 ], [ %366, %362 ]
  %355 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %14, align 8
  %356 = bitcast %"class.libgav1::RawBitReader"* %355 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %357 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %356, align 8
  %358 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %357, i64 3
  %359 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %358, align 8
  %360 = tail call i64 %359(%"class.libgav1::RawBitReader"* %355, i32 8) #11
  %361 = icmp eq i64 %360, -1
  br i1 %361, label %516, label %362

362:                                              ; preds = %353
  %363 = trunc i64 %360 to i8
  %364 = xor i8 %363, -128
  %365 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 17, i64 %354
  store i8 %364, i8* %365, align 1
  %366 = add nuw nsw i64 %354, 1
  %367 = icmp ult i64 %366, %352
  br i1 %367, label %353, label %368

368:                                              ; preds = %362
  %369 = load i8, i8* %340, align 2, !range !2
  %370 = icmp eq i8 %369, 0
  br i1 %370, label %371, label %377

371:                                              ; preds = %343, %368
  %372 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 7
  %373 = load i8, i8* %372, align 1
  %374 = icmp ne i8 %373, 0
  %375 = icmp sgt i32 %339, 0
  %376 = and i1 %374, %375
  br i1 %376, label %379, label %396

377:                                              ; preds = %368
  %378 = icmp sgt i32 %339, 0
  br i1 %378, label %379, label %396

379:                                              ; preds = %377, %371
  %380 = zext i32 %339 to i64
  br label %381

381:                                              ; preds = %379, %390
  %382 = phi i64 [ 0, %379 ], [ %394, %390 ]
  %383 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %14, align 8
  %384 = bitcast %"class.libgav1::RawBitReader"* %383 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %385 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %384, align 8
  %386 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %385, i64 3
  %387 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %386, align 8
  %388 = tail call i64 %387(%"class.libgav1::RawBitReader"* %383, i32 8) #11
  %389 = icmp eq i64 %388, -1
  br i1 %389, label %516, label %390

390:                                              ; preds = %381
  %391 = trunc i64 %388 to i8
  %392 = xor i8 %391, -128
  %393 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 18, i64 %382
  store i8 %392, i8* %393, align 1
  %394 = add nuw nsw i64 %382, 1
  %395 = icmp ult i64 %394, %380
  br i1 %395, label %381, label %396

396:                                              ; preds = %390, %349, %371, %377
  %397 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %14, align 8
  %398 = bitcast %"class.libgav1::RawBitReader"* %397 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %399 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %398, align 8
  %400 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %399, i64 3
  %401 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %400, align 8
  %402 = tail call i64 %401(%"class.libgav1::RawBitReader"* %397, i32 2) #11
  %403 = icmp eq i64 %402, -1
  br i1 %403, label %516, label %404

404:                                              ; preds = %396
  %405 = trunc i64 %402 to i8
  %406 = add i8 %405, 6
  %407 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 19
  store i8 %406, i8* %407, align 4
  %408 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %14, align 8
  %409 = bitcast %"class.libgav1::RawBitReader"* %408 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %410 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %409, align 8
  %411 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %410, i64 3
  %412 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %411, align 8
  %413 = tail call i64 %412(%"class.libgav1::RawBitReader"* %408, i32 2) #11
  %414 = icmp eq i64 %413, -1
  br i1 %414, label %516, label %415

415:                                              ; preds = %404
  %416 = trunc i64 %413 to i32
  %417 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 22
  store i32 %416, i32* %417, align 4
  %418 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 6
  %419 = load i8, i8* %418, align 2
  %420 = icmp eq i8 %419, 0
  br i1 %420, label %455, label %421

421:                                              ; preds = %415
  %422 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %14, align 8
  %423 = bitcast %"class.libgav1::RawBitReader"* %422 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %424 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %423, align 8
  %425 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %424, i64 3
  %426 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %425, align 8
  %427 = tail call i64 %426(%"class.libgav1::RawBitReader"* %422, i32 8) #11
  %428 = icmp eq i64 %427, -1
  br i1 %428, label %516, label %429

429:                                              ; preds = %421
  %430 = trunc i64 %427 to i8
  %431 = xor i8 %430, -128
  %432 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 23
  store i8 %431, i8* %432, align 4
  %433 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %14, align 8
  %434 = bitcast %"class.libgav1::RawBitReader"* %433 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %435 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %434, align 8
  %436 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %435, i64 3
  %437 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %436, align 8
  %438 = tail call i64 %437(%"class.libgav1::RawBitReader"* %433, i32 8) #11
  %439 = icmp eq i64 %438, -1
  br i1 %439, label %516, label %440

440:                                              ; preds = %429
  %441 = trunc i64 %438 to i8
  %442 = xor i8 %441, -128
  %443 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 24
  store i8 %442, i8* %443, align 1
  %444 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %14, align 8
  %445 = bitcast %"class.libgav1::RawBitReader"* %444 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %446 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %445, align 8
  %447 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %446, i64 3
  %448 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %447, align 8
  %449 = tail call i64 %448(%"class.libgav1::RawBitReader"* %444, i32 9) #11
  %450 = icmp eq i64 %449, -1
  br i1 %450, label %516, label %451

451:                                              ; preds = %440
  %452 = trunc i64 %449 to i16
  %453 = add i16 %452, -256
  %454 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 25
  store i16 %453, i16* %454, align 2
  br label %455

455:                                              ; preds = %415, %451
  %456 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 7
  %457 = load i8, i8* %456, align 1
  %458 = icmp eq i8 %457, 0
  br i1 %458, label %493, label %459

459:                                              ; preds = %455
  %460 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %14, align 8
  %461 = bitcast %"class.libgav1::RawBitReader"* %460 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %462 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %461, align 8
  %463 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %462, i64 3
  %464 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %463, align 8
  %465 = tail call i64 %464(%"class.libgav1::RawBitReader"* %460, i32 8) #11
  %466 = icmp eq i64 %465, -1
  br i1 %466, label %516, label %467

467:                                              ; preds = %459
  %468 = trunc i64 %465 to i8
  %469 = xor i8 %468, -128
  %470 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 26
  store i8 %469, i8* %470, align 4
  %471 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %14, align 8
  %472 = bitcast %"class.libgav1::RawBitReader"* %471 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %473 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %472, align 8
  %474 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %473, i64 3
  %475 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %474, align 8
  %476 = tail call i64 %475(%"class.libgav1::RawBitReader"* %471, i32 8) #11
  %477 = icmp eq i64 %476, -1
  br i1 %477, label %516, label %478

478:                                              ; preds = %467
  %479 = trunc i64 %476 to i8
  %480 = xor i8 %479, -128
  %481 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 27
  store i8 %480, i8* %481, align 1
  %482 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %14, align 8
  %483 = bitcast %"class.libgav1::RawBitReader"* %482 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %484 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %483, align 8
  %485 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %484, i64 3
  %486 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %485, align 8
  %487 = tail call i64 %486(%"class.libgav1::RawBitReader"* %482, i32 9) #11
  %488 = icmp eq i64 %487, -1
  br i1 %488, label %516, label %489

489:                                              ; preds = %478
  %490 = trunc i64 %487 to i16
  %491 = add i16 %490, -256
  %492 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 28
  store i16 %491, i16* %492, align 2
  br label %493

493:                                              ; preds = %455, %489
  %494 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %14, align 8
  %495 = bitcast %"class.libgav1::RawBitReader"* %494 to i32 (%"class.libgav1::RawBitReader"*)***
  %496 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %495, align 8
  %497 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %496, i64 2
  %498 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %497, align 8
  %499 = tail call i32 %498(%"class.libgav1::RawBitReader"* %494) #11
  %500 = icmp eq i32 %499, -1
  br i1 %500, label %516, label %501

501:                                              ; preds = %493
  %502 = icmp ne i32 %499, 0
  %503 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 3
  %504 = zext i1 %502 to i8
  store i8 %504, i8* %503, align 1
  %505 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %14, align 8
  %506 = bitcast %"class.libgav1::RawBitReader"* %505 to i32 (%"class.libgav1::RawBitReader"*)***
  %507 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %506, align 8
  %508 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %507, i64 2
  %509 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %508, align 8
  %510 = tail call i32 %509(%"class.libgav1::RawBitReader"* %505) #11
  %511 = icmp eq i32 %510, -1
  br i1 %511, label %516, label %512

512:                                              ; preds = %501
  %513 = icmp ne i32 %510, 0
  %514 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 4
  %515 = zext i1 %513 to i8
  store i8 %515, i8* %514, align 4
  br label %516

516:                                              ; preds = %119, %111, %98, %207, %199, %189, %273, %265, %252, %323, %353, %381, %72, %13, %22, %26, %47, %62, %82, %74, %86, %91, %140, %169, %177, %227, %232, %245, %288, %296, %501, %493, %478, %467, %459, %440, %429, %421, %404, %396, %512, %1, %9
  %517 = phi i1 [ true, %9 ], [ true, %1 ], [ false, %13 ], [ true, %22 ], [ false, %26 ], [ false, %47 ], [ false, %62 ], [ false, %72 ], [ true, %82 ], [ false, %74 ], [ false, %86 ], [ false, %91 ], [ false, %140 ], [ false, %169 ], [ false, %177 ], [ false, %227 ], [ false, %232 ], [ false, %245 ], [ false, %288 ], [ false, %296 ], [ true, %512 ], [ false, %396 ], [ false, %404 ], [ false, %421 ], [ false, %429 ], [ false, %440 ], [ false, %459 ], [ false, %467 ], [ false, %478 ], [ false, %493 ], [ false, %501 ], [ false, %381 ], [ false, %353 ], [ false, %323 ], [ false, %252 ], [ false, %265 ], [ false, %273 ], [ false, %189 ], [ false, %199 ], [ false, %207 ], [ false, %98 ], [ false, %111 ], [ false, %119 ]
  ret i1 %517

518:                                              ; preds = %65
  %519 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 1
  %520 = load i8, i8* %519, align 1
  %521 = sext i8 %520 to i32
  %522 = icmp eq i32 %66, %521
  %523 = or i1 %522, %71
  br i1 %522, label %72, label %524

524:                                              ; preds = %518
  %525 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 2
  %526 = load i8, i8* %525, align 1
  %527 = sext i8 %526 to i32
  %528 = icmp eq i32 %66, %527
  %529 = or i1 %528, %523
  br i1 %528, label %72, label %530

530:                                              ; preds = %524
  %531 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 3
  %532 = load i8, i8* %531, align 1
  %533 = sext i8 %532 to i32
  %534 = icmp eq i32 %66, %533
  %535 = or i1 %534, %529
  br i1 %534, label %72, label %536

536:                                              ; preds = %530
  %537 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 4
  %538 = load i8, i8* %537, align 1
  %539 = sext i8 %538 to i32
  %540 = icmp eq i32 %66, %539
  %541 = or i1 %540, %535
  br i1 %540, label %72, label %542

542:                                              ; preds = %536
  %543 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 5
  %544 = load i8, i8* %543, align 1
  %545 = sext i8 %544 to i32
  %546 = icmp eq i32 %66, %545
  %547 = or i1 %546, %541
  br i1 %546, label %72, label %548

548:                                              ; preds = %542
  %549 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 6
  %550 = load i8, i8* %549, align 1
  %551 = sext i8 %550 to i32
  %552 = icmp eq i32 %66, %551
  %553 = or i1 %552, %547
  br label %72
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser19ParseTileInfoSyntaxEv(%"class.libgav1::ObuParser"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 14
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 6
  %6 = load i32, i32* %5, align 8
  %7 = add nsw i32 %6, 31
  %8 = ashr i32 %7, 5
  %9 = add nsw i32 %6, 15
  %10 = ashr i32 %9, 4
  %11 = select i1 %4, i32 %10, i32 %8
  %12 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 7
  %13 = load i32, i32* %12, align 4
  %14 = add nsw i32 %13, 31
  %15 = ashr i32 %14, 5
  %16 = add nsw i32 %13, 15
  %17 = ashr i32 %16, 4
  %18 = select i1 %4, i32 %17, i32 %15
  %19 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 2
  store i32 %11, i32* %19, align 4
  %20 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 1
  store i32 %18, i32* %20, align 4
  %21 = select i1 %4, i32 4, i32 5
  %22 = or i32 %21, 2
  %23 = lshr i32 4096, %22
  %24 = shl nuw nsw i32 %22, 1
  br label %25

25:                                               ; preds = %25, %1
  %26 = phi i32 [ 0, %1 ], [ %29, %25 ]
  %27 = shl i32 %23, %26
  %28 = icmp slt i32 %27, %11
  %29 = add nuw nsw i32 %26, 1
  br i1 %28, label %25, label %30

30:                                               ; preds = %25
  %31 = lshr i32 9437184, %24
  %32 = icmp slt i32 %11, 64
  %33 = select i1 %32, i32 %11, i32 64
  %34 = icmp ult i32 %33, 2
  br i1 %34, label %39, label %35

35:                                               ; preds = %30
  %36 = add nsw i32 %33, -1
  %37 = tail call i32 @llvm.ctlz.i32(i32 %36, i1 true) #11, !range !3
  %38 = sub nuw nsw i32 32, %37
  br label %39

39:                                               ; preds = %30, %35
  %40 = phi i32 [ %38, %35 ], [ 0, %30 ]
  %41 = icmp slt i32 %18, 64
  %42 = select i1 %41, i32 %18, i32 64
  %43 = icmp ult i32 %42, 2
  br i1 %43, label %48, label %44

44:                                               ; preds = %39
  %45 = add nsw i32 %42, -1
  %46 = tail call i32 @llvm.ctlz.i32(i32 %45, i1 true) #11, !range !3
  %47 = sub nuw nsw i32 32, %46
  br label %48

48:                                               ; preds = %39, %44
  %49 = phi i32 [ %47, %44 ], [ 0, %39 ]
  %50 = mul nsw i32 %18, %11
  br label %51

51:                                               ; preds = %51, %48
  %52 = phi i32 [ 0, %48 ], [ %55, %51 ]
  %53 = shl i32 %31, %52
  %54 = icmp slt i32 %53, %50
  %55 = add nuw nsw i32 %52, 1
  br i1 %54, label %51, label %56

56:                                               ; preds = %51
  %57 = icmp ult i32 %26, %52
  %58 = select i1 %57, i32 %52, i32 %26
  %59 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %59, align 8
  %61 = bitcast %"class.libgav1::RawBitReader"* %60 to i32 (%"class.libgav1::RawBitReader"*)***
  %62 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %61, align 8
  %63 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %62, i64 2
  %64 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %63, align 8
  %65 = tail call i32 %64(%"class.libgav1::RawBitReader"* %60) #11
  %66 = icmp eq i32 %65, -1
  br i1 %66, label %304, label %67

67:                                               ; preds = %56
  %68 = icmp ne i32 %65, 0
  %69 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 0
  %70 = zext i1 %68 to i8
  store i8 %70, i8* %69, align 4
  br i1 %68, label %73, label %71

71:                                               ; preds = %67
  %72 = icmp sgt i32 %11, 0
  br i1 %72, label %161, label %186

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 4
  store i32 %26, i32* %74, align 4
  %75 = icmp slt i32 %26, %40
  br i1 %75, label %76, label %89

76:                                               ; preds = %73, %85
  %77 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %59, align 8
  %78 = bitcast %"class.libgav1::RawBitReader"* %77 to i32 (%"class.libgav1::RawBitReader"*)***
  %79 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %78, align 8
  %80 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %79, i64 2
  %81 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %80, align 8
  %82 = tail call i32 %81(%"class.libgav1::RawBitReader"* %77) #11
  switch i32 %82, label %85 [
    i32 -1, label %304
    i32 0, label %83
  ]

83:                                               ; preds = %76
  %84 = load i32, i32* %74, align 4
  br label %89

85:                                               ; preds = %76
  %86 = load i32, i32* %74, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %74, align 4
  %88 = icmp slt i32 %87, %40
  br i1 %88, label %76, label %89

89:                                               ; preds = %85, %83, %73
  %90 = phi i32 [ %26, %73 ], [ %84, %83 ], [ %87, %85 ]
  %91 = shl i32 1, %90
  %92 = add nsw i32 %11, -1
  %93 = add i32 %92, %91
  %94 = ashr i32 %93, %90
  %95 = icmp slt i32 %94, 1
  br i1 %95, label %304, label %96

96:                                               ; preds = %89
  %97 = icmp sgt i32 %11, 0
  br i1 %97, label %98, label %110

98:                                               ; preds = %96, %102
  %99 = phi i64 [ %104, %102 ], [ 0, %96 ]
  %100 = phi i32 [ %106, %102 ], [ 0, %96 ]
  %101 = icmp eq i64 %99, 64
  br i1 %101, label %304, label %102

102:                                              ; preds = %98
  %103 = shl i32 %100, %21
  %104 = add nuw nsw i64 %99, 1
  %105 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 6, i64 %99
  store i32 %103, i32* %105, align 4
  %106 = add nsw i32 %100, %94
  %107 = icmp slt i32 %106, %11
  br i1 %107, label %98, label %108

108:                                              ; preds = %102
  %109 = trunc i64 %104 to i32
  br label %110

110:                                              ; preds = %108, %96
  %111 = phi i32 [ 0, %96 ], [ %109, %108 ]
  %112 = load i32, i32* %5, align 8
  %113 = zext i32 %111 to i64
  %114 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 6, i64 %113
  store i32 %112, i32* %114, align 4
  %115 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 5
  store i32 %111, i32* %115, align 4
  %116 = sub nsw i32 %58, %90
  %117 = icmp sgt i32 %116, 0
  %118 = select i1 %117, i32 %116, i32 0
  %119 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 8
  store i32 %118, i32* %119, align 4
  %120 = icmp slt i32 %118, %49
  br i1 %120, label %121, label %134

121:                                              ; preds = %110, %130
  %122 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %59, align 8
  %123 = bitcast %"class.libgav1::RawBitReader"* %122 to i32 (%"class.libgav1::RawBitReader"*)***
  %124 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %123, align 8
  %125 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %124, i64 2
  %126 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %125, align 8
  %127 = tail call i32 %126(%"class.libgav1::RawBitReader"* %122) #11
  switch i32 %127, label %130 [
    i32 -1, label %304
    i32 0, label %128
  ]

128:                                              ; preds = %121
  %129 = load i32, i32* %119, align 4
  br label %134

130:                                              ; preds = %121
  %131 = load i32, i32* %119, align 4
  %132 = add nsw i32 %131, 1
  store i32 %132, i32* %119, align 4
  %133 = icmp slt i32 %132, %49
  br i1 %133, label %121, label %134

134:                                              ; preds = %130, %128, %110
  %135 = phi i32 [ %118, %110 ], [ %129, %128 ], [ %132, %130 ]
  %136 = shl i32 1, %135
  %137 = add nsw i32 %18, -1
  %138 = add i32 %137, %136
  %139 = ashr i32 %138, %135
  %140 = icmp slt i32 %139, 1
  br i1 %140, label %304, label %141

141:                                              ; preds = %134
  %142 = icmp sgt i32 %18, 0
  br i1 %142, label %143, label %155

143:                                              ; preds = %141, %147
  %144 = phi i64 [ %149, %147 ], [ 0, %141 ]
  %145 = phi i32 [ %151, %147 ], [ 0, %141 ]
  %146 = icmp eq i64 %144, 64
  br i1 %146, label %304, label %147

147:                                              ; preds = %143
  %148 = shl i32 %145, %21
  %149 = add nuw nsw i64 %144, 1
  %150 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 10, i64 %144
  store i32 %148, i32* %150, align 4
  %151 = add nsw i32 %145, %139
  %152 = icmp slt i32 %151, %18
  br i1 %152, label %143, label %153

153:                                              ; preds = %147
  %154 = trunc i64 %149 to i32
  br label %155

155:                                              ; preds = %153, %141
  %156 = phi i32 [ 0, %141 ], [ %154, %153 ]
  %157 = load i32, i32* %12, align 4
  %158 = zext i32 %156 to i64
  %159 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 10, i64 %158
  store i32 %157, i32* %159, align 4
  %160 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 9
  store i32 %156, i32* %160, align 4
  br label %245

161:                                              ; preds = %71, %176
  %162 = phi i64 [ %182, %176 ], [ 0, %71 ]
  %163 = phi i32 [ %181, %176 ], [ 0, %71 ]
  %164 = phi i32 [ %180, %176 ], [ 1, %71 ]
  %165 = icmp eq i64 %162, 64
  br i1 %165, label %304, label %166

166:                                              ; preds = %161
  %167 = shl i32 %163, %21
  %168 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 6, i64 %162
  store i32 %167, i32* %168, align 4
  %169 = sub nsw i32 %11, %163
  %170 = icmp slt i32 %23, %169
  %171 = select i1 %170, i32 %23, i32 %169
  %172 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %59, align 8
  %173 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %172, i64 0, i32 0
  %174 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 7, i64 %162
  %175 = tail call zeroext i1 @_ZN7libgav19BitReader13DecodeUniformEiPi(%"class.libgav1::BitReader"* %173, i32 %171, i32* %174) #11
  br i1 %175, label %176, label %304

176:                                              ; preds = %166
  %177 = load i32, i32* %174, align 4
  %178 = add nsw i32 %177, 1
  store i32 %178, i32* %174, align 4
  %179 = icmp slt i32 %178, %164
  %180 = select i1 %179, i32 %164, i32 %178
  %181 = add nsw i32 %178, %163
  %182 = add nuw nsw i64 %162, 1
  %183 = icmp sgt i32 %11, %181
  br i1 %183, label %161, label %184

184:                                              ; preds = %176
  %185 = trunc i64 %182 to i32
  br label %186

186:                                              ; preds = %184, %71
  %187 = phi i32 [ 1, %71 ], [ %180, %184 ]
  %188 = phi i32 [ 0, %71 ], [ %185, %184 ]
  %189 = load i32, i32* %5, align 8
  %190 = zext i32 %188 to i64
  %191 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 6, i64 %190
  store i32 %189, i32* %191, align 4
  %192 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 5
  store i32 %188, i32* %192, align 4
  %193 = icmp ult i32 %188, 2
  br i1 %193, label %198, label %194

194:                                              ; preds = %186
  %195 = add nsw i32 %188, -1
  %196 = tail call i32 @llvm.ctlz.i32(i32 %195, i1 true) #11, !range !3
  %197 = sub nuw nsw i32 32, %196
  br label %198

198:                                              ; preds = %186, %194
  %199 = phi i32 [ %197, %194 ], [ 0, %186 ]
  %200 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 4
  store i32 %199, i32* %200, align 4
  %201 = icmp sgt i32 %58, 0
  %202 = add nuw nsw i32 %58, 1
  %203 = select i1 %201, i32 %202, i32 0
  %204 = ashr i32 %50, %203
  %205 = sdiv i32 %204, %187
  %206 = icmp sgt i32 %205, 1
  %207 = select i1 %206, i32 %205, i32 1
  %208 = icmp sgt i32 %18, 0
  br i1 %208, label %209, label %231

209:                                              ; preds = %198, %223
  %210 = phi i64 [ %227, %223 ], [ 0, %198 ]
  %211 = phi i32 [ %226, %223 ], [ 0, %198 ]
  %212 = icmp eq i64 %210, 64
  br i1 %212, label %304, label %213

213:                                              ; preds = %209
  %214 = shl i32 %211, %21
  %215 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 10, i64 %210
  store i32 %214, i32* %215, align 4
  %216 = sub nsw i32 %18, %211
  %217 = icmp slt i32 %207, %216
  %218 = select i1 %217, i32 %207, i32 %216
  %219 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %59, align 8
  %220 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %219, i64 0, i32 0
  %221 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 11, i64 %210
  %222 = tail call zeroext i1 @_ZN7libgav19BitReader13DecodeUniformEiPi(%"class.libgav1::BitReader"* %220, i32 %218, i32* %221) #11
  br i1 %222, label %223, label %304

223:                                              ; preds = %213
  %224 = load i32, i32* %221, align 4
  %225 = add nsw i32 %224, 1
  store i32 %225, i32* %221, align 4
  %226 = add nsw i32 %225, %211
  %227 = add nuw nsw i64 %210, 1
  %228 = icmp sgt i32 %18, %226
  br i1 %228, label %209, label %229

229:                                              ; preds = %223
  %230 = trunc i64 %227 to i32
  br label %231

231:                                              ; preds = %229, %198
  %232 = phi i32 [ 0, %198 ], [ %230, %229 ]
  %233 = load i32, i32* %12, align 4
  %234 = zext i32 %232 to i64
  %235 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 10, i64 %234
  store i32 %233, i32* %235, align 4
  %236 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 9
  store i32 %232, i32* %236, align 4
  %237 = icmp ult i32 %232, 2
  br i1 %237, label %242, label %238

238:                                              ; preds = %231
  %239 = add nsw i32 %232, -1
  %240 = tail call i32 @llvm.ctlz.i32(i32 %239, i1 true) #11, !range !3
  %241 = sub nuw nsw i32 32, %240
  br label %242

242:                                              ; preds = %238, %231
  %243 = phi i32 [ %241, %238 ], [ 0, %231 ]
  %244 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 8
  store i32 %243, i32* %244, align 4
  br label %245

245:                                              ; preds = %242, %155
  %246 = phi i32 [ %243, %242 ], [ %135, %155 ]
  %247 = phi i32 [ %232, %242 ], [ %156, %155 ]
  %248 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 5
  %249 = load i32, i32* %248, align 4
  %250 = mul nsw i32 %249, %247
  %251 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 3
  store i32 %250, i32* %251, align 4
  %252 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 7, i32 0
  %253 = sext i32 %250 to i64
  %254 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 7, i32 0, i32 1
  %255 = load i64, i64* %254, align 8
  %256 = icmp ult i64 %255, %253
  br i1 %256, label %257, label %272

257:                                              ; preds = %245
  %258 = shl nsw i64 %253, 4
  %259 = tail call noalias i8* @malloc(i64 %258) #11
  %260 = icmp eq i8* %259, null
  br i1 %260, label %304, label %261

261:                                              ; preds = %257
  %262 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 7, i32 0, i32 2
  %263 = load i64, i64* %262, align 8
  %264 = icmp eq i64 %263, 0
  %265 = bitcast %"class.libgav1::internal::VectorBase.5"* %252 to i8**
  %266 = load i8*, i8** %265, align 8
  br i1 %264, label %269, label %267

267:                                              ; preds = %261
  %268 = shl i64 %263, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %259, i8* align 1 %266, i64 %268, i1 false) #11
  br label %269

269:                                              ; preds = %267, %261
  tail call void @free(i8* %266) #11
  store i8* %259, i8** %265, align 8
  store i64 %253, i64* %254, align 8
  %270 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 8
  %271 = load i32, i32* %270, align 4
  br label %272

272:                                              ; preds = %269, %245
  %273 = phi i32 [ %271, %269 ], [ %246, %245 ]
  %274 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 12
  store i16 0, i16* %274, align 4
  %275 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 4
  %276 = load i32, i32* %275, align 4
  %277 = add nsw i32 %273, %276
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %304, label %279

279:                                              ; preds = %272
  %280 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %59, align 8
  %281 = bitcast %"class.libgav1::RawBitReader"* %280 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %282 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %281, align 8
  %283 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %282, i64 3
  %284 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %283, align 8
  %285 = tail call i64 %284(%"class.libgav1::RawBitReader"* %280, i32 %277) #11
  %286 = icmp eq i64 %285, -1
  br i1 %286, label %304, label %287

287:                                              ; preds = %279
  %288 = trunc i64 %285 to i16
  store i16 %288, i16* %274, align 4
  %289 = sext i16 %288 to i32
  %290 = load i32, i32* %251, align 4
  %291 = icmp sgt i32 %290, %289
  br i1 %291, label %292, label %304

292:                                              ; preds = %287
  %293 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %59, align 8
  %294 = bitcast %"class.libgav1::RawBitReader"* %293 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %295 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %294, align 8
  %296 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %295, i64 3
  %297 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %296, align 8
  %298 = tail call i64 %297(%"class.libgav1::RawBitReader"* %293, i32 2) #11
  %299 = icmp eq i64 %298, -1
  br i1 %299, label %304, label %300

300:                                              ; preds = %292
  %301 = trunc i64 %298 to i8
  %302 = add i8 %301, 1
  %303 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 13
  store i8 %302, i8* %303, align 2
  br label %304

304:                                              ; preds = %166, %161, %213, %209, %76, %98, %121, %143, %134, %89, %257, %279, %287, %292, %272, %300, %56
  %305 = phi i1 [ false, %56 ], [ false, %279 ], [ false, %287 ], [ false, %292 ], [ true, %272 ], [ true, %300 ], [ false, %257 ], [ false, %89 ], [ false, %134 ], [ false, %143 ], [ false, %121 ], [ false, %98 ], [ false, %76 ], [ false, %209 ], [ false, %213 ], [ false, %161 ], [ false, %166 ]
  ret i1 %305
}

declare zeroext i1 @_ZN7libgav19BitReader13DecodeUniformEiPi(%"class.libgav1::BitReader"*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser21ReadAllowWarpedMotionEv(%"class.libgav1::ObuParser"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 20
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, -3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %27, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 23
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %27

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 19
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %15, align 8
  %17 = bitcast %"class.libgav1::RawBitReader"* %16 to i32 (%"class.libgav1::RawBitReader"*)***
  %18 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %18, i64 2
  %20 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %19, align 8
  %21 = tail call i32 %20(%"class.libgav1::RawBitReader"* %16) #11
  %22 = icmp eq i32 %21, -1
  br i1 %22, label %27, label %23

23:                                               ; preds = %14
  %24 = icmp ne i32 %21, 0
  %25 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 49
  %26 = zext i1 %24 to i8
  store i8 %26, i8* %25, align 2
  br label %27

27:                                               ; preds = %23, %14, %1, %6, %10
  %28 = phi i1 [ true, %10 ], [ true, %6 ], [ true, %1 ], [ true, %23 ], [ false, %14 ]
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser20ParseFrameParametersEv(%"class.libgav1::ObuParser"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 2
  %3 = load i8, i8* %2, align 2, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %34, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 21
  store i8 1, i8* %6, align 1
  %7 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 13
  %8 = load %"class.libgav1::BufferPool"*, %"class.libgav1::BufferPool"** %7, align 8
  %9 = tail call { %"class.libgav1::RefCountedBuffer"*, %"class.std::__1::__shared_weak_count"* } @_ZN7libgav110BufferPool13GetFreeBufferEv(%"class.libgav1::BufferPool"* %8) #11
  %10 = extractvalue { %"class.libgav1::RefCountedBuffer"*, %"class.std::__1::__shared_weak_count"* } %9, 0
  %11 = ptrtoint %"class.libgav1::RefCountedBuffer"* %10 to i64
  %12 = extractvalue { %"class.libgav1::RefCountedBuffer"*, %"class.std::__1::__shared_weak_count"* } %9, 1
  %13 = ptrtoint %"class.std::__1::__shared_weak_count"* %12 to i64
  %14 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 15
  %15 = bitcast %"class.std::__1::shared_ptr"* %14 to i64*
  store i64 %11, i64* %15, align 8
  %16 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 15, i32 1
  %17 = bitcast %"class.std::__1::__shared_weak_count"** %16 to i64*
  %18 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %16, align 8
  store i64 %13, i64* %17, align 8
  %19 = icmp eq %"class.std::__1::__shared_weak_count"* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %5
  %21 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %18, i64 0, i32 0, i32 1
  %22 = atomicrmw add i64* %21, i64 -1 acq_rel
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %18, i64 0, i32 0
  %26 = bitcast %"class.std::__1::__shared_weak_count"* %18 to void (%"class.std::__1::__shared_count"*)***
  %27 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %27, i64 2
  %29 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %28, align 8
  tail call void %29(%"class.std::__1::__shared_count"* %25) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %18) #11
  br label %30

30:                                               ; preds = %24, %20, %5
  %31 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %14, i64 0, i32 0
  %32 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %31, align 8
  %33 = icmp eq %"class.libgav1::RefCountedBuffer"* %32, null
  br i1 %33, label %1026, label %282

34:                                               ; preds = %1
  %35 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %35, align 8
  %37 = bitcast %"class.libgav1::RawBitReader"* %36 to i32 (%"class.libgav1::RawBitReader"*)***
  %38 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %37, align 8
  %39 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %38, i64 2
  %40 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %39, align 8
  %41 = tail call i32 %40(%"class.libgav1::RawBitReader"* %36) #11
  %42 = icmp eq i32 %41, -1
  br i1 %42, label %1026, label %43

43:                                               ; preds = %34
  %44 = icmp ne i32 %41, 0
  %45 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 18
  %46 = zext i1 %44 to i8
  store i8 %46, i8* %45, align 2
  br i1 %44, label %47, label %167

47:                                               ; preds = %43
  %48 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %35, align 8
  %49 = bitcast %"class.libgav1::RawBitReader"* %48 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %50 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %49, align 8
  %51 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %50, i64 3
  %52 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %51, align 8
  %53 = tail call i64 %52(%"class.libgav1::RawBitReader"* %48, i32 3) #11
  %54 = icmp eq i64 %53, -1
  br i1 %54, label %1026, label %55

55:                                               ; preds = %47
  %56 = trunc i64 %53 to i8
  %57 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 19
  store i8 %56, i8* %57, align 1
  %58 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 36
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %79, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 35, i32 2
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %79

65:                                               ; preds = %61
  %66 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %35, align 8
  %67 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 37, i32 3
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = bitcast %"class.libgav1::RawBitReader"* %66 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %71 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %70, align 8
  %72 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %71, i64 3
  %73 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %72, align 8
  %74 = tail call i64 %73(%"class.libgav1::RawBitReader"* %66, i32 %69) #11
  %75 = icmp eq i64 %74, -1
  br i1 %75, label %1026, label %76

76:                                               ; preds = %65
  %77 = trunc i64 %74 to i32
  %78 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 13
  store i32 %77, i32* %78, align 4
  br label %79

79:                                               ; preds = %61, %55, %76
  %80 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 11
  %81 = load i8, i8* %80, align 4, !range !2
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 14
  %85 = load %"struct.libgav1::DecoderState"*, %"struct.libgav1::DecoderState"** %84, align 8
  %86 = load i8, i8* %57, align 1
  %87 = sext i8 %86 to i64
  br label %109

88:                                               ; preds = %79
  %89 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %35, align 8
  %90 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 12
  %91 = load i8, i8* %90, align 1
  %92 = sext i8 %91 to i32
  %93 = bitcast %"class.libgav1::RawBitReader"* %89 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %94 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %93, align 8
  %95 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %94, i64 3
  %96 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %95, align 8
  %97 = tail call i64 %96(%"class.libgav1::RawBitReader"* %89, i32 %92) #11
  %98 = icmp eq i64 %97, -1
  br i1 %98, label %1026, label %99

99:                                               ; preds = %88
  %100 = trunc i64 %97 to i16
  %101 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 0
  store i16 %100, i16* %101, align 8
  %102 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 14
  %103 = load %"struct.libgav1::DecoderState"*, %"struct.libgav1::DecoderState"** %102, align 8
  %104 = load i8, i8* %57, align 1
  %105 = sext i8 %104 to i64
  %106 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %103, i64 0, i32 0, i32 0, i64 %105
  %107 = load i16, i16* %106, align 2
  %108 = icmp eq i16 %107, %100
  br i1 %108, label %109, label %1026

109:                                              ; preds = %83, %99
  %110 = phi i64 [ %87, %83 ], [ %105, %99 ]
  %111 = phi %"struct.libgav1::DecoderState"* [ %85, %83 ], [ %103, %99 ]
  %112 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 14
  %113 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %111, i64 0, i32 5, i32 0, i64 %110
  %114 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 15
  %115 = bitcast %"class.std::__1::shared_ptr"* %113 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %111, i64 0, i32 5, i32 0, i64 %110, i32 1
  %118 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %117, align 8
  %119 = ptrtoint %"class.std::__1::__shared_weak_count"* %118 to i64
  %120 = icmp eq %"class.std::__1::__shared_weak_count"* %118, null
  br i1 %120, label %124, label %121

121:                                              ; preds = %109
  %122 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %118, i64 0, i32 0, i32 1
  %123 = atomicrmw add i64* %122, i64 1 monotonic
  br label %124

124:                                              ; preds = %121, %109
  %125 = bitcast %"class.std::__1::shared_ptr"* %114 to i64*
  store i64 %116, i64* %125, align 8
  %126 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 15, i32 1
  %127 = bitcast %"class.std::__1::__shared_weak_count"** %126 to i64*
  %128 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %126, align 8
  store i64 %119, i64* %127, align 8
  %129 = icmp eq %"class.std::__1::__shared_weak_count"* %128, null
  br i1 %129, label %140, label %130

130:                                              ; preds = %124
  %131 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %128, i64 0, i32 0, i32 1
  %132 = atomicrmw add i64* %131, i64 -1 acq_rel
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %140

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %128, i64 0, i32 0
  %136 = bitcast %"class.std::__1::__shared_weak_count"* %128 to void (%"class.std::__1::__shared_count"*)***
  %137 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %136, align 8
  %138 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %137, i64 2
  %139 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %138, align 8
  tail call void %139(%"class.std::__1::__shared_count"* %135) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %128) #11
  br label %140

140:                                              ; preds = %124, %130, %134
  %141 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %114, i64 0, i32 0
  %142 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %141, align 8
  %143 = icmp eq %"class.libgav1::RefCountedBuffer"* %142, null
  br i1 %143, label %1026, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %142, i64 0, i32 14
  %146 = load i8, i8* %145, align 16, !range !2
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %1026, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %142, i64 0, i32 12
  %150 = load i8, i8* %149, align 1
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %152, label %1026

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 34
  store i8 -1, i8* %153, align 2
  store i8 0, i8* %145, align 16
  %154 = load %"struct.libgav1::DecoderState"*, %"struct.libgav1::DecoderState"** %112, align 8
  %155 = load i8, i8* %57, align 1
  %156 = sext i8 %155 to i64
  %157 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %154, i64 0, i32 0, i32 0, i64 %156
  %158 = load i16, i16* %157, align 2
  %159 = zext i16 %158 to i32
  %160 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %154, i64 0, i32 1
  store i32 %159, i32* %160, align 8
  %161 = load %"struct.libgav1::DecoderState"*, %"struct.libgav1::DecoderState"** %112, align 8
  %162 = load i8, i8* %57, align 1
  %163 = sext i8 %162 to i64
  %164 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %161, i64 0, i32 2, i32 0, i64 %163
  %165 = load i8, i8* %164, align 1
  %166 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %161, i64 0, i32 3
  store i8 %165, i8* %166, align 4
  br label %1026

167:                                              ; preds = %43
  %168 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 13
  %169 = load %"class.libgav1::BufferPool"*, %"class.libgav1::BufferPool"** %168, align 8
  %170 = tail call { %"class.libgav1::RefCountedBuffer"*, %"class.std::__1::__shared_weak_count"* } @_ZN7libgav110BufferPool13GetFreeBufferEv(%"class.libgav1::BufferPool"* %169) #11
  %171 = extractvalue { %"class.libgav1::RefCountedBuffer"*, %"class.std::__1::__shared_weak_count"* } %170, 0
  %172 = ptrtoint %"class.libgav1::RefCountedBuffer"* %171 to i64
  %173 = extractvalue { %"class.libgav1::RefCountedBuffer"*, %"class.std::__1::__shared_weak_count"* } %170, 1
  %174 = ptrtoint %"class.std::__1::__shared_weak_count"* %173 to i64
  %175 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 15
  %176 = bitcast %"class.std::__1::shared_ptr"* %175 to i64*
  store i64 %172, i64* %176, align 8
  %177 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 15, i32 1
  %178 = bitcast %"class.std::__1::__shared_weak_count"** %177 to i64*
  %179 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %177, align 8
  store i64 %174, i64* %178, align 8
  %180 = icmp eq %"class.std::__1::__shared_weak_count"* %179, null
  br i1 %180, label %191, label %181

181:                                              ; preds = %167
  %182 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %179, i64 0, i32 0, i32 1
  %183 = atomicrmw add i64* %182, i64 -1 acq_rel
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %191

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %179, i64 0, i32 0
  %187 = bitcast %"class.std::__1::__shared_weak_count"* %179 to void (%"class.std::__1::__shared_count"*)***
  %188 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %187, align 8
  %189 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %188, i64 2
  %190 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %189, align 8
  tail call void %190(%"class.std::__1::__shared_count"* %186) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %179) #11
  br label %191

191:                                              ; preds = %185, %181, %167
  %192 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %175, i64 0, i32 0
  %193 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %192, align 8
  %194 = icmp eq %"class.libgav1::RefCountedBuffer"* %193, null
  br i1 %194, label %1026, label %195

195:                                              ; preds = %191
  %196 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %35, align 8
  %197 = bitcast %"class.libgav1::RawBitReader"* %196 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %198 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %197, align 8
  %199 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %198, i64 3
  %200 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %199, align 8
  %201 = tail call i64 %200(%"class.libgav1::RawBitReader"* %196, i32 2) #11
  %202 = icmp eq i64 %201, -1
  br i1 %202, label %1026, label %203

203:                                              ; preds = %195
  %204 = trunc i64 %201 to i8
  %205 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 20
  store i8 %204, i8* %205, align 8
  %206 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %192, align 8
  %207 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %206, i64 0, i32 12
  store i8 %204, i8* %207, align 1
  %208 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %35, align 8
  %209 = bitcast %"class.libgav1::RawBitReader"* %208 to i32 (%"class.libgav1::RawBitReader"*)***
  %210 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %209, align 8
  %211 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %210, i64 2
  %212 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %211, align 8
  %213 = tail call i32 %212(%"class.libgav1::RawBitReader"* %208) #11
  %214 = icmp eq i32 %213, -1
  br i1 %214, label %1026, label %215

215:                                              ; preds = %203
  %216 = icmp ne i32 %213, 0
  %217 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 21
  %218 = zext i1 %216 to i8
  store i8 %218, i8* %217, align 1
  br i1 %216, label %219, label %248

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 36
  %221 = load i8, i8* %220, align 8, !range !2
  %222 = icmp eq i8 %221, 0
  br i1 %222, label %243, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 35, i32 2
  %225 = load i8, i8* %224, align 8, !range !2
  %226 = icmp eq i8 %225, 0
  br i1 %226, label %227, label %243

227:                                              ; preds = %223
  %228 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %35, align 8
  %229 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 37, i32 3
  %230 = load i8, i8* %229, align 1
  %231 = zext i8 %230 to i32
  %232 = bitcast %"class.libgav1::RawBitReader"* %228 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %233 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %232, align 8
  %234 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %233, i64 3
  %235 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %234, align 8
  %236 = tail call i64 %235(%"class.libgav1::RawBitReader"* %228, i32 %231) #11
  %237 = icmp eq i64 %236, -1
  br i1 %237, label %1026, label %238

238:                                              ; preds = %227
  %239 = trunc i64 %236 to i32
  %240 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 13
  store i32 %239, i32* %240, align 4
  %241 = load i8, i8* %217, align 1
  %242 = icmp eq i8 %241, 0
  br i1 %242, label %248, label %243

243:                                              ; preds = %223, %219, %238
  %244 = load i8, i8* %205, align 8
  %245 = icmp ne i8 %244, 0
  %246 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 22
  %247 = zext i1 %245 to i8
  store i8 %247, i8* %246, align 2
  br label %260

248:                                              ; preds = %215, %238
  %249 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %35, align 8
  %250 = bitcast %"class.libgav1::RawBitReader"* %249 to i32 (%"class.libgav1::RawBitReader"*)***
  %251 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %250, align 8
  %252 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %251, i64 2
  %253 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %252, align 8
  %254 = tail call i32 %253(%"class.libgav1::RawBitReader"* %249) #11
  %255 = icmp eq i32 %254, -1
  br i1 %255, label %1026, label %256

256:                                              ; preds = %248
  %257 = icmp ne i32 %254, 0
  %258 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 22
  %259 = zext i1 %257 to i8
  store i8 %259, i8* %258, align 2
  br label %260

260:                                              ; preds = %256, %243
  %261 = phi i8 [ %259, %256 ], [ %247, %243 ]
  %262 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %192, align 8
  %263 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %262, i64 0, i32 14
  store i8 %261, i8* %263, align 16
  %264 = load i8, i8* %205, align 8
  switch i8 %264, label %270 [
    i8 3, label %268
    i8 0, label %265
  ]

265:                                              ; preds = %260
  %266 = load i8, i8* %217, align 1, !range !2
  %267 = icmp eq i8 %266, 0
  br i1 %267, label %270, label %268

268:                                              ; preds = %260, %265
  %269 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 23
  store i8 1, i8* %269, align 1
  br label %282

270:                                              ; preds = %260, %265
  %271 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %35, align 8
  %272 = bitcast %"class.libgav1::RawBitReader"* %271 to i32 (%"class.libgav1::RawBitReader"*)***
  %273 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %272, align 8
  %274 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %273, i64 2
  %275 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %274, align 8
  %276 = tail call i32 %275(%"class.libgav1::RawBitReader"* %271) #11
  %277 = icmp eq i32 %276, -1
  br i1 %277, label %1026, label %278

278:                                              ; preds = %270
  %279 = icmp ne i32 %276, 0
  %280 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 23
  %281 = zext i1 %279 to i8
  store i8 %281, i8* %280, align 1
  br label %282

282:                                              ; preds = %268, %278, %30
  %283 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6
  %284 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 20
  %285 = load i8, i8* %284, align 8
  %286 = icmp eq i8 %285, 0
  br i1 %286, label %287, label %318

287:                                              ; preds = %282
  %288 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 21
  %289 = load i8, i8* %288, align 1, !range !2
  %290 = icmp eq i8 %289, 0
  br i1 %290, label %318, label %291

291:                                              ; preds = %287
  %292 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 14
  %293 = load %"struct.libgav1::DecoderState"*, %"struct.libgav1::DecoderState"** %292, align 8
  %294 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %293, i64 0, i32 2, i32 0, i64 0
  %295 = bitcast i8* %294 to i64*
  store i64 0, i64* %295, align 1
  %296 = load %"struct.libgav1::DecoderState"*, %"struct.libgav1::DecoderState"** %292, align 8
  %297 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %296, i64 0, i32 5, i32 0, i64 0
  %298 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %296, i64 0, i32 5, i32 0, i64 0, i32 1
  %299 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %298, align 8
  %300 = bitcast %"class.std::__1::shared_ptr"* %297 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %300, align 8
  %301 = icmp eq %"class.std::__1::__shared_weak_count"* %299, null
  br i1 %301, label %312, label %302

302:                                              ; preds = %291
  %303 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %299, i64 0, i32 0, i32 1
  %304 = atomicrmw add i64* %303, i64 -1 acq_rel
  %305 = icmp eq i64 %304, 0
  br i1 %305, label %306, label %312

306:                                              ; preds = %302
  %307 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %299, i64 0, i32 0
  %308 = bitcast %"class.std::__1::__shared_weak_count"* %299 to void (%"class.std::__1::__shared_count"*)***
  %309 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %308, align 8
  %310 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %309, i64 2
  %311 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %310, align 8
  tail call void %311(%"class.std::__1::__shared_count"* %307) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %299) #11
  br label %312

312:                                              ; preds = %306, %302, %291
  %313 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %296, i64 0, i32 5, i32 0, i64 1
  %314 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %296, i64 0, i32 5, i32 0, i64 1, i32 1
  %315 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %314, align 8
  %316 = bitcast %"class.std::__1::shared_ptr"* %313 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %316, align 8
  %317 = icmp eq %"class.std::__1::__shared_weak_count"* %315, null
  br i1 %317, label %1106, label %1096

318:                                              ; preds = %1186, %1192, %1196, %287, %282
  %319 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %320 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %321 = bitcast %"class.libgav1::RawBitReader"* %320 to i32 (%"class.libgav1::RawBitReader"*)***
  %322 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %321, align 8
  %323 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %322, i64 2
  %324 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %323, align 8
  %325 = tail call i32 %324(%"class.libgav1::RawBitReader"* %320) #11
  %326 = icmp eq i32 %325, -1
  br i1 %326, label %1026, label %327

327:                                              ; preds = %318
  %328 = icmp eq i32 %325, 0
  %329 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 24
  %330 = zext i1 %328 to i8
  store i8 %330, i8* %329, align 4
  %331 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 27
  %332 = load i8, i8* %331, align 4
  %333 = icmp eq i8 %332, 2
  br i1 %333, label %334, label %346

334:                                              ; preds = %327
  %335 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %336 = bitcast %"class.libgav1::RawBitReader"* %335 to i32 (%"class.libgav1::RawBitReader"*)***
  %337 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %336, align 8
  %338 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %337, i64 2
  %339 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %338, align 8
  %340 = tail call i32 %339(%"class.libgav1::RawBitReader"* %335) #11
  %341 = icmp eq i32 %340, -1
  br i1 %341, label %1026, label %342

342:                                              ; preds = %334
  %343 = icmp ne i32 %340, 0
  %344 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 31
  %345 = zext i1 %343 to i8
  store i8 %345, i8* %344, align 1
  br label %350

346:                                              ; preds = %327
  %347 = icmp ne i8 %332, 0
  %348 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 31
  %349 = zext i1 %347 to i8
  store i8 %349, i8* %348, align 1
  br label %350

350:                                              ; preds = %346, %342
  %351 = phi i8 [ %349, %346 ], [ %345, %342 ]
  %352 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 31
  %353 = icmp eq i8 %351, 0
  br i1 %353, label %368, label %354

354:                                              ; preds = %350
  %355 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 29
  %356 = load i8, i8* %355, align 2
  %357 = icmp eq i8 %356, 2
  br i1 %357, label %358, label %368

358:                                              ; preds = %354
  %359 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %360 = bitcast %"class.libgav1::RawBitReader"* %359 to i32 (%"class.libgav1::RawBitReader"*)***
  %361 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %360, align 8
  %362 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %361, i64 2
  %363 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %362, align 8
  %364 = tail call i32 %363(%"class.libgav1::RawBitReader"* %359) #11
  %365 = icmp eq i32 %364, -1
  br i1 %365, label %1026, label %366

366:                                              ; preds = %358
  %367 = trunc i32 %364 to i8
  br label %368

368:                                              ; preds = %350, %354, %366
  %369 = phi i8 [ %367, %366 ], [ %356, %354 ], [ 0, %350 ]
  %370 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 36
  store i8 %369, i8* %370, align 8
  %371 = load i8, i8* %284, align 8
  %372 = and i8 %371, -3
  %373 = icmp eq i8 %372, 0
  br i1 %373, label %374, label %376

374:                                              ; preds = %368
  %375 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 36
  store i8 1, i8* %375, align 8
  br label %376

376:                                              ; preds = %374, %368
  %377 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 11
  %378 = load i8, i8* %377, align 4, !range !2
  %379 = icmp eq i8 %378, 0
  br i1 %379, label %422, label %380

380:                                              ; preds = %376
  %381 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %382 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 12
  %383 = load i8, i8* %382, align 1
  %384 = sext i8 %383 to i32
  %385 = bitcast %"class.libgav1::RawBitReader"* %381 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %386 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %385, align 8
  %387 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %386, i64 3
  %388 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %387, align 8
  %389 = tail call i64 %388(%"class.libgav1::RawBitReader"* %381, i32 %384) #11
  %390 = icmp eq i64 %389, -1
  br i1 %390, label %1026, label %391

391:                                              ; preds = %380
  %392 = trunc i64 %389 to i16
  %393 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 1
  store i16 %392, i16* %393, align 2
  %394 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 14
  %395 = load %"struct.libgav1::DecoderState"*, %"struct.libgav1::DecoderState"** %394, align 8
  %396 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %395, i64 0, i32 1
  %397 = load i32, i32* %396, align 8
  %398 = trunc i64 %389 to i32
  %399 = and i32 %398, 65535
  store i32 %399, i32* %396, align 8
  %400 = load i8, i8* %284, align 8
  %401 = icmp eq i8 %400, 0
  br i1 %401, label %402, label %406

402:                                              ; preds = %391
  %403 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 21
  %404 = load i8, i8* %403, align 1, !range !2
  %405 = icmp eq i8 %404, 0
  br i1 %405, label %406, label %427

406:                                              ; preds = %402, %391
  %407 = icmp sgt i32 %397, -1
  br i1 %407, label %408, label %421

408:                                              ; preds = %406
  %409 = load %"struct.libgav1::DecoderState"*, %"struct.libgav1::DecoderState"** %394, align 8
  %410 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %409, i64 0, i32 1
  %411 = load i32, i32* %410, align 8
  %412 = sub nsw i32 %411, %397
  %413 = load i8, i8* %382, align 1
  %414 = sext i8 %413 to i32
  %415 = shl i32 1, %414
  %416 = icmp slt i32 %412, 1
  %417 = select i1 %416, i32 %415, i32 0
  %418 = add nsw i32 %417, %412
  %419 = ashr i32 %415, 1
  %420 = icmp slt i32 %418, %419
  br i1 %420, label %421, label %1026

421:                                              ; preds = %408, %406
  tail call void @_ZN7libgav19ObuParser26MarkInvalidReferenceFramesEv(%"class.libgav1::ObuParser"* %0)
  br label %427

422:                                              ; preds = %376
  %423 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 1
  store i16 0, i16* %423, align 2
  %424 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 14
  %425 = load %"struct.libgav1::DecoderState"*, %"struct.libgav1::DecoderState"** %424, align 8
  %426 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %425, i64 0, i32 1
  store i32 0, i32* %426, align 8
  br label %427

427:                                              ; preds = %421, %402, %422
  %428 = load i8, i8* %284, align 8
  %429 = icmp eq i8 %428, 3
  br i1 %429, label %430, label %432

430:                                              ; preds = %427
  %431 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 25
  store i8 1, i8* %431, align 1
  br label %447

432:                                              ; preds = %427
  %433 = load i8, i8* %2, align 2, !range !2
  %434 = icmp eq i8 %433, 0
  br i1 %434, label %435, label %447

435:                                              ; preds = %432
  %436 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %437 = bitcast %"class.libgav1::RawBitReader"* %436 to i32 (%"class.libgav1::RawBitReader"*)***
  %438 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %437, align 8
  %439 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %438, i64 2
  %440 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %439, align 8
  %441 = tail call i32 %440(%"class.libgav1::RawBitReader"* %436) #11
  %442 = icmp eq i32 %441, -1
  br i1 %442, label %1026, label %443

443:                                              ; preds = %435
  %444 = icmp ne i32 %441, 0
  %445 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 25
  %446 = zext i1 %444 to i8
  store i8 %446, i8* %445, align 1
  br label %447

447:                                              ; preds = %432, %443, %430
  %448 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 22
  %449 = load i8, i8* %448, align 1
  %450 = icmp sgt i8 %449, 0
  br i1 %450, label %454, label %451

451:                                              ; preds = %447
  %452 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 26
  %453 = load i8, i8* %452, align 2
  br label %466

454:                                              ; preds = %447
  %455 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %456 = sext i8 %449 to i32
  %457 = bitcast %"class.libgav1::RawBitReader"* %455 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %458 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %457, align 8
  %459 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %458, i64 3
  %460 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %459, align 8
  %461 = tail call i64 %460(%"class.libgav1::RawBitReader"* %455, i32 %456) #11
  %462 = icmp eq i64 %461, -1
  br i1 %462, label %1026, label %463

463:                                              ; preds = %454
  %464 = trunc i64 %461 to i8
  %465 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 26
  store i8 %464, i8* %465, align 2
  br label %466

466:                                              ; preds = %451, %463
  %467 = phi i8 [ %453, %451 ], [ %464, %463 ]
  %468 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 26
  %469 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 14
  %470 = load %"struct.libgav1::DecoderState"*, %"struct.libgav1::DecoderState"** %469, align 8
  %471 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %470, i64 0, i32 3
  store i8 %467, i8* %471, align 4
  %472 = load i8, i8* %284, align 8
  %473 = and i8 %472, -3
  %474 = icmp eq i8 %473, 0
  br i1 %474, label %489, label %475

475:                                              ; preds = %466
  %476 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 23
  %477 = load i8, i8* %476, align 1, !range !2
  %478 = icmp eq i8 %477, 0
  br i1 %478, label %479, label %489

479:                                              ; preds = %475
  %480 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %481 = bitcast %"class.libgav1::RawBitReader"* %480 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %482 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %481, align 8
  %483 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %482, i64 3
  %484 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %483, align 8
  %485 = tail call i64 %484(%"class.libgav1::RawBitReader"* %480, i32 3) #11
  %486 = icmp eq i64 %485, -1
  br i1 %486, label %1026, label %487

487:                                              ; preds = %479
  %488 = trunc i64 %485 to i8
  br label %489

489:                                              ; preds = %466, %475, %487
  %490 = phi i8 [ %488, %487 ], [ 7, %475 ], [ 7, %466 ]
  %491 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 27
  store i8 %490, i8* %491, align 1
  %492 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 36
  %493 = load i8, i8* %492, align 8, !range !2
  %494 = icmp eq i8 %493, 0
  br i1 %494, label %557, label %495

495:                                              ; preds = %489
  %496 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %497 = bitcast %"class.libgav1::RawBitReader"* %496 to i32 (%"class.libgav1::RawBitReader"*)***
  %498 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %497, align 8
  %499 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %498, i64 2
  %500 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %499, align 8
  %501 = tail call i32 %500(%"class.libgav1::RawBitReader"* %496) #11
  switch i32 %501, label %502 [
    i32 -1, label %1026
    i32 0, label %557
  ]

502:                                              ; preds = %495
  %503 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 3
  %504 = load i32, i32* %503, align 4
  %505 = icmp sgt i32 %504, 0
  br i1 %505, label %506, label %557

506:                                              ; preds = %502
  %507 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 4, i32 0, i32 0
  %508 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 4, i32 0, i32 2
  %509 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 37, i32 2
  br label %510

510:                                              ; preds = %506, %552
  %511 = phi i32 [ %504, %506 ], [ %553, %552 ]
  %512 = phi i64 [ 0, %506 ], [ %554, %552 ]
  %513 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 38, i64 %512
  %514 = load i8, i8* %513, align 1, !range !2
  %515 = icmp eq i8 %514, 0
  br i1 %515, label %552, label %516

516:                                              ; preds = %510
  %517 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 4, i64 %512
  %518 = load i32, i32* %517, align 4
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %538, label %520

520:                                              ; preds = %516
  %521 = load %"struct.libgav1::ObuHeader"*, %"struct.libgav1::ObuHeader"** %507, align 8
  %522 = load i64, i64* %508, align 8
  %523 = add i64 %522, -1
  %524 = getelementptr inbounds %"struct.libgav1::ObuHeader", %"struct.libgav1::ObuHeader"* %521, i64 %523, i32 3
  %525 = load i8, i8* %524, align 1
  %526 = sext i8 %525 to i32
  %527 = shl i32 1, %526
  %528 = and i32 %527, %518
  %529 = icmp eq i32 %528, 0
  br i1 %529, label %552, label %530

530:                                              ; preds = %520
  %531 = getelementptr inbounds %"struct.libgav1::ObuHeader", %"struct.libgav1::ObuHeader"* %521, i64 %523, i32 4
  %532 = load i8, i8* %531, align 1
  %533 = sext i8 %532 to i32
  %534 = add nsw i32 %533, 8
  %535 = shl i32 1, %534
  %536 = and i32 %535, %518
  %537 = icmp eq i32 %536, 0
  br i1 %537, label %552, label %538

538:                                              ; preds = %530, %516
  %539 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %540 = load i8, i8* %509, align 4
  %541 = zext i8 %540 to i32
  %542 = bitcast %"class.libgav1::RawBitReader"* %539 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %543 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %542, align 8
  %544 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %543, i64 3
  %545 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %544, align 8
  %546 = tail call i64 %545(%"class.libgav1::RawBitReader"* %539, i32 %541) #11
  %547 = icmp eq i64 %546, -1
  br i1 %547, label %1026, label %548

548:                                              ; preds = %538
  %549 = trunc i64 %546 to i32
  %550 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 12, i64 %512
  store i32 %549, i32* %550, align 4
  %551 = load i32, i32* %503, align 4
  br label %552

552:                                              ; preds = %530, %520, %548, %510
  %553 = phi i32 [ %511, %530 ], [ %511, %520 ], [ %551, %548 ], [ %511, %510 ]
  %554 = add nuw nsw i64 %512, 1
  %555 = sext i32 %553 to i64
  %556 = icmp slt i64 %554, %555
  br i1 %556, label %510, label %557

557:                                              ; preds = %552, %502, %495, %489
  %558 = load i8, i8* %284, align 8
  switch i8 %558, label %565 [
    i8 3, label %563
    i8 0, label %559
  ]

559:                                              ; preds = %557
  %560 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 21
  %561 = load i8, i8* %560, align 1, !range !2
  %562 = icmp eq i8 %561, 0
  br i1 %562, label %565, label %563

563:                                              ; preds = %557, %559
  %564 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 34
  store i8 -1, i8* %564, align 2
  br label %581

565:                                              ; preds = %557, %559
  %566 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %567 = bitcast %"class.libgav1::RawBitReader"* %566 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %568 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %567, align 8
  %569 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %568, i64 3
  %570 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %569, align 8
  %571 = tail call i64 %570(%"class.libgav1::RawBitReader"* %566, i32 8) #11
  %572 = icmp eq i64 %571, -1
  br i1 %572, label %1026, label %573

573:                                              ; preds = %565
  %574 = trunc i64 %571 to i8
  %575 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 34
  store i8 %574, i8* %575, align 2
  %576 = load i8, i8* %284, align 8
  %577 = icmp eq i8 %576, 2
  %578 = and i64 %571, 255
  %579 = icmp eq i64 %578, 255
  %580 = and i1 %579, %577
  br i1 %580, label %1026, label %581

581:                                              ; preds = %573, %563
  %582 = phi i8 [ %574, %573 ], [ -1, %563 ]
  %583 = phi i8 [ %576, %573 ], [ %558, %563 ]
  %584 = and i8 %583, -3
  %585 = icmp eq i8 %584, 0
  %586 = icmp eq i8 %582, -1
  %587 = and i1 %585, %586
  br i1 %587, label %635, label %588

588:                                              ; preds = %581
  %589 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 23
  %590 = load i8, i8* %589, align 1, !range !2
  %591 = icmp eq i8 %590, 0
  br i1 %591, label %635, label %592

592:                                              ; preds = %588
  %593 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 21
  %594 = load i8, i8* %593, align 2, !range !2
  %595 = icmp eq i8 %594, 0
  br i1 %595, label %635, label %596

596:                                              ; preds = %592, %630
  %597 = phi i64 [ %631, %630 ], [ 0, %592 ]
  %598 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %599 = load i8, i8* %448, align 1
  %600 = sext i8 %599 to i32
  %601 = bitcast %"class.libgav1::RawBitReader"* %598 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %602 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %601, align 8
  %603 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %602, i64 3
  %604 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %603, align 8
  %605 = tail call i64 %604(%"class.libgav1::RawBitReader"* %598, i32 %600) #11
  %606 = icmp eq i64 %605, -1
  br i1 %606, label %1026, label %607

607:                                              ; preds = %596
  %608 = trunc i64 %605 to i8
  %609 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 53, i64 %597
  store i8 %608, i8* %609, align 1
  %610 = load %"struct.libgav1::DecoderState"*, %"struct.libgav1::DecoderState"** %469, align 8
  %611 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %610, i64 0, i32 2, i32 0, i64 %597
  %612 = load i8, i8* %611, align 1
  %613 = icmp eq i8 %612, %608
  br i1 %613, label %630, label %614

614:                                              ; preds = %607
  %615 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %610, i64 0, i32 5, i32 0, i64 %597
  %616 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %610, i64 0, i32 5, i32 0, i64 %597, i32 1
  %617 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %616, align 8
  %618 = bitcast %"class.std::__1::shared_ptr"* %615 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %618, align 8
  %619 = icmp eq %"class.std::__1::__shared_weak_count"* %617, null
  br i1 %619, label %630, label %620

620:                                              ; preds = %614
  %621 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %617, i64 0, i32 0, i32 1
  %622 = atomicrmw add i64* %621, i64 -1 acq_rel
  %623 = icmp eq i64 %622, 0
  br i1 %623, label %624, label %630

624:                                              ; preds = %620
  %625 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %617, i64 0, i32 0
  %626 = bitcast %"class.std::__1::__shared_weak_count"* %617 to void (%"class.std::__1::__shared_count"*)***
  %627 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %626, align 8
  %628 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %627, i64 2
  %629 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %628, align 8
  tail call void %629(%"class.std::__1::__shared_count"* %625) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %617) #11
  br label %630

630:                                              ; preds = %624, %620, %614, %607
  %631 = add nuw nsw i64 %597, 1
  %632 = icmp eq i64 %631, 8
  br i1 %632, label %633, label %596

633:                                              ; preds = %630
  %634 = load i8, i8* %284, align 8
  br label %635

635:                                              ; preds = %581, %633, %588, %592
  %636 = phi i8 [ %634, %633 ], [ %583, %588 ], [ %583, %592 ], [ %583, %581 ]
  %637 = and i8 %636, -3
  %638 = icmp eq i8 %637, 0
  br i1 %638, label %639, label %662

639:                                              ; preds = %635
  %640 = tail call zeroext i1 @_ZN7libgav19ObuParser27ParseFrameSizeAndRenderSizeEv(%"class.libgav1::ObuParser"* %0)
  br i1 %640, label %641, label %1026

641:                                              ; preds = %639
  %642 = load i8, i8* %352, align 1, !range !2
  %643 = icmp eq i8 %642, 0
  br i1 %643, label %945, label %644

644:                                              ; preds = %641
  %645 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 4
  %646 = load i32, i32* %645, align 8
  %647 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 10
  %648 = load i32, i32* %647, align 8
  %649 = icmp eq i32 %646, %648
  br i1 %649, label %650, label %945

650:                                              ; preds = %644
  %651 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %652 = bitcast %"class.libgav1::RawBitReader"* %651 to i32 (%"class.libgav1::RawBitReader"*)***
  %653 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %652, align 8
  %654 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %653, i64 2
  %655 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %654, align 8
  %656 = tail call i32 %655(%"class.libgav1::RawBitReader"* %651) #11
  %657 = icmp eq i32 %656, -1
  br i1 %657, label %1026, label %658

658:                                              ; preds = %650
  %659 = icmp ne i32 %656, 0
  %660 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 32
  %661 = zext i1 %659 to i8
  store i8 %661, i8* %660, align 4
  br label %945

662:                                              ; preds = %635
  %663 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 21
  %664 = load i8, i8* %663, align 2, !range !2
  %665 = icmp eq i8 %664, 0
  br i1 %665, label %666, label %668

666:                                              ; preds = %662
  %667 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 33
  store i8 0, i8* %667, align 1
  br label %700

668:                                              ; preds = %662
  %669 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %670 = bitcast %"class.libgav1::RawBitReader"* %669 to i32 (%"class.libgav1::RawBitReader"*)***
  %671 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %670, align 8
  %672 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %671, i64 2
  %673 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %672, align 8
  %674 = tail call i32 %673(%"class.libgav1::RawBitReader"* %669) #11
  %675 = icmp eq i32 %674, -1
  br i1 %675, label %1026, label %676

676:                                              ; preds = %668
  %677 = icmp ne i32 %674, 0
  %678 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 33
  %679 = zext i1 %677 to i8
  store i8 %679, i8* %678, align 1
  br i1 %677, label %680, label %700

680:                                              ; preds = %676
  %681 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %682 = bitcast %"class.libgav1::RawBitReader"* %681 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %683 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %682, align 8
  %684 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %683, i64 3
  %685 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %684, align 8
  %686 = tail call i64 %685(%"class.libgav1::RawBitReader"* %681, i32 3) #11
  %687 = icmp eq i64 %686, -1
  br i1 %687, label %1026, label %688

688:                                              ; preds = %680
  %689 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %690 = bitcast %"class.libgav1::RawBitReader"* %689 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %691 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %690, align 8
  %692 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %691, i64 3
  %693 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %692, align 8
  %694 = tail call i64 %693(%"class.libgav1::RawBitReader"* %689, i32 3) #11
  %695 = icmp eq i64 %694, -1
  br i1 %695, label %1026, label %696

696:                                              ; preds = %688
  %697 = trunc i64 %686 to i8
  %698 = trunc i64 %694 to i8
  %699 = tail call zeroext i1 @_ZN7libgav19ObuParser18SetFrameReferencesEaa(%"class.libgav1::ObuParser"* %0, i8 signext %697, i8 signext %698)
  br i1 %699, label %700, label %1026

700:                                              ; preds = %696, %676, %666
  %701 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 33
  %702 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 13
  %703 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 12
  %704 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 1
  br label %705

705:                                              ; preds = %760, %700
  %706 = phi i64 [ 0, %700 ], [ %761, %760 ]
  %707 = load i8, i8* %701, align 1, !range !2
  %708 = icmp eq i8 %707, 0
  br i1 %708, label %712, label %709

709:                                              ; preds = %705
  %710 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 %706
  %711 = load i8, i8* %710, align 1
  br label %723

712:                                              ; preds = %705
  %713 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %714 = bitcast %"class.libgav1::RawBitReader"* %713 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %715 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %714, align 8
  %716 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %715, i64 3
  %717 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %716, align 8
  %718 = tail call i64 %717(%"class.libgav1::RawBitReader"* %713, i32 3) #11
  %719 = icmp eq i64 %718, -1
  br i1 %719, label %1026, label %720

720:                                              ; preds = %712
  %721 = trunc i64 %718 to i8
  %722 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 %706
  store i8 %721, i8* %722, align 1
  br label %723

723:                                              ; preds = %709, %720
  %724 = phi i8 [ %711, %709 ], [ %721, %720 ]
  %725 = load %"struct.libgav1::DecoderState"*, %"struct.libgav1::DecoderState"** %469, align 8
  %726 = sext i8 %724 to i64
  %727 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %725, i64 0, i32 5, i32 0, i64 %726, i32 0
  %728 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %727, align 8
  %729 = icmp eq %"class.libgav1::RefCountedBuffer"* %728, null
  br i1 %729, label %1026, label %730

730:                                              ; preds = %723
  %731 = load i8, i8* %377, align 4, !range !2
  %732 = icmp eq i8 %731, 0
  br i1 %732, label %760, label %733

733:                                              ; preds = %730
  %734 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %735 = load i8, i8* %702, align 2
  %736 = sext i8 %735 to i32
  %737 = bitcast %"class.libgav1::RawBitReader"* %734 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %738 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %737, align 8
  %739 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %738, i64 3
  %740 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %739, align 8
  %741 = tail call i64 %740(%"class.libgav1::RawBitReader"* %734, i32 %736) #11
  %742 = icmp eq i64 %741, -1
  br i1 %742, label %1026, label %743

743:                                              ; preds = %733
  %744 = trunc i64 %741 to i32
  %745 = load i8, i8* %703, align 1
  %746 = sext i8 %745 to i32
  %747 = shl i32 1, %746
  %748 = load i16, i16* %704, align 2
  %749 = zext i16 %748 to i32
  %750 = xor i32 %744, -1
  %751 = add i32 %749, %750
  %752 = add i32 %751, %747
  %753 = srem i32 %752, %747
  %754 = trunc i32 %753 to i16
  %755 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 3, i64 %706
  store i16 %754, i16* %755, align 2
  %756 = load %"struct.libgav1::DecoderState"*, %"struct.libgav1::DecoderState"** %469, align 8
  %757 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %756, i64 0, i32 0, i32 0, i64 %726
  %758 = load i16, i16* %757, align 2
  %759 = icmp eq i16 %758, %754
  br i1 %759, label %760, label %1026

760:                                              ; preds = %730, %743
  %761 = add nuw nsw i64 %706, 1
  %762 = icmp eq i64 %761, 7
  br i1 %762, label %763, label %705

763:                                              ; preds = %760
  %764 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 25
  %765 = load i8, i8* %764, align 1, !range !2
  %766 = icmp eq i8 %765, 0
  br i1 %766, label %871, label %767

767:                                              ; preds = %763
  %768 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 23
  %769 = load i8, i8* %768, align 1, !range !2
  %770 = icmp eq i8 %769, 0
  br i1 %770, label %771, label %871

771:                                              ; preds = %767
  %772 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 0
  %773 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 35
  %774 = load i8, i8* %772, align 1
  %775 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %776 = bitcast %"class.libgav1::RawBitReader"* %775 to i32 (%"class.libgav1::RawBitReader"*)***
  %777 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %776, align 8
  %778 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %777, i64 2
  %779 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %778, align 8
  %780 = tail call i32 %779(%"class.libgav1::RawBitReader"* %775) #11
  %781 = icmp eq i32 %780, -1
  br i1 %781, label %1026, label %792

782:                                              ; preds = %792
  %783 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 1
  %784 = load i8, i8* %783, align 1
  %785 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %786 = bitcast %"class.libgav1::RawBitReader"* %785 to i32 (%"class.libgav1::RawBitReader"*)***
  %787 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %786, align 8
  %788 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %787, i64 2
  %789 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %788, align 8
  %790 = tail call i32 %789(%"class.libgav1::RawBitReader"* %785) #11
  %791 = icmp eq i32 %790, -1
  br i1 %791, label %1026, label %1028

792:                                              ; preds = %771
  %793 = icmp ne i32 %780, 0
  %794 = zext i1 %793 to i8
  store i8 %794, i8* %773, align 1
  br i1 %793, label %795, label %782

795:                                              ; preds = %1093, %1080, %1067, %1054, %1041, %1028, %792
  %796 = phi i8 [ %774, %792 ], [ %784, %1028 ], [ %1033, %1041 ], [ %1046, %1054 ], [ %1059, %1067 ], [ %1072, %1080 ], [ %1085, %1093 ]
  %797 = load %"struct.libgav1::DecoderState"*, %"struct.libgav1::DecoderState"** %469, align 8
  %798 = sext i8 %796 to i64
  %799 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %797, i64 0, i32 5, i32 0, i64 %798, i32 0
  %800 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %799, align 8
  %801 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %800, i64 0, i32 15
  %802 = load i32, i32* %801, align 4
  %803 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 4
  store i32 %802, i32* %803, align 8
  %804 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %800, i64 0, i32 17
  %805 = load i32, i32* %804, align 4
  %806 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 5
  store i32 %805, i32* %806, align 4
  %807 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %800, i64 0, i32 18
  %808 = load i32, i32* %807, align 32
  %809 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 8
  store i32 %808, i32* %809, align 8
  %810 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %800, i64 0, i32 19
  %811 = load i32, i32* %810, align 4
  %812 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 9
  store i32 %811, i32* %812, align 4
  %813 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 10
  store i32 %802, i32* %813, align 8
  %814 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 29
  store i8 0, i8* %814, align 1
  %815 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 30
  %816 = load i8, i8* %815, align 1, !range !2
  %817 = icmp eq i8 %816, 0
  br i1 %817, label %849, label %818

818:                                              ; preds = %795
  %819 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %820 = bitcast %"class.libgav1::RawBitReader"* %819 to i32 (%"class.libgav1::RawBitReader"*)***
  %821 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %820, align 8
  %822 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %821, i64 2
  %823 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %822, align 8
  %824 = tail call i32 %823(%"class.libgav1::RawBitReader"* %819) #11
  %825 = icmp eq i32 %824, -1
  br i1 %825, label %1026, label %826

826:                                              ; preds = %818
  %827 = icmp ne i32 %824, 0
  %828 = zext i1 %827 to i8
  store i8 %828, i8* %814, align 1
  br i1 %827, label %831, label %829

829:                                              ; preds = %826
  %830 = load i32, i32* %813, align 8
  br label %849

831:                                              ; preds = %826
  %832 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %833 = bitcast %"class.libgav1::RawBitReader"* %832 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %834 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %833, align 8
  %835 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %834, i64 3
  %836 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %835, align 8
  %837 = tail call i64 %836(%"class.libgav1::RawBitReader"* %832, i32 3) #11
  %838 = icmp eq i64 %837, -1
  br i1 %838, label %1026, label %839

839:                                              ; preds = %831
  %840 = trunc i64 %837 to i8
  %841 = add i8 %840, 9
  %842 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 30
  store i8 %841, i8* %842, align 2
  %843 = load i32, i32* %813, align 8
  %844 = shl i32 %843, 3
  %845 = zext i8 %841 to i32
  %846 = lshr i32 %845, 1
  %847 = add nsw i32 %844, %846
  %848 = sdiv i32 %847, %845
  store i32 %848, i32* %803, align 8
  br label %852

849:                                              ; preds = %829, %795
  %850 = phi i32 [ %830, %829 ], [ %802, %795 ]
  %851 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 30
  store i8 8, i8* %851, align 2
  br label %852

852:                                              ; preds = %849, %839
  %853 = phi i32 [ %850, %849 ], [ %843, %839 ]
  %854 = load i32, i32* %806, align 4
  %855 = sdiv i32 2147483647, %854
  %856 = icmp sgt i32 %853, %855
  br i1 %856, label %1026, label %857

857:                                              ; preds = %852
  %858 = load i32, i32* %803, align 8
  %859 = add nsw i32 %858, 7
  %860 = ashr i32 %859, 3
  %861 = shl nsw i32 %860, 1
  %862 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 6
  store i32 %861, i32* %862, align 8
  %863 = add nsw i32 %854, 7
  %864 = ashr i32 %863, 3
  %865 = shl nsw i32 %864, 1
  %866 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 7
  store i32 %865, i32* %866, align 4
  %867 = load i8, i8* %773, align 1, !range !2
  %868 = icmp eq i8 %867, 0
  br i1 %868, label %869, label %873

869:                                              ; preds = %1093, %857
  %870 = tail call zeroext i1 @_ZN7libgav19ObuParser27ParseFrameSizeAndRenderSizeEv(%"class.libgav1::ObuParser"* %0)
  br i1 %870, label %873, label %1026

871:                                              ; preds = %767, %763
  %872 = tail call zeroext i1 @_ZN7libgav19ObuParser27ParseFrameSizeAndRenderSizeEv(%"class.libgav1::ObuParser"* %0)
  br i1 %872, label %873, label %1026

873:                                              ; preds = %857, %871, %869
  %874 = tail call zeroext i1 @_ZNK7libgav19ObuParser22ValidateInterFrameSizeEv(%"class.libgav1::ObuParser"* %0)
  br i1 %874, label %875, label %1026

875:                                              ; preds = %873
  %876 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 36
  %877 = load i8, i8* %876, align 8
  %878 = icmp eq i8 %877, 0
  br i1 %878, label %881, label %879

879:                                              ; preds = %875
  %880 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 37
  store i8 0, i8* %880, align 1
  br label %893

881:                                              ; preds = %875
  %882 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %883 = bitcast %"class.libgav1::RawBitReader"* %882 to i32 (%"class.libgav1::RawBitReader"*)***
  %884 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %883, align 8
  %885 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %884, i64 2
  %886 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %885, align 8
  %887 = tail call i32 %886(%"class.libgav1::RawBitReader"* %882) #11
  %888 = icmp eq i32 %887, -1
  br i1 %888, label %1026, label %889

889:                                              ; preds = %881
  %890 = icmp ne i32 %887, 0
  %891 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 37
  %892 = zext i1 %890 to i8
  store i8 %892, i8* %891, align 1
  br label %893

893:                                              ; preds = %889, %879
  %894 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %895 = bitcast %"class.libgav1::RawBitReader"* %894 to i32 (%"class.libgav1::RawBitReader"*)***
  %896 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %895, align 8
  %897 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %896, i64 2
  %898 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %897, align 8
  %899 = tail call i32 %898(%"class.libgav1::RawBitReader"* %894) #11
  switch i32 %899, label %910 [
    i32 -1, label %1026
    i32 0, label %900
  ]

900:                                              ; preds = %893
  %901 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %902 = bitcast %"class.libgav1::RawBitReader"* %901 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %903 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %902, align 8
  %904 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %903, i64 3
  %905 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %904, align 8
  %906 = tail call i64 %905(%"class.libgav1::RawBitReader"* %901, i32 2) #11
  %907 = icmp eq i64 %906, -1
  br i1 %907, label %1026, label %908

908:                                              ; preds = %900
  %909 = trunc i64 %906 to i8
  br label %910

910:                                              ; preds = %893, %908
  %911 = phi i8 [ %909, %908 ], [ 4, %893 ]
  %912 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 38
  store i8 %911, i8* %912, align 2
  %913 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %914 = bitcast %"class.libgav1::RawBitReader"* %913 to i32 (%"class.libgav1::RawBitReader"*)***
  %915 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %914, align 8
  %916 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %915, i64 2
  %917 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %916, align 8
  %918 = tail call i32 %917(%"class.libgav1::RawBitReader"* %913) #11
  %919 = icmp eq i32 %918, -1
  br i1 %919, label %1026, label %920

920:                                              ; preds = %910
  %921 = icmp ne i32 %918, 0
  %922 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 39
  %923 = zext i1 %921 to i8
  store i8 %923, i8* %922, align 1
  %924 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 23
  %925 = load i8, i8* %924, align 1, !range !2
  %926 = icmp eq i8 %925, 0
  br i1 %926, label %927, label %931

927:                                              ; preds = %920
  %928 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 25
  %929 = load i8, i8* %928, align 2, !range !2
  %930 = icmp eq i8 %929, 0
  br i1 %930, label %931, label %933

931:                                              ; preds = %927, %920
  %932 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 40
  store i8 0, i8* %932, align 4
  br label %945

933:                                              ; preds = %927
  %934 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %935 = bitcast %"class.libgav1::RawBitReader"* %934 to i32 (%"class.libgav1::RawBitReader"*)***
  %936 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %935, align 8
  %937 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %936, i64 2
  %938 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %937, align 8
  %939 = tail call i32 %938(%"class.libgav1::RawBitReader"* %934) #11
  %940 = icmp eq i32 %939, -1
  br i1 %940, label %1026, label %941

941:                                              ; preds = %933
  %942 = icmp ne i32 %939, 0
  %943 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 40
  %944 = zext i1 %942 to i8
  store i8 %944, i8* %943, align 4
  br label %945

945:                                              ; preds = %941, %931, %641, %644, %658
  %946 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 15, i32 0
  %947 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %946, align 8
  %948 = tail call zeroext i1 @_ZN7libgav116RefCountedBuffer18SetFrameDimensionsERKNS_14ObuFrameHeaderE(%"class.libgav1::RefCountedBuffer"* %947, %"struct.libgav1::ObuFrameHeader"* dereferenceable(2080) %283) #11
  br i1 %948, label %949, label %1026

949:                                              ; preds = %945
  %950 = load i8, i8* %284, align 8
  %951 = and i8 %950, -3
  %952 = icmp eq i8 %951, 0
  br i1 %952, label %1006, label %953

953:                                              ; preds = %949
  %954 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %946, align 8
  %955 = load i8, i8* %468, align 2
  %956 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %954, i64 0, i32 32, i32 0, i32 0, i64 0
  store i8 %955, i8* %956, align 1
  %957 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %954, i64 0, i32 32, i32 1, i32 0, i64 0
  store i8 0, i8* %957, align 1
  %958 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %954, i64 0, i32 32, i32 2, i32 0, i64 0
  store i8 0, i8* %958, align 1
  %959 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %954, i64 0, i32 32, i32 3, i32 0, i64 0
  store i8 1, i8* %959, align 1
  %960 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %954, i64 0, i32 32, i32 4, i32 0, i64 0
  store i16 0, i16* %960, align 2
  %961 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 23
  br label %962

962:                                              ; preds = %997, %953
  %963 = phi i64 [ 1, %953 ], [ %1004, %997 ]
  %964 = load %"struct.libgav1::DecoderState"*, %"struct.libgav1::DecoderState"** %469, align 8
  %965 = add nsw i64 %963, -1
  %966 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 %965
  %967 = load i8, i8* %966, align 1
  %968 = sext i8 %967 to i64
  %969 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %964, i64 0, i32 2, i32 0, i64 %968
  %970 = load i8, i8* %969, align 1
  %971 = shl i64 %963, 56
  %972 = ashr exact i64 %971, 56
  %973 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %954, i64 0, i32 32, i32 0, i32 0, i64 %972
  store i8 %970, i8* %973, align 1
  %974 = zext i8 %970 to i32
  %975 = load i8, i8* %468, align 2
  %976 = zext i8 %975 to i32
  %977 = load i8, i8* %961, align 8
  %978 = zext i8 %977 to i32
  %979 = sub nsw i32 %974, %976
  %980 = shl i32 %979, %978
  %981 = ashr i32 %980, %978
  %982 = sub nsw i32 %976, %974
  %983 = shl i32 %982, %978
  %984 = ashr i32 %983, %978
  %985 = trunc i32 %981 to i8
  %986 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %954, i64 0, i32 32, i32 1, i32 0, i64 %972
  store i8 %985, i8* %986, align 1
  %987 = trunc i32 %984 to i8
  %988 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %954, i64 0, i32 32, i32 2, i32 0, i64 %972
  store i8 %987, i8* %988, align 1
  %989 = add i32 %984, -1
  %990 = icmp ugt i32 %989, 30
  %991 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %954, i64 0, i32 32, i32 3, i32 0, i64 %972
  %992 = zext i1 %990 to i8
  store i8 %992, i8* %991, align 1
  br i1 %990, label %997, label %993

993:                                              ; preds = %962
  %994 = sext i32 %984 to i64
  %995 = getelementptr inbounds [32 x i16], [32 x i16]* @_ZN7libgav127kProjectionMvDivisionLookupE, i64 0, i64 %994
  %996 = load i16, i16* %995, align 2
  br label %997

997:                                              ; preds = %962, %993
  %998 = phi i16 [ %996, %993 ], [ 0, %962 ]
  %999 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %954, i64 0, i32 32, i32 4, i32 0, i64 %972
  store i16 %998, i16* %999, align 2
  %1000 = icmp sgt i32 %981, 0
  %1001 = load %"struct.libgav1::DecoderState"*, %"struct.libgav1::DecoderState"** %469, align 8
  %1002 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %1001, i64 0, i32 4, i32 0, i64 %972
  %1003 = zext i1 %1000 to i8
  store i8 %1003, i8* %1002, align 1
  %1004 = add nuw nsw i64 %963, 1
  %1005 = icmp eq i64 %1004, 8
  br i1 %1005, label %1006, label %962

1006:                                             ; preds = %997, %949
  %1007 = load i8, i8* %329, align 4, !range !2
  %1008 = icmp eq i8 %1007, 0
  br i1 %1008, label %1024, label %1009

1009:                                             ; preds = %1006
  %1010 = load i8, i8* %2, align 2, !range !2
  %1011 = icmp eq i8 %1010, 0
  br i1 %1011, label %1012, label %1024

1012:                                             ; preds = %1009
  %1013 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %1014 = bitcast %"class.libgav1::RawBitReader"* %1013 to i32 (%"class.libgav1::RawBitReader"*)***
  %1015 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %1014, align 8
  %1016 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %1015, i64 2
  %1017 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %1016, align 8
  %1018 = tail call i32 %1017(%"class.libgav1::RawBitReader"* %1013) #11
  %1019 = icmp eq i32 %1018, -1
  br i1 %1019, label %1026, label %1020

1020:                                             ; preds = %1012
  %1021 = icmp eq i32 %1018, 0
  %1022 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 41
  %1023 = zext i1 %1021 to i8
  store i8 %1023, i8* %1022, align 1
  br label %1026

1024:                                             ; preds = %1009, %1006
  %1025 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 41
  store i8 0, i8* %1025, align 1
  br label %1026

1026:                                             ; preds = %538, %596, %743, %733, %723, %712, %771, %782, %1031, %1044, %1057, %1070, %1083, %144, %408, %852, %831, %818, %688, %696, %933, %910, %900, %1020, %1024, %1012, %945, %893, %881, %873, %871, %869, %680, %668, %650, %639, %573, %565, %495, %479, %454, %435, %380, %358, %334, %318, %270, %248, %227, %203, %195, %191, %148, %152, %140, %99, %88, %65, %47, %34, %30
  %1027 = phi i1 [ false, %30 ], [ false, %34 ], [ false, %47 ], [ false, %65 ], [ false, %88 ], [ false, %99 ], [ false, %140 ], [ false, %144 ], [ true, %152 ], [ true, %148 ], [ false, %191 ], [ false, %195 ], [ false, %203 ], [ false, %227 ], [ false, %248 ], [ false, %270 ], [ false, %318 ], [ false, %334 ], [ false, %358 ], [ false, %380 ], [ false, %435 ], [ false, %454 ], [ false, %479 ], [ false, %495 ], [ false, %565 ], [ false, %573 ], [ false, %639 ], [ false, %650 ], [ false, %668 ], [ false, %680 ], [ false, %869 ], [ false, %871 ], [ false, %873 ], [ false, %881 ], [ false, %893 ], [ false, %945 ], [ false, %1012 ], [ true, %1024 ], [ true, %1020 ], [ false, %900 ], [ false, %910 ], [ false, %933 ], [ false, %696 ], [ false, %688 ], [ false, %818 ], [ false, %831 ], [ false, %852 ], [ false, %408 ], [ false, %1083 ], [ false, %1070 ], [ false, %1057 ], [ false, %1044 ], [ false, %1031 ], [ false, %782 ], [ false, %771 ], [ false, %712 ], [ false, %723 ], [ false, %733 ], [ false, %743 ], [ false, %596 ], [ false, %538 ]
  ret i1 %1027

1028:                                             ; preds = %782
  %1029 = icmp ne i32 %790, 0
  %1030 = zext i1 %1029 to i8
  store i8 %1030, i8* %773, align 1
  br i1 %1029, label %795, label %1031

1031:                                             ; preds = %1028
  %1032 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 2
  %1033 = load i8, i8* %1032, align 1
  %1034 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %1035 = bitcast %"class.libgav1::RawBitReader"* %1034 to i32 (%"class.libgav1::RawBitReader"*)***
  %1036 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %1035, align 8
  %1037 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %1036, i64 2
  %1038 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %1037, align 8
  %1039 = tail call i32 %1038(%"class.libgav1::RawBitReader"* %1034) #11
  %1040 = icmp eq i32 %1039, -1
  br i1 %1040, label %1026, label %1041

1041:                                             ; preds = %1031
  %1042 = icmp ne i32 %1039, 0
  %1043 = zext i1 %1042 to i8
  store i8 %1043, i8* %773, align 1
  br i1 %1042, label %795, label %1044

1044:                                             ; preds = %1041
  %1045 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 3
  %1046 = load i8, i8* %1045, align 1
  %1047 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %1048 = bitcast %"class.libgav1::RawBitReader"* %1047 to i32 (%"class.libgav1::RawBitReader"*)***
  %1049 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %1048, align 8
  %1050 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %1049, i64 2
  %1051 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %1050, align 8
  %1052 = tail call i32 %1051(%"class.libgav1::RawBitReader"* %1047) #11
  %1053 = icmp eq i32 %1052, -1
  br i1 %1053, label %1026, label %1054

1054:                                             ; preds = %1044
  %1055 = icmp ne i32 %1052, 0
  %1056 = zext i1 %1055 to i8
  store i8 %1056, i8* %773, align 1
  br i1 %1055, label %795, label %1057

1057:                                             ; preds = %1054
  %1058 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 4
  %1059 = load i8, i8* %1058, align 1
  %1060 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %1061 = bitcast %"class.libgav1::RawBitReader"* %1060 to i32 (%"class.libgav1::RawBitReader"*)***
  %1062 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %1061, align 8
  %1063 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %1062, i64 2
  %1064 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %1063, align 8
  %1065 = tail call i32 %1064(%"class.libgav1::RawBitReader"* %1060) #11
  %1066 = icmp eq i32 %1065, -1
  br i1 %1066, label %1026, label %1067

1067:                                             ; preds = %1057
  %1068 = icmp ne i32 %1065, 0
  %1069 = zext i1 %1068 to i8
  store i8 %1069, i8* %773, align 1
  br i1 %1068, label %795, label %1070

1070:                                             ; preds = %1067
  %1071 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 5
  %1072 = load i8, i8* %1071, align 1
  %1073 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %1074 = bitcast %"class.libgav1::RawBitReader"* %1073 to i32 (%"class.libgav1::RawBitReader"*)***
  %1075 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %1074, align 8
  %1076 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %1075, i64 2
  %1077 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %1076, align 8
  %1078 = tail call i32 %1077(%"class.libgav1::RawBitReader"* %1073) #11
  %1079 = icmp eq i32 %1078, -1
  br i1 %1079, label %1026, label %1080

1080:                                             ; preds = %1070
  %1081 = icmp ne i32 %1078, 0
  %1082 = zext i1 %1081 to i8
  store i8 %1082, i8* %773, align 1
  br i1 %1081, label %795, label %1083

1083:                                             ; preds = %1080
  %1084 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 52, i64 6
  %1085 = load i8, i8* %1084, align 1
  %1086 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %319, align 8
  %1087 = bitcast %"class.libgav1::RawBitReader"* %1086 to i32 (%"class.libgav1::RawBitReader"*)***
  %1088 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %1087, align 8
  %1089 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %1088, i64 2
  %1090 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %1089, align 8
  %1091 = tail call i32 %1090(%"class.libgav1::RawBitReader"* %1086) #11
  %1092 = icmp eq i32 %1091, -1
  br i1 %1092, label %1026, label %1093

1093:                                             ; preds = %1083
  %1094 = icmp ne i32 %1091, 0
  %1095 = zext i1 %1094 to i8
  store i8 %1095, i8* %773, align 1
  br i1 %1094, label %795, label %869

1096:                                             ; preds = %312
  %1097 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %315, i64 0, i32 0, i32 1
  %1098 = atomicrmw add i64* %1097, i64 -1 acq_rel
  %1099 = icmp eq i64 %1098, 0
  br i1 %1099, label %1100, label %1106

1100:                                             ; preds = %1096
  %1101 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %315, i64 0, i32 0
  %1102 = bitcast %"class.std::__1::__shared_weak_count"* %315 to void (%"class.std::__1::__shared_count"*)***
  %1103 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %1102, align 8
  %1104 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %1103, i64 2
  %1105 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %1104, align 8
  tail call void %1105(%"class.std::__1::__shared_count"* %1101) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %315) #11
  br label %1106

1106:                                             ; preds = %1100, %1096, %312
  %1107 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %296, i64 0, i32 5, i32 0, i64 2
  %1108 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %296, i64 0, i32 5, i32 0, i64 2, i32 1
  %1109 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %1108, align 8
  %1110 = bitcast %"class.std::__1::shared_ptr"* %1107 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %1110, align 8
  %1111 = icmp eq %"class.std::__1::__shared_weak_count"* %1109, null
  br i1 %1111, label %1122, label %1112

1112:                                             ; preds = %1106
  %1113 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1109, i64 0, i32 0, i32 1
  %1114 = atomicrmw add i64* %1113, i64 -1 acq_rel
  %1115 = icmp eq i64 %1114, 0
  br i1 %1115, label %1116, label %1122

1116:                                             ; preds = %1112
  %1117 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1109, i64 0, i32 0
  %1118 = bitcast %"class.std::__1::__shared_weak_count"* %1109 to void (%"class.std::__1::__shared_count"*)***
  %1119 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %1118, align 8
  %1120 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %1119, i64 2
  %1121 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %1120, align 8
  tail call void %1121(%"class.std::__1::__shared_count"* %1117) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %1109) #11
  br label %1122

1122:                                             ; preds = %1116, %1112, %1106
  %1123 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %296, i64 0, i32 5, i32 0, i64 3
  %1124 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %296, i64 0, i32 5, i32 0, i64 3, i32 1
  %1125 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %1124, align 8
  %1126 = bitcast %"class.std::__1::shared_ptr"* %1123 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %1126, align 8
  %1127 = icmp eq %"class.std::__1::__shared_weak_count"* %1125, null
  br i1 %1127, label %1138, label %1128

1128:                                             ; preds = %1122
  %1129 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1125, i64 0, i32 0, i32 1
  %1130 = atomicrmw add i64* %1129, i64 -1 acq_rel
  %1131 = icmp eq i64 %1130, 0
  br i1 %1131, label %1132, label %1138

1132:                                             ; preds = %1128
  %1133 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1125, i64 0, i32 0
  %1134 = bitcast %"class.std::__1::__shared_weak_count"* %1125 to void (%"class.std::__1::__shared_count"*)***
  %1135 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %1134, align 8
  %1136 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %1135, i64 2
  %1137 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %1136, align 8
  tail call void %1137(%"class.std::__1::__shared_count"* %1133) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %1125) #11
  br label %1138

1138:                                             ; preds = %1132, %1128, %1122
  %1139 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %296, i64 0, i32 5, i32 0, i64 4
  %1140 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %296, i64 0, i32 5, i32 0, i64 4, i32 1
  %1141 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %1140, align 8
  %1142 = bitcast %"class.std::__1::shared_ptr"* %1139 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %1142, align 8
  %1143 = icmp eq %"class.std::__1::__shared_weak_count"* %1141, null
  br i1 %1143, label %1154, label %1144

1144:                                             ; preds = %1138
  %1145 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1141, i64 0, i32 0, i32 1
  %1146 = atomicrmw add i64* %1145, i64 -1 acq_rel
  %1147 = icmp eq i64 %1146, 0
  br i1 %1147, label %1148, label %1154

1148:                                             ; preds = %1144
  %1149 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1141, i64 0, i32 0
  %1150 = bitcast %"class.std::__1::__shared_weak_count"* %1141 to void (%"class.std::__1::__shared_count"*)***
  %1151 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %1150, align 8
  %1152 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %1151, i64 2
  %1153 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %1152, align 8
  tail call void %1153(%"class.std::__1::__shared_count"* %1149) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %1141) #11
  br label %1154

1154:                                             ; preds = %1148, %1144, %1138
  %1155 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %296, i64 0, i32 5, i32 0, i64 5
  %1156 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %296, i64 0, i32 5, i32 0, i64 5, i32 1
  %1157 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %1156, align 8
  %1158 = bitcast %"class.std::__1::shared_ptr"* %1155 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %1158, align 8
  %1159 = icmp eq %"class.std::__1::__shared_weak_count"* %1157, null
  br i1 %1159, label %1170, label %1160

1160:                                             ; preds = %1154
  %1161 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1157, i64 0, i32 0, i32 1
  %1162 = atomicrmw add i64* %1161, i64 -1 acq_rel
  %1163 = icmp eq i64 %1162, 0
  br i1 %1163, label %1164, label %1170

1164:                                             ; preds = %1160
  %1165 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1157, i64 0, i32 0
  %1166 = bitcast %"class.std::__1::__shared_weak_count"* %1157 to void (%"class.std::__1::__shared_count"*)***
  %1167 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %1166, align 8
  %1168 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %1167, i64 2
  %1169 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %1168, align 8
  tail call void %1169(%"class.std::__1::__shared_count"* %1165) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %1157) #11
  br label %1170

1170:                                             ; preds = %1164, %1160, %1154
  %1171 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %296, i64 0, i32 5, i32 0, i64 6
  %1172 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %296, i64 0, i32 5, i32 0, i64 6, i32 1
  %1173 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %1172, align 8
  %1174 = bitcast %"class.std::__1::shared_ptr"* %1171 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %1174, align 8
  %1175 = icmp eq %"class.std::__1::__shared_weak_count"* %1173, null
  br i1 %1175, label %1186, label %1176

1176:                                             ; preds = %1170
  %1177 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1173, i64 0, i32 0, i32 1
  %1178 = atomicrmw add i64* %1177, i64 -1 acq_rel
  %1179 = icmp eq i64 %1178, 0
  br i1 %1179, label %1180, label %1186

1180:                                             ; preds = %1176
  %1181 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1173, i64 0, i32 0
  %1182 = bitcast %"class.std::__1::__shared_weak_count"* %1173 to void (%"class.std::__1::__shared_count"*)***
  %1183 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %1182, align 8
  %1184 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %1183, i64 2
  %1185 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %1184, align 8
  tail call void %1185(%"class.std::__1::__shared_count"* %1181) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %1173) #11
  br label %1186

1186:                                             ; preds = %1180, %1176, %1170
  %1187 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %296, i64 0, i32 5, i32 0, i64 7
  %1188 = getelementptr inbounds %"struct.libgav1::DecoderState", %"struct.libgav1::DecoderState"* %296, i64 0, i32 5, i32 0, i64 7, i32 1
  %1189 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %1188, align 8
  %1190 = bitcast %"class.std::__1::shared_ptr"* %1187 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %1190, align 8
  %1191 = icmp eq %"class.std::__1::__shared_weak_count"* %1189, null
  br i1 %1191, label %318, label %1192

1192:                                             ; preds = %1186
  %1193 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1189, i64 0, i32 0, i32 1
  %1194 = atomicrmw add i64* %1193, i64 -1 acq_rel
  %1195 = icmp eq i64 %1194, 0
  br i1 %1195, label %1196, label %318

1196:                                             ; preds = %1192
  %1197 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1189, i64 0, i32 0
  %1198 = bitcast %"class.std::__1::__shared_weak_count"* %1189 to void (%"class.std::__1::__shared_count"*)***
  %1199 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %1198, align 8
  %1200 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %1199, i64 2
  %1201 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %1200, align 8
  tail call void %1201(%"class.std::__1::__shared_count"* %1197) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %1189) #11
  br label %318
}

declare { %"class.libgav1::RefCountedBuffer"*, %"class.std::__1::__shared_weak_count"* } @_ZN7libgav110BufferPool13GetFreeBufferEv(%"class.libgav1::BufferPool"*) local_unnamed_addr #3

declare zeroext i1 @_ZN7libgav116RefCountedBuffer18SetFrameDimensionsERKNS_14ObuFrameHeaderE(%"class.libgav1::RefCountedBuffer"*, %"struct.libgav1::ObuFrameHeader"* dereferenceable(2080)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser16ParseFrameHeaderEv(%"class.libgav1::ObuParser"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 10
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %289, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZN7libgav19ObuParser20ParseFrameParametersEv(%"class.libgav1::ObuParser"* %0)
  br i1 %6, label %7, label %289

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 18
  %9 = load i8, i8* %8, align 2, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %289

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 15, i32 0
  %13 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %12, align 8
  %14 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 4, i32 0, i32 0
  %15 = load %"struct.libgav1::ObuHeader"*, %"struct.libgav1::ObuHeader"** %14, align 8
  %16 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 4, i32 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, -1
  %19 = getelementptr inbounds %"struct.libgav1::ObuHeader", %"struct.libgav1::ObuHeader"* %15, i64 %18, i32 4
  %20 = load i8, i8* %19, align 1
  %21 = sext i8 %20 to i32
  %22 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %13, i64 0, i32 22
  store i32 %21, i32* %22, align 16
  %23 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %12, align 8
  %24 = load %"struct.libgav1::ObuHeader"*, %"struct.libgav1::ObuHeader"** %14, align 8
  %25 = load i64, i64* %16, align 8
  %26 = add i64 %25, -1
  %27 = getelementptr inbounds %"struct.libgav1::ObuHeader", %"struct.libgav1::ObuHeader"* %24, i64 %26, i32 3
  %28 = load i8, i8* %27, align 1
  %29 = sext i8 %28 to i32
  %30 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %23, i64 0, i32 23
  store i32 %29, i32* %30, align 4
  %31 = tail call zeroext i1 @_ZN7libgav19ObuParser19ParseTileInfoSyntaxEv(%"class.libgav1::ObuParser"* %0)
  br i1 %31, label %32, label %289

32:                                               ; preds = %11
  %33 = tail call zeroext i1 @_ZN7libgav19ObuParser24ParseQuantizerParametersEv(%"class.libgav1::ObuParser"* %0)
  br i1 %33, label %34, label %289

34:                                               ; preds = %32
  %35 = tail call zeroext i1 @_ZN7libgav19ObuParser27ParseSegmentationParametersEv(%"class.libgav1::ObuParser"* %0)
  br i1 %35, label %36, label %289

36:                                               ; preds = %34
  %37 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %12, align 8
  %38 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 17
  tail call void @_ZN7libgav116RefCountedBuffer25SetSegmentationParametersERKNS_12SegmentationE(%"class.libgav1::RefCountedBuffer"* %37, %"struct.libgav1::Segmentation"* dereferenceable(214) %38) #11
  %39 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 16, i32 0
  %40 = load i8, i8* %39, align 4
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %66, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %43, align 8
  %45 = bitcast %"class.libgav1::RawBitReader"* %44 to i32 (%"class.libgav1::RawBitReader"*)***
  %46 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %45, align 8
  %47 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %46, i64 2
  %48 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %47, align 8
  %49 = tail call i32 %48(%"class.libgav1::RawBitReader"* %44) #11
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %289, label %51

51:                                               ; preds = %42
  %52 = icmp ne i32 %49, 0
  %53 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 50, i32 0
  %54 = zext i1 %52 to i8
  store i8 %54, i8* %53, align 1
  br i1 %52, label %55, label %66

55:                                               ; preds = %51
  %56 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %43, align 8
  %57 = bitcast %"class.libgav1::RawBitReader"* %56 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %58 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %57, align 8
  %59 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %58, i64 3
  %60 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %59, align 8
  %61 = tail call i64 %60(%"class.libgav1::RawBitReader"* %56, i32 2) #11
  %62 = icmp eq i64 %61, -1
  br i1 %62, label %289, label %63

63:                                               ; preds = %55
  %64 = trunc i64 %61 to i8
  %65 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 50, i32 1
  store i8 %64, i8* %65, align 1
  br label %66

66:                                               ; preds = %36, %51, %63
  %67 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 50, i32 0
  %68 = load i8, i8* %67, align 1, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %116, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 32
  %72 = load i8, i8* %71, align 4, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 51, i32 0
  %76 = load i8, i8* %75, align 2, !range !2
  br label %90

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %78, align 8
  %80 = bitcast %"class.libgav1::RawBitReader"* %79 to i32 (%"class.libgav1::RawBitReader"*)***
  %81 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %80, align 8
  %82 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %81, i64 2
  %83 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %82, align 8
  %84 = tail call i32 %83(%"class.libgav1::RawBitReader"* %79) #11
  %85 = icmp eq i32 %84, -1
  br i1 %85, label %289, label %86

86:                                               ; preds = %77
  %87 = icmp ne i32 %84, 0
  %88 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 51, i32 0
  %89 = zext i1 %87 to i8
  store i8 %89, i8* %88, align 2
  br label %90

90:                                               ; preds = %86, %74
  %91 = phi i8 [ %76, %74 ], [ %89, %86 ]
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %116, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %95 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %94, align 8
  %96 = bitcast %"class.libgav1::RawBitReader"* %95 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %97 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %96, align 8
  %98 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %97, i64 3
  %99 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %98, align 8
  %100 = tail call i64 %99(%"class.libgav1::RawBitReader"* %95, i32 2) #11
  %101 = icmp eq i64 %100, -1
  br i1 %101, label %289, label %102

102:                                              ; preds = %93
  %103 = trunc i64 %100 to i8
  %104 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 51, i32 1
  store i8 %103, i8* %104, align 1
  %105 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %94, align 8
  %106 = bitcast %"class.libgav1::RawBitReader"* %105 to i32 (%"class.libgav1::RawBitReader"*)***
  %107 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %106, align 8
  %108 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %107, i64 2
  %109 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %108, align 8
  %110 = tail call i32 %109(%"class.libgav1::RawBitReader"* %105) #11
  %111 = icmp eq i32 %110, -1
  br i1 %111, label %289, label %112

112:                                              ; preds = %102
  %113 = icmp ne i32 %110, 0
  %114 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 51, i32 2
  %115 = zext i1 %113 to i8
  store i8 %115, i8* %114, align 2
  br label %116

116:                                              ; preds = %90, %66, %112
  %117 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 42
  store i8 1, i8* %117, align 2
  %118 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 16, i32 1, i64 0
  %119 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 16, i32 1, i64 1
  %120 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 16, i32 2, i64 1
  %121 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 16, i32 1, i64 2
  %122 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 16, i32 2, i64 2
  br label %128

123:                                              ; preds = %158
  %124 = load i8, i8* %117, align 2, !range !2
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %126, label %161

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 43
  store i8 0, i8* %127, align 1
  br label %171

128:                                              ; preds = %158, %116
  %129 = phi i64 [ 0, %116 ], [ %159, %158 ]
  %130 = load i8, i8* %39, align 1
  %131 = zext i8 %130 to i32
  %132 = trunc i64 %129 to i32
  %133 = tail call i32 @_ZN7libgav19GetQIndexERKNS_12SegmentationEii(%"struct.libgav1::Segmentation"* dereferenceable(214) %38, i32 %132, i32 %131) #11
  %134 = trunc i32 %133 to i8
  %135 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 17, i32 9, i64 %129
  store i8 %134, i8* %135, align 1
  %136 = and i32 %133, 255
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %150

138:                                              ; preds = %128
  %139 = load i8, i8* %118, align 1
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %141, label %150

141:                                              ; preds = %138
  %142 = load i8, i8* %119, align 1
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %150

144:                                              ; preds = %141
  %145 = load i8, i8* %120, align 1
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %147, label %150

147:                                              ; preds = %144
  %148 = load i8, i8* %121, align 1
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %152, label %150

150:                                              ; preds = %147, %144, %141, %138, %128
  %151 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 17, i32 8, i64 %129
  store i8 0, i8* %151, align 1
  br label %157

152:                                              ; preds = %147
  %153 = load i8, i8* %122, align 1
  %154 = icmp eq i8 %153, 0
  %155 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 17, i32 8, i64 %129
  %156 = zext i1 %154 to i8
  store i8 %156, i8* %155, align 1
  br i1 %154, label %158, label %157

157:                                              ; preds = %152, %150
  store i8 0, i8* %117, align 2
  br label %158

158:                                              ; preds = %157, %152
  %159 = add nuw nsw i64 %129, 1
  %160 = icmp eq i64 %159, 8
  br i1 %160, label %123, label %128

161:                                              ; preds = %123
  %162 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 4
  %163 = load i32, i32* %162, align 8
  %164 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 10
  %165 = load i32, i32* %164, align 8
  %166 = icmp eq i32 %163, %165
  %167 = zext i1 %166 to i8
  %168 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 43
  store i8 %167, i8* %168, align 1
  %169 = load i8, i8* %67, align 1, !range !2
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %171, label %289

171:                                              ; preds = %126, %161
  %172 = tail call zeroext i1 @_ZN7libgav19ObuParser25ParseLoopFilterParametersEv(%"class.libgav1::ObuParser"* %0)
  br i1 %172, label %173, label %289

173:                                              ; preds = %171
  %174 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %12, align 8
  %175 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %174, i64 0, i32 28, i32 0, i64 0
  %176 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 4, i32 0, i64 0
  %177 = bitcast i8* %176 to i64*
  %178 = bitcast i8* %175 to i64*
  %179 = load i64, i64* %177, align 1
  store i64 %179, i64* %178, align 32
  %180 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %174, i64 0, i32 29, i32 0, i64 0
  %181 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 54, i32 5, i32 0, i64 0
  %182 = bitcast i8* %181 to i16*
  %183 = bitcast i8* %180 to i16*
  %184 = load i16, i16* %182, align 1
  store i16 %184, i16* %183, align 8
  %185 = tail call zeroext i1 @_ZN7libgav19ObuParser19ParseCdefParametersEv(%"class.libgav1::ObuParser"* %0)
  br i1 %185, label %186, label %289

186:                                              ; preds = %173
  %187 = tail call zeroext i1 @_ZN7libgav19ObuParser30ParseLoopRestorationParametersEv(%"class.libgav1::ObuParser"* %0)
  br i1 %187, label %188, label %289

188:                                              ; preds = %186
  %189 = load i8, i8* %117, align 2, !range !2
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %191, label %203

191:                                              ; preds = %188
  %192 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %193 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %192, align 8
  %194 = bitcast %"class.libgav1::RawBitReader"* %193 to i32 (%"class.libgav1::RawBitReader"*)***
  %195 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %194, align 8
  %196 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %195, i64 2
  %197 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %196, align 8
  %198 = tail call i32 %197(%"class.libgav1::RawBitReader"* %193) #11
  %199 = icmp eq i32 %198, -1
  br i1 %199, label %289, label %200

200:                                              ; preds = %191
  %201 = icmp eq i32 %198, 1
  %202 = select i1 %201, i8 2, i8 1
  br label %203

203:                                              ; preds = %188, %200
  %204 = phi i8 [ %202, %200 ], [ 0, %188 ]
  %205 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 44
  store i8 %204, i8* %205, align 8
  %206 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 20
  %207 = load i8, i8* %206, align 8
  %208 = and i8 %207, -3
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %223, label %210

210:                                              ; preds = %203
  %211 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %212 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %211, align 8
  %213 = bitcast %"class.libgav1::RawBitReader"* %212 to i32 (%"class.libgav1::RawBitReader"*)***
  %214 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %213, align 8
  %215 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %214, i64 2
  %216 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %215, align 8
  %217 = tail call i32 %216(%"class.libgav1::RawBitReader"* %212) #11
  %218 = icmp eq i32 %217, -1
  br i1 %218, label %289, label %219

219:                                              ; preds = %210
  %220 = icmp ne i32 %217, 0
  %221 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 45
  %222 = zext i1 %220 to i8
  store i8 %222, i8* %221, align 1
  br label %223

223:                                              ; preds = %219, %203
  %224 = tail call zeroext i1 @_ZN7libgav19ObuParser17IsSkipModeAllowedEv(%"class.libgav1::ObuParser"* %0) #11
  br i1 %224, label %225, label %238

225:                                              ; preds = %223
  %226 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %227 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %226, align 8
  %228 = bitcast %"class.libgav1::RawBitReader"* %227 to i32 (%"class.libgav1::RawBitReader"*)***
  %229 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %228, align 8
  %230 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %229, i64 2
  %231 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %230, align 8
  %232 = tail call i32 %231(%"class.libgav1::RawBitReader"* %227) #11
  %233 = icmp eq i32 %232, -1
  br i1 %233, label %289, label %234

234:                                              ; preds = %225
  %235 = icmp ne i32 %232, 0
  %236 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 47
  %237 = zext i1 %235 to i8
  store i8 %237, i8* %236, align 4
  br label %238

238:                                              ; preds = %223, %234
  %239 = load i8, i8* %206, align 8
  %240 = and i8 %239, -3
  %241 = icmp eq i8 %240, 0
  br i1 %241, label %263, label %242

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 23
  %244 = load i8, i8* %243, align 1, !range !2
  %245 = icmp eq i8 %244, 0
  br i1 %245, label %246, label %263

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 19
  %248 = load i8, i8* %247, align 4, !range !2
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %263, label %250

250:                                              ; preds = %246
  %251 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %252 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %251, align 8
  %253 = bitcast %"class.libgav1::RawBitReader"* %252 to i32 (%"class.libgav1::RawBitReader"*)***
  %254 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %253, align 8
  %255 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %254, i64 2
  %256 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %255, align 8
  %257 = tail call i32 %256(%"class.libgav1::RawBitReader"* %252) #11
  %258 = icmp eq i32 %257, -1
  br i1 %258, label %289, label %259

259:                                              ; preds = %250
  %260 = icmp ne i32 %257, 0
  %261 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 49
  %262 = zext i1 %260 to i8
  store i8 %262, i8* %261, align 2
  br label %263

263:                                              ; preds = %246, %242, %238, %259
  %264 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %265 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %264, align 8
  %266 = bitcast %"class.libgav1::RawBitReader"* %265 to i32 (%"class.libgav1::RawBitReader"*)***
  %267 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %266, align 8
  %268 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %267, i64 2
  %269 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %268, align 8
  %270 = tail call i32 %269(%"class.libgav1::RawBitReader"* %265) #11
  %271 = icmp eq i32 %270, -1
  br i1 %271, label %289, label %272

272:                                              ; preds = %263
  %273 = icmp ne i32 %270, 0
  %274 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 48
  %275 = zext i1 %273 to i8
  store i8 %275, i8* %274, align 1
  %276 = tail call zeroext i1 @_ZN7libgav19ObuParser27ParseGlobalMotionParametersEv(%"class.libgav1::ObuParser"* %0)
  br i1 %276, label %277, label %289

277:                                              ; preds = %272
  %278 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %12, align 8
  %279 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 14
  tail call void @_ZN7libgav116RefCountedBuffer16SetGlobalMotionsERKNSt3__15arrayINS_12GlobalMotionELm8EEE(%"class.libgav1::RefCountedBuffer"* %278, %"struct.std::__1::array"* dereferenceable(288) %279) #11
  %280 = tail call zeroext i1 @_ZN7libgav19ObuParser24ParseFilmGrainParametersEv(%"class.libgav1::ObuParser"* %0)
  br i1 %280, label %281, label %289

281:                                              ; preds = %277
  %282 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 41
  %283 = load i8, i8* %282, align 1, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %289, label %285

285:                                              ; preds = %281
  %286 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %12, align 8
  %287 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %286, i64 0, i32 31, i32 0
  %288 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 56, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 32 %287, i8* align 4 %288, i64 172, i1 false) #11
  br label %289

289:                                              ; preds = %250, %225, %210, %191, %102, %93, %77, %55, %42, %173, %186, %11, %32, %34, %161, %171, %285, %281, %277, %272, %263, %7, %5, %1
  %290 = phi i1 [ false, %1 ], [ false, %5 ], [ true, %7 ], [ false, %34 ], [ false, %161 ], [ false, %171 ], [ false, %263 ], [ false, %272 ], [ false, %277 ], [ true, %281 ], [ true, %285 ], [ false, %32 ], [ false, %11 ], [ false, %186 ], [ false, %173 ], [ false, %42 ], [ false, %55 ], [ false, %77 ], [ false, %93 ], [ false, %102 ], [ false, %191 ], [ false, %210 ], [ false, %225 ], [ false, %250 ]
  ret i1 %290
}

declare void @_ZN7libgav116RefCountedBuffer25SetSegmentationParametersERKNS_12SegmentationE(%"class.libgav1::RefCountedBuffer"*, %"struct.libgav1::Segmentation"* dereferenceable(214)) local_unnamed_addr #3

declare void @_ZN7libgav116RefCountedBuffer16SetGlobalMotionsERKNSt3__15arrayINS_12GlobalMotionELm8EEE(%"class.libgav1::RefCountedBuffer"*, %"struct.std::__1::array"* dereferenceable(288)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser12ParsePaddingEPKhm(%"class.libgav1::ObuParser"* nocapture readonly, i8* nocapture readonly, i64) local_unnamed_addr #1 align 2 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %31, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, 2147483647
  br i1 %6, label %31, label %7

7:                                                ; preds = %5
  %8 = shl i64 %2, 32
  %9 = ashr exact i64 %8, 32
  br label %10

10:                                               ; preds = %14, %7
  %11 = phi i64 [ %12, %14 ], [ %9, %7 ]
  %12 = add nsw i64 %11, -1
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %10
  %15 = getelementptr inbounds i8, i8* %1, i64 %12
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %10, label %18

18:                                               ; preds = %10, %14
  %19 = trunc i64 %12 to i32
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %18
  %22 = shl i64 %12, 32
  %23 = ashr exact i64 %22, 32
  %24 = getelementptr inbounds i8, i8* %1, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, -128
  br i1 %26, label %27, label %31

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %28, align 8
  %30 = tail call zeroext i1 @_ZN7libgav112RawBitReader9SkipBytesEm(%"class.libgav1::RawBitReader"* %29, i64 %23) #11
  br label %31

31:                                               ; preds = %5, %27, %18, %21, %3
  %32 = phi i1 [ true, %3 ], [ true, %27 ], [ false, %18 ], [ false, %21 ], [ false, %5 ]
  ret i1 %32
}

declare zeroext i1 @_ZN7libgav112RawBitReader9SkipBytesEm(%"class.libgav1::RawBitReader"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser24ParseMetadataScalabilityEv(%"class.libgav1::ObuParser"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %4 = bitcast %"class.libgav1::RawBitReader"* %3 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %5 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %5, i64 3
  %7 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %6, align 8
  %8 = tail call i64 %7(%"class.libgav1::RawBitReader"* %3, i32 8) #11
  %9 = icmp eq i64 %8, -1
  br i1 %9, label %157, label %10

10:                                               ; preds = %1
  %11 = trunc i64 %8 to i32
  %12 = icmp eq i32 %11, 14
  br i1 %12, label %13, label %157

13:                                               ; preds = %10
  %14 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %15 = bitcast %"class.libgav1::RawBitReader"* %14 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %16 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %15, align 8
  %17 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %16, i64 3
  %18 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %17, align 8
  %19 = tail call i64 %18(%"class.libgav1::RawBitReader"* %14, i32 2) #11
  %20 = icmp eq i64 %19, -1
  br i1 %20, label %157, label %21

21:                                               ; preds = %13
  %22 = trunc i64 %19 to i32
  %23 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %24 = bitcast %"class.libgav1::RawBitReader"* %23 to i32 (%"class.libgav1::RawBitReader"*)***
  %25 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %24, align 8
  %26 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %25, i64 2
  %27 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %26, align 8
  %28 = tail call i32 %27(%"class.libgav1::RawBitReader"* %23) #11
  %29 = icmp eq i32 %28, -1
  br i1 %29, label %157, label %30

30:                                               ; preds = %21
  %31 = icmp eq i32 %28, 0
  %32 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %33 = bitcast %"class.libgav1::RawBitReader"* %32 to i32 (%"class.libgav1::RawBitReader"*)***
  %34 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %34, i64 2
  %36 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %35, align 8
  %37 = tail call i32 %36(%"class.libgav1::RawBitReader"* %32) #11
  %38 = icmp eq i32 %37, -1
  br i1 %38, label %157, label %39

39:                                               ; preds = %30
  %40 = icmp eq i32 %37, 0
  %41 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %42 = bitcast %"class.libgav1::RawBitReader"* %41 to i32 (%"class.libgav1::RawBitReader"*)***
  %43 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %42, align 8
  %44 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %43, i64 2
  %45 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %44, align 8
  %46 = tail call i32 %45(%"class.libgav1::RawBitReader"* %41) #11
  %47 = icmp eq i32 %46, -1
  br i1 %47, label %157, label %48

48:                                               ; preds = %39
  %49 = icmp eq i32 %46, 0
  %50 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %51 = bitcast %"class.libgav1::RawBitReader"* %50 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %52 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %51, align 8
  %53 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %52, i64 3
  %54 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %53, align 8
  %55 = tail call i64 %54(%"class.libgav1::RawBitReader"* %50, i32 3) #11
  %56 = icmp eq i64 %55, -1
  br i1 %56, label %157, label %57

57:                                               ; preds = %48
  %58 = icmp slt i32 %22, 0
  %59 = or i1 %31, %58
  br i1 %59, label %80, label %63

60:                                               ; preds = %72
  %61 = add nuw i32 %64, 1
  %62 = icmp eq i32 %64, %22
  br i1 %62, label %80, label %63

63:                                               ; preds = %57, %60
  %64 = phi i32 [ %61, %60 ], [ 0, %57 ]
  %65 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %66 = bitcast %"class.libgav1::RawBitReader"* %65 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %67 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %66, align 8
  %68 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %67, i64 3
  %69 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %68, align 8
  %70 = tail call i64 %69(%"class.libgav1::RawBitReader"* %65, i32 16) #11
  %71 = icmp eq i64 %70, -1
  br i1 %71, label %157, label %72

72:                                               ; preds = %63
  %73 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %74 = bitcast %"class.libgav1::RawBitReader"* %73 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %75 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %74, align 8
  %76 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %75, i64 3
  %77 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %76, align 8
  %78 = tail call i64 %77(%"class.libgav1::RawBitReader"* %73, i32 16) #11
  %79 = icmp eq i64 %78, -1
  br i1 %79, label %157, label %60

80:                                               ; preds = %60, %57
  %81 = or i1 %40, %58
  br i1 %81, label %94, label %85

82:                                               ; preds = %85
  %83 = add nuw i32 %86, 1
  %84 = icmp eq i32 %86, %22
  br i1 %84, label %94, label %85

85:                                               ; preds = %80, %82
  %86 = phi i32 [ %83, %82 ], [ 0, %80 ]
  %87 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %88 = bitcast %"class.libgav1::RawBitReader"* %87 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %89 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %88, align 8
  %90 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %89, i64 3
  %91 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %90, align 8
  %92 = tail call i64 %91(%"class.libgav1::RawBitReader"* %87, i32 8) #11
  %93 = icmp eq i64 %92, -1
  br i1 %93, label %157, label %82

94:                                               ; preds = %82, %80
  br i1 %49, label %157, label %95

95:                                               ; preds = %94
  %96 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %97 = bitcast %"class.libgav1::RawBitReader"* %96 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %98 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %97, align 8
  %99 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %98, i64 3
  %100 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %99, align 8
  %101 = tail call i64 %100(%"class.libgav1::RawBitReader"* %96, i32 8) #11
  %102 = icmp eq i64 %101, -1
  br i1 %102, label %157, label %103

103:                                              ; preds = %95
  %104 = trunc i64 %101 to i32
  %105 = icmp sgt i32 %104, 0
  br i1 %105, label %106, label %157

106:                                              ; preds = %103, %154
  %107 = phi i32 [ %155, %154 ], [ 0, %103 ]
  %108 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %109 = bitcast %"class.libgav1::RawBitReader"* %108 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %110 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %109, align 8
  %111 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %110, i64 3
  %112 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %111, align 8
  %113 = tail call i64 %112(%"class.libgav1::RawBitReader"* %108, i32 3) #11
  %114 = icmp eq i64 %113, -1
  br i1 %114, label %157, label %115

115:                                              ; preds = %106
  %116 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %117 = bitcast %"class.libgav1::RawBitReader"* %116 to i32 (%"class.libgav1::RawBitReader"*)***
  %118 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %117, align 8
  %119 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %118, i64 2
  %120 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %119, align 8
  %121 = tail call i32 %120(%"class.libgav1::RawBitReader"* %116) #11
  %122 = icmp eq i32 %121, -1
  br i1 %122, label %157, label %123

123:                                              ; preds = %115
  %124 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %125 = bitcast %"class.libgav1::RawBitReader"* %124 to i32 (%"class.libgav1::RawBitReader"*)***
  %126 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %125, align 8
  %127 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %126, i64 2
  %128 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %127, align 8
  %129 = tail call i32 %128(%"class.libgav1::RawBitReader"* %124) #11
  %130 = icmp eq i32 %129, -1
  br i1 %130, label %157, label %131

131:                                              ; preds = %123
  %132 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %133 = bitcast %"class.libgav1::RawBitReader"* %132 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %134 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %133, align 8
  %135 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %134, i64 3
  %136 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %135, align 8
  %137 = tail call i64 %136(%"class.libgav1::RawBitReader"* %132, i32 3) #11
  %138 = icmp eq i64 %137, -1
  br i1 %138, label %157, label %139

139:                                              ; preds = %131
  %140 = trunc i64 %137 to i32
  %141 = icmp sgt i32 %140, 0
  br i1 %141, label %144, label %154

142:                                              ; preds = %144
  %143 = icmp eq i32 %153, %140
  br i1 %143, label %154, label %144

144:                                              ; preds = %139, %142
  %145 = phi i32 [ %153, %142 ], [ 0, %139 ]
  %146 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %147 = bitcast %"class.libgav1::RawBitReader"* %146 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %148 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %147, align 8
  %149 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %148, i64 3
  %150 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %149, align 8
  %151 = tail call i64 %150(%"class.libgav1::RawBitReader"* %146, i32 8) #11
  %152 = icmp eq i64 %151, -1
  %153 = add nuw nsw i32 %145, 1
  br i1 %152, label %157, label %142

154:                                              ; preds = %142, %139
  %155 = add nuw nsw i32 %107, 1
  %156 = icmp eq i32 %155, %104
  br i1 %156, label %157, label %106

157:                                              ; preds = %72, %63, %85, %131, %123, %115, %106, %154, %144, %103, %95, %48, %39, %30, %21, %10, %94, %13, %1
  %158 = phi i1 [ false, %1 ], [ false, %13 ], [ true, %94 ], [ true, %10 ], [ false, %21 ], [ false, %30 ], [ false, %39 ], [ false, %48 ], [ false, %95 ], [ true, %103 ], [ false, %144 ], [ true, %154 ], [ false, %131 ], [ false, %123 ], [ false, %115 ], [ false, %106 ], [ false, %85 ], [ false, %63 ], [ false, %72 ]
  ret i1 %158
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser21ParseMetadataTimecodeEv(%"class.libgav1::ObuParser"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %4 = bitcast %"class.libgav1::RawBitReader"* %3 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %5 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %5, i64 3
  %7 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %6, align 8
  %8 = tail call i64 %7(%"class.libgav1::RawBitReader"* %3, i32 5) #11
  %9 = icmp eq i64 %8, -1
  br i1 %9, label %150, label %10

10:                                               ; preds = %1
  %11 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %12 = bitcast %"class.libgav1::RawBitReader"* %11 to i32 (%"class.libgav1::RawBitReader"*)***
  %13 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %13, i64 2
  %15 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %14, align 8
  %16 = tail call i32 %15(%"class.libgav1::RawBitReader"* %11) #11
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %150, label %18

18:                                               ; preds = %10
  %19 = icmp eq i32 %16, 0
  %20 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %21 = bitcast %"class.libgav1::RawBitReader"* %20 to i32 (%"class.libgav1::RawBitReader"*)***
  %22 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %21, align 8
  %23 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %22, i64 2
  %24 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %23, align 8
  %25 = tail call i32 %24(%"class.libgav1::RawBitReader"* %20) #11
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %150, label %27

27:                                               ; preds = %18
  %28 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %29 = bitcast %"class.libgav1::RawBitReader"* %28 to i32 (%"class.libgav1::RawBitReader"*)***
  %30 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %29, align 8
  %31 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %30, i64 2
  %32 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %31, align 8
  %33 = tail call i32 %32(%"class.libgav1::RawBitReader"* %28) #11
  %34 = icmp eq i32 %33, -1
  br i1 %34, label %150, label %35

35:                                               ; preds = %27
  %36 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %37 = bitcast %"class.libgav1::RawBitReader"* %36 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %38 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %37, align 8
  %39 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %38, i64 3
  %40 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %39, align 8
  %41 = tail call i64 %40(%"class.libgav1::RawBitReader"* %36, i32 9) #11
  %42 = icmp eq i64 %41, -1
  br i1 %42, label %150, label %43

43:                                               ; preds = %35
  %44 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  br i1 %19, label %77, label %45

45:                                               ; preds = %43
  %46 = bitcast %"class.libgav1::RawBitReader"* %44 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %47 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %46, align 8
  %48 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %47, i64 3
  %49 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %48, align 8
  %50 = tail call i64 %49(%"class.libgav1::RawBitReader"* %44, i32 6) #11
  %51 = icmp eq i64 %50, -1
  %52 = trunc i64 %50 to i32
  %53 = icmp sgt i32 %52, 59
  %54 = or i1 %51, %53
  br i1 %54, label %150, label %55

55:                                               ; preds = %45
  %56 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %57 = bitcast %"class.libgav1::RawBitReader"* %56 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %58 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %57, align 8
  %59 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %58, i64 3
  %60 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %59, align 8
  %61 = tail call i64 %60(%"class.libgav1::RawBitReader"* %56, i32 6) #11
  %62 = icmp eq i64 %61, -1
  %63 = trunc i64 %61 to i32
  %64 = icmp sgt i32 %63, 59
  %65 = or i1 %62, %64
  br i1 %65, label %150, label %66

66:                                               ; preds = %55
  %67 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %68 = bitcast %"class.libgav1::RawBitReader"* %67 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %69 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %68, align 8
  %70 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %69, i64 3
  %71 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %70, align 8
  %72 = tail call i64 %71(%"class.libgav1::RawBitReader"* %67, i32 5) #11
  %73 = icmp eq i64 %72, -1
  %74 = trunc i64 %72 to i32
  %75 = icmp sgt i32 %74, 23
  %76 = or i1 %73, %75
  br i1 %76, label %150, label %130

77:                                               ; preds = %43
  %78 = bitcast %"class.libgav1::RawBitReader"* %44 to i32 (%"class.libgav1::RawBitReader"*)***
  %79 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %78, align 8
  %80 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %79, i64 2
  %81 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %80, align 8
  %82 = tail call i32 %81(%"class.libgav1::RawBitReader"* %44) #11
  switch i32 %82, label %83 [
    i32 -1, label %150
    i32 0, label %130
  ]

83:                                               ; preds = %77
  %84 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %85 = bitcast %"class.libgav1::RawBitReader"* %84 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %86 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %85, align 8
  %87 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %86, i64 3
  %88 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %87, align 8
  %89 = tail call i64 %88(%"class.libgav1::RawBitReader"* %84, i32 6) #11
  %90 = icmp eq i64 %89, -1
  %91 = trunc i64 %89 to i32
  %92 = icmp sgt i32 %91, 59
  %93 = or i1 %90, %92
  br i1 %93, label %150, label %94

94:                                               ; preds = %83
  %95 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %96 = bitcast %"class.libgav1::RawBitReader"* %95 to i32 (%"class.libgav1::RawBitReader"*)***
  %97 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %96, align 8
  %98 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %97, i64 2
  %99 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %98, align 8
  %100 = tail call i32 %99(%"class.libgav1::RawBitReader"* %95) #11
  switch i32 %100, label %101 [
    i32 -1, label %150
    i32 0, label %130
  ]

101:                                              ; preds = %94
  %102 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %103 = bitcast %"class.libgav1::RawBitReader"* %102 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %104 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %103, align 8
  %105 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %104, i64 3
  %106 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %105, align 8
  %107 = tail call i64 %106(%"class.libgav1::RawBitReader"* %102, i32 6) #11
  %108 = icmp eq i64 %107, -1
  %109 = trunc i64 %107 to i32
  %110 = icmp sgt i32 %109, 59
  %111 = or i1 %108, %110
  br i1 %111, label %150, label %112

112:                                              ; preds = %101
  %113 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %114 = bitcast %"class.libgav1::RawBitReader"* %113 to i32 (%"class.libgav1::RawBitReader"*)***
  %115 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %114, align 8
  %116 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %115, i64 2
  %117 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %116, align 8
  %118 = tail call i32 %117(%"class.libgav1::RawBitReader"* %113) #11
  switch i32 %118, label %119 [
    i32 -1, label %150
    i32 0, label %130
  ]

119:                                              ; preds = %112
  %120 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %121 = bitcast %"class.libgav1::RawBitReader"* %120 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %122 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %121, align 8
  %123 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %122, i64 3
  %124 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %123, align 8
  %125 = tail call i64 %124(%"class.libgav1::RawBitReader"* %120, i32 5) #11
  %126 = icmp ne i64 %125, -1
  %127 = trunc i64 %125 to i32
  %128 = icmp slt i32 %127, 24
  %129 = and i1 %126, %128
  br i1 %129, label %130, label %150

130:                                              ; preds = %119, %66, %77, %94, %112
  %131 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %132 = bitcast %"class.libgav1::RawBitReader"* %131 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %133 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %132, align 8
  %134 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %133, i64 3
  %135 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %134, align 8
  %136 = tail call i64 %135(%"class.libgav1::RawBitReader"* %131, i32 5) #11
  %137 = icmp eq i64 %136, -1
  br i1 %137, label %150, label %138

138:                                              ; preds = %130
  %139 = trunc i64 %136 to i32
  %140 = icmp sgt i32 %139, 0
  br i1 %140, label %141, label %149

141:                                              ; preds = %138
  %142 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %2, align 8
  %143 = bitcast %"class.libgav1::RawBitReader"* %142 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %144 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %143, align 8
  %145 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %144, i64 3
  %146 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %145, align 8
  %147 = tail call i64 %146(%"class.libgav1::RawBitReader"* %142, i32 %139) #11
  %148 = icmp eq i64 %147, -1
  br i1 %148, label %150, label %149

149:                                              ; preds = %141, %138
  br label %150

150:                                              ; preds = %119, %112, %101, %94, %66, %55, %83, %18, %27, %35, %45, %77, %130, %141, %149, %10, %1
  %151 = phi i1 [ false, %1 ], [ false, %10 ], [ false, %18 ], [ false, %27 ], [ false, %35 ], [ false, %45 ], [ false, %77 ], [ false, %130 ], [ true, %149 ], [ false, %141 ], [ false, %83 ], [ false, %55 ], [ false, %66 ], [ false, %94 ], [ false, %101 ], [ false, %112 ], [ false, %119 ]
  ret i1 %151
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser13ParseMetadataEPKhm(%"class.libgav1::ObuParser"* nocapture, i8* nocapture readonly, i64) local_unnamed_addr #1 align 2 {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %7 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %6, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  store i64 -6148914691236517206, i64* %4, align 8
  %10 = call zeroext i1 @_ZN7libgav112RawBitReader18ReadUnsignedLeb128EPm(%"class.libgav1::RawBitReader"* %6, i64* nonnull %4) #11
  br i1 %10, label %11, label %206

11:                                               ; preds = %3
  %12 = add i64 %8, 7
  %13 = lshr i64 %12, 3
  %14 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %15 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %14, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 7
  %18 = lshr i64 %17, 3
  %19 = sub nsw i64 %18, %13
  %20 = icmp ugt i64 %19, %2
  br i1 %20, label %206, label %21

21:                                               ; preds = %11
  %22 = getelementptr inbounds i8, i8* %1, i64 %19
  %23 = sub i64 %2, %19
  %24 = load i64, i64* %4, align 8
  switch i64 %24, label %177 [
    i64 1, label %32
    i64 2, label %25
    i64 3, label %105
    i64 4, label %107
    i64 5, label %175
  ]

25:                                               ; preds = %21
  %26 = bitcast %"class.libgav1::RawBitReader"* %14 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %27 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %26, align 8
  %28 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %27, i64 3
  %29 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %28, align 8
  %30 = call i64 %29(%"class.libgav1::RawBitReader"* %14, i32 16) #11
  %31 = icmp eq i64 %30, -1
  br i1 %31, label %206, label %52

32:                                               ; preds = %21
  %33 = bitcast %"class.libgav1::RawBitReader"* %14 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %34 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %33, align 8
  %35 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %34, i64 3
  %36 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %35, align 8
  %37 = call i64 %36(%"class.libgav1::RawBitReader"* %14, i32 16) #11
  %38 = icmp eq i64 %37, -1
  br i1 %38, label %206, label %39

39:                                               ; preds = %32
  %40 = trunc i64 %37 to i16
  %41 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 8, i32 0
  store i16 %40, i16* %41, align 8
  %42 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %43 = bitcast %"class.libgav1::RawBitReader"* %42 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %44 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %43, align 8
  %45 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %44, i64 3
  %46 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %45, align 8
  %47 = call i64 %46(%"class.libgav1::RawBitReader"* %42, i32 16) #11
  %48 = icmp eq i64 %47, -1
  br i1 %48, label %206, label %49

49:                                               ; preds = %39
  %50 = trunc i64 %47 to i16
  %51 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 8, i32 1
  store i16 %50, i16* %51, align 2
  br label %205

52:                                               ; preds = %25
  %53 = trunc i64 %30 to i16
  %54 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 8, i32 2, i64 0
  store i16 %53, i16* %54, align 2
  %55 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %56 = bitcast %"class.libgav1::RawBitReader"* %55 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %57 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %57, i64 3
  %59 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %58, align 8
  %60 = call i64 %59(%"class.libgav1::RawBitReader"* %55, i32 16) #11
  %61 = icmp eq i64 %60, -1
  br i1 %61, label %206, label %62

62:                                               ; preds = %52
  %63 = trunc i64 %60 to i16
  %64 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 8, i32 3, i64 0
  store i16 %63, i16* %64, align 2
  %65 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %66 = bitcast %"class.libgav1::RawBitReader"* %65 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %67 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %66, align 8
  %68 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %67, i64 3
  %69 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %68, align 8
  %70 = call i64 %69(%"class.libgav1::RawBitReader"* %65, i32 16) #11
  %71 = icmp eq i64 %70, -1
  br i1 %71, label %206, label %208

72:                                               ; preds = %238
  %73 = trunc i64 %246 to i16
  %74 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 8, i32 4
  store i16 %73, i16* %74, align 8
  %75 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %76 = bitcast %"class.libgav1::RawBitReader"* %75 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %77 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %76, align 8
  %78 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %77, i64 3
  %79 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %78, align 8
  %80 = call i64 %79(%"class.libgav1::RawBitReader"* %75, i32 16) #11
  %81 = icmp eq i64 %80, -1
  br i1 %81, label %206, label %82

82:                                               ; preds = %72
  %83 = trunc i64 %80 to i16
  %84 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 8, i32 5
  store i16 %83, i16* %84, align 2
  %85 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %86 = bitcast %"class.libgav1::RawBitReader"* %85 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %87 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %86, align 8
  %88 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %87, i64 3
  %89 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %88, align 8
  %90 = call i64 %89(%"class.libgav1::RawBitReader"* %85, i32 32) #11
  %91 = icmp eq i64 %90, -1
  br i1 %91, label %206, label %92

92:                                               ; preds = %82
  %93 = trunc i64 %90 to i32
  %94 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 8, i32 6
  store i32 %93, i32* %94, align 4
  %95 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %96 = bitcast %"class.libgav1::RawBitReader"* %95 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %97 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %96, align 8
  %98 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %97, i64 3
  %99 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %98, align 8
  %100 = call i64 %99(%"class.libgav1::RawBitReader"* %95, i32 32) #11
  %101 = icmp eq i64 %100, -1
  br i1 %101, label %206, label %102

102:                                              ; preds = %92
  %103 = trunc i64 %100 to i32
  %104 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 8, i32 7
  store i32 %103, i32* %104, align 8
  br label %205

105:                                              ; preds = %21
  %106 = call zeroext i1 @_ZN7libgav19ObuParser24ParseMetadataScalabilityEv(%"class.libgav1::ObuParser"* %0)
  br i1 %106, label %205, label %206

107:                                              ; preds = %21
  %108 = bitcast %"class.libgav1::RawBitReader"* %14 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %109 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %108, align 8
  %110 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %109, i64 3
  %111 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %110, align 8
  %112 = call i64 %111(%"class.libgav1::RawBitReader"* %14, i32 8) #11
  %113 = icmp eq i64 %112, -1
  br i1 %113, label %206, label %114

114:                                              ; preds = %107
  %115 = trunc i64 %112 to i8
  %116 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 8, i32 8
  store i8 %115, i8* %116, align 4
  %117 = getelementptr inbounds i8, i8* %22, i64 1
  %118 = add i64 %23, -1
  %119 = and i64 %112, 255
  %120 = icmp eq i64 %119, 255
  br i1 %120, label %121, label %134

121:                                              ; preds = %114
  %122 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %123 = bitcast %"class.libgav1::RawBitReader"* %122 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %124 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %123, align 8
  %125 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %124, i64 3
  %126 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %125, align 8
  %127 = call i64 %126(%"class.libgav1::RawBitReader"* %122, i32 8) #11
  %128 = icmp eq i64 %127, -1
  br i1 %128, label %206, label %129

129:                                              ; preds = %121
  %130 = trunc i64 %127 to i8
  %131 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 8, i32 9
  store i8 %130, i8* %131, align 1
  %132 = getelementptr inbounds i8, i8* %117, i64 1
  %133 = add i64 %23, -2
  br label %134

134:                                              ; preds = %129, %114
  %135 = phi i8* [ %132, %129 ], [ %117, %114 ]
  %136 = phi i64 [ %133, %129 ], [ %118, %114 ]
  %137 = icmp ugt i64 %136, 2147483647
  br i1 %137, label %206, label %138

138:                                              ; preds = %134
  %139 = shl i64 %136, 32
  %140 = ashr exact i64 %139, 32
  br label %141

141:                                              ; preds = %145, %138
  %142 = phi i64 [ %143, %145 ], [ %140, %138 ]
  %143 = add nsw i64 %142, -1
  %144 = icmp sgt i64 %142, 0
  br i1 %144, label %145, label %149

145:                                              ; preds = %141
  %146 = getelementptr inbounds i8, i8* %135, i64 %143
  %147 = load i8, i8* %146, align 1
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %141, label %149

149:                                              ; preds = %141, %145
  %150 = trunc i64 %143 to i32
  %151 = icmp slt i32 %150, 0
  br i1 %151, label %206, label %152

152:                                              ; preds = %149
  %153 = shl i64 %143, 32
  %154 = ashr exact i64 %153, 32
  %155 = getelementptr inbounds i8, i8* %135, i64 %154
  %156 = load i8, i8* %155, align 1
  %157 = icmp eq i8 %156, -128
  br i1 %157, label %158, label %206

158:                                              ; preds = %152
  %159 = icmp eq i32 %150, 0
  br i1 %159, label %172, label %160

160:                                              ; preds = %158
  %161 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %154, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #12
  %162 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 8, i32 10, i32 0, i32 0, i32 0
  %163 = load i8*, i8** %162, align 8
  store i8* %161, i8** %162, align 8
  %164 = icmp eq i8* %163, null
  br i1 %164, label %167, label %165

165:                                              ; preds = %160
  call void @_ZdaPv(i8* nonnull %163) #12
  %166 = load i8*, i8** %162, align 8
  br label %167

167:                                              ; preds = %160, %165
  %168 = phi i8* [ %161, %160 ], [ %166, %165 ]
  %169 = icmp eq i8* %168, null
  br i1 %169, label %206, label %170

170:                                              ; preds = %167
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %168, i8* align 1 %135, i64 %154, i1 false)
  %171 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 8, i32 11
  store i64 %154, i64* %171, align 8
  br label %172

172:                                              ; preds = %158, %170
  %173 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %174 = call zeroext i1 @_ZN7libgav112RawBitReader9SkipBytesEm(%"class.libgav1::RawBitReader"* %173, i64 %154) #11
  br label %205

175:                                              ; preds = %21
  %176 = call zeroext i1 @_ZN7libgav19ObuParser21ParseMetadataTimecodeEv(%"class.libgav1::ObuParser"* %0)
  br i1 %176, label %205, label %206

177:                                              ; preds = %21
  %178 = icmp ugt i64 %23, 2147483647
  br i1 %178, label %205, label %179

179:                                              ; preds = %177
  %180 = shl i64 %23, 32
  %181 = ashr exact i64 %180, 32
  br label %182

182:                                              ; preds = %186, %179
  %183 = phi i64 [ %184, %186 ], [ %181, %179 ]
  %184 = add nsw i64 %183, -1
  %185 = icmp sgt i64 %183, 0
  br i1 %185, label %186, label %190

186:                                              ; preds = %182
  %187 = getelementptr inbounds i8, i8* %22, i64 %184
  %188 = load i8, i8* %187, align 1
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %182, label %190

190:                                              ; preds = %182, %186
  %191 = trunc i64 %184 to i32
  %192 = icmp sgt i32 %191, -1
  br i1 %192, label %193, label %205

193:                                              ; preds = %190
  %194 = shl i64 %184, 32
  %195 = ashr exact i64 %194, 32
  %196 = getelementptr inbounds i8, i8* %22, i64 %195
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i32
  %199 = call i32 @llvm.cttz.i32(i32 %198, i1 true) #11, !range !3
  %200 = shl nsw i32 %191, 3
  %201 = or i32 %200, 7
  %202 = sub nsw i32 %201, %199
  %203 = sext i32 %202 to i64
  %204 = call zeroext i1 @_ZN7libgav112RawBitReader8SkipBitsEm(%"class.libgav1::RawBitReader"* %14, i64 %203) #11
  br label %205

205:                                              ; preds = %177, %190, %193, %172, %175, %105, %102, %49
  br label %206

206:                                              ; preds = %25, %52, %62, %208, %218, %228, %134, %11, %175, %149, %152, %167, %121, %107, %105, %92, %82, %72, %238, %39, %32, %205, %3
  %207 = phi i1 [ false, %3 ], [ false, %11 ], [ true, %205 ], [ false, %32 ], [ false, %39 ], [ false, %238 ], [ false, %72 ], [ false, %82 ], [ false, %92 ], [ false, %105 ], [ false, %107 ], [ false, %121 ], [ false, %167 ], [ false, %152 ], [ false, %149 ], [ false, %175 ], [ false, %134 ], [ false, %228 ], [ false, %218 ], [ false, %208 ], [ false, %62 ], [ false, %52 ], [ false, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  ret i1 %207

208:                                              ; preds = %62
  %209 = trunc i64 %70 to i16
  %210 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 8, i32 2, i64 1
  store i16 %209, i16* %210, align 2
  %211 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %212 = bitcast %"class.libgav1::RawBitReader"* %211 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %213 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %212, align 8
  %214 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %213, i64 3
  %215 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %214, align 8
  %216 = call i64 %215(%"class.libgav1::RawBitReader"* %211, i32 16) #11
  %217 = icmp eq i64 %216, -1
  br i1 %217, label %206, label %218

218:                                              ; preds = %208
  %219 = trunc i64 %216 to i16
  %220 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 8, i32 3, i64 1
  store i16 %219, i16* %220, align 2
  %221 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %222 = bitcast %"class.libgav1::RawBitReader"* %221 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %223 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %222, align 8
  %224 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %223, i64 3
  %225 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %224, align 8
  %226 = call i64 %225(%"class.libgav1::RawBitReader"* %221, i32 16) #11
  %227 = icmp eq i64 %226, -1
  br i1 %227, label %206, label %228

228:                                              ; preds = %218
  %229 = trunc i64 %226 to i16
  %230 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 8, i32 2, i64 2
  store i16 %229, i16* %230, align 2
  %231 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %232 = bitcast %"class.libgav1::RawBitReader"* %231 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %233 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %232, align 8
  %234 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %233, i64 3
  %235 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %234, align 8
  %236 = call i64 %235(%"class.libgav1::RawBitReader"* %231, i32 16) #11
  %237 = icmp eq i64 %236, -1
  br i1 %237, label %206, label %238

238:                                              ; preds = %228
  %239 = trunc i64 %236 to i16
  %240 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 8, i32 3, i64 2
  store i16 %239, i16* %240, align 2
  %241 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %5, align 8
  %242 = bitcast %"class.libgav1::RawBitReader"* %241 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %243 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %242, align 8
  %244 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %243, i64 3
  %245 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %244, align 8
  %246 = call i64 %245(%"class.libgav1::RawBitReader"* %241, i32 16) #11
  %247 = icmp eq i64 %246, -1
  br i1 %247, label %206, label %72
}

declare zeroext i1 @_ZN7libgav112RawBitReader18ReadUnsignedLeb128EPm(%"class.libgav1::RawBitReader"*, i64*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnamRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #5

declare zeroext i1 @_ZN7libgav112RawBitReader8SkipBitsEm(%"class.libgav1::RawBitReader"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser14AddTileBuffersEiimmm(%"class.libgav1::ObuParser"* nocapture, i32, i32, i64, i64, i64) local_unnamed_addr #1 align 2 {
  %7 = alloca i64, align 8
  %8 = alloca %"class.libgav1::RawBitReader", align 8
  %9 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 9
  %10 = load i32, i32* %9, align 8
  %11 = icmp ne i32 %10, %1
  %12 = icmp sgt i32 %1, %2
  %13 = or i1 %12, %11
  br i1 %13, label %74, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, %2
  br i1 %17, label %18, label %74

18:                                               ; preds = %14
  %19 = add nsw i32 %2, 1
  store i32 %19, i32* %9, align 8
  %20 = icmp ult i64 %3, %4
  br i1 %20, label %74, label %21

21:                                               ; preds = %18
  %22 = sub i64 %3, %4
  %23 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 1
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 %5
  %26 = getelementptr inbounds i8, i8* %25, i64 %4
  %27 = bitcast i64* %7 to i8*
  %28 = bitcast %"class.libgav1::RawBitReader"* %8 to i8*
  %29 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 13
  %30 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 7, i32 0, i32 0
  %31 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 7, i32 0, i32 2
  %32 = bitcast %"class.libgav1::RawBitReader"* %8 to i8*
  br label %33

33:                                               ; preds = %54, %21
  %34 = phi i32 [ %1, %21 ], [ %67, %54 ]
  %35 = phi i8* [ %26, %21 ], [ %65, %54 ]
  %36 = phi i64 [ %22, %21 ], [ %66, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  store i64 0, i64* %7, align 8
  %37 = icmp eq i32 %34, %2
  br i1 %37, label %52, label %38

38:                                               ; preds = %33
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false)
  call void @_ZN7libgav112RawBitReaderC1EPKhm(%"class.libgav1::RawBitReader"* nonnull %8, i8* %35, i64 %36) #11
  %39 = load i8, i8* %29, align 2
  %40 = zext i8 %39 to i32
  %41 = call zeroext i1 @_ZN7libgav112RawBitReader16ReadLittleEndianEiPm(%"class.libgav1::RawBitReader"* nonnull %8, i32 %40, i64* nonnull %7) #11
  br i1 %41, label %42, label %49

42:                                               ; preds = %38
  %43 = load i64, i64* %7, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %7, align 8
  %45 = load i8, i8* %29, align 2
  %46 = zext i8 %45 to i64
  %47 = sub i64 %36, %46
  %48 = icmp ugt i64 %44, %47
  br i1 %48, label %49, label %50

49:                                               ; preds = %38, %42
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #11
  br label %69

50:                                               ; preds = %42
  %51 = getelementptr inbounds i8, i8* %35, i64 %46
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #11
  br label %54

52:                                               ; preds = %33
  store i64 %36, i64* %7, align 8
  %53 = icmp eq i64 %36, 0
  br i1 %53, label %69, label %54

54:                                               ; preds = %50, %52
  %55 = phi i64 [ %44, %50 ], [ %36, %52 ]
  %56 = phi i64 [ %47, %50 ], [ %36, %52 ]
  %57 = phi i8* [ %51, %50 ], [ %35, %52 ]
  %58 = load %"struct.libgav1::TileBuffer"*, %"struct.libgav1::TileBuffer"** %30, align 8
  %59 = load i64, i64* %31, align 8
  %60 = getelementptr inbounds %"struct.libgav1::TileBuffer", %"struct.libgav1::TileBuffer"* %58, i64 %59, i32 0
  store i8* %57, i8** %60, align 8
  %61 = getelementptr inbounds %"struct.libgav1::TileBuffer", %"struct.libgav1::TileBuffer"* %58, i64 %59, i32 1
  store i64 %55, i64* %61, align 8
  %62 = load i64, i64* %31, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %31, align 8
  %64 = load i64, i64* %7, align 8
  %65 = getelementptr inbounds i8, i8* %57, i64 %64
  %66 = sub i64 %56, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  %67 = add nsw i32 %34, 1
  %68 = icmp slt i32 %34, %2
  br i1 %68, label %33, label %70

69:                                               ; preds = %52, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %74

70:                                               ; preds = %54
  %71 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %71, align 8
  %73 = call zeroext i1 @_ZN7libgav112RawBitReader9SkipBytesEm(%"class.libgav1::RawBitReader"* %72, i64 %22) #11
  br label %74

74:                                               ; preds = %69, %70, %18, %14, %6
  %75 = phi i1 [ false, %6 ], [ false, %14 ], [ false, %18 ], [ true, %70 ], [ false, %69 ]
  ret i1 %75
}

declare void @_ZN7libgav112RawBitReaderC1EPKhm(%"class.libgav1::RawBitReader"*, i8*, i64) unnamed_addr #3

declare zeroext i1 @_ZN7libgav112RawBitReader16ReadLittleEndianEiPm(%"class.libgav1::RawBitReader"*, i32, i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser14ParseTileGroupEmm(%"class.libgav1::ObuParser"* nocapture, i64, i64) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %6 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %5, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 7
  %9 = lshr i64 %8, 3
  %10 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 8
  %13 = load i32, i32* %12, align 4
  %14 = add nsw i32 %13, %11
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %3
  %17 = tail call zeroext i1 @_ZN7libgav19ObuParser14AddTileBuffersEiimmm(%"class.libgav1::ObuParser"* %0, i32 0, i32 0, i64 %1, i64 0, i64 %2)
  br label %70

18:                                               ; preds = %3
  %19 = bitcast %"class.libgav1::RawBitReader"* %5 to i32 (%"class.libgav1::RawBitReader"*)***
  %20 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %20, i64 2
  %22 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %21, align 8
  %23 = tail call i32 %22(%"class.libgav1::RawBitReader"* %5) #11
  switch i32 %23, label %32 [
    i32 -1, label %70
    i32 0, label %24
  ]

24:                                               ; preds = %18
  %25 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %26 = tail call zeroext i1 @_ZN7libgav112RawBitReader15AlignToNextByteEv(%"class.libgav1::RawBitReader"* %25) #11
  br i1 %26, label %27, label %70

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = add nsw i32 %29, -1
  %31 = tail call zeroext i1 @_ZN7libgav19ObuParser14AddTileBuffersEiimmm(%"class.libgav1::ObuParser"* %0, i32 0, i32 %30, i64 %1, i64 1, i64 %2)
  br label %70

32:                                               ; preds = %18
  %33 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 4, i32 0, i32 0
  %34 = load %"struct.libgav1::ObuHeader"*, %"struct.libgav1::ObuHeader"** %33, align 8
  %35 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 4, i32 0, i32 2
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, -1
  %38 = getelementptr inbounds %"struct.libgav1::ObuHeader", %"struct.libgav1::ObuHeader"* %34, i64 %37, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 6
  br i1 %40, label %70, label %41

41:                                               ; preds = %32
  %42 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %43 = bitcast %"class.libgav1::RawBitReader"* %42 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %44 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %43, align 8
  %45 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %44, i64 3
  %46 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %45, align 8
  %47 = tail call i64 %46(%"class.libgav1::RawBitReader"* %42, i32 %14) #11
  %48 = icmp eq i64 %47, -1
  br i1 %48, label %70, label %49

49:                                               ; preds = %41
  %50 = trunc i64 %47 to i32
  %51 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %52 = bitcast %"class.libgav1::RawBitReader"* %51 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %53 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %52, align 8
  %54 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %53, i64 3
  %55 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %54, align 8
  %56 = tail call i64 %55(%"class.libgav1::RawBitReader"* %51, i32 %14) #11
  %57 = icmp eq i64 %56, -1
  br i1 %57, label %70, label %58

58:                                               ; preds = %49
  %59 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %60 = tail call zeroext i1 @_ZN7libgav112RawBitReader15AlignToNextByteEv(%"class.libgav1::RawBitReader"* %59) #11
  br i1 %60, label %61, label %70

61:                                               ; preds = %58
  %62 = trunc i64 %56 to i32
  %63 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %4, align 8
  %64 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %63, i64 0, i32 2
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %65, 7
  %67 = lshr i64 %66, 3
  %68 = sub nsw i64 %67, %9
  %69 = tail call zeroext i1 @_ZN7libgav19ObuParser14AddTileBuffersEiimmm(%"class.libgav1::ObuParser"* %0, i32 %50, i32 %62, i64 %1, i64 %68, i64 %2)
  br label %70

70:                                               ; preds = %18, %49, %58, %61, %41, %32, %24, %27, %16
  %71 = phi i1 [ %17, %16 ], [ false, %18 ], [ %31, %27 ], [ false, %24 ], [ false, %32 ], [ false, %41 ], [ false, %49 ], [ %69, %61 ], [ false, %58 ]
  ret i1 %71
}

declare zeroext i1 @_ZN7libgav112RawBitReader15AlignToNextByteEv(%"class.libgav1::RawBitReader"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser11ParseHeaderEv(%"class.libgav1::ObuParser"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"struct.libgav1::ObuHeader", align 1
  %3 = getelementptr inbounds %"struct.libgav1::ObuHeader", %"struct.libgav1::ObuHeader"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #11
  %4 = getelementptr inbounds %"struct.libgav1::ObuHeader", %"struct.libgav1::ObuHeader"* %2, i64 0, i32 1
  %5 = getelementptr inbounds %"struct.libgav1::ObuHeader", %"struct.libgav1::ObuHeader"* %2, i64 0, i32 2
  %6 = getelementptr inbounds %"struct.libgav1::ObuHeader", %"struct.libgav1::ObuHeader"* %2, i64 0, i32 3
  %7 = getelementptr inbounds %"struct.libgav1::ObuHeader", %"struct.libgav1::ObuHeader"* %2, i64 0, i32 4
  %8 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %3, i8 -86, i64 5, i1 false)
  %9 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %8, align 8
  %10 = bitcast %"class.libgav1::RawBitReader"* %9 to i32 (%"class.libgav1::RawBitReader"*)***
  %11 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %11, i64 2
  %13 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %12, align 8
  %14 = tail call i32 %13(%"class.libgav1::RawBitReader"* %9) #11
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %88

16:                                               ; preds = %1
  %17 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %8, align 8
  %18 = bitcast %"class.libgav1::RawBitReader"* %17 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %19 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %18, align 8
  %20 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %19, i64 3
  %21 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %20, align 8
  %22 = tail call i64 %21(%"class.libgav1::RawBitReader"* %17, i32 4) #11
  %23 = icmp eq i64 %22, -1
  br i1 %23, label %88, label %24

24:                                               ; preds = %16
  %25 = trunc i64 %22 to i8
  store i8 %25, i8* %3, align 1
  %26 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %8, align 8
  %27 = bitcast %"class.libgav1::RawBitReader"* %26 to i32 (%"class.libgav1::RawBitReader"*)***
  %28 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %27, align 8
  %29 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %28, i64 2
  %30 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %29, align 8
  %31 = tail call i32 %30(%"class.libgav1::RawBitReader"* %26) #11
  %32 = icmp eq i32 %31, -1
  br i1 %32, label %88, label %33

33:                                               ; preds = %24
  %34 = icmp ne i32 %31, 0
  %35 = zext i1 %34 to i8
  %36 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %8, align 8
  %37 = bitcast %"class.libgav1::RawBitReader"* %36 to i32 (%"class.libgav1::RawBitReader"*)***
  %38 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %37, align 8
  %39 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %38, i64 2
  %40 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %39, align 8
  %41 = tail call i32 %40(%"class.libgav1::RawBitReader"* %36) #11
  %42 = icmp eq i32 %41, -1
  br i1 %42, label %88, label %43

43:                                               ; preds = %33
  %44 = icmp ne i32 %41, 0
  %45 = zext i1 %44 to i8
  store i8 %45, i8* %5, align 1
  %46 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %8, align 8
  %47 = bitcast %"class.libgav1::RawBitReader"* %46 to i32 (%"class.libgav1::RawBitReader"*)***
  %48 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %47, align 8
  %49 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %48, i64 2
  %50 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %49, align 8
  %51 = tail call i32 %50(%"class.libgav1::RawBitReader"* %46) #11
  %52 = icmp eq i32 %51, -1
  br i1 %52, label %88, label %53

53:                                               ; preds = %43
  store i8 %35, i8* %4, align 1
  br i1 %34, label %54, label %84

54:                                               ; preds = %53
  %55 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 12
  %56 = load i8, i8* %55, align 2, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %88

58:                                               ; preds = %54
  %59 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %8, align 8
  %60 = bitcast %"class.libgav1::RawBitReader"* %59 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %61 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %60, align 8
  %62 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %61, i64 3
  %63 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %62, align 8
  %64 = tail call i64 %63(%"class.libgav1::RawBitReader"* %59, i32 3) #11
  %65 = icmp eq i64 %64, -1
  br i1 %65, label %88, label %66

66:                                               ; preds = %58
  %67 = trunc i64 %64 to i8
  store i8 %67, i8* %6, align 1
  %68 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %8, align 8
  %69 = bitcast %"class.libgav1::RawBitReader"* %68 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %70 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %69, align 8
  %71 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %70, i64 3
  %72 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %71, align 8
  %73 = tail call i64 %72(%"class.libgav1::RawBitReader"* %68, i32 2) #11
  %74 = icmp eq i64 %73, -1
  br i1 %74, label %88, label %75

75:                                               ; preds = %66
  %76 = trunc i64 %73 to i8
  store i8 %76, i8* %7, align 1
  %77 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %8, align 8
  %78 = bitcast %"class.libgav1::RawBitReader"* %77 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %79 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %78, align 8
  %80 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %79, i64 3
  %81 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %80, align 8
  %82 = tail call i64 %81(%"class.libgav1::RawBitReader"* %77, i32 3) #11
  %83 = icmp eq i64 %82, -1
  br i1 %83, label %88, label %85

84:                                               ; preds = %53
  store i8 0, i8* %6, align 1
  store i8 0, i8* %7, align 1
  br label %85

85:                                               ; preds = %75, %84
  %86 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 4, i32 0
  %87 = call zeroext i1 @_ZN7libgav18internal10VectorBaseINS_9ObuHeaderEE9push_backERKS2_b(%"class.libgav1::internal::VectorBase"* %86, %"struct.libgav1::ObuHeader"* nonnull dereferenceable(5) %2, i1 zeroext true)
  br label %88

88:                                               ; preds = %85, %33, %43, %54, %58, %66, %75, %24, %16, %1
  %89 = phi i1 [ false, %1 ], [ false, %16 ], [ false, %24 ], [ %87, %85 ], [ false, %33 ], [ false, %43 ], [ false, %54 ], [ false, %58 ], [ false, %66 ], [ false, %75 ]
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #11
  ret i1 %89
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN7libgav18internal10VectorBaseINS_9ObuHeaderEE9push_backERKS2_b(%"class.libgav1::internal::VectorBase"*, %"struct.libgav1::ObuHeader"* dereferenceable(5), i1 zeroext) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.libgav1::internal::VectorBase", %"class.libgav1::internal::VectorBase"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.libgav1::internal::VectorBase", %"class.libgav1::internal::VectorBase"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %5, %7
  br i1 %8, label %44, label %9

9:                                                ; preds = %3
  br i1 %2, label %10, label %52

10:                                               ; preds = %9
  %11 = add i64 %5, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %44, label %13

13:                                               ; preds = %10
  %14 = icmp ult i64 %11, 17
  br i1 %14, label %29, label %15

15:                                               ; preds = %13
  %16 = lshr i64 %5, 1
  %17 = or i64 %16, %5
  %18 = lshr i64 %17, 2
  %19 = or i64 %18, %17
  %20 = lshr i64 %19, 4
  %21 = or i64 %20, %19
  %22 = lshr i64 %21, 8
  %23 = or i64 %22, %21
  %24 = lshr i64 %23, 16
  %25 = or i64 %24, %23
  %26 = lshr i64 %25, 32
  %27 = or i64 %26, %25
  %28 = add i64 %27, 1
  br label %29

29:                                               ; preds = %13, %15
  %30 = phi i64 [ %28, %15 ], [ 16, %13 ]
  %31 = icmp ult i64 %7, %30
  br i1 %31, label %32, label %44

32:                                               ; preds = %29
  %33 = mul i64 %30, 5
  %34 = tail call noalias i8* @malloc(i64 %33) #11
  %35 = icmp eq i8* %34, null
  br i1 %35, label %52, label %36

36:                                               ; preds = %32
  %37 = icmp eq i64 %5, 0
  %38 = bitcast %"class.libgav1::internal::VectorBase"* %0 to i8**
  %39 = load i8*, i8** %38, align 8
  br i1 %37, label %42, label %40

40:                                               ; preds = %36
  %41 = mul i64 %5, 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* align 1 %39, i64 %41, i1 false) #11
  br label %42

42:                                               ; preds = %40, %36
  tail call void @free(i8* %39) #11
  store i8* %34, i8** %38, align 8
  store i64 %30, i64* %6, align 8
  %43 = load i64, i64* %4, align 8
  br label %44

44:                                               ; preds = %10, %29, %42, %3
  %45 = phi i64 [ -1, %10 ], [ %5, %29 ], [ %43, %42 ], [ %5, %3 ]
  %46 = getelementptr inbounds %"class.libgav1::internal::VectorBase", %"class.libgav1::internal::VectorBase"* %0, i64 0, i32 0
  %47 = load %"struct.libgav1::ObuHeader"*, %"struct.libgav1::ObuHeader"** %46, align 8
  %48 = getelementptr inbounds %"struct.libgav1::ObuHeader", %"struct.libgav1::ObuHeader"* %47, i64 %45, i32 0
  %49 = getelementptr inbounds %"struct.libgav1::ObuHeader", %"struct.libgav1::ObuHeader"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %48, i8* align 1 %49, i64 5, i1 false)
  %50 = load i64, i64* %4, align 8
  %51 = add i64 %50, 1
  store i64 %51, i64* %4, align 8
  br label %52

52:                                               ; preds = %32, %9, %44
  %53 = phi i1 [ true, %44 ], [ false, %9 ], [ false, %32 ]
  ret i1 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19ObuParser13InitBitReaderEPKhm(%"class.libgav1::ObuParser"* nocapture, i8*, i64) local_unnamed_addr #1 align 2 {
  %4 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 32, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = bitcast i8* %4 to %"class.libgav1::RawBitReader"*
  tail call void @_ZN7libgav112RawBitReaderC1EPKhm(%"class.libgav1::RawBitReader"* nonnull %7, i8* %1, i64 %2) #11
  br label %8

8:                                                ; preds = %6, %3
  %9 = phi %"class.libgav1::RawBitReader"* [ %7, %6 ], [ null, %3 ]
  %10 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %10, align 8
  store %"class.libgav1::RawBitReader"* %9, %"class.libgav1::RawBitReader"** %10, align 8
  %12 = icmp eq %"class.libgav1::RawBitReader"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.libgav1::RawBitReader"* %11 to void (%"class.libgav1::RawBitReader"*)***
  %15 = load void (%"class.libgav1::RawBitReader"*)**, void (%"class.libgav1::RawBitReader"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.libgav1::RawBitReader"*)*, void (%"class.libgav1::RawBitReader"*)** %15, i64 1
  %17 = load void (%"class.libgav1::RawBitReader"*)*, void (%"class.libgav1::RawBitReader"*)** %16, align 8
  tail call void %17(%"class.libgav1::RawBitReader"* nonnull %11) #11
  %18 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %10, align 8
  br label %19

19:                                               ; preds = %8, %13
  %20 = phi %"class.libgav1::RawBitReader"* [ %9, %8 ], [ %18, %13 ]
  %21 = icmp ne %"class.libgav1::RawBitReader"* %20, null
  ret i1 %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7libgav19ObuParser7HasDataEv(%"class.libgav1::ObuParser"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = icmp ne i64 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7libgav19ObuParser13ParseOneFrameEPNSt3__110shared_ptrINS_16RefCountedBufferEEE(%"class.libgav1::ObuParser"*, %"class.std::__1::shared_ptr"* nocapture) local_unnamed_addr #1 align 2 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %327, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %327, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 4, i32 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = mul nuw i64 %13, 5
  %15 = sdiv exact i64 %14, 5
  %16 = sub i64 %13, %15
  store i64 %16, i64* %12, align 8
  %17 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 15
  %18 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6
  %19 = bitcast %"struct.libgav1::ObuFrameHeader"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 2080, i1 false)
  %20 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 8, i32 0
  %21 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 8, i32 10
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast i16* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 30, i1 false)
  %24 = load i8*, i8** %22, align 8
  %25 = bitcast %"class.std::__1::unique_ptr.6"* %21 to i64*
  store i64 0, i64* %25, align 8
  %26 = icmp eq i8* %24, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %11
  call void @_ZdaPv(i8* nonnull %24) #12
  br label %28

28:                                               ; preds = %11, %27
  %29 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 8, i32 11
  store i64 0, i64* %29, align 8
  %30 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 7, i32 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = shl nuw i64 %31, 4
  %33 = ashr exact i64 %32, 4
  %34 = sub i64 %31, %33
  store i64 %34, i64* %30, align 8
  %35 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 9
  store i32 0, i32* %35, align 8
  %36 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 11
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 4, i32 0, i32 0
  %39 = bitcast i64* %3 to i8*
  %40 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 10
  %41 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 3
  %42 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 15, i32 3
  %43 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 6, i32 18
  %44 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 33, i32 0
  br label %45

45:                                               ; preds = %28, %276
  %46 = phi i64 [ %9, %28 ], [ %282, %276 ]
  %47 = phi i64 [ 0, %28 ], [ %281, %276 ]
  %48 = phi i8* [ null, %28 ], [ %280, %276 ]
  %49 = phi i8 [ 0, %28 ], [ %279, %276 ]
  %50 = phi i8 [ 0, %28 ], [ %278, %276 ]
  %51 = phi i8* [ %5, %28 ], [ %283, %276 ]
  %52 = call noalias i8* @_ZnwmRKSt9nothrow_t(i64 32, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #11
  %53 = icmp eq i8* %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %45
  %55 = bitcast i8* %52 to %"class.libgav1::RawBitReader"*
  call void @_ZN7libgav112RawBitReaderC1EPKhm(%"class.libgav1::RawBitReader"* nonnull %55, i8* %51, i64 %46) #11
  br label %56

56:                                               ; preds = %54, %45
  %57 = phi %"class.libgav1::RawBitReader"* [ %55, %54 ], [ null, %45 ]
  %58 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %37, align 8
  store %"class.libgav1::RawBitReader"* %57, %"class.libgav1::RawBitReader"** %37, align 8
  %59 = icmp eq %"class.libgav1::RawBitReader"* %58, null
  br i1 %59, label %66, label %60

60:                                               ; preds = %56
  %61 = bitcast %"class.libgav1::RawBitReader"* %58 to void (%"class.libgav1::RawBitReader"*)***
  %62 = load void (%"class.libgav1::RawBitReader"*)**, void (%"class.libgav1::RawBitReader"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.libgav1::RawBitReader"*)*, void (%"class.libgav1::RawBitReader"*)** %62, i64 1
  %64 = load void (%"class.libgav1::RawBitReader"*)*, void (%"class.libgav1::RawBitReader"*)** %63, align 8
  call void %64(%"class.libgav1::RawBitReader"* nonnull %58) #11
  %65 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %37, align 8
  br label %66

66:                                               ; preds = %56, %60
  %67 = phi %"class.libgav1::RawBitReader"* [ %57, %56 ], [ %65, %60 ]
  %68 = icmp eq %"class.libgav1::RawBitReader"* %67, null
  br i1 %68, label %311, label %69

69:                                               ; preds = %66
  %70 = call zeroext i1 @_ZN7libgav19ObuParser11ParseHeaderEv(%"class.libgav1::ObuParser"* %0)
  br i1 %70, label %71, label %311

71:                                               ; preds = %69
  %72 = load %"struct.libgav1::ObuHeader"*, %"struct.libgav1::ObuHeader"** %38, align 8
  %73 = load i64, i64* %12, align 8
  %74 = add i64 %73, -1
  %75 = getelementptr inbounds %"struct.libgav1::ObuHeader", %"struct.libgav1::ObuHeader"* %72, i64 %74, i32 2
  %76 = load i8, i8* %75, align 1, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %311, label %78

78:                                               ; preds = %71
  %79 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %37, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  store i64 -6148914691236517206, i64* %3, align 8
  %80 = call zeroext i1 @_ZN7libgav112RawBitReader18ReadUnsignedLeb128EPm(%"class.libgav1::RawBitReader"* %79, i64* nonnull %3) #11
  br i1 %80, label %81, label %274

81:                                               ; preds = %78
  %82 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %37, align 8
  %83 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %82, i64 0, i32 2
  %84 = load i64, i64* %83, align 8
  %85 = add i64 %84, 7
  %86 = lshr i64 %85, 3
  %87 = sub i64 %46, %86
  %88 = load i64, i64* %3, align 8
  %89 = icmp ult i64 %87, %88
  br i1 %89, label %274, label %90

90:                                               ; preds = %81
  %91 = getelementptr inbounds %"struct.libgav1::ObuHeader", %"struct.libgav1::ObuHeader"* %72, i64 %74, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = sext i8 %92 to i32
  %94 = add i8 %92, -1
  %95 = icmp ult i8 %94, 2
  br i1 %95, label %133, label %96

96:                                               ; preds = %90
  %97 = load i8, i8* %40, align 4, !range !2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %133, label %99

99:                                               ; preds = %96
  %100 = load i32, i32* %41, align 8
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 5, i32 4, i64 %101
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %133, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"struct.libgav1::ObuHeader", %"struct.libgav1::ObuHeader"* %72, i64 %74, i32 1
  %107 = load i8, i8* %106, align 1, !range !2
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %133, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"struct.libgav1::ObuHeader", %"struct.libgav1::ObuHeader"* %72, i64 %74, i32 3
  %111 = load i8, i8* %110, align 1
  %112 = sext i8 %111 to i32
  %113 = shl i32 1, %112
  %114 = and i32 %113, %103
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %124, label %116

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"struct.libgav1::ObuHeader", %"struct.libgav1::ObuHeader"* %72, i64 %74, i32 4
  %118 = load i8, i8* %117, align 1
  %119 = sext i8 %118 to i32
  %120 = add nsw i32 %119, 8
  %121 = shl i32 1, %120
  %122 = and i32 %121, %103
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %133

124:                                              ; preds = %116, %109
  %125 = load i64, i64* %12, align 8
  %126 = add i64 %125, -1
  store i64 %126, i64* %12, align 8
  %127 = call zeroext i1 @_ZN7libgav112RawBitReader9SkipBytesEm(%"class.libgav1::RawBitReader"* %82, i64 %88) #11
  %128 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %37, align 8
  %129 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %128, i64 0, i32 2
  %130 = load i64, i64* %129, align 8
  %131 = add i64 %130, 7
  %132 = lshr i64 %131, 3
  br label %276

133:                                              ; preds = %116, %90, %105, %99, %96
  switch i32 %93, label %236 [
    i32 2, label %239
    i32 1, label %134
    i32 3, label %141
    i32 7, label %154
    i32 6, label %168
    i32 4, label %194
    i32 8, label %274
    i32 15, label %204
    i32 5, label %232
  ]

134:                                              ; preds = %133
  %135 = and i8 %49, 1
  %136 = icmp ne i8 %135, 0
  %137 = call zeroext i1 @_ZN7libgav19ObuParser19ParseSequenceHeaderEb(%"class.libgav1::ObuParser"* %0, i1 zeroext %136)
  br i1 %137, label %138, label %274

138:                                              ; preds = %134
  %139 = load i8, i8* %44, align 4
  %140 = icmp sgt i8 %139, 10
  br i1 %140, label %274, label %239

141:                                              ; preds = %133
  %142 = and i8 %49, 1
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %274

144:                                              ; preds = %141
  %145 = call zeroext i1 @_ZN7libgav19ObuParser16ParseFrameHeaderEv(%"class.libgav1::ObuParser"* %0)
  br i1 %145, label %146, label %274

146:                                              ; preds = %144
  %147 = lshr i64 %84, 3
  %148 = getelementptr inbounds i8, i8* %51, i64 %147
  %149 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %37, align 8
  %150 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %149, i64 0, i32 2
  %151 = load i64, i64* %150, align 8
  %152 = sub i64 %151, %84
  %153 = load i8, i8* %43, align 2, !range !2
  br label %239

154:                                              ; preds = %133
  %155 = and i8 %49, 1
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %274, label %157

157:                                              ; preds = %154
  %158 = add i64 %47, 7
  %159 = lshr i64 %158, 3
  %160 = icmp ult i64 %88, %159
  br i1 %160, label %274, label %161

161:                                              ; preds = %157
  %162 = lshr i64 %84, 3
  %163 = getelementptr inbounds i8, i8* %51, i64 %162
  %164 = call i32 @bcmp(i8* %48, i8* %163, i64 %159)
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %274

166:                                              ; preds = %161
  %167 = call zeroext i1 @_ZN7libgav112RawBitReader8SkipBitsEm(%"class.libgav1::RawBitReader"* %82, i64 %47) #11
  br label %239

168:                                              ; preds = %133
  %169 = and i8 %49, 1
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %171, label %274

171:                                              ; preds = %168
  %172 = call zeroext i1 @_ZN7libgav19ObuParser16ParseFrameHeaderEv(%"class.libgav1::ObuParser"* %0)
  br i1 %172, label %173, label %274

173:                                              ; preds = %171
  %174 = load i8, i8* %43, align 2, !range !2
  %175 = icmp eq i8 %174, 0
  br i1 %175, label %176, label %274

176:                                              ; preds = %173
  %177 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %37, align 8
  %178 = call zeroext i1 @_ZN7libgav112RawBitReader15AlignToNextByteEv(%"class.libgav1::RawBitReader"* %177) #11
  br i1 %178, label %179, label %274

179:                                              ; preds = %176
  %180 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %37, align 8
  %181 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %180, i64 0, i32 2
  %182 = load i64, i64* %181, align 8
  %183 = add i64 %182, 7
  %184 = lshr i64 %183, 3
  %185 = sub nsw i64 %184, %86
  %186 = load i64, i64* %3, align 8
  %187 = icmp ugt i64 %186, %185
  br i1 %187, label %188, label %274

188:                                              ; preds = %179
  %189 = sub i64 %186, %185
  %190 = load i64, i64* %8, align 8
  %191 = sub i64 %184, %46
  %192 = add i64 %191, %190
  %193 = call zeroext i1 @_ZN7libgav19ObuParser14ParseTileGroupEmm(%"class.libgav1::ObuParser"* %0, i64 %189, i64 %192)
  br i1 %193, label %239, label %274

194:                                              ; preds = %133
  %195 = load i64, i64* %8, align 8
  %196 = sub i64 %86, %46
  %197 = add i64 %196, %195
  %198 = call zeroext i1 @_ZN7libgav19ObuParser14ParseTileGroupEmm(%"class.libgav1::ObuParser"* %0, i64 %88, i64 %197)
  br i1 %198, label %199, label %274

199:                                              ; preds = %194
  %200 = load i32, i32* %35, align 8
  %201 = load i32, i32* %42, align 4
  %202 = icmp eq i32 %200, %201
  %203 = zext i1 %202 to i8
  br label %239

204:                                              ; preds = %133
  %205 = lshr i64 %84, 3
  %206 = getelementptr inbounds i8, i8* %51, i64 %205
  %207 = icmp eq i64 %88, 0
  br i1 %207, label %239, label %208

208:                                              ; preds = %204
  %209 = icmp ugt i64 %88, 2147483647
  br i1 %209, label %274, label %210

210:                                              ; preds = %208
  %211 = shl i64 %88, 32
  %212 = ashr exact i64 %211, 32
  br label %213

213:                                              ; preds = %217, %210
  %214 = phi i64 [ %215, %217 ], [ %212, %210 ]
  %215 = add nsw i64 %214, -1
  %216 = icmp sgt i64 %214, 0
  br i1 %216, label %217, label %221

217:                                              ; preds = %213
  %218 = getelementptr inbounds i8, i8* %206, i64 %215
  %219 = load i8, i8* %218, align 1
  %220 = icmp eq i8 %219, 0
  br i1 %220, label %213, label %221

221:                                              ; preds = %217, %213
  %222 = trunc i64 %215 to i32
  %223 = icmp slt i32 %222, 0
  br i1 %223, label %274, label %224

224:                                              ; preds = %221
  %225 = shl i64 %215, 32
  %226 = ashr exact i64 %225, 32
  %227 = getelementptr inbounds i8, i8* %206, i64 %226
  %228 = load i8, i8* %227, align 1
  %229 = icmp eq i8 %228, -128
  br i1 %229, label %230, label %274

230:                                              ; preds = %224
  %231 = call zeroext i1 @_ZN7libgav112RawBitReader9SkipBytesEm(%"class.libgav1::RawBitReader"* %82, i64 %226) #11
  br label %239

232:                                              ; preds = %133
  %233 = lshr i64 %84, 3
  %234 = getelementptr inbounds i8, i8* %51, i64 %233
  %235 = call zeroext i1 @_ZN7libgav19ObuParser13ParseMetadataEPKhm(%"class.libgav1::ObuParser"* %0, i8* %234, i64 %88)
  br i1 %235, label %239, label %274

236:                                              ; preds = %133
  %237 = call zeroext i1 @_ZN7libgav112RawBitReader9SkipBytesEm(%"class.libgav1::RawBitReader"* %82, i64 %88) #11
  %238 = load i64, i64* %3, align 8
  br label %261

239:                                              ; preds = %230, %204, %188, %166, %232, %138, %199, %146, %133
  %240 = phi i8 [ %50, %232 ], [ %203, %199 ], [ %50, %166 ], [ %153, %146 ], [ %50, %138 ], [ %50, %133 ], [ 1, %188 ], [ %50, %204 ], [ %50, %230 ]
  %241 = phi i8 [ %49, %232 ], [ %49, %199 ], [ %49, %166 ], [ 1, %146 ], [ %49, %138 ], [ %49, %133 ], [ %49, %188 ], [ %49, %204 ], [ %49, %230 ]
  %242 = phi i8* [ %48, %232 ], [ %48, %199 ], [ %48, %166 ], [ %148, %146 ], [ %48, %138 ], [ %48, %133 ], [ %48, %188 ], [ %48, %204 ], [ %48, %230 ]
  %243 = phi i64 [ %47, %232 ], [ %47, %199 ], [ %47, %166 ], [ %152, %146 ], [ %47, %138 ], [ %47, %133 ], [ %47, %188 ], [ %47, %204 ], [ %47, %230 ]
  %244 = load i64, i64* %3, align 8
  %245 = icmp eq i64 %244, 0
  %246 = or i8 %92, 2
  %247 = icmp eq i8 %246, 6
  %248 = or i1 %247, %245
  br i1 %248, label %261, label %249

249:                                              ; preds = %239
  %250 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %37, align 8
  %251 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %250, i64 0, i32 2
  %252 = load i64, i64* %251, align 8
  %253 = sub i64 %252, %84
  %254 = shl i64 %244, 3
  %255 = icmp ult i64 %254, %253
  br i1 %255, label %274, label %256

256:                                              ; preds = %249
  %257 = sub i64 %254, %253
  %258 = call zeroext i1 @_ZN7libgav112RawBitReader25VerifyAndSkipTrailingBitsEm(%"class.libgav1::RawBitReader"* %250, i64 %257) #11
  br i1 %258, label %259, label %274

259:                                              ; preds = %256
  %260 = load i64, i64* %3, align 8
  br label %261

261:                                              ; preds = %236, %259, %239
  %262 = phi i64 [ %243, %259 ], [ %243, %239 ], [ %47, %236 ]
  %263 = phi i8* [ %242, %259 ], [ %242, %239 ], [ %48, %236 ]
  %264 = phi i8 [ %241, %259 ], [ %241, %239 ], [ %49, %236 ]
  %265 = phi i8 [ %240, %259 ], [ %240, %239 ], [ %50, %236 ]
  %266 = phi i64 [ %260, %259 ], [ %244, %239 ], [ %238, %236 ]
  %267 = load %"class.libgav1::RawBitReader"*, %"class.libgav1::RawBitReader"** %37, align 8
  %268 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %267, i64 0, i32 2
  %269 = load i64, i64* %268, align 8
  %270 = add i64 %269, 7
  %271 = lshr i64 %270, 3
  %272 = sub nsw i64 %271, %86
  %273 = icmp eq i64 %272, %266
  br i1 %273, label %276, label %274

274:                                              ; preds = %78, %81, %134, %138, %141, %144, %154, %194, %133, %232, %261, %161, %157, %168, %171, %173, %176, %179, %188, %221, %224, %208, %249, %256
  %275 = phi i32 [ -9, %261 ], [ -9, %232 ], [ -7, %133 ], [ -9, %194 ], [ -9, %154 ], [ -9, %144 ], [ -9, %141 ], [ -7, %138 ], [ -9, %134 ], [ -9, %81 ], [ -9, %78 ], [ -9, %161 ], [ -9, %157 ], [ -9, %188 ], [ -9, %179 ], [ -9, %176 ], [ -9, %173 ], [ -9, %171 ], [ -9, %168 ], [ -9, %221 ], [ -9, %224 ], [ -9, %208 ], [ -9, %256 ], [ -9, %249 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  br label %311

276:                                              ; preds = %261, %124
  %277 = phi i64 [ %132, %124 ], [ %271, %261 ]
  %278 = phi i8 [ %50, %124 ], [ %265, %261 ]
  %279 = phi i8 [ %49, %124 ], [ %264, %261 ]
  %280 = phi i8* [ %48, %124 ], [ %263, %261 ]
  %281 = phi i64 [ %47, %124 ], [ %262, %261 ]
  %282 = sub i64 %46, %277
  %283 = getelementptr inbounds i8, i8* %51, i64 %277
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  %284 = icmp ne i64 %282, 0
  %285 = and i8 %278, 1
  %286 = icmp eq i8 %285, 0
  %287 = and i1 %284, %286
  br i1 %287, label %45, label %288

288:                                              ; preds = %276
  %289 = icmp ne i8 %285, 0
  %290 = and i8 %279, 1
  %291 = icmp eq i8 %290, 0
  %292 = or i1 %289, %291
  br i1 %292, label %293, label %311

293:                                              ; preds = %288
  store i8* %283, i8** %4, align 8
  store i64 %282, i64* %8, align 8
  %294 = bitcast %"class.std::__1::shared_ptr"* %17 to <2 x i64>*
  %295 = load <2 x i64>, <2 x i64>* %294, align 8
  %296 = bitcast %"class.std::__1::shared_ptr"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %296, i8 0, i64 16, i1 false) #11
  %297 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %1, i64 0, i32 1
  %298 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %297, align 8
  %299 = bitcast %"class.std::__1::shared_ptr"* %1 to <2 x i64>*
  store <2 x i64> %295, <2 x i64>* %299, align 8
  %300 = icmp eq %"class.std::__1::__shared_weak_count"* %298, null
  br i1 %300, label %311, label %301

301:                                              ; preds = %293
  %302 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %298, i64 0, i32 0, i32 1
  %303 = atomicrmw add i64* %302, i64 -1 acq_rel
  %304 = icmp eq i64 %303, 0
  br i1 %304, label %305, label %311

305:                                              ; preds = %301
  %306 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %298, i64 0, i32 0
  %307 = bitcast %"class.std::__1::__shared_weak_count"* %298 to void (%"class.std::__1::__shared_count"*)***
  %308 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %307, align 8
  %309 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %308, i64 2
  %310 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %309, align 8
  call void %310(%"class.std::__1::__shared_count"* %306) #11
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %298) #11
  br label %311

311:                                              ; preds = %66, %71, %69, %305, %301, %293, %274, %288
  %312 = phi i32 [ -9, %288 ], [ %275, %274 ], [ 0, %293 ], [ 0, %301 ], [ 0, %305 ], [ -7, %71 ], [ -9, %69 ], [ -3, %66 ]
  %313 = getelementptr inbounds %"class.libgav1::ObuParser", %"class.libgav1::ObuParser"* %0, i64 0, i32 15, i32 1
  %314 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %313, align 8
  %315 = bitcast %"class.std::__1::shared_ptr"* %17 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %315, align 8
  %316 = icmp eq %"class.std::__1::__shared_weak_count"* %314, null
  br i1 %316, label %327, label %317

317:                                              ; preds = %311
  %318 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %314, i64 0, i32 0, i32 1
  %319 = atomicrmw add i64* %318, i64 -1 acq_rel
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %321, label %327

321:                                              ; preds = %317
  %322 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %314, i64 0, i32 0
  %323 = bitcast %"class.std::__1::__shared_weak_count"* %314 to void (%"class.std::__1::__shared_count"*)***
  %324 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %323, align 8
  %325 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %324, i64 2
  %326 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %325, align 8
  call void %326(%"class.std::__1::__shared_count"* %322) #11
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %314) #11
  br label %327

327:                                              ; preds = %321, %317, %311, %2, %7
  %328 = phi i32 [ -2, %7 ], [ -2, %2 ], [ %312, %311 ], [ %312, %317 ], [ %312, %321 ]
  ret i32 %328
}

declare zeroext i1 @_ZN7libgav112RawBitReader25VerifyAndSkipTrailingBitsEm(%"class.libgav1::RawBitReader"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #6

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #6

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i32 0, i32 33}
