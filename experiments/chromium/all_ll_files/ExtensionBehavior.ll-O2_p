; ModuleID = '../../third_party/angle/src/compiler/translator/ExtensionBehavior.cpp'
source_filename = "../../third_party/angle/src/compiler/translator/ExtensionBehavior.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type", [5 x i8] }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i8, i8 }

@.str = private unnamed_addr constant [35 x i8] c"GL_ANGLE_base_vertex_base_instance\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"GL_ANGLE_multi_draw\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"GL_ANGLE_texture_multisample\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"GL_APPLE_clip_distance\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"GL_ARB_texture_rectangle\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"GL_ARM_shader_framebuffer_fetch\00", align 1
@.str.6 = private unnamed_addr constant [27 x i8] c"GL_EXT_blend_func_extended\00", align 1
@.str.7 = private unnamed_addr constant [26 x i8] c"GL_EXT_clip_cull_distance\00", align 1
@.str.8 = private unnamed_addr constant [20 x i8] c"GL_EXT_draw_buffers\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"GL_EXT_frag_depth\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"GL_EXT_geometry_shader\00", align 1
@.str.11 = private unnamed_addr constant [24 x i8] c"GL_OES_shader_io_blocks\00", align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"GL_EXT_shader_io_blocks\00", align 1
@.str.13 = private unnamed_addr constant [19 x i8] c"GL_EXT_gpu_shader5\00", align 1
@.str.14 = private unnamed_addr constant [32 x i8] c"GL_EXT_shader_framebuffer_fetch\00", align 1
@.str.15 = private unnamed_addr constant [45 x i8] c"GL_EXT_shader_framebuffer_fetch_non_coherent\00", align 1
@.str.16 = private unnamed_addr constant [47 x i8] c"GL_EXT_shader_non_constant_global_initializers\00", align 1
@.str.17 = private unnamed_addr constant [26 x i8] c"GL_EXT_shader_texture_lod\00", align 1
@.str.18 = private unnamed_addr constant [23 x i8] c"GL_EXT_shadow_samplers\00", align 1
@.str.19 = private unnamed_addr constant [27 x i8] c"GL_EXT_tessellation_shader\00", align 1
@.str.20 = private unnamed_addr constant [22 x i8] c"GL_EXT_texture_buffer\00", align 1
@.str.21 = private unnamed_addr constant [30 x i8] c"GL_EXT_texture_cube_map_array\00", align 1
@.str.22 = private unnamed_addr constant [18 x i8] c"GL_EXT_YUV_target\00", align 1
@.str.23 = private unnamed_addr constant [35 x i8] c"GL_NV_EGL_stream_consumer_external\00", align 1
@.str.24 = private unnamed_addr constant [31 x i8] c"GL_NV_shader_framebuffer_fetch\00", align 1
@.str.25 = private unnamed_addr constant [41 x i8] c"GL_NV_shader_noperspective_interpolation\00", align 1
@.str.26 = private unnamed_addr constant [26 x i8] c"GL_OES_EGL_image_external\00", align 1
@.str.27 = private unnamed_addr constant [32 x i8] c"GL_OES_EGL_image_external_essl3\00", align 1
@.str.28 = private unnamed_addr constant [24 x i8] c"GL_OES_sample_variables\00", align 1
@.str.29 = private unnamed_addr constant [40 x i8] c"GL_OES_shader_multisample_interpolation\00", align 1
@.str.30 = private unnamed_addr constant [27 x i8] c"GL_OES_shader_image_atomic\00", align 1
@.str.31 = private unnamed_addr constant [28 x i8] c"GL_OES_standard_derivatives\00", align 1
@.str.32 = private unnamed_addr constant [18 x i8] c"GL_OES_texture_3D\00", align 1
@.str.33 = private unnamed_addr constant [22 x i8] c"GL_OES_texture_buffer\00", align 1
@.str.34 = private unnamed_addr constant [30 x i8] c"GL_OES_texture_cube_map_array\00", align 1
@.str.35 = private unnamed_addr constant [44 x i8] c"GL_OES_texture_storage_multisample_2d_array\00", align 1
@.str.36 = private unnamed_addr constant [17 x i8] c"GL_OVR_multiview\00", align 1
@.str.37 = private unnamed_addr constant [18 x i8] c"GL_OVR_multiview2\00", align 1
@.str.38 = private unnamed_addr constant [23 x i8] c"GL_WEBGL_video_texture\00", align 1
@.str.39 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.40 = private unnamed_addr constant [4 x i8] c"GL_\00", align 1
@.str.41 = private unnamed_addr constant [32 x i8] c"ANGLE_base_vertex_base_instance\00", align 1
@.str.42 = private unnamed_addr constant [17 x i8] c"ANGLE_multi_draw\00", align 1
@.str.43 = private unnamed_addr constant [26 x i8] c"ANGLE_texture_multisample\00", align 1
@.str.44 = private unnamed_addr constant [20 x i8] c"APPLE_clip_distance\00", align 1
@.str.45 = private unnamed_addr constant [22 x i8] c"ARB_texture_rectangle\00", align 1
@.str.46 = private unnamed_addr constant [29 x i8] c"ARM_shader_framebuffer_fetch\00", align 1
@.str.47 = private unnamed_addr constant [24 x i8] c"EXT_blend_func_extended\00", align 1
@.str.48 = private unnamed_addr constant [23 x i8] c"EXT_clip_cull_distance\00", align 1
@.str.49 = private unnamed_addr constant [17 x i8] c"EXT_draw_buffers\00", align 1
@.str.50 = private unnamed_addr constant [15 x i8] c"EXT_frag_depth\00", align 1
@.str.51 = private unnamed_addr constant [20 x i8] c"EXT_geometry_shader\00", align 1
@.str.52 = private unnamed_addr constant [21 x i8] c"OES_shader_io_blocks\00", align 1
@.str.53 = private unnamed_addr constant [21 x i8] c"EXT_shader_io_blocks\00", align 1
@.str.54 = private unnamed_addr constant [16 x i8] c"EXT_gpu_shader5\00", align 1
@.str.55 = private unnamed_addr constant [29 x i8] c"EXT_shader_framebuffer_fetch\00", align 1
@.str.56 = private unnamed_addr constant [42 x i8] c"EXT_shader_framebuffer_fetch_non_coherent\00", align 1
@.str.57 = private unnamed_addr constant [44 x i8] c"EXT_shader_non_constant_global_initializers\00", align 1
@.str.58 = private unnamed_addr constant [23 x i8] c"EXT_shader_texture_lod\00", align 1
@.str.59 = private unnamed_addr constant [20 x i8] c"EXT_shadow_samplers\00", align 1
@.str.60 = private unnamed_addr constant [24 x i8] c"EXT_tessellation_shader\00", align 1
@.str.61 = private unnamed_addr constant [19 x i8] c"EXT_texture_buffer\00", align 1
@.str.62 = private unnamed_addr constant [27 x i8] c"EXT_texture_cube_map_array\00", align 1
@.str.63 = private unnamed_addr constant [15 x i8] c"EXT_YUV_target\00", align 1
@.str.64 = private unnamed_addr constant [32 x i8] c"NV_EGL_stream_consumer_external\00", align 1
@.str.65 = private unnamed_addr constant [28 x i8] c"NV_shader_framebuffer_fetch\00", align 1
@.str.66 = private unnamed_addr constant [38 x i8] c"NV_shader_noperspective_interpolation\00", align 1
@.str.67 = private unnamed_addr constant [23 x i8] c"OES_EGL_image_external\00", align 1
@.str.68 = private unnamed_addr constant [29 x i8] c"OES_EGL_image_external_essl3\00", align 1
@.str.69 = private unnamed_addr constant [21 x i8] c"OES_sample_variables\00", align 1
@.str.70 = private unnamed_addr constant [37 x i8] c"OES_shader_multisample_interpolation\00", align 1
@.str.71 = private unnamed_addr constant [24 x i8] c"OES_shader_image_atomic\00", align 1
@.str.72 = private unnamed_addr constant [25 x i8] c"OES_standard_derivatives\00", align 1
@.str.73 = private unnamed_addr constant [15 x i8] c"OES_texture_3D\00", align 1
@.str.74 = private unnamed_addr constant [19 x i8] c"OES_texture_buffer\00", align 1
@.str.75 = private unnamed_addr constant [27 x i8] c"OES_texture_cube_map_array\00", align 1
@.str.76 = private unnamed_addr constant [41 x i8] c"OES_texture_storage_multisample_2d_array\00", align 1
@.str.77 = private unnamed_addr constant [14 x i8] c"OVR_multiview\00", align 1
@.str.78 = private unnamed_addr constant [15 x i8] c"OVR_multiview2\00", align 1
@.str.79 = private unnamed_addr constant [20 x i8] c"WEBGL_video_texture\00", align 1
@.str.80 = private unnamed_addr constant [8 x i8] c"require\00", align 1
@.str.81 = private unnamed_addr constant [7 x i8] c"enable\00", align 1
@.str.82 = private unnamed_addr constant [5 x i8] c"warn\00", align 1
@.str.83 = private unnamed_addr constant [8 x i8] c"disable\00", align 1
@switch.table._ZN2sh22GetExtensionNameStringENS_10TExtensionE = private unnamed_addr constant [39 x i8*] [i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.38, i64 0, i64 0)], align 8
@switch.table._ZN2sh17GetBehaviorStringENS_9TBehaviorE = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.83, i64 0, i64 0)], align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN2sh22GetExtensionNameStringENS_10TExtensionE(i8 zeroext) local_unnamed_addr #0 {
  %2 = add i8 %0, -1
  %3 = icmp ult i8 %2, 39
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i8 %2 to i64
  %6 = getelementptr inbounds [39 x i8*], [39 x i8*]* @switch.table._ZN2sh22GetExtensionNameStringENS_10TExtensionE, i64 0, i64 %5
  %7 = load i8*, i8** %6, align 8
  ret i8* %7

8:                                                ; preds = %1
  ret i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.39, i64 0, i64 0)
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZN2sh18GetExtensionByNameEPKc(i8* readonly) local_unnamed_addr #1 {
  %2 = tail call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i64 0, i64 0), i64 3) #3
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %123

4:                                                ; preds = %1
  %5 = getelementptr inbounds i8, i8* %0, i64 3
  %6 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.41, i64 0, i64 0)) #3
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %123, label %8

8:                                                ; preds = %4
  %9 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.42, i64 0, i64 0)) #3
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %123, label %11

11:                                               ; preds = %8
  %12 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.43, i64 0, i64 0)) #3
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %123, label %14

14:                                               ; preds = %11
  %15 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.44, i64 0, i64 0)) #3
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %123, label %17

17:                                               ; preds = %14
  %18 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.45, i64 0, i64 0)) #3
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %123, label %20

20:                                               ; preds = %17
  %21 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.46, i64 0, i64 0)) #3
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %123, label %23

23:                                               ; preds = %20
  %24 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.47, i64 0, i64 0)) #3
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %123, label %26

26:                                               ; preds = %23
  %27 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.48, i64 0, i64 0)) #3
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %123, label %29

29:                                               ; preds = %26
  %30 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.49, i64 0, i64 0)) #3
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %123, label %32

32:                                               ; preds = %29
  %33 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i64 0, i64 0)) #3
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %123, label %35

35:                                               ; preds = %32
  %36 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.51, i64 0, i64 0)) #3
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %123, label %38

38:                                               ; preds = %35
  %39 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.52, i64 0, i64 0)) #3
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %123, label %41

41:                                               ; preds = %38
  %42 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.53, i64 0, i64 0)) #3
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %123, label %44

44:                                               ; preds = %41
  %45 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.54, i64 0, i64 0)) #3
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %123, label %47

47:                                               ; preds = %44
  %48 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.55, i64 0, i64 0)) #3
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %123, label %50

50:                                               ; preds = %47
  %51 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.56, i64 0, i64 0)) #3
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %123, label %53

53:                                               ; preds = %50
  %54 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.57, i64 0, i64 0)) #3
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %123, label %56

56:                                               ; preds = %53
  %57 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.58, i64 0, i64 0)) #3
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %123, label %59

59:                                               ; preds = %56
  %60 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.59, i64 0, i64 0)) #3
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %123, label %62

62:                                               ; preds = %59
  %63 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.60, i64 0, i64 0)) #3
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %123, label %65

65:                                               ; preds = %62
  %66 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.61, i64 0, i64 0)) #3
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %123, label %68

68:                                               ; preds = %65
  %69 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.62, i64 0, i64 0)) #3
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %123, label %71

71:                                               ; preds = %68
  %72 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.63, i64 0, i64 0)) #3
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %123, label %74

74:                                               ; preds = %71
  %75 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.64, i64 0, i64 0)) #3
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %123, label %77

77:                                               ; preds = %74
  %78 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.65, i64 0, i64 0)) #3
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %123, label %80

80:                                               ; preds = %77
  %81 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.66, i64 0, i64 0)) #3
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %123, label %83

83:                                               ; preds = %80
  %84 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.67, i64 0, i64 0)) #3
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %123, label %86

86:                                               ; preds = %83
  %87 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.68, i64 0, i64 0)) #3
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %123, label %89

89:                                               ; preds = %86
  %90 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.69, i64 0, i64 0)) #3
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %123, label %92

92:                                               ; preds = %89
  %93 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.70, i64 0, i64 0)) #3
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %123, label %95

95:                                               ; preds = %92
  %96 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.71, i64 0, i64 0)) #3
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %123, label %98

98:                                               ; preds = %95
  %99 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.72, i64 0, i64 0)) #3
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %123, label %101

101:                                              ; preds = %98
  %102 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.73, i64 0, i64 0)) #3
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %123, label %104

104:                                              ; preds = %101
  %105 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.74, i64 0, i64 0)) #3
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %123, label %107

107:                                              ; preds = %104
  %108 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.75, i64 0, i64 0)) #3
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %123, label %110

110:                                              ; preds = %107
  %111 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.76, i64 0, i64 0)) #3
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %123, label %113

113:                                              ; preds = %110
  %114 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.77, i64 0, i64 0)) #3
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %123, label %116

116:                                              ; preds = %113
  %117 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i64 0, i64 0)) #3
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %123, label %119

119:                                              ; preds = %116
  %120 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.79, i64 0, i64 0)) #3
  %121 = icmp eq i32 %120, 0
  %122 = select i1 %121, i8 39, i8 0
  br label %123

123:                                              ; preds = %4, %8, %11, %14, %17, %20, %23, %26, %29, %32, %35, %38, %41, %44, %47, %50, %53, %56, %59, %62, %65, %68, %71, %74, %77, %80, %83, %86, %89, %92, %95, %98, %101, %104, %107, %110, %113, %116, %119, %1
  %124 = phi i8 [ 0, %1 ], [ 1, %4 ], [ 2, %8 ], [ 3, %11 ], [ 4, %14 ], [ 5, %17 ], [ 6, %20 ], [ 7, %23 ], [ 8, %26 ], [ 9, %29 ], [ 10, %32 ], [ 11, %35 ], [ 12, %38 ], [ 13, %41 ], [ 14, %44 ], [ 15, %47 ], [ 16, %50 ], [ 17, %53 ], [ 18, %56 ], [ 19, %59 ], [ 20, %62 ], [ 21, %65 ], [ 22, %68 ], [ 23, %71 ], [ 24, %74 ], [ 25, %77 ], [ 26, %80 ], [ 27, %83 ], [ 28, %86 ], [ 29, %89 ], [ 30, %92 ], [ 31, %95 ], [ 32, %98 ], [ 33, %101 ], [ 34, %104 ], [ 35, %107 ], [ 36, %110 ], [ 37, %113 ], [ 38, %116 ], [ %122, %119 ]
  ret i8 %124
}

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN2sh17GetBehaviorStringENS_9TBehaviorE(i8 zeroext) local_unnamed_addr #0 {
  %2 = icmp ult i8 %0, 4
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i8 %0 to i64
  %5 = getelementptr inbounds [4 x i8*], [4 x i8*]* @switch.table._ZN2sh17GetBehaviorStringENS_9TBehaviorE, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* null
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map"* dereferenceable(24), i8 zeroext) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %32, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp ult i8 %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %17 = select i1 %12, %"class.std::__1::__tree_node"** %14, %"class.std::__1::__tree_node"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %32, label %23

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node"*
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1, i32 0, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp ugt i8 %26, %1
  br i1 %27, label %32, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1, i32 0, i32 1
  %30 = load i8, i8* %29, align 1
  %31 = icmp ult i8 %30, 3
  ret i1 %31

32:                                               ; preds = %23, %21, %2
  ret i1 false
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
