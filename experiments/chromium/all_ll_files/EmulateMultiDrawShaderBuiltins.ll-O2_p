; ModuleID = '../../third_party/angle/src/compiler/translator/tree_ops/EmulateMultiDrawShaderBuiltins.cpp'
source_filename = "../../third_party/angle/src/compiler/translator/tree_ops/EmulateMultiDrawShaderBuiltins.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sh::ImmutableString" = type { i8*, i64 }
%"struct.sh::StaticType::Helpers::StaticMangledName" = type { [4 x i8] }
%"struct.sh::TMemoryQualifier" = type { i8, i8, i8, i8, i8 }
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.sh::TSpan" = type { i32*, i64 }
%"class.sh::TVector.22" = type opaque
%"class.sh::TInterfaceBlock" = type { %"class.sh::TSymbol.base", %"class.sh::TFieldListCollection", i32, i32 }
%"class.sh::TSymbol.base" = type <{ %"class.sh::ImmutableString", %"class.sh::TSymbolUniqueId", i8, i8, i8 }>
%"class.sh::TSymbolUniqueId" = type { i32 }
%"class.sh::TFieldListCollection" = type { %"class.sh::TVector.23"*, i64, i32, %"class.std::__1::basic_string" }
%"class.sh::TVector.23" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.sh::TStructure" = type <{ %"class.sh::TSymbol.base", i8, %"class.sh::TFieldListCollection", i8, [7 x i8] }>
%"class.sh::TCompiler" = type opaque
%"class.sh::TIntermBlock" = type <{ %"class.sh::TIntermNode", %"class.sh::TIntermAggregateBase", %"class.sh::TVector", i8, [7 x i8] }>
%"class.sh::TIntermNode" = type { i32 (...)**, %"struct.sh::TSourceLoc" }
%"struct.sh::TSourceLoc" = type { i32, i32, i32, i32 }
%"class.sh::TIntermAggregateBase" = type { i32 (...)** }
%"class.sh::TVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.sh::TIntermNode"** }
%"class.sh::TSymbolTable" = type { %"class.sh::TSymbolTableBase", %"class.std::__1::vector.1", %"class.std::__1::vector.6", i8, i32, i32, i32, %struct.ShBuiltInResources, %"class.std::__1::map", %"class.sh::TVariable"* }
%"class.sh::TSymbolTableBase" = type { %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"* }
%"class.sh::TSymbol" = type <{ %"class.sh::ImmutableString", %"class.sh::TSymbolUniqueId", i8, i8, i8, i8 }>
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"class.std::__1::unique_ptr.8"*, %"class.std::__1::unique_ptr.8"*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::unique_ptr.8" = type opaque
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::unique_ptr.8"* }
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array", %"struct.std::__1::array", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array" = type { [3 x i32] }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { i64 }
%"class.sh::TVariable" = type { %"class.sh::TSymbol.base", %"class.sh::TType"*, %"class.sh::TConstantUnion"* }
%"class.sh::TType" = type { i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", i8, %"struct.sh::TLayoutQualifier", i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }
%"struct.sh::TLayoutQualifier" = type <{ i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8] }>
%"class.sh::TConstantUnion" = type { %union.anon.29, i32 }
%union.anon.29 = type { i32 }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.32" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string.37", %"class.std::__1::basic_string.37", %"class.std::__1::vector.45", i8, i8, %"class.std::__1::vector.30", %"class.std::__1::basic_string.37", %"class.std::__1::basic_string.37", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { i32*, i32*, %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { i32* }
%"class.std::__1::basic_string.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.40 }
%union.anon.40 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.sh::ShaderVariable"* }
%"class.sh::(anonymous namespace)::FindGLDrawIDTraverser" = type { %"class.sh::TIntermTraverser", %"class.sh::TVariable"* }
%"class.sh::TIntermTraverser" = type { i32 (...)**, i8, i8, i8, i32, i32, i8, %"class.std::__1::vector.52", %"class.sh::TSymbolTable"*, %"class.std::__1::vector.59", %"class.std::__1::vector.66", %"class.sh::TVector", %"class.std::__1::vector.73" }
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*, %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*, %"class.std::__1::__compressed_pair.54" }
%"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry" = type { %"class.sh::TIntermAggregateBase"*, %"class.sh::TIntermNode"*, %"class.sh::TVector" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"*, %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"*, %"class.std::__1::__compressed_pair.61" }
%"struct.sh::TIntermTraverser::NodeInsertMultipleEntry" = type { %"class.sh::TIntermBlock"*, i64, %"class.sh::TVector", %"class.sh::TVector" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"* }
%"class.std::__1::vector.66" = type { %"class.std::__1::__vector_base.67" }
%"class.std::__1::__vector_base.67" = type { %"struct.sh::TIntermTraverser::NodeUpdateEntry"*, %"struct.sh::TIntermTraverser::NodeUpdateEntry"*, %"class.std::__1::__compressed_pair.68" }
%"struct.sh::TIntermTraverser::NodeUpdateEntry" = type <{ %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.sh::TIntermTraverser::NodeUpdateEntry"* }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"struct.sh::TIntermTraverser::ParentBlock"*, %"struct.sh::TIntermTraverser::ParentBlock"*, %"class.std::__1::__compressed_pair.75" }
%"struct.sh::TIntermTraverser::ParentBlock" = type { %"class.sh::TIntermBlock"*, i64 }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.sh::TIntermTraverser::ParentBlock"* }
%"class.angle::PoolAllocator" = type <{ i64, i64, i64, i64, i64, %"struct.angle::PoolAllocator::Header"*, %"struct.angle::PoolAllocator::Header"*, %"class.std::__1::vector.89", i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.angle::PoolAllocator::Header" = type { %"struct.angle::PoolAllocator::Header"*, i64 }
%"class.std::__1::vector.89" = type { %"class.std::__1::__vector_base.90" }
%"class.std::__1::__vector_base.90" = type { %"struct.angle::PoolAllocator::AllocState"*, %"struct.angle::PoolAllocator::AllocState"*, %"class.std::__1::__compressed_pair.91" }
%"struct.angle::PoolAllocator::AllocState" = type { i64, %"struct.angle::PoolAllocator::Header"* }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.angle::PoolAllocator::AllocState"* }
%"class.sh::TIntermSymbol" = type { %"class.sh::TIntermTyped", %"class.sh::TVariable"* }
%"class.sh::TIntermTyped" = type { %"class.sh::TIntermNode" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.41 }
%struct.anon.41 = type { i8 }
%"class.sh::(anonymous namespace)::AddBaseVertexToGLVertexIDTraverser" = type { %"class.sh::TIntermTraverser" }
%"class.sh::(anonymous namespace)::FindGLBaseVertexTraverser" = type { %"class.sh::TIntermTraverser", %"class.sh::TVariable"* }
%"class.sh::(anonymous namespace)::FindGLBaseInstanceTraverser" = type { %"class.sh::TIntermTraverser", %"class.sh::TVariable"* }
%"class.sh::TIntermConstantUnion" = type { %"class.sh::TIntermExpression", %"class.sh::TConstantUnion"* }
%"class.sh::TIntermExpression" = type { %"class.sh::TIntermTyped", %"class.sh::TType" }
%"class.sh::TIntermSwizzle" = type <{ %"class.sh::TIntermExpression", %"class.sh::TIntermTyped"*, %"class.sh::TVector.80", i8, [7 x i8] }>
%"class.sh::TVector.80" = type { %"class.std::__1::vector.81" }
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { i32*, i32*, %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { i32* }
%"class.sh::TIntermBinary" = type <{ %"class.sh::TIntermOperator.base", [7 x i8], %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, i8, [7 x i8] }>
%"class.sh::TIntermOperator.base" = type <{ %"class.sh::TIntermExpression", i8 }>
%"class.sh::TIntermUnary" = type { %"class.sh::TIntermOperator.base", %"class.sh::TIntermTyped"*, i8, %"class.sh::TFunction"* }
%"class.sh::TFunction" = type <{ %"class.sh::TSymbol.base", i8, %"class.sh::TVector.88"*, %"class.sh::TVariable"**, i64, %"class.sh::TType"*, %"class.sh::ImmutableString", i8, i8, i8, i8, [4 x i8] }>
%"class.sh::TVector.88" = type opaque
%"class.sh::TIntermTernary" = type { %"class.sh::TIntermExpression", %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"* }
%"class.sh::TIntermIfElse" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermSwitch" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermCase" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"* }
%"class.sh::TIntermFunctionPrototype" = type { %"class.sh::TIntermTyped", %"class.sh::TFunction"* }
%"class.sh::TIntermFunctionDefinition" = type { %"class.sh::TIntermNode", %"class.sh::TIntermFunctionPrototype"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermAggregate" = type { %"class.sh::TIntermOperator.base", %"class.sh::TIntermAggregateBase", %"class.sh::TVector", i8, i8, %"class.sh::TFunction"* }
%"class.sh::TIntermGlobalQualifierDeclaration" = type <{ %"class.sh::TIntermNode", %"class.sh::TIntermSymbol"*, i8, [7 x i8] }>
%"class.sh::TIntermDeclaration" = type { %"class.sh::TIntermNode", %"class.sh::TIntermAggregateBase", %"class.sh::TVector" }
%"class.sh::TIntermLoop" = type { %"class.sh::TIntermNode", i32, %"class.sh::TIntermNode"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermBranch" = type { %"class.sh::TIntermNode", i8, %"class.sh::TIntermTyped"* }
%"class.sh::TIntermPreprocessorDirective" = type { %"class.sh::TIntermNode", i32, %"class.sh::ImmutableString" }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE = comdat any

$_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE = comdat any

$_ZN2sh16TIntermTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE = comdat any

$_ZN2sh16TIntermTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE = comdat any

$_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE = comdat any

$_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE = comdat any

$_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE = comdat any

$_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE = comdat any

$_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE = comdat any

$_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE = comdat any

$_ZN2sh16TIntermTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE = comdat any

$_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE = comdat any

$_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE = comdat any

$_ZN2sh16TIntermTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE = comdat any

$_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE = comdat any

$_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE = comdat any

$_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE = comdat any

$_ZNSt3__16vectorIN2sh14ShaderVariableENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

@_ZN2sh12_GLOBAL__N_121kEmulatedGLDrawIDNameE = internal constant %"class.sh::ImmutableString" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i64 12 }, align 8
@_ZTVN2sh12_GLOBAL__N_121FindGLDrawIDTraverserE = internal unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sh::TIntermTraverser"*)* @_ZN2sh16TIntermTraverserD2Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::FindGLDrawIDTraverser"*)* @_ZN2sh12_GLOBAL__N_121FindGLDrawIDTraverserD0Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::FindGLDrawIDTraverser"*, %"class.sh::TIntermSymbol"*)* @_ZN2sh12_GLOBAL__N_121FindGLDrawIDTraverser11visitSymbolEPNS_13TIntermSymbolE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermConstantUnion"*)* @_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwizzle"*)* @_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBinary"*)* @_ZN2sh16TIntermTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermUnary"*)* @_ZN2sh16TIntermTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermTernary"*)* @_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermIfElse"*)* @_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwitch"*)* @_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermCase"*)* @_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionPrototype"*)* @_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermAggregate"*)* @_ZN2sh16TIntermTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermGlobalQualifierDeclaration"*)* @_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermDeclaration"*)* @_ZN2sh16TIntermTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBranch"*)* @_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermPreprocessorDirective"*)* @_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBinary"*)* @_ZN2sh16TIntermTraverser14traverseBinaryEPNS_13TIntermBinaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermUnary"*)* @_ZN2sh16TIntermTraverser13traverseUnaryEPNS_12TIntermUnaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser26traverseFunctionDefinitionEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermAggregate"*)* @_ZN2sh16TIntermTraverser17traverseAggregateEPNS_16TIntermAggregateE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser13traverseBlockEPNS_12TIntermBlockE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser12traverseLoopEPNS_11TIntermLoopE to i8*)] }, align 8
@_ZN2sh10StaticType7HelpersL20kMangledNameInstanceILNS_10TBasicTypeE3ELNS_10TPrecisionE3ELNS_10TQualifierE6ELh1ELh1EEE = internal constant %"struct.sh::StaticType::Helpers::StaticMangledName" { [4 x i8] c"00D\00" }, align 1
@_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE3ELNS_10TPrecisionE3ELNS_10TQualifierE6ELh1ELh1EEE = internal global { i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* } { i32 3, i32 3, i32 6, i8 0, i8 0, %"struct.sh::TMemoryQualifier" zeroinitializer, { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 } { i32 -1, i32 0, i32 0, i32 0, %"struct.sh::WorkGroupSize" { [3 x i32] [i32 -1, i32 -1, i32 -1] }, i32 -1, i32 -1, i32 0, i32 -1, i8 0, i8 0, i32 0, i32 0, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -1, i32 -1, i8 0 }, i8 1, i8 1, %"class.sh::TSpan" zeroinitializer, %"class.sh::TVector.22"* null, %"class.sh::TInterfaceBlock"* null, %"class.sh::TStructure"* null, i8 0, i64 0, i8* getelementptr inbounds (%"struct.sh::StaticType::Helpers::StaticMangledName", %"struct.sh::StaticType::Helpers::StaticMangledName"* @_ZN2sh10StaticType7HelpersL20kMangledNameInstanceILNS_10TBasicTypeE3ELNS_10TPrecisionE3ELNS_10TQualifierE6ELh1ELh1EEE, i32 0, i32 0, i32 0) }, align 8
@.str = private unnamed_addr constant [13 x i8] c"angle_DrawID\00", align 1
@_ZTVN2sh12_GLOBAL__N_134AddBaseVertexToGLVertexIDTraverserE = internal unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sh::TIntermTraverser"*)* @_ZN2sh16TIntermTraverserD2Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::AddBaseVertexToGLVertexIDTraverser"*)* @_ZN2sh12_GLOBAL__N_134AddBaseVertexToGLVertexIDTraverserD0Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::AddBaseVertexToGLVertexIDTraverser"*, %"class.sh::TIntermSymbol"*)* @_ZN2sh12_GLOBAL__N_134AddBaseVertexToGLVertexIDTraverser11visitSymbolEPNS_13TIntermSymbolE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermConstantUnion"*)* @_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwizzle"*)* @_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBinary"*)* @_ZN2sh16TIntermTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermUnary"*)* @_ZN2sh16TIntermTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermTernary"*)* @_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermIfElse"*)* @_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwitch"*)* @_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermCase"*)* @_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionPrototype"*)* @_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermAggregate"*)* @_ZN2sh16TIntermTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermGlobalQualifierDeclaration"*)* @_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermDeclaration"*)* @_ZN2sh16TIntermTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBranch"*)* @_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermPreprocessorDirective"*)* @_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBinary"*)* @_ZN2sh16TIntermTraverser14traverseBinaryEPNS_13TIntermBinaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermUnary"*)* @_ZN2sh16TIntermTraverser13traverseUnaryEPNS_12TIntermUnaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser26traverseFunctionDefinitionEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermAggregate"*)* @_ZN2sh16TIntermTraverser17traverseAggregateEPNS_16TIntermAggregateE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser13traverseBlockEPNS_12TIntermBlockE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser12traverseLoopEPNS_11TIntermLoopE to i8*)] }, align 8
@_ZTVN2sh12_GLOBAL__N_125FindGLBaseVertexTraverserE = internal unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sh::TIntermTraverser"*)* @_ZN2sh16TIntermTraverserD2Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::FindGLBaseVertexTraverser"*)* @_ZN2sh12_GLOBAL__N_125FindGLBaseVertexTraverserD0Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::FindGLBaseVertexTraverser"*, %"class.sh::TIntermSymbol"*)* @_ZN2sh12_GLOBAL__N_125FindGLBaseVertexTraverser11visitSymbolEPNS_13TIntermSymbolE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermConstantUnion"*)* @_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwizzle"*)* @_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBinary"*)* @_ZN2sh16TIntermTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermUnary"*)* @_ZN2sh16TIntermTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermTernary"*)* @_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermIfElse"*)* @_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwitch"*)* @_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermCase"*)* @_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionPrototype"*)* @_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermAggregate"*)* @_ZN2sh16TIntermTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermGlobalQualifierDeclaration"*)* @_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermDeclaration"*)* @_ZN2sh16TIntermTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBranch"*)* @_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermPreprocessorDirective"*)* @_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBinary"*)* @_ZN2sh16TIntermTraverser14traverseBinaryEPNS_13TIntermBinaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermUnary"*)* @_ZN2sh16TIntermTraverser13traverseUnaryEPNS_12TIntermUnaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser26traverseFunctionDefinitionEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermAggregate"*)* @_ZN2sh16TIntermTraverser17traverseAggregateEPNS_16TIntermAggregateE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser13traverseBlockEPNS_12TIntermBlockE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser12traverseLoopEPNS_11TIntermLoopE to i8*)] }, align 8
@.str.3 = private unnamed_addr constant [17 x i8] c"angle_BaseVertex\00", align 1
@_ZTVN2sh12_GLOBAL__N_127FindGLBaseInstanceTraverserE = internal unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sh::TIntermTraverser"*)* @_ZN2sh16TIntermTraverserD2Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::FindGLBaseInstanceTraverser"*)* @_ZN2sh12_GLOBAL__N_127FindGLBaseInstanceTraverserD0Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::FindGLBaseInstanceTraverser"*, %"class.sh::TIntermSymbol"*)* @_ZN2sh12_GLOBAL__N_127FindGLBaseInstanceTraverser11visitSymbolEPNS_13TIntermSymbolE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermConstantUnion"*)* @_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwizzle"*)* @_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBinary"*)* @_ZN2sh16TIntermTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermUnary"*)* @_ZN2sh16TIntermTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermTernary"*)* @_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermIfElse"*)* @_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwitch"*)* @_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermCase"*)* @_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionPrototype"*)* @_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermAggregate"*)* @_ZN2sh16TIntermTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermGlobalQualifierDeclaration"*)* @_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermDeclaration"*)* @_ZN2sh16TIntermTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBranch"*)* @_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermPreprocessorDirective"*)* @_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBinary"*)* @_ZN2sh16TIntermTraverser14traverseBinaryEPNS_13TIntermBinaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermUnary"*)* @_ZN2sh16TIntermTraverser13traverseUnaryEPNS_12TIntermUnaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser26traverseFunctionDefinitionEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermAggregate"*)* @_ZN2sh16TIntermTraverser17traverseAggregateEPNS_16TIntermAggregateE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser13traverseBlockEPNS_12TIntermBlockE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser12traverseLoopEPNS_11TIntermLoopE to i8*)] }, align 8
@.str.4 = private unnamed_addr constant [19 x i8] c"angle_BaseInstance\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh15EmulateGLDrawIDEPNS_9TCompilerEPNS_12TIntermBlockEPNS_12TSymbolTableEPNSt3__16vectorINS_14ShaderVariableENS6_9allocatorIS8_EEEEb(%"class.sh::TCompiler"*, %"class.sh::TIntermBlock"*, %"class.sh::TSymbolTable"*, %"class.std::__1::vector.30"*, i1 zeroext) local_unnamed_addr #0 {
  %6 = alloca %"class.sh::(anonymous namespace)::FindGLDrawIDTraverser", align 8
  %7 = alloca %"struct.sh::ShaderVariable", align 8
  %8 = bitcast %"class.sh::(anonymous namespace)::FindGLDrawIDTraverser"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %8) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 160, i1 false)
  %9 = getelementptr inbounds %"class.sh::(anonymous namespace)::FindGLDrawIDTraverser", %"class.sh::(anonymous namespace)::FindGLDrawIDTraverser"* %6, i64 0, i32 0
  call void @_ZN2sh16TIntermTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TIntermTraverser"* nonnull %9, i1 zeroext true, i1 zeroext false, i1 zeroext false, %"class.sh::TSymbolTable"* null) #8
  %10 = getelementptr inbounds %"class.sh::(anonymous namespace)::FindGLDrawIDTraverser", %"class.sh::(anonymous namespace)::FindGLDrawIDTraverser"* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_121FindGLDrawIDTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.sh::(anonymous namespace)::FindGLDrawIDTraverser", %"class.sh::(anonymous namespace)::FindGLDrawIDTraverser"* %6, i64 0, i32 1
  store %"class.sh::TVariable"* null, %"class.sh::TVariable"** %11, align 8
  call void @_ZN2sh12TIntermBlock8traverseEPNS_16TIntermTraverserE(%"class.sh::TIntermBlock"* %1, %"class.sh::TIntermTraverser"* nonnull %9) #8
  %12 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %11, align 8
  %13 = icmp eq %"class.sh::TVariable"* %12, null
  br i1 %13, label %87, label %14

14:                                               ; preds = %5
  %15 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %16 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %15, i64 40) #8
  %17 = bitcast i8* %16 to %"class.sh::TVariable"*
  call void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"* %17, %"class.sh::TSymbolTable"* %2, %"class.sh::ImmutableString"* nonnull dereferenceable(16) @_ZN2sh12_GLOBAL__N_121kEmulatedGLDrawIDNameE, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE3ELNS_10TPrecisionE3ELNS_10TQualifierE6ELh1ELh1EEE to %"class.sh::TType"*), i8 zeroext 2, i8 zeroext 0) #8
  %18 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %19 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %18, i64 32) #8
  %20 = bitcast i8* %19 to %"class.sh::TIntermSymbol"*
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %20, %"class.sh::TVariable"* %17) #8
  br i1 %4, label %21, label %84

21:                                               ; preds = %14
  %22 = bitcast %"struct.sh::ShaderVariable"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %22) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 208, i1 false)
  call void @_ZN2sh14ShaderVariableC1Ev(%"struct.sh::ShaderVariable"* nonnull %7) #8
  %23 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %7, i64 0, i32 2
  %24 = bitcast %"class.std::__1::basic_string.37"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 12, i64* %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::basic_string.37", %"class.std::__1::basic_string.37"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  br label %34

32:                                               ; preds = %21
  store i8 12, i8* %25, align 1
  %33 = bitcast %"class.std::__1::basic_string.37"* %23 to i8*
  br label %34

34:                                               ; preds = %28, %32
  %35 = phi i8* [ %31, %28 ], [ %33, %32 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %35, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 12, i1 false) #8
  %36 = getelementptr inbounds i8, i8* %35, i64 12
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %7, i64 0, i32 3
  %38 = bitcast %"class.std::__1::basic_string.37"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %7, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 12, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::basic_string.37", %"class.std::__1::basic_string.37"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  br label %48

46:                                               ; preds = %34
  store i8 12, i8* %39, align 1
  %47 = bitcast %"class.std::__1::basic_string.37"* %37 to i8*
  br label %48

48:                                               ; preds = %42, %46
  %49 = phi i8* [ %45, %42 ], [ %47, %46 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %49, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 12, i1 false) #8
  %50 = getelementptr inbounds i8, i8* %49, i64 12
  store i8 0, i8* %50, align 1
  %51 = call i32 @_ZN2sh14GLVariableTypeERKNS_5TTypeE(%"class.sh::TType"* dereferenceable(184) bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE3ELNS_10TPrecisionE3ELNS_10TQualifierE6ELh1ELh1EEE to %"class.sh::TType"*)) #8
  %52 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %7, i64 0, i32 0
  store i32 %51, i32* %52, align 8
  %53 = call i32 @_ZN2sh19GLVariablePrecisionERKNS_5TTypeE(%"class.sh::TType"* dereferenceable(184) bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE3ELNS_10TPrecisionE3ELNS_10TQualifierE6ELh1ELh1EEE to %"class.sh::TType"*)) #8
  %54 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %7, i64 0, i32 1
  store i32 %53, i32* %54, align 4
  %55 = call zeroext i1 @_ZNK2sh12TSymbolTable16isStaticallyUsedERKNS_9TVariableE(%"class.sh::TSymbolTable"* %2, %"class.sh::TVariable"* nonnull dereferenceable(40) %12) #8
  %56 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %7, i64 0, i32 5
  %57 = zext i1 %55 to i8
  store i8 %57, i8* %56, align 8
  %58 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %7, i64 0, i32 6
  store i8 1, i8* %58, align 1
  %59 = load i32, i32* getelementptr inbounds ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }, { i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE3ELNS_10TPrecisionE3ELNS_10TQualifierE6ELh1ELh1EEE, i64 0, i32 6, i32 5), align 4
  %60 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %7, i64 0, i32 13
  store i32 %59, i32* %60, align 4
  %61 = load i32, i32* getelementptr inbounds ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }, { i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE3ELNS_10TPrecisionE3ELNS_10TQualifierE6ELh1ELh1EEE, i64 0, i32 6, i32 0), align 4
  %62 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %7, i64 0, i32 11
  store i32 %61, i32* %62, align 4
  %63 = load i32, i32* getelementptr inbounds ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }, { i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE3ELNS_10TPrecisionE3ELNS_10TQualifierE6ELh1ELh1EEE, i64 0, i32 6, i32 6), align 4
  %64 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %7, i64 0, i32 15
  store i32 %63, i32* %64, align 4
  %65 = load i40, i40* bitcast (%"struct.sh::TMemoryQualifier"* getelementptr inbounds ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }, { i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE3ELNS_10TPrecisionE3ELNS_10TQualifierE6ELh1ELh1EEE, i64 0, i32 5) to i40*), align 2
  %66 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %7, i64 0, i32 16
  %67 = trunc i40 %65 to i8
  %68 = and i8 %67, 1
  store i8 %68, i8* %66, align 8
  %69 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %7, i64 0, i32 17
  %70 = lshr i40 %65, 8
  %71 = trunc i40 %70 to i8
  %72 = and i8 %71, 1
  store i8 %72, i8* %69, align 1
  %73 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %3, i64 0, i32 0, i32 1
  %74 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %76 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %75, align 8
  %77 = icmp eq %"struct.sh::ShaderVariable"* %74, %76
  br i1 %77, label %82, label %78

78:                                               ; preds = %48
  call void @_ZN2sh14ShaderVariableC1ERKS0_(%"struct.sh::ShaderVariable"* %74, %"struct.sh::ShaderVariable"* nonnull dereferenceable(208) %7) #8
  %79 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %74, i64 1
  %80 = ptrtoint %"struct.sh::ShaderVariable"* %79 to i64
  %81 = bitcast %"struct.sh::ShaderVariable"** %73 to i64*
  store i64 %80, i64* %81, align 8
  br label %83

82:                                               ; preds = %48
  call void @_ZNSt3__16vectorIN2sh14ShaderVariableENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.30"* %3, %"struct.sh::ShaderVariable"* nonnull dereferenceable(208) %7) #8
  br label %83

83:                                               ; preds = %78, %82
  call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %22) #8
  br label %84

84:                                               ; preds = %83, %14
  call void @_ZN2sh21DeclareGlobalVariableEPNS_12TIntermBlockEPKNS_9TVariableE(%"class.sh::TIntermBlock"* %1, %"class.sh::TVariable"* %17) #8
  %85 = bitcast i8* %19 to %"class.sh::TIntermTyped"*
  %86 = call zeroext i1 @_ZN2sh24ReplaceVariableWithTypedEPNS_9TCompilerEPNS_12TIntermBlockEPKNS_9TVariableEPKNS_12TIntermTypedE(%"class.sh::TCompiler"* %0, %"class.sh::TIntermBlock"* %1, %"class.sh::TVariable"* nonnull %12, %"class.sh::TIntermTyped"* %85) #8
  br i1 %86, label %87, label %88

87:                                               ; preds = %5, %84
  br label %88

88:                                               ; preds = %84, %87
  %89 = phi i1 [ true, %87 ], [ false, %84 ]
  call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %8) #8
  ret i1 %89
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2sh12TIntermBlock8traverseEPNS_16TIntermTraverserE(%"class.sh::TIntermBlock"*, %"class.sh::TIntermTraverser"*) unnamed_addr #2

declare void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"*, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"* dereferenceable(16), %"class.sh::TType"*, i8 zeroext, i8 zeroext) unnamed_addr #2

declare void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"*, %"class.sh::TVariable"*) unnamed_addr #2

declare void @_ZN2sh14ShaderVariableC1Ev(%"struct.sh::ShaderVariable"*) unnamed_addr #2

declare i32 @_ZN2sh14GLVariableTypeERKNS_5TTypeE(%"class.sh::TType"* dereferenceable(184)) local_unnamed_addr #2

declare i32 @_ZN2sh19GLVariablePrecisionERKNS_5TTypeE(%"class.sh::TType"* dereferenceable(184)) local_unnamed_addr #2

declare zeroext i1 @_ZNK2sh12TSymbolTable16isStaticallyUsedERKNS_9TVariableE(%"class.sh::TSymbolTable"*, %"class.sh::TVariable"* dereferenceable(40)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"*) unnamed_addr #3

declare void @_ZN2sh21DeclareGlobalVariableEPNS_12TIntermBlockEPKNS_9TVariableE(%"class.sh::TIntermBlock"*, %"class.sh::TVariable"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2sh24ReplaceVariableWithTypedEPNS_9TCompilerEPNS_12TIntermBlockEPKNS_9TVariableEPKNS_12TIntermTypedE(%"class.sh::TCompiler"*, %"class.sh::TIntermBlock"*, %"class.sh::TVariable"*, %"class.sh::TIntermTyped"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh31EmulateGLBaseVertexBaseInstanceEPNS_9TCompilerEPNS_12TIntermBlockEPNS_12TSymbolTableEPNSt3__16vectorINS_14ShaderVariableENS6_9allocatorIS8_EEEEbb(%"class.sh::TCompiler"*, %"class.sh::TIntermBlock"*, %"class.sh::TSymbolTable"*, %"class.std::__1::vector.30"*, i1 zeroext, i1 zeroext) local_unnamed_addr #0 {
  %7 = alloca %"struct.sh::ShaderVariable", align 8
  %8 = alloca %"struct.sh::ShaderVariable", align 8
  %9 = alloca %"class.sh::(anonymous namespace)::AddBaseVertexToGLVertexIDTraverser", align 8
  %10 = alloca %"class.sh::(anonymous namespace)::FindGLBaseVertexTraverser", align 8
  %11 = alloca %"class.sh::(anonymous namespace)::FindGLBaseInstanceTraverser", align 8
  %12 = bitcast %"struct.sh::ShaderVariable"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %12) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 208, i1 false)
  call void @_ZN2sh14ShaderVariableC1Ev(%"struct.sh::ShaderVariable"* nonnull %7) #8
  %13 = bitcast %"struct.sh::ShaderVariable"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %13) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 208, i1 false)
  call void @_ZN2sh14ShaderVariableC1Ev(%"struct.sh::ShaderVariable"* nonnull %8) #8
  br i1 %5, label %14, label %20

14:                                               ; preds = %6
  %15 = bitcast %"class.sh::(anonymous namespace)::AddBaseVertexToGLVertexIDTraverser"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %15) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 152, i1 false)
  %16 = getelementptr inbounds %"class.sh::(anonymous namespace)::AddBaseVertexToGLVertexIDTraverser", %"class.sh::(anonymous namespace)::AddBaseVertexToGLVertexIDTraverser"* %9, i64 0, i32 0
  call void @_ZN2sh16TIntermTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TIntermTraverser"* nonnull %16, i1 zeroext true, i1 zeroext false, i1 zeroext false, %"class.sh::TSymbolTable"* null) #8
  %17 = getelementptr inbounds %"class.sh::(anonymous namespace)::AddBaseVertexToGLVertexIDTraverser", %"class.sh::(anonymous namespace)::AddBaseVertexToGLVertexIDTraverser"* %9, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_134AddBaseVertexToGLVertexIDTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  call void @_ZN2sh12TIntermBlock8traverseEPNS_16TIntermTraverserE(%"class.sh::TIntermBlock"* %1, %"class.sh::TIntermTraverser"* nonnull %16) #8
  %18 = getelementptr inbounds %"class.sh::TIntermBlock", %"class.sh::TIntermBlock"* %1, i64 0, i32 0
  %19 = call zeroext i1 @_ZN2sh16TIntermTraverser10updateTreeEPNS_9TCompilerEPNS_11TIntermNodeE(%"class.sh::TIntermTraverser"* nonnull %16, %"class.sh::TCompiler"* %0, %"class.sh::TIntermNode"* %18) #8
  call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %15) #8
  br i1 %19, label %20, label %199

20:                                               ; preds = %14, %6
  %21 = bitcast %"class.sh::(anonymous namespace)::FindGLBaseVertexTraverser"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %21) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 160, i1 false)
  %22 = getelementptr inbounds %"class.sh::(anonymous namespace)::FindGLBaseVertexTraverser", %"class.sh::(anonymous namespace)::FindGLBaseVertexTraverser"* %10, i64 0, i32 0
  call void @_ZN2sh16TIntermTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TIntermTraverser"* nonnull %22, i1 zeroext true, i1 zeroext false, i1 zeroext false, %"class.sh::TSymbolTable"* null) #8
  %23 = getelementptr inbounds %"class.sh::(anonymous namespace)::FindGLBaseVertexTraverser", %"class.sh::(anonymous namespace)::FindGLBaseVertexTraverser"* %10, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_125FindGLBaseVertexTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds %"class.sh::(anonymous namespace)::FindGLBaseVertexTraverser", %"class.sh::(anonymous namespace)::FindGLBaseVertexTraverser"* %10, i64 0, i32 1
  store %"class.sh::TVariable"* null, %"class.sh::TVariable"** %24, align 8
  call void @_ZN2sh12TIntermBlock8traverseEPNS_16TIntermTraverserE(%"class.sh::TIntermBlock"* %1, %"class.sh::TIntermTraverser"* nonnull %22) #8
  %25 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %24, align 8
  %26 = icmp eq %"class.sh::TVariable"* %25, null
  br i1 %26, label %95, label %27

27:                                               ; preds = %20
  %28 = call %"class.sh::TVariable"* @_ZN2sh15BuiltInVariable16angle_BaseVertexEv() #8
  %29 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %28, i64 0, i32 1
  %30 = load %"class.sh::TType"*, %"class.sh::TType"** %29, align 8
  %31 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %32 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %31, i64 32) #8
  %33 = bitcast i8* %32 to %"class.sh::TIntermSymbol"*
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %33, %"class.sh::TVariable"* %28) #8
  br i1 %4, label %34, label %91

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %7, i64 0, i32 2
  %36 = bitcast %"class.std::__1::basic_string.37"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 16, i64* %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::basic_string.37", %"class.std::__1::basic_string.37"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  br label %46

44:                                               ; preds = %34
  store i8 16, i8* %37, align 1
  %45 = bitcast %"class.std::__1::basic_string.37"* %35 to i8*
  br label %46

46:                                               ; preds = %40, %44
  %47 = phi i8* [ %43, %40 ], [ %45, %44 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %47, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i64 16, i1 false) #8
  %48 = getelementptr inbounds i8, i8* %47, i64 16
  store i8 0, i8* %48, align 1
  %49 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %7, i64 0, i32 3
  %50 = bitcast %"class.std::__1::basic_string.37"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %58

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %7, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 16, i64* %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::basic_string.37", %"class.std::__1::basic_string.37"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  br label %60

58:                                               ; preds = %46
  store i8 16, i8* %51, align 1
  %59 = bitcast %"class.std::__1::basic_string.37"* %49 to i8*
  br label %60

60:                                               ; preds = %54, %58
  %61 = phi i8* [ %57, %54 ], [ %59, %58 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %61, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i64 16, i1 false) #8
  %62 = getelementptr inbounds i8, i8* %61, i64 16
  store i8 0, i8* %62, align 1
  %63 = call i32 @_ZN2sh14GLVariableTypeERKNS_5TTypeE(%"class.sh::TType"* dereferenceable(184) %30) #8
  %64 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %7, i64 0, i32 0
  store i32 %63, i32* %64, align 8
  %65 = call i32 @_ZN2sh19GLVariablePrecisionERKNS_5TTypeE(%"class.sh::TType"* dereferenceable(184) %30) #8
  %66 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %7, i64 0, i32 1
  store i32 %65, i32* %66, align 4
  %67 = call zeroext i1 @_ZNK2sh12TSymbolTable16isStaticallyUsedERKNS_9TVariableE(%"class.sh::TSymbolTable"* %2, %"class.sh::TVariable"* nonnull dereferenceable(40) %25) #8
  %68 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %7, i64 0, i32 5
  %69 = zext i1 %67 to i8
  store i8 %69, i8* %68, align 8
  %70 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %7, i64 0, i32 6
  store i8 1, i8* %70, align 1
  %71 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %30, i64 0, i32 7, i32 5
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %30, i64 0, i32 7, i32 6
  %74 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %7, i64 0, i32 13
  store i32 %72, i32* %74, align 4
  %75 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %30, i64 0, i32 7, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %7, i64 0, i32 11
  store i32 %76, i32* %77, align 4
  %78 = load i32, i32* %73, align 4
  %79 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %7, i64 0, i32 15
  store i32 %78, i32* %79, align 4
  %80 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %30, i64 0, i32 5
  %81 = bitcast %"struct.sh::TMemoryQualifier"* %80 to i40*
  %82 = load i40, i40* %81, align 2
  %83 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %7, i64 0, i32 16
  %84 = trunc i40 %82 to i8
  %85 = and i8 %84, 1
  store i8 %85, i8* %83, align 8
  %86 = load i40, i40* %81, align 2
  %87 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %7, i64 0, i32 17
  %88 = lshr i40 %86, 8
  %89 = trunc i40 %88 to i8
  %90 = and i8 %89, 1
  store i8 %90, i8* %87, align 1
  br label %91

91:                                               ; preds = %60, %27
  %92 = phi i1 [ true, %60 ], [ false, %27 ]
  call void @_ZN2sh21DeclareGlobalVariableEPNS_12TIntermBlockEPKNS_9TVariableE(%"class.sh::TIntermBlock"* %1, %"class.sh::TVariable"* %28) #8
  %93 = bitcast i8* %32 to %"class.sh::TIntermTyped"*
  %94 = call zeroext i1 @_ZN2sh24ReplaceVariableWithTypedEPNS_9TCompilerEPNS_12TIntermBlockEPKNS_9TVariableEPKNS_12TIntermTypedE(%"class.sh::TCompiler"* %0, %"class.sh::TIntermBlock"* %1, %"class.sh::TVariable"* nonnull %25, %"class.sh::TIntermTyped"* %93) #8
  br i1 %94, label %95, label %197

95:                                               ; preds = %20, %91
  %96 = phi i1 [ %92, %91 ], [ false, %20 ]
  %97 = bitcast %"class.sh::(anonymous namespace)::FindGLBaseInstanceTraverser"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %97) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 -86, i64 160, i1 false)
  %98 = getelementptr inbounds %"class.sh::(anonymous namespace)::FindGLBaseInstanceTraverser", %"class.sh::(anonymous namespace)::FindGLBaseInstanceTraverser"* %11, i64 0, i32 0
  call void @_ZN2sh16TIntermTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TIntermTraverser"* nonnull %98, i1 zeroext true, i1 zeroext false, i1 zeroext false, %"class.sh::TSymbolTable"* null) #8
  %99 = getelementptr inbounds %"class.sh::(anonymous namespace)::FindGLBaseInstanceTraverser", %"class.sh::(anonymous namespace)::FindGLBaseInstanceTraverser"* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_127FindGLBaseInstanceTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %99, align 8
  %100 = getelementptr inbounds %"class.sh::(anonymous namespace)::FindGLBaseInstanceTraverser", %"class.sh::(anonymous namespace)::FindGLBaseInstanceTraverser"* %11, i64 0, i32 1
  store %"class.sh::TVariable"* null, %"class.sh::TVariable"** %100, align 8
  call void @_ZN2sh12TIntermBlock8traverseEPNS_16TIntermTraverserE(%"class.sh::TIntermBlock"* %1, %"class.sh::TIntermTraverser"* nonnull %98) #8
  %101 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %100, align 8
  %102 = icmp eq %"class.sh::TVariable"* %101, null
  br i1 %102, label %183, label %103

103:                                              ; preds = %95
  %104 = call %"class.sh::TVariable"* @_ZN2sh15BuiltInVariable18angle_BaseInstanceEv() #8
  %105 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %104, i64 0, i32 1
  %106 = load %"class.sh::TType"*, %"class.sh::TType"** %105, align 8
  %107 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %108 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %107, i64 32) #8
  %109 = bitcast i8* %108 to %"class.sh::TIntermSymbol"*
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %109, %"class.sh::TVariable"* %104) #8
  br i1 %4, label %110, label %167

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %8, i64 0, i32 2
  %112 = bitcast %"class.std::__1::basic_string.37"* %111 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %112, i64 0, i32 1, i32 0
  %114 = load i8, i8* %113, align 1
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %116, label %120

116:                                              ; preds = %110
  %117 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 18, i64* %117, align 8
  %118 = getelementptr inbounds %"class.std::__1::basic_string.37", %"class.std::__1::basic_string.37"* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i8*, i8** %118, align 8
  br label %122

120:                                              ; preds = %110
  store i8 18, i8* %113, align 1
  %121 = bitcast %"class.std::__1::basic_string.37"* %111 to i8*
  br label %122

122:                                              ; preds = %116, %120
  %123 = phi i8* [ %119, %116 ], [ %121, %120 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %123, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0), i64 18, i1 false) #8
  %124 = getelementptr inbounds i8, i8* %123, i64 18
  store i8 0, i8* %124, align 1
  %125 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %8, i64 0, i32 3
  %126 = bitcast %"class.std::__1::basic_string.37"* %125 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %126, i64 0, i32 1, i32 0
  %128 = load i8, i8* %127, align 1
  %129 = icmp slt i8 %128, 0
  br i1 %129, label %130, label %134

130:                                              ; preds = %122
  %131 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %8, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 18, i64* %131, align 8
  %132 = getelementptr inbounds %"class.std::__1::basic_string.37", %"class.std::__1::basic_string.37"* %125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load i8*, i8** %132, align 8
  br label %136

134:                                              ; preds = %122
  store i8 18, i8* %127, align 1
  %135 = bitcast %"class.std::__1::basic_string.37"* %125 to i8*
  br label %136

136:                                              ; preds = %130, %134
  %137 = phi i8* [ %133, %130 ], [ %135, %134 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %137, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0), i64 18, i1 false) #8
  %138 = getelementptr inbounds i8, i8* %137, i64 18
  store i8 0, i8* %138, align 1
  %139 = call i32 @_ZN2sh14GLVariableTypeERKNS_5TTypeE(%"class.sh::TType"* dereferenceable(184) %106) #8
  %140 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %8, i64 0, i32 0
  store i32 %139, i32* %140, align 8
  %141 = call i32 @_ZN2sh19GLVariablePrecisionERKNS_5TTypeE(%"class.sh::TType"* dereferenceable(184) %106) #8
  %142 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %8, i64 0, i32 1
  store i32 %141, i32* %142, align 4
  %143 = call zeroext i1 @_ZNK2sh12TSymbolTable16isStaticallyUsedERKNS_9TVariableE(%"class.sh::TSymbolTable"* %2, %"class.sh::TVariable"* nonnull dereferenceable(40) %101) #8
  %144 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %8, i64 0, i32 5
  %145 = zext i1 %143 to i8
  store i8 %145, i8* %144, align 8
  %146 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %8, i64 0, i32 6
  store i8 1, i8* %146, align 1
  %147 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %106, i64 0, i32 7, i32 5
  %148 = load i32, i32* %147, align 4
  %149 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %106, i64 0, i32 7, i32 6
  %150 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %8, i64 0, i32 13
  store i32 %148, i32* %150, align 4
  %151 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %106, i64 0, i32 7, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %8, i64 0, i32 11
  store i32 %152, i32* %153, align 4
  %154 = load i32, i32* %149, align 4
  %155 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %8, i64 0, i32 15
  store i32 %154, i32* %155, align 4
  %156 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %106, i64 0, i32 5
  %157 = bitcast %"struct.sh::TMemoryQualifier"* %156 to i40*
  %158 = load i40, i40* %157, align 2
  %159 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %8, i64 0, i32 16
  %160 = trunc i40 %158 to i8
  %161 = and i8 %160, 1
  store i8 %161, i8* %159, align 8
  %162 = load i40, i40* %157, align 2
  %163 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %8, i64 0, i32 17
  %164 = lshr i40 %162, 8
  %165 = trunc i40 %164 to i8
  %166 = and i8 %165, 1
  store i8 %166, i8* %163, align 1
  br label %167

167:                                              ; preds = %136, %103
  %168 = phi i1 [ true, %136 ], [ false, %103 ]
  call void @_ZN2sh21DeclareGlobalVariableEPNS_12TIntermBlockEPKNS_9TVariableE(%"class.sh::TIntermBlock"* %1, %"class.sh::TVariable"* %104) #8
  %169 = bitcast i8* %108 to %"class.sh::TIntermTyped"*
  %170 = call zeroext i1 @_ZN2sh24ReplaceVariableWithTypedEPNS_9TCompilerEPNS_12TIntermBlockEPKNS_9TVariableEPKNS_12TIntermTypedE(%"class.sh::TCompiler"* %0, %"class.sh::TIntermBlock"* %1, %"class.sh::TVariable"* nonnull %101, %"class.sh::TIntermTyped"* %169) #8
  br i1 %170, label %171, label %195

171:                                              ; preds = %167
  br i1 %168, label %172, label %183

172:                                              ; preds = %171
  %173 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %3, i64 0, i32 0, i32 1
  %174 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %173, align 8
  %175 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %176 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %175, align 8
  %177 = icmp eq %"struct.sh::ShaderVariable"* %174, %176
  br i1 %177, label %182, label %178

178:                                              ; preds = %172
  call void @_ZN2sh14ShaderVariableC1ERKS0_(%"struct.sh::ShaderVariable"* %174, %"struct.sh::ShaderVariable"* nonnull dereferenceable(208) %8) #8
  %179 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %174, i64 1
  %180 = ptrtoint %"struct.sh::ShaderVariable"* %179 to i64
  %181 = bitcast %"struct.sh::ShaderVariable"** %173 to i64*
  store i64 %180, i64* %181, align 8
  br label %183

182:                                              ; preds = %172
  call void @_ZNSt3__16vectorIN2sh14ShaderVariableENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.30"* %3, %"struct.sh::ShaderVariable"* nonnull dereferenceable(208) %8) #8
  br label %183

183:                                              ; preds = %182, %178, %95, %171
  br i1 %96, label %184, label %195

184:                                              ; preds = %183
  %185 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %3, i64 0, i32 0, i32 1
  %186 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %185, align 8
  %187 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %188 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %187, align 8
  %189 = icmp eq %"struct.sh::ShaderVariable"* %186, %188
  br i1 %189, label %194, label %190

190:                                              ; preds = %184
  call void @_ZN2sh14ShaderVariableC1ERKS0_(%"struct.sh::ShaderVariable"* %186, %"struct.sh::ShaderVariable"* nonnull dereferenceable(208) %7) #8
  %191 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %186, i64 1
  %192 = ptrtoint %"struct.sh::ShaderVariable"* %191 to i64
  %193 = bitcast %"struct.sh::ShaderVariable"** %185 to i64*
  store i64 %192, i64* %193, align 8
  br label %195

194:                                              ; preds = %184
  call void @_ZNSt3__16vectorIN2sh14ShaderVariableENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.30"* %3, %"struct.sh::ShaderVariable"* nonnull dereferenceable(208) %7) #8
  br label %195

195:                                              ; preds = %194, %190, %183, %167
  %196 = phi i1 [ false, %167 ], [ true, %183 ], [ true, %190 ], [ true, %194 ]
  call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* nonnull %98) #8
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %97) #8
  br label %197

197:                                              ; preds = %91, %195
  %198 = phi i1 [ %196, %195 ], [ false, %91 ]
  call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %21) #8
  br label %199

199:                                              ; preds = %14, %197
  %200 = phi i1 [ %198, %197 ], [ false, %14 ]
  call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %13) #8
  call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %12) #8
  ret i1 %200
}

declare zeroext i1 @_ZN2sh16TIntermTraverser10updateTreeEPNS_9TCompilerEPNS_11TIntermNodeE(%"class.sh::TIntermTraverser"*, %"class.sh::TCompiler"*, %"class.sh::TIntermNode"*) local_unnamed_addr #2

declare %"class.sh::TVariable"* @_ZN2sh15BuiltInVariable16angle_BaseVertexEv() local_unnamed_addr #2

declare %"class.sh::TVariable"* @_ZN2sh15BuiltInVariable18angle_BaseInstanceEv() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"*) unnamed_addr #3

declare void @_ZN2sh16TIntermTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TIntermTraverser"*, i1 zeroext, i1 zeroext, i1 zeroext, %"class.sh::TSymbolTable"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_121FindGLDrawIDTraverserD0Ev(%"class.sh::(anonymous namespace)::FindGLDrawIDTraverser"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.sh::(anonymous namespace)::FindGLDrawIDTraverser", %"class.sh::(anonymous namespace)::FindGLDrawIDTraverser"* %0, i64 0, i32 0
  tail call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_121FindGLDrawIDTraverser11visitSymbolEPNS_13TIntermSymbolE(%"class.sh::(anonymous namespace)::FindGLDrawIDTraverser"* nocapture, %"class.sh::TIntermSymbol"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %1, i64 0, i32 1
  %4 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %3, align 8
  %5 = tail call %"class.sh::TVariable"* @_ZN2sh15BuiltInVariable9gl_DrawIDEv() #8
  %6 = icmp eq %"class.sh::TVariable"* %4, %5
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = bitcast %"class.sh::TVariable"** %3 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.sh::(anonymous namespace)::FindGLDrawIDTraverser", %"class.sh::(anonymous namespace)::FindGLDrawIDTraverser"* %0, i64 0, i32 1
  %11 = bitcast %"class.sh::TVariable"** %10 to i64*
  store i64 %9, i64* %11, align 8
  br label %12

12:                                               ; preds = %7, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermConstantUnion"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwizzle"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBinary"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermUnary"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermTernary"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermIfElse"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwitch"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermCase"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionPrototype"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermFunctionDefinition"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermAggregate"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBlock"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermGlobalQualifierDeclaration"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermDeclaration"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermLoop"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBranch"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermPreprocessorDirective"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN2sh16TIntermTraverser14traverseBinaryEPNS_13TIntermBinaryE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBinary"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser13traverseUnaryEPNS_12TIntermUnaryE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermUnary"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser26traverseFunctionDefinitionEPNS_25TIntermFunctionDefinitionE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionDefinition"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser17traverseAggregateEPNS_16TIntermAggregateE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermAggregate"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser13traverseBlockEPNS_12TIntermBlockE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBlock"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser12traverseLoopEPNS_11TIntermLoopE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermLoop"*) unnamed_addr #2

declare %"class.sh::TVariable"* @_ZN2sh15BuiltInVariable9gl_DrawIDEv() local_unnamed_addr #2

declare %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() local_unnamed_addr #2

declare i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_134AddBaseVertexToGLVertexIDTraverserD0Ev(%"class.sh::(anonymous namespace)::AddBaseVertexToGLVertexIDTraverser"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.sh::(anonymous namespace)::AddBaseVertexToGLVertexIDTraverser", %"class.sh::(anonymous namespace)::AddBaseVertexToGLVertexIDTraverser"* %0, i64 0, i32 0
  tail call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_134AddBaseVertexToGLVertexIDTraverser11visitSymbolEPNS_13TIntermSymbolE(%"class.sh::(anonymous namespace)::AddBaseVertexToGLVertexIDTraverser"*, %"class.sh::TIntermSymbol"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %1, i64 0, i32 1
  %4 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %3, align 8
  %5 = tail call %"class.sh::TVariable"* @_ZN2sh15BuiltInVariable11gl_VertexIDEv() #8
  %6 = icmp eq %"class.sh::TVariable"* %4, %5
  br i1 %6, label %7, label %19

7:                                                ; preds = %2
  %8 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %9 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %8, i64 32) #8
  %10 = bitcast i8* %9 to %"class.sh::TIntermSymbol"*
  %11 = tail call %"class.sh::TVariable"* @_ZN2sh15BuiltInVariable13gl_BaseVertexEv() #8
  tail call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %10, %"class.sh::TVariable"* %11) #8
  %12 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %13 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %12, i64 240) #8
  %14 = bitcast i8* %13 to %"class.sh::TIntermBinary"*
  %15 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %1, i64 0, i32 0
  %16 = bitcast i8* %9 to %"class.sh::TIntermTyped"*
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %14, i8 zeroext 13, %"class.sh::TIntermTyped"* %15, %"class.sh::TIntermTyped"* %16) #8
  %17 = getelementptr inbounds %"class.sh::(anonymous namespace)::AddBaseVertexToGLVertexIDTraverser", %"class.sh::(anonymous namespace)::AddBaseVertexToGLVertexIDTraverser"* %0, i64 0, i32 0
  %18 = bitcast i8* %13 to %"class.sh::TIntermNode"*
  tail call void @_ZN2sh16TIntermTraverser16queueReplacementEPNS_11TIntermNodeENS0_12OriginalNodeE(%"class.sh::TIntermTraverser"* %17, %"class.sh::TIntermNode"* %18, i32 0) #8
  br label %19

19:                                               ; preds = %7, %2
  ret void
}

declare %"class.sh::TVariable"* @_ZN2sh15BuiltInVariable11gl_VertexIDEv() local_unnamed_addr #2

declare %"class.sh::TVariable"* @_ZN2sh15BuiltInVariable13gl_BaseVertexEv() local_unnamed_addr #2

declare void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"*, i8 zeroext, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser16queueReplacementEPNS_11TIntermNodeENS0_12OriginalNodeE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermNode"*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_125FindGLBaseVertexTraverserD0Ev(%"class.sh::(anonymous namespace)::FindGLBaseVertexTraverser"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.sh::(anonymous namespace)::FindGLBaseVertexTraverser", %"class.sh::(anonymous namespace)::FindGLBaseVertexTraverser"* %0, i64 0, i32 0
  tail call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_125FindGLBaseVertexTraverser11visitSymbolEPNS_13TIntermSymbolE(%"class.sh::(anonymous namespace)::FindGLBaseVertexTraverser"* nocapture, %"class.sh::TIntermSymbol"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %1, i64 0, i32 1
  %4 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %3, align 8
  %5 = tail call %"class.sh::TVariable"* @_ZN2sh15BuiltInVariable13gl_BaseVertexEv() #8
  %6 = icmp eq %"class.sh::TVariable"* %4, %5
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = bitcast %"class.sh::TVariable"** %3 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.sh::(anonymous namespace)::FindGLBaseVertexTraverser", %"class.sh::(anonymous namespace)::FindGLBaseVertexTraverser"* %0, i64 0, i32 1
  %11 = bitcast %"class.sh::TVariable"** %10 to i64*
  store i64 %9, i64* %11, align 8
  br label %12

12:                                               ; preds = %7, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_127FindGLBaseInstanceTraverserD0Ev(%"class.sh::(anonymous namespace)::FindGLBaseInstanceTraverser"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.sh::(anonymous namespace)::FindGLBaseInstanceTraverser", %"class.sh::(anonymous namespace)::FindGLBaseInstanceTraverser"* %0, i64 0, i32 0
  tail call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_127FindGLBaseInstanceTraverser11visitSymbolEPNS_13TIntermSymbolE(%"class.sh::(anonymous namespace)::FindGLBaseInstanceTraverser"* nocapture, %"class.sh::TIntermSymbol"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %1, i64 0, i32 1
  %4 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %3, align 8
  %5 = tail call %"class.sh::TVariable"* @_ZN2sh15BuiltInVariable15gl_BaseInstanceEv() #8
  %6 = icmp eq %"class.sh::TVariable"* %4, %5
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = bitcast %"class.sh::TVariable"** %3 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.sh::(anonymous namespace)::FindGLBaseInstanceTraverser", %"class.sh::(anonymous namespace)::FindGLBaseInstanceTraverser"* %0, i64 0, i32 1
  %11 = bitcast %"class.sh::TVariable"** %10 to i64*
  store i64 %9, i64* %11, align 8
  br label %12

12:                                               ; preds = %7, %2
  ret void
}

declare %"class.sh::TVariable"* @_ZN2sh15BuiltInVariable15gl_BaseInstanceEv() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2sh14ShaderVariableENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.30"*, %"struct.sh::ShaderVariable"* dereferenceable(208)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.sh::ShaderVariable"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.30"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 208
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 88686269585142075
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.30"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #9
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.sh::ShaderVariable"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 208
  %20 = icmp ult i64 %19, 44343134792571037
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 88686269585142075, %14 ]
  %28 = mul i64 %27, 208
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"struct.sh::ShaderVariable"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.sh::ShaderVariable"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %33, i64 %32
  %36 = ptrtoint %"struct.sh::ShaderVariable"* %35 to i64
  tail call void @_ZN2sh14ShaderVariableC1ERKS0_(%"struct.sh::ShaderVariable"* %34, %"struct.sh::ShaderVariable"* dereferenceable(208) %1) #8
  %37 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %34, i64 1
  %38 = ptrtoint %"struct.sh::ShaderVariable"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %39, align 8
  %41 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %3, align 8
  %42 = icmp eq %"struct.sh::ShaderVariable"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.sh::ShaderVariable"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.sh::ShaderVariable"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.sh::ShaderVariable"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %47, i64 -1
  tail call void @_ZN2sh14ShaderVariableC1ERKS0_(%"struct.sh::ShaderVariable"* %48, %"struct.sh::ShaderVariable"* dereferenceable(208) %49) #8
  %50 = icmp eq %"struct.sh::ShaderVariable"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.sh::ShaderVariable"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.sh::ShaderVariable"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.sh::ShaderVariable"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.sh::ShaderVariable"*
  %60 = icmp eq %"struct.sh::ShaderVariable"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.sh::ShaderVariable"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %62, i64 -1
  tail call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* %63) #8
  %64 = icmp eq %"struct.sh::ShaderVariable"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #10
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN2sh14ShaderVariableC1ERKS0_(%"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"* dereferenceable(208)) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
