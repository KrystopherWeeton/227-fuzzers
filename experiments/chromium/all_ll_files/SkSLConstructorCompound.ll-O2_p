; ModuleID = '../../third_party/skia/src/sksl/ir/SkSLConstructorCompound.cpp'
source_filename = "../../third_party/skia/src/sksl/ir/SkSLConstructorCompound.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.SkSL::Expression" = type { %"class.SkSL::IRNode", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.SkSL::Type"* }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.23", %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.39", [4 x i8] }>
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25", %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i64 }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { float }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.42"* }
%"class.std::__1::vector.42" = type opaque
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.8", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.10" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.SkSL::Type::Field"* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [16 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Expression"* }
%"class.SkSL::ConstructorCompound" = type { %"class.SkSL::MultiArgumentConstructor" }
%"class.SkSL::MultiArgumentConstructor" = type { %"class.SkSL::AnyConstructor", %class.SkSTArray }
%"class.SkSL::AnyConstructor" = type { %"class.SkSL::Expression", %"class.std::__1::unique_ptr" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_ = comdat any

$_ZN4SkSL19ConstructorCompoundC2EiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS5_14default_deleteIS7_EEEELb0EE = comdat any

$_ZN4SkSL19ConstructorCompoundD0Ev = comdat any

$_ZNK4SkSL14AnyConstructor11descriptionEv = comdat any

$_ZNK4SkSL10Expression4typeEv = comdat any

$_ZNK4SkSL14AnyConstructor21isCompileTimeConstantEv = comdat any

$_ZNK4SkSL14AnyConstructor19isConstantOrUniformEv = comdat any

$_ZNK4SkSL14AnyConstructor11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE = comdat any

$_ZNK4SkSL19ConstructorCompound5cloneEv = comdat any

$_ZN4SkSL24MultiArgumentConstructor12argumentSpanEv = comdat any

$_ZNK4SkSL24MultiArgumentConstructor12argumentSpanEv = comdat any

$_ZN4SkSL24MultiArgumentConstructorD2Ev = comdat any

$_ZN4SkSL24MultiArgumentConstructorD0Ev = comdat any

$_ZNK4SkSL24MultiArgumentConstructor14cloneArgumentsEv = comdat any

$_ZTVN4SkSL19ConstructorCompoundE = comdat any

$_ZTVN4SkSL24MultiArgumentConstructorE = comdat any

@_ZTVN4SkSL19ConstructorCompoundE = linkonce_odr hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::MultiArgumentConstructor"*)* @_ZN4SkSL24MultiArgumentConstructorD2Ev to i8*), i8* bitcast (void (%"class.SkSL::ConstructorCompound"*)* @_ZN4SkSL19ConstructorCompoundD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::AnyConstructor"*)* @_ZNK4SkSL14AnyConstructor11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::AnyConstructor"*)* @_ZNK4SkSL14AnyConstructor21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::AnyConstructor"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL14AnyConstructor15compareConstantERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::AnyConstructor"*)* @_ZNK4SkSL14AnyConstructor19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::AnyConstructor"*, i32)* @_ZNK4SkSL14AnyConstructor11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)* @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::AnyConstructor"*, i32)* @_ZNK4SkSL14AnyConstructor24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::ConstructorCompound"*)* @_ZNK4SkSL19ConstructorCompound5cloneEv to i8*), i8* bitcast ({ %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::MultiArgumentConstructor"*)* @_ZN4SkSL24MultiArgumentConstructor12argumentSpanEv to i8*), i8* bitcast ({ %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::MultiArgumentConstructor"*)* @_ZNK4SkSL24MultiArgumentConstructor12argumentSpanEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL24MultiArgumentConstructorE = linkonce_odr hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::MultiArgumentConstructor"*)* @_ZN4SkSL24MultiArgumentConstructorD2Ev to i8*), i8* bitcast (void (%"class.SkSL::MultiArgumentConstructor"*)* @_ZN4SkSL24MultiArgumentConstructorD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::AnyConstructor"*)* @_ZNK4SkSL14AnyConstructor11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::AnyConstructor"*)* @_ZNK4SkSL14AnyConstructor21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::AnyConstructor"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL14AnyConstructor15compareConstantERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::AnyConstructor"*)* @_ZNK4SkSL14AnyConstructor19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::AnyConstructor"*, i32)* @_ZNK4SkSL14AnyConstructor11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)* @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::AnyConstructor"*, i32)* @_ZNK4SkSL14AnyConstructor24getConstantSubexpressionEi to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::MultiArgumentConstructor"*)* @_ZN4SkSL24MultiArgumentConstructor12argumentSpanEv to i8*), i8* bitcast ({ %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::MultiArgumentConstructor"*)* @_ZNK4SkSL24MultiArgumentConstructor12argumentSpanEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL14AnyConstructorE = external unnamed_addr constant { [15 x i8*] }, align 8
@.str = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c")\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL19ConstructorCompound4MakeERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* nocapture readonly dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %class.SkSTArray*) local_unnamed_addr #0 align 2 {
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %"struct.SkSL::StringFragment"*
  %7 = alloca %class.SkSTArray, align 8
  %8 = alloca %class.SkSTArray, align 8
  %9 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 8
  br i1 %11, label %12, label %43

12:                                               ; preds = %4
  %13 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 24
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, 4294967294
  %17 = icmp eq i64 %16, 2
  br i1 %17, label %18, label %43

18:                                               ; preds = %12
  %19 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 16
  %20 = bitcast i8* %19 to %"class.std::__1::unique_ptr"**
  %21 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %22, align 8
  %24 = bitcast %"class.SkSL::Expression"* %23 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %25 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %25, i64 3
  %27 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %26, align 8
  %28 = tail call dereferenceable(184) %"class.SkSL::Type"* %27(%"class.SkSL::Expression"* %23) #8
  %29 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #8
  %30 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %28, i64 0, i32 0, i32 1, i32 0
  %31 = bitcast i8** %30 to <2 x i64>*
  %32 = load <2 x i64>, <2 x i64>* %31, align 8
  store <2 x i64> %32, <2 x i64>* %5, align 16
  %33 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 0, i32 1, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 0, i32 1, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %6, i8* %34, i64 %36) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #8
  br i1 %37, label %38, label %43

38:                                               ; preds = %18
  %39 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %20, align 8
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %39 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %40, align 8
  br label %314

43:                                               ; preds = %18, %12, %4
  %44 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 4
  %45 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %44, align 8
  %46 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %45, i64 0, i32 1, i32 10
  %47 = load i8, i8* %46, align 4, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %272, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 16
  %51 = bitcast i8* %50 to %class.SkTArray*
  %52 = bitcast i8* %50 to %"class.std::__1::unique_ptr"**
  %53 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %52, align 8
  %54 = icmp eq %"class.std::__1::unique_ptr"* %53, null
  br i1 %54, label %71, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 24
  %57 = bitcast i8* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = lshr i64 %58, 1
  %60 = and i64 %59, 2147483647
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %71, label %62

62:                                               ; preds = %55
  %63 = shl nuw nsw i64 %60, 3
  %64 = add nsw i64 %63, -8
  %65 = lshr exact i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 1
  %68 = icmp eq i64 %64, 0
  br i1 %68, label %74, label %69

69:                                               ; preds = %62
  %70 = sub nuw nsw i64 %66, %67
  br label %103

71:                                               ; preds = %55, %49
  %72 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 24
  %73 = bitcast i8* %72 to i64*
  br label %243

74:                                               ; preds = %324, %62
  %75 = phi i64 [ undef, %62 ], [ %326, %324 ]
  %76 = phi i64 [ 0, %62 ], [ %326, %324 ]
  %77 = phi %"class.std::__1::unique_ptr"* [ %53, %62 ], [ %327, %324 ]
  %78 = icmp eq i64 %67, 0
  br i1 %78, label %95, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %80, align 8
  %82 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %81, i64 0, i32 0, i32 2
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 34
  br i1 %84, label %85, label %92

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %81, i64 1, i32 0, i32 1
  %87 = getelementptr inbounds i32, i32* %86, i64 6
  %88 = bitcast i32* %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = lshr i64 %89, 1
  %91 = and i64 %90, 2147483647
  br label %92

92:                                               ; preds = %79, %85
  %93 = phi i64 [ %91, %85 ], [ 1, %79 ]
  %94 = add i64 %93, %76
  br label %95

95:                                               ; preds = %74, %92
  %96 = phi i64 [ %75, %74 ], [ %94, %92 ]
  %97 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 24
  %98 = bitcast i8* %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = lshr i64 %99, 1
  %101 = and i64 %100, 2147483647
  %102 = icmp ugt i64 %96, %101
  br i1 %102, label %127, label %243

103:                                              ; preds = %324, %69
  %104 = phi i64 [ 0, %69 ], [ %326, %324 ]
  %105 = phi %"class.std::__1::unique_ptr"* [ %53, %69 ], [ %327, %324 ]
  %106 = phi i64 [ %70, %69 ], [ %328, %324 ]
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %105, i64 0, i32 0, i32 0, i32 0
  %108 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %107, align 8
  %109 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %108, i64 0, i32 0, i32 2
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %110, 34
  br i1 %111, label %112, label %119

112:                                              ; preds = %103
  %113 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %108, i64 1, i32 0, i32 1
  %114 = getelementptr inbounds i32, i32* %113, i64 6
  %115 = bitcast i32* %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = lshr i64 %116, 1
  %118 = and i64 %117, 2147483647
  br label %119

119:                                              ; preds = %103, %112
  %120 = phi i64 [ %118, %112 ], [ 1, %103 ]
  %121 = add i64 %120, %104
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %105, i64 1, i32 0, i32 0, i32 0
  %123 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %122, align 8
  %124 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %123, i64 0, i32 0, i32 2
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 34
  br i1 %126, label %317, label %324

127:                                              ; preds = %95
  %128 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %8, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %128) #8
  %129 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %8, i64 0, i32 0, i32 0, i64 16
  %130 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %8, i64 0, i32 0, i32 0, i64 24
  %131 = bitcast i8* %130 to i64*
  %132 = bitcast i8* %129 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %128, i8 -86, i64 16, i1 false)
  store i8* %128, i8** %132, align 8
  store i64 17179869184, i64* %131, align 8
  %133 = bitcast i8* %129 to %class.SkTArray*
  %134 = trunc i64 %96 to i32
  %135 = icmp sgt i32 %134, 0
  br i1 %135, label %136, label %143

136:                                              ; preds = %127
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %133, i32 %134, i32 0) #8
  %137 = load i64, i64* %131, align 8
  %138 = shl i64 %137, 32
  %139 = and i64 %138, 4294967296
  %140 = and i64 %137, -4294967297
  %141 = or i64 %139, %140
  store i64 %141, i64* %131, align 8
  %142 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %52, align 8
  br label %144

143:                                              ; preds = %127
  store i64 17179869184, i64* %131, align 8
  br label %144

144:                                              ; preds = %136, %143
  %145 = phi %"class.std::__1::unique_ptr"* [ %142, %136 ], [ %53, %143 ]
  %146 = icmp eq %"class.std::__1::unique_ptr"* %145, null
  br i1 %146, label %152, label %147

147:                                              ; preds = %144
  %148 = load i64, i64* %98, align 8
  %149 = lshr i64 %148, 1
  %150 = and i64 %149, 2147483647
  %151 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %145, i64 %150
  br label %152

152:                                              ; preds = %144, %147
  %153 = phi %"class.std::__1::unique_ptr"* [ %151, %147 ], [ null, %144 ]
  %154 = icmp eq %"class.std::__1::unique_ptr"* %145, %153
  br i1 %154, label %157, label %155

155:                                              ; preds = %152
  %156 = bitcast i8* %129 to %"class.std::__1::unique_ptr"**
  br label %189

157:                                              ; preds = %240, %152
  %158 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %51, %class.SkTArray* dereferenceable(16) %133) #8
  %159 = load i64, i64* %131, align 8
  %160 = and i64 %159, 4294967294
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %164, label %162

162:                                              ; preds = %157
  %163 = bitcast i8* %129 to %"class.std::__1::unique_ptr"**
  br label %168

164:                                              ; preds = %179, %157
  %165 = phi i64 [ %159, %157 ], [ %181, %179 ]
  %166 = and i64 %165, 1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %187, label %185

168:                                              ; preds = %179, %162
  %169 = phi i64 [ 0, %162 ], [ %180, %179 ]
  %170 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %163, align 8
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %170, i64 %169, i32 0, i32 0, i32 0
  %172 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %171, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %171, align 8
  %173 = icmp eq %"class.SkSL::Expression"* %172, null
  br i1 %173, label %179, label %174

174:                                              ; preds = %168
  %175 = bitcast %"class.SkSL::Expression"* %172 to void (%"class.SkSL::Expression"*)***
  %176 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %175, align 8
  %177 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %176, i64 1
  %178 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %177, align 8
  call void %178(%"class.SkSL::Expression"* nonnull %172) #8
  br label %179

179:                                              ; preds = %174, %168
  %180 = add nuw nsw i64 %169, 1
  %181 = load i64, i64* %131, align 8
  %182 = lshr i64 %181, 1
  %183 = and i64 %182, 2147483647
  %184 = icmp ult i64 %180, %183
  br i1 %184, label %168, label %164

185:                                              ; preds = %164
  %186 = load i8*, i8** %132, align 8
  call void @_Z7sk_freePv(i8* %186) #8
  br label %187

187:                                              ; preds = %164, %185
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %128) #8
  %188 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %52, align 8
  br label %243

189:                                              ; preds = %155, %240
  %190 = phi %"class.std::__1::unique_ptr"* [ %145, %155 ], [ %241, %240 ]
  %191 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %190, i64 0, i32 0, i32 0, i32 0
  %192 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %191, align 8
  %193 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %192, i64 0, i32 0, i32 2
  %194 = load i32, i32* %193, align 4
  %195 = icmp eq i32 %194, 34
  br i1 %195, label %209, label %196

196:                                              ; preds = %189
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %133, i32 1, i32 1) #8
  %197 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %156, align 8
  %198 = load i64, i64* %131, align 8
  %199 = lshr i64 %198, 1
  %200 = and i64 %199, 2147483647
  %201 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %197, i64 %200
  %202 = add i64 %198, 2
  %203 = and i64 %202, 4294967294
  %204 = and i64 %198, -4294967295
  %205 = or i64 %203, %204
  store i64 %205, i64* %131, align 8
  %206 = bitcast %"class.std::__1::unique_ptr"* %190 to i64*
  %207 = load i64, i64* %206, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %191, align 8
  %208 = bitcast %"class.std::__1::unique_ptr"* %201 to i64*
  store i64 %207, i64* %208, align 8
  br label %240

209:                                              ; preds = %189
  %210 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %192, i64 1, i32 0, i32 1
  %211 = getelementptr inbounds i32, i32* %210, i64 4
  %212 = bitcast i32* %211 to %"class.std::__1::unique_ptr"**
  %213 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %212, align 8
  %214 = icmp eq %"class.std::__1::unique_ptr"* %213, null
  br i1 %214, label %240, label %215

215:                                              ; preds = %209
  %216 = getelementptr inbounds i32, i32* %210, i64 6
  %217 = bitcast i32* %216 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = lshr i64 %218, 1
  %220 = and i64 %219, 2147483647
  %221 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %213, i64 %220
  %222 = icmp eq i64 %220, 0
  br i1 %222, label %240, label %223

223:                                              ; preds = %215, %223
  %224 = phi %"class.std::__1::unique_ptr"* [ %238, %223 ], [ %213, %215 ]
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %133, i32 1, i32 1) #8
  %225 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %156, align 8
  %226 = load i64, i64* %131, align 8
  %227 = lshr i64 %226, 1
  %228 = and i64 %227, 2147483647
  %229 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %225, i64 %228
  %230 = add i64 %226, 2
  %231 = and i64 %230, 4294967294
  %232 = and i64 %226, -4294967295
  %233 = or i64 %231, %232
  store i64 %233, i64* %131, align 8
  %234 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %224, i64 0, i32 0, i32 0, i32 0
  %235 = bitcast %"class.std::__1::unique_ptr"* %224 to i64*
  %236 = load i64, i64* %235, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %234, align 8
  %237 = bitcast %"class.std::__1::unique_ptr"* %229 to i64*
  store i64 %236, i64* %237, align 8
  %238 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %224, i64 1
  %239 = icmp eq %"class.std::__1::unique_ptr"* %238, %221
  br i1 %239, label %240, label %223

240:                                              ; preds = %223, %209, %215, %196
  %241 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %190, i64 1
  %242 = icmp eq %"class.std::__1::unique_ptr"* %241, %153
  br i1 %242, label %157, label %189

243:                                              ; preds = %71, %187, %95
  %244 = phi i64* [ %98, %187 ], [ %98, %95 ], [ %73, %71 ]
  %245 = phi %"class.std::__1::unique_ptr"* [ %188, %187 ], [ %53, %95 ], [ %53, %71 ]
  %246 = icmp eq %"class.std::__1::unique_ptr"* %245, null
  br i1 %246, label %252, label %247

247:                                              ; preds = %243
  %248 = load i64, i64* %244, align 8
  %249 = lshr i64 %248, 1
  %250 = and i64 %249, 2147483647
  %251 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %245, i64 %250
  br label %252

252:                                              ; preds = %243, %247
  %253 = phi %"class.std::__1::unique_ptr"* [ %251, %247 ], [ null, %243 ]
  %254 = icmp eq %"class.std::__1::unique_ptr"* %245, %253
  br i1 %254, label %272, label %255

255:                                              ; preds = %252, %269
  %256 = phi %"class.std::__1::unique_ptr"* [ %270, %269 ], [ %245, %252 ]
  %257 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %256, i64 0, i32 0, i32 0, i32 0
  %258 = bitcast %"class.std::__1::unique_ptr"* %256 to i64*
  %259 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %257, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %257, align 8
  %260 = call %"class.SkSL::Expression"* @_ZN4SkSL14ConstantFolder28MakeConstantValueForVariableENSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE(%"class.SkSL::Expression"* %259) #8
  %261 = ptrtoint %"class.SkSL::Expression"* %260 to i64
  %262 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %257, align 8
  store i64 %261, i64* %258, align 8
  %263 = icmp eq %"class.SkSL::Expression"* %262, null
  br i1 %263, label %269, label %264

264:                                              ; preds = %255
  %265 = bitcast %"class.SkSL::Expression"* %262 to void (%"class.SkSL::Expression"*)***
  %266 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %265, align 8
  %267 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %266, i64 1
  %268 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %267, align 8
  call void %268(%"class.SkSL::Expression"* nonnull %262) #8
  br label %269

269:                                              ; preds = %264, %255
  %270 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %256, i64 1
  %271 = icmp eq %"class.std::__1::unique_ptr"* %270, %253
  br i1 %271, label %272, label %255

272:                                              ; preds = %269, %43, %252
  %273 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %7, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %273)
  %274 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 64) #8
  %275 = bitcast i8* %274 to %"class.SkSL::ConstructorCompound"*
  %276 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %7, i64 0, i32 0, i32 0, i64 16
  %277 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %7, i64 0, i32 0, i32 0, i64 24
  %278 = bitcast i8* %277 to i64*
  %279 = bitcast i8* %276 to i8**
  store i8* %273, i8** %279, align 8
  store i64 17179869184, i64* %278, align 8
  %280 = bitcast i8* %276 to %class.SkTArray*
  %281 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 16
  %282 = bitcast i8* %281 to %class.SkTArray*
  %283 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %280, %class.SkTArray* dereferenceable(16) %282) #8
  call void @_ZN4SkSL19ConstructorCompoundC2EiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS5_14default_deleteIS7_EEEELb0EE(%"class.SkSL::ConstructorCompound"* %275, i32 %1, %"class.SkSL::Type"* dereferenceable(184) %2, %class.SkSTArray* nonnull %7) #8
  %284 = load i64, i64* %278, align 8
  %285 = and i64 %284, 4294967294
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %289, label %287

287:                                              ; preds = %272
  %288 = bitcast i8* %276 to %"class.std::__1::unique_ptr"**
  br label %293

289:                                              ; preds = %304, %272
  %290 = phi i64 [ %284, %272 ], [ %306, %304 ]
  %291 = and i64 %290, 1
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %312, label %310

293:                                              ; preds = %304, %287
  %294 = phi i64 [ 0, %287 ], [ %305, %304 ]
  %295 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %288, align 8
  %296 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %295, i64 %294, i32 0, i32 0, i32 0
  %297 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %296, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %296, align 8
  %298 = icmp eq %"class.SkSL::Expression"* %297, null
  br i1 %298, label %304, label %299

299:                                              ; preds = %293
  %300 = bitcast %"class.SkSL::Expression"* %297 to void (%"class.SkSL::Expression"*)***
  %301 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %300, align 8
  %302 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %301, i64 1
  %303 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %302, align 8
  call void %303(%"class.SkSL::Expression"* nonnull %297) #8
  br label %304

304:                                              ; preds = %299, %293
  %305 = add nuw nsw i64 %294, 1
  %306 = load i64, i64* %278, align 8
  %307 = lshr i64 %306, 1
  %308 = and i64 %307, 2147483647
  %309 = icmp ult i64 %305, %308
  br i1 %309, label %293, label %289

310:                                              ; preds = %289
  %311 = load i8*, i8** %279, align 8
  call void @_Z7sk_freePv(i8* %311) #8
  br label %312

312:                                              ; preds = %310, %289
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %273)
  %313 = ptrtoint i8* %274 to i64
  br label %314

314:                                              ; preds = %312, %38
  %315 = phi i64 [ %42, %38 ], [ %313, %312 ]
  %316 = inttoptr i64 %315 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %316

317:                                              ; preds = %119
  %318 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %123, i64 1, i32 0, i32 1
  %319 = getelementptr inbounds i32, i32* %318, i64 6
  %320 = bitcast i32* %319 to i64*
  %321 = load i64, i64* %320, align 8
  %322 = lshr i64 %321, 1
  %323 = and i64 %322, 2147483647
  br label %324

324:                                              ; preds = %317, %119
  %325 = phi i64 [ %323, %317 ], [ 1, %119 ]
  %326 = add i64 %325, %121
  %327 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %105, i64 2
  %328 = add i64 %106, -2
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %74, label %103
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.SkSL::Expression"* @_ZN4SkSL14ConstantFolder28MakeConstantValueForVariableENSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE(%"class.SkSL::Expression"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %87

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %87, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #8
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %69, %48
  %51 = phi i64 [ 0, %48 ], [ %70, %69 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %49, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %54, i64 %51
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %49, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 %51, i32 0, i32 0, i32 0
  %62 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %61, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %61, align 8
  %63 = icmp eq %"class.SkSL::Expression"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %50
  %65 = bitcast %"class.SkSL::Expression"* %62 to void (%"class.SkSL::Expression"*)***
  %66 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %66, i64 1
  %68 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %67, align 8
  tail call void %68(%"class.SkSL::Expression"* nonnull %62) #8
  br label %69

69:                                               ; preds = %64, %50
  %70 = add nuw nsw i64 %51, 1
  %71 = load i64, i64* %4, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = icmp ult i64 %70, %73
  br i1 %74, label %50, label %75

75:                                               ; preds = %69, %35
  %76 = phi i64 [ %45, %35 ], [ %71, %69 ]
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  %79 = bitcast %class.SkTArray* %0 to i8**
  br i1 %78, label %83, label %80

80:                                               ; preds = %75
  %81 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %81) #8
  %82 = load i64, i64* %4, align 8
  br label %83

83:                                               ; preds = %75, %80
  %84 = phi i64 [ %82, %80 ], [ %76, %75 ]
  store i8* %44, i8** %79, align 8
  %85 = and i64 %84, -4294967298
  %86 = or i64 %85, 1
  store i64 %86, i64* %4, align 8
  br label %87

87:                                               ; preds = %83, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray*, %class.SkTArray* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %class.SkTArray* %0, %1
  br i1 %3, label %76, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %59

11:                                               ; preds = %70, %4
  %12 = phi i64 [ %6, %4 ], [ %72, %70 ]
  %13 = and i64 %12, -4294967295
  store i64 %13, i64* %5, align 8
  %14 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 1
  %17 = trunc i64 %16 to i32
  %18 = and i32 %17, 2147483647
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %0, i32 %18, i32 0)
  %19 = load i64, i64* %14, align 8
  %20 = and i64 %19, 4294967294
  %21 = load i64, i64* %5, align 8
  %22 = and i64 %21, -4294967295
  %23 = or i64 %22, %20
  store i64 %23, i64* %5, align 8
  %24 = bitcast %class.SkTArray* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = load i64, i64* %14, align 8
  %27 = and i64 %26, 4294967294
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %11
  %30 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 0
  br label %31

31:                                               ; preds = %50, %29
  %32 = phi i64 [ 0, %29 ], [ %51, %50 ]
  %33 = shl nuw nsw i64 %32, 3
  %34 = getelementptr inbounds i8, i8* %25, i64 %33
  %35 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %30, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %35, i64 %32
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::unique_ptr"* %36 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %37, align 8
  %40 = bitcast i8* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %30, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 %32, i32 0, i32 0, i32 0
  %43 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %42, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %42, align 8
  %44 = icmp eq %"class.SkSL::Expression"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %31
  %46 = bitcast %"class.SkSL::Expression"* %43 to void (%"class.SkSL::Expression"*)***
  %47 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %47, i64 1
  %49 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %48, align 8
  tail call void %49(%"class.SkSL::Expression"* nonnull %43) #8
  br label %50

50:                                               ; preds = %45, %31
  %51 = add nuw nsw i64 %32, 1
  %52 = load i64, i64* %14, align 8
  %53 = lshr i64 %52, 1
  %54 = and i64 %53, 2147483647
  %55 = icmp ult i64 %51, %54
  br i1 %55, label %31, label %56

56:                                               ; preds = %50, %11
  %57 = phi i64 [ %26, %11 ], [ %52, %50 ]
  %58 = and i64 %57, -4294967295
  store i64 %58, i64* %14, align 8
  br label %76

59:                                               ; preds = %9, %70
  %60 = phi i64 [ 0, %9 ], [ %71, %70 ]
  %61 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 %60, i32 0, i32 0, i32 0
  %63 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %62, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %62, align 8
  %64 = icmp eq %"class.SkSL::Expression"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.SkSL::Expression"* %63 to void (%"class.SkSL::Expression"*)***
  %67 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %67, i64 1
  %69 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %68, align 8
  tail call void %69(%"class.SkSL::Expression"* nonnull %63) #8
  br label %70

70:                                               ; preds = %59, %65
  %71 = add nuw nsw i64 %60, 1
  %72 = load i64, i64* %5, align 8
  %73 = lshr i64 %72, 1
  %74 = and i64 %73, 2147483647
  %75 = icmp ult i64 %71, %74
  br i1 %75, label %59, label %11

76:                                               ; preds = %2, %56
  ret %class.SkTArray* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL19ConstructorCompoundC2EiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS5_14default_deleteIS7_EEEELb0EE(%"class.SkSL::ConstructorCompound"*, i32, %"class.SkSL::Type"* dereferenceable(184), %class.SkSTArray*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %class.SkSTArray, align 8
  %6 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 16
  %7 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 0
  %8 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 24
  %9 = bitcast i8* %8 to i64*
  %10 = bitcast i8* %6 to i8**
  store i8* %7, i8** %10, align 8
  store i64 17179869184, i64* %9, align 8
  %11 = bitcast i8* %6 to %class.SkTArray*
  %12 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 16
  %13 = bitcast i8* %12 to %class.SkTArray*
  %14 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %11, %class.SkTArray* dereferenceable(16) %13) #8
  %15 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 %1, i32* %16, align 8
  %17 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i32 34, i32* %17, align 4
  %18 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store %"class.SkSL::Type"* %2, %"class.SkSL::Type"** %18, align 8
  %19 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::unique_ptr"* %19 to i64*
  store i64 0, i64* %20, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4SkSL24MultiArgumentConstructorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %21 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 16
  %22 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %23 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 24
  %24 = bitcast i8* %23 to i64*
  %25 = bitcast i8* %21 to i8**
  store i8* %22, i8** %25, align 8
  store i64 17179869184, i64* %24, align 8
  %26 = bitcast i8* %21 to %class.SkTArray*
  %27 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %26, %class.SkTArray* dereferenceable(16) %11) #8
  %28 = load i64, i64* %9, align 8
  %29 = and i64 %28, 4294967294
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %4
  %32 = bitcast i8* %6 to %"class.std::__1::unique_ptr"**
  br label %37

33:                                               ; preds = %48, %4
  %34 = phi i64 [ %28, %4 ], [ %50, %48 ]
  %35 = and i64 %34, 1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %56, label %54

37:                                               ; preds = %48, %31
  %38 = phi i64 [ 0, %31 ], [ %49, %48 ]
  %39 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %32, align 8
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %39, i64 %38, i32 0, i32 0, i32 0
  %41 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %40, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %40, align 8
  %42 = icmp eq %"class.SkSL::Expression"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.SkSL::Expression"* %41 to void (%"class.SkSL::Expression"*)***
  %45 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %45, i64 1
  %47 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %46, align 8
  call void %47(%"class.SkSL::Expression"* nonnull %41) #8
  br label %48

48:                                               ; preds = %43, %37
  %49 = add nuw nsw i64 %38, 1
  %50 = load i64, i64* %9, align 8
  %51 = lshr i64 %50, 1
  %52 = and i64 %51, 2147483647
  %53 = icmp ult i64 %49, %52
  br i1 %53, label %37, label %33

54:                                               ; preds = %33
  %55 = load i8*, i8** %10, align 8
  call void @_Z7sk_freePv(i8* %55) #8
  br label %56

56:                                               ; preds = %33, %54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4SkSL19ConstructorCompoundE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  ret void
}

declare i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL19ConstructorCompoundD0Ev(%"class.SkSL::ConstructorCompound"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4SkSL24MultiArgumentConstructorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 16
  %4 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 24
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %"class.std::__1::unique_ptr"**
  br label %15

11:                                               ; preds = %26, %1
  %12 = phi i64 [ %6, %1 ], [ %28, %26 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %35, label %32

15:                                               ; preds = %26, %9
  %16 = phi i64 [ 0, %9 ], [ %27, %26 ]
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 %16, i32 0, i32 0, i32 0
  %19 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %18, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %18, align 8
  %20 = icmp eq %"class.SkSL::Expression"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.SkSL::Expression"* %19 to void (%"class.SkSL::Expression"*)***
  %23 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %23, i64 1
  %25 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %24, align 8
  tail call void %25(%"class.SkSL::Expression"* nonnull %19) #8
  br label %26

26:                                               ; preds = %21, %15
  %27 = add nuw nsw i64 %16, 1
  %28 = load i64, i64* %5, align 8
  %29 = lshr i64 %28, 1
  %30 = and i64 %29, 2147483647
  %31 = icmp ult i64 %27, %30
  br i1 %31, label %15, label %11

32:                                               ; preds = %11
  %33 = bitcast i8* %3 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #8
  br label %35

35:                                               ; preds = %32, %11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4SkSL14AnyConstructorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %36 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %36, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %36, align 8
  %38 = icmp eq %"class.SkSL::Expression"* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %35
  %40 = bitcast %"class.SkSL::Expression"* %37 to void (%"class.SkSL::Expression"*)***
  %41 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %41, i64 1
  %43 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %42, align 8
  tail call void %43(%"class.SkSL::Expression"* nonnull %37) #8
  br label %44

44:                                               ; preds = %35, %39
  %45 = bitcast %"class.SkSL::ConstructorCompound"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %45) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL14AnyConstructor11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::AnyConstructor"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = bitcast %"class.SkSL::String"* %3 to i8*
  %6 = bitcast %"class.SkSL::String"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8
  %7 = getelementptr inbounds %"class.SkSL::AnyConstructor", %"class.SkSL::AnyConstructor"* %1, i64 0, i32 0
  %8 = bitcast %"class.SkSL::AnyConstructor"* %1 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %9 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %9, i64 3
  %11 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %10, align 8
  %12 = tail call dereferenceable(184) %"class.SkSL::Type"* %11(%"class.SkSL::Expression"* %7) #8
  %13 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %12, i64 0, i32 18
  %14 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %13, align 8, !noalias !3
  %15 = icmp eq %"class.SkSL::Type"* %14, null
  %16 = select i1 %15, %"class.SkSL::Type"* %12, %"class.SkSL::Type"* %14
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %16, i64 0, i32 0, i32 1, i32 0
  %18 = load i8*, i8** %17, align 8, !noalias !3
  %19 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %16, i64 0, i32 0, i32 1, i32 1
  %20 = load i64, i64* %19, align 8, !noalias !3
  %21 = icmp ugt i64 %20, -17
  br i1 %21, label %22, label %24

22:                                               ; preds = %2
  %23 = bitcast %"class.SkSL::String"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %23) #9
  unreachable

24:                                               ; preds = %2
  %25 = icmp ult i64 %20, 23
  br i1 %25, label %35, label %26

26:                                               ; preds = %24
  %27 = add nuw i64 %20, 16
  %28 = and i64 %27, -16
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %29, i8** %30, align 8, !alias.scope !3
  %31 = or i64 %28, -9223372036854775808
  %32 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %31, i64* %32, align 8, !alias.scope !3
  %33 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %20, i64* %33, align 8, !alias.scope !3
  %34 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %40

35:                                               ; preds = %24
  %36 = trunc i64 %20 to i8
  %37 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  store i8 %36, i8* %38, align 1, !alias.scope !3
  %39 = icmp eq i64 %20, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %35, %26
  %41 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %37, %35 ], [ %34, %26 ]
  %42 = phi i8* [ %5, %35 ], [ %29, %26 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %42, i8* align 1 %18, i64 %20, i1 false) #8
  br label %43

43:                                               ; preds = %35, %40
  %44 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %37, %35 ], [ %41, %40 ]
  %45 = phi i8* [ %5, %35 ], [ %42, %40 ]
  %46 = getelementptr inbounds i8, i8* %45, i64 %20
  store i8 0, i8* %46, align 1
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #8
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %52) #10
  br label %53

53:                                               ; preds = %43, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8
  %54 = bitcast %"class.SkSL::AnyConstructor"* %1 to { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %55 = load { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %54, align 8
  %56 = getelementptr inbounds { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)** %55, i64 12
  %57 = load { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)** %56, align 8
  %58 = call { %"class.std::__1::unique_ptr"*, i64 } %57(%"class.SkSL::AnyConstructor"* %1) #8
  %59 = extractvalue { %"class.std::__1::unique_ptr"*, i64 } %58, 0
  %60 = extractvalue { %"class.std::__1::unique_ptr"*, i64 } %58, 1
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 %60
  %62 = icmp eq i64 %60, 0
  br i1 %62, label %84, label %63

63:                                               ; preds = %53
  %64 = bitcast %"class.SkSL::String"* %4 to i8*
  %65 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* nonnull getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0)) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #8
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %69, align 8
  %71 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %70, i64 0, i32 0
  %72 = bitcast %"class.SkSL::Expression"* %70 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %73 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %73, i64 2
  %75 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %74, align 8
  call void %75(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::IRNode"* %71) #8
  %76 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %4) #8
  %77 = load i8, i8* %66, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %63
  %80 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %80) #10
  br label %81

81:                                               ; preds = %79, %63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #8
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 1
  %83 = icmp eq i64 %60, 1
  br i1 %83, label %84, label %86

84:                                               ; preds = %81, %101, %53
  %85 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #8
  ret void

86:                                               ; preds = %81, %101
  %87 = phi %"class.std::__1::unique_ptr"* [ %102, %101 ], [ %82, %81 ]
  %88 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #8
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %89, align 8
  %91 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %90, i64 0, i32 0
  %92 = bitcast %"class.SkSL::Expression"* %90 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %93 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %93, i64 2
  %95 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %94, align 8
  call void %95(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::IRNode"* %91) #8
  %96 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %4) #8
  %97 = load i8, i8* %66, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %101

99:                                               ; preds = %86
  %100 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %100) #10
  br label %101

101:                                              ; preds = %86, %99
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #8
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 1
  %103 = icmp eq %"class.std::__1::unique_ptr"* %102, %61
  br i1 %103, label %84, label %86, !llvm.loop !8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL10Expression4typeEv(%"class.SkSL::Expression"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %0, i64 0, i32 1
  %3 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %2, align 8
  ret %"class.SkSL::Type"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL14AnyConstructor21isCompileTimeConstantEv(%"class.SkSL::AnyConstructor"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.SkSL::AnyConstructor"* %0 to { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %3 = load { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %2, align 8
  %4 = getelementptr inbounds { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)** %3, i64 12
  %5 = load { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)** %4, align 8
  %6 = tail call { %"class.std::__1::unique_ptr"*, i64 } %5(%"class.SkSL::AnyConstructor"* %0) #8
  %7 = extractvalue { %"class.std::__1::unique_ptr"*, i64 } %6, 0
  %8 = extractvalue { %"class.std::__1::unique_ptr"*, i64 } %6, 1
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 %8
  %10 = icmp eq i64 %8, 0
  br i1 %10, label %23, label %13

11:                                               ; preds = %13
  %12 = icmp eq %"class.std::__1::unique_ptr"* %22, %9
  br i1 %12, label %23, label %13

13:                                               ; preds = %1, %11
  %14 = phi %"class.std::__1::unique_ptr"* [ %22, %11 ], [ %7, %1 ]
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %15, align 8
  %17 = bitcast %"class.SkSL::Expression"* %16 to i1 (%"class.SkSL::Expression"*)***
  %18 = load i1 (%"class.SkSL::Expression"*)**, i1 (%"class.SkSL::Expression"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %18, i64 4
  %20 = load i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.SkSL::Expression"* %16) #8
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 1
  br i1 %21, label %11, label %23

23:                                               ; preds = %13, %11, %1
  %24 = phi i1 [ true, %1 ], [ true, %11 ], [ false, %13 ]
  ret i1 %24
}

declare i32 @_ZNK4SkSL14AnyConstructor15compareConstantERKNS_10ExpressionE(%"class.SkSL::AnyConstructor"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL14AnyConstructor19isConstantOrUniformEv(%"class.SkSL::AnyConstructor"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.SkSL::AnyConstructor"* %0 to { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %3 = load { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %2, align 8
  %4 = getelementptr inbounds { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)** %3, i64 12
  %5 = load { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)** %4, align 8
  %6 = tail call { %"class.std::__1::unique_ptr"*, i64 } %5(%"class.SkSL::AnyConstructor"* %0) #8
  %7 = extractvalue { %"class.std::__1::unique_ptr"*, i64 } %6, 0
  %8 = extractvalue { %"class.std::__1::unique_ptr"*, i64 } %6, 1
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 %8
  %10 = icmp eq i64 %8, 0
  br i1 %10, label %23, label %13

11:                                               ; preds = %13
  %12 = icmp eq %"class.std::__1::unique_ptr"* %22, %9
  br i1 %12, label %23, label %13

13:                                               ; preds = %1, %11
  %14 = phi %"class.std::__1::unique_ptr"* [ %22, %11 ], [ %7, %1 ]
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %15, align 8
  %17 = bitcast %"class.SkSL::Expression"* %16 to i1 (%"class.SkSL::Expression"*)***
  %18 = load i1 (%"class.SkSL::Expression"*)**, i1 (%"class.SkSL::Expression"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %18, i64 6
  %20 = load i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.SkSL::Expression"* %16) #8
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 1
  br i1 %21, label %11, label %23

23:                                               ; preds = %13, %11, %1
  %24 = phi i1 [ true, %1 ], [ true, %11 ], [ false, %13 ]
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL14AnyConstructor11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::AnyConstructor"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.SkSL::AnyConstructor"* %0 to { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %4 = load { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %3, align 8
  %5 = getelementptr inbounds { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)** %4, i64 12
  %6 = load { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)** %5, align 8
  %7 = tail call { %"class.std::__1::unique_ptr"*, i64 } %6(%"class.SkSL::AnyConstructor"* %0) #8
  %8 = extractvalue { %"class.std::__1::unique_ptr"*, i64 } %7, 0
  %9 = extractvalue { %"class.std::__1::unique_ptr"*, i64 } %7, 1
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 %9
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %24, label %14

12:                                               ; preds = %14
  %13 = icmp eq %"class.std::__1::unique_ptr"* %23, %10
  br i1 %13, label %24, label %14

14:                                               ; preds = %2, %12
  %15 = phi %"class.std::__1::unique_ptr"* [ %23, %12 ], [ %8, %2 ]
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %16, align 8
  %18 = bitcast %"class.SkSL::Expression"* %17 to i1 (%"class.SkSL::Expression"*, i32)***
  %19 = load i1 (%"class.SkSL::Expression"*, i32)**, i1 (%"class.SkSL::Expression"*, i32)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.SkSL::Expression"*, i32)*, i1 (%"class.SkSL::Expression"*, i32)** %19, i64 7
  %21 = load i1 (%"class.SkSL::Expression"*, i32)*, i1 (%"class.SkSL::Expression"*, i32)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.SkSL::Expression"* %17, i32 %1) #8
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 1
  br i1 %22, label %24, label %12

24:                                               ; preds = %12, %14, %2
  %25 = phi i1 [ false, %2 ], [ true, %14 ], [ false, %12 ]
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE(%"class.SkSL::Expression"*, %"class.SkSL::Type"* dereferenceable(184)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.SkSL::Expression"* %0 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %4 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %4, i64 3
  %6 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %5, align 8
  %7 = tail call dereferenceable(184) %"class.SkSL::Type"* %6(%"class.SkSL::Expression"* %0) #8
  %8 = tail call { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"* %7, %"class.SkSL::Type"* dereferenceable(184) %1) #8
  ret { i64, i8 } %8
}

declare %"class.SkSL::Expression"* @_ZNK4SkSL14AnyConstructor24getConstantSubexpressionEi(%"class.SkSL::AnyConstructor"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL19ConstructorCompound5cloneEv(%"class.SkSL::ConstructorCompound"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.SkSTArray, align 8
  %3 = alloca %class.SkSTArray, align 8
  %4 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %5, align 8
  %7 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0
  call void @_ZNK4SkSL24MultiArgumentConstructor14cloneArgumentsEv(%class.SkSTArray* nonnull sret %3, %"class.SkSL::MultiArgumentConstructor"* %8)
  %9 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %2, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9)
  %10 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 64) #8
  %11 = bitcast i8* %10 to %"class.SkSL::ConstructorCompound"*
  %12 = load i32, i32* %4, align 4
  %13 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %2, i64 0, i32 0, i32 0, i64 16
  %14 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %2, i64 0, i32 0, i32 0, i64 24
  %15 = bitcast i8* %14 to i64*
  %16 = bitcast i8* %13 to i8**
  store i8* %9, i8** %16, align 8
  store i64 17179869184, i64* %15, align 8
  %17 = bitcast i8* %13 to %class.SkTArray*
  %18 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 16
  %19 = bitcast i8* %18 to %class.SkTArray*
  %20 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %17, %class.SkTArray* dereferenceable(16) %19) #8
  call void @_ZN4SkSL19ConstructorCompoundC2EiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS5_14default_deleteIS7_EEEELb0EE(%"class.SkSL::ConstructorCompound"* %11, i32 %12, %"class.SkSL::Type"* dereferenceable(184) %6, %class.SkSTArray* nonnull %2) #8
  %21 = load i64, i64* %15, align 8
  %22 = and i64 %21, 4294967294
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %1
  %25 = bitcast i8* %13 to %"class.std::__1::unique_ptr"**
  br label %30

26:                                               ; preds = %41, %1
  %27 = phi i64 [ %21, %1 ], [ %43, %41 ]
  %28 = and i64 %27, 1
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %49, label %47

30:                                               ; preds = %41, %24
  %31 = phi i64 [ 0, %24 ], [ %42, %41 ]
  %32 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %25, align 8
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %32, i64 %31, i32 0, i32 0, i32 0
  %34 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %33, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %33, align 8
  %35 = icmp eq %"class.SkSL::Expression"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.SkSL::Expression"* %34 to void (%"class.SkSL::Expression"*)***
  %38 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %38, i64 1
  %40 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %39, align 8
  call void %40(%"class.SkSL::Expression"* nonnull %34) #8
  br label %41

41:                                               ; preds = %36, %30
  %42 = add nuw nsw i64 %31, 1
  %43 = load i64, i64* %15, align 8
  %44 = lshr i64 %43, 1
  %45 = and i64 %44, 2147483647
  %46 = icmp ult i64 %42, %45
  br i1 %46, label %30, label %26

47:                                               ; preds = %26
  %48 = load i8*, i8** %16, align 8
  call void @_Z7sk_freePv(i8* %48) #8
  br label %49

49:                                               ; preds = %47, %26
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9)
  %50 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 24
  %51 = bitcast i8* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = and i64 %52, 4294967294
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %49
  %56 = bitcast i8* %18 to %"class.std::__1::unique_ptr"**
  br label %61

57:                                               ; preds = %72, %49
  %58 = phi i64 [ %52, %49 ], [ %74, %72 ]
  %59 = and i64 %58, 1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %81, label %78

61:                                               ; preds = %72, %55
  %62 = phi i64 [ 0, %55 ], [ %73, %72 ]
  %63 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %56, align 8
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %63, i64 %62, i32 0, i32 0, i32 0
  %65 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %64, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %64, align 8
  %66 = icmp eq %"class.SkSL::Expression"* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %61
  %68 = bitcast %"class.SkSL::Expression"* %65 to void (%"class.SkSL::Expression"*)***
  %69 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %69, i64 1
  %71 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %70, align 8
  call void %71(%"class.SkSL::Expression"* nonnull %65) #8
  br label %72

72:                                               ; preds = %67, %61
  %73 = add nuw nsw i64 %62, 1
  %74 = load i64, i64* %51, align 8
  %75 = lshr i64 %74, 1
  %76 = and i64 %75, 2147483647
  %77 = icmp ult i64 %73, %76
  br i1 %77, label %61, label %57

78:                                               ; preds = %57
  %79 = bitcast i8* %18 to i8**
  %80 = load i8*, i8** %79, align 8
  call void @_Z7sk_freePv(i8* %80) #8
  br label %81

81:                                               ; preds = %57, %78
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #8
  %82 = bitcast i8* %10 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::unique_ptr"*, i64 } @_ZN4SkSL24MultiArgumentConstructor12argumentSpanEv(%"class.SkSL::MultiArgumentConstructor"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::MultiArgumentConstructor", %"class.SkSL::MultiArgumentConstructor"* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %3 = bitcast i8* %2 to %"class.std::__1::unique_ptr"**
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::MultiArgumentConstructor", %"class.SkSL::MultiArgumentConstructor"* %0, i64 0, i32 1, i32 0, i32 0, i64 24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 1
  %9 = and i64 %8, 2147483647
  %10 = insertvalue { %"class.std::__1::unique_ptr"*, i64 } undef, %"class.std::__1::unique_ptr"* %4, 0
  %11 = insertvalue { %"class.std::__1::unique_ptr"*, i64 } %10, i64 %9, 1
  ret { %"class.std::__1::unique_ptr"*, i64 } %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::unique_ptr"*, i64 } @_ZNK4SkSL24MultiArgumentConstructor12argumentSpanEv(%"class.SkSL::MultiArgumentConstructor"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::MultiArgumentConstructor", %"class.SkSL::MultiArgumentConstructor"* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %3 = bitcast i8* %2 to %"class.std::__1::unique_ptr"**
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::MultiArgumentConstructor", %"class.SkSL::MultiArgumentConstructor"* %0, i64 0, i32 1, i32 0, i32 0, i64 24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 1
  %9 = and i64 %8, 2147483647
  %10 = insertvalue { %"class.std::__1::unique_ptr"*, i64 } undef, %"class.std::__1::unique_ptr"* %4, 0
  %11 = insertvalue { %"class.std::__1::unique_ptr"*, i64 } %10, i64 %9, 1
  ret { %"class.std::__1::unique_ptr"*, i64 } %11
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL24MultiArgumentConstructorD2Ev(%"class.SkSL::MultiArgumentConstructor"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::MultiArgumentConstructor", %"class.SkSL::MultiArgumentConstructor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4SkSL24MultiArgumentConstructorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::MultiArgumentConstructor", %"class.SkSL::MultiArgumentConstructor"* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %4 = getelementptr inbounds %"class.SkSL::MultiArgumentConstructor", %"class.SkSL::MultiArgumentConstructor"* %0, i64 0, i32 1, i32 0, i32 0, i64 24
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %"class.std::__1::unique_ptr"**
  br label %15

11:                                               ; preds = %26, %1
  %12 = phi i64 [ %6, %1 ], [ %28, %26 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %35, label %32

15:                                               ; preds = %26, %9
  %16 = phi i64 [ 0, %9 ], [ %27, %26 ]
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 %16, i32 0, i32 0, i32 0
  %19 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %18, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %18, align 8
  %20 = icmp eq %"class.SkSL::Expression"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.SkSL::Expression"* %19 to void (%"class.SkSL::Expression"*)***
  %23 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %23, i64 1
  %25 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %24, align 8
  tail call void %25(%"class.SkSL::Expression"* nonnull %19) #8
  br label %26

26:                                               ; preds = %21, %15
  %27 = add nuw nsw i64 %16, 1
  %28 = load i64, i64* %5, align 8
  %29 = lshr i64 %28, 1
  %30 = and i64 %29, 2147483647
  %31 = icmp ult i64 %27, %30
  br i1 %31, label %15, label %11

32:                                               ; preds = %11
  %33 = bitcast i8* %3 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #8
  br label %35

35:                                               ; preds = %11, %32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4SkSL14AnyConstructorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %36 = getelementptr inbounds %"class.SkSL::MultiArgumentConstructor", %"class.SkSL::MultiArgumentConstructor"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %36, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %36, align 8
  %38 = icmp eq %"class.SkSL::Expression"* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %35
  %40 = bitcast %"class.SkSL::Expression"* %37 to void (%"class.SkSL::Expression"*)***
  %41 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %41, i64 1
  %43 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %42, align 8
  tail call void %43(%"class.SkSL::Expression"* nonnull %37) #8
  br label %44

44:                                               ; preds = %35, %39
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL24MultiArgumentConstructorD0Ev(%"class.SkSL::MultiArgumentConstructor"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare void @_ZN4SkSL4Pool10FreeMemoryEPv(i8*) local_unnamed_addr #2

declare void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*) local_unnamed_addr #2

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"*, i8*) local_unnamed_addr #2

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"*, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL24MultiArgumentConstructor14cloneArgumentsEv(%class.SkSTArray* noalias sret, %"class.SkSL::MultiArgumentConstructor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %0, i64 0, i32 0, i32 0, i64 0
  %4 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %0, i64 0, i32 0, i32 0, i64 16
  %5 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %0, i64 0, i32 0, i32 0, i64 24
  %6 = bitcast i8* %5 to i64*
  %7 = bitcast i8* %4 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 16, i1 false)
  store i8* %3, i8** %7, align 8
  store i64 17179869184, i64* %6, align 8
  %8 = bitcast i8* %4 to %class.SkTArray*
  %9 = getelementptr inbounds %"class.SkSL::MultiArgumentConstructor", %"class.SkSL::MultiArgumentConstructor"* %1, i64 0, i32 1, i32 0, i32 0, i64 16
  %10 = getelementptr inbounds %"class.SkSL::MultiArgumentConstructor", %"class.SkSL::MultiArgumentConstructor"* %1, i64 0, i32 1, i32 0, i32 0, i64 24
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = lshr i64 %12, 1
  %14 = trunc i64 %13 to i32
  %15 = and i32 %14, 2147483647
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %2
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %8, i32 %15, i32 0) #8
  %18 = load i64, i64* %6, align 8
  %19 = shl i64 %18, 32
  %20 = and i64 %19, 4294967296
  %21 = and i64 %18, -4294967297
  %22 = or i64 %20, %21
  br label %23

23:                                               ; preds = %2, %17
  %24 = phi i64 [ %22, %17 ], [ 17179869184, %2 ]
  store i64 %24, i64* %6, align 8
  %25 = bitcast i8* %9 to %"class.std::__1::unique_ptr"**
  %26 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %25, align 8
  %27 = icmp eq %"class.std::__1::unique_ptr"* %26, null
  br i1 %27, label %58, label %28

28:                                               ; preds = %23
  %29 = load i64, i64* %11, align 8
  %30 = lshr i64 %29, 1
  %31 = and i64 %30, 2147483647
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 %31
  %33 = icmp eq i64 %31, 0
  br i1 %33, label %58, label %34

34:                                               ; preds = %28
  %35 = bitcast i8* %4 to %"class.std::__1::unique_ptr"**
  br label %36

36:                                               ; preds = %34, %36
  %37 = phi %"class.std::__1::unique_ptr"* [ %26, %34 ], [ %56, %36 ]
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %38, align 8
  %40 = bitcast %"class.SkSL::Expression"* %39 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)***
  %41 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*** %40, align 8
  %42 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %41, i64 10
  %43 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %42, align 8
  %44 = tail call %"class.SkSL::Expression"* %43(%"class.SkSL::Expression"* %39) #8
  %45 = ptrtoint %"class.SkSL::Expression"* %44 to i64
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %8, i32 1, i32 1) #8
  %46 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %35, align 8
  %47 = load i64, i64* %6, align 8
  %48 = lshr i64 %47, 1
  %49 = and i64 %48, 2147483647
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 %49
  %51 = add i64 %47, 2
  %52 = and i64 %51, 4294967294
  %53 = and i64 %47, -4294967295
  %54 = or i64 %52, %53
  store i64 %54, i64* %6, align 8
  %55 = bitcast %"class.std::__1::unique_ptr"* %50 to i64*
  store i64 %45, i64* %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %57 = icmp eq %"class.std::__1::unique_ptr"* %56, %32
  br i1 %57, label %58, label %36

58:                                               ; preds = %36, %23, %28
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4SkSL4Type11displayNameEv"}
!6 = distinct !{!6, !7, !"_ZNK4SkSL4Type11descriptionEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4SkSL4Type11descriptionEv"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
