; ModuleID = '../../media/learning/impl/voting_ensemble.cc'
source_filename = "../../media/learning/impl/voting_ensemble.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::learning::VotingEnsemble" = type { %"class.media::learning::Model", %"class.std::__1::vector" }
%"class.media::learning::Model" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.media::learning::Model"* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::unique_ptr"* }
%"class.media::learning::TargetHistogram" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.11" }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.13" }
%"struct.std::__1::pair" = type { %"class.media::learning::Value", double }
%"class.media::learning::Value" = type { double }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"class.media::learning::Value"*, %"class.media::learning::Value"*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.media::learning::Value"* }

@_ZTVN5media8learning14VotingEnsembleE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::learning::VotingEnsemble"*)* @_ZN5media8learning14VotingEnsembleD2Ev to i8*), i8* bitcast (void (%"class.media::learning::VotingEnsemble"*)* @_ZN5media8learning14VotingEnsembleD0Ev to i8*), i8* bitcast (void (%"class.media::learning::TargetHistogram"*, %"class.media::learning::VotingEnsemble"*, %"class.std::__1::vector.4"*)* @_ZN5media8learning14VotingEnsemble19PredictDistributionERKNSt3__16vectorINS0_5ValueENS2_9allocatorIS4_EEEE to i8*)] }, align 8

@_ZN5media8learning14VotingEnsembleC1ENSt3__16vectorINS2_10unique_ptrINS0_5ModelENS2_14default_deleteIS5_EEEENS2_9allocatorIS8_EEEE = hidden unnamed_addr alias void (%"class.media::learning::VotingEnsemble"*, %"class.std::__1::vector"*), void (%"class.media::learning::VotingEnsemble"*, %"class.std::__1::vector"*)* @_ZN5media8learning14VotingEnsembleC2ENSt3__16vectorINS2_10unique_ptrINS0_5ModelENS2_14default_deleteIS5_EEEENS2_9allocatorIS8_EEEE
@_ZN5media8learning14VotingEnsembleD1Ev = hidden unnamed_addr alias void (%"class.media::learning::VotingEnsemble"*), void (%"class.media::learning::VotingEnsemble"*)* @_ZN5media8learning14VotingEnsembleD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media8learning14VotingEnsembleC2ENSt3__16vectorINS2_10unique_ptrINS0_5ModelENS2_14default_deleteIS5_EEEENS2_9allocatorIS8_EEEE(%"class.media::learning::VotingEnsemble"* nocapture, %"class.std::__1::vector"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::learning::VotingEnsemble", %"class.media::learning::VotingEnsemble"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media8learning14VotingEnsembleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.media::learning::VotingEnsemble", %"class.media::learning::VotingEnsemble"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::vector"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #5
  %6 = bitcast %"class.std::__1::vector"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %4 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::unique_ptr"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.media::learning::VotingEnsemble", %"class.media::learning::VotingEnsemble"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr"** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.std::__1::unique_ptr"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.media::learning::VotingEnsemble", %"class.media::learning::VotingEnsemble"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media8learning14VotingEnsembleD2Ev(%"class.media::learning::VotingEnsemble"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::learning::VotingEnsemble", %"class.media::learning::VotingEnsemble"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media8learning14VotingEnsembleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::learning::VotingEnsemble", %"class.media::learning::VotingEnsemble"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  %9 = getelementptr inbounds %"class.media::learning::VotingEnsemble", %"class.media::learning::VotingEnsemble"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.media::learning::Model"*, %"class.media::learning::Model"** %15, align 8
  store %"class.media::learning::Model"* null, %"class.media::learning::Model"** %15, align 8
  %17 = icmp eq %"class.media::learning::Model"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.media::learning::Model"* %16 to void (%"class.media::learning::Model"*)***
  %20 = load void (%"class.media::learning::Model"*)**, void (%"class.media::learning::Model"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.media::learning::Model"*)*, void (%"class.media::learning::Model"*)** %20, i64 1
  %22 = load void (%"class.media::learning::Model"*)*, void (%"class.media::learning::Model"*)** %21, align 8
  tail call void %22(%"class.media::learning::Model"* nonnull %16) #5
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr"* %5, %"class.std::__1::unique_ptr"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #6
  br label %30

30:                                               ; preds = %1, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media8learning14VotingEnsembleD0Ev(%"class.media::learning::VotingEnsemble"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::learning::VotingEnsemble", %"class.media::learning::VotingEnsemble"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media8learning14VotingEnsembleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::learning::VotingEnsemble", %"class.media::learning::VotingEnsemble"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  %9 = getelementptr inbounds %"class.media::learning::VotingEnsemble", %"class.media::learning::VotingEnsemble"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.media::learning::Model"*, %"class.media::learning::Model"** %15, align 8
  store %"class.media::learning::Model"* null, %"class.media::learning::Model"** %15, align 8
  %17 = icmp eq %"class.media::learning::Model"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.media::learning::Model"* %16 to void (%"class.media::learning::Model"*)***
  %20 = load void (%"class.media::learning::Model"*)**, void (%"class.media::learning::Model"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.media::learning::Model"*)*, void (%"class.media::learning::Model"*)** %20, i64 1
  %22 = load void (%"class.media::learning::Model"*)*, void (%"class.media::learning::Model"*)** %21, align 8
  tail call void %22(%"class.media::learning::Model"* nonnull %16) #5
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr"* %5, %"class.std::__1::unique_ptr"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #6
  br label %30

30:                                               ; preds = %1, %28
  %31 = bitcast %"class.media::learning::VotingEnsemble"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media8learning14VotingEnsemble19PredictDistributionERKNSt3__16vectorINS0_5ValueENS2_9allocatorIS4_EEEE(%"class.media::learning::TargetHistogram"* noalias sret, %"class.media::learning::VotingEnsemble"* nocapture readonly, %"class.std::__1::vector.4"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.media::learning::TargetHistogram", align 8
  %5 = bitcast %"class.media::learning::TargetHistogram"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 24, i1 false)
  tail call void @_ZN5media8learning15TargetHistogramC1Ev(%"class.media::learning::TargetHistogram"* %0) #5
  %6 = getelementptr inbounds %"class.media::learning::VotingEnsemble", %"class.media::learning::VotingEnsemble"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %8 = getelementptr inbounds %"class.media::learning::VotingEnsemble", %"class.media::learning::VotingEnsemble"* %1, i64 0, i32 1, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr"* %7, %9
  br i1 %10, label %13, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.media::learning::TargetHistogram"* %4 to i8*
  br label %14

13:                                               ; preds = %14, %3
  ret void

14:                                               ; preds = %11, %14
  %15 = phi %"class.std::__1::unique_ptr"* [ %7, %11 ], [ %23, %14 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #5
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.media::learning::Model"*, %"class.media::learning::Model"** %16, align 8
  %18 = bitcast %"class.media::learning::Model"* %17 to void (%"class.media::learning::TargetHistogram"*, %"class.media::learning::Model"*, %"class.std::__1::vector.4"*)***
  %19 = load void (%"class.media::learning::TargetHistogram"*, %"class.media::learning::Model"*, %"class.std::__1::vector.4"*)**, void (%"class.media::learning::TargetHistogram"*, %"class.media::learning::Model"*, %"class.std::__1::vector.4"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.media::learning::TargetHistogram"*, %"class.media::learning::Model"*, %"class.std::__1::vector.4"*)*, void (%"class.media::learning::TargetHistogram"*, %"class.media::learning::Model"*, %"class.std::__1::vector.4"*)** %19, i64 2
  %21 = load void (%"class.media::learning::TargetHistogram"*, %"class.media::learning::Model"*, %"class.std::__1::vector.4"*)*, void (%"class.media::learning::TargetHistogram"*, %"class.media::learning::Model"*, %"class.std::__1::vector.4"*)** %20, align 8
  call void %21(%"class.media::learning::TargetHistogram"* nonnull sret %4, %"class.media::learning::Model"* %17, %"class.std::__1::vector.4"* dereferenceable(24) %2) #5
  %22 = call dereferenceable(24) %"class.media::learning::TargetHistogram"* @_ZN5media8learning15TargetHistogrampLERKS1_(%"class.media::learning::TargetHistogram"* %0, %"class.media::learning::TargetHistogram"* nonnull dereferenceable(24) %4) #5
  call void @_ZN5media8learning15TargetHistogramD1Ev(%"class.media::learning::TargetHistogram"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #5
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 1
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %25 = icmp eq %"class.std::__1::unique_ptr"* %23, %24
  br i1 %25, label %13, label %14
}

declare void @_ZN5media8learning15TargetHistogramC1Ev(%"class.media::learning::TargetHistogram"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare dereferenceable(24) %"class.media::learning::TargetHistogram"* @_ZN5media8learning15TargetHistogrampLERKS1_(%"class.media::learning::TargetHistogram"*, %"class.media::learning::TargetHistogram"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5media8learning15TargetHistogramD1Ev(%"class.media::learning::TargetHistogram"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
