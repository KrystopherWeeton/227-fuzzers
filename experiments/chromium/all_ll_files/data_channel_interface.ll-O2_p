; ModuleID = '../../third_party/webrtc/api/data_channel_interface.cc'
source_filename = "../../third_party/webrtc/api/data_channel_interface.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::DataChannelInterface" = type { %"class.rtc::RefCountInterface" }
%"class.rtc::RefCountInterface" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.webrtc::RTCError" = type { i32, %"class.std::__1::basic_string", i32, %"class.absl::optional.2" }
%"class.absl::optional.2" = type { %"class.absl::optional_internal::optional_data.3" }
%"class.absl::optional_internal::optional_data.3" = type { %"class.absl::optional_internal::optional_data_base.4" }
%"class.absl::optional_internal::optional_data_base.4" = type { %"class.absl::optional_internal::optional_data_dtor_base.5" }
%"class.absl::optional_internal::optional_data_dtor_base.5" = type { i8, %union.anon.6 }
%union.anon.6 = type { i16 }

$_ZN3rtc17RefCountInterfaceD2Ev = comdat any

$_ZN6webrtc20DataChannelInterfaceD0Ev = comdat any

$_ZNK6webrtc20DataChannelInterface8priorityEv = comdat any

$_ZNK6webrtc20DataChannelInterface5errorEv = comdat any

@_ZTVN6webrtc20DataChannelInterfaceE = hidden unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.rtc::RefCountInterface"*)* @_ZN3rtc17RefCountInterfaceD2Ev to i8*), i8* bitcast (void (%"class.webrtc::DataChannelInterface"*)* @_ZN6webrtc20DataChannelInterfaceD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.webrtc::DataChannelInterface"*)* @_ZNK6webrtc20DataChannelInterface7orderedEv to i8*), i8* bitcast (i16 (%"class.webrtc::DataChannelInterface"*)* @_ZNK6webrtc20DataChannelInterface17maxRetransmitTimeEv to i8*), i8* bitcast (i16 (%"class.webrtc::DataChannelInterface"*)* @_ZNK6webrtc20DataChannelInterface14maxRetransmitsEv to i8*), i8* bitcast (i64 (%"class.webrtc::DataChannelInterface"*)* @_ZNK6webrtc20DataChannelInterface17maxRetransmitsOptEv to i8*), i8* bitcast (i64 (%"class.webrtc::DataChannelInterface"*)* @_ZNK6webrtc20DataChannelInterface17maxPacketLifeTimeEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.webrtc::DataChannelInterface"*)* @_ZNK6webrtc20DataChannelInterface8protocolEv to i8*), i8* bitcast (i1 (%"class.webrtc::DataChannelInterface"*)* @_ZNK6webrtc20DataChannelInterface10negotiatedEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.webrtc::DataChannelInterface"*)* @_ZNK6webrtc20DataChannelInterface8priorityEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.webrtc::RTCError"*, %"class.webrtc::DataChannelInterface"*)* @_ZNK6webrtc20DataChannelInterface5errorEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc20DataChannelInterface7orderedEv(%"class.webrtc::DataChannelInterface"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i16 @_ZNK6webrtc20DataChannelInterface17maxRetransmitTimeEv(%"class.webrtc::DataChannelInterface"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i16 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i16 @_ZNK6webrtc20DataChannelInterface14maxRetransmitsEv(%"class.webrtc::DataChannelInterface"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i16 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK6webrtc20DataChannelInterface17maxRetransmitsOptEv(%"class.webrtc::DataChannelInterface"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK6webrtc20DataChannelInterface17maxPacketLifeTimeEv(%"class.webrtc::DataChannelInterface"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc20DataChannelInterface8protocolEv(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.webrtc::DataChannelInterface"* nocapture readnone) unnamed_addr #1 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc20DataChannelInterface10negotiatedEv(%"class.webrtc::DataChannelInterface"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3rtc17RefCountInterfaceD2Ev(%"class.rtc::RefCountInterface"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc20DataChannelInterfaceD0Ev(%"class.webrtc::DataChannelInterface"*) unnamed_addr #1 comdat align 2 {
  tail call void @llvm.trap() #5
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK6webrtc20DataChannelInterface8priorityEv(%"class.webrtc::DataChannelInterface"*) unnamed_addr #1 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK6webrtc20DataChannelInterface5errorEv(%"class.webrtc::RTCError"* noalias sret, %"class.webrtc::DataChannelInterface"*) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.webrtc::RTCError", %"class.webrtc::RTCError"* %0, i64 0, i32 0
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::RTCError", %"class.webrtc::RTCError"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 29, i1 false) #4
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }
attributes #5 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
