; ModuleID = '../../base/task/thread_pool/thread_group.cc'
source_filename = "../../base/task/thread_pool/thread_group.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::internal::ThreadGroup::YieldSortKey" = type { i8, i8 }
%"class.base::LazyInstance" = type { i64, [8 x i8] }
%"struct.base::Feature" = type { i8*, i32 }
%"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::RegisteredTaskSource"*, %"class.std::__1::__compressed_pair.47" }
%"class.base::internal::RegisteredTaskSource" = type { %class.scoped_refptr, %"class.base::internal::TaskTracker"* }
%class.scoped_refptr = type { %"class.base::internal::TaskSource"* }
%"class.base::internal::TaskSource" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", %"class.base::TaskTraits", %"struct.std::__1::atomic.1", [4 x i8], %"class.base::internal::CheckedLock", %"class.base::HeapHandle", %"class.base::TaskRunner"*, i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [8 x i8] }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl.3" }
%"struct.std::__1::__cxx_atomic_impl.3" = type { %"struct.std::__1::__cxx_atomic_base_impl.4" }
%"struct.std::__1::__cxx_atomic_base_impl.4" = type { i8 }
%"class.base::internal::CheckedLock" = type { %"class.base::Lock" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::HeapHandle" = type { i64 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.5", [4 x i8] }>
%"class.base::RefCountedThreadSafe.5" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::TaskTracker" = type { i32 (...)**, %"class.base::TaskAnnotator", %"class.std::__1::basic_string", i8, %"class.std::__1::unique_ptr", %"struct.std::__1::atomic", %"struct.std::__1::atomic.10", %"class.base::internal::CheckedLock", %"class.std::__1::unique_ptr.14", %"class.base::OnceCallback", %"class.base::internal::CheckedLock", %"class.std::__1::unique_ptr.26", %"class.base::internal::TrackedRefFactory" }
%"class.base::TaskAnnotator" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.base::internal::TaskTracker::State"* }
%"class.base::internal::TaskTracker::State" = type opaque
%"struct.std::__1::atomic.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i32 }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.base::ConditionVariable"* }
%"class.base::ConditionVariable" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t*, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.17, %union.anon.19, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.17 = type { i64 }
%union.anon.19 = type { i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.24 }
%class.scoped_refptr.24 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.25", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.25" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.base::WaitableEvent"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.29, i8, [7 x i8] }>
%class.scoped_refptr.29 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.30", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.30" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.31" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { i64 }
%"class.base::internal::TrackedRefFactory" = type { %"class.base::internal::TaskTracker"*, %"class.base::AtomicRefCount", [4 x i8], %"class.absl::optional", %"class.absl::optional.40" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon.39 }
%union.anon.39 = type { %"class.base::WaitableEvent" }
%"class.absl::optional.40" = type { %"class.absl::optional_internal::optional_data.41" }
%"class.absl::optional_internal::optional_data.41" = type { %"class.absl::optional_internal::optional_data_base.42" }
%"class.absl::optional_internal::optional_data_base.42" = type { %"class.absl::optional_internal::optional_data_dtor_base.43" }
%"class.absl::optional_internal::optional_data_dtor_base.43" = type { i8, %union.anon.44 }
%union.anon.44 = type { %"class.base::internal::TrackedRef" }
%"class.base::internal::TrackedRef" = type { %"class.base::internal::TaskTracker"*, %"class.base::internal::TrackedRefFactory"* }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.base::internal::RegisteredTaskSource"* }
%"class.base::internal::ThreadGroup::ScopedReenqueueExecutor" = type { %"class.absl::optional.52", %"class.base::internal::ThreadGroup"* }
%"class.absl::optional.52" = type { %"class.absl::optional_internal::optional_data.53" }
%"class.absl::optional_internal::optional_data.53" = type { %"class.absl::optional_internal::optional_data_base.54" }
%"class.absl::optional_internal::optional_data_base.54" = type { %"class.absl::optional_internal::optional_data_dtor_base.55" }
%"class.absl::optional_internal::optional_data_dtor_base.55" = type { i8, %union.anon.56 }
%union.anon.56 = type { %"struct.base::internal::TransactionWithRegisteredTaskSource" }
%"struct.base::internal::TransactionWithRegisteredTaskSource" = type { %"class.base::internal::RegisteredTaskSource", %"class.base::internal::TaskSource::Transaction" }
%"class.base::internal::TaskSource::Transaction" = type { %"class.base::internal::TaskSource"* }
%"class.base::internal::ThreadGroup" = type { i32 (...)**, %"class.base::internal::TrackedRef", %"class.base::internal::TrackedRef.59", %"class.base::internal::CheckedLock", i8, [7 x i8], %"class.base::internal::PriorityQueue", %"struct.std::__1::atomic.69", %"class.base::internal::ThreadGroup"* }
%"class.base::internal::TrackedRef.59" = type { %"class.base::internal::ThreadGroup::Delegate"*, %"class.base::internal::TrackedRefFactory.60"* }
%"class.base::internal::ThreadGroup::Delegate" = type { i32 (...)** }
%"class.base::internal::TrackedRefFactory.60" = type { %"class.base::internal::ThreadGroup::Delegate"*, %"class.base::AtomicRefCount", [4 x i8], %"class.absl::optional", %"class.absl::optional.73" }
%"class.absl::optional.73" = type { %"class.absl::optional_internal::optional_data.74" }
%"class.absl::optional_internal::optional_data.74" = type { %"class.absl::optional_internal::optional_data_base.75" }
%"class.absl::optional_internal::optional_data_base.75" = type { %"class.absl::optional_internal::optional_data_dtor_base.76" }
%"class.absl::optional_internal::optional_data_dtor_base.76" = type { i8, %union.anon.77 }
%union.anon.77 = type { %"class.base::internal::TrackedRef.59" }
%"class.base::internal::PriorityQueue" = type <{ %"class.base::internal::IntrusiveHeap", %"struct.std::__1::array.68", i8, [7 x i8] }>
%"class.base::internal::IntrusiveHeap" = type { %"class.base::IntrusiveHeap" }
%"class.base::IntrusiveHeap" = type { %"struct.base::IntrusiveHeap<base::internal::PriorityQueue::TaskSourceAndSortKey, base::internal::IntrusiveHeapImpl<base::internal::PriorityQueue::TaskSourceAndSortKey>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::internal::PriorityQueue::TaskSourceAndSortKey> >::Impl" }
%"struct.base::IntrusiveHeap<base::internal::PriorityQueue::TaskSourceAndSortKey, base::internal::IntrusiveHeapImpl<base::internal::PriorityQueue::TaskSourceAndSortKey>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::internal::PriorityQueue::TaskSourceAndSortKey> >::Impl" = type { %"class.std::__1::vector.61" }
%"class.std::__1::vector.61" = type { %"class.std::__1::__vector_base.62" }
%"class.std::__1::__vector_base.62" = type { %"class.base::internal::PriorityQueue::TaskSourceAndSortKey"*, %"class.base::internal::PriorityQueue::TaskSourceAndSortKey"*, %"class.std::__1::__compressed_pair.63" }
%"class.base::internal::PriorityQueue::TaskSourceAndSortKey" = type opaque
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.base::internal::PriorityQueue::TaskSourceAndSortKey"* }
%"struct.std::__1::array.68" = type { [3 x i64] }
%"struct.std::__1::atomic.69" = type { %"struct.std::__1::__atomic_base.70" }
%"struct.std::__1::__atomic_base.70" = type { %"struct.std::__1::__cxx_atomic_impl.71" }
%"struct.std::__1::__cxx_atomic_impl.71" = type { %"struct.std::__1::__cxx_atomic_base_impl.72" }
%"struct.std::__1::__cxx_atomic_base_impl.72" = type { %"struct.base::internal::ThreadGroup::YieldSortKey" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::internal::TaskSourceSortKey" = type { i8, i8, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN4base8internal20RegisteredTaskSourceENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

@_ZN4base8internal11ThreadGroup16kMaxYieldSortKeyE = hidden local_unnamed_addr constant %"struct.base::internal::ThreadGroup::YieldSortKey" zeroinitializer, align 1
@_ZTVN4base8internal11ThreadGroupE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::internal::ThreadGroup"*)* @_ZN4base8internal11ThreadGroupD2Ev to i8*), i8* bitcast (void (%"class.base::internal::ThreadGroup"*)* @_ZN4base8internal11ThreadGroupD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZN4base8internal12_GLOBAL__N_124tls_current_thread_groupE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@_ZN4base25kDisableFairJobSchedulingE = external global %"struct.base::Feature", align 8

@_ZN4base8internal11ThreadGroup26BaseScopedCommandsExecutorC1Ev = hidden unnamed_addr alias void (%"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*), void (%"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)* @_ZN4base8internal11ThreadGroup26BaseScopedCommandsExecutorC2Ev
@_ZN4base8internal11ThreadGroup26BaseScopedCommandsExecutorD1Ev = hidden unnamed_addr alias void (%"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*), void (%"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)* @_ZN4base8internal11ThreadGroup26BaseScopedCommandsExecutorD2Ev
@_ZN4base8internal11ThreadGroup23ScopedReenqueueExecutorC1Ev = hidden unnamed_addr alias void (%"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"*), void (%"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"*)* @_ZN4base8internal11ThreadGroup23ScopedReenqueueExecutorC2Ev
@_ZN4base8internal11ThreadGroup23ScopedReenqueueExecutorD1Ev = hidden unnamed_addr alias void (%"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"*), void (%"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"*)* @_ZN4base8internal11ThreadGroup23ScopedReenqueueExecutorD2Ev
@_ZN4base8internal11ThreadGroupD1Ev = hidden unnamed_addr alias void (%"class.base::internal::ThreadGroup"*), void (%"class.base::internal::ThreadGroup"*)* @_ZN4base8internal11ThreadGroupD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11ThreadGroup26BaseScopedCommandsExecutor25ScheduleReleaseTaskSourceENS0_20RegisteredTaskSourceE(%"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*, %"class.base::internal::RegisteredTaskSource"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor", %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load %"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::RegisteredTaskSource"** %3, align 8
  %5 = getelementptr inbounds %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor", %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %6 = load %"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::RegisteredTaskSource"** %5, align 8
  %7 = icmp ult %"class.base::internal::RegisteredTaskSource"* %4, %6
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  tail call void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"* %4, %"class.base::internal::RegisteredTaskSource"* dereferenceable(16) %1) #11
  %9 = getelementptr inbounds %"class.base::internal::RegisteredTaskSource", %"class.base::internal::RegisteredTaskSource"* %4, i64 1
  %10 = ptrtoint %"class.base::internal::RegisteredTaskSource"* %9 to i64
  %11 = bitcast %"class.base::internal::RegisteredTaskSource"** %3 to i64*
  store i64 %10, i64* %11, align 8
  br label %14

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor", %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* %0, i64 0, i32 0
  tail call void @_ZNSt3__16vectorIN4base8internal20RegisteredTaskSourceENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %13, %"class.base::internal::RegisteredTaskSource"* dereferenceable(16) %1) #11
  br label %14

14:                                               ; preds = %8, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11ThreadGroup26BaseScopedCommandsExecutorC2Ev(%"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11ThreadGroup26BaseScopedCommandsExecutorD2Ev(%"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor", %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::RegisteredTaskSource"** %2, align 8
  %4 = icmp eq %"class.base::internal::RegisteredTaskSource"* %3, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.base::internal::RegisteredTaskSource"* %3 to i8*
  %7 = getelementptr inbounds %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor", %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::RegisteredTaskSource"** %7, align 8
  %9 = icmp eq %"class.base::internal::RegisteredTaskSource"* %8, %3
  br i1 %9, label %17, label %10

10:                                               ; preds = %5, %10
  %11 = phi %"class.base::internal::RegisteredTaskSource"* [ %12, %10 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"class.base::internal::RegisteredTaskSource", %"class.base::internal::RegisteredTaskSource"* %11, i64 -1
  tail call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* %12) #11
  %13 = icmp eq %"class.base::internal::RegisteredTaskSource"* %12, %3
  br i1 %13, label %14, label %10

14:                                               ; preds = %10
  %15 = bitcast %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* %0 to i8**
  %16 = load i8*, i8** %15, align 8
  br label %17

17:                                               ; preds = %14, %5
  %18 = phi i8* [ %16, %14 ], [ %6, %5 ]
  store %"class.base::internal::RegisteredTaskSource"* %3, %"class.base::internal::RegisteredTaskSource"** %7, align 8
  tail call void @_ZdlPv(i8* %18) #12
  br label %19

19:                                               ; preds = %1, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11ThreadGroup23ScopedReenqueueExecutorC2Ev(%"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor", %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor", %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast %union.anon.56* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11ThreadGroup23ScopedReenqueueExecutorD2Ev(%"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"*) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.base::internal::TransactionWithRegisteredTaskSource", align 8
  %3 = getelementptr inbounds %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor", %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"* %0, i64 0, i32 1
  %4 = load %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"** %3, align 8
  %5 = icmp eq %"class.base::internal::ThreadGroup"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor", %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #13
  unreachable

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"struct.base::internal::TransactionWithRegisteredTaskSource", %"struct.base::internal::TransactionWithRegisteredTaskSource"* %2, i64 0, i32 0
  %13 = getelementptr inbounds %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor", %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"* nonnull %12, %"class.base::internal::RegisteredTaskSource"* dereferenceable(16) %13) #11
  %14 = getelementptr inbounds %"struct.base::internal::TransactionWithRegisteredTaskSource", %"struct.base::internal::TransactionWithRegisteredTaskSource"* %2, i64 0, i32 1
  %15 = getelementptr inbounds %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor", %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @_ZN4base8internal10TaskSource11TransactionC1EOS2_(%"class.base::internal::TaskSource::Transaction"* %14, %"class.base::internal::TaskSource::Transaction"* dereferenceable(8) %15) #11
  %16 = bitcast %"class.base::internal::ThreadGroup"* %4 to void (%"class.base::internal::ThreadGroup"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)***
  %17 = load void (%"class.base::internal::ThreadGroup"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)**, void (%"class.base::internal::ThreadGroup"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)*, void (%"class.base::internal::ThreadGroup"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)** %17, i64 3
  %19 = load void (%"class.base::internal::ThreadGroup"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)*, void (%"class.base::internal::ThreadGroup"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)** %18, align 8
  call void %19(%"class.base::internal::ThreadGroup"* nonnull %4, %"struct.base::internal::TransactionWithRegisteredTaskSource"* nonnull %2) #11
  call void @_ZN4base8internal10TaskSource11TransactionD1Ev(%"class.base::internal::TaskSource::Transaction"* %14) #11
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %12) #11
  br label %20

20:                                               ; preds = %1, %11
  %21 = getelementptr inbounds %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor", %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor", %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @_ZN4base8internal10TaskSource11TransactionD1Ev(%"class.base::internal::TaskSource::Transaction"* %25) #11
  %26 = getelementptr inbounds %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor", %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* %26) #11
  store i8 0, i8* %21, align 8
  br label %27

27:                                               ; preds = %20, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11ThreadGroup23ScopedReenqueueExecutor38SchedulePushTaskSourceAndWakeUpWorkersENS0_35TransactionWithRegisteredTaskSourceEPS1_(%"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*, %"class.base::internal::ThreadGroup"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor", %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor", %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  tail call void @_ZN4base8internal10TaskSource11TransactionD1Ev(%"class.base::internal::TaskSource::Transaction"* %8) #11
  %9 = getelementptr inbounds %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor", %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* %9) #11
  store i8 0, i8* %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = getelementptr inbounds %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor", %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.base::internal::TransactionWithRegisteredTaskSource", %"struct.base::internal::TransactionWithRegisteredTaskSource"* %1, i64 0, i32 0
  tail call void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"* %11, %"class.base::internal::RegisteredTaskSource"* dereferenceable(16) %12) #11
  %13 = getelementptr inbounds %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor", %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %14 = getelementptr inbounds %"struct.base::internal::TransactionWithRegisteredTaskSource", %"struct.base::internal::TransactionWithRegisteredTaskSource"* %1, i64 0, i32 1
  tail call void @_ZN4base8internal10TaskSource11TransactionC1EOS2_(%"class.base::internal::TaskSource::Transaction"* %13, %"class.base::internal::TaskSource::Transaction"* dereferenceable(8) %14) #11
  store i8 1, i8* %4, align 8
  %15 = getelementptr inbounds %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor", %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"* %0, i64 0, i32 1
  store %"class.base::internal::ThreadGroup"* %2, %"class.base::internal::ThreadGroup"** %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11ThreadGroupC2ENS0_10TrackedRefINS0_11TaskTrackerEEENS2_INS1_8DelegateEEEPS1_(%"class.base::internal::ThreadGroup"*, %"class.base::internal::TrackedRef"* nocapture, %"class.base::internal::TrackedRef.59"* nocapture, %"class.base::internal::ThreadGroup"* readnone) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN4base8internal11ThreadGroupE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 1
  %7 = bitcast %"class.base::internal::TrackedRef"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::internal::TrackedRef"* %6 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 1, i32 1
  %11 = getelementptr inbounds %"class.base::internal::TrackedRef", %"class.base::internal::TrackedRef"* %1, i64 0, i32 1
  %12 = bitcast %"class.base::internal::TrackedRefFactory"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::internal::TrackedRefFactory"** %10 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::TrackedRefFactory"* null, %"class.base::internal::TrackedRefFactory"** %11, align 8
  %15 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 2
  %16 = bitcast %"class.base::internal::TrackedRef.59"* %2 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.base::internal::TrackedRef.59"* %15 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 2, i32 1
  %20 = getelementptr inbounds %"class.base::internal::TrackedRef.59", %"class.base::internal::TrackedRef.59"* %2, i64 0, i32 1
  %21 = bitcast %"class.base::internal::TrackedRefFactory.60"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.base::internal::TrackedRefFactory.60"** %19 to i64*
  store i64 %22, i64* %23, align 8
  store %"class.base::internal::TrackedRefFactory.60"* null, %"class.base::internal::TrackedRefFactory.60"** %20, align 8
  %24 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 3, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %24) #11
  %25 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 4
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 6
  tail call void @_ZN4base8internal13PriorityQueueC1Ev(%"class.base::internal::PriorityQueue"* %26) #11
  %27 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 7
  %28 = bitcast %"struct.std::__1::atomic.69"* %27 to i16*
  store i16 0, i16* %28, align 2
  %29 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 8
  store %"class.base::internal::ThreadGroup"* null, %"class.base::internal::ThreadGroup"** %29, align 8
  ret void
}

declare void @_ZN4base8internal13PriorityQueueC1Ev(%"class.base::internal::PriorityQueue"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11ThreadGroupD2Ev(%"class.base::internal::ThreadGroup"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN4base8internal11ThreadGroupE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 6
  tail call void @_ZN4base8internal13PriorityQueueD1Ev(%"class.base::internal::PriorityQueue"* %3) #11
  %4 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 3, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %4) #11
  %5 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 2, i32 1
  %6 = load %"class.base::internal::TrackedRefFactory.60"*, %"class.base::internal::TrackedRefFactory.60"** %5, align 8
  %7 = icmp eq %"class.base::internal::TrackedRefFactory.60"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.60", %"class.base::internal::TrackedRefFactory.60"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %20

12:                                               ; preds = %8
  %13 = load %"class.base::internal::TrackedRefFactory.60"*, %"class.base::internal::TrackedRefFactory.60"** %5, align 8
  %14 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.60", %"class.base::internal::TrackedRefFactory.60"* %13, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %18, !prof !3

17:                                               ; preds = %12
  tail call void @llvm.trap() #11
  unreachable

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.60", %"class.base::internal::TrackedRefFactory.60"* %13, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %19) #11
  br label %20

20:                                               ; preds = %1, %8, %18
  %21 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 1, i32 1
  %22 = load %"class.base::internal::TrackedRefFactory"*, %"class.base::internal::TrackedRefFactory"** %21, align 8
  %23 = icmp eq %"class.base::internal::TrackedRefFactory"* %22, null
  br i1 %23, label %36, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw sub i32* %25, i32 1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %36

28:                                               ; preds = %24
  %29 = load %"class.base::internal::TrackedRefFactory"*, %"class.base::internal::TrackedRefFactory"** %21, align 8
  %30 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %29, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %34, !prof !3

33:                                               ; preds = %28
  tail call void @llvm.trap() #11
  unreachable

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %29, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %35) #11
  br label %36

36:                                               ; preds = %20, %24, %34
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal13PriorityQueueD1Ev(%"class.base::internal::PriorityQueue"*) unnamed_addr #3

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN4base8internal11ThreadGroupD0Ev(%"class.base::internal::ThreadGroup"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11ThreadGroup19BindToCurrentThreadEv(%"class.base::internal::ThreadGroup"*) local_unnamed_addr #0 align 2 {
  %2 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_124tls_current_thread_groupE, i64 0, i32 0) acquire, align 8
  %3 = icmp ugt i64 %2, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_124tls_current_thread_groupE, i64 0, i32 0)) #11
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_124tls_current_thread_groupE, i64 0, i32 1, i64 0) to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_124tls_current_thread_groupE, i64 0, i32 1, i64 0) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #11
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_124tls_current_thread_groupE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_124tls_current_thread_groupE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_124tls_current_thread_groupE to i8*)) #11
  br label %9

7:                                                ; preds = %4
  %8 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_124tls_current_thread_groupE, i64 0, i32 0) acquire, align 8
  br label %9

9:                                                ; preds = %1, %6, %7
  %10 = phi i64 [ %2, %1 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_124tls_current_thread_groupE, i64 0, i32 1, i64 0) to i64), %6 ], [ %8, %7 ]
  %11 = inttoptr i64 %10 to %"class.base::ThreadLocalPointer"*
  %12 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %11, i64 0, i32 0
  %13 = bitcast %"class.base::internal::ThreadGroup"* %0 to i8*
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %12, i8* %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11ThreadGroup23UnbindFromCurrentThreadEv(%"class.base::internal::ThreadGroup"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %2 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_124tls_current_thread_groupE, i64 0, i32 0) acquire, align 8
  %3 = icmp ugt i64 %2, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_124tls_current_thread_groupE, i64 0, i32 0)) #11
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_124tls_current_thread_groupE, i64 0, i32 1, i64 0) to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_124tls_current_thread_groupE, i64 0, i32 1, i64 0) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #11
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_124tls_current_thread_groupE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_124tls_current_thread_groupE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_124tls_current_thread_groupE to i8*)) #11
  br label %9

7:                                                ; preds = %4
  %8 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_124tls_current_thread_groupE, i64 0, i32 0) acquire, align 8
  br label %9

9:                                                ; preds = %1, %6, %7
  %10 = phi i64 [ %2, %1 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_124tls_current_thread_groupE, i64 0, i32 1, i64 0) to i64), %6 ], [ %8, %7 ]
  %11 = inttoptr i64 %10 to %"class.base::ThreadLocalPointer"*
  %12 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %11, i64 0, i32 0
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %12, i8* null) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base8internal11ThreadGroup22IsBoundToCurrentThreadEv(%"class.base::internal::ThreadGroup"* readnone) local_unnamed_addr #0 align 2 {
  %2 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_124tls_current_thread_groupE, i64 0, i32 0) acquire, align 8
  %3 = icmp ugt i64 %2, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_124tls_current_thread_groupE, i64 0, i32 0)) #11
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_124tls_current_thread_groupE, i64 0, i32 1, i64 0) to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_124tls_current_thread_groupE, i64 0, i32 1, i64 0) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #11
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_124tls_current_thread_groupE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_124tls_current_thread_groupE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_124tls_current_thread_groupE to i8*)) #11
  br label %9

7:                                                ; preds = %4
  %8 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_124tls_current_thread_groupE, i64 0, i32 0) acquire, align 8
  br label %9

9:                                                ; preds = %1, %6, %7
  %10 = phi i64 [ %2, %1 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_124tls_current_thread_groupE, i64 0, i32 1, i64 0) to i64), %6 ], [ %8, %7 ]
  %11 = inttoptr i64 %10 to %"class.base::ThreadLocalPointer"*
  %12 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %11, i64 0, i32 0
  %13 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %12) #11
  %14 = bitcast i8* %13 to %"class.base::internal::ThreadGroup"*
  %15 = icmp eq %"class.base::internal::ThreadGroup"* %14, %0
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11ThreadGroup5StartEv(%"class.base::internal::ThreadGroup"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #11
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !4

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %2, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN4base25kDisableFairJobSchedulingE) #11
  %10 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 4
  %11 = zext i1 %9 to i8
  store i8 %11, i8* %10, align 8
  %12 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK4base8internal11ThreadGroup59GetNumAdditionalWorkersForBestEffortTaskSourcesLockRequiredEv(%"class.base::internal::ThreadGroup"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 6
  %3 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 6, i32 1, i32 0, i64 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %28, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 1, i32 0
  %8 = load %"class.base::internal::TaskTracker"*, %"class.base::internal::TaskTracker"** %7, align 8
  %9 = tail call zeroext i1 @_ZNK4base8internal11TaskTracker14CanRunPriorityENS_12TaskPriorityE(%"class.base::internal::TaskTracker"* %8, i8 zeroext 0) #11
  br i1 %9, label %10, label %28

10:                                               ; preds = %6
  %11 = tail call dereferenceable(16) %"class.base::internal::TaskSourceSortKey"* @_ZNK4base8internal13PriorityQueue11PeekSortKeyEv(%"class.base::internal::PriorityQueue"* %2) #11
  %12 = getelementptr inbounds %"class.base::internal::TaskSourceSortKey", %"class.base::internal::TaskSourceSortKey"* %11, i64 0, i32 0
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %28

15:                                               ; preds = %10
  %16 = tail call dereferenceable(16) %"class.base::internal::RegisteredTaskSource"* @_ZNK4base8internal13PriorityQueue14PeekTaskSourceEv(%"class.base::internal::PriorityQueue"* %2) #11
  %17 = getelementptr inbounds %"class.base::internal::RegisteredTaskSource", %"class.base::internal::RegisteredTaskSource"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %17, align 8
  %19 = bitcast %"class.base::internal::TaskSource"* %18 to i64 (%"class.base::internal::TaskSource"*)***
  %20 = load i64 (%"class.base::internal::TaskSource"*)**, i64 (%"class.base::internal::TaskSource"*)*** %19, align 8
  %21 = getelementptr inbounds i64 (%"class.base::internal::TaskSource"*)*, i64 (%"class.base::internal::TaskSource"*)** %20, i64 1
  %22 = load i64 (%"class.base::internal::TaskSource"*)*, i64 (%"class.base::internal::TaskSource"*)** %21, align 8
  %23 = tail call i64 %22(%"class.base::internal::TaskSource"* %18) #11
  %24 = add i64 %4, -1
  %25 = add i64 %24, %23
  %26 = icmp ugt i64 %25, 1
  %27 = select i1 %26, i64 %25, i64 1
  br label %28

28:                                               ; preds = %10, %1, %6, %15
  %29 = phi i64 [ %27, %15 ], [ 0, %6 ], [ 0, %1 ], [ %4, %10 ]
  ret i64 %29
}

declare zeroext i1 @_ZNK4base8internal11TaskTracker14CanRunPriorityENS_12TaskPriorityE(%"class.base::internal::TaskTracker"*, i8 zeroext) local_unnamed_addr #1

declare dereferenceable(16) %"class.base::internal::TaskSourceSortKey"* @_ZNK4base8internal13PriorityQueue11PeekSortKeyEv(%"class.base::internal::PriorityQueue"*) local_unnamed_addr #1

declare dereferenceable(16) %"class.base::internal::RegisteredTaskSource"* @_ZNK4base8internal13PriorityQueue14PeekTaskSourceEv(%"class.base::internal::PriorityQueue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK4base8internal11ThreadGroup59GetNumAdditionalWorkersForForegroundTaskSourcesLockRequiredEv(%"class.base::internal::ThreadGroup"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 6
  %3 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 6, i32 1, i32 0, i64 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 6, i32 1, i32 0, i64 2
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, %4
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %32, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 1, i32 0
  %11 = load %"class.base::internal::TaskTracker"*, %"class.base::internal::TaskTracker"** %10, align 8
  %12 = tail call zeroext i1 @_ZNK4base8internal11TaskTracker14CanRunPriorityENS_12TaskPriorityE(%"class.base::internal::TaskTracker"* %11, i8 zeroext 2) #11
  br i1 %12, label %13, label %32

13:                                               ; preds = %9
  %14 = tail call dereferenceable(16) %"class.base::internal::TaskSourceSortKey"* @_ZNK4base8internal13PriorityQueue11PeekSortKeyEv(%"class.base::internal::PriorityQueue"* %2) #11
  %15 = getelementptr inbounds %"class.base::internal::TaskSourceSortKey", %"class.base::internal::TaskSourceSortKey"* %14, i64 0, i32 0
  %16 = load i8, i8* %15, align 8
  %17 = add i8 %16, -1
  %18 = icmp ult i8 %17, 2
  br i1 %18, label %19, label %32

19:                                               ; preds = %13
  %20 = tail call dereferenceable(16) %"class.base::internal::RegisteredTaskSource"* @_ZNK4base8internal13PriorityQueue14PeekTaskSourceEv(%"class.base::internal::PriorityQueue"* %2) #11
  %21 = getelementptr inbounds %"class.base::internal::RegisteredTaskSource", %"class.base::internal::RegisteredTaskSource"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %21, align 8
  %23 = bitcast %"class.base::internal::TaskSource"* %22 to i64 (%"class.base::internal::TaskSource"*)***
  %24 = load i64 (%"class.base::internal::TaskSource"*)**, i64 (%"class.base::internal::TaskSource"*)*** %23, align 8
  %25 = getelementptr inbounds i64 (%"class.base::internal::TaskSource"*)*, i64 (%"class.base::internal::TaskSource"*)** %24, i64 1
  %26 = load i64 (%"class.base::internal::TaskSource"*)*, i64 (%"class.base::internal::TaskSource"*)** %25, align 8
  %27 = tail call i64 %26(%"class.base::internal::TaskSource"* %22) #11
  %28 = add i64 %7, -1
  %29 = add i64 %28, %27
  %30 = icmp ugt i64 %29, 1
  %31 = select i1 %30, i64 %29, i64 1
  br label %32

32:                                               ; preds = %19, %13, %1, %9
  %33 = phi i64 [ 0, %9 ], [ 0, %1 ], [ %31, %19 ], [ %7, %13 ]
  ret i64 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11ThreadGroup16RemoveTaskSourceERKNS0_10TaskSourceE(%"class.base::internal::RegisteredTaskSource"* noalias sret, %"class.base::internal::ThreadGroup"*, %"class.base::internal::TaskSource"* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %1, i64 0, i32 3
  %5 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %5) #11
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !4

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %4, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %9) #11
  br label %10

10:                                               ; preds = %3, %8
  %11 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %1, i64 0, i32 6
  tail call void @_ZN4base8internal13PriorityQueue16RemoveTaskSourceERKNS0_10TaskSourceE(%"class.base::internal::RegisteredTaskSource"* sret %0, %"class.base::internal::PriorityQueue"* %11, %"class.base::internal::TaskSource"* dereferenceable(96) %2) #11
  %12 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #11
  ret void
}

declare void @_ZN4base8internal13PriorityQueue16RemoveTaskSourceERKNS0_10TaskSourceE(%"class.base::internal::RegisteredTaskSource"* sret, %"class.base::internal::PriorityQueue"*, %"class.base::internal::TaskSource"* dereferenceable(96)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11ThreadGroup31ReEnqueueTaskSourceLockRequiredEPNS1_26BaseScopedCommandsExecutorEPNS1_23ScopedReenqueueExecutorENS0_35TransactionWithRegisteredTaskSourceE(%"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*, %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::TaskTraits", align 1
  %6 = alloca %"class.base::internal::RegisteredTaskSource", align 8
  %7 = alloca %"class.base::internal::RegisteredTaskSource", align 8
  %8 = alloca %"struct.base::internal::TransactionWithRegisteredTaskSource", align 8
  %9 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 2, i32 0
  %10 = load %"class.base::internal::ThreadGroup::Delegate"*, %"class.base::internal::ThreadGroup::Delegate"** %9, align 8
  %11 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"struct.base::internal::TransactionWithRegisteredTaskSource", %"struct.base::internal::TransactionWithRegisteredTaskSource"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.base::internal::TaskSource::Transaction", %"class.base::internal::TaskSource::Transaction"* %12, i64 0, i32 0
  %14 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %13, align 8, !noalias !5
  %15 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %14, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %11, i8* align 1 %15, i64 9, i1 false) #11
  %16 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 1
  %17 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %14, i64 0, i32 2, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %17, i64 6, i1 false) #11
  %18 = bitcast %"class.base::internal::ThreadGroup::Delegate"* %10 to %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadGroup::Delegate"*, %"class.base::TaskTraits"*)***
  %19 = load %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadGroup::Delegate"*, %"class.base::TaskTraits"*)**, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadGroup::Delegate"*, %"class.base::TaskTraits"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadGroup::Delegate"*, %"class.base::TaskTraits"*)*, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadGroup::Delegate"*, %"class.base::TaskTraits"*)** %19, i64 2
  %21 = load %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadGroup::Delegate"*, %"class.base::TaskTraits"*)*, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadGroup::Delegate"*, %"class.base::TaskTraits"*)** %20, align 8
  %22 = call %"class.base::internal::ThreadGroup"* %21(%"class.base::internal::ThreadGroup::Delegate"* %10, %"class.base::TaskTraits"* nonnull dereferenceable(15) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %11) #11
  %23 = icmp eq %"class.base::internal::ThreadGroup"* %22, %0
  br i1 %23, label %24, label %61

24:                                               ; preds = %4
  %25 = getelementptr inbounds %"struct.base::internal::TransactionWithRegisteredTaskSource", %"struct.base::internal::TransactionWithRegisteredTaskSource"* %3, i64 0, i32 0
  %26 = getelementptr inbounds %"struct.base::internal::TransactionWithRegisteredTaskSource", %"struct.base::internal::TransactionWithRegisteredTaskSource"* %3, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %26, align 8
  %28 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %27, i64 0, i32 6, i32 0
  %29 = load i64, i64* %28, align 8, !noalias !8
  %30 = icmp eq i64 %29, -1
  br i1 %30, label %43, label %31

31:                                               ; preds = %24
  call void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"* nonnull %6, %"class.base::internal::RegisteredTaskSource"* dereferenceable(16) %25) #11
  %32 = getelementptr inbounds %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor", %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* %1, i64 0, i32 0, i32 0, i32 1
  %33 = load %"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::RegisteredTaskSource"** %32, align 8
  %34 = getelementptr inbounds %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor", %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %35 = load %"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::RegisteredTaskSource"** %34, align 8
  %36 = icmp ult %"class.base::internal::RegisteredTaskSource"* %33, %35
  br i1 %36, label %37, label %41

37:                                               ; preds = %31
  call void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"* %33, %"class.base::internal::RegisteredTaskSource"* nonnull dereferenceable(16) %6) #11
  %38 = getelementptr inbounds %"class.base::internal::RegisteredTaskSource", %"class.base::internal::RegisteredTaskSource"* %33, i64 1
  %39 = ptrtoint %"class.base::internal::RegisteredTaskSource"* %38 to i64
  %40 = bitcast %"class.base::internal::RegisteredTaskSource"** %32 to i64*
  store i64 %39, i64* %40, align 8
  br label %55

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor", %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* %1, i64 0, i32 0
  call void @_ZNSt3__16vectorIN4base8internal20RegisteredTaskSourceENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %42, %"class.base::internal::RegisteredTaskSource"* nonnull dereferenceable(16) %6) #11
  br label %55

43:                                               ; preds = %24
  %44 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 4
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp ne i8 %45, 0
  %47 = bitcast %"class.base::internal::TaskSource"* %27 to { i64, i64 } (%"class.base::internal::TaskSource"*, i1)***
  %48 = load { i64, i64 } (%"class.base::internal::TaskSource"*, i1)**, { i64, i64 } (%"class.base::internal::TaskSource"*, i1)*** %47, align 8
  %49 = getelementptr inbounds { i64, i64 } (%"class.base::internal::TaskSource"*, i1)*, { i64, i64 } (%"class.base::internal::TaskSource"*, i1)** %48, i64 2
  %50 = load { i64, i64 } (%"class.base::internal::TaskSource"*, i1)*, { i64, i64 } (%"class.base::internal::TaskSource"*, i1)** %49, align 8
  %51 = call { i64, i64 } %50(%"class.base::internal::TaskSource"* %27, i1 zeroext %46) #11
  %52 = extractvalue { i64, i64 } %51, 0
  %53 = extractvalue { i64, i64 } %51, 1
  %54 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 6
  call void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"* nonnull %7, %"class.base::internal::RegisteredTaskSource"* dereferenceable(16) %25) #11
  call void @_ZN4base8internal13PriorityQueue4PushENS0_20RegisteredTaskSourceENS0_17TaskSourceSortKeyE(%"class.base::internal::PriorityQueue"* %54, %"class.base::internal::RegisteredTaskSource"* nonnull %7, i64 %52, i64 %53) #11
  br label %55

55:                                               ; preds = %41, %37, %43
  %56 = phi %"class.base::internal::RegisteredTaskSource"* [ %7, %43 ], [ %6, %37 ], [ %6, %41 ]
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %56) #11
  %57 = bitcast %"class.base::internal::ThreadGroup"* %0 to void (%"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)***
  %58 = load void (%"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)**, void (%"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)*, void (%"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)** %58, i64 7
  %60 = load void (%"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)*, void (%"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)** %59, align 8
  call void %60(%"class.base::internal::ThreadGroup"* %0, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* %1) #11
  br label %75

61:                                               ; preds = %4
  %62 = getelementptr inbounds %"struct.base::internal::TransactionWithRegisteredTaskSource", %"struct.base::internal::TransactionWithRegisteredTaskSource"* %8, i64 0, i32 0
  %63 = getelementptr inbounds %"struct.base::internal::TransactionWithRegisteredTaskSource", %"struct.base::internal::TransactionWithRegisteredTaskSource"* %3, i64 0, i32 0
  call void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"* nonnull %62, %"class.base::internal::RegisteredTaskSource"* dereferenceable(16) %63) #11
  %64 = getelementptr inbounds %"struct.base::internal::TransactionWithRegisteredTaskSource", %"struct.base::internal::TransactionWithRegisteredTaskSource"* %8, i64 0, i32 1
  call void @_ZN4base8internal10TaskSource11TransactionC1EOS2_(%"class.base::internal::TaskSource::Transaction"* %64, %"class.base::internal::TaskSource::Transaction"* dereferenceable(8) %12) #11
  %65 = getelementptr inbounds %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor", %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor", %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @_ZN4base8internal10TaskSource11TransactionD1Ev(%"class.base::internal::TaskSource::Transaction"* %69) #11
  %70 = getelementptr inbounds %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor", %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* %70) #11
  store i8 0, i8* %65, align 8
  br label %71

71:                                               ; preds = %61, %68
  %72 = getelementptr inbounds %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor", %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"* %72, %"class.base::internal::RegisteredTaskSource"* nonnull dereferenceable(16) %62) #11
  %73 = getelementptr inbounds %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor", %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @_ZN4base8internal10TaskSource11TransactionC1EOS2_(%"class.base::internal::TaskSource::Transaction"* %73, %"class.base::internal::TaskSource::Transaction"* dereferenceable(8) %64) #11
  store i8 1, i8* %65, align 8
  %74 = getelementptr inbounds %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor", %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"* %2, i64 0, i32 1
  store %"class.base::internal::ThreadGroup"* %22, %"class.base::internal::ThreadGroup"** %74, align 8
  call void @_ZN4base8internal10TaskSource11TransactionD1Ev(%"class.base::internal::TaskSource::Transaction"* %64) #11
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %62) #11
  br label %75

75:                                               ; preds = %71, %55
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::RegisteredTaskSource"* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"*) unnamed_addr #3

declare void @_ZN4base8internal13PriorityQueue4PushENS0_20RegisteredTaskSourceENS0_17TaskSourceSortKeyE(%"class.base::internal::PriorityQueue"*, %"class.base::internal::RegisteredTaskSource"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11ThreadGroup24TakeRegisteredTaskSourceEPNS1_26BaseScopedCommandsExecutorE(%"class.base::internal::RegisteredTaskSource"* noalias sret, %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::internal::RegisteredTaskSource", align 8
  %5 = alloca %"class.base::internal::RegisteredTaskSource", align 8
  %6 = alloca %"class.base::internal::RegisteredTaskSource", align 8
  %7 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %1, i64 0, i32 6
  %8 = tail call dereferenceable(16) %"class.base::internal::RegisteredTaskSource"* @_ZNK4base8internal13PriorityQueue14PeekTaskSourceEv(%"class.base::internal::PriorityQueue"* %7) #11
  %9 = tail call i32 @_ZN4base8internal20RegisteredTaskSource11WillRunTaskEv(%"class.base::internal::RegisteredTaskSource"* %8) #11
  switch i32 %9, label %24 [
    i32 0, label %10
    i32 2, label %23
  ]

10:                                               ; preds = %3
  call void @_ZN4base8internal13PriorityQueue13PopTaskSourceEv(%"class.base::internal::RegisteredTaskSource"* nonnull sret %5, %"class.base::internal::PriorityQueue"* %7) #11
  %11 = getelementptr inbounds %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor", %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* %2, i64 0, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::RegisteredTaskSource"** %11, align 8
  %13 = getelementptr inbounds %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor", %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %14 = load %"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::RegisteredTaskSource"** %13, align 8
  %15 = icmp ult %"class.base::internal::RegisteredTaskSource"* %12, %14
  br i1 %15, label %16, label %20

16:                                               ; preds = %10
  call void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"* %12, %"class.base::internal::RegisteredTaskSource"* nonnull dereferenceable(16) %5) #11
  %17 = getelementptr inbounds %"class.base::internal::RegisteredTaskSource", %"class.base::internal::RegisteredTaskSource"* %12, i64 1
  %18 = ptrtoint %"class.base::internal::RegisteredTaskSource"* %17 to i64
  %19 = bitcast %"class.base::internal::RegisteredTaskSource"** %11 to i64*
  store i64 %18, i64* %19, align 8
  br label %22

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor", %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* %2, i64 0, i32 0
  call void @_ZNSt3__16vectorIN4base8internal20RegisteredTaskSourceENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %21, %"class.base::internal::RegisteredTaskSource"* nonnull dereferenceable(16) %5) #11
  br label %22

22:                                               ; preds = %16, %20
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %5) #11
  call void @_ZN4base8internal20RegisteredTaskSourceC1EDn(%"class.base::internal::RegisteredTaskSource"* %0, i8* null) #11
  br label %60

23:                                               ; preds = %3
  tail call void @_ZN4base8internal13PriorityQueue13PopTaskSourceEv(%"class.base::internal::RegisteredTaskSource"* sret %0, %"class.base::internal::PriorityQueue"* %7) #11
  br label %60

24:                                               ; preds = %3
  %25 = bitcast %"class.base::internal::RegisteredTaskSource"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"class.base::internal::RegisteredTaskSource", %"class.base::internal::RegisteredTaskSource"* %6, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %1, i64 0, i32 1, i32 0
  %28 = bitcast %"class.base::internal::RegisteredTaskSource"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 16, i1 false)
  %29 = load %"class.base::internal::TaskTracker"*, %"class.base::internal::TaskTracker"** %27, align 8
  %30 = tail call dereferenceable(16) %"class.base::internal::RegisteredTaskSource"* @_ZNK4base8internal13PriorityQueue14PeekTaskSourceEv(%"class.base::internal::PriorityQueue"* %7) #11
  %31 = getelementptr inbounds %"class.base::internal::RegisteredTaskSource", %"class.base::internal::RegisteredTaskSource"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %31, align 8
  %33 = icmp eq %"class.base::internal::TaskSource"* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %32, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 1 monotonic
  br label %37

37:                                               ; preds = %24, %34
  call void @_ZN4base8internal11TaskTracker18RegisterTaskSourceE13scoped_refptrINS0_10TaskSourceEE(%"class.base::internal::RegisteredTaskSource"* nonnull sret %6, %"class.base::internal::TaskTracker"* %29, %"class.base::internal::TaskSource"* %32) #11
  %38 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %26, align 8
  %39 = icmp eq %"class.base::internal::TaskSource"* %38, null
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @_ZN4base8internal13PriorityQueue13PopTaskSourceEv(%"class.base::internal::RegisteredTaskSource"* sret %0, %"class.base::internal::PriorityQueue"* %7) #11
  br label %59

41:                                               ; preds = %37
  %42 = call dereferenceable(16) %"class.base::internal::RegisteredTaskSource"* @_ZNK4base8internal13PriorityQueue14PeekTaskSourceEv(%"class.base::internal::PriorityQueue"* %7) #11
  %43 = bitcast %"class.base::internal::RegisteredTaskSource"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 16, i1 false) #11
  call void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"* nonnull %4, %"class.base::internal::RegisteredTaskSource"* dereferenceable(16) %42) #11
  %44 = call dereferenceable(16) %"class.base::internal::RegisteredTaskSource"* @_ZN4base8internal20RegisteredTaskSourceaSEOS1_(%"class.base::internal::RegisteredTaskSource"* %42, %"class.base::internal::RegisteredTaskSource"* nonnull dereferenceable(16) %6) #11
  %45 = call dereferenceable(16) %"class.base::internal::RegisteredTaskSource"* @_ZN4base8internal20RegisteredTaskSourceaSEOS1_(%"class.base::internal::RegisteredTaskSource"* nonnull %6, %"class.base::internal::RegisteredTaskSource"* nonnull dereferenceable(16) %4) #11
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #11
  %46 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %1, i64 0, i32 4
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %58

49:                                               ; preds = %41
  %50 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %26, align 8
  %51 = bitcast %"class.base::internal::TaskSource"* %50 to { i64, i64 } (%"class.base::internal::TaskSource"*, i1)***
  %52 = load { i64, i64 } (%"class.base::internal::TaskSource"*, i1)**, { i64, i64 } (%"class.base::internal::TaskSource"*, i1)*** %51, align 8
  %53 = getelementptr inbounds { i64, i64 } (%"class.base::internal::TaskSource"*, i1)*, { i64, i64 } (%"class.base::internal::TaskSource"*, i1)** %52, i64 2
  %54 = load { i64, i64 } (%"class.base::internal::TaskSource"*, i1)*, { i64, i64 } (%"class.base::internal::TaskSource"*, i1)** %53, align 8
  %55 = call { i64, i64 } %54(%"class.base::internal::TaskSource"* %50, i1 zeroext false) #11
  %56 = extractvalue { i64, i64 } %55, 0
  %57 = extractvalue { i64, i64 } %55, 1
  call void @_ZN4base8internal13PriorityQueue13UpdateSortKeyERKNS0_10TaskSourceENS0_17TaskSourceSortKeyE(%"class.base::internal::PriorityQueue"* %7, %"class.base::internal::TaskSource"* dereferenceable(96) %50, i64 %56, i64 %57) #11
  br label %58

58:                                               ; preds = %41, %49
  call void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"* %0, %"class.base::internal::RegisteredTaskSource"* nonnull dereferenceable(16) %6) #11
  br label %59

59:                                               ; preds = %58, %40
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #11
  br label %60

60:                                               ; preds = %59, %23, %22
  ret void
}

declare i32 @_ZN4base8internal20RegisteredTaskSource11WillRunTaskEv(%"class.base::internal::RegisteredTaskSource"*) local_unnamed_addr #1

declare void @_ZN4base8internal13PriorityQueue13PopTaskSourceEv(%"class.base::internal::RegisteredTaskSource"* sret, %"class.base::internal::PriorityQueue"*) local_unnamed_addr #1

declare void @_ZN4base8internal20RegisteredTaskSourceC1EDn(%"class.base::internal::RegisteredTaskSource"*, i8*) unnamed_addr #1

declare void @_ZN4base8internal11TaskTracker18RegisterTaskSourceE13scoped_refptrINS0_10TaskSourceEE(%"class.base::internal::RegisteredTaskSource"* sret, %"class.base::internal::TaskTracker"*, %"class.base::internal::TaskSource"*) local_unnamed_addr #1

declare void @_ZN4base8internal13PriorityQueue13UpdateSortKeyERKNS0_10TaskSourceENS0_17TaskSourceSortKeyE(%"class.base::internal::PriorityQueue"*, %"class.base::internal::TaskSource"* dereferenceable(96), i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11ThreadGroup17UpdateSortKeyImplEPNS1_26BaseScopedCommandsExecutorENS0_10TaskSource11TransactionE(%"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*, %"class.base::internal::TaskSource::Transaction"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %5) #11
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !4

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %4, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %9) #11
  br label %10

10:                                               ; preds = %3, %8
  %11 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 6
  %12 = getelementptr inbounds %"class.base::internal::TaskSource::Transaction", %"class.base::internal::TaskSource::Transaction"* %2, i64 0, i32 0
  %13 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %12, align 8
  %14 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 4
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp ne i8 %15, 0
  %17 = bitcast %"class.base::internal::TaskSource"* %13 to { i64, i64 } (%"class.base::internal::TaskSource"*, i1)***
  %18 = load { i64, i64 } (%"class.base::internal::TaskSource"*, i1)**, { i64, i64 } (%"class.base::internal::TaskSource"*, i1)*** %17, align 8
  %19 = getelementptr inbounds { i64, i64 } (%"class.base::internal::TaskSource"*, i1)*, { i64, i64 } (%"class.base::internal::TaskSource"*, i1)** %18, i64 2
  %20 = load { i64, i64 } (%"class.base::internal::TaskSource"*, i1)*, { i64, i64 } (%"class.base::internal::TaskSource"*, i1)** %19, align 8
  %21 = tail call { i64, i64 } %20(%"class.base::internal::TaskSource"* %13, i1 zeroext %16) #11
  %22 = extractvalue { i64, i64 } %21, 0
  %23 = extractvalue { i64, i64 } %21, 1
  tail call void @_ZN4base8internal13PriorityQueue13UpdateSortKeyERKNS0_10TaskSourceENS0_17TaskSourceSortKeyE(%"class.base::internal::PriorityQueue"* %11, %"class.base::internal::TaskSource"* dereferenceable(96) %13, i64 %22, i64 %23) #11
  %24 = bitcast %"class.base::internal::ThreadGroup"* %0 to void (%"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)***
  %25 = load void (%"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)**, void (%"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)*, void (%"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)** %25, i64 7
  %27 = load void (%"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)*, void (%"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)** %26, align 8
  tail call void %27(%"class.base::internal::ThreadGroup"* %0, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* %1) #11
  %28 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11ThreadGroup34PushTaskSourceAndWakeUpWorkersImplEPNS1_26BaseScopedCommandsExecutorENS0_35TransactionWithRegisteredTaskSourceE(%"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::internal::RegisteredTaskSource", align 8
  %5 = alloca %"class.base::internal::RegisteredTaskSource", align 8
  %6 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %7) #11
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10, !prof !4

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %6, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %11) #11
  br label %12

12:                                               ; preds = %3, %10
  %13 = getelementptr inbounds %"struct.base::internal::TransactionWithRegisteredTaskSource", %"struct.base::internal::TransactionWithRegisteredTaskSource"* %2, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.base::internal::TransactionWithRegisteredTaskSource", %"struct.base::internal::TransactionWithRegisteredTaskSource"* %2, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %15, i64 0, i32 6, i32 0
  %17 = load i64, i64* %16, align 8, !noalias !11
  %18 = icmp eq i64 %17, -1
  br i1 %18, label %32, label %19

19:                                               ; preds = %12
  call void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"* nonnull %4, %"class.base::internal::RegisteredTaskSource"* dereferenceable(16) %13) #11
  %20 = getelementptr inbounds %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor", %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* %1, i64 0, i32 0, i32 0, i32 1
  %21 = load %"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::RegisteredTaskSource"** %20, align 8
  %22 = getelementptr inbounds %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor", %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %23 = load %"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::RegisteredTaskSource"** %22, align 8
  %24 = icmp ult %"class.base::internal::RegisteredTaskSource"* %21, %23
  br i1 %24, label %25, label %29

25:                                               ; preds = %19
  call void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"* %21, %"class.base::internal::RegisteredTaskSource"* nonnull dereferenceable(16) %4) #11
  %26 = getelementptr inbounds %"class.base::internal::RegisteredTaskSource", %"class.base::internal::RegisteredTaskSource"* %21, i64 1
  %27 = ptrtoint %"class.base::internal::RegisteredTaskSource"* %26 to i64
  %28 = bitcast %"class.base::internal::RegisteredTaskSource"** %20 to i64*
  store i64 %27, i64* %28, align 8
  br label %31

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor", %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* %1, i64 0, i32 0
  call void @_ZNSt3__16vectorIN4base8internal20RegisteredTaskSourceENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %30, %"class.base::internal::RegisteredTaskSource"* nonnull dereferenceable(16) %4) #11
  br label %31

31:                                               ; preds = %25, %29
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %4) #11
  br label %48

32:                                               ; preds = %12
  %33 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 4
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp ne i8 %34, 0
  %36 = bitcast %"class.base::internal::TaskSource"* %15 to { i64, i64 } (%"class.base::internal::TaskSource"*, i1)***
  %37 = load { i64, i64 } (%"class.base::internal::TaskSource"*, i1)**, { i64, i64 } (%"class.base::internal::TaskSource"*, i1)*** %36, align 8
  %38 = getelementptr inbounds { i64, i64 } (%"class.base::internal::TaskSource"*, i1)*, { i64, i64 } (%"class.base::internal::TaskSource"*, i1)** %37, i64 2
  %39 = load { i64, i64 } (%"class.base::internal::TaskSource"*, i1)*, { i64, i64 } (%"class.base::internal::TaskSource"*, i1)** %38, align 8
  %40 = tail call { i64, i64 } %39(%"class.base::internal::TaskSource"* %15, i1 zeroext %35) #11
  %41 = extractvalue { i64, i64 } %40, 0
  %42 = extractvalue { i64, i64 } %40, 1
  %43 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 6
  call void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"* nonnull %5, %"class.base::internal::RegisteredTaskSource"* dereferenceable(16) %13) #11
  call void @_ZN4base8internal13PriorityQueue4PushENS0_20RegisteredTaskSourceENS0_17TaskSourceSortKeyE(%"class.base::internal::PriorityQueue"* %43, %"class.base::internal::RegisteredTaskSource"* nonnull %5, i64 %41, i64 %42) #11
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %5) #11
  %44 = bitcast %"class.base::internal::ThreadGroup"* %0 to void (%"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)***
  %45 = load void (%"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)**, void (%"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)*, void (%"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)** %45, i64 7
  %47 = load void (%"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)*, void (%"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)** %46, align 8
  call void %47(%"class.base::internal::ThreadGroup"* %0, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* %1) #11
  br label %48

48:                                               ; preds = %32, %31
  %49 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11ThreadGroup52InvalidateAndHandoffAllTaskSourcesToOtherThreadGroupEPS1_(%"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #11
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %3, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #11
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %1, i64 0, i32 3
  %11 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %11) #11
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14, !prof !4

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %10, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %15) #11
  br label %16

16:                                               ; preds = %9, %14
  %17 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 6
  %18 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %1, i64 0, i32 6
  %19 = tail call dereferenceable(56) %"class.base::internal::PriorityQueue"* @_ZN4base8internal13PriorityQueueaSEOS1_(%"class.base::internal::PriorityQueue"* %18, %"class.base::internal::PriorityQueue"* dereferenceable(56) %17) #11
  %20 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 8
  store %"class.base::internal::ThreadGroup"* %1, %"class.base::internal::ThreadGroup"** %20, align 8
  %21 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #11
  %22 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #11
  ret void
}

declare dereferenceable(56) %"class.base::internal::PriorityQueue"* @_ZN4base8internal13PriorityQueueaSEOS1_(%"class.base::internal::PriorityQueue"*, %"class.base::internal::PriorityQueue"* dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base8internal11ThreadGroup11ShouldYieldENS0_17TaskSourceSortKeyE(%"class.base::internal::ThreadGroup"* nocapture, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = trunc i64 %1 to i8
  %5 = lshr i64 %1, 8
  %6 = trunc i64 %5 to i32
  %7 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 1, i32 0
  %8 = load %"class.base::internal::TaskTracker"*, %"class.base::internal::TaskTracker"** %7, align 8
  %9 = tail call zeroext i1 @_ZNK4base8internal11TaskTracker14CanRunPriorityENS_12TaskPriorityE(%"class.base::internal::TaskTracker"* %8, i8 zeroext %4) #11
  br i1 %9, label %10, label %30

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.base::internal::ThreadGroup", %"class.base::internal::ThreadGroup"* %0, i64 0, i32 7, i32 0
  %12 = bitcast %"struct.std::__1::__atomic_base.70"* %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = trunc i16 %13 to i8
  %15 = lshr i16 %13, 8
  %16 = icmp ugt i8 %4, %14
  %17 = icmp eq i8 %14, 0
  %18 = or i1 %16, %17
  br i1 %18, label %30, label %19

19:                                               ; preds = %10
  %20 = icmp eq i8 %4, %14
  br i1 %20, label %21, label %26

21:                                               ; preds = %19
  %22 = and i32 %6, 255
  %23 = add nuw nsw i16 %15, 1
  %24 = zext i16 %23 to i32
  %25 = icmp ugt i32 %22, %24
  br i1 %25, label %26, label %30

26:                                               ; preds = %21, %19
  %27 = atomicrmw xchg i16* %12, i16 0 monotonic
  %28 = trunc i16 %27 to i8
  %29 = icmp ne i8 %28, 0
  br label %30

30:                                               ; preds = %26, %10, %21, %3
  %31 = phi i1 [ true, %3 ], [ %29, %26 ], [ false, %10 ], [ false, %21 ]
  ret i1 %31
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN4base8internal10TaskSource11TransactionC1EOS2_(%"class.base::internal::TaskSource::Transaction"*, %"class.base::internal::TaskSource::Transaction"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal10TaskSource11TransactionD1Ev(%"class.base::internal::TaskSource::Transaction"*) unnamed_addr #3

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #1

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"*, void (i8*)*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base8internal20RegisteredTaskSourceENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"*, %"class.base::internal::RegisteredTaskSource"* dereferenceable(16)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::internal::RegisteredTaskSource"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::internal::RegisteredTaskSource"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.base::internal::RegisteredTaskSource"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.base::internal::RegisteredTaskSource"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.base::internal::RegisteredTaskSource", %"class.base::internal::RegisteredTaskSource"* %36, i64 %9
  %38 = getelementptr inbounds %"class.base::internal::RegisteredTaskSource", %"class.base::internal::RegisteredTaskSource"* %36, i64 %35
  %39 = ptrtoint %"class.base::internal::RegisteredTaskSource"* %38 to i64
  tail call void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"* %37, %"class.base::internal::RegisteredTaskSource"* dereferenceable(16) %1) #11
  %40 = getelementptr inbounds %"class.base::internal::RegisteredTaskSource", %"class.base::internal::RegisteredTaskSource"* %37, i64 1
  %41 = ptrtoint %"class.base::internal::RegisteredTaskSource"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %43 = load %"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::RegisteredTaskSource"** %42, align 8
  %44 = load %"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::RegisteredTaskSource"** %3, align 8
  %45 = icmp eq %"class.base::internal::RegisteredTaskSource"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"class.base::internal::RegisteredTaskSource"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"class.base::internal::RegisteredTaskSource"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"class.base::internal::RegisteredTaskSource"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"class.base::internal::RegisteredTaskSource", %"class.base::internal::RegisteredTaskSource"* %49, i64 -1
  %52 = getelementptr inbounds %"class.base::internal::RegisteredTaskSource", %"class.base::internal::RegisteredTaskSource"* %50, i64 -1
  tail call void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"* %51, %"class.base::internal::RegisteredTaskSource"* dereferenceable(16) %52) #11
  %53 = icmp eq %"class.base::internal::RegisteredTaskSource"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::RegisteredTaskSource"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"class.base::internal::RegisteredTaskSource"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"class.base::internal::RegisteredTaskSource"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"class.base::internal::RegisteredTaskSource"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"class.base::internal::RegisteredTaskSource"*
  %63 = icmp eq %"class.base::internal::RegisteredTaskSource"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"class.base::internal::RegisteredTaskSource"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"class.base::internal::RegisteredTaskSource", %"class.base::internal::RegisteredTaskSource"* %65, i64 -1
  tail call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* %66) #11
  %67 = icmp eq %"class.base::internal::RegisteredTaskSource"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #12
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #7

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #3

declare dereferenceable(16) %"class.base::internal::RegisteredTaskSource"* @_ZN4base8internal20RegisteredTaskSourceaSEOS1_(%"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::RegisteredTaskSource"* dereferenceable(16)) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4base8internal10TaskSource11Transaction6traitsEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4base8internal10TaskSource11Transaction6traitsEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK4base8internal10TaskSource11heap_handleEv: argument 0"}
!10 = distinct !{!10, !"_ZNK4base8internal10TaskSource11heap_handleEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK4base8internal10TaskSource11heap_handleEv: argument 0"}
!13 = distinct !{!13, !"_ZNK4base8internal10TaskSource11heap_handleEv"}
