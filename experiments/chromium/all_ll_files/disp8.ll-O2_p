; ModuleID = '../../third_party/nasm/x86/disp8.c'
source_filename = "../../third_party/nasm/x86/disp8.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.insn = type { i8*, [7 x i32], i32, i32, i32, i32, [5 x %struct.operand], %struct.extop*, i32, i32, i8, i8, i32, i32, i32, i32, [3 x i8], i32, i32, i8 }
%struct.operand = type { i64, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i16 }
%struct.extop = type { %struct.extop*, %union.anon, i64, i32, i32 }
%union.anon = type { %struct.anon.0 }
%struct.anon.0 = type { i64, i32, i32, i8 }

@get_disp8N.fv_n = internal unnamed_addr constant [2 x [2 x [3 x i8]]] [[2 x [3 x i8]] [[3 x i8] c"\10 @", [3 x i8] c"\04\04\04"], [2 x [3 x i8]] [[3 x i8] c"\10 @", [3 x i8] c"\08\08\08"]], align 1
@get_disp8N.hv_n = internal unnamed_addr constant [2 x [3 x i8]] [[3 x i8] c"\08\10 ", [3 x i8] c"\04\04\04"], align 1
@get_disp8N.dup_n = internal unnamed_addr constant [3 x i8] c"\08 @", align 1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @get_disp8N(%struct.insn* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.insn, %struct.insn* %0, i64 0, i32 16, i64 2
  %3 = load i8, i8* %2, align 2
  %4 = zext i8 %3 to i32
  %5 = and i32 %4, 16
  %6 = getelementptr inbounds %struct.insn, %struct.insn* %0, i64 0, i32 17
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %4, 5
  %9 = and i32 %8, 3
  %10 = getelementptr inbounds %struct.insn, %struct.insn* %0, i64 0, i32 16, i64 1
  %11 = load i8, i8* %10, align 1
  switch i32 %7, label %60 [
    i32 1, label %12
    i32 2, label %20
    i32 3, label %26
    i32 4, label %30
    i32 5, label %30
    i32 6, label %33
    i32 7, label %36
    i32 8, label %36
    i32 9, label %39
    i32 10, label %39
    i32 11, label %39
    i32 12, label %50
    i32 13, label %50
    i32 14, label %50
    i32 15, label %55
    i32 16, label %56
  ]

12:                                               ; preds = %1
  %13 = lshr i8 %11, 7
  %14 = zext i8 %13 to i64
  %15 = lshr exact i32 %5, 4
  %16 = zext i32 %15 to i64
  %17 = zext i32 %9 to i64
  %18 = getelementptr inbounds [2 x [2 x [3 x i8]]], [2 x [2 x [3 x i8]]]* @get_disp8N.fv_n, i64 0, i64 %14, i64 %16, i64 %17
  %19 = load i8, i8* %18, align 1
  br label %60

20:                                               ; preds = %1
  %21 = lshr exact i32 %5, 4
  %22 = zext i32 %21 to i64
  %23 = zext i32 %9 to i64
  %24 = getelementptr inbounds [2 x [3 x i8]], [2 x [3 x i8]]* @get_disp8N.hv_n, i64 0, i64 %22, i64 %23
  %25 = load i8, i8* %24, align 1
  br label %60

26:                                               ; preds = %1
  %27 = or i32 %8, 4
  %28 = shl i32 1, %27
  %29 = trunc i32 %28 to i8
  br label %60

30:                                               ; preds = %1, %1
  %31 = trunc i32 %7 to i8
  %32 = add nsw i8 %31, -3
  br label %60

33:                                               ; preds = %1
  %34 = icmp slt i8 %11, 0
  %35 = select i1 %34, i8 8, i8 4
  br label %60

36:                                               ; preds = %1, %1
  %37 = icmp eq i32 %7, 7
  %38 = select i1 %37, i8 4, i8 8
  br label %60

39:                                               ; preds = %1, %1, %1
  %40 = add nuw nsw i32 %9, 7
  %41 = lshr i8 %11, 7
  %42 = zext i8 %41 to i32
  %43 = add nuw nsw i32 %7, %42
  %44 = add nsw i32 %43, -3
  %45 = icmp ugt i32 %40, %44
  br i1 %45, label %46, label %60

46:                                               ; preds = %39
  %47 = add nsw i32 %43, -6
  %48 = shl i32 1, %47
  %49 = trunc i32 %48 to i8
  br label %60

50:                                               ; preds = %1, %1, %1
  %51 = sub nuw nsw i32 15, %7
  %52 = add nuw nsw i32 %51, %9
  %53 = shl i32 1, %52
  %54 = trunc i32 %53 to i8
  br label %60

55:                                               ; preds = %1
  br label %60

56:                                               ; preds = %1
  %57 = zext i32 %9 to i64
  %58 = getelementptr inbounds [3 x i8], [3 x i8]* @get_disp8N.dup_n, i64 0, i64 %57
  %59 = load i8, i8* %58, align 1
  br label %60

60:                                               ; preds = %39, %1, %46, %56, %55, %50, %36, %33, %30, %26, %20, %12
  %61 = phi i8 [ 0, %1 ], [ %59, %56 ], [ 16, %55 ], [ %54, %50 ], [ %49, %46 ], [ %38, %36 ], [ %35, %33 ], [ %32, %30 ], [ %29, %26 ], [ %25, %20 ], [ %19, %12 ], [ 0, %39 ]
  ret i8 %61
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @is_disp8n(%struct.operand* nocapture readonly, %struct.insn* nocapture readonly, i8* nocapture) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.operand, %struct.operand* %0, i64 0, i32 8
  %5 = load i64, i64* %4, align 8
  %6 = trunc i64 %5 to i32
  %7 = tail call zeroext i8 @get_disp8N(%struct.insn* %1)
  %8 = zext i8 %7 to i32
  %9 = icmp eq i8 %7, 0
  br i1 %9, label %20, label %10

10:                                               ; preds = %3
  %11 = add nsw i32 %8, -1
  %12 = and i32 %11, %6
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %20

14:                                               ; preds = %10
  %15 = sdiv i32 %6, %8
  %16 = add i32 %15, 128
  %17 = icmp ult i32 %16, 256
  %18 = trunc i32 %15 to i8
  %19 = select i1 %17, i8 %18, i8 0
  br label %20

20:                                               ; preds = %14, %3, %10
  %21 = phi i8 [ 0, %10 ], [ 0, %3 ], [ %19, %14 ]
  %22 = phi i1 [ false, %10 ], [ false, %3 ], [ %17, %14 ]
  store i8 %21, i8* %2, align 1
  ret i1 %22
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
