; ModuleID = '../../base/process/process_linux.cc'
source_filename = "../../base/process/process_linux.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%"class.base::Process" = type { i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

@_ZZN4base7Process22CanBackgroundProcessesEvE20can_reraise_priority = internal global i8 0, align 1
@_ZGVZN4base7Process22CanBackgroundProcessesEvE20can_reraise_priority = internal global i64 0, align 8
@.str = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK4base7Process12CreationTimeEv(%"class.base::Process"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = tail call zeroext i1 @_ZNK4base7Process10is_currentEv(%"class.base::Process"* %0) #6
  br i1 %3, label %4, label %6

4:                                                ; preds = %1
  %5 = tail call i64 @_ZN4base8internal35ReadProcSelfStatsAndGetFieldAsInt64ENS0_15ProcStatsFieldsE(i32 21) #6
  br label %9

6:                                                ; preds = %1
  %7 = tail call i32 @_ZNK4base7Process3PidEv(%"class.base::Process"* %0) #6
  %8 = tail call i64 @_ZN4base8internal31ReadProcStatsAndGetFieldAsInt64EiNS0_15ProcStatsFieldsE(i32 %7, i32 21) #6
  br label %9

9:                                                ; preds = %6, %4
  %10 = phi i64 [ %5, %4 ], [ %8, %6 ]
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %35, label %12

12:                                               ; preds = %9
  %13 = trunc i64 %10 to i32
  %14 = tail call i64 @_ZN4base8internal21ClockTicksToTimeDeltaEi(i32 %13) #6
  %15 = tail call i64 @_ZN4base8internal11GetBootTimeEv() #6
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %35, label %17

17:                                               ; preds = %12
  %18 = add i64 %14, -9223372036854775807
  %19 = icmp ult i64 %18, 2
  br i1 %19, label %27, label %20

20:                                               ; preds = %17
  %21 = icmp slt i64 %14, 0
  %22 = select i1 %21, i64 -9223372036854775808, i64 9223372036854775807
  %23 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %15, i64 %14) #6
  %24 = extractvalue { i64, i1 } %23, 1
  %25 = extractvalue { i64, i1 } %23, 0
  %26 = select i1 %24, i64 %22, i64 %25, !prof !2
  br label %35

27:                                               ; preds = %17
  %28 = add i64 %15, -9223372036854775807
  %29 = icmp ugt i64 %28, 1
  %30 = icmp eq i64 %15, %14
  %31 = or i1 %30, %29
  br i1 %31, label %35, label %32

32:                                               ; preds = %27
  %33 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #6
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #6
  br label %35

35:                                               ; preds = %12, %20, %27, %32, %9
  %36 = phi i64 [ 0, %9 ], [ 0, %12 ], [ %26, %20 ], [ %14, %27 ], [ %14, %32 ]
  ret i64 %36
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK4base7Process10is_currentEv(%"class.base::Process"*) local_unnamed_addr #2

declare i64 @_ZN4base8internal35ReadProcSelfStatsAndGetFieldAsInt64ENS0_15ProcStatsFieldsE(i32) local_unnamed_addr #2

declare i64 @_ZN4base8internal31ReadProcStatsAndGetFieldAsInt64EiNS0_15ProcStatsFieldsE(i32, i32) local_unnamed_addr #2

declare i32 @_ZNK4base7Process3PidEv(%"class.base::Process"*) local_unnamed_addr #2

declare i64 @_ZN4base8internal21ClockTicksToTimeDeltaEi(i32) local_unnamed_addr #2

declare i64 @_ZN4base8internal11GetBootTimeEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base7Process22CanBackgroundProcessesEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base7Process22CanBackgroundProcessesEvE20can_reraise_priority to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %10, !prof !3

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base7Process22CanBackgroundProcessesEvE20can_reraise_priority) #6
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = tail call zeroext i1 @_ZN4base8internal14CanLowerNiceToEi(i32 0) #6
  %8 = zext i1 %7 to i8
  store i8 %8, i8* @_ZZN4base7Process22CanBackgroundProcessesEvE20can_reraise_priority, align 1
  %9 = tail call {}* @llvm.invariant.start.p0i8(i64 1, i8* nonnull @_ZZN4base7Process22CanBackgroundProcessesEvE20can_reraise_priority)
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base7Process22CanBackgroundProcessesEvE20can_reraise_priority) #6
  br label %10

10:                                               ; preds = %3, %6, %0
  %11 = load i8, i8* @_ZZN4base7Process22CanBackgroundProcessesEvE20can_reraise_priority, align 1, !range !4
  %12 = icmp ne i8 %11, 0
  ret i1 %12
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #3

declare zeroext i1 @_ZN4base8internal14CanLowerNiceToEi(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base7Process21IsProcessBackgroundedEv(%"class.base::Process"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZNK4base7Process11GetPriorityEv(%"class.base::Process"* %0) #6
  %3 = icmp eq i32 %2, 5
  ret i1 %3
}

declare i32 @_ZNK4base7Process11GetPriorityEv(%"class.base::Process"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base7Process22SetProcessBackgroundedEb(%"class.base::Process"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base7Process22CanBackgroundProcessesEvE20can_reraise_priority to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %12, !prof !3

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base7Process22CanBackgroundProcessesEvE20can_reraise_priority) #6
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %5
  %9 = tail call zeroext i1 @_ZN4base8internal14CanLowerNiceToEi(i32 0) #6
  %10 = zext i1 %9 to i8
  store i8 %10, i8* @_ZZN4base7Process22CanBackgroundProcessesEvE20can_reraise_priority, align 1
  %11 = tail call {}* @llvm.invariant.start.p0i8(i64 1, i8* nonnull @_ZZN4base7Process22CanBackgroundProcessesEvE20can_reraise_priority) #6
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base7Process22CanBackgroundProcessesEvE20can_reraise_priority) #6
  br label %12

12:                                               ; preds = %2, %5, %8
  %13 = load i8, i8* @_ZZN4base7Process22CanBackgroundProcessesEvE20can_reraise_priority, align 1, !range !4
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %12
  %16 = select i1 %1, i32 5, i32 0
  %17 = getelementptr inbounds %"class.base::Process", %"class.base::Process"* %0, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = tail call i32 @setpriority(i32 0, i32 %18, i32 %16) #6
  %20 = icmp eq i32 %19, 0
  br label %21

21:                                               ; preds = %12, %15
  %22 = phi i1 [ %20, %15 ], [ false, %12 ]
  ret i1 %22
}

; Function Attrs: nounwind
declare i32 @setpriority(i32, i32, i32) local_unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 1, i32 1048575}
!4 = !{i8 0, i8 2}
