; ModuleID = '../../third_party/blink/renderer/platform/graphics/identifiability_paint_op_digest.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/identifiability_paint_op_digest.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::ThreadSpecific<WTF::Vector<char, 0, WTF::PartitionAllocator> > >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::ThreadSpecific<WTF::Vector<char, 0, WTF::PartitionAllocator> > >::InstanceStorage" = type { [16 x i8] }
%"class.blink::IdentifiabilityPaintOpDigest" = type <{ i32, [4 x i8], %"class.blink::IdentifiableTokenBuilder", i32, [4 x i8], i64, %"class.blink::IntSize", %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider", %"class.cc::ClientPaintCache", %"struct.cc::PaintOp::SerializeOptions", i8, i8, [6 x i8] }>
%"class.blink::IdentifiableTokenBuilder" = type { %"struct.std::__1::array", i8*, i64 }
%"struct.std::__1::array" = type { [64 x i8] }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider" = type { %"class.cc::ImageProvider", %"class.blink::IdentifiabilityPaintOpDigest"* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"class.cc::ClientPaintCache" = type { %"class.base::MRUCache", i64, i64, %"class.base::StackVector" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3", %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source", %"class.base::StackAllocator", %"class.std::__1::vector" }
%"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source" = type { [8 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.12" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13", %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.base::StackAllocator" }
%"struct.cc::PaintOp::SerializeOptions" = type <{ %"class.cc::ImageProvider"*, %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::ClientPaintCache"*, %class.SkStrikeServer*, %class.sk_sp, i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.cc::TransferCacheSerializeHelper" = type opaque
%class.SkStrikeServer = type opaque
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.16" }
%"struct.std::__1::atomic.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl.19" }
%"struct.std::__1::__cxx_atomic_impl.19" = type { %"struct.std::__1::__cxx_atomic_base_impl.20" }
%"struct.std::__1::__cxx_atomic_base_impl.20" = type { i8 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::IdentifiabilityStudySettings" = type <{ %"class.std::__1::unique_ptr", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::IdentifiabilityStudySettingsProvider"* }
%"class.blink::IdentifiabilityStudySettingsProvider" = type { i32 (...)** }
%class.sk_sp.24 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.25", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i8* }
%"class.cc::PaintOpBuffer::Iterator" = type { %"class.cc::PaintOpBuffer"*, i8*, i64 }
%class.SkM44 = type { [16 x float] }
%"class.cc::PaintOp" = type { i32 }
%"class.cc::PaintFlags" = type <{ %class.sk_sp.29, %class.sk_sp.30, %class.sk_sp.55, %class.sk_sp.56, %class.sk_sp.57, %class.sk_sp.58, i32, float, float, i32, %union.anon.59, [4 x i8] }>
%class.sk_sp.29 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.30 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.32, i32, %"class.absl::optional.35", %"class.std::__1::vector.40", %"class.std::__1::vector.47", %class.sk_sp.54, %class.sk_sp.31, i32, [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.31, %class.sk_sp.32, %"class.gfx::Rect", i32, %class.sk_sp.33, %class.sk_sp.34, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.31, %class.scoped_refptr }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.33 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.34 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.scoped_refptr = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type opaque
%class.sk_sp.32 = type { %"class.cc::PaintOpBuffer"* }
%"class.absl::optional.35" = type { %"class.absl::optional_internal::optional_data.36" }
%"class.absl::optional_internal::optional_data.36" = type { %"class.absl::optional_internal::optional_data_base.37" }
%"class.absl::optional_internal::optional_data_base.37" = type { %"class.absl::optional_internal::optional_data_dtor_base.38" }
%"class.absl::optional_internal::optional_data_dtor_base.38" = type { i8, %union.anon.39 }
%union.anon.39 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { i32*, i32*, %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { i32* }
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { float*, float*, %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { float* }
%class.sk_sp.54 = type { %class.SkPicture* }
%class.SkPicture = type opaque
%class.sk_sp.31 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.55 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.56 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.57 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.58 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type opaque
%union.anon.59 = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.80 }
%union.anon.80 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.cc::ImageProvider::ScopedResult" = type { %"class.cc::DecodedDrawImage", %class.sk_sp.32, %"class.base::OnceCallback" }
%"class.cc::DecodedDrawImage" = type <{ %class.sk_sp.71, %"struct.gpu::Mailbox", %"class.absl::optional.72", %class.sk_sp.56, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }>
%class.sk_sp.71 = type { %class.SkImage* }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.absl::optional.72" = type { %"class.absl::optional_internal::optional_data.73" }
%"class.absl::optional_internal::optional_data.73" = type { %"class.absl::optional_internal::optional_data_base.74" }
%"class.absl::optional_internal::optional_data_base.74" = type { %"class.absl::optional_internal::optional_data_dtor_base.75" }
%"class.absl::optional_internal::optional_data_dtor_base.75" = type { i8, %union.anon.76 }
%union.anon.76 = type { i32 }
%struct.SkSize = type { float, float }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.77 }
%class.scoped_refptr.77 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional.61", %"class.absl::optional.66", float, [4 x i8] }>
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.absl::optional.61" = type { %"class.absl::optional_internal::optional_data.62" }
%"class.absl::optional_internal::optional_data.62" = type { %"class.absl::optional_internal::optional_data_base.63" }
%"class.absl::optional_internal::optional_data_base.63" = type { %"class.absl::optional_internal::optional_data_dtor_base.64" }
%"class.absl::optional_internal::optional_data_dtor_base.64" = type { i8, %union.anon.65 }
%union.anon.65 = type { i64 }
%"class.absl::optional.66" = type { %"class.absl::optional_internal::optional_data.67" }
%"class.absl::optional_internal::optional_data.67" = type { %"class.absl::optional_internal::optional_data_base.68" }
%"class.absl::optional_internal::optional_data_base.68" = type { %"class.absl::optional_internal::optional_data_dtor_base.69" }
%"class.absl::optional_internal::optional_data_dtor_base.69" = type { i8, %union.anon.70 }
%union.anon.70 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }

$_ZN2cc13ImageProviderD2Ev = comdat any

$_ZN2cc13PaintOpBuffer8IteratorppEv = comdat any

$_ZN5blink28IdentifiabilityPaintOpDigest28IdentifiabilityImageProviderD0Ev = comdat any

$_ZN3WTF14ThreadSpecificINS_6VectorIcLj0ENS_18PartitionAllocatorEEEE7DestroyEPv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm = comdat any

@_ZZN5blink19SerializationBufferEvE22s_serialization_buffer = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink19SerializationBufferEvE22s_serialization_buffer = internal global i64 0, align 8
@_ZN5blink28IdentifiabilityPaintOpDigest12kInfiniteOpsE = hidden local_unnamed_addr constant i64 -1, align 8
@_ZTVN5blink28IdentifiabilityPaintOpDigest28IdentifiabilityImageProviderE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::ImageProvider"*)* @_ZN2cc13ImageProviderD2Ev to i8*), i8* bitcast (void (%"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider"*)* @_ZN5blink28IdentifiabilityPaintOpDigest28IdentifiabilityImageProviderD0Ev to i8*), i8* bitcast (void (%"class.cc::ImageProvider::ScopedResult"*, %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider"*, %"class.cc::DrawImage"*)* @_ZN5blink28IdentifiabilityPaintOpDigest28IdentifiabilityImageProvider16GetRasterContentERKN2cc9DrawImageE to i8*)] }, align 8
@constinit = private unnamed_addr constant [16 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 4
@.str = private unnamed_addr constant [29 x i8] c"op_offset_ <= buffer_->used_\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"../../cc/paint/paint_op_buffer.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIcLj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [93 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<char, 0, WTF::PartitionAllocator>]\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1

@_ZN5blink28IdentifiabilityPaintOpDigestC1ENS_7IntSizeE = hidden unnamed_addr alias void (%"class.blink::IdentifiabilityPaintOpDigest"*, i64), void (%"class.blink::IdentifiabilityPaintOpDigest"*, i64)* @_ZN5blink28IdentifiabilityPaintOpDigestC2ENS_7IntSizeE
@_ZN5blink28IdentifiabilityPaintOpDigestC1ENS_7IntSizeEi = hidden unnamed_addr alias void (%"class.blink::IdentifiabilityPaintOpDigest"*, i64, i32), void (%"class.blink::IdentifiabilityPaintOpDigest"*, i64, i32)* @_ZN5blink28IdentifiabilityPaintOpDigestC2ENS_7IntSizeEi
@_ZN5blink28IdentifiabilityPaintOpDigestD1Ev = hidden unnamed_addr alias void (%"class.blink::IdentifiabilityPaintOpDigest"*), void (%"class.blink::IdentifiabilityPaintOpDigest"*)* @_ZN5blink28IdentifiabilityPaintOpDigestD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.WTF::Vector"* @_ZN5blink19SerializationBufferEv() local_unnamed_addr #0 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink19SerializationBufferEvE22s_serialization_buffer to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink19SerializationBufferEvE22s_serialization_buffer) #7
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store %"class.WTF::Vector"* null, %"class.WTF::Vector"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink19SerializationBufferEvE22s_serialization_buffer to %"class.WTF::Vector"**), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink19SerializationBufferEvE22s_serialization_buffer, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* nonnull @_ZN3WTF14ThreadSpecificINS_6VectorIcLj0ENS_18PartitionAllocatorEEEE7DestroyEPv) #7
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink19SerializationBufferEvE22s_serialization_buffer) #7
  br label %7

7:                                                ; preds = %3, %6, %0
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink19SerializationBufferEvE22s_serialization_buffer, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*)) #7
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %7
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 16, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIcLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink19SerializationBufferEvE22s_serialization_buffer, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*), i8* %11) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #7
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi i8* [ %11, %10 ], [ %8, %7 ]
  %14 = bitcast i8* %13 to %"class.WTF::Vector"*
  ret %"class.WTF::Vector"* %14
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28IdentifiabilityPaintOpDigestC2ENS_7IntSizeE(%"class.blink::IdentifiabilityPaintOpDigest"*, i64) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink28IdentifiabilityPaintOpDigestC2ENS_7IntSizeEi(%"class.blink::IdentifiabilityPaintOpDigest"* %0, i64 %1, i32 1048576)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28IdentifiabilityPaintOpDigestC2ENS_7IntSizeEi(%"class.blink::IdentifiabilityPaintOpDigest"*, i64, i32) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp, align 8
  %5 = getelementptr inbounds %"class.blink::IdentifiabilityPaintOpDigest", %"class.blink::IdentifiabilityPaintOpDigest"* %0, i64 0, i32 0
  store i32 %2, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::IdentifiabilityPaintOpDigest", %"class.blink::IdentifiabilityPaintOpDigest"* %0, i64 0, i32 2
  tail call void @_ZN5blink24IdentifiableTokenBuilderC1Ev(%"class.blink::IdentifiableTokenBuilder"* %6) #7
  %7 = getelementptr inbounds %"class.blink::IdentifiabilityPaintOpDigest", %"class.blink::IdentifiabilityPaintOpDigest"* %0, i64 0, i32 3
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::IdentifiabilityPaintOpDigest", %"class.blink::IdentifiabilityPaintOpDigest"* %0, i64 0, i32 5
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.blink::IdentifiabilityPaintOpDigest", %"class.blink::IdentifiabilityPaintOpDigest"* %0, i64 0, i32 6
  %10 = bitcast %"class.blink::IntSize"* %9 to i64*
  store i64 %1, i64* %10, align 8
  %11 = getelementptr inbounds %"class.blink::IdentifiabilityPaintOpDigest", %"class.blink::IdentifiabilityPaintOpDigest"* %0, i64 0, i32 7
  %12 = getelementptr inbounds %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider", %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider"* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink28IdentifiabilityPaintOpDigest28IdentifiabilityImageProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::IdentifiabilityPaintOpDigest", %"class.blink::IdentifiabilityPaintOpDigest"* %0, i64 0, i32 7, i32 1
  store %"class.blink::IdentifiabilityPaintOpDigest"* %0, %"class.blink::IdentifiabilityPaintOpDigest"** %13, align 8
  %14 = getelementptr inbounds %"class.blink::IdentifiabilityPaintOpDigest", %"class.blink::IdentifiabilityPaintOpDigest"* %0, i64 0, i32 8
  tail call void @_ZN2cc16ClientPaintCacheC1Em(%"class.cc::ClientPaintCache"* %14, i64 0) #7
  %15 = getelementptr inbounds %"class.blink::IdentifiabilityPaintOpDigest", %"class.blink::IdentifiabilityPaintOpDigest"* %0, i64 0, i32 9
  %16 = getelementptr inbounds %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider", %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider"* %11, i64 0, i32 0
  %17 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %17, align 8
  call void @_ZN2cc7PaintOp16SerializeOptionsC1EPNS_13ImageProviderEPNS_28TransferCacheSerializeHelperEPNS_16ClientPaintCacheEP14SkStrikeServer5sk_spI12SkColorSpaceEbbi(%"struct.cc::PaintOp::SerializeOptions"* %15, %"class.cc::ImageProvider"* %16, %"class.cc::TransferCacheSerializeHelper"* null, %"class.cc::ClientPaintCache"* %14, %class.SkStrikeServer* null, %class.sk_sp* nonnull %4, i1 zeroext false, i1 zeroext false, i32 0) #7
  %18 = load %class.SkColorSpace*, %class.SkColorSpace** %17, align 8
  %19 = icmp eq %class.SkColorSpace* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = bitcast %class.SkColorSpace* %18 to i8*
  call void @_ZdlPv(i8* %25) #8
  br label %26

26:                                               ; preds = %3, %20, %24
  %27 = getelementptr inbounds %"class.blink::IdentifiabilityPaintOpDigest", %"class.blink::IdentifiabilityPaintOpDigest"* %0, i64 0, i32 10
  store i8 0, i8* %27, align 8
  %28 = getelementptr inbounds %"class.blink::IdentifiabilityPaintOpDigest", %"class.blink::IdentifiabilityPaintOpDigest"* %0, i64 0, i32 11
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %"class.blink::IdentifiabilityPaintOpDigest", %"class.blink::IdentifiabilityPaintOpDigest"* %0, i64 0, i32 9, i32 9
  store i8 1, i8* %29, align 8
  %30 = call %"class.blink::IdentifiabilityStudySettings"* @_ZN5blink28IdentifiabilityStudySettings3GetEv() #7
  %31 = call zeroext i1 @_ZNK5blink28IdentifiabilityStudySettings13IsTypeAllowedENS_19IdentifiableSurface4TypeE(%"class.blink::IdentifiabilityStudySettings"* %30, i64 33) #7
  br i1 %31, label %32, label %85

32:                                               ; preds = %26
  %33 = call dereferenceable(16) %"class.WTF::Vector"* @_ZN5blink19SerializationBufferEv()
  %34 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %33, i64 0, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp ult i32 %35, 16384
  br i1 %36, label %37, label %85

37:                                               ; preds = %32
  %38 = call dereferenceable(16) %"class.WTF::Vector"* @_ZN5blink19SerializationBufferEv()
  %39 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %38, i64 0, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = icmp ult i32 %40, 16384
  br i1 %41, label %42, label %84

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %38, i64 0, i32 0, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = icmp ult i32 %44, 16384
  br i1 %45, label %46, label %77

46:                                               ; preds = %42
  %47 = lshr i32 %44, 2
  %48 = add nuw nsw i32 %44, 1
  %49 = add nuw nsw i32 %48, %47
  %50 = icmp ugt i32 %49, 16384
  %51 = select i1 %50, i32 %49, i32 16384
  %52 = icmp ult i32 %44, %51
  br i1 %52, label %53, label %77, !prof !4

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %38, i64 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, null
  %57 = zext i32 %51 to i64
  %58 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %57) #7
  %59 = call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %58) #7
  %60 = ptrtoint i8* %59 to i64
  br i1 %56, label %61, label %64

61:                                               ; preds = %53
  %62 = bitcast %"class.WTF::Vector"* %38 to i64*
  store atomic i64 %60, i64* %62 monotonic, align 8
  %63 = trunc i64 %58 to i32
  store i32 %63, i32* %43, align 8
  br label %77

64:                                               ; preds = %53
  %65 = load i8*, i8** %54, align 8
  %66 = icmp ne i8* %59, null
  %67 = icmp ne i8* %65, null
  %68 = and i1 %66, %67
  br i1 %68, label %69, label %73, !prof !4

69:                                               ; preds = %64
  %70 = load i32, i32* %39, align 4
  %71 = zext i32 %70 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %59, i8* nonnull align 1 %65, i64 %71, i1 false) #7
  %72 = load i8*, i8** %54, align 8
  br label %73

73:                                               ; preds = %69, %64
  %74 = phi i8* [ %65, %64 ], [ %72, %69 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #7
  %75 = bitcast %"class.WTF::Vector"* %38 to i64*
  store atomic i64 %60, i64* %75 monotonic, align 8
  %76 = trunc i64 %58 to i32
  store i32 %76, i32* %43, align 8
  br label %77

77:                                               ; preds = %73, %61, %46, %42
  %78 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %38, i64 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = load i32, i32* %39, align 4
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds i8, i8* %79, i64 %81
  %83 = sub nsw i64 16384, %81
  call void @llvm.memset.p0i8.i64(i8* align 1 %82, i8 0, i64 %83, i1 false) #7
  br label %84

84:                                               ; preds = %37, %77
  store i32 16384, i32* %39, align 4
  br label %85

85:                                               ; preds = %84, %32, %26
  ret void
}

declare void @_ZN5blink24IdentifiableTokenBuilderC1Ev(%"class.blink::IdentifiableTokenBuilder"*) unnamed_addr #3

declare void @_ZN2cc16ClientPaintCacheC1Em(%"class.cc::ClientPaintCache"*, i64) unnamed_addr #3

declare void @_ZN2cc7PaintOp16SerializeOptionsC1EPNS_13ImageProviderEPNS_28TransferCacheSerializeHelperEPNS_16ClientPaintCacheEP14SkStrikeServer5sk_spI12SkColorSpaceEbbi(%"struct.cc::PaintOp::SerializeOptions"*, %"class.cc::ImageProvider"*, %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::ClientPaintCache"*, %class.SkStrikeServer*, %class.sk_sp*, i1 zeroext, i1 zeroext, i32) unnamed_addr #3

declare %"class.blink::IdentifiabilityStudySettings"* @_ZN5blink28IdentifiabilityStudySettings3GetEv() local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink28IdentifiabilityStudySettings13IsTypeAllowedENS_19IdentifiableSurface4TypeE(%"class.blink::IdentifiabilityStudySettings"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28IdentifiabilityPaintOpDigestD2Ev(%"class.blink::IdentifiabilityPaintOpDigest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IdentifiabilityPaintOpDigest", %"class.blink::IdentifiabilityPaintOpDigest"* %0, i64 0, i32 9
  tail call void @_ZN2cc7PaintOp16SerializeOptionsD1Ev(%"struct.cc::PaintOp::SerializeOptions"* %2) #7
  %3 = getelementptr inbounds %"class.blink::IdentifiabilityPaintOpDigest", %"class.blink::IdentifiabilityPaintOpDigest"* %0, i64 0, i32 8
  tail call void @_ZN2cc16ClientPaintCacheD1Ev(%"class.cc::ClientPaintCache"* %3) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2cc7PaintOp16SerializeOptionsD1Ev(%"struct.cc::PaintOp::SerializeOptions"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2cc16ClientPaintCacheD1Ev(%"class.cc::ClientPaintCache"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc13ImageProviderD2Ev(%"class.cc::ImageProvider"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28IdentifiabilityPaintOpDigest17MaybeUpdateDigestERK5sk_spIKN2cc13PaintOpBufferEEm(%"class.blink::IdentifiabilityPaintOpDigest"*, %class.sk_sp.24* nocapture readonly dereferenceable(8), i64) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.cc::PaintOpBuffer::Iterator", align 8
  %6 = alloca %class.SkM44, align 4
  %7 = alloca %class.SkM44, align 4
  %8 = tail call %"class.blink::IdentifiabilityStudySettings"* @_ZN5blink28IdentifiabilityStudySettings3GetEv() #7
  %9 = tail call zeroext i1 @_ZNK5blink28IdentifiabilityStudySettings13IsTypeAllowedENS_19IdentifiableSurface4TypeE(%"class.blink::IdentifiabilityStudySettings"* %8, i64 33) #7
  br i1 %9, label %10, label %159

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::IdentifiabilityPaintOpDigest", %"class.blink::IdentifiabilityPaintOpDigest"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.blink::IdentifiabilityPaintOpDigest", %"class.blink::IdentifiabilityPaintOpDigest"* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %12, %14
  br i1 %15, label %18, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::IdentifiabilityPaintOpDigest", %"class.blink::IdentifiabilityPaintOpDigest"* %0, i64 0, i32 11
  store i8 1, i8* %17, align 1
  br label %159

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.blink::IdentifiabilityPaintOpDigest", %"class.blink::IdentifiabilityPaintOpDigest"* %0, i64 0, i32 5
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %2, %20
  %22 = getelementptr inbounds %class.sk_sp.24, %class.sk_sp.24* %1, i64 0, i32 0
  %23 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %22, align 8
  %24 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %23, i64 0, i32 2, i32 0, i32 0, i32 0
  %25 = bitcast i8** %24 to i64*
  %26 = bitcast %"class.cc::PaintOpBuffer::Iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #7
  %27 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %5, i64 0, i32 0
  %28 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %5, i64 0, i32 1
  %29 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %5, i64 0, i32 2
  %30 = load i64, i64* %25, align 8, !noalias !5
  store %"class.cc::PaintOpBuffer"* %23, %"class.cc::PaintOpBuffer"** %27, align 8, !alias.scope !5
  %31 = bitcast i8** %28 to i64*
  store i64 %30, i64* %31, align 8, !alias.scope !5
  store i64 0, i64* %29, align 8, !alias.scope !5
  %32 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %23, i64 0, i32 3
  %33 = load i64, i64* %32, align 8, !noalias !8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %158, label %35

35:                                               ; preds = %18
  %36 = inttoptr i64 %30 to %"class.cc::PaintOp"*
  %37 = bitcast i8** %28 to %"class.cc::PaintOp"**
  %38 = icmp eq i64 %2, -1
  %39 = getelementptr inbounds %"class.blink::IdentifiabilityPaintOpDigest", %"class.blink::IdentifiabilityPaintOpDigest"* %0, i64 0, i32 2
  %40 = bitcast i64* %4 to i8*
  %41 = getelementptr inbounds %"class.blink::IdentifiabilityPaintOpDigest", %"class.blink::IdentifiabilityPaintOpDigest"* %0, i64 0, i32 9
  %42 = bitcast %class.SkM44* %6 to i8*
  %43 = bitcast %class.SkM44* %7 to i8*
  br label %44

44:                                               ; preds = %155, %35
  %45 = phi i64 [ %20, %35 ], [ %157, %155 ]
  %46 = phi %"class.cc::PaintOp"* [ %36, %35 ], [ %156, %155 ]
  %47 = phi i64 [ 0, %35 ], [ %151, %155 ]
  %48 = icmp eq i64 %45, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %44
  %50 = add i64 %45, -1
  store i64 %50, i64* %19, align 8
  br label %150

51:                                               ; preds = %44
  %52 = icmp ult i64 %47, %21
  %53 = or i1 %38, %52
  br i1 %53, label %54, label %158

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %46, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = trunc i32 %56 to i8
  switch i8 %57, label %63 [
    i8 18, label %58
    i8 14, label %60
  ]

58:                                               ; preds = %54
  call void @_ZN5blink24IdentifiableTokenBuilder18AlignPartialBufferEv(%"class.blink::IdentifiableTokenBuilder"* %39) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #7
  store i64 -8352620798658876869, i64* %4, align 8
  %59 = call dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder8AddBytesEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"* %39, i64 8, i8* nonnull %40) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #7
  br label %150

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %46, i64 2
  %62 = bitcast %"class.cc::PaintOp"* %61 to %class.sk_sp.24*
  call void @_ZN5blink28IdentifiabilityPaintOpDigest17MaybeUpdateDigestERK5sk_spIKN2cc13PaintOpBufferEEm(%"class.blink::IdentifiabilityPaintOpDigest"* %0, %class.sk_sp.24* dereferenceable(8) %62, i64 -1)
  br label %150

63:                                               ; preds = %54
  %64 = call dereferenceable(16) %"class.WTF::Vector"* @_ZN5blink19SerializationBufferEv()
  %65 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = call dereferenceable(16) %"class.WTF::Vector"* @_ZN5blink19SerializationBufferEv()
  %68 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %67, i64 0, i32 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = zext i32 %69 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %66, i8 0, i64 %70, i1 false)
  br label %71

71:                                               ; preds = %131, %63
  %72 = call dereferenceable(16) %"class.WTF::Vector"* @_ZN5blink19SerializationBufferEv()
  %73 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = call dereferenceable(16) %"class.WTF::Vector"* @_ZN5blink19SerializationBufferEv()
  %76 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %75, i64 0, i32 0, i32 0, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %42) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %42, i8* align 4 bitcast ([16 x float]* @constinit to i8*), i64 64, i1 false) #7
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %43) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %43, i8* align 4 bitcast ([16 x float]* @constinit to i8*), i64 64, i1 false) #7
  %79 = call i64 @_ZNK2cc7PaintOp9SerializeEPvmRKNS0_16SerializeOptionsEPKNS_10PaintFlagsERK5SkM44SA_(%"class.cc::PaintOp"* %46, i8* %74, i64 %78, %"struct.cc::PaintOp::SerializeOptions"* dereferenceable(56) %41, %"class.cc::PaintFlags"* null, %class.SkM44* nonnull dereferenceable(64) %6, %class.SkM44* nonnull dereferenceable(64) %7) #7
  %80 = icmp eq i64 %79, 0
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %43) #7
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %42) #7
  %81 = call dereferenceable(16) %"class.WTF::Vector"* @_ZN5blink19SerializationBufferEv()
  br i1 %80, label %82, label %143

82:                                               ; preds = %71
  %83 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %81, i64 0, i32 0, i32 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = icmp ugt i32 %84, 2457599
  br i1 %85, label %86, label %88

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.blink::IdentifiabilityPaintOpDigest", %"class.blink::IdentifiabilityPaintOpDigest"* %0, i64 0, i32 11
  store i8 1, i8* %87, align 1
  br label %158

88:                                               ; preds = %82
  %89 = call dereferenceable(16) %"class.WTF::Vector"* @_ZN5blink19SerializationBufferEv()
  %90 = call dereferenceable(16) %"class.WTF::Vector"* @_ZN5blink19SerializationBufferEv()
  %91 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %90, i64 0, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = shl i32 %92, 1
  %94 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %89, i64 0, i32 0, i32 0, i32 1
  %95 = load i32, i32* %94, align 8
  %96 = icmp ult i32 %95, %93
  br i1 %96, label %97, label %131

97:                                               ; preds = %88
  %98 = lshr i32 %95, 2
  %99 = add nuw i32 %95, 1
  %100 = add i32 %99, %98
  %101 = icmp ugt i32 %100, 4
  %102 = select i1 %101, i32 %100, i32 4
  %103 = icmp ugt i32 %102, %93
  %104 = select i1 %103, i32 %102, i32 %93
  %105 = icmp ult i32 %95, %104
  br i1 %105, label %106, label %131, !prof !4

106:                                              ; preds = %97
  %107 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %89, i64 0, i32 0, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8
  %109 = icmp eq i8* %108, null
  %110 = zext i32 %104 to i64
  %111 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %110) #7
  %112 = call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %111) #7
  %113 = ptrtoint i8* %112 to i64
  br i1 %109, label %114, label %117

114:                                              ; preds = %106
  %115 = bitcast %"class.WTF::Vector"* %89 to i64*
  store atomic i64 %113, i64* %115 monotonic, align 8
  %116 = trunc i64 %111 to i32
  store i32 %116, i32* %94, align 8
  br label %131

117:                                              ; preds = %106
  %118 = load i8*, i8** %107, align 8
  %119 = icmp ne i8* %112, null
  %120 = icmp ne i8* %118, null
  %121 = and i1 %119, %120
  br i1 %121, label %122, label %127, !prof !4

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %89, i64 0, i32 0, i32 0, i32 2
  %124 = load i32, i32* %123, align 4
  %125 = zext i32 %124 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %112, i8* nonnull align 1 %118, i64 %125, i1 false) #7
  %126 = load i8*, i8** %107, align 8
  br label %127

127:                                              ; preds = %122, %117
  %128 = phi i8* [ %118, %117 ], [ %126, %122 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %128) #7
  %129 = bitcast %"class.WTF::Vector"* %89 to i64*
  store atomic i64 %113, i64* %129 monotonic, align 8
  %130 = trunc i64 %111 to i32
  store i32 %130, i32* %94, align 8
  br label %131

131:                                              ; preds = %88, %97, %114, %127
  %132 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %89, i64 0, i32 0, i32 0, i32 0
  %133 = load i8*, i8** %132, align 8
  %134 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %89, i64 0, i32 0, i32 0, i32 2
  %135 = load i32, i32* %134, align 4
  %136 = zext i32 %135 to i64
  %137 = getelementptr inbounds i8, i8* %133, i64 %136
  %138 = zext i32 %93 to i64
  %139 = getelementptr inbounds i8, i8* %133, i64 %138
  %140 = ptrtoint i8* %139 to i64
  %141 = ptrtoint i8* %137 to i64
  %142 = sub i64 %140, %141
  call void @llvm.memset.p0i8.i64(i8* align 1 %137, i8 0, i64 %142, i1 false) #7
  store i32 %93, i32* %134, align 4
  br label %71

143:                                              ; preds = %71
  %144 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %81, i64 0, i32 0, i32 0, i32 0
  %145 = load i8*, i8** %144, align 8
  %146 = call dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder9AddAtomicEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"* %39, i64 %79, i8* %145) #7
  %147 = load i32, i32* %11, align 8
  %148 = add nsw i32 %147, 1
  store i32 %148, i32* %11, align 8
  %149 = add i64 %47, 1
  br label %150

150:                                              ; preds = %60, %58, %49, %143
  %151 = phi i64 [ %149, %143 ], [ %47, %49 ], [ %47, %58 ], [ %47, %60 ]
  %152 = call dereferenceable(24) %"class.cc::PaintOpBuffer::Iterator"* @_ZN2cc13PaintOpBuffer8IteratorppEv(%"class.cc::PaintOpBuffer::Iterator"* nonnull %5)
  %153 = load i64, i64* %29, align 8
  %154 = icmp eq i64 %33, %153
  br i1 %154, label %158, label %155

155:                                              ; preds = %150
  %156 = load %"class.cc::PaintOp"*, %"class.cc::PaintOp"** %37, align 8
  %157 = load i64, i64* %19, align 8
  br label %44

158:                                              ; preds = %51, %150, %18, %86
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #7
  br label %159

159:                                              ; preds = %3, %158, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i64 @_ZNK2cc7PaintOp9SerializeEPvmRKNS0_16SerializeOptionsEPKNS_10PaintFlagsERK5SkM44SA_(%"class.cc::PaintOp"*, i8*, i64, %"struct.cc::PaintOp::SerializeOptions"* dereferenceable(56), %"class.cc::PaintFlags"*, %class.SkM44* dereferenceable(64), %class.SkM44* dereferenceable(64)) local_unnamed_addr #3

declare dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder9AddAtomicEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"*, i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.cc::PaintOpBuffer::Iterator"* @_ZN2cc13PaintOpBuffer8IteratorppEv(%"class.cc::PaintOpBuffer::Iterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %0, i64 0, i32 1
  %6 = bitcast i8** %5 to %"class.cc::PaintOp"**
  %7 = load %"class.cc::PaintOp"*, %"class.cc::PaintOp"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = lshr i32 %9, 8
  %11 = bitcast %"class.cc::PaintOp"* %7 to i8*
  %12 = zext i32 %10 to i64
  %13 = getelementptr inbounds i8, i8* %11, i64 %12
  store i8* %13, i8** %5, align 8
  %14 = load i32, i32* %8, align 4
  %15 = lshr i32 %14, 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %0, i64 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, %16
  store i64 %19, i64* %17, align 8
  %20 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %21, align 8
  %22 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %0, i64 0, i32 0
  %23 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %22, align 8
  %24 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %23, i64 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ugt i64 %19, %25
  br i1 %27, label %29, label %28

28:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %21, align 8
  br label %38

29:                                               ; preds = %1
  %30 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %19) #7
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %25) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i8* %30, i8* %31) #7
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %21, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i32 1194, %"class.logging::CheckOpResult"* nonnull %3) #7
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #7
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  ret %"class.cc::PaintOpBuffer::Iterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28IdentifiabilityPaintOpDigest28IdentifiabilityImageProvider16GetRasterContentERKN2cc9DrawImageE(%"class.cc::ImageProvider::ScopedResult"* noalias sret, %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider"* nocapture readonly, %"class.cc::DrawImage"* nocapture readnone dereferenceable(240)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider", %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider"* %1, i64 0, i32 1
  %5 = load %"class.blink::IdentifiabilityPaintOpDigest"*, %"class.blink::IdentifiabilityPaintOpDigest"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::IdentifiabilityPaintOpDigest", %"class.blink::IdentifiabilityPaintOpDigest"* %5, i64 0, i32 10
  store i8 1, i8* %6, align 8
  tail call void @_ZN2cc13ImageProvider12ScopedResultC1Ev(%"class.cc::ImageProvider::ScopedResult"* %0) #7
  ret void
}

declare void @_ZN2cc13ImageProvider12ScopedResultC1Ev(%"class.cc::ImageProvider::ScopedResult"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink28IdentifiabilityPaintOpDigest28IdentifiabilityImageProviderD0Ev(%"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF14ThreadSpecificINS_6VectorIcLj0ENS_18PartitionAllocatorEEEE7DestroyEPv(i8*) #5 comdat align 2 {
  %2 = tail call zeroext i1 @_ZN3WTF12IsMainThreadEv() #7
  br i1 %2, label %15, label %3

3:                                                ; preds = %1
  %4 = bitcast i8* %0 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %14, label %7, !prof !4

7:                                                ; preds = %3
  %8 = getelementptr inbounds i8, i8* %0, i64 12
  %9 = bitcast i8* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12, !prof !3

12:                                               ; preds = %7
  store i32 0, i32* %9, align 4
  br label %13

13:                                               ; preds = %12, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %5) #7
  store i8* null, i8** %4, align 8
  br label %14

14:                                               ; preds = %3, %13
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %0) #7
  br label %15

15:                                               ; preds = %1, %14
  ret void
}

declare void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"*, void (i8*)*) unnamed_addr #3

declare zeroext i1 @_ZN3WTF12IsMainThreadEv() local_unnamed_addr #3

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #7
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare void @_ZN5blink24IdentifiableTokenBuilder18AlignPartialBufferEv(%"class.blink::IdentifiableTokenBuilder"*) local_unnamed_addr #3

declare dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder8AddBytesEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"*, i64, i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN2cc13PaintOpBuffer8Iterator5beginEv: argument 0"}
!7 = distinct !{!7, !"_ZN2cc13PaintOpBuffer8Iterator5beginEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN2cc13PaintOpBuffer8Iterator3endEv: argument 0"}
!10 = distinct !{!10, !"_ZN2cc13PaintOpBuffer8Iterator3endEv"}
