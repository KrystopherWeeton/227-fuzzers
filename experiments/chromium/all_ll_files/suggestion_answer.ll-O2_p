; ModuleID = '../../components/omnibox/browser/suggestion_answer.cc'
source_filename = "../../components/omnibox/browser/suggestion_answer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.SuggestionAnswer::TextField" = type { %"class.std::__1::basic_string", i32, i8, i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.SuggestionAnswer::ImageLine" = type { %"class.std::__1::vector.39", i32, %"class.absl::optional.46", %"class.absl::optional.46", %class.GURL }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"*, %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.SuggestionAnswer::TextField"* }
%"class.absl::optional.46" = type { %"class.absl::optional_internal::optional_data.47" }
%"class.absl::optional_internal::optional_data.47" = type { %"class.absl::optional_internal::optional_data_base.48" }
%"class.absl::optional_internal::optional_data_base.48" = type { %"class.absl::optional_internal::optional_data_dtor_base.49" }
%"class.absl::optional_internal::optional_data_dtor_base.49" = type { i8, %union.anon.50 }
%union.anon.50 = type { %"class.SuggestionAnswer::TextField" }
%class.GURL = type { %"class.std::__1::basic_string.5", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.8 }
%union.anon.8 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %class.GURL* }
%class.SuggestionAnswer = type <{ %class.GURL, %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine", i32, [4 x i8] }>
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.1" }
%"union.absl::variant_internal::DestructibleUnionImpl.1" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"union.absl::variant_internal::DestructibleUnionImpl.4" }
%"union.absl::variant_internal::DestructibleUnionImpl.4" = type { %"class.std::__1::basic_string.5" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.9 }
%struct.anon.9 = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::CheckedContiguousIterator" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"* }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.base::Value"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.5", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.absl::optional.61" = type { %"class.absl::optional_internal::optional_data.62" }
%"class.absl::optional_internal::optional_data.62" = type { %"class.absl::optional_internal::optional_data_base.63" }
%"class.absl::optional_internal::optional_data_base.63" = type { %"class.absl::optional_internal::optional_data_dtor_base.64" }
%"class.absl::optional_internal::optional_data_dtor_base.64" = type { i8, [7 x i8], %union.anon.65 }
%union.anon.65 = type { %class.SuggestionAnswer }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.67", [4 x i8] }>
%"struct.std::__1::atomic.67" = type { %"struct.std::__1::__atomic_base.68" }
%"struct.std::__1::__atomic_base.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { i32 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZN4absl8optionalIN16SuggestionAnswer9TextFieldEEaSERKS3_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEpLEl = comdat any

$_ZNSt3__16vectorIN16SuggestionAnswer9TextFieldENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorIN16SuggestionAnswer9TextFieldENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__16vectorI4GURLNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_ = comdat any

@_ZN12_GLOBAL__N_115kAnswerJsonTextE = internal constant [2 x i8] c"t\00", align 1
@_ZN12_GLOBAL__N_119kAnswerJsonTextTypeE = internal constant [3 x i8] c"tt\00", align 1
@_ZN12_GLOBAL__N_119kAnswerJsonNumLinesE = internal constant [3 x i8] c"ln\00", align 1
@_ZN12_GLOBAL__N_120kAnswerJsonImageLineE = internal constant [3 x i8] c"il\00", align 1
@_ZN12_GLOBAL__N_125kAnswerJsonAdditionalTextE = internal constant [3 x i8] c"at\00", align 1
@_ZN12_GLOBAL__N_121kAnswerJsonStatusTextE = internal constant [3 x i8] c"st\00", align 1
@.str = private unnamed_addr constant [3 x i8] c"//\00", align 1
@_ZN3url12kHttpsSchemeE = external constant [0 x i8], align 1
@.str.1 = private unnamed_addr constant [2 x i8] c":\00", align 1
@_ZN12_GLOBAL__N_116kAnswerJsonLinesE = internal constant [2 x i8] c"l\00", align 1
@.str.2 = private constant [2 x i8] c"i\00", align 1
@.str.3 = private constant [2 x i8] c"d\00", align 1
@_ZN16SuggestionAnswer27kAnswerUsedUmaHistogramNameE = hidden constant [39 x i8] c"Omnibox.SuggestionUsed.AnswerInSuggest\00", align 16
@.str.7 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.8 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"rhs <= end_ - current_\00", align 1
@.str.15 = private unnamed_addr constant [26 x i8] c"-rhs <= current_ - start_\00", align 1
@_ZZN16SuggestionAnswer13LogAnswerUsedERKN4absl8optionalIS_EEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN16SuggestionAnswer9TextFieldC1Ev = hidden unnamed_addr alias void (%"class.SuggestionAnswer::TextField"*), void (%"class.SuggestionAnswer::TextField"*)* @_ZN16SuggestionAnswer9TextFieldC2Ev
@_ZN16SuggestionAnswer9TextFieldD1Ev = hidden unnamed_addr alias void (%"class.SuggestionAnswer::TextField"*), void (%"class.SuggestionAnswer::TextField"*)* @_ZN16SuggestionAnswer9TextFieldD2Ev
@_ZN16SuggestionAnswer9TextFieldC1ERKS0_ = hidden unnamed_addr alias void (%"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"*), void (%"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"*)* @_ZN16SuggestionAnswer9TextFieldC2ERKS0_
@_ZN16SuggestionAnswer9TextFieldC1EOS0_ = hidden unnamed_addr alias void (%"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"*), void (%"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"*)* @_ZN16SuggestionAnswer9TextFieldC2EOS0_
@_ZN16SuggestionAnswer9ImageLineC1Ev = hidden unnamed_addr alias void (%"class.SuggestionAnswer::ImageLine"*), void (%"class.SuggestionAnswer::ImageLine"*)* @_ZN16SuggestionAnswer9ImageLineC2Ev
@_ZN16SuggestionAnswer9ImageLineC1ERKS0_ = hidden unnamed_addr alias void (%"class.SuggestionAnswer::ImageLine"*, %"class.SuggestionAnswer::ImageLine"*), void (%"class.SuggestionAnswer::ImageLine"*, %"class.SuggestionAnswer::ImageLine"*)* @_ZN16SuggestionAnswer9ImageLineC2ERKS0_
@_ZN16SuggestionAnswer9ImageLineC1EOS0_ = hidden unnamed_addr alias void (%"class.SuggestionAnswer::ImageLine"*, %"class.SuggestionAnswer::ImageLine"*), void (%"class.SuggestionAnswer::ImageLine"*, %"class.SuggestionAnswer::ImageLine"*)* @_ZN16SuggestionAnswer9ImageLineC2EOS0_
@_ZN16SuggestionAnswer9ImageLineD1Ev = hidden unnamed_addr alias void (%"class.SuggestionAnswer::ImageLine"*), void (%"class.SuggestionAnswer::ImageLine"*)* @_ZN16SuggestionAnswer9ImageLineD2Ev
@_ZN16SuggestionAnswerC1Ev = hidden unnamed_addr alias void (%class.SuggestionAnswer*), void (%class.SuggestionAnswer*)* @_ZN16SuggestionAnswerC2Ev
@_ZN16SuggestionAnswerC1ERKS_ = hidden unnamed_addr alias void (%class.SuggestionAnswer*, %class.SuggestionAnswer*), void (%class.SuggestionAnswer*, %class.SuggestionAnswer*)* @_ZN16SuggestionAnswerC2ERKS_
@_ZN16SuggestionAnswerC1EOS_ = hidden unnamed_addr alias void (%class.SuggestionAnswer*, %class.SuggestionAnswer*), void (%class.SuggestionAnswer*, %class.SuggestionAnswer*)* @_ZN16SuggestionAnswerC2EOS_
@_ZN16SuggestionAnswerD1Ev = hidden unnamed_addr alias void (%class.SuggestionAnswer*), void (%class.SuggestionAnswer*)* @_ZN16SuggestionAnswerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SuggestionAnswer9TextFieldC2Ev(%"class.SuggestionAnswer::TextField"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.SuggestionAnswer::TextField"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #12
  %3 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %0, i64 0, i32 1
  store i32 -1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %0, i64 0, i32 2
  store i8 0, i8* %4, align 4
  %5 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %0, i64 0, i32 3
  store i32 1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %0, i64 0, i32 4
  store i32 0, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SuggestionAnswer9TextFieldD2Ev(%"class.SuggestionAnswer::TextField"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.SuggestionAnswer::TextField"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2, i64 0, i32 1, i32 1
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = bitcast %"class.SuggestionAnswer::TextField"* %0 to i8**
  %8 = load i8*, i8** %7, align 8
  tail call void @_ZdlPv(i8* %8) #13
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SuggestionAnswer9TextFieldC2ERKS0_(%"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.SuggestionAnswer::TextField"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.SuggestionAnswer::TextField"* %0 to i8*
  %9 = bitcast %"class.SuggestionAnswer::TextField"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #12
  br label %185

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 11
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = bitcast %"class.SuggestionAnswer::TextField"* %0 to i16*
  %18 = trunc i64 %14 to i8
  %19 = bitcast %"class.SuggestionAnswer::TextField"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  store i8 %18, i8* %20, align 1
  br label %38

21:                                               ; preds = %10
  %22 = icmp ugt i64 %14, 9223372036854775791
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"class.SuggestionAnswer::TextField"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #14
  unreachable

25:                                               ; preds = %21
  %26 = add nuw nsw i64 %14, 8
  %27 = and i64 %26, -8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @abort() #14
  unreachable

30:                                               ; preds = %25
  %31 = shl i64 %27, 1
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to i16*
  %34 = bitcast %"class.SuggestionAnswer::TextField"* %0 to i8**
  store i8* %32, i8** %34, align 8
  %35 = or i64 %27, -9223372036854775808
  %36 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %16
  %39 = phi i16* [ %17, %16 ], [ %33, %30 ]
  %40 = add nuw nsw i64 %14, 1
  %41 = add i64 %14, 1
  %42 = icmp ult i64 %41, 16
  br i1 %42, label %132, label %43

43:                                               ; preds = %38
  %44 = add i64 %14, 1
  %45 = getelementptr i16, i16* %39, i64 %44
  %46 = getelementptr i16, i16* %12, i64 %44
  %47 = icmp ult i16* %39, %46
  %48 = icmp ult i16* %12, %45
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %43
  %51 = and i64 %41, -16
  %52 = sub i64 %40, %51
  %53 = getelementptr i16, i16* %12, i64 %51
  %54 = getelementptr i16, i16* %39, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %12, i64 %63
  %66 = getelementptr i16, i16* %39, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !2
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !2
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !5, !noalias !2
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !5, !noalias !2
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %12, i64 %75
  %77 = getelementptr i16, i16* %39, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !2
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !2
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !5, !noalias !2
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !5, !noalias !2
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %12, i64 %86
  %88 = getelementptr i16, i16* %39, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !2
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !2
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !5, !noalias !2
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !5, !noalias !2
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %12, i64 %97
  %99 = getelementptr i16, i16* %39, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !2
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !2
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !5, !noalias !2
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !5, !noalias !2
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !7

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %12, i64 %115
  %118 = getelementptr i16, i16* %39, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !2
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !2
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !5, !noalias !2
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !5, !noalias !2
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !9

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %41, %51
  br i1 %131, label %185, label %132

132:                                              ; preds = %130, %43, %38
  %133 = phi i64 [ %40, %43 ], [ %40, %38 ], [ %52, %130 ]
  %134 = phi i16* [ %12, %43 ], [ %12, %38 ], [ %53, %130 ]
  %135 = phi i16* [ %39, %43 ], [ %39, %38 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !11

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %185, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %185, label %155, !llvm.loop !12

185:                                              ; preds = %150, %155, %130, %7
  %186 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %0, i64 0, i32 1
  %187 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %1, i64 0, i32 1
  %188 = bitcast i32* %186 to i8*
  %189 = bitcast i32* %187 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %188, i8* align 8 %189, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SuggestionAnswer9TextFieldC2EOS0_(%"class.SuggestionAnswer::TextField"* nocapture, %"class.SuggestionAnswer::TextField"* nocapture dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.SuggestionAnswer::TextField"* %0 to i8*
  %4 = bitcast %"class.SuggestionAnswer::TextField"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #12
  %5 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %1, i64 0, i32 1
  %7 = bitcast i32* %5 to i8*
  %8 = bitcast i32* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"class.SuggestionAnswer::TextField"* @_ZN16SuggestionAnswer9TextFieldaSERKS0_(%"class.SuggestionAnswer::TextField"* returned, %"class.SuggestionAnswer::TextField"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %3, %"class.std::__1::basic_string"* dereferenceable(24) %4)
  %6 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %1, i64 0, i32 1
  %8 = bitcast i32* %6 to i8*
  %9 = bitcast i32* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false)
  ret %"class.SuggestionAnswer::TextField"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !13
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !13
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !16, !noalias !13
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !16, !noalias !13
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !13
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !13
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !16, !noalias !13
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !16, !noalias !13
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !13
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !13
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !16, !noalias !13
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !16, !noalias !13
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !13
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !13
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !16, !noalias !13
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !16, !noalias !13
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !18

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !13
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !13
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !16, !noalias !13
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !16, !noalias !13
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !19

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !20

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !21

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #14
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #14
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #13
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !22
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !22
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !25, !noalias !22
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !25, !noalias !22
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !22
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !22
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !25, !noalias !22
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !25, !noalias !22
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !22
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !22
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !25, !noalias !22
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !25, !noalias !22
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !22
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !22
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !25, !noalias !22
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !25, !noalias !22
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !27

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !22
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !22
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !25, !noalias !22
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !25, !noalias !22
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !28

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !29

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !30

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !31
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !31
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !34, !noalias !31
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !34, !noalias !31
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !31
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !31
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !34, !noalias !31
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !34, !noalias !31
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !31
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !31
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !34, !noalias !31
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !34, !noalias !31
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !31
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !31
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !34, !noalias !31
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !34, !noalias !31
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !36

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !31
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !31
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !34, !noalias !31
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !34, !noalias !31
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !37

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !38

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !39

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #12
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"class.SuggestionAnswer::TextField"* @_ZN16SuggestionAnswer9TextFieldaSEOS0_(%"class.SuggestionAnswer::TextField"* returned, %"class.SuggestionAnswer::TextField"* nocapture dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.SuggestionAnswer::TextField"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = bitcast %"class.SuggestionAnswer::TextField"* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #13
  br label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %"class.SuggestionAnswer::TextField"* %0 to i8*
  %12 = bitcast %"class.SuggestionAnswer::TextField"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #12
  %13 = bitcast %"class.SuggestionAnswer::TextField"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  store i8 0, i8* %14, align 1
  %15 = bitcast %"class.SuggestionAnswer::TextField"* %1 to i16*
  store i16 0, i16* %15, align 2
  %16 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %1, i64 0, i32 1
  %18 = bitcast i32* %16 to i8*
  %19 = bitcast i32* %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 16, i1 false)
  ret %"class.SuggestionAnswer::TextField"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16SuggestionAnswer9TextField14ParseTextFieldERKN4base5ValueEPS0_(%"class.base::Value"* dereferenceable(32), %"class.SuggestionAnswer::TextField"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = tail call %"class.std::__1::basic_string.5"* @_ZNK4base5Value13FindStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZN12_GLOBAL__N_115kAnswerJsonTextE, i64 0, i64 0), i64 1) #12
  %6 = tail call i64 @_ZNK4base5Value10FindIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZN12_GLOBAL__N_119kAnswerJsonTextTypeE, i64 0, i64 0), i64 2) #12
  %7 = trunc i64 %6 to i8
  %8 = lshr i64 %6, 32
  %9 = trunc i64 %8 to i32
  %10 = icmp eq %"class.std::__1::basic_string.5"* %5, null
  br i1 %10, label %80, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string.5"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  br label %21

19:                                               ; preds = %11
  %20 = zext i8 %14 to i64
  br label %21

21:                                               ; preds = %16, %19
  %22 = phi i64 [ %18, %16 ], [ %20, %19 ]
  %23 = icmp ne i64 %22, 0
  %24 = icmp ne i8 %7, 0
  %25 = and i1 %24, %23
  br i1 %25, label %26, label %80

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %1, i64 0, i32 1
  store i32 %9, i32* %27, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #12
  %29 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #12
  %30 = load i8, i8* %13, align 1
  %31 = icmp slt i8 %30, 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast %"class.std::__1::basic_string.5"* %5 to i8*
  %35 = select i1 %31, i8* %33, i8* %34
  %36 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = zext i8 %30 to i64
  %39 = select i1 %31, i64 %37, i64 %38
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %4, i8* %35, i64 %39) #12
  %40 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i16*, i16** %44, align 8
  %46 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  %47 = select i1 %43, i16* %45, i16* %46
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = zext i8 %42 to i64
  %51 = select i1 %43, i64 %49, i64 %50
  call void @_ZN3net15UnescapeForHTMLEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %3, i16* %47, i64 %51) #12
  %52 = bitcast %"class.SuggestionAnswer::TextField"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %52, i64 0, i32 1, i32 1
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %26
  %57 = bitcast %"class.SuggestionAnswer::TextField"* %1 to i8**
  %58 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %58) #13
  br label %59

59:                                               ; preds = %56, %26
  %60 = bitcast %"class.SuggestionAnswer::TextField"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* nonnull align 8 %28, i64 24, i1 false) #12
  %61 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %61, i64 0, i32 1, i32 1
  store i8 0, i8* %62, align 1
  %63 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  store i16 0, i16* %63, align 8
  %64 = load i8, i8* %41, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %59
  %67 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %68 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %68) #13
  br label %69

69:                                               ; preds = %59, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #12
  %70 = call i64 @_ZNK4base5Value10FindIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZN12_GLOBAL__N_119kAnswerJsonNumLinesE, i64 0, i64 0), i64 2) #12
  %71 = trunc i64 %70 to i8
  %72 = icmp ne i8 %71, 0
  %73 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %1, i64 0, i32 2
  %74 = zext i1 %72 to i8
  store i8 %74, i8* %73, align 4
  br i1 %72, label %75, label %79

75:                                               ; preds = %69
  %76 = lshr i64 %70, 32
  %77 = trunc i64 %76 to i32
  store i8 1, i8* %73, align 4
  %78 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %1, i64 0, i32 3
  store i32 %77, i32* %78, align 8
  br label %80

79:                                               ; preds = %69
  store i8 0, i8* %73, align 4
  br label %80

80:                                               ; preds = %21, %2, %75, %79
  %81 = phi i1 [ true, %79 ], [ true, %75 ], [ false, %21 ], [ false, %2 ]
  ret i1 %81
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.std::__1::basic_string.5"* @_ZNK4base5Value13FindStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #2

declare i64 @_ZNK4base5Value10FindIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3net15UnescapeForHTMLEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #2

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK16SuggestionAnswer9TextField6EqualsERKS0_(%"class.SuggestionAnswer::TextField"* nocapture readonly, %"class.SuggestionAnswer::TextField"* nocapture readonly dereferenceable(40)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %63

8:                                                ; preds = %2
  %9 = bitcast %"class.SuggestionAnswer::TextField"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %11 to i64
  %16 = select i1 %12, i64 %14, i64 %15
  %17 = bitcast %"class.SuggestionAnswer::TextField"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %17, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %19 to i64
  %24 = select i1 %20, i64 %22, i64 %23
  %25 = icmp eq i64 %16, %24
  br i1 %25, label %26, label %63

26:                                               ; preds = %8
  %27 = icmp eq i64 %16, 0
  br i1 %27, label %49, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i16*, i16** %29, align 8
  %31 = bitcast %"class.SuggestionAnswer::TextField"* %1 to i16*
  %32 = select i1 %20, i16* %30, i16* %31
  %33 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i16*, i16** %33, align 8
  %35 = bitcast %"class.SuggestionAnswer::TextField"* %0 to i16*
  %36 = select i1 %12, i16* %34, i16* %35
  br label %37

37:                                               ; preds = %44, %28
  %38 = phi i64 [ %45, %44 ], [ %16, %28 ]
  %39 = phi i16* [ %47, %44 ], [ %32, %28 ]
  %40 = phi i16* [ %46, %44 ], [ %36, %28 ]
  %41 = load i16, i16* %40, align 2
  %42 = load i16, i16* %39, align 2
  %43 = icmp eq i16 %42, %41
  br i1 %43, label %44, label %63

44:                                               ; preds = %37
  %45 = add i64 %38, -1
  %46 = getelementptr inbounds i16, i16* %40, i64 1
  %47 = getelementptr inbounds i16, i16* %39, i64 1
  %48 = icmp eq i64 %45, 0
  br i1 %48, label %49, label %37

49:                                               ; preds = %44, %26
  %50 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %0, i64 0, i32 2
  %51 = load i8, i8* %50, align 4, !range !40
  %52 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %1, i64 0, i32 2
  %53 = load i8, i8* %52, align 4, !range !40
  %54 = icmp eq i8 %51, %53
  br i1 %54, label %55, label %63

55:                                               ; preds = %49
  %56 = icmp eq i8 %51, 0
  br i1 %56, label %63, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %0, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %1, i64 0, i32 3
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %59, %61
  br label %63

63:                                               ; preds = %37, %8, %55, %57, %49, %2
  %64 = phi i1 [ false, %49 ], [ false, %2 ], [ true, %55 ], [ %62, %57 ], [ false, %8 ], [ false, %37 ]
  ret i1 %64
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK16SuggestionAnswer9TextField19EstimateMemoryUsageEv(%"class.SuggestionAnswer::TextField"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %0, i64 0, i32 0
  %3 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIDsNSt3__111char_traitsIDsEENS2_9allocatorIDsEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %2) #12
  ret i64 %3
}

declare i64 @_ZN4base11trace_event19EstimateMemoryUsageIDsNSt3__111char_traitsIDsEENS2_9allocatorIDsEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SuggestionAnswer9ImageLineC2Ev(%"class.SuggestionAnswer::ImageLine"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.SuggestionAnswer::ImageLine"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #12
  %3 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 1
  store i32 1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %union.anon.50* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 40, i1 false) #12
  %8 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 4
  %9 = bitcast %union.anon.50* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 41, i1 false)
  tail call void @_ZN4GURLC1Ev(%class.GURL* %8) #12
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SuggestionAnswer9ImageLineC2ERKS0_(%"class.SuggestionAnswer::ImageLine"*, %"class.SuggestionAnswer::ImageLine"* dereferenceable(248)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.SuggestionAnswer::ImageLine"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #12
  %4 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"class.SuggestionAnswer::TextField"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.SuggestionAnswer::ImageLine"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 40
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %230, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 461168601842738790
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.SuggestionAnswer::ImageLine"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #14
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #13
  %18 = bitcast i8* %17 to %"class.SuggestionAnswer::TextField"*
  %19 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.SuggestionAnswer::TextField"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.SuggestionAnswer::ImageLine"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %18, i64 %10
  %23 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.SuggestionAnswer::TextField"* %22, %"class.SuggestionAnswer::TextField"** %23, align 8
  %24 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %24, align 8
  %26 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %4, align 8
  %27 = bitcast %"class.SuggestionAnswer::TextField"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"class.SuggestionAnswer::TextField"* %25, %26
  br i1 %29, label %228, label %30

30:                                               ; preds = %16
  %31 = bitcast i8* %17 to %"class.SuggestionAnswer::TextField"*
  br label %32

32:                                               ; preds = %218, %30
  %33 = phi %"class.SuggestionAnswer::TextField"* [ %224, %218 ], [ %31, %30 ]
  %34 = phi %"class.SuggestionAnswer::TextField"* [ %223, %218 ], [ %25, %30 ]
  %35 = bitcast %"class.SuggestionAnswer::TextField"* %34 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %35, i64 0, i32 1, i32 1
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.SuggestionAnswer::TextField"* %33 to i8*
  %41 = bitcast %"class.SuggestionAnswer::TextField"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #12
  br label %218

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i16*, i16** %43, align 8
  %45 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, 11
  br i1 %47, label %48, label %53

48:                                               ; preds = %42
  %49 = bitcast %"class.SuggestionAnswer::TextField"* %33 to i16*
  %50 = trunc i64 %46 to i8
  %51 = bitcast %"class.SuggestionAnswer::TextField"* %33 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %51, i64 0, i32 1, i32 1
  store i8 %50, i8* %52, align 1
  br label %70

53:                                               ; preds = %42
  %54 = icmp ugt i64 %46, 9223372036854775791
  br i1 %54, label %55, label %57

55:                                               ; preds = %53
  %56 = bitcast %"class.SuggestionAnswer::TextField"* %33 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %56) #14
  unreachable

57:                                               ; preds = %53
  %58 = add nuw nsw i64 %46, 8
  %59 = and i64 %58, -8
  %60 = icmp slt i64 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %57
  tail call void @abort() #14
  unreachable

62:                                               ; preds = %57
  %63 = shl i64 %59, 1
  %64 = tail call i8* @_Znwm(i64 %63) #13
  %65 = bitcast i8* %64 to i16*
  %66 = bitcast %"class.SuggestionAnswer::TextField"* %33 to i8**
  store i8* %64, i8** %66, align 8
  %67 = or i64 %59, -9223372036854775808
  %68 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %46, i64* %69, align 8
  br label %70

70:                                               ; preds = %62, %48
  %71 = phi i16* [ %49, %48 ], [ %65, %62 ]
  %72 = add nuw nsw i64 %46, 1
  %73 = add i64 %46, 1
  %74 = icmp ult i64 %73, 16
  br i1 %74, label %165, label %75

75:                                               ; preds = %70
  %76 = getelementptr i16, i16* %71, i64 1
  %77 = getelementptr i16, i16* %76, i64 %46
  %78 = getelementptr i16, i16* %44, i64 1
  %79 = getelementptr i16, i16* %78, i64 %46
  %80 = icmp ult i16* %71, %79
  %81 = icmp ult i16* %44, %77
  %82 = and i1 %80, %81
  br i1 %82, label %165, label %83

83:                                               ; preds = %75
  %84 = and i64 %73, -16
  %85 = sub i64 %72, %84
  %86 = getelementptr i16, i16* %44, i64 %84
  %87 = getelementptr i16, i16* %71, i64 %84
  %88 = add i64 %84, -16
  %89 = lshr exact i64 %88, 4
  %90 = add nuw nsw i64 %89, 1
  %91 = and i64 %90, 3
  %92 = icmp ult i64 %88, 48
  br i1 %92, label %144, label %93

93:                                               ; preds = %83
  %94 = sub nsw i64 %90, %91
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i64 [ 0, %93 ], [ %141, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %142, %95 ]
  %98 = getelementptr i16, i16* %44, i64 %96
  %99 = getelementptr i16, i16* %71, i64 %96
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !41
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !41
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !44, !noalias !41
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !44, !noalias !41
  %108 = or i64 %96, 16
  %109 = getelementptr i16, i16* %44, i64 %108
  %110 = getelementptr i16, i16* %71, i64 %108
  %111 = bitcast i16* %109 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !41
  %113 = getelementptr i16, i16* %109, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !41
  %116 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %116, align 2, !alias.scope !44, !noalias !41
  %117 = getelementptr i16, i16* %110, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !44, !noalias !41
  %119 = or i64 %96, 32
  %120 = getelementptr i16, i16* %44, i64 %119
  %121 = getelementptr i16, i16* %71, i64 %119
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !41
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !41
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !44, !noalias !41
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !44, !noalias !41
  %130 = or i64 %96, 48
  %131 = getelementptr i16, i16* %44, i64 %130
  %132 = getelementptr i16, i16* %71, i64 %130
  %133 = bitcast i16* %131 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !41
  %135 = getelementptr i16, i16* %131, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  %137 = load <8 x i16>, <8 x i16>* %136, align 2, !alias.scope !41
  %138 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %138, align 2, !alias.scope !44, !noalias !41
  %139 = getelementptr i16, i16* %132, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %137, <8 x i16>* %140, align 2, !alias.scope !44, !noalias !41
  %141 = add i64 %96, 64
  %142 = add i64 %97, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %95, !llvm.loop !46

144:                                              ; preds = %95, %83
  %145 = phi i64 [ 0, %83 ], [ %141, %95 ]
  %146 = icmp eq i64 %91, 0
  br i1 %146, label %163, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %160, %147 ], [ %145, %144 ]
  %149 = phi i64 [ %161, %147 ], [ %91, %144 ]
  %150 = getelementptr i16, i16* %44, i64 %148
  %151 = getelementptr i16, i16* %71, i64 %148
  %152 = bitcast i16* %150 to <8 x i16>*
  %153 = load <8 x i16>, <8 x i16>* %152, align 2, !alias.scope !41
  %154 = getelementptr i16, i16* %150, i64 8
  %155 = bitcast i16* %154 to <8 x i16>*
  %156 = load <8 x i16>, <8 x i16>* %155, align 2, !alias.scope !41
  %157 = bitcast i16* %151 to <8 x i16>*
  store <8 x i16> %153, <8 x i16>* %157, align 2, !alias.scope !44, !noalias !41
  %158 = getelementptr i16, i16* %151, i64 8
  %159 = bitcast i16* %158 to <8 x i16>*
  store <8 x i16> %156, <8 x i16>* %159, align 2, !alias.scope !44, !noalias !41
  %160 = add i64 %148, 16
  %161 = add i64 %149, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %147, !llvm.loop !47

163:                                              ; preds = %147, %144
  %164 = icmp eq i64 %73, %84
  br i1 %164, label %218, label %165

165:                                              ; preds = %163, %75, %70
  %166 = phi i64 [ %72, %75 ], [ %72, %70 ], [ %85, %163 ]
  %167 = phi i16* [ %44, %75 ], [ %44, %70 ], [ %86, %163 ]
  %168 = phi i16* [ %71, %75 ], [ %71, %70 ], [ %87, %163 ]
  %169 = add i64 %166, -1
  %170 = and i64 %166, 7
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %183, label %172

172:                                              ; preds = %165, %172
  %173 = phi i64 [ %178, %172 ], [ %166, %165 ]
  %174 = phi i16* [ %180, %172 ], [ %167, %165 ]
  %175 = phi i16* [ %179, %172 ], [ %168, %165 ]
  %176 = phi i64 [ %181, %172 ], [ %170, %165 ]
  %177 = load i16, i16* %174, align 2
  store i16 %177, i16* %175, align 2
  %178 = add i64 %173, -1
  %179 = getelementptr inbounds i16, i16* %175, i64 1
  %180 = getelementptr inbounds i16, i16* %174, i64 1
  %181 = add i64 %176, -1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %172, !llvm.loop !48

183:                                              ; preds = %172, %165
  %184 = phi i64 [ %166, %165 ], [ %178, %172 ]
  %185 = phi i16* [ %167, %165 ], [ %180, %172 ]
  %186 = phi i16* [ %168, %165 ], [ %179, %172 ]
  %187 = icmp ult i64 %169, 7
  br i1 %187, label %218, label %188

188:                                              ; preds = %183, %188
  %189 = phi i64 [ %214, %188 ], [ %184, %183 ]
  %190 = phi i16* [ %216, %188 ], [ %185, %183 ]
  %191 = phi i16* [ %215, %188 ], [ %186, %183 ]
  %192 = load i16, i16* %190, align 2
  store i16 %192, i16* %191, align 2
  %193 = getelementptr inbounds i16, i16* %191, i64 1
  %194 = getelementptr inbounds i16, i16* %190, i64 1
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %191, i64 2
  %197 = getelementptr inbounds i16, i16* %190, i64 2
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %191, i64 3
  %200 = getelementptr inbounds i16, i16* %190, i64 3
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = getelementptr inbounds i16, i16* %191, i64 4
  %203 = getelementptr inbounds i16, i16* %190, i64 4
  %204 = load i16, i16* %203, align 2
  store i16 %204, i16* %202, align 2
  %205 = getelementptr inbounds i16, i16* %191, i64 5
  %206 = getelementptr inbounds i16, i16* %190, i64 5
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = getelementptr inbounds i16, i16* %191, i64 6
  %209 = getelementptr inbounds i16, i16* %190, i64 6
  %210 = load i16, i16* %209, align 2
  store i16 %210, i16* %208, align 2
  %211 = getelementptr inbounds i16, i16* %191, i64 7
  %212 = getelementptr inbounds i16, i16* %190, i64 7
  %213 = load i16, i16* %212, align 2
  store i16 %213, i16* %211, align 2
  %214 = add i64 %189, -8
  %215 = getelementptr inbounds i16, i16* %191, i64 8
  %216 = getelementptr inbounds i16, i16* %190, i64 8
  %217 = icmp eq i64 %214, 0
  br i1 %217, label %218, label %188, !llvm.loop !49

218:                                              ; preds = %183, %188, %163, %39
  %219 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %33, i64 0, i32 1
  %220 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %34, i64 0, i32 1
  %221 = bitcast i32* %219 to i8*
  %222 = bitcast i32* %220 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %221, i8* align 8 %222, i64 16, i1 false) #12
  %223 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %34, i64 1
  %224 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %33, i64 1
  %225 = icmp eq %"class.SuggestionAnswer::TextField"* %223, %26
  br i1 %225, label %226, label %32

226:                                              ; preds = %218
  %227 = ptrtoint %"class.SuggestionAnswer::TextField"* %224 to i64
  br label %228

228:                                              ; preds = %16, %226
  %229 = phi i64 [ %28, %16 ], [ %227, %226 ]
  store i64 %229, i64* %27, align 8
  br label %230

230:                                              ; preds = %2, %228
  %231 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 1
  %232 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 1
  %233 = load i32, i32* %232, align 8
  store i32 %233, i32* %231, align 8
  %234 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %235 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %234, i8 0, i64 48, i1 false) #12
  %236 = load i8, i8* %235, align 8, !range !40
  %237 = icmp eq i8 %236, 0
  br i1 %237, label %428, label %238

238:                                              ; preds = %230
  %239 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %240 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %241 = bitcast %"class.SuggestionAnswer::TextField"* %239 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %241, i64 0, i32 1, i32 1
  %243 = load i8, i8* %242, align 1
  %244 = icmp slt i8 %243, 0
  br i1 %244, label %248, label %245

245:                                              ; preds = %238
  %246 = bitcast %"class.SuggestionAnswer::TextField"* %240 to i8*
  %247 = bitcast %"class.SuggestionAnswer::TextField"* %239 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %246, i8* align 8 %247, i64 24, i1 false) #12
  br label %423

248:                                              ; preds = %238
  %249 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %239, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = load i16*, i16** %249, align 8
  %251 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %252 = load i64, i64* %251, align 8
  %253 = icmp ult i64 %252, 11
  br i1 %253, label %254, label %259

254:                                              ; preds = %248
  %255 = bitcast %"class.SuggestionAnswer::TextField"* %240 to i16*
  %256 = trunc i64 %252 to i8
  %257 = bitcast %"class.SuggestionAnswer::TextField"* %240 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %258 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %257, i64 0, i32 1, i32 1
  store i8 %256, i8* %258, align 1
  br label %276

259:                                              ; preds = %248
  %260 = icmp ugt i64 %252, 9223372036854775791
  br i1 %260, label %261, label %263

261:                                              ; preds = %259
  %262 = bitcast %"class.SuggestionAnswer::TextField"* %240 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %262) #14
  unreachable

263:                                              ; preds = %259
  %264 = add nuw nsw i64 %252, 8
  %265 = and i64 %264, -8
  %266 = icmp slt i64 %265, 0
  br i1 %266, label %267, label %268

267:                                              ; preds = %263
  tail call void @abort() #14
  unreachable

268:                                              ; preds = %263
  %269 = shl i64 %265, 1
  %270 = tail call i8* @_Znwm(i64 %269) #13
  %271 = bitcast i8* %270 to i16*
  %272 = bitcast %"class.SuggestionAnswer::TextField"* %240 to i8**
  store i8* %270, i8** %272, align 8
  %273 = or i64 %265, -9223372036854775808
  %274 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %273, i64* %274, align 8
  %275 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %252, i64* %275, align 8
  br label %276

276:                                              ; preds = %268, %254
  %277 = phi i16* [ %255, %254 ], [ %271, %268 ]
  %278 = add nuw nsw i64 %252, 1
  %279 = add i64 %252, 1
  %280 = icmp ult i64 %279, 16
  br i1 %280, label %370, label %281

281:                                              ; preds = %276
  %282 = add i64 %252, 1
  %283 = getelementptr i16, i16* %277, i64 %282
  %284 = getelementptr i16, i16* %250, i64 %282
  %285 = icmp ult i16* %277, %284
  %286 = icmp ult i16* %250, %283
  %287 = and i1 %285, %286
  br i1 %287, label %370, label %288

288:                                              ; preds = %281
  %289 = and i64 %279, -16
  %290 = sub i64 %278, %289
  %291 = getelementptr i16, i16* %250, i64 %289
  %292 = getelementptr i16, i16* %277, i64 %289
  %293 = add i64 %289, -16
  %294 = lshr exact i64 %293, 4
  %295 = add nuw nsw i64 %294, 1
  %296 = and i64 %295, 3
  %297 = icmp ult i64 %293, 48
  br i1 %297, label %349, label %298

298:                                              ; preds = %288
  %299 = sub nsw i64 %295, %296
  br label %300

300:                                              ; preds = %300, %298
  %301 = phi i64 [ 0, %298 ], [ %346, %300 ]
  %302 = phi i64 [ %299, %298 ], [ %347, %300 ]
  %303 = getelementptr i16, i16* %250, i64 %301
  %304 = getelementptr i16, i16* %277, i64 %301
  %305 = bitcast i16* %303 to <8 x i16>*
  %306 = load <8 x i16>, <8 x i16>* %305, align 2, !alias.scope !50
  %307 = getelementptr i16, i16* %303, i64 8
  %308 = bitcast i16* %307 to <8 x i16>*
  %309 = load <8 x i16>, <8 x i16>* %308, align 2, !alias.scope !50
  %310 = bitcast i16* %304 to <8 x i16>*
  store <8 x i16> %306, <8 x i16>* %310, align 2, !alias.scope !53, !noalias !50
  %311 = getelementptr i16, i16* %304, i64 8
  %312 = bitcast i16* %311 to <8 x i16>*
  store <8 x i16> %309, <8 x i16>* %312, align 2, !alias.scope !53, !noalias !50
  %313 = or i64 %301, 16
  %314 = getelementptr i16, i16* %250, i64 %313
  %315 = getelementptr i16, i16* %277, i64 %313
  %316 = bitcast i16* %314 to <8 x i16>*
  %317 = load <8 x i16>, <8 x i16>* %316, align 2, !alias.scope !50
  %318 = getelementptr i16, i16* %314, i64 8
  %319 = bitcast i16* %318 to <8 x i16>*
  %320 = load <8 x i16>, <8 x i16>* %319, align 2, !alias.scope !50
  %321 = bitcast i16* %315 to <8 x i16>*
  store <8 x i16> %317, <8 x i16>* %321, align 2, !alias.scope !53, !noalias !50
  %322 = getelementptr i16, i16* %315, i64 8
  %323 = bitcast i16* %322 to <8 x i16>*
  store <8 x i16> %320, <8 x i16>* %323, align 2, !alias.scope !53, !noalias !50
  %324 = or i64 %301, 32
  %325 = getelementptr i16, i16* %250, i64 %324
  %326 = getelementptr i16, i16* %277, i64 %324
  %327 = bitcast i16* %325 to <8 x i16>*
  %328 = load <8 x i16>, <8 x i16>* %327, align 2, !alias.scope !50
  %329 = getelementptr i16, i16* %325, i64 8
  %330 = bitcast i16* %329 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !50
  %332 = bitcast i16* %326 to <8 x i16>*
  store <8 x i16> %328, <8 x i16>* %332, align 2, !alias.scope !53, !noalias !50
  %333 = getelementptr i16, i16* %326, i64 8
  %334 = bitcast i16* %333 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %334, align 2, !alias.scope !53, !noalias !50
  %335 = or i64 %301, 48
  %336 = getelementptr i16, i16* %250, i64 %335
  %337 = getelementptr i16, i16* %277, i64 %335
  %338 = bitcast i16* %336 to <8 x i16>*
  %339 = load <8 x i16>, <8 x i16>* %338, align 2, !alias.scope !50
  %340 = getelementptr i16, i16* %336, i64 8
  %341 = bitcast i16* %340 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !50
  %343 = bitcast i16* %337 to <8 x i16>*
  store <8 x i16> %339, <8 x i16>* %343, align 2, !alias.scope !53, !noalias !50
  %344 = getelementptr i16, i16* %337, i64 8
  %345 = bitcast i16* %344 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %345, align 2, !alias.scope !53, !noalias !50
  %346 = add i64 %301, 64
  %347 = add i64 %302, -4
  %348 = icmp eq i64 %347, 0
  br i1 %348, label %349, label %300, !llvm.loop !55

349:                                              ; preds = %300, %288
  %350 = phi i64 [ 0, %288 ], [ %346, %300 ]
  %351 = icmp eq i64 %296, 0
  br i1 %351, label %368, label %352

352:                                              ; preds = %349, %352
  %353 = phi i64 [ %365, %352 ], [ %350, %349 ]
  %354 = phi i64 [ %366, %352 ], [ %296, %349 ]
  %355 = getelementptr i16, i16* %250, i64 %353
  %356 = getelementptr i16, i16* %277, i64 %353
  %357 = bitcast i16* %355 to <8 x i16>*
  %358 = load <8 x i16>, <8 x i16>* %357, align 2, !alias.scope !50
  %359 = getelementptr i16, i16* %355, i64 8
  %360 = bitcast i16* %359 to <8 x i16>*
  %361 = load <8 x i16>, <8 x i16>* %360, align 2, !alias.scope !50
  %362 = bitcast i16* %356 to <8 x i16>*
  store <8 x i16> %358, <8 x i16>* %362, align 2, !alias.scope !53, !noalias !50
  %363 = getelementptr i16, i16* %356, i64 8
  %364 = bitcast i16* %363 to <8 x i16>*
  store <8 x i16> %361, <8 x i16>* %364, align 2, !alias.scope !53, !noalias !50
  %365 = add i64 %353, 16
  %366 = add i64 %354, -1
  %367 = icmp eq i64 %366, 0
  br i1 %367, label %368, label %352, !llvm.loop !56

368:                                              ; preds = %352, %349
  %369 = icmp eq i64 %279, %289
  br i1 %369, label %423, label %370

370:                                              ; preds = %368, %281, %276
  %371 = phi i64 [ %278, %281 ], [ %278, %276 ], [ %290, %368 ]
  %372 = phi i16* [ %250, %281 ], [ %250, %276 ], [ %291, %368 ]
  %373 = phi i16* [ %277, %281 ], [ %277, %276 ], [ %292, %368 ]
  %374 = add i64 %371, -1
  %375 = and i64 %371, 7
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %388, label %377

377:                                              ; preds = %370, %377
  %378 = phi i64 [ %383, %377 ], [ %371, %370 ]
  %379 = phi i16* [ %385, %377 ], [ %372, %370 ]
  %380 = phi i16* [ %384, %377 ], [ %373, %370 ]
  %381 = phi i64 [ %386, %377 ], [ %375, %370 ]
  %382 = load i16, i16* %379, align 2
  store i16 %382, i16* %380, align 2
  %383 = add i64 %378, -1
  %384 = getelementptr inbounds i16, i16* %380, i64 1
  %385 = getelementptr inbounds i16, i16* %379, i64 1
  %386 = add i64 %381, -1
  %387 = icmp eq i64 %386, 0
  br i1 %387, label %388, label %377, !llvm.loop !57

388:                                              ; preds = %377, %370
  %389 = phi i64 [ %371, %370 ], [ %383, %377 ]
  %390 = phi i16* [ %372, %370 ], [ %385, %377 ]
  %391 = phi i16* [ %373, %370 ], [ %384, %377 ]
  %392 = icmp ult i64 %374, 7
  br i1 %392, label %423, label %393

393:                                              ; preds = %388, %393
  %394 = phi i64 [ %419, %393 ], [ %389, %388 ]
  %395 = phi i16* [ %421, %393 ], [ %390, %388 ]
  %396 = phi i16* [ %420, %393 ], [ %391, %388 ]
  %397 = load i16, i16* %395, align 2
  store i16 %397, i16* %396, align 2
  %398 = getelementptr inbounds i16, i16* %396, i64 1
  %399 = getelementptr inbounds i16, i16* %395, i64 1
  %400 = load i16, i16* %399, align 2
  store i16 %400, i16* %398, align 2
  %401 = getelementptr inbounds i16, i16* %396, i64 2
  %402 = getelementptr inbounds i16, i16* %395, i64 2
  %403 = load i16, i16* %402, align 2
  store i16 %403, i16* %401, align 2
  %404 = getelementptr inbounds i16, i16* %396, i64 3
  %405 = getelementptr inbounds i16, i16* %395, i64 3
  %406 = load i16, i16* %405, align 2
  store i16 %406, i16* %404, align 2
  %407 = getelementptr inbounds i16, i16* %396, i64 4
  %408 = getelementptr inbounds i16, i16* %395, i64 4
  %409 = load i16, i16* %408, align 2
  store i16 %409, i16* %407, align 2
  %410 = getelementptr inbounds i16, i16* %396, i64 5
  %411 = getelementptr inbounds i16, i16* %395, i64 5
  %412 = load i16, i16* %411, align 2
  store i16 %412, i16* %410, align 2
  %413 = getelementptr inbounds i16, i16* %396, i64 6
  %414 = getelementptr inbounds i16, i16* %395, i64 6
  %415 = load i16, i16* %414, align 2
  store i16 %415, i16* %413, align 2
  %416 = getelementptr inbounds i16, i16* %396, i64 7
  %417 = getelementptr inbounds i16, i16* %395, i64 7
  %418 = load i16, i16* %417, align 2
  store i16 %418, i16* %416, align 2
  %419 = add i64 %394, -8
  %420 = getelementptr inbounds i16, i16* %396, i64 8
  %421 = getelementptr inbounds i16, i16* %395, i64 8
  %422 = icmp eq i64 %419, 0
  br i1 %422, label %423, label %393, !llvm.loop !58

423:                                              ; preds = %388, %393, %368, %245
  %424 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %425 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %426 = bitcast i32* %424 to i8*
  %427 = bitcast i32* %425 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %426, i8* align 8 %427, i64 16, i1 false) #12
  store i8 1, i8* %234, align 8
  br label %428

428:                                              ; preds = %230, %423
  %429 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %430 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %429, i8 0, i64 48, i1 false) #12
  %431 = load i8, i8* %430, align 8, !range !40
  %432 = icmp eq i8 %431, 0
  br i1 %432, label %623, label %433

433:                                              ; preds = %428
  %434 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %435 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %436 = bitcast %"class.SuggestionAnswer::TextField"* %434 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %437 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %436, i64 0, i32 1, i32 1
  %438 = load i8, i8* %437, align 1
  %439 = icmp slt i8 %438, 0
  br i1 %439, label %443, label %440

440:                                              ; preds = %433
  %441 = bitcast %"class.SuggestionAnswer::TextField"* %435 to i8*
  %442 = bitcast %"class.SuggestionAnswer::TextField"* %434 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %441, i8* align 8 %442, i64 24, i1 false) #12
  br label %618

443:                                              ; preds = %433
  %444 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %434, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %445 = load i16*, i16** %444, align 8
  %446 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %447 = load i64, i64* %446, align 8
  %448 = icmp ult i64 %447, 11
  br i1 %448, label %449, label %454

449:                                              ; preds = %443
  %450 = bitcast %"class.SuggestionAnswer::TextField"* %435 to i16*
  %451 = trunc i64 %447 to i8
  %452 = bitcast %"class.SuggestionAnswer::TextField"* %435 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %453 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %452, i64 0, i32 1, i32 1
  store i8 %451, i8* %453, align 1
  br label %471

454:                                              ; preds = %443
  %455 = icmp ugt i64 %447, 9223372036854775791
  br i1 %455, label %456, label %458

456:                                              ; preds = %454
  %457 = bitcast %"class.SuggestionAnswer::TextField"* %435 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %457) #14
  unreachable

458:                                              ; preds = %454
  %459 = add nuw nsw i64 %447, 8
  %460 = and i64 %459, -8
  %461 = icmp slt i64 %460, 0
  br i1 %461, label %462, label %463

462:                                              ; preds = %458
  tail call void @abort() #14
  unreachable

463:                                              ; preds = %458
  %464 = shl i64 %460, 1
  %465 = tail call i8* @_Znwm(i64 %464) #13
  %466 = bitcast i8* %465 to i16*
  %467 = bitcast %"class.SuggestionAnswer::TextField"* %435 to i8**
  store i8* %465, i8** %467, align 8
  %468 = or i64 %460, -9223372036854775808
  %469 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %468, i64* %469, align 8
  %470 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %447, i64* %470, align 8
  br label %471

471:                                              ; preds = %463, %449
  %472 = phi i16* [ %450, %449 ], [ %466, %463 ]
  %473 = add nuw nsw i64 %447, 1
  %474 = add i64 %447, 1
  %475 = icmp ult i64 %474, 16
  br i1 %475, label %565, label %476

476:                                              ; preds = %471
  %477 = add i64 %447, 1
  %478 = getelementptr i16, i16* %472, i64 %477
  %479 = getelementptr i16, i16* %445, i64 %477
  %480 = icmp ult i16* %472, %479
  %481 = icmp ult i16* %445, %478
  %482 = and i1 %480, %481
  br i1 %482, label %565, label %483

483:                                              ; preds = %476
  %484 = and i64 %474, -16
  %485 = sub i64 %473, %484
  %486 = getelementptr i16, i16* %445, i64 %484
  %487 = getelementptr i16, i16* %472, i64 %484
  %488 = add i64 %484, -16
  %489 = lshr exact i64 %488, 4
  %490 = add nuw nsw i64 %489, 1
  %491 = and i64 %490, 3
  %492 = icmp ult i64 %488, 48
  br i1 %492, label %544, label %493

493:                                              ; preds = %483
  %494 = sub nsw i64 %490, %491
  br label %495

495:                                              ; preds = %495, %493
  %496 = phi i64 [ 0, %493 ], [ %541, %495 ]
  %497 = phi i64 [ %494, %493 ], [ %542, %495 ]
  %498 = getelementptr i16, i16* %445, i64 %496
  %499 = getelementptr i16, i16* %472, i64 %496
  %500 = bitcast i16* %498 to <8 x i16>*
  %501 = load <8 x i16>, <8 x i16>* %500, align 2, !alias.scope !59
  %502 = getelementptr i16, i16* %498, i64 8
  %503 = bitcast i16* %502 to <8 x i16>*
  %504 = load <8 x i16>, <8 x i16>* %503, align 2, !alias.scope !59
  %505 = bitcast i16* %499 to <8 x i16>*
  store <8 x i16> %501, <8 x i16>* %505, align 2, !alias.scope !62, !noalias !59
  %506 = getelementptr i16, i16* %499, i64 8
  %507 = bitcast i16* %506 to <8 x i16>*
  store <8 x i16> %504, <8 x i16>* %507, align 2, !alias.scope !62, !noalias !59
  %508 = or i64 %496, 16
  %509 = getelementptr i16, i16* %445, i64 %508
  %510 = getelementptr i16, i16* %472, i64 %508
  %511 = bitcast i16* %509 to <8 x i16>*
  %512 = load <8 x i16>, <8 x i16>* %511, align 2, !alias.scope !59
  %513 = getelementptr i16, i16* %509, i64 8
  %514 = bitcast i16* %513 to <8 x i16>*
  %515 = load <8 x i16>, <8 x i16>* %514, align 2, !alias.scope !59
  %516 = bitcast i16* %510 to <8 x i16>*
  store <8 x i16> %512, <8 x i16>* %516, align 2, !alias.scope !62, !noalias !59
  %517 = getelementptr i16, i16* %510, i64 8
  %518 = bitcast i16* %517 to <8 x i16>*
  store <8 x i16> %515, <8 x i16>* %518, align 2, !alias.scope !62, !noalias !59
  %519 = or i64 %496, 32
  %520 = getelementptr i16, i16* %445, i64 %519
  %521 = getelementptr i16, i16* %472, i64 %519
  %522 = bitcast i16* %520 to <8 x i16>*
  %523 = load <8 x i16>, <8 x i16>* %522, align 2, !alias.scope !59
  %524 = getelementptr i16, i16* %520, i64 8
  %525 = bitcast i16* %524 to <8 x i16>*
  %526 = load <8 x i16>, <8 x i16>* %525, align 2, !alias.scope !59
  %527 = bitcast i16* %521 to <8 x i16>*
  store <8 x i16> %523, <8 x i16>* %527, align 2, !alias.scope !62, !noalias !59
  %528 = getelementptr i16, i16* %521, i64 8
  %529 = bitcast i16* %528 to <8 x i16>*
  store <8 x i16> %526, <8 x i16>* %529, align 2, !alias.scope !62, !noalias !59
  %530 = or i64 %496, 48
  %531 = getelementptr i16, i16* %445, i64 %530
  %532 = getelementptr i16, i16* %472, i64 %530
  %533 = bitcast i16* %531 to <8 x i16>*
  %534 = load <8 x i16>, <8 x i16>* %533, align 2, !alias.scope !59
  %535 = getelementptr i16, i16* %531, i64 8
  %536 = bitcast i16* %535 to <8 x i16>*
  %537 = load <8 x i16>, <8 x i16>* %536, align 2, !alias.scope !59
  %538 = bitcast i16* %532 to <8 x i16>*
  store <8 x i16> %534, <8 x i16>* %538, align 2, !alias.scope !62, !noalias !59
  %539 = getelementptr i16, i16* %532, i64 8
  %540 = bitcast i16* %539 to <8 x i16>*
  store <8 x i16> %537, <8 x i16>* %540, align 2, !alias.scope !62, !noalias !59
  %541 = add i64 %496, 64
  %542 = add i64 %497, -4
  %543 = icmp eq i64 %542, 0
  br i1 %543, label %544, label %495, !llvm.loop !64

544:                                              ; preds = %495, %483
  %545 = phi i64 [ 0, %483 ], [ %541, %495 ]
  %546 = icmp eq i64 %491, 0
  br i1 %546, label %563, label %547

547:                                              ; preds = %544, %547
  %548 = phi i64 [ %560, %547 ], [ %545, %544 ]
  %549 = phi i64 [ %561, %547 ], [ %491, %544 ]
  %550 = getelementptr i16, i16* %445, i64 %548
  %551 = getelementptr i16, i16* %472, i64 %548
  %552 = bitcast i16* %550 to <8 x i16>*
  %553 = load <8 x i16>, <8 x i16>* %552, align 2, !alias.scope !59
  %554 = getelementptr i16, i16* %550, i64 8
  %555 = bitcast i16* %554 to <8 x i16>*
  %556 = load <8 x i16>, <8 x i16>* %555, align 2, !alias.scope !59
  %557 = bitcast i16* %551 to <8 x i16>*
  store <8 x i16> %553, <8 x i16>* %557, align 2, !alias.scope !62, !noalias !59
  %558 = getelementptr i16, i16* %551, i64 8
  %559 = bitcast i16* %558 to <8 x i16>*
  store <8 x i16> %556, <8 x i16>* %559, align 2, !alias.scope !62, !noalias !59
  %560 = add i64 %548, 16
  %561 = add i64 %549, -1
  %562 = icmp eq i64 %561, 0
  br i1 %562, label %563, label %547, !llvm.loop !65

563:                                              ; preds = %547, %544
  %564 = icmp eq i64 %474, %484
  br i1 %564, label %618, label %565

565:                                              ; preds = %563, %476, %471
  %566 = phi i64 [ %473, %476 ], [ %473, %471 ], [ %485, %563 ]
  %567 = phi i16* [ %445, %476 ], [ %445, %471 ], [ %486, %563 ]
  %568 = phi i16* [ %472, %476 ], [ %472, %471 ], [ %487, %563 ]
  %569 = add i64 %566, -1
  %570 = and i64 %566, 7
  %571 = icmp eq i64 %570, 0
  br i1 %571, label %583, label %572

572:                                              ; preds = %565, %572
  %573 = phi i64 [ %578, %572 ], [ %566, %565 ]
  %574 = phi i16* [ %580, %572 ], [ %567, %565 ]
  %575 = phi i16* [ %579, %572 ], [ %568, %565 ]
  %576 = phi i64 [ %581, %572 ], [ %570, %565 ]
  %577 = load i16, i16* %574, align 2
  store i16 %577, i16* %575, align 2
  %578 = add i64 %573, -1
  %579 = getelementptr inbounds i16, i16* %575, i64 1
  %580 = getelementptr inbounds i16, i16* %574, i64 1
  %581 = add i64 %576, -1
  %582 = icmp eq i64 %581, 0
  br i1 %582, label %583, label %572, !llvm.loop !66

583:                                              ; preds = %572, %565
  %584 = phi i64 [ %566, %565 ], [ %578, %572 ]
  %585 = phi i16* [ %567, %565 ], [ %580, %572 ]
  %586 = phi i16* [ %568, %565 ], [ %579, %572 ]
  %587 = icmp ult i64 %569, 7
  br i1 %587, label %618, label %588

588:                                              ; preds = %583, %588
  %589 = phi i64 [ %614, %588 ], [ %584, %583 ]
  %590 = phi i16* [ %616, %588 ], [ %585, %583 ]
  %591 = phi i16* [ %615, %588 ], [ %586, %583 ]
  %592 = load i16, i16* %590, align 2
  store i16 %592, i16* %591, align 2
  %593 = getelementptr inbounds i16, i16* %591, i64 1
  %594 = getelementptr inbounds i16, i16* %590, i64 1
  %595 = load i16, i16* %594, align 2
  store i16 %595, i16* %593, align 2
  %596 = getelementptr inbounds i16, i16* %591, i64 2
  %597 = getelementptr inbounds i16, i16* %590, i64 2
  %598 = load i16, i16* %597, align 2
  store i16 %598, i16* %596, align 2
  %599 = getelementptr inbounds i16, i16* %591, i64 3
  %600 = getelementptr inbounds i16, i16* %590, i64 3
  %601 = load i16, i16* %600, align 2
  store i16 %601, i16* %599, align 2
  %602 = getelementptr inbounds i16, i16* %591, i64 4
  %603 = getelementptr inbounds i16, i16* %590, i64 4
  %604 = load i16, i16* %603, align 2
  store i16 %604, i16* %602, align 2
  %605 = getelementptr inbounds i16, i16* %591, i64 5
  %606 = getelementptr inbounds i16, i16* %590, i64 5
  %607 = load i16, i16* %606, align 2
  store i16 %607, i16* %605, align 2
  %608 = getelementptr inbounds i16, i16* %591, i64 6
  %609 = getelementptr inbounds i16, i16* %590, i64 6
  %610 = load i16, i16* %609, align 2
  store i16 %610, i16* %608, align 2
  %611 = getelementptr inbounds i16, i16* %591, i64 7
  %612 = getelementptr inbounds i16, i16* %590, i64 7
  %613 = load i16, i16* %612, align 2
  store i16 %613, i16* %611, align 2
  %614 = add i64 %589, -8
  %615 = getelementptr inbounds i16, i16* %591, i64 8
  %616 = getelementptr inbounds i16, i16* %590, i64 8
  %617 = icmp eq i64 %614, 0
  br i1 %617, label %618, label %588, !llvm.loop !67

618:                                              ; preds = %583, %588, %563, %440
  %619 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %620 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %621 = bitcast i32* %619 to i8*
  %622 = bitcast i32* %620 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %621, i8* align 8 %622, i64 16, i1 false) #12
  store i8 1, i8* %429, align 8
  br label %623

623:                                              ; preds = %428, %618
  %624 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 4
  %625 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 4
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %624, %class.GURL* dereferenceable(120) %625) #12
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SuggestionAnswer9ImageLineC2EOS0_(%"class.SuggestionAnswer::ImageLine"*, %"class.SuggestionAnswer::ImageLine"* dereferenceable(248)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.SuggestionAnswer::ImageLine"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #12
  %4 = bitcast %"class.SuggestionAnswer::ImageLine"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.SuggestionAnswer::ImageLine"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.SuggestionAnswer::TextField"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.SuggestionAnswer::TextField"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.SuggestionAnswer::TextField"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.SuggestionAnswer::TextField"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"class.SuggestionAnswer::ImageLine"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #12
  %18 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  store i32 %20, i32* %18, align 8
  %21 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 48, i1 false) #12
  %23 = load i8, i8* %22, align 8, !range !40
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %34, label %25

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %27 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %28 = bitcast %"class.SuggestionAnswer::TextField"* %27 to i8*
  %29 = bitcast %"class.SuggestionAnswer::TextField"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #12
  %30 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %31 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %32 = bitcast i32* %30 to i8*
  %33 = bitcast i32* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 16, i1 false) #12
  store i8 1, i8* %21, align 8
  br label %34

34:                                               ; preds = %2, %25
  %35 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 48, i1 false) #12
  %37 = load i8, i8* %36, align 8, !range !40
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %48, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %41 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %42 = bitcast %"class.SuggestionAnswer::TextField"* %41 to i8*
  %43 = bitcast %"class.SuggestionAnswer::TextField"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #12
  %44 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %45 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %46 = bitcast i32* %44 to i8*
  %47 = bitcast i32* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 16, i1 false) #12
  store i8 1, i8* %35, align 8
  br label %48

48:                                               ; preds = %34, %39
  %49 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 4
  %50 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 4
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %49, %class.GURL* dereferenceable(120) %50) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLC1EOS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(248) %"class.SuggestionAnswer::ImageLine"* @_ZN16SuggestionAnswer9ImageLineaSERKS0_(%"class.SuggestionAnswer::ImageLine"* returned, %"class.SuggestionAnswer::ImageLine"* dereferenceable(248)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.SuggestionAnswer::ImageLine"* %0, %1
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %6, align 8
  %8 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %8, align 8
  tail call void @_ZNSt3__16vectorIN16SuggestionAnswer9TextFieldENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.39"* %5, %"class.SuggestionAnswer::TextField"* %7, %"class.SuggestionAnswer::TextField"* %9) #12
  br label %10

10:                                               ; preds = %2, %4
  %11 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 1
  store i32 %12, i32* %13, align 8
  %14 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2
  %16 = tail call dereferenceable(48) %"class.absl::optional.46"* @_ZN4absl8optionalIN16SuggestionAnswer9TextFieldEEaSERKS3_(%"class.absl::optional.46"* %14, %"class.absl::optional.46"* dereferenceable(48) %15)
  %17 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 3
  %18 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3
  %19 = tail call dereferenceable(48) %"class.absl::optional.46"* @_ZN4absl8optionalIN16SuggestionAnswer9TextFieldEEaSERKS3_(%"class.absl::optional.46"* %17, %"class.absl::optional.46"* dereferenceable(48) %18)
  %20 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 4
  %21 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 4
  %22 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %20, %class.GURL* dereferenceable(120) %21) #12
  ret %"class.SuggestionAnswer::ImageLine"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(48) %"class.absl::optional.46"* @_ZN4absl8optionalIN16SuggestionAnswer9TextFieldEEaSERKS3_(%"class.absl::optional.46"*, %"class.absl::optional.46"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::optional.46", %"class.absl::optional.46"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !40
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %208, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.absl::optional.46", %"class.absl::optional.46"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.absl::optional.46", %"class.absl::optional.46"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !40
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %19, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.absl::optional.46", %"class.absl::optional.46"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %13 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %7, i64 0, i32 0
  %14 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %12, %"class.std::__1::basic_string"* dereferenceable(24) %13) #12
  %15 = getelementptr inbounds %"class.absl::optional.46", %"class.absl::optional.46"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %16 = getelementptr inbounds %"class.absl::optional.46", %"class.absl::optional.46"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %17 = bitcast i32* %15 to i8*
  %18 = bitcast i32* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 16, i1 false) #12
  br label %222

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"class.absl::optional.46", %"class.absl::optional.46"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %21 = bitcast %"class.SuggestionAnswer::TextField"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %21, i64 0, i32 1, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %19
  %26 = bitcast %"class.SuggestionAnswer::TextField"* %20 to i8*
  %27 = bitcast %"class.SuggestionAnswer::TextField"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false) #12
  br label %203

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i16*, i16** %29, align 8
  %31 = getelementptr inbounds %"class.absl::optional.46", %"class.absl::optional.46"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = icmp ult i64 %32, 11
  br i1 %33, label %34, label %39

34:                                               ; preds = %28
  %35 = bitcast %"class.SuggestionAnswer::TextField"* %20 to i16*
  %36 = trunc i64 %32 to i8
  %37 = bitcast %"class.SuggestionAnswer::TextField"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  store i8 %36, i8* %38, align 1
  br label %56

39:                                               ; preds = %28
  %40 = icmp ugt i64 %32, 9223372036854775791
  br i1 %40, label %41, label %43

41:                                               ; preds = %39
  %42 = bitcast %"class.SuggestionAnswer::TextField"* %20 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %42) #14
  unreachable

43:                                               ; preds = %39
  %44 = add nuw nsw i64 %32, 8
  %45 = and i64 %44, -8
  %46 = icmp slt i64 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %43
  tail call void @abort() #14
  unreachable

48:                                               ; preds = %43
  %49 = shl i64 %45, 1
  %50 = tail call i8* @_Znwm(i64 %49) #13
  %51 = bitcast i8* %50 to i16*
  %52 = bitcast %"class.SuggestionAnswer::TextField"* %20 to i8**
  store i8* %50, i8** %52, align 8
  %53 = or i64 %45, -9223372036854775808
  %54 = getelementptr inbounds %"class.absl::optional.46", %"class.absl::optional.46"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"class.absl::optional.46", %"class.absl::optional.46"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %32, i64* %55, align 8
  br label %56

56:                                               ; preds = %48, %34
  %57 = phi i16* [ %35, %34 ], [ %51, %48 ]
  %58 = add nuw nsw i64 %32, 1
  %59 = add i64 %32, 1
  %60 = icmp ult i64 %59, 16
  br i1 %60, label %150, label %61

61:                                               ; preds = %56
  %62 = add i64 %32, 1
  %63 = getelementptr i16, i16* %57, i64 %62
  %64 = getelementptr i16, i16* %30, i64 %62
  %65 = icmp ult i16* %57, %64
  %66 = icmp ult i16* %30, %63
  %67 = and i1 %65, %66
  br i1 %67, label %150, label %68

68:                                               ; preds = %61
  %69 = and i64 %59, -16
  %70 = sub i64 %58, %69
  %71 = getelementptr i16, i16* %30, i64 %69
  %72 = getelementptr i16, i16* %57, i64 %69
  %73 = add i64 %69, -16
  %74 = lshr exact i64 %73, 4
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 3
  %77 = icmp ult i64 %73, 48
  br i1 %77, label %129, label %78

78:                                               ; preds = %68
  %79 = sub nsw i64 %75, %76
  br label %80

80:                                               ; preds = %80, %78
  %81 = phi i64 [ 0, %78 ], [ %126, %80 ]
  %82 = phi i64 [ %79, %78 ], [ %127, %80 ]
  %83 = getelementptr i16, i16* %30, i64 %81
  %84 = getelementptr i16, i16* %57, i64 %81
  %85 = bitcast i16* %83 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !68
  %87 = getelementptr i16, i16* %83, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !68
  %90 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %90, align 2, !alias.scope !71, !noalias !68
  %91 = getelementptr i16, i16* %84, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %92, align 2, !alias.scope !71, !noalias !68
  %93 = or i64 %81, 16
  %94 = getelementptr i16, i16* %30, i64 %93
  %95 = getelementptr i16, i16* %57, i64 %93
  %96 = bitcast i16* %94 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !68
  %98 = getelementptr i16, i16* %94, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !68
  %101 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %101, align 2, !alias.scope !71, !noalias !68
  %102 = getelementptr i16, i16* %95, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %103, align 2, !alias.scope !71, !noalias !68
  %104 = or i64 %81, 32
  %105 = getelementptr i16, i16* %30, i64 %104
  %106 = getelementptr i16, i16* %57, i64 %104
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !68
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !68
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !71, !noalias !68
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !71, !noalias !68
  %115 = or i64 %81, 48
  %116 = getelementptr i16, i16* %30, i64 %115
  %117 = getelementptr i16, i16* %57, i64 %115
  %118 = bitcast i16* %116 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !68
  %120 = getelementptr i16, i16* %116, i64 8
  %121 = bitcast i16* %120 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !68
  %123 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %123, align 2, !alias.scope !71, !noalias !68
  %124 = getelementptr i16, i16* %117, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %125, align 2, !alias.scope !71, !noalias !68
  %126 = add i64 %81, 64
  %127 = add i64 %82, -4
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %129, label %80, !llvm.loop !73

129:                                              ; preds = %80, %68
  %130 = phi i64 [ 0, %68 ], [ %126, %80 ]
  %131 = icmp eq i64 %76, 0
  br i1 %131, label %148, label %132

132:                                              ; preds = %129, %132
  %133 = phi i64 [ %145, %132 ], [ %130, %129 ]
  %134 = phi i64 [ %146, %132 ], [ %76, %129 ]
  %135 = getelementptr i16, i16* %30, i64 %133
  %136 = getelementptr i16, i16* %57, i64 %133
  %137 = bitcast i16* %135 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !68
  %139 = getelementptr i16, i16* %135, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !68
  %142 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %142, align 2, !alias.scope !71, !noalias !68
  %143 = getelementptr i16, i16* %136, i64 8
  %144 = bitcast i16* %143 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %144, align 2, !alias.scope !71, !noalias !68
  %145 = add i64 %133, 16
  %146 = add i64 %134, -1
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %132, !llvm.loop !74

148:                                              ; preds = %132, %129
  %149 = icmp eq i64 %59, %69
  br i1 %149, label %203, label %150

150:                                              ; preds = %148, %61, %56
  %151 = phi i64 [ %58, %61 ], [ %58, %56 ], [ %70, %148 ]
  %152 = phi i16* [ %30, %61 ], [ %30, %56 ], [ %71, %148 ]
  %153 = phi i16* [ %57, %61 ], [ %57, %56 ], [ %72, %148 ]
  %154 = add i64 %151, -1
  %155 = and i64 %151, 7
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %168, label %157

157:                                              ; preds = %150, %157
  %158 = phi i64 [ %163, %157 ], [ %151, %150 ]
  %159 = phi i16* [ %165, %157 ], [ %152, %150 ]
  %160 = phi i16* [ %164, %157 ], [ %153, %150 ]
  %161 = phi i64 [ %166, %157 ], [ %155, %150 ]
  %162 = load i16, i16* %159, align 2
  store i16 %162, i16* %160, align 2
  %163 = add i64 %158, -1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = getelementptr inbounds i16, i16* %159, i64 1
  %166 = add i64 %161, -1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %168, label %157, !llvm.loop !75

168:                                              ; preds = %157, %150
  %169 = phi i64 [ %151, %150 ], [ %163, %157 ]
  %170 = phi i16* [ %152, %150 ], [ %165, %157 ]
  %171 = phi i16* [ %153, %150 ], [ %164, %157 ]
  %172 = icmp ult i64 %154, 7
  br i1 %172, label %203, label %173

173:                                              ; preds = %168, %173
  %174 = phi i64 [ %199, %173 ], [ %169, %168 ]
  %175 = phi i16* [ %201, %173 ], [ %170, %168 ]
  %176 = phi i16* [ %200, %173 ], [ %171, %168 ]
  %177 = load i16, i16* %175, align 2
  store i16 %177, i16* %176, align 2
  %178 = getelementptr inbounds i16, i16* %176, i64 1
  %179 = getelementptr inbounds i16, i16* %175, i64 1
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %176, i64 2
  %182 = getelementptr inbounds i16, i16* %175, i64 2
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %176, i64 3
  %185 = getelementptr inbounds i16, i16* %175, i64 3
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %176, i64 4
  %188 = getelementptr inbounds i16, i16* %175, i64 4
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %176, i64 5
  %191 = getelementptr inbounds i16, i16* %175, i64 5
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %176, i64 6
  %194 = getelementptr inbounds i16, i16* %175, i64 6
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %176, i64 7
  %197 = getelementptr inbounds i16, i16* %175, i64 7
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = add i64 %174, -8
  %200 = getelementptr inbounds i16, i16* %176, i64 8
  %201 = getelementptr inbounds i16, i16* %175, i64 8
  %202 = icmp eq i64 %199, 0
  br i1 %202, label %203, label %173, !llvm.loop !76

203:                                              ; preds = %168, %173, %148, %25
  %204 = getelementptr inbounds %"class.absl::optional.46", %"class.absl::optional.46"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %205 = getelementptr inbounds %"class.absl::optional.46", %"class.absl::optional.46"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %206 = bitcast i32* %204 to i8*
  %207 = bitcast i32* %205 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %206, i8* align 8 %207, i64 16, i1 false) #12
  store i8 1, i8* %8, align 8
  br label %222

208:                                              ; preds = %2
  %209 = getelementptr inbounds %"class.absl::optional.46", %"class.absl::optional.46"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %210 = load i8, i8* %209, align 8, !range !40
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %222, label %212

212:                                              ; preds = %208
  %213 = getelementptr inbounds %"class.absl::optional.46", %"class.absl::optional.46"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %214 = bitcast %"class.SuggestionAnswer::TextField"* %213 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %215 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %214, i64 0, i32 1, i32 1
  %216 = load i8, i8* %215, align 1
  %217 = icmp slt i8 %216, 0
  br i1 %217, label %218, label %221

218:                                              ; preds = %212
  %219 = bitcast %"class.SuggestionAnswer::TextField"* %213 to i8**
  %220 = load i8*, i8** %219, align 8
  tail call void @_ZdlPv(i8* %220) #13
  br label %221

221:                                              ; preds = %218, %212
  store i8 0, i8* %209, align 8
  br label %222

222:                                              ; preds = %11, %203, %208, %221
  ret %"class.absl::optional.46"* %0
}

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(248) %"class.SuggestionAnswer::ImageLine"* @_ZN16SuggestionAnswer9ImageLineaSEOS0_(%"class.SuggestionAnswer::ImageLine"* returned, %"class.SuggestionAnswer::ImageLine"* dereferenceable(248)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %3, align 8
  %5 = icmp eq %"class.SuggestionAnswer::TextField"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.SuggestionAnswer::TextField"* %4 to i8*
  %8 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %8, align 8
  %10 = icmp eq %"class.SuggestionAnswer::TextField"* %9, %4
  br i1 %10, label %26, label %11

11:                                               ; preds = %6, %21
  %12 = phi %"class.SuggestionAnswer::TextField"* [ %13, %21 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %12, i64 -1
  %14 = bitcast %"class.SuggestionAnswer::TextField"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %11
  %19 = bitcast %"class.SuggestionAnswer::TextField"* %13 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #13
  br label %21

21:                                               ; preds = %18, %11
  %22 = icmp eq %"class.SuggestionAnswer::TextField"* %13, %4
  br i1 %22, label %23, label %11

23:                                               ; preds = %21
  %24 = bitcast %"class.SuggestionAnswer::ImageLine"* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %6
  %27 = phi i8* [ %25, %23 ], [ %7, %6 ]
  store %"class.SuggestionAnswer::TextField"* %4, %"class.SuggestionAnswer::TextField"** %8, align 8
  tail call void @_ZdlPv(i8* %27) #13
  %28 = bitcast %"class.SuggestionAnswer::ImageLine"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #12
  br label %29

29:                                               ; preds = %2, %26
  %30 = bitcast %"class.SuggestionAnswer::ImageLine"* %1 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.SuggestionAnswer::ImageLine"* %0 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 0, i32 0, i32 1
  %34 = bitcast %"class.SuggestionAnswer::TextField"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 0, i32 0, i32 1
  %37 = bitcast %"class.SuggestionAnswer::TextField"** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast %"class.SuggestionAnswer::TextField"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast %"class.SuggestionAnswer::TextField"** %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = bitcast %"class.SuggestionAnswer::ImageLine"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #12
  %44 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 1
  store i32 %45, i32* %46, align 8
  %47 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2
  %48 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %49 = load i8, i8* %48, align 8, !range !40
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %82, label %51

51:                                               ; preds = %29
  %52 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %53 = getelementptr inbounds %"class.absl::optional.46", %"class.absl::optional.46"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8, i8* %53, align 8, !range !40
  %55 = icmp eq i8 %54, 0
  %56 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %55, label %75, label %57

57:                                               ; preds = %51
  %58 = bitcast %"class.SuggestionAnswer::TextField"* %56 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %58, i64 0, i32 1, i32 1
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %57
  %63 = bitcast %"class.SuggestionAnswer::TextField"* %56 to i8**
  %64 = load i8*, i8** %63, align 8
  tail call void @_ZdlPv(i8* %64) #13
  br label %65

65:                                               ; preds = %62, %57
  %66 = bitcast %"class.SuggestionAnswer::TextField"* %56 to i8*
  %67 = bitcast %"class.SuggestionAnswer::TextField"* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 24, i1 false) #12
  %68 = bitcast %"class.SuggestionAnswer::TextField"* %52 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %68, i64 0, i32 1, i32 1
  store i8 0, i8* %69, align 1
  %70 = bitcast %"class.SuggestionAnswer::TextField"* %52 to i16*
  store i16 0, i16* %70, align 2
  %71 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %72 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %73 = bitcast i32* %71 to i8*
  %74 = bitcast i32* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 16, i1 false) #12
  br label %96

75:                                               ; preds = %51
  %76 = bitcast %"class.SuggestionAnswer::TextField"* %56 to i8*
  %77 = bitcast %"class.SuggestionAnswer::TextField"* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 24, i1 false) #12
  %78 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %79 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %80 = bitcast i32* %78 to i8*
  %81 = bitcast i32* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 16, i1 false) #12
  store i8 1, i8* %53, align 8
  br label %96

82:                                               ; preds = %29
  %83 = getelementptr inbounds %"class.absl::optional.46", %"class.absl::optional.46"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8, i8* %83, align 8, !range !40
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %96, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %88 = bitcast %"class.SuggestionAnswer::TextField"* %87 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %88, i64 0, i32 1, i32 1
  %90 = load i8, i8* %89, align 1
  %91 = icmp slt i8 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %86
  %93 = bitcast %"class.SuggestionAnswer::TextField"* %87 to i8**
  %94 = load i8*, i8** %93, align 8
  tail call void @_ZdlPv(i8* %94) #13
  br label %95

95:                                               ; preds = %92, %86
  store i8 0, i8* %83, align 8
  br label %96

96:                                               ; preds = %65, %75, %82, %95
  %97 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 3
  %98 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %99 = load i8, i8* %98, align 8, !range !40
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %132, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %103 = getelementptr inbounds %"class.absl::optional.46", %"class.absl::optional.46"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load i8, i8* %103, align 8, !range !40
  %105 = icmp eq i8 %104, 0
  %106 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %105, label %125, label %107

107:                                              ; preds = %101
  %108 = bitcast %"class.SuggestionAnswer::TextField"* %106 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %108, i64 0, i32 1, i32 1
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %107
  %113 = bitcast %"class.SuggestionAnswer::TextField"* %106 to i8**
  %114 = load i8*, i8** %113, align 8
  tail call void @_ZdlPv(i8* %114) #13
  br label %115

115:                                              ; preds = %112, %107
  %116 = bitcast %"class.SuggestionAnswer::TextField"* %106 to i8*
  %117 = bitcast %"class.SuggestionAnswer::TextField"* %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* align 8 %117, i64 24, i1 false) #12
  %118 = bitcast %"class.SuggestionAnswer::TextField"* %102 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %118, i64 0, i32 1, i32 1
  store i8 0, i8* %119, align 1
  %120 = bitcast %"class.SuggestionAnswer::TextField"* %102 to i16*
  store i16 0, i16* %120, align 2
  %121 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %122 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %123 = bitcast i32* %121 to i8*
  %124 = bitcast i32* %122 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %124, i64 16, i1 false) #12
  br label %146

125:                                              ; preds = %101
  %126 = bitcast %"class.SuggestionAnswer::TextField"* %106 to i8*
  %127 = bitcast %"class.SuggestionAnswer::TextField"* %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 %127, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %127, i8 0, i64 24, i1 false) #12
  %128 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %129 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %130 = bitcast i32* %128 to i8*
  %131 = bitcast i32* %129 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* align 8 %131, i64 16, i1 false) #12
  store i8 1, i8* %103, align 8
  br label %146

132:                                              ; preds = %96
  %133 = getelementptr inbounds %"class.absl::optional.46", %"class.absl::optional.46"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i8, i8* %133, align 8, !range !40
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %146, label %136

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %138 = bitcast %"class.SuggestionAnswer::TextField"* %137 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %139 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %138, i64 0, i32 1, i32 1
  %140 = load i8, i8* %139, align 1
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %142, label %145

142:                                              ; preds = %136
  %143 = bitcast %"class.SuggestionAnswer::TextField"* %137 to i8**
  %144 = load i8*, i8** %143, align 8
  tail call void @_ZdlPv(i8* %144) #13
  br label %145

145:                                              ; preds = %142, %136
  store i8 0, i8* %133, align 8
  br label %146

146:                                              ; preds = %115, %125, %132, %145
  %147 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 4
  %148 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 4
  %149 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %147, %class.GURL* dereferenceable(120) %148) #12
  ret %"class.SuggestionAnswer::ImageLine"* %0
}

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SuggestionAnswer9ImageLineD2Ev(%"class.SuggestionAnswer::ImageLine"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 4
  tail call void @_ZN4GURLD1Ev(%class.GURL* %2) #12
  %3 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !40
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = bitcast %"class.SuggestionAnswer::TextField"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %6
  %13 = bitcast %"class.SuggestionAnswer::TextField"* %7 to i8**
  %14 = load i8*, i8** %13, align 8
  tail call void @_ZdlPv(i8* %14) #13
  br label %15

15:                                               ; preds = %12, %6
  store i8 0, i8* %3, align 8
  br label %16

16:                                               ; preds = %1, %15
  %17 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 8, !range !40
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %22 = bitcast %"class.SuggestionAnswer::TextField"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = bitcast %"class.SuggestionAnswer::TextField"* %21 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #13
  br label %29

29:                                               ; preds = %26, %20
  store i8 0, i8* %17, align 8
  br label %30

30:                                               ; preds = %16, %29
  %31 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %31, align 8
  %33 = icmp eq %"class.SuggestionAnswer::TextField"* %32, null
  br i1 %33, label %56, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.SuggestionAnswer::TextField"* %32 to i8*
  %36 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 0, i32 0, i32 1
  %37 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %36, align 8
  %38 = icmp eq %"class.SuggestionAnswer::TextField"* %37, %32
  br i1 %38, label %54, label %39

39:                                               ; preds = %34, %49
  %40 = phi %"class.SuggestionAnswer::TextField"* [ %41, %49 ], [ %37, %34 ]
  %41 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %40, i64 -1
  %42 = bitcast %"class.SuggestionAnswer::TextField"* %41 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %42, i64 0, i32 1, i32 1
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %39
  %47 = bitcast %"class.SuggestionAnswer::TextField"* %41 to i8**
  %48 = load i8*, i8** %47, align 8
  tail call void @_ZdlPv(i8* %48) #13
  br label %49

49:                                               ; preds = %46, %39
  %50 = icmp eq %"class.SuggestionAnswer::TextField"* %41, %32
  br i1 %50, label %51, label %39

51:                                               ; preds = %49
  %52 = bitcast %"class.SuggestionAnswer::ImageLine"* %0 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %51, %34
  %55 = phi i8* [ %53, %51 ], [ %35, %34 ]
  store %"class.SuggestionAnswer::TextField"* %32, %"class.SuggestionAnswer::TextField"** %36, align 8
  tail call void @_ZdlPv(i8* %55) #13
  br label %56

56:                                               ; preds = %30, %54
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16SuggestionAnswer9ImageLine14ParseImageLineERKN4base5ValueEPS0_(%"class.base::Value"* dereferenceable(32), %"class.SuggestionAnswer::ImageLine"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::CheckedContiguousIterator", align 8
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = alloca %"class.SuggestionAnswer::TextField", align 8
  %6 = alloca [15 x i8], align 8
  %7 = alloca [3 x i8], align 1
  %8 = alloca [15 x i8], align 8
  %9 = alloca [3 x i8], align 1
  %10 = alloca %class.GURL, align 8
  %11 = alloca %"class.std::__1::basic_string.5", align 8
  %12 = alloca %"class.std::__1::basic_string.5", align 8
  %13 = alloca %"class.std::__1::basic_string.5", align 8
  %14 = tail call %"class.base::Value"* @_ZNK4base5Value13FindKeyOfTypeENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_4TypeE(%"class.base::Value"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZN12_GLOBAL__N_120kAnswerJsonImageLineE, i64 0, i64 0), i64 2, i8 zeroext 6) #12
  %15 = icmp eq %"class.base::Value"* %14, null
  br i1 %15, label %532, label %16

16:                                               ; preds = %2
  %17 = tail call %"class.base::Value"* @_ZNK4base5Value13FindKeyOfTypeENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_4TypeE(%"class.base::Value"* nonnull %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZN12_GLOBAL__N_115kAnswerJsonTextE, i64 0, i64 0), i64 1, i8 zeroext 7) #12
  %18 = icmp eq %"class.base::Value"* %17, null
  br i1 %18, label %532, label %19

19:                                               ; preds = %16
  %20 = tail call %"class.std::__1::vector.29"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* nonnull %17) #12
  %21 = icmp eq %"class.std::__1::vector.29"* %20, null
  br i1 %21, label %532, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %20, i64 0, i32 0, i32 0
  %24 = load %"class.base::Value"*, %"class.base::Value"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %20, i64 0, i32 0, i32 1
  %26 = load %"class.base::Value"*, %"class.base::Value"** %25, align 8
  %27 = icmp eq %"class.base::Value"* %24, %26
  br i1 %27, label %532, label %28

28:                                               ; preds = %22
  %29 = tail call %"class.std::__1::vector.29"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* nonnull %17) #12
  %30 = bitcast %"class.base::CheckedContiguousIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #12
  %31 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %3, i64 0, i32 1
  %32 = icmp eq %"class.std::__1::vector.29"* %29, null
  %33 = bitcast %"class.base::CheckedContiguousIterator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 24, i1 false)
  br i1 %32, label %43, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %29, i64 0, i32 0, i32 0
  %36 = load %"class.base::Value"*, %"class.base::Value"** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %29, i64 0, i32 0, i32 1
  %38 = bitcast %"class.base::Value"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = ptrtoint %"class.base::Value"* %36 to i64
  %41 = sub i64 %39, %40
  %42 = ashr exact i64 %41, 5
  br label %43

43:                                               ; preds = %28, %34
  %44 = phi %"class.base::Value"* [ %36, %34 ], [ null, %28 ]
  %45 = phi i64 [ %42, %34 ], [ 0, %28 ]
  %46 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %44, i64 %45
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %3, %"class.base::Value"* %44, %"class.base::Value"* %44, %"class.base::Value"* %46) #12
  %47 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #12
  %48 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %4, i64 0, i32 1
  %49 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false)
  br i1 %32, label %60, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %29, i64 0, i32 0, i32 0
  %52 = load %"class.base::Value"*, %"class.base::Value"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %29, i64 0, i32 0, i32 1
  %54 = bitcast %"class.base::Value"** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = ptrtoint %"class.base::Value"* %52 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 5
  %59 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %52, i64 %58
  br label %60

60:                                               ; preds = %43, %50
  %61 = phi %"class.base::Value"* [ %52, %50 ], [ null, %43 ]
  %62 = phi %"class.base::Value"* [ %59, %50 ], [ null, %43 ]
  %63 = phi i64 [ %58, %50 ], [ 0, %43 ]
  %64 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %61, i64 %63
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.base::Value"* %61, %"class.base::Value"* %62, %"class.base::Value"* %64) #12
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %3, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %4) #12
  %65 = load %"class.base::Value"*, %"class.base::Value"** %31, align 8
  %66 = load %"class.base::Value"*, %"class.base::Value"** %48, align 8
  %67 = icmp eq %"class.base::Value"* %65, %66
  br i1 %67, label %306, label %68

68:                                               ; preds = %60
  %69 = bitcast %"class.SuggestionAnswer::TextField"* %5 to i8*
  %70 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %5, i64 0, i32 1
  %71 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %5, i64 0, i32 2
  %72 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %5, i64 0, i32 3
  %73 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %5, i64 0, i32 4
  %74 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 0, i32 0, i32 1
  %75 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %76 = bitcast %"class.SuggestionAnswer::TextField"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %76, i64 0, i32 1, i32 1
  %78 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = bitcast i32* %70 to i8*
  %81 = bitcast %"class.SuggestionAnswer::TextField"** %74 to i64*
  %82 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 0
  %83 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 1
  %84 = bitcast %"class.SuggestionAnswer::TextField"* %5 to i8**
  br label %85

85:                                               ; preds = %68, %300
  %86 = phi i8 [ 0, %68 ], [ %293, %300 ]
  %87 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %3)
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %69) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 32, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 24, i1 false) #12
  store i32 -1, i32* %70, align 8
  store i8 0, i8* %71, align 4
  store i32 1, i32* %72, align 8
  store i32 0, i32* %73, align 4
  %88 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = trunc i64 %89 to i8
  %91 = icmp eq i8 %90, 6
  br i1 %91, label %92, label %291

92:                                               ; preds = %85
  %93 = call zeroext i1 @_ZN16SuggestionAnswer9TextField14ParseTextFieldERKN4base5ValueEPS0_(%"class.base::Value"* dereferenceable(32) %87, %"class.SuggestionAnswer::TextField"* nonnull %5)
  br i1 %93, label %94, label %291

94:                                               ; preds = %92
  %95 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %74, align 8
  %96 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %75, align 8
  %97 = icmp eq %"class.SuggestionAnswer::TextField"* %95, %96
  br i1 %97, label %282, label %98

98:                                               ; preds = %94
  %99 = load i8, i8* %77, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %98
  %102 = bitcast %"class.SuggestionAnswer::TextField"* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* nonnull align 8 %69, i64 24, i1 false) #12
  br label %277

103:                                              ; preds = %98
  %104 = load i16*, i16** %78, align 8
  %105 = load i64, i64* %79, align 8
  %106 = icmp ult i64 %105, 11
  br i1 %106, label %107, label %112

107:                                              ; preds = %103
  %108 = bitcast %"class.SuggestionAnswer::TextField"* %95 to i16*
  %109 = trunc i64 %105 to i8
  %110 = bitcast %"class.SuggestionAnswer::TextField"* %95 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %110, i64 0, i32 1, i32 1
  store i8 %109, i8* %111, align 1
  br label %129

112:                                              ; preds = %103
  %113 = icmp ugt i64 %105, 9223372036854775791
  br i1 %113, label %114, label %116

114:                                              ; preds = %112
  %115 = bitcast %"class.SuggestionAnswer::TextField"* %95 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %115) #14
  unreachable

116:                                              ; preds = %112
  %117 = add nuw nsw i64 %105, 8
  %118 = and i64 %117, -8
  %119 = icmp slt i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %116
  call void @abort() #14
  unreachable

121:                                              ; preds = %116
  %122 = shl i64 %118, 1
  %123 = call i8* @_Znwm(i64 %122) #13
  %124 = bitcast i8* %123 to i16*
  %125 = bitcast %"class.SuggestionAnswer::TextField"* %95 to i8**
  store i8* %123, i8** %125, align 8
  %126 = or i64 %118, -9223372036854775808
  %127 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %126, i64* %127, align 8
  %128 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %105, i64* %128, align 8
  br label %129

129:                                              ; preds = %121, %107
  %130 = phi i16* [ %108, %107 ], [ %124, %121 ]
  %131 = add nuw nsw i64 %105, 1
  %132 = add i64 %105, 1
  %133 = icmp ult i64 %132, 16
  br i1 %133, label %224, label %134

134:                                              ; preds = %129
  %135 = getelementptr i16, i16* %130, i64 1
  %136 = getelementptr i16, i16* %135, i64 %105
  %137 = getelementptr i16, i16* %104, i64 1
  %138 = getelementptr i16, i16* %137, i64 %105
  %139 = icmp ult i16* %130, %138
  %140 = icmp ult i16* %104, %136
  %141 = and i1 %139, %140
  br i1 %141, label %224, label %142

142:                                              ; preds = %134
  %143 = and i64 %132, -16
  %144 = sub i64 %131, %143
  %145 = getelementptr i16, i16* %104, i64 %143
  %146 = getelementptr i16, i16* %130, i64 %143
  %147 = add i64 %143, -16
  %148 = lshr exact i64 %147, 4
  %149 = add nuw nsw i64 %148, 1
  %150 = and i64 %149, 3
  %151 = icmp ult i64 %147, 48
  br i1 %151, label %203, label %152

152:                                              ; preds = %142
  %153 = sub nsw i64 %149, %150
  br label %154

154:                                              ; preds = %154, %152
  %155 = phi i64 [ 0, %152 ], [ %200, %154 ]
  %156 = phi i64 [ %153, %152 ], [ %201, %154 ]
  %157 = getelementptr i16, i16* %104, i64 %155
  %158 = getelementptr i16, i16* %130, i64 %155
  %159 = bitcast i16* %157 to <8 x i16>*
  %160 = load <8 x i16>, <8 x i16>* %159, align 2, !alias.scope !77
  %161 = getelementptr i16, i16* %157, i64 8
  %162 = bitcast i16* %161 to <8 x i16>*
  %163 = load <8 x i16>, <8 x i16>* %162, align 2, !alias.scope !77
  %164 = bitcast i16* %158 to <8 x i16>*
  store <8 x i16> %160, <8 x i16>* %164, align 2, !alias.scope !80, !noalias !77
  %165 = getelementptr i16, i16* %158, i64 8
  %166 = bitcast i16* %165 to <8 x i16>*
  store <8 x i16> %163, <8 x i16>* %166, align 2, !alias.scope !80, !noalias !77
  %167 = or i64 %155, 16
  %168 = getelementptr i16, i16* %104, i64 %167
  %169 = getelementptr i16, i16* %130, i64 %167
  %170 = bitcast i16* %168 to <8 x i16>*
  %171 = load <8 x i16>, <8 x i16>* %170, align 2, !alias.scope !77
  %172 = getelementptr i16, i16* %168, i64 8
  %173 = bitcast i16* %172 to <8 x i16>*
  %174 = load <8 x i16>, <8 x i16>* %173, align 2, !alias.scope !77
  %175 = bitcast i16* %169 to <8 x i16>*
  store <8 x i16> %171, <8 x i16>* %175, align 2, !alias.scope !80, !noalias !77
  %176 = getelementptr i16, i16* %169, i64 8
  %177 = bitcast i16* %176 to <8 x i16>*
  store <8 x i16> %174, <8 x i16>* %177, align 2, !alias.scope !80, !noalias !77
  %178 = or i64 %155, 32
  %179 = getelementptr i16, i16* %104, i64 %178
  %180 = getelementptr i16, i16* %130, i64 %178
  %181 = bitcast i16* %179 to <8 x i16>*
  %182 = load <8 x i16>, <8 x i16>* %181, align 2, !alias.scope !77
  %183 = getelementptr i16, i16* %179, i64 8
  %184 = bitcast i16* %183 to <8 x i16>*
  %185 = load <8 x i16>, <8 x i16>* %184, align 2, !alias.scope !77
  %186 = bitcast i16* %180 to <8 x i16>*
  store <8 x i16> %182, <8 x i16>* %186, align 2, !alias.scope !80, !noalias !77
  %187 = getelementptr i16, i16* %180, i64 8
  %188 = bitcast i16* %187 to <8 x i16>*
  store <8 x i16> %185, <8 x i16>* %188, align 2, !alias.scope !80, !noalias !77
  %189 = or i64 %155, 48
  %190 = getelementptr i16, i16* %104, i64 %189
  %191 = getelementptr i16, i16* %130, i64 %189
  %192 = bitcast i16* %190 to <8 x i16>*
  %193 = load <8 x i16>, <8 x i16>* %192, align 2, !alias.scope !77
  %194 = getelementptr i16, i16* %190, i64 8
  %195 = bitcast i16* %194 to <8 x i16>*
  %196 = load <8 x i16>, <8 x i16>* %195, align 2, !alias.scope !77
  %197 = bitcast i16* %191 to <8 x i16>*
  store <8 x i16> %193, <8 x i16>* %197, align 2, !alias.scope !80, !noalias !77
  %198 = getelementptr i16, i16* %191, i64 8
  %199 = bitcast i16* %198 to <8 x i16>*
  store <8 x i16> %196, <8 x i16>* %199, align 2, !alias.scope !80, !noalias !77
  %200 = add i64 %155, 64
  %201 = add i64 %156, -4
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %203, label %154, !llvm.loop !82

203:                                              ; preds = %154, %142
  %204 = phi i64 [ 0, %142 ], [ %200, %154 ]
  %205 = icmp eq i64 %150, 0
  br i1 %205, label %222, label %206

206:                                              ; preds = %203, %206
  %207 = phi i64 [ %219, %206 ], [ %204, %203 ]
  %208 = phi i64 [ %220, %206 ], [ %150, %203 ]
  %209 = getelementptr i16, i16* %104, i64 %207
  %210 = getelementptr i16, i16* %130, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2, !alias.scope !77
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2, !alias.scope !77
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2, !alias.scope !80, !noalias !77
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2, !alias.scope !80, !noalias !77
  %219 = add i64 %207, 16
  %220 = add i64 %208, -1
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %222, label %206, !llvm.loop !83

222:                                              ; preds = %206, %203
  %223 = icmp eq i64 %132, %143
  br i1 %223, label %277, label %224

224:                                              ; preds = %222, %134, %129
  %225 = phi i64 [ %131, %134 ], [ %131, %129 ], [ %144, %222 ]
  %226 = phi i16* [ %104, %134 ], [ %104, %129 ], [ %145, %222 ]
  %227 = phi i16* [ %130, %134 ], [ %130, %129 ], [ %146, %222 ]
  %228 = add i64 %225, -1
  %229 = and i64 %225, 7
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %242, label %231

231:                                              ; preds = %224, %231
  %232 = phi i64 [ %237, %231 ], [ %225, %224 ]
  %233 = phi i16* [ %239, %231 ], [ %226, %224 ]
  %234 = phi i16* [ %238, %231 ], [ %227, %224 ]
  %235 = phi i64 [ %240, %231 ], [ %229, %224 ]
  %236 = load i16, i16* %233, align 2
  store i16 %236, i16* %234, align 2
  %237 = add i64 %232, -1
  %238 = getelementptr inbounds i16, i16* %234, i64 1
  %239 = getelementptr inbounds i16, i16* %233, i64 1
  %240 = add i64 %235, -1
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %242, label %231, !llvm.loop !84

242:                                              ; preds = %231, %224
  %243 = phi i64 [ %225, %224 ], [ %237, %231 ]
  %244 = phi i16* [ %226, %224 ], [ %239, %231 ]
  %245 = phi i16* [ %227, %224 ], [ %238, %231 ]
  %246 = icmp ult i64 %228, 7
  br i1 %246, label %277, label %247

247:                                              ; preds = %242, %247
  %248 = phi i64 [ %273, %247 ], [ %243, %242 ]
  %249 = phi i16* [ %275, %247 ], [ %244, %242 ]
  %250 = phi i16* [ %274, %247 ], [ %245, %242 ]
  %251 = load i16, i16* %249, align 2
  store i16 %251, i16* %250, align 2
  %252 = getelementptr inbounds i16, i16* %250, i64 1
  %253 = getelementptr inbounds i16, i16* %249, i64 1
  %254 = load i16, i16* %253, align 2
  store i16 %254, i16* %252, align 2
  %255 = getelementptr inbounds i16, i16* %250, i64 2
  %256 = getelementptr inbounds i16, i16* %249, i64 2
  %257 = load i16, i16* %256, align 2
  store i16 %257, i16* %255, align 2
  %258 = getelementptr inbounds i16, i16* %250, i64 3
  %259 = getelementptr inbounds i16, i16* %249, i64 3
  %260 = load i16, i16* %259, align 2
  store i16 %260, i16* %258, align 2
  %261 = getelementptr inbounds i16, i16* %250, i64 4
  %262 = getelementptr inbounds i16, i16* %249, i64 4
  %263 = load i16, i16* %262, align 2
  store i16 %263, i16* %261, align 2
  %264 = getelementptr inbounds i16, i16* %250, i64 5
  %265 = getelementptr inbounds i16, i16* %249, i64 5
  %266 = load i16, i16* %265, align 2
  store i16 %266, i16* %264, align 2
  %267 = getelementptr inbounds i16, i16* %250, i64 6
  %268 = getelementptr inbounds i16, i16* %249, i64 6
  %269 = load i16, i16* %268, align 2
  store i16 %269, i16* %267, align 2
  %270 = getelementptr inbounds i16, i16* %250, i64 7
  %271 = getelementptr inbounds i16, i16* %249, i64 7
  %272 = load i16, i16* %271, align 2
  store i16 %272, i16* %270, align 2
  %273 = add i64 %248, -8
  %274 = getelementptr inbounds i16, i16* %250, i64 8
  %275 = getelementptr inbounds i16, i16* %249, i64 8
  %276 = icmp eq i64 %273, 0
  br i1 %276, label %277, label %247, !llvm.loop !85

277:                                              ; preds = %242, %247, %222, %101
  %278 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %95, i64 0, i32 1
  %279 = bitcast i32* %278 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %279, i8* align 8 %80, i64 16, i1 false) #12
  %280 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %95, i64 1
  %281 = ptrtoint %"class.SuggestionAnswer::TextField"* %280 to i64
  store i64 %281, i64* %81, align 8
  br label %283

282:                                              ; preds = %94
  call void @_ZNSt3__16vectorIN16SuggestionAnswer9TextFieldENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.39"* %82, %"class.SuggestionAnswer::TextField"* nonnull dereferenceable(40) %5) #12
  br label %283

283:                                              ; preds = %277, %282
  %284 = and i8 %86, 1
  %285 = icmp eq i8 %284, 0
  %286 = load i8, i8* %71, align 4
  %287 = icmp ne i8 %286, 0
  %288 = and i1 %285, %287
  br i1 %288, label %289, label %291

289:                                              ; preds = %283
  %290 = load i32, i32* %72, align 8
  store i32 %290, i32* %83, align 8
  br label %291

291:                                              ; preds = %289, %283, %85, %92
  %292 = phi i32 [ 1, %92 ], [ 1, %85 ], [ 0, %283 ], [ 0, %289 ]
  %293 = phi i8 [ %86, %92 ], [ %86, %85 ], [ %86, %283 ], [ 1, %289 ]
  %294 = load i8, i8* %77, align 1
  %295 = icmp slt i8 %294, 0
  br i1 %295, label %296, label %298

296:                                              ; preds = %291
  %297 = load i8*, i8** %84, align 8
  call void @_ZdlPv(i8* %297) #13
  br label %298

298:                                              ; preds = %291, %296
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %69) #12
  %299 = icmp eq i32 %292, 0
  br i1 %299, label %300, label %305

300:                                              ; preds = %298
  %301 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %3)
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %3, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %4) #12
  %302 = load %"class.base::Value"*, %"class.base::Value"** %31, align 8
  %303 = load %"class.base::Value"*, %"class.base::Value"** %48, align 8
  %304 = icmp eq %"class.base::Value"* %302, %303
  br i1 %304, label %306, label %85

305:                                              ; preds = %298
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #12
  br label %532

306:                                              ; preds = %300, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #12
  %307 = call %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull %14, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZN12_GLOBAL__N_125kAnswerJsonAdditionalTextE, i64 0, i64 0), i64 2) #12
  %308 = icmp eq %"class.base::Value"* %307, null
  br i1 %308, label %359, label %309

309:                                              ; preds = %306
  %310 = getelementptr inbounds [15 x i8], [15 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %310)
  %311 = getelementptr inbounds [3 x i8], [3 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %311)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %310, i8 0, i64 15, i1 false)
  %312 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %313 = load i8, i8* %312, align 8, !range !40
  %314 = icmp eq i8 %313, 0
  %315 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %314, label %336, label %316

316:                                              ; preds = %309
  %317 = bitcast %"class.SuggestionAnswer::TextField"* %315 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %318 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %317, i64 0, i32 1, i32 1
  %319 = load i8, i8* %318, align 1
  %320 = icmp slt i8 %319, 0
  br i1 %320, label %321, label %324

321:                                              ; preds = %316
  %322 = bitcast %"class.SuggestionAnswer::TextField"* %315 to i8**
  %323 = load i8*, i8** %322, align 8
  call void @_ZdlPv(i8* %323) #13
  br label %324

324:                                              ; preds = %321, %316
  %325 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %326 = bitcast %union.anon.50* %325 to i8**
  store i8* null, i8** %326, align 8
  %327 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %328 = bitcast i64* %327 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %328, i8* nonnull align 8 %310, i64 15, i1 false)
  %329 = bitcast %"class.SuggestionAnswer::ImageLine"* %1 to i8*
  %330 = getelementptr inbounds i8, i8* %329, i64 63
  store i8 0, i8* %330, align 1
  %331 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 -1, i32* %331, align 8
  %332 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  store i8 0, i8* %332, align 4
  %333 = getelementptr inbounds i8, i8* %329, i64 69
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %333, i8* nonnull align 1 %311, i64 3, i1 false)
  %334 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  store i32 1, i32* %334, align 8
  %335 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  store i32 0, i32* %335, align 4
  br label %348

336:                                              ; preds = %309
  %337 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %338 = bitcast %union.anon.50* %337 to i8**
  store i8* null, i8** %338, align 8
  %339 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %340 = bitcast i64* %339 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %340, i8* nonnull align 8 %310, i64 15, i1 false)
  %341 = bitcast %"class.SuggestionAnswer::ImageLine"* %1 to i8*
  %342 = getelementptr inbounds i8, i8* %341, i64 63
  store i8 0, i8* %342, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %310, i8 0, i64 15, i1 false)
  %343 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 -1, i32* %343, align 8
  %344 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  store i8 0, i8* %344, align 4
  %345 = getelementptr inbounds i8, i8* %341, i64 69
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %345, i8* nonnull align 1 %311, i64 3, i1 false)
  %346 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  store i32 1, i32* %346, align 8
  %347 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  store i32 0, i32* %347, align 4
  store i8 1, i8* %312, align 8
  br label %348

348:                                              ; preds = %336, %324
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %310)
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %311)
  %349 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %307, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %350 = load i64, i64* %349, align 8
  %351 = trunc i64 %350 to i8
  %352 = icmp eq i8 %351, 6
  br i1 %352, label %353, label %532

353:                                              ; preds = %348
  %354 = load i8, i8* %312, align 8, !range !40
  %355 = icmp eq i8 %354, 0
  br i1 %355, label %356, label %357

356:                                              ; preds = %353
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #14
  unreachable

357:                                              ; preds = %353
  %358 = call zeroext i1 @_ZN16SuggestionAnswer9TextField14ParseTextFieldERKN4base5ValueEPS0_(%"class.base::Value"* nonnull dereferenceable(32) %307, %"class.SuggestionAnswer::TextField"* %315)
  br i1 %358, label %359, label %532

359:                                              ; preds = %306, %357
  %360 = call %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull %14, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZN12_GLOBAL__N_121kAnswerJsonStatusTextE, i64 0, i64 0), i64 2) #12
  %361 = icmp eq %"class.base::Value"* %360, null
  br i1 %361, label %412, label %362

362:                                              ; preds = %359
  %363 = getelementptr inbounds [15 x i8], [15 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %363)
  %364 = getelementptr inbounds [3 x i8], [3 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %364)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %363, i8 0, i64 15, i1 false)
  %365 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %366 = load i8, i8* %365, align 8, !range !40
  %367 = icmp eq i8 %366, 0
  %368 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %367, label %389, label %369

369:                                              ; preds = %362
  %370 = bitcast %"class.SuggestionAnswer::TextField"* %368 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %371 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %370, i64 0, i32 1, i32 1
  %372 = load i8, i8* %371, align 1
  %373 = icmp slt i8 %372, 0
  br i1 %373, label %374, label %377

374:                                              ; preds = %369
  %375 = bitcast %"class.SuggestionAnswer::TextField"* %368 to i8**
  %376 = load i8*, i8** %375, align 8
  call void @_ZdlPv(i8* %376) #13
  br label %377

377:                                              ; preds = %374, %369
  %378 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %379 = bitcast %union.anon.50* %378 to i8**
  store i8* null, i8** %379, align 8
  %380 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %381 = bitcast i64* %380 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %381, i8* nonnull align 8 %363, i64 15, i1 false)
  %382 = bitcast %"class.SuggestionAnswer::ImageLine"* %1 to i8*
  %383 = getelementptr inbounds i8, i8* %382, i64 111
  store i8 0, i8* %383, align 1
  %384 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 -1, i32* %384, align 8
  %385 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  store i8 0, i8* %385, align 4
  %386 = getelementptr inbounds i8, i8* %382, i64 117
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %386, i8* nonnull align 1 %364, i64 3, i1 false)
  %387 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  store i32 1, i32* %387, align 8
  %388 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  store i32 0, i32* %388, align 4
  br label %401

389:                                              ; preds = %362
  %390 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %391 = bitcast %union.anon.50* %390 to i8**
  store i8* null, i8** %391, align 8
  %392 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %393 = bitcast i64* %392 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %393, i8* nonnull align 8 %363, i64 15, i1 false)
  %394 = bitcast %"class.SuggestionAnswer::ImageLine"* %1 to i8*
  %395 = getelementptr inbounds i8, i8* %394, i64 111
  store i8 0, i8* %395, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %363, i8 0, i64 15, i1 false)
  %396 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 -1, i32* %396, align 8
  %397 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  store i8 0, i8* %397, align 4
  %398 = getelementptr inbounds i8, i8* %394, i64 117
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %398, i8* nonnull align 1 %364, i64 3, i1 false)
  %399 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  store i32 1, i32* %399, align 8
  %400 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  store i32 0, i32* %400, align 4
  store i8 1, i8* %365, align 8
  br label %401

401:                                              ; preds = %389, %377
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %363)
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %364)
  %402 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %360, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %403 = load i64, i64* %402, align 8
  %404 = trunc i64 %403 to i8
  %405 = icmp eq i8 %404, 6
  br i1 %405, label %406, label %532

406:                                              ; preds = %401
  %407 = load i8, i8* %365, align 8, !range !40
  %408 = icmp eq i8 %407, 0
  br i1 %408, label %409, label %410

409:                                              ; preds = %406
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #14
  unreachable

410:                                              ; preds = %406
  %411 = call zeroext i1 @_ZN16SuggestionAnswer9TextField14ParseTextFieldERKN4base5ValueEPS0_(%"class.base::Value"* nonnull dereferenceable(32) %360, %"class.SuggestionAnswer::TextField"* %368)
  br i1 %411, label %412, label %532

412:                                              ; preds = %359, %410
  %413 = call %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1) #12
  %414 = icmp eq %"class.base::Value"* %413, null
  br i1 %414, label %531, label %415

415:                                              ; preds = %412
  %416 = call %"class.std::__1::basic_string.5"* @_ZNK4base5Value13FindStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull %413, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1) #12
  %417 = icmp eq %"class.std::__1::basic_string.5"* %416, null
  br i1 %417, label %532, label %418

418:                                              ; preds = %415
  %419 = bitcast %"class.std::__1::basic_string.5"* %416 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %420 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %419, i64 0, i32 1, i32 0
  %421 = load i8, i8* %420, align 1
  %422 = icmp slt i8 %421, 0
  br i1 %422, label %423, label %426

423:                                              ; preds = %418
  %424 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %416, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %425 = load i64, i64* %424, align 8
  br label %428

426:                                              ; preds = %418
  %427 = zext i8 %421 to i64
  br label %428

428:                                              ; preds = %423, %426
  %429 = phi i64 [ %425, %423 ], [ %427, %426 ]
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %532, label %431

431:                                              ; preds = %428
  %432 = bitcast %class.GURL* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %432) #12
  %433 = bitcast %"class.std::__1::basic_string.5"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %433) #12
  %434 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %416, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %435 = load i8*, i8** %434, align 8
  %436 = bitcast %"class.std::__1::basic_string.5"* %416 to i8*
  %437 = select i1 %422, i8* %435, i8* %436
  %438 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %416, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %439 = load i64, i64* %438, align 8
  %440 = zext i8 %421 to i64
  %441 = select i1 %422, i64 %439, i64 %440
  %442 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %437, i64 %441, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2, i32 0) #12
  br i1 %442, label %443, label %481

443:                                              ; preds = %431
  %444 = bitcast %"class.std::__1::basic_string.5"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %444) #12
  %445 = bitcast %"class.std::__1::basic_string.5"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %445) #12
  %446 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0)) #12
  %447 = icmp ugt i64 %446, -17
  br i1 %447, label %448, label %450

448:                                              ; preds = %443
  %449 = bitcast %"class.std::__1::basic_string.5"* %13 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %449) #14
  unreachable

450:                                              ; preds = %443
  %451 = icmp ult i64 %446, 23
  br i1 %451, label %460, label %452

452:                                              ; preds = %450
  %453 = add nuw i64 %446, 16
  %454 = and i64 %453, -16
  %455 = call i8* @_Znwm(i64 %454) #13
  %456 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %455, i8** %456, align 8
  %457 = or i64 %454, -9223372036854775808
  %458 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %457, i64* %458, align 8
  %459 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %446, i64* %459, align 8
  br label %465

460:                                              ; preds = %450
  %461 = trunc i64 %446 to i8
  %462 = bitcast %"class.std::__1::basic_string.5"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %463 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %462, i64 0, i32 1, i32 0
  store i8 %461, i8* %463, align 1
  %464 = icmp eq i64 %446, 0
  br i1 %464, label %467, label %465

465:                                              ; preds = %460, %452
  %466 = phi i8* [ %455, %452 ], [ %445, %460 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %466, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0), i64 %446, i1 false) #12
  br label %467

467:                                              ; preds = %460, %465
  %468 = phi i8* [ %445, %460 ], [ %466, %465 ]
  %469 = getelementptr inbounds i8, i8* %468, i64 %446
  store i8 0, i8* %469, align 1
  %470 = call dereferenceable(24) %"class.std::__1::basic_string.5"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.5"* nonnull %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #12, !noalias !86
  %471 = bitcast %"class.std::__1::basic_string.5"* %470 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %444, i8* align 8 %471, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %471, i8 0, i64 24, i1 false) #12, !noalias !86
  %472 = load i8, i8* %420, align 1, !noalias !89
  %473 = icmp slt i8 %472, 0
  %474 = load i8*, i8** %434, align 8, !noalias !89
  %475 = load i64, i64* %438, align 8, !noalias !89
  %476 = zext i8 %472 to i64
  %477 = select i1 %473, i8* %474, i8* %436
  %478 = select i1 %473, i64 %475, i64 %476
  %479 = call dereferenceable(24) %"class.std::__1::basic_string.5"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.5"* nonnull %12, i8* %477, i64 %478) #12, !noalias !89
  %480 = bitcast %"class.std::__1::basic_string.5"* %479 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %433, i8* align 8 %480, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %480, i8 0, i64 24, i1 false) #12, !noalias !89
  br label %488

481:                                              ; preds = %431
  %482 = load i8, i8* %420, align 1
  %483 = icmp slt i8 %482, 0
  br i1 %483, label %485, label %484

484:                                              ; preds = %481
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %433, i8* nonnull align 8 %436, i64 24, i1 false) #12
  br label %488

485:                                              ; preds = %481
  %486 = load i8*, i8** %434, align 8
  %487 = load i64, i64* %438, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.5"* nonnull %11, i8* %486, i64 %487) #12
  br label %488

488:                                              ; preds = %485, %484, %467
  %489 = phi i1 [ true, %467 ], [ false, %484 ], [ false, %485 ]
  %490 = bitcast %"class.std::__1::basic_string.5"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %491 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %490, i64 0, i32 1, i32 0
  %492 = load i8, i8* %491, align 1
  %493 = icmp slt i8 %492, 0
  %494 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %495 = load i8*, i8** %494, align 8
  %496 = select i1 %493, i8* %495, i8* %433
  %497 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %498 = load i64, i64* %497, align 8
  %499 = zext i8 %492 to i64
  %500 = select i1 %493, i64 %498, i64 %499
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %10, i8* %496, i64 %500) #12
  %501 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 4
  %502 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %501, %class.GURL* nonnull dereferenceable(120) %10) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %10) #12
  %503 = load i8, i8* %491, align 1
  %504 = icmp slt i8 %503, 0
  br i1 %504, label %505, label %507

505:                                              ; preds = %488
  %506 = load i8*, i8** %494, align 8
  call void @_ZdlPv(i8* %506) #13
  br label %507

507:                                              ; preds = %488, %505
  br i1 %489, label %508, label %527

508:                                              ; preds = %507
  %509 = bitcast %"class.std::__1::basic_string.5"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %510 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %509, i64 0, i32 1, i32 0
  %511 = load i8, i8* %510, align 1
  %512 = icmp slt i8 %511, 0
  br i1 %512, label %513, label %516

513:                                              ; preds = %508
  %514 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %515 = load i8*, i8** %514, align 8
  call void @_ZdlPv(i8* %515) #13
  br label %516

516:                                              ; preds = %508, %513
  %517 = bitcast %"class.std::__1::basic_string.5"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %518 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %517, i64 0, i32 1, i32 0
  %519 = load i8, i8* %518, align 1
  %520 = icmp slt i8 %519, 0
  br i1 %520, label %521, label %524

521:                                              ; preds = %516
  %522 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %523 = load i8*, i8** %522, align 8
  call void @_ZdlPv(i8* %523) #13
  br label %524

524:                                              ; preds = %516, %521
  %525 = bitcast %"class.std::__1::basic_string.5"* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %525) #12
  %526 = bitcast %"class.std::__1::basic_string.5"* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %526) #12
  br label %527

527:                                              ; preds = %507, %524
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %433) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %432) #12
  %528 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 4, i32 1
  %529 = load i8, i8* %528, align 8, !range !40
  %530 = icmp eq i8 %529, 0
  br i1 %530, label %532, label %531

531:                                              ; preds = %527, %412
  br label %532

532:                                              ; preds = %527, %19, %305, %16, %22, %357, %348, %531, %415, %428, %401, %410, %2
  %533 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %305 ], [ false, %357 ], [ false, %348 ], [ false, %410 ], [ false, %401 ], [ true, %531 ], [ false, %527 ], [ false, %415 ], [ false, %428 ], [ false, %16 ], [ false, %19 ]
  ret i1 %533
}

declare %"class.base::Value"* @_ZNK4base5Value13FindKeyOfTypeENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_4TypeE(%"class.base::Value"*, i8*, i64, i8 zeroext) local_unnamed_addr #2

declare %"class.std::__1::vector.29"* @_ZNK4base5Value7GetListEv(%"class.base::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %11 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %12 = icmp eq %"class.base::Value"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.base::Value"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  %17 = bitcast %"class.base::Value"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* %16, i8* %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #12
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %26 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  ret %"class.base::Value"* %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %11 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %12 = icmp eq %"class.base::Value"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.base::Value"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  %17 = bitcast %"class.base::Value"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* %16, i8* %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #12
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %26 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %27 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %26, i64 1
  store %"class.base::Value"* %27, %"class.base::Value"** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

declare %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK16SuggestionAnswer9ImageLine6EqualsERKS0_(%"class.SuggestionAnswer::ImageLine"*, %"class.SuggestionAnswer::ImageLine"* dereferenceable(248)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.SuggestionAnswer::TextField"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.SuggestionAnswer::ImageLine"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 40
  %10 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.SuggestionAnswer::TextField"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.SuggestionAnswer::ImageLine"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = sdiv exact i64 %15, 40
  %17 = icmp eq i64 %9, %16
  %18 = inttoptr i64 %7 to %"class.SuggestionAnswer::TextField"*
  %19 = inttoptr i64 %14 to %"class.SuggestionAnswer::TextField"*
  br i1 %17, label %20, label %243

20:                                               ; preds = %2
  %21 = icmp eq i64 %8, 0
  br i1 %21, label %89, label %22

22:                                               ; preds = %20, %86
  %23 = phi i64 [ %87, %86 ], [ 0, %20 ]
  %24 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %18, i64 %23
  %25 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %19, i64 %23
  %26 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %18, i64 %23, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %19, i64 %23, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %27, %29
  br i1 %30, label %31, label %243

31:                                               ; preds = %22
  %32 = bitcast %"class.SuggestionAnswer::TextField"* %24 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %18, i64 %23, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = zext i8 %34 to i64
  %39 = select i1 %35, i64 %37, i64 %38
  %40 = bitcast %"class.SuggestionAnswer::TextField"* %25 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  %44 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %19, i64 %23, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = zext i8 %42 to i64
  %47 = select i1 %43, i64 %45, i64 %46
  %48 = icmp eq i64 %39, %47
  br i1 %48, label %49, label %243

49:                                               ; preds = %31
  %50 = icmp eq i64 %39, 0
  br i1 %50, label %72, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i16*, i16** %52, align 8
  %54 = bitcast %"class.SuggestionAnswer::TextField"* %25 to i16*
  %55 = select i1 %43, i16* %53, i16* %54
  %56 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i16*, i16** %56, align 8
  %58 = bitcast %"class.SuggestionAnswer::TextField"* %24 to i16*
  %59 = select i1 %35, i16* %57, i16* %58
  br label %60

60:                                               ; preds = %67, %51
  %61 = phi i64 [ %68, %67 ], [ %39, %51 ]
  %62 = phi i16* [ %70, %67 ], [ %55, %51 ]
  %63 = phi i16* [ %69, %67 ], [ %59, %51 ]
  %64 = load i16, i16* %63, align 2
  %65 = load i16, i16* %62, align 2
  %66 = icmp eq i16 %65, %64
  br i1 %66, label %67, label %243

67:                                               ; preds = %60
  %68 = add i64 %61, -1
  %69 = getelementptr inbounds i16, i16* %63, i64 1
  %70 = getelementptr inbounds i16, i16* %62, i64 1
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %72, label %60

72:                                               ; preds = %67, %49
  %73 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %18, i64 %23, i32 2
  %74 = load i8, i8* %73, align 4, !range !40
  %75 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %19, i64 %23, i32 2
  %76 = load i8, i8* %75, align 4, !range !40
  %77 = icmp eq i8 %74, %76
  br i1 %77, label %78, label %243

78:                                               ; preds = %72
  %79 = icmp eq i8 %74, 0
  br i1 %79, label %86, label %80

80:                                               ; preds = %78
  %81 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %18, i64 %23, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %19, i64 %23, i32 3
  %84 = load i32, i32* %83, align 8
  %85 = icmp eq i32 %82, %84
  br i1 %85, label %86, label %243

86:                                               ; preds = %78, %80
  %87 = add nuw i64 %23, 1
  %88 = icmp ult i64 %87, %9
  br i1 %88, label %22, label %89

89:                                               ; preds = %86, %20
  %90 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 1
  %93 = load i32, i32* %92, align 8
  %94 = icmp eq i32 %91, %93
  br i1 %94, label %95, label %243

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %97 = load i8, i8* %96, align 8, !range !40
  %98 = icmp eq i8 %97, 0
  %99 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %100 = load i8, i8* %99, align 8, !range !40
  %101 = icmp ne i8 %100, 0
  br i1 %98, label %102, label %103

102:                                              ; preds = %95
  br i1 %101, label %243, label %167

103:                                              ; preds = %95
  br i1 %101, label %104, label %243

104:                                              ; preds = %103
  %105 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %106 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %107 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %108 = load i32, i32* %107, align 8
  %109 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = icmp eq i32 %108, %110
  br i1 %111, label %112, label %243

112:                                              ; preds = %104
  %113 = bitcast %"class.SuggestionAnswer::TextField"* %105 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %113, i64 0, i32 1, i32 1
  %115 = load i8, i8* %114, align 1
  %116 = icmp slt i8 %115, 0
  %117 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = zext i8 %115 to i64
  %120 = select i1 %116, i64 %118, i64 %119
  %121 = bitcast %"class.SuggestionAnswer::TextField"* %106 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %121, i64 0, i32 1, i32 1
  %123 = load i8, i8* %122, align 1
  %124 = icmp slt i8 %123, 0
  %125 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %126 = load i64, i64* %125, align 8
  %127 = zext i8 %123 to i64
  %128 = select i1 %124, i64 %126, i64 %127
  %129 = icmp eq i64 %120, %128
  br i1 %129, label %130, label %243

130:                                              ; preds = %112
  %131 = icmp eq i64 %120, 0
  br i1 %131, label %153, label %132

132:                                              ; preds = %130
  %133 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i16*, i16** %133, align 8
  %135 = bitcast %"class.SuggestionAnswer::TextField"* %106 to i16*
  %136 = select i1 %124, i16* %134, i16* %135
  %137 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load i16*, i16** %137, align 8
  %139 = bitcast %"class.SuggestionAnswer::TextField"* %105 to i16*
  %140 = select i1 %116, i16* %138, i16* %139
  br label %141

141:                                              ; preds = %148, %132
  %142 = phi i64 [ %149, %148 ], [ %120, %132 ]
  %143 = phi i16* [ %151, %148 ], [ %136, %132 ]
  %144 = phi i16* [ %150, %148 ], [ %140, %132 ]
  %145 = load i16, i16* %144, align 2
  %146 = load i16, i16* %143, align 2
  %147 = icmp eq i16 %146, %145
  br i1 %147, label %148, label %243

148:                                              ; preds = %141
  %149 = add i64 %142, -1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = getelementptr inbounds i16, i16* %143, i64 1
  %152 = icmp eq i64 %149, 0
  br i1 %152, label %153, label %141

153:                                              ; preds = %148, %130
  %154 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %155 = load i8, i8* %154, align 4, !range !40
  %156 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %157 = load i8, i8* %156, align 4, !range !40
  %158 = icmp eq i8 %155, %157
  br i1 %158, label %159, label %243

159:                                              ; preds = %153
  %160 = icmp eq i8 %155, 0
  br i1 %160, label %167, label %161

161:                                              ; preds = %159
  %162 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %163 = load i32, i32* %162, align 8
  %164 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %165 = load i32, i32* %164, align 8
  %166 = icmp eq i32 %163, %165
  br i1 %166, label %167, label %243

167:                                              ; preds = %159, %161, %102
  %168 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %169 = load i8, i8* %168, align 8, !range !40
  %170 = icmp eq i8 %169, 0
  %171 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %172 = load i8, i8* %171, align 8, !range !40
  %173 = icmp ne i8 %172, 0
  br i1 %170, label %174, label %175

174:                                              ; preds = %167
  br i1 %173, label %243, label %239

175:                                              ; preds = %167
  br i1 %173, label %176, label %243

176:                                              ; preds = %175
  %177 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %178 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %179 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %180 = load i32, i32* %179, align 8
  %181 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %182 = load i32, i32* %181, align 8
  %183 = icmp eq i32 %180, %182
  br i1 %183, label %184, label %243

184:                                              ; preds = %176
  %185 = bitcast %"class.SuggestionAnswer::TextField"* %177 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %186 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %185, i64 0, i32 1, i32 1
  %187 = load i8, i8* %186, align 1
  %188 = icmp slt i8 %187, 0
  %189 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %190 = load i64, i64* %189, align 8
  %191 = zext i8 %187 to i64
  %192 = select i1 %188, i64 %190, i64 %191
  %193 = bitcast %"class.SuggestionAnswer::TextField"* %178 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %194 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %193, i64 0, i32 1, i32 1
  %195 = load i8, i8* %194, align 1
  %196 = icmp slt i8 %195, 0
  %197 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %198 = load i64, i64* %197, align 8
  %199 = zext i8 %195 to i64
  %200 = select i1 %196, i64 %198, i64 %199
  %201 = icmp eq i64 %192, %200
  br i1 %201, label %202, label %243

202:                                              ; preds = %184
  %203 = icmp eq i64 %192, 0
  br i1 %203, label %225, label %204

204:                                              ; preds = %202
  %205 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %178, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load i16*, i16** %205, align 8
  %207 = bitcast %"class.SuggestionAnswer::TextField"* %178 to i16*
  %208 = select i1 %196, i16* %206, i16* %207
  %209 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %177, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = load i16*, i16** %209, align 8
  %211 = bitcast %"class.SuggestionAnswer::TextField"* %177 to i16*
  %212 = select i1 %188, i16* %210, i16* %211
  br label %213

213:                                              ; preds = %220, %204
  %214 = phi i64 [ %221, %220 ], [ %192, %204 ]
  %215 = phi i16* [ %223, %220 ], [ %208, %204 ]
  %216 = phi i16* [ %222, %220 ], [ %212, %204 ]
  %217 = load i16, i16* %216, align 2
  %218 = load i16, i16* %215, align 2
  %219 = icmp eq i16 %218, %217
  br i1 %219, label %220, label %243

220:                                              ; preds = %213
  %221 = add i64 %214, -1
  %222 = getelementptr inbounds i16, i16* %216, i64 1
  %223 = getelementptr inbounds i16, i16* %215, i64 1
  %224 = icmp eq i64 %221, 0
  br i1 %224, label %225, label %213

225:                                              ; preds = %220, %202
  %226 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %227 = load i8, i8* %226, align 4, !range !40
  %228 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %229 = load i8, i8* %228, align 4, !range !40
  %230 = icmp eq i8 %227, %229
  br i1 %230, label %231, label %243

231:                                              ; preds = %225
  %232 = icmp eq i8 %227, 0
  br i1 %232, label %239, label %233

233:                                              ; preds = %231
  %234 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %235 = load i32, i32* %234, align 8
  %236 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %237 = load i32, i32* %236, align 8
  %238 = icmp eq i32 %235, %237
  br i1 %238, label %239, label %243

239:                                              ; preds = %231, %233, %174
  %240 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 4
  %241 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 4
  %242 = tail call zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* dereferenceable(120) %240, %class.GURL* dereferenceable(120) %241) #12
  br label %243

243:                                              ; preds = %31, %22, %72, %80, %60, %141, %213, %184, %176, %225, %112, %104, %153, %174, %102, %233, %175, %161, %103, %89, %2, %239
  %244 = phi i1 [ %242, %239 ], [ false, %2 ], [ false, %89 ], [ false, %103 ], [ false, %161 ], [ false, %175 ], [ false, %233 ], [ false, %102 ], [ false, %174 ], [ false, %153 ], [ false, %104 ], [ false, %112 ], [ false, %225 ], [ false, %176 ], [ false, %184 ], [ false, %213 ], [ false, %141 ], [ false, %60 ], [ false, %80 ], [ false, %72 ], [ false, %22 ], [ false, %31 ]
  ret i1 %244
}

declare zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK16SuggestionAnswer9ImageLine14AccessibleTextEv(%"class.std::__1::basic_string"* noalias sret, %"class.SuggestionAnswer::ImageLine"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #12
  %7 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %7, align 8
  %9 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %9, align 8
  %11 = icmp eq %"class.SuggestionAnswer::TextField"* %8, %10
  br i1 %11, label %16, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %501

16:                                               ; preds = %735, %2
  %17 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 8, !range !40
  %19 = icmp eq i8 %18, 0
  %20 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %21 = icmp eq %"class.SuggestionAnswer::TextField"* %20, null
  %22 = or i1 %21, %19
  br i1 %22, label %258, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = load i64, i64* %4, align 8
  %29 = zext i8 %26 to i64
  %30 = select i1 %27, i64 %28, i64 %29
  %31 = icmp eq i64 %30, 0
  %32 = bitcast %"class.SuggestionAnswer::TextField"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br i1 %31, label %70, label %33

33:                                               ; preds = %23
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  br label %42

40:                                               ; preds = %33
  %41 = zext i8 %35 to i64
  br label %42

42:                                               ; preds = %40, %37
  %43 = phi i64 [ %39, %37 ], [ %41, %40 ]
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %70, label %45

45:                                               ; preds = %42
  br i1 %27, label %46, label %50

46:                                               ; preds = %45
  %47 = load i64, i64* %5, align 8
  %48 = and i64 %47, 9223372036854775807
  %49 = add nsw i64 %48, -1
  br label %50

50:                                               ; preds = %45, %46
  %51 = phi i64 [ %49, %46 ], [ 10, %45 ]
  %52 = phi i64 [ %28, %46 ], [ %29, %45 ]
  %53 = icmp eq i64 %52, %51
  br i1 %53, label %54, label %57

54:                                               ; preds = %50
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %0, i64 %51, i64 1, i64 %51, i64 %51, i64 0, i64 0) #12
  %55 = load i8, i8* %25, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %62, label %58

57:                                               ; preds = %50
  br i1 %27, label %62, label %58

58:                                               ; preds = %57, %54
  %59 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %60 = trunc i64 %52 to i8
  %61 = add i8 %60, 1
  store i8 %61, i8* %25, align 1
  br label %65

62:                                               ; preds = %57, %54
  %63 = load i16*, i16** %3, align 8
  %64 = add i64 %52, 1
  store i64 %64, i64* %4, align 8
  br label %65

65:                                               ; preds = %58, %62
  %66 = phi i16* [ %59, %58 ], [ %63, %62 ]
  %67 = getelementptr inbounds i16, i16* %66, i64 %52
  store i16 32, i16* %67, align 2
  %68 = getelementptr inbounds i16, i16* %67, i64 1
  store i16 0, i16* %68, align 2
  %69 = load i8, i8* %25, align 1
  br label %70

70:                                               ; preds = %23, %65, %42
  %71 = phi i8 [ %69, %65 ], [ %26, %42 ], [ %26, %23 ]
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  %75 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i16*, i16** %75, align 8
  %77 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.SuggestionAnswer::TextField"* %20 to i16*
  %80 = zext i8 %73 to i64
  %81 = select i1 %74, i16* %76, i16* %79
  %82 = select i1 %74, i64 %78, i64 %80
  %83 = icmp slt i8 %71, 0
  br i1 %83, label %84, label %89

84:                                               ; preds = %70
  %85 = load i64, i64* %5, align 8
  %86 = and i64 %85, 9223372036854775807
  %87 = add nsw i64 %86, -1
  %88 = load i64, i64* %4, align 8
  br label %91

89:                                               ; preds = %70
  %90 = zext i8 %71 to i64
  br label %91

91:                                               ; preds = %89, %84
  %92 = phi i64 [ %87, %84 ], [ 10, %89 ]
  %93 = phi i64 [ %88, %84 ], [ %90, %89 ]
  %94 = sub i64 %92, %93
  %95 = icmp ult i64 %94, %82
  br i1 %95, label %255, label %96

96:                                               ; preds = %91
  %97 = icmp eq i64 %82, 0
  br i1 %97, label %258, label %98

98:                                               ; preds = %96
  %99 = load i16*, i16** %3, align 8
  %100 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %101 = select i1 %83, i16* %99, i16* %100
  %102 = getelementptr inbounds i16, i16* %101, i64 %93
  %103 = icmp ult i64 %82, 16
  br i1 %103, label %193, label %104

104:                                              ; preds = %98
  %105 = add i64 %82, %93
  %106 = getelementptr i16, i16* %101, i64 %105
  %107 = getelementptr i16, i16* %81, i64 %82
  %108 = icmp ult i16* %102, %107
  %109 = icmp ult i16* %81, %106
  %110 = and i1 %108, %109
  br i1 %110, label %193, label %111

111:                                              ; preds = %104
  %112 = and i64 %82, -16
  %113 = sub i64 %82, %112
  %114 = getelementptr i16, i16* %81, i64 %112
  %115 = getelementptr i16, i16* %102, i64 %112
  %116 = add i64 %112, -16
  %117 = lshr exact i64 %116, 4
  %118 = add nuw nsw i64 %117, 1
  %119 = and i64 %118, 3
  %120 = icmp ult i64 %116, 48
  br i1 %120, label %172, label %121

121:                                              ; preds = %111
  %122 = sub nsw i64 %118, %119
  br label %123

123:                                              ; preds = %123, %121
  %124 = phi i64 [ 0, %121 ], [ %169, %123 ]
  %125 = phi i64 [ %122, %121 ], [ %170, %123 ]
  %126 = getelementptr i16, i16* %81, i64 %124
  %127 = getelementptr i16, i16* %102, i64 %124
  %128 = bitcast i16* %126 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !92
  %130 = getelementptr i16, i16* %126, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !92
  %133 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %133, align 2, !alias.scope !95, !noalias !92
  %134 = getelementptr i16, i16* %127, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %135, align 2, !alias.scope !95, !noalias !92
  %136 = or i64 %124, 16
  %137 = getelementptr i16, i16* %81, i64 %136
  %138 = getelementptr i16, i16* %102, i64 %136
  %139 = bitcast i16* %137 to <8 x i16>*
  %140 = load <8 x i16>, <8 x i16>* %139, align 2, !alias.scope !92
  %141 = getelementptr i16, i16* %137, i64 8
  %142 = bitcast i16* %141 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !92
  %144 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %140, <8 x i16>* %144, align 2, !alias.scope !95, !noalias !92
  %145 = getelementptr i16, i16* %138, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %146, align 2, !alias.scope !95, !noalias !92
  %147 = or i64 %124, 32
  %148 = getelementptr i16, i16* %81, i64 %147
  %149 = getelementptr i16, i16* %102, i64 %147
  %150 = bitcast i16* %148 to <8 x i16>*
  %151 = load <8 x i16>, <8 x i16>* %150, align 2, !alias.scope !92
  %152 = getelementptr i16, i16* %148, i64 8
  %153 = bitcast i16* %152 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !92
  %155 = bitcast i16* %149 to <8 x i16>*
  store <8 x i16> %151, <8 x i16>* %155, align 2, !alias.scope !95, !noalias !92
  %156 = getelementptr i16, i16* %149, i64 8
  %157 = bitcast i16* %156 to <8 x i16>*
  store <8 x i16> %154, <8 x i16>* %157, align 2, !alias.scope !95, !noalias !92
  %158 = or i64 %124, 48
  %159 = getelementptr i16, i16* %81, i64 %158
  %160 = getelementptr i16, i16* %102, i64 %158
  %161 = bitcast i16* %159 to <8 x i16>*
  %162 = load <8 x i16>, <8 x i16>* %161, align 2, !alias.scope !92
  %163 = getelementptr i16, i16* %159, i64 8
  %164 = bitcast i16* %163 to <8 x i16>*
  %165 = load <8 x i16>, <8 x i16>* %164, align 2, !alias.scope !92
  %166 = bitcast i16* %160 to <8 x i16>*
  store <8 x i16> %162, <8 x i16>* %166, align 2, !alias.scope !95, !noalias !92
  %167 = getelementptr i16, i16* %160, i64 8
  %168 = bitcast i16* %167 to <8 x i16>*
  store <8 x i16> %165, <8 x i16>* %168, align 2, !alias.scope !95, !noalias !92
  %169 = add i64 %124, 64
  %170 = add i64 %125, -4
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %123, !llvm.loop !97

172:                                              ; preds = %123, %111
  %173 = phi i64 [ 0, %111 ], [ %169, %123 ]
  %174 = icmp eq i64 %119, 0
  br i1 %174, label %191, label %175

175:                                              ; preds = %172, %175
  %176 = phi i64 [ %188, %175 ], [ %173, %172 ]
  %177 = phi i64 [ %189, %175 ], [ %119, %172 ]
  %178 = getelementptr i16, i16* %81, i64 %176
  %179 = getelementptr i16, i16* %102, i64 %176
  %180 = bitcast i16* %178 to <8 x i16>*
  %181 = load <8 x i16>, <8 x i16>* %180, align 2, !alias.scope !92
  %182 = getelementptr i16, i16* %178, i64 8
  %183 = bitcast i16* %182 to <8 x i16>*
  %184 = load <8 x i16>, <8 x i16>* %183, align 2, !alias.scope !92
  %185 = bitcast i16* %179 to <8 x i16>*
  store <8 x i16> %181, <8 x i16>* %185, align 2, !alias.scope !95, !noalias !92
  %186 = getelementptr i16, i16* %179, i64 8
  %187 = bitcast i16* %186 to <8 x i16>*
  store <8 x i16> %184, <8 x i16>* %187, align 2, !alias.scope !95, !noalias !92
  %188 = add i64 %176, 16
  %189 = add i64 %177, -1
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %191, label %175, !llvm.loop !98

191:                                              ; preds = %175, %172
  %192 = icmp eq i64 %82, %112
  br i1 %192, label %246, label %193

193:                                              ; preds = %191, %104, %98
  %194 = phi i64 [ %82, %104 ], [ %82, %98 ], [ %113, %191 ]
  %195 = phi i16* [ %81, %104 ], [ %81, %98 ], [ %114, %191 ]
  %196 = phi i16* [ %102, %104 ], [ %102, %98 ], [ %115, %191 ]
  %197 = add i64 %194, -1
  %198 = and i64 %194, 7
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %211, label %200

200:                                              ; preds = %193, %200
  %201 = phi i64 [ %206, %200 ], [ %194, %193 ]
  %202 = phi i16* [ %208, %200 ], [ %195, %193 ]
  %203 = phi i16* [ %207, %200 ], [ %196, %193 ]
  %204 = phi i64 [ %209, %200 ], [ %198, %193 ]
  %205 = load i16, i16* %202, align 2
  store i16 %205, i16* %203, align 2
  %206 = add i64 %201, -1
  %207 = getelementptr inbounds i16, i16* %203, i64 1
  %208 = getelementptr inbounds i16, i16* %202, i64 1
  %209 = add i64 %204, -1
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %211, label %200, !llvm.loop !99

211:                                              ; preds = %200, %193
  %212 = phi i64 [ %194, %193 ], [ %206, %200 ]
  %213 = phi i16* [ %195, %193 ], [ %208, %200 ]
  %214 = phi i16* [ %196, %193 ], [ %207, %200 ]
  %215 = icmp ult i64 %197, 7
  br i1 %215, label %246, label %216

216:                                              ; preds = %211, %216
  %217 = phi i64 [ %242, %216 ], [ %212, %211 ]
  %218 = phi i16* [ %244, %216 ], [ %213, %211 ]
  %219 = phi i16* [ %243, %216 ], [ %214, %211 ]
  %220 = load i16, i16* %218, align 2
  store i16 %220, i16* %219, align 2
  %221 = getelementptr inbounds i16, i16* %219, i64 1
  %222 = getelementptr inbounds i16, i16* %218, i64 1
  %223 = load i16, i16* %222, align 2
  store i16 %223, i16* %221, align 2
  %224 = getelementptr inbounds i16, i16* %219, i64 2
  %225 = getelementptr inbounds i16, i16* %218, i64 2
  %226 = load i16, i16* %225, align 2
  store i16 %226, i16* %224, align 2
  %227 = getelementptr inbounds i16, i16* %219, i64 3
  %228 = getelementptr inbounds i16, i16* %218, i64 3
  %229 = load i16, i16* %228, align 2
  store i16 %229, i16* %227, align 2
  %230 = getelementptr inbounds i16, i16* %219, i64 4
  %231 = getelementptr inbounds i16, i16* %218, i64 4
  %232 = load i16, i16* %231, align 2
  store i16 %232, i16* %230, align 2
  %233 = getelementptr inbounds i16, i16* %219, i64 5
  %234 = getelementptr inbounds i16, i16* %218, i64 5
  %235 = load i16, i16* %234, align 2
  store i16 %235, i16* %233, align 2
  %236 = getelementptr inbounds i16, i16* %219, i64 6
  %237 = getelementptr inbounds i16, i16* %218, i64 6
  %238 = load i16, i16* %237, align 2
  store i16 %238, i16* %236, align 2
  %239 = getelementptr inbounds i16, i16* %219, i64 7
  %240 = getelementptr inbounds i16, i16* %218, i64 7
  %241 = load i16, i16* %240, align 2
  store i16 %241, i16* %239, align 2
  %242 = add i64 %217, -8
  %243 = getelementptr inbounds i16, i16* %219, i64 8
  %244 = getelementptr inbounds i16, i16* %218, i64 8
  %245 = icmp eq i64 %242, 0
  br i1 %245, label %246, label %216, !llvm.loop !100

246:                                              ; preds = %211, %216, %191
  %247 = add i64 %93, %82
  %248 = load i8, i8* %25, align 1
  %249 = icmp slt i8 %248, 0
  br i1 %249, label %250, label %251

250:                                              ; preds = %246
  store i64 %247, i64* %4, align 8
  br label %253

251:                                              ; preds = %246
  %252 = trunc i64 %247 to i8
  store i8 %252, i8* %25, align 1
  br label %253

253:                                              ; preds = %251, %250
  %254 = getelementptr inbounds i16, i16* %101, i64 %247
  store i16 0, i16* %254, align 2
  br label %258

255:                                              ; preds = %91
  %256 = add i64 %93, %82
  %257 = sub i64 %256, %92
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %92, i64 %257, i64 %93, i64 %93, i64 0, i64 %82, i16* %81) #12
  br label %258

258:                                              ; preds = %255, %253, %96, %16
  %259 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %260 = load i8, i8* %259, align 8, !range !40
  %261 = icmp eq i8 %260, 0
  %262 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %263 = icmp eq %"class.SuggestionAnswer::TextField"* %262, null
  %264 = or i1 %263, %261
  br i1 %264, label %500, label %265

265:                                              ; preds = %258
  %266 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %267 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %266, i64 0, i32 1, i32 1
  %268 = load i8, i8* %267, align 1
  %269 = icmp slt i8 %268, 0
  %270 = load i64, i64* %4, align 8
  %271 = zext i8 %268 to i64
  %272 = select i1 %269, i64 %270, i64 %271
  %273 = icmp eq i64 %272, 0
  %274 = bitcast %"class.SuggestionAnswer::TextField"* %262 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br i1 %273, label %312, label %275

275:                                              ; preds = %265
  %276 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %274, i64 0, i32 1, i32 1
  %277 = load i8, i8* %276, align 1
  %278 = icmp slt i8 %277, 0
  br i1 %278, label %279, label %282

279:                                              ; preds = %275
  %280 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %281 = load i64, i64* %280, align 8
  br label %284

282:                                              ; preds = %275
  %283 = zext i8 %277 to i64
  br label %284

284:                                              ; preds = %282, %279
  %285 = phi i64 [ %281, %279 ], [ %283, %282 ]
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %312, label %287

287:                                              ; preds = %284
  br i1 %269, label %288, label %292

288:                                              ; preds = %287
  %289 = load i64, i64* %5, align 8
  %290 = and i64 %289, 9223372036854775807
  %291 = add nsw i64 %290, -1
  br label %292

292:                                              ; preds = %287, %288
  %293 = phi i64 [ %291, %288 ], [ 10, %287 ]
  %294 = phi i64 [ %270, %288 ], [ %271, %287 ]
  %295 = icmp eq i64 %294, %293
  br i1 %295, label %296, label %299

296:                                              ; preds = %292
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %0, i64 %293, i64 1, i64 %293, i64 %293, i64 0, i64 0) #12
  %297 = load i8, i8* %267, align 1
  %298 = icmp slt i8 %297, 0
  br i1 %298, label %304, label %300

299:                                              ; preds = %292
  br i1 %269, label %304, label %300

300:                                              ; preds = %299, %296
  %301 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %302 = trunc i64 %294 to i8
  %303 = add i8 %302, 1
  store i8 %303, i8* %267, align 1
  br label %307

304:                                              ; preds = %299, %296
  %305 = load i16*, i16** %3, align 8
  %306 = add i64 %294, 1
  store i64 %306, i64* %4, align 8
  br label %307

307:                                              ; preds = %300, %304
  %308 = phi i16* [ %301, %300 ], [ %305, %304 ]
  %309 = getelementptr inbounds i16, i16* %308, i64 %294
  store i16 32, i16* %309, align 2
  %310 = getelementptr inbounds i16, i16* %309, i64 1
  store i16 0, i16* %310, align 2
  %311 = load i8, i8* %267, align 1
  br label %312

312:                                              ; preds = %265, %307, %284
  %313 = phi i8 [ %311, %307 ], [ %268, %284 ], [ %268, %265 ]
  %314 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %274, i64 0, i32 1, i32 1
  %315 = load i8, i8* %314, align 1
  %316 = icmp slt i8 %315, 0
  %317 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %262, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %318 = load i16*, i16** %317, align 8
  %319 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %320 = load i64, i64* %319, align 8
  %321 = bitcast %"class.SuggestionAnswer::TextField"* %262 to i16*
  %322 = zext i8 %315 to i64
  %323 = select i1 %316, i16* %318, i16* %321
  %324 = select i1 %316, i64 %320, i64 %322
  %325 = icmp slt i8 %313, 0
  br i1 %325, label %326, label %331

326:                                              ; preds = %312
  %327 = load i64, i64* %5, align 8
  %328 = and i64 %327, 9223372036854775807
  %329 = add nsw i64 %328, -1
  %330 = load i64, i64* %4, align 8
  br label %333

331:                                              ; preds = %312
  %332 = zext i8 %313 to i64
  br label %333

333:                                              ; preds = %331, %326
  %334 = phi i64 [ %329, %326 ], [ 10, %331 ]
  %335 = phi i64 [ %330, %326 ], [ %332, %331 ]
  %336 = sub i64 %334, %335
  %337 = icmp ult i64 %336, %324
  br i1 %337, label %497, label %338

338:                                              ; preds = %333
  %339 = icmp eq i64 %324, 0
  br i1 %339, label %500, label %340

340:                                              ; preds = %338
  %341 = load i16*, i16** %3, align 8
  %342 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %343 = select i1 %325, i16* %341, i16* %342
  %344 = getelementptr inbounds i16, i16* %343, i64 %335
  %345 = icmp ult i64 %324, 16
  br i1 %345, label %435, label %346

346:                                              ; preds = %340
  %347 = add i64 %324, %335
  %348 = getelementptr i16, i16* %343, i64 %347
  %349 = getelementptr i16, i16* %323, i64 %324
  %350 = icmp ult i16* %344, %349
  %351 = icmp ult i16* %323, %348
  %352 = and i1 %350, %351
  br i1 %352, label %435, label %353

353:                                              ; preds = %346
  %354 = and i64 %324, -16
  %355 = sub i64 %324, %354
  %356 = getelementptr i16, i16* %323, i64 %354
  %357 = getelementptr i16, i16* %344, i64 %354
  %358 = add i64 %354, -16
  %359 = lshr exact i64 %358, 4
  %360 = add nuw nsw i64 %359, 1
  %361 = and i64 %360, 3
  %362 = icmp ult i64 %358, 48
  br i1 %362, label %414, label %363

363:                                              ; preds = %353
  %364 = sub nsw i64 %360, %361
  br label %365

365:                                              ; preds = %365, %363
  %366 = phi i64 [ 0, %363 ], [ %411, %365 ]
  %367 = phi i64 [ %364, %363 ], [ %412, %365 ]
  %368 = getelementptr i16, i16* %323, i64 %366
  %369 = getelementptr i16, i16* %344, i64 %366
  %370 = bitcast i16* %368 to <8 x i16>*
  %371 = load <8 x i16>, <8 x i16>* %370, align 2, !alias.scope !101
  %372 = getelementptr i16, i16* %368, i64 8
  %373 = bitcast i16* %372 to <8 x i16>*
  %374 = load <8 x i16>, <8 x i16>* %373, align 2, !alias.scope !101
  %375 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %371, <8 x i16>* %375, align 2, !alias.scope !104, !noalias !101
  %376 = getelementptr i16, i16* %369, i64 8
  %377 = bitcast i16* %376 to <8 x i16>*
  store <8 x i16> %374, <8 x i16>* %377, align 2, !alias.scope !104, !noalias !101
  %378 = or i64 %366, 16
  %379 = getelementptr i16, i16* %323, i64 %378
  %380 = getelementptr i16, i16* %344, i64 %378
  %381 = bitcast i16* %379 to <8 x i16>*
  %382 = load <8 x i16>, <8 x i16>* %381, align 2, !alias.scope !101
  %383 = getelementptr i16, i16* %379, i64 8
  %384 = bitcast i16* %383 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !101
  %386 = bitcast i16* %380 to <8 x i16>*
  store <8 x i16> %382, <8 x i16>* %386, align 2, !alias.scope !104, !noalias !101
  %387 = getelementptr i16, i16* %380, i64 8
  %388 = bitcast i16* %387 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %388, align 2, !alias.scope !104, !noalias !101
  %389 = or i64 %366, 32
  %390 = getelementptr i16, i16* %323, i64 %389
  %391 = getelementptr i16, i16* %344, i64 %389
  %392 = bitcast i16* %390 to <8 x i16>*
  %393 = load <8 x i16>, <8 x i16>* %392, align 2, !alias.scope !101
  %394 = getelementptr i16, i16* %390, i64 8
  %395 = bitcast i16* %394 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !101
  %397 = bitcast i16* %391 to <8 x i16>*
  store <8 x i16> %393, <8 x i16>* %397, align 2, !alias.scope !104, !noalias !101
  %398 = getelementptr i16, i16* %391, i64 8
  %399 = bitcast i16* %398 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %399, align 2, !alias.scope !104, !noalias !101
  %400 = or i64 %366, 48
  %401 = getelementptr i16, i16* %323, i64 %400
  %402 = getelementptr i16, i16* %344, i64 %400
  %403 = bitcast i16* %401 to <8 x i16>*
  %404 = load <8 x i16>, <8 x i16>* %403, align 2, !alias.scope !101
  %405 = getelementptr i16, i16* %401, i64 8
  %406 = bitcast i16* %405 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !101
  %408 = bitcast i16* %402 to <8 x i16>*
  store <8 x i16> %404, <8 x i16>* %408, align 2, !alias.scope !104, !noalias !101
  %409 = getelementptr i16, i16* %402, i64 8
  %410 = bitcast i16* %409 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %410, align 2, !alias.scope !104, !noalias !101
  %411 = add i64 %366, 64
  %412 = add i64 %367, -4
  %413 = icmp eq i64 %412, 0
  br i1 %413, label %414, label %365, !llvm.loop !106

414:                                              ; preds = %365, %353
  %415 = phi i64 [ 0, %353 ], [ %411, %365 ]
  %416 = icmp eq i64 %361, 0
  br i1 %416, label %433, label %417

417:                                              ; preds = %414, %417
  %418 = phi i64 [ %430, %417 ], [ %415, %414 ]
  %419 = phi i64 [ %431, %417 ], [ %361, %414 ]
  %420 = getelementptr i16, i16* %323, i64 %418
  %421 = getelementptr i16, i16* %344, i64 %418
  %422 = bitcast i16* %420 to <8 x i16>*
  %423 = load <8 x i16>, <8 x i16>* %422, align 2, !alias.scope !101
  %424 = getelementptr i16, i16* %420, i64 8
  %425 = bitcast i16* %424 to <8 x i16>*
  %426 = load <8 x i16>, <8 x i16>* %425, align 2, !alias.scope !101
  %427 = bitcast i16* %421 to <8 x i16>*
  store <8 x i16> %423, <8 x i16>* %427, align 2, !alias.scope !104, !noalias !101
  %428 = getelementptr i16, i16* %421, i64 8
  %429 = bitcast i16* %428 to <8 x i16>*
  store <8 x i16> %426, <8 x i16>* %429, align 2, !alias.scope !104, !noalias !101
  %430 = add i64 %418, 16
  %431 = add i64 %419, -1
  %432 = icmp eq i64 %431, 0
  br i1 %432, label %433, label %417, !llvm.loop !107

433:                                              ; preds = %417, %414
  %434 = icmp eq i64 %324, %354
  br i1 %434, label %488, label %435

435:                                              ; preds = %433, %346, %340
  %436 = phi i64 [ %324, %346 ], [ %324, %340 ], [ %355, %433 ]
  %437 = phi i16* [ %323, %346 ], [ %323, %340 ], [ %356, %433 ]
  %438 = phi i16* [ %344, %346 ], [ %344, %340 ], [ %357, %433 ]
  %439 = add i64 %436, -1
  %440 = and i64 %436, 7
  %441 = icmp eq i64 %440, 0
  br i1 %441, label %453, label %442

442:                                              ; preds = %435, %442
  %443 = phi i64 [ %448, %442 ], [ %436, %435 ]
  %444 = phi i16* [ %450, %442 ], [ %437, %435 ]
  %445 = phi i16* [ %449, %442 ], [ %438, %435 ]
  %446 = phi i64 [ %451, %442 ], [ %440, %435 ]
  %447 = load i16, i16* %444, align 2
  store i16 %447, i16* %445, align 2
  %448 = add i64 %443, -1
  %449 = getelementptr inbounds i16, i16* %445, i64 1
  %450 = getelementptr inbounds i16, i16* %444, i64 1
  %451 = add i64 %446, -1
  %452 = icmp eq i64 %451, 0
  br i1 %452, label %453, label %442, !llvm.loop !108

453:                                              ; preds = %442, %435
  %454 = phi i64 [ %436, %435 ], [ %448, %442 ]
  %455 = phi i16* [ %437, %435 ], [ %450, %442 ]
  %456 = phi i16* [ %438, %435 ], [ %449, %442 ]
  %457 = icmp ult i64 %439, 7
  br i1 %457, label %488, label %458

458:                                              ; preds = %453, %458
  %459 = phi i64 [ %484, %458 ], [ %454, %453 ]
  %460 = phi i16* [ %486, %458 ], [ %455, %453 ]
  %461 = phi i16* [ %485, %458 ], [ %456, %453 ]
  %462 = load i16, i16* %460, align 2
  store i16 %462, i16* %461, align 2
  %463 = getelementptr inbounds i16, i16* %461, i64 1
  %464 = getelementptr inbounds i16, i16* %460, i64 1
  %465 = load i16, i16* %464, align 2
  store i16 %465, i16* %463, align 2
  %466 = getelementptr inbounds i16, i16* %461, i64 2
  %467 = getelementptr inbounds i16, i16* %460, i64 2
  %468 = load i16, i16* %467, align 2
  store i16 %468, i16* %466, align 2
  %469 = getelementptr inbounds i16, i16* %461, i64 3
  %470 = getelementptr inbounds i16, i16* %460, i64 3
  %471 = load i16, i16* %470, align 2
  store i16 %471, i16* %469, align 2
  %472 = getelementptr inbounds i16, i16* %461, i64 4
  %473 = getelementptr inbounds i16, i16* %460, i64 4
  %474 = load i16, i16* %473, align 2
  store i16 %474, i16* %472, align 2
  %475 = getelementptr inbounds i16, i16* %461, i64 5
  %476 = getelementptr inbounds i16, i16* %460, i64 5
  %477 = load i16, i16* %476, align 2
  store i16 %477, i16* %475, align 2
  %478 = getelementptr inbounds i16, i16* %461, i64 6
  %479 = getelementptr inbounds i16, i16* %460, i64 6
  %480 = load i16, i16* %479, align 2
  store i16 %480, i16* %478, align 2
  %481 = getelementptr inbounds i16, i16* %461, i64 7
  %482 = getelementptr inbounds i16, i16* %460, i64 7
  %483 = load i16, i16* %482, align 2
  store i16 %483, i16* %481, align 2
  %484 = add i64 %459, -8
  %485 = getelementptr inbounds i16, i16* %461, i64 8
  %486 = getelementptr inbounds i16, i16* %460, i64 8
  %487 = icmp eq i64 %484, 0
  br i1 %487, label %488, label %458, !llvm.loop !109

488:                                              ; preds = %453, %458, %433
  %489 = add i64 %335, %324
  %490 = load i8, i8* %267, align 1
  %491 = icmp slt i8 %490, 0
  br i1 %491, label %492, label %493

492:                                              ; preds = %488
  store i64 %489, i64* %4, align 8
  br label %495

493:                                              ; preds = %488
  %494 = trunc i64 %489 to i8
  store i8 %494, i8* %267, align 1
  br label %495

495:                                              ; preds = %493, %492
  %496 = getelementptr inbounds i16, i16* %343, i64 %489
  store i16 0, i16* %496, align 2
  br label %500

497:                                              ; preds = %333
  %498 = add i64 %335, %324
  %499 = sub i64 %498, %334
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %334, i64 %499, i64 %335, i64 %335, i64 0, i64 %324, i16* %323) #12
  br label %500

500:                                              ; preds = %497, %495, %338, %258
  ret void

501:                                              ; preds = %12, %735
  %502 = phi %"class.SuggestionAnswer::TextField"* [ %8, %12 ], [ %736, %735 ]
  %503 = icmp eq %"class.SuggestionAnswer::TextField"* %502, null
  br i1 %503, label %735, label %504

504:                                              ; preds = %501
  %505 = load i8, i8* %14, align 1
  %506 = icmp slt i8 %505, 0
  %507 = load i64, i64* %4, align 8
  %508 = zext i8 %505 to i64
  %509 = select i1 %506, i64 %507, i64 %508
  %510 = icmp eq i64 %509, 0
  %511 = bitcast %"class.SuggestionAnswer::TextField"* %502 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br i1 %510, label %548, label %512

512:                                              ; preds = %504
  %513 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %511, i64 0, i32 1, i32 1
  %514 = load i8, i8* %513, align 1
  %515 = icmp slt i8 %514, 0
  br i1 %515, label %516, label %519

516:                                              ; preds = %512
  %517 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %502, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %518 = load i64, i64* %517, align 8
  br label %521

519:                                              ; preds = %512
  %520 = zext i8 %514 to i64
  br label %521

521:                                              ; preds = %519, %516
  %522 = phi i64 [ %518, %516 ], [ %520, %519 ]
  %523 = icmp eq i64 %522, 0
  br i1 %523, label %548, label %524

524:                                              ; preds = %521
  br i1 %506, label %525, label %529

525:                                              ; preds = %524
  %526 = load i64, i64* %5, align 8
  %527 = and i64 %526, 9223372036854775807
  %528 = add nsw i64 %527, -1
  br label %529

529:                                              ; preds = %524, %525
  %530 = phi i64 [ %528, %525 ], [ 10, %524 ]
  %531 = phi i64 [ %507, %525 ], [ %508, %524 ]
  %532 = icmp eq i64 %531, %530
  br i1 %532, label %533, label %536

533:                                              ; preds = %529
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %0, i64 %530, i64 1, i64 %530, i64 %530, i64 0, i64 0) #12
  %534 = load i8, i8* %14, align 1
  %535 = icmp slt i8 %534, 0
  br i1 %535, label %540, label %537

536:                                              ; preds = %529
  br i1 %506, label %540, label %537

537:                                              ; preds = %536, %533
  %538 = trunc i64 %531 to i8
  %539 = add i8 %538, 1
  store i8 %539, i8* %14, align 1
  br label %543

540:                                              ; preds = %536, %533
  %541 = load i16*, i16** %3, align 8
  %542 = add i64 %531, 1
  store i64 %542, i64* %4, align 8
  br label %543

543:                                              ; preds = %537, %540
  %544 = phi i16* [ %15, %537 ], [ %541, %540 ]
  %545 = getelementptr inbounds i16, i16* %544, i64 %531
  store i16 32, i16* %545, align 2
  %546 = getelementptr inbounds i16, i16* %545, i64 1
  store i16 0, i16* %546, align 2
  %547 = load i8, i8* %14, align 1
  br label %548

548:                                              ; preds = %504, %543, %521
  %549 = phi i8 [ %547, %543 ], [ %505, %521 ], [ %505, %504 ]
  %550 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %511, i64 0, i32 1, i32 1
  %551 = load i8, i8* %550, align 1
  %552 = icmp slt i8 %551, 0
  %553 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %502, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %554 = load i16*, i16** %553, align 8
  %555 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %502, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %556 = load i64, i64* %555, align 8
  %557 = bitcast %"class.SuggestionAnswer::TextField"* %502 to i16*
  %558 = zext i8 %551 to i64
  %559 = select i1 %552, i16* %554, i16* %557
  %560 = select i1 %552, i64 %556, i64 %558
  %561 = icmp slt i8 %549, 0
  br i1 %561, label %562, label %567

562:                                              ; preds = %548
  %563 = load i64, i64* %5, align 8
  %564 = and i64 %563, 9223372036854775807
  %565 = add nsw i64 %564, -1
  %566 = load i64, i64* %4, align 8
  br label %569

567:                                              ; preds = %548
  %568 = zext i8 %549 to i64
  br label %569

569:                                              ; preds = %567, %562
  %570 = phi i64 [ %565, %562 ], [ 10, %567 ]
  %571 = phi i64 [ %566, %562 ], [ %568, %567 ]
  %572 = sub i64 %570, %571
  %573 = icmp ult i64 %572, %560
  br i1 %573, label %732, label %574

574:                                              ; preds = %569
  %575 = icmp eq i64 %560, 0
  br i1 %575, label %735, label %576

576:                                              ; preds = %574
  %577 = load i16*, i16** %3, align 8
  %578 = select i1 %561, i16* %577, i16* %15
  %579 = getelementptr inbounds i16, i16* %578, i64 %571
  %580 = icmp ult i64 %560, 16
  br i1 %580, label %670, label %581

581:                                              ; preds = %576
  %582 = add i64 %560, %571
  %583 = getelementptr i16, i16* %578, i64 %582
  %584 = getelementptr i16, i16* %559, i64 %560
  %585 = icmp ult i16* %579, %584
  %586 = icmp ult i16* %559, %583
  %587 = and i1 %585, %586
  br i1 %587, label %670, label %588

588:                                              ; preds = %581
  %589 = and i64 %560, -16
  %590 = sub i64 %560, %589
  %591 = getelementptr i16, i16* %559, i64 %589
  %592 = getelementptr i16, i16* %579, i64 %589
  %593 = add i64 %589, -16
  %594 = lshr exact i64 %593, 4
  %595 = add nuw nsw i64 %594, 1
  %596 = and i64 %595, 3
  %597 = icmp ult i64 %593, 48
  br i1 %597, label %649, label %598

598:                                              ; preds = %588
  %599 = sub nsw i64 %595, %596
  br label %600

600:                                              ; preds = %600, %598
  %601 = phi i64 [ 0, %598 ], [ %646, %600 ]
  %602 = phi i64 [ %599, %598 ], [ %647, %600 ]
  %603 = getelementptr i16, i16* %559, i64 %601
  %604 = getelementptr i16, i16* %579, i64 %601
  %605 = bitcast i16* %603 to <8 x i16>*
  %606 = load <8 x i16>, <8 x i16>* %605, align 2, !alias.scope !110
  %607 = getelementptr i16, i16* %603, i64 8
  %608 = bitcast i16* %607 to <8 x i16>*
  %609 = load <8 x i16>, <8 x i16>* %608, align 2, !alias.scope !110
  %610 = bitcast i16* %604 to <8 x i16>*
  store <8 x i16> %606, <8 x i16>* %610, align 2, !alias.scope !113, !noalias !110
  %611 = getelementptr i16, i16* %604, i64 8
  %612 = bitcast i16* %611 to <8 x i16>*
  store <8 x i16> %609, <8 x i16>* %612, align 2, !alias.scope !113, !noalias !110
  %613 = or i64 %601, 16
  %614 = getelementptr i16, i16* %559, i64 %613
  %615 = getelementptr i16, i16* %579, i64 %613
  %616 = bitcast i16* %614 to <8 x i16>*
  %617 = load <8 x i16>, <8 x i16>* %616, align 2, !alias.scope !110
  %618 = getelementptr i16, i16* %614, i64 8
  %619 = bitcast i16* %618 to <8 x i16>*
  %620 = load <8 x i16>, <8 x i16>* %619, align 2, !alias.scope !110
  %621 = bitcast i16* %615 to <8 x i16>*
  store <8 x i16> %617, <8 x i16>* %621, align 2, !alias.scope !113, !noalias !110
  %622 = getelementptr i16, i16* %615, i64 8
  %623 = bitcast i16* %622 to <8 x i16>*
  store <8 x i16> %620, <8 x i16>* %623, align 2, !alias.scope !113, !noalias !110
  %624 = or i64 %601, 32
  %625 = getelementptr i16, i16* %559, i64 %624
  %626 = getelementptr i16, i16* %579, i64 %624
  %627 = bitcast i16* %625 to <8 x i16>*
  %628 = load <8 x i16>, <8 x i16>* %627, align 2, !alias.scope !110
  %629 = getelementptr i16, i16* %625, i64 8
  %630 = bitcast i16* %629 to <8 x i16>*
  %631 = load <8 x i16>, <8 x i16>* %630, align 2, !alias.scope !110
  %632 = bitcast i16* %626 to <8 x i16>*
  store <8 x i16> %628, <8 x i16>* %632, align 2, !alias.scope !113, !noalias !110
  %633 = getelementptr i16, i16* %626, i64 8
  %634 = bitcast i16* %633 to <8 x i16>*
  store <8 x i16> %631, <8 x i16>* %634, align 2, !alias.scope !113, !noalias !110
  %635 = or i64 %601, 48
  %636 = getelementptr i16, i16* %559, i64 %635
  %637 = getelementptr i16, i16* %579, i64 %635
  %638 = bitcast i16* %636 to <8 x i16>*
  %639 = load <8 x i16>, <8 x i16>* %638, align 2, !alias.scope !110
  %640 = getelementptr i16, i16* %636, i64 8
  %641 = bitcast i16* %640 to <8 x i16>*
  %642 = load <8 x i16>, <8 x i16>* %641, align 2, !alias.scope !110
  %643 = bitcast i16* %637 to <8 x i16>*
  store <8 x i16> %639, <8 x i16>* %643, align 2, !alias.scope !113, !noalias !110
  %644 = getelementptr i16, i16* %637, i64 8
  %645 = bitcast i16* %644 to <8 x i16>*
  store <8 x i16> %642, <8 x i16>* %645, align 2, !alias.scope !113, !noalias !110
  %646 = add i64 %601, 64
  %647 = add i64 %602, -4
  %648 = icmp eq i64 %647, 0
  br i1 %648, label %649, label %600, !llvm.loop !115

649:                                              ; preds = %600, %588
  %650 = phi i64 [ 0, %588 ], [ %646, %600 ]
  %651 = icmp eq i64 %596, 0
  br i1 %651, label %668, label %652

652:                                              ; preds = %649, %652
  %653 = phi i64 [ %665, %652 ], [ %650, %649 ]
  %654 = phi i64 [ %666, %652 ], [ %596, %649 ]
  %655 = getelementptr i16, i16* %559, i64 %653
  %656 = getelementptr i16, i16* %579, i64 %653
  %657 = bitcast i16* %655 to <8 x i16>*
  %658 = load <8 x i16>, <8 x i16>* %657, align 2, !alias.scope !110
  %659 = getelementptr i16, i16* %655, i64 8
  %660 = bitcast i16* %659 to <8 x i16>*
  %661 = load <8 x i16>, <8 x i16>* %660, align 2, !alias.scope !110
  %662 = bitcast i16* %656 to <8 x i16>*
  store <8 x i16> %658, <8 x i16>* %662, align 2, !alias.scope !113, !noalias !110
  %663 = getelementptr i16, i16* %656, i64 8
  %664 = bitcast i16* %663 to <8 x i16>*
  store <8 x i16> %661, <8 x i16>* %664, align 2, !alias.scope !113, !noalias !110
  %665 = add i64 %653, 16
  %666 = add i64 %654, -1
  %667 = icmp eq i64 %666, 0
  br i1 %667, label %668, label %652, !llvm.loop !116

668:                                              ; preds = %652, %649
  %669 = icmp eq i64 %560, %589
  br i1 %669, label %723, label %670

670:                                              ; preds = %668, %581, %576
  %671 = phi i64 [ %560, %581 ], [ %560, %576 ], [ %590, %668 ]
  %672 = phi i16* [ %559, %581 ], [ %559, %576 ], [ %591, %668 ]
  %673 = phi i16* [ %579, %581 ], [ %579, %576 ], [ %592, %668 ]
  %674 = add i64 %671, -1
  %675 = and i64 %671, 7
  %676 = icmp eq i64 %675, 0
  br i1 %676, label %688, label %677

677:                                              ; preds = %670, %677
  %678 = phi i64 [ %683, %677 ], [ %671, %670 ]
  %679 = phi i16* [ %685, %677 ], [ %672, %670 ]
  %680 = phi i16* [ %684, %677 ], [ %673, %670 ]
  %681 = phi i64 [ %686, %677 ], [ %675, %670 ]
  %682 = load i16, i16* %679, align 2
  store i16 %682, i16* %680, align 2
  %683 = add i64 %678, -1
  %684 = getelementptr inbounds i16, i16* %680, i64 1
  %685 = getelementptr inbounds i16, i16* %679, i64 1
  %686 = add i64 %681, -1
  %687 = icmp eq i64 %686, 0
  br i1 %687, label %688, label %677, !llvm.loop !117

688:                                              ; preds = %677, %670
  %689 = phi i64 [ %671, %670 ], [ %683, %677 ]
  %690 = phi i16* [ %672, %670 ], [ %685, %677 ]
  %691 = phi i16* [ %673, %670 ], [ %684, %677 ]
  %692 = icmp ult i64 %674, 7
  br i1 %692, label %723, label %693

693:                                              ; preds = %688, %693
  %694 = phi i64 [ %719, %693 ], [ %689, %688 ]
  %695 = phi i16* [ %721, %693 ], [ %690, %688 ]
  %696 = phi i16* [ %720, %693 ], [ %691, %688 ]
  %697 = load i16, i16* %695, align 2
  store i16 %697, i16* %696, align 2
  %698 = getelementptr inbounds i16, i16* %696, i64 1
  %699 = getelementptr inbounds i16, i16* %695, i64 1
  %700 = load i16, i16* %699, align 2
  store i16 %700, i16* %698, align 2
  %701 = getelementptr inbounds i16, i16* %696, i64 2
  %702 = getelementptr inbounds i16, i16* %695, i64 2
  %703 = load i16, i16* %702, align 2
  store i16 %703, i16* %701, align 2
  %704 = getelementptr inbounds i16, i16* %696, i64 3
  %705 = getelementptr inbounds i16, i16* %695, i64 3
  %706 = load i16, i16* %705, align 2
  store i16 %706, i16* %704, align 2
  %707 = getelementptr inbounds i16, i16* %696, i64 4
  %708 = getelementptr inbounds i16, i16* %695, i64 4
  %709 = load i16, i16* %708, align 2
  store i16 %709, i16* %707, align 2
  %710 = getelementptr inbounds i16, i16* %696, i64 5
  %711 = getelementptr inbounds i16, i16* %695, i64 5
  %712 = load i16, i16* %711, align 2
  store i16 %712, i16* %710, align 2
  %713 = getelementptr inbounds i16, i16* %696, i64 6
  %714 = getelementptr inbounds i16, i16* %695, i64 6
  %715 = load i16, i16* %714, align 2
  store i16 %715, i16* %713, align 2
  %716 = getelementptr inbounds i16, i16* %696, i64 7
  %717 = getelementptr inbounds i16, i16* %695, i64 7
  %718 = load i16, i16* %717, align 2
  store i16 %718, i16* %716, align 2
  %719 = add i64 %694, -8
  %720 = getelementptr inbounds i16, i16* %696, i64 8
  %721 = getelementptr inbounds i16, i16* %695, i64 8
  %722 = icmp eq i64 %719, 0
  br i1 %722, label %723, label %693, !llvm.loop !118

723:                                              ; preds = %688, %693, %668
  %724 = add i64 %571, %560
  %725 = load i8, i8* %14, align 1
  %726 = icmp slt i8 %725, 0
  br i1 %726, label %727, label %728

727:                                              ; preds = %723
  store i64 %724, i64* %4, align 8
  br label %730

728:                                              ; preds = %723
  %729 = trunc i64 %724 to i8
  store i8 %729, i8* %14, align 1
  br label %730

730:                                              ; preds = %728, %727
  %731 = getelementptr inbounds i16, i16* %578, i64 %724
  store i16 0, i16* %731, align 2
  br label %735

732:                                              ; preds = %569
  %733 = add i64 %571, %560
  %734 = sub i64 %733, %570
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %570, i64 %734, i64 %571, i64 %571, i64 0, i64 %560, i16* %559) #12
  br label %735

735:                                              ; preds = %732, %730, %574, %501
  %736 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %502, i64 1
  %737 = icmp eq %"class.SuggestionAnswer::TextField"* %736, %10
  br i1 %737, label %16, label %501
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK16SuggestionAnswer9ImageLine19EstimateMemoryUsageEv(%"class.SuggestionAnswer::ImageLine"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = bitcast %"class.SuggestionAnswer::TextField"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.SuggestionAnswer::ImageLine"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = inttoptr i64 %6 to %"class.SuggestionAnswer::TextField"*
  %9 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %9, align 8
  %11 = icmp eq %"class.SuggestionAnswer::TextField"* %10, %8
  br i1 %11, label %20, label %12

12:                                               ; preds = %1, %12
  %13 = phi i64 [ %17, %12 ], [ 0, %1 ]
  %14 = phi %"class.SuggestionAnswer::TextField"* [ %18, %12 ], [ %8, %1 ]
  %15 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %14, i64 0, i32 0
  %16 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIDsNSt3__111char_traitsIDsEENS2_9allocatorIDsEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %15) #12
  %17 = add i64 %16, %13
  %18 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %14, i64 1
  %19 = icmp eq %"class.SuggestionAnswer::TextField"* %18, %10
  br i1 %19, label %20, label %12

20:                                               ; preds = %12, %1
  %21 = phi i64 [ 0, %1 ], [ %17, %12 ]
  %22 = add i64 %21, %7
  %23 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %24 = load i8, i8* %23, align 8, !range !40
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %20
  %27 = add i64 %22, 4
  %28 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %29 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIDsNSt3__111char_traitsIDsEENS2_9allocatorIDsEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %28) #12
  %30 = add i64 %27, %29
  br label %33

31:                                               ; preds = %20
  %32 = add i64 %22, 44
  br label %33

33:                                               ; preds = %31, %26
  %34 = phi i64 [ %30, %26 ], [ %32, %31 ]
  %35 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %36 = load i8, i8* %35, align 8, !range !40
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %33
  %39 = add i64 %34, 4
  %40 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %41 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIDsNSt3__111char_traitsIDsEENS2_9allocatorIDsEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %40) #12
  %42 = add i64 %39, %41
  br label %45

43:                                               ; preds = %33
  %44 = add i64 %34, 44
  br label %45

45:                                               ; preds = %43, %38
  %46 = phi i64 [ %42, %38 ], [ %44, %43 ]
  %47 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 4
  %48 = tail call i64 @_ZNK4GURL19EstimateMemoryUsageEv(%class.GURL* %47) #12
  %49 = add i64 %48, %46
  ret i64 %49
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SuggestionAnswer9ImageLine13SetTextStylesEiNS_9TextStyleE(%"class.SuggestionAnswer::ImageLine"* nocapture, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %4, align 8
  %6 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %6, align 8
  %8 = icmp eq %"class.SuggestionAnswer::TextField"* %5, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = icmp eq i32 %1, 0
  br label %15

11:                                               ; preds = %26, %3
  %12 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !40
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %40, label %29

15:                                               ; preds = %9, %26
  %16 = phi %"class.SuggestionAnswer::TextField"* [ %5, %9 ], [ %27, %26 ]
  %17 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %16, i64 0, i32 4
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %26

20:                                               ; preds = %15
  br i1 %10, label %25, label %21

21:                                               ; preds = %20
  %22 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %16, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, %1
  br i1 %24, label %25, label %26

25:                                               ; preds = %21, %20
  store i32 %2, i32* %17, align 4
  br label %26

26:                                               ; preds = %15, %21, %25
  %27 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %16, i64 1
  %28 = icmp eq %"class.SuggestionAnswer::TextField"* %27, %7
  br i1 %28, label %11, label %15

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %40

33:                                               ; preds = %29
  %34 = icmp eq i32 %1, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, %1
  br i1 %38, label %39, label %40

39:                                               ; preds = %35, %33
  store i32 %2, i32* %30, align 4
  br label %40

40:                                               ; preds = %11, %39, %35, %29
  %41 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %42 = load i8, i8* %41, align 8, !range !40
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %55, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %55

48:                                               ; preds = %44
  %49 = icmp eq i32 %1, 0
  br i1 %49, label %54, label %50

50:                                               ; preds = %48
  %51 = getelementptr inbounds %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, %1
  br i1 %53, label %54, label %55

54:                                               ; preds = %50, %48
  store i32 %2, i32* %45, align 4
  br label %55

55:                                               ; preds = %40, %54, %50, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SuggestionAnswerC2Ev(%class.SuggestionAnswer*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 0
  tail call void @_ZN4GURLC1Ev(%class.GURL* %2) #12
  %3 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1
  %4 = bitcast %"class.SuggestionAnswer::ImageLine"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #12
  %5 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 1
  store i32 1, i32* %5, align 8
  %6 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %union.anon.50* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 40, i1 false) #12
  %10 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 4
  %11 = bitcast %union.anon.50* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 41, i1 false) #12
  tail call void @_ZN4GURLC1Ev(%class.GURL* %10) #12
  %12 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2
  %13 = bitcast %"class.SuggestionAnswer::ImageLine"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #12
  %14 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 1
  store i32 1, i32* %14, align 8
  %15 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast %union.anon.50* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 40, i1 false) #12
  %19 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 4
  %20 = bitcast %union.anon.50* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 41, i1 false) #12
  tail call void @_ZN4GURLC1Ev(%class.GURL* %19) #12
  %21 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 3
  store i32 -1, i32* %21, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SuggestionAnswerC2ERKS_(%class.SuggestionAnswer*, %class.SuggestionAnswer* dereferenceable(624)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 0
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %3, %class.GURL* dereferenceable(120) %4) #12
  %5 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1
  %6 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 1
  tail call void @_ZN16SuggestionAnswer9ImageLineC2ERKS0_(%"class.SuggestionAnswer::ImageLine"* %5, %"class.SuggestionAnswer::ImageLine"* dereferenceable(248) %6)
  %7 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2
  %8 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 2
  tail call void @_ZN16SuggestionAnswer9ImageLineC2ERKS0_(%"class.SuggestionAnswer::ImageLine"* %7, %"class.SuggestionAnswer::ImageLine"* dereferenceable(248) %8)
  %9 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 3
  %10 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  store i32 %11, i32* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SuggestionAnswerC2EOS_(%class.SuggestionAnswer*, %class.SuggestionAnswer* dereferenceable(624)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 0
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %3, %class.GURL* dereferenceable(120) %4) #12
  %5 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1
  %6 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 1
  %7 = bitcast %"class.SuggestionAnswer::ImageLine"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #12
  %8 = bitcast %"class.SuggestionAnswer::ImageLine"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.SuggestionAnswer::ImageLine"* %5 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %12 = bitcast %"class.SuggestionAnswer::TextField"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = bitcast %"class.SuggestionAnswer::TextField"** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.SuggestionAnswer::TextField"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.SuggestionAnswer::TextField"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"class.SuggestionAnswer::ImageLine"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #12
  %22 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 1
  %23 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 1, i32 1
  %24 = load i32, i32* %23, align 8
  store i32 %24, i32* %22, align 8
  %25 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 48, i1 false) #12
  %27 = load i8, i8* %26, align 8, !range !40
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %38, label %29

29:                                               ; preds = %2
  %30 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %31 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %32 = bitcast %"class.SuggestionAnswer::TextField"* %31 to i8*
  %33 = bitcast %"class.SuggestionAnswer::TextField"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #12
  %34 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %35 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %36 = bitcast i32* %34 to i8*
  %37 = bitcast i32* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 16, i1 false) #12
  store i8 1, i8* %25, align 8
  br label %38

38:                                               ; preds = %29, %2
  %39 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 48, i1 false) #12
  %41 = load i8, i8* %40, align 8, !range !40
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %45 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %46 = bitcast %"class.SuggestionAnswer::TextField"* %45 to i8*
  %47 = bitcast %"class.SuggestionAnswer::TextField"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #12
  %48 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %49 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %50 = bitcast i32* %48 to i8*
  %51 = bitcast i32* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 16, i1 false) #12
  store i8 1, i8* %39, align 8
  br label %52

52:                                               ; preds = %38, %43
  %53 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 4
  %54 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 1, i32 4
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %53, %class.GURL* dereferenceable(120) %54) #12
  %55 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2
  %56 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 2
  %57 = bitcast %"class.SuggestionAnswer::ImageLine"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #12
  %58 = bitcast %"class.SuggestionAnswer::ImageLine"* %56 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.SuggestionAnswer::ImageLine"* %55 to i64*
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %62 = bitcast %"class.SuggestionAnswer::TextField"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %65 = bitcast %"class.SuggestionAnswer::TextField"** %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %67 = bitcast %"class.SuggestionAnswer::TextField"** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %70 = bitcast %"class.SuggestionAnswer::TextField"** %69 to i64*
  store i64 %68, i64* %70, align 8
  %71 = bitcast %"class.SuggestionAnswer::ImageLine"* %56 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 24, i1 false) #12
  %72 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 1
  %73 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 2, i32 1
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %72, align 8
  %75 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 48, i1 false) #12
  %77 = load i8, i8* %76, align 8, !range !40
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %88, label %79

79:                                               ; preds = %52
  %80 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %81 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %82 = bitcast %"class.SuggestionAnswer::TextField"* %81 to i8*
  %83 = bitcast %"class.SuggestionAnswer::TextField"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 24, i1 false) #12
  %84 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %85 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %86 = bitcast i32* %84 to i8*
  %87 = bitcast i32* %85 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 16, i1 false) #12
  store i8 1, i8* %75, align 8
  br label %88

88:                                               ; preds = %79, %52
  %89 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 0
  %90 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 48, i1 false) #12
  %91 = load i8, i8* %90, align 8, !range !40
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %102, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %95 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %96 = bitcast %"class.SuggestionAnswer::TextField"* %95 to i8*
  %97 = bitcast %"class.SuggestionAnswer::TextField"* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 24, i1 false) #12
  %98 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %99 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %100 = bitcast i32* %98 to i8*
  %101 = bitcast i32* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #12
  store i8 1, i8* %89, align 8
  br label %102

102:                                              ; preds = %88, %93
  %103 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 4
  %104 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 2, i32 4
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %103, %class.GURL* dereferenceable(120) %104) #12
  %105 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 3
  %106 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 3
  %107 = load i32, i32* %106, align 8
  store i32 %107, i32* %105, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(624) %class.SuggestionAnswer* @_ZN16SuggestionAnsweraSERKS_(%class.SuggestionAnswer* returned, %class.SuggestionAnswer* dereferenceable(624)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 0
  %5 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %3, %class.GURL* dereferenceable(120) %4) #12
  %6 = icmp eq %class.SuggestionAnswer* %0, %1
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 0
  %9 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %9, align 8
  %11 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %12 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %11, align 8
  tail call void @_ZNSt3__16vectorIN16SuggestionAnswer9TextFieldENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.39"* %8, %"class.SuggestionAnswer::TextField"* %10, %"class.SuggestionAnswer::TextField"* %12) #12
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 1, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 1
  store i32 %15, i32* %16, align 8
  %17 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 2
  %18 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 1, i32 2
  %19 = tail call dereferenceable(48) %"class.absl::optional.46"* @_ZN4absl8optionalIN16SuggestionAnswer9TextFieldEEaSERKS3_(%"class.absl::optional.46"* %17, %"class.absl::optional.46"* dereferenceable(48) %18) #12
  %20 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 3
  %21 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 1, i32 3
  %22 = tail call dereferenceable(48) %"class.absl::optional.46"* @_ZN4absl8optionalIN16SuggestionAnswer9TextFieldEEaSERKS3_(%"class.absl::optional.46"* %20, %"class.absl::optional.46"* dereferenceable(48) %21) #12
  %23 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 4
  %24 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 1, i32 4
  %25 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %23, %class.GURL* dereferenceable(120) %24) #12
  br i1 %6, label %32, label %26

26:                                               ; preds = %13
  %27 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 0
  %28 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %29 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %28, align 8
  %30 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %31 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %30, align 8
  tail call void @_ZNSt3__16vectorIN16SuggestionAnswer9TextFieldENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.39"* %27, %"class.SuggestionAnswer::TextField"* %29, %"class.SuggestionAnswer::TextField"* %31) #12
  br label %32

32:                                               ; preds = %13, %26
  %33 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 2, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 1
  store i32 %34, i32* %35, align 8
  %36 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 2
  %37 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 2, i32 2
  %38 = tail call dereferenceable(48) %"class.absl::optional.46"* @_ZN4absl8optionalIN16SuggestionAnswer9TextFieldEEaSERKS3_(%"class.absl::optional.46"* %36, %"class.absl::optional.46"* dereferenceable(48) %37) #12
  %39 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 3
  %40 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 2, i32 3
  %41 = tail call dereferenceable(48) %"class.absl::optional.46"* @_ZN4absl8optionalIN16SuggestionAnswer9TextFieldEEaSERKS3_(%"class.absl::optional.46"* %39, %"class.absl::optional.46"* dereferenceable(48) %40) #12
  %42 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 4
  %43 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 2, i32 4
  %44 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %42, %class.GURL* dereferenceable(120) %43) #12
  %45 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 3
  store i32 %46, i32* %47, align 8
  ret %class.SuggestionAnswer* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(624) %class.SuggestionAnswer* @_ZN16SuggestionAnsweraSEOS_(%class.SuggestionAnswer* returned, %class.SuggestionAnswer* dereferenceable(624)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 0
  %5 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %3, %class.GURL* dereferenceable(120) %4) #12
  %6 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1
  %7 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 1
  %8 = tail call dereferenceable(248) %"class.SuggestionAnswer::ImageLine"* @_ZN16SuggestionAnswer9ImageLineaSEOS0_(%"class.SuggestionAnswer::ImageLine"* %6, %"class.SuggestionAnswer::ImageLine"* dereferenceable(248) %7) #12
  %9 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2
  %10 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 2
  %11 = tail call dereferenceable(248) %"class.SuggestionAnswer::ImageLine"* @_ZN16SuggestionAnswer9ImageLineaSEOS0_(%"class.SuggestionAnswer::ImageLine"* %9, %"class.SuggestionAnswer::ImageLine"* dereferenceable(248) %10) #12
  %12 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 3
  store i32 %13, i32* %14, align 8
  ret %class.SuggestionAnswer* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SuggestionAnswerD2Ev(%class.SuggestionAnswer*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2
  tail call void @_ZN16SuggestionAnswer9ImageLineD2Ev(%"class.SuggestionAnswer::ImageLine"* %2) #12
  %3 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1
  tail call void @_ZN16SuggestionAnswer9ImageLineD2Ev(%"class.SuggestionAnswer::ImageLine"* %3) #12
  %4 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16SuggestionAnswer11ParseAnswerERKN4base5ValueERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEPS_(%"class.base::Value"* dereferenceable(32), %"class.std::__1::basic_string"* dereferenceable(24), %class.SuggestionAnswer*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = alloca %"class.base::CheckedContiguousIterator", align 8
  %7 = alloca %"class.base::CheckedContiguousIterator", align 8
  %8 = alloca i32, align 4
  %9 = alloca %class.GURL, align 8
  %10 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #12
  store i32 0, i32* %8, align 4
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %18 = select i1 %14, i16* %16, i16* %17
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %13 to i64
  %22 = select i1 %14, i64 %20, i64 %21
  %23 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPi(i16* %18, i64 %22, i32* nonnull %8) #12
  br i1 %23, label %24, label %121

24:                                               ; preds = %3
  %25 = load i32, i32* %8, align 4
  %26 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %2, i64 0, i32 3
  store i32 %25, i32* %26, align 8
  %27 = call %"class.base::Value"* @_ZNK4base5Value13FindKeyOfTypeENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_4TypeE(%"class.base::Value"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZN12_GLOBAL__N_116kAnswerJsonLinesE, i64 0, i64 0), i64 1, i8 zeroext 7) #12
  %28 = icmp eq %"class.base::Value"* %27, null
  br i1 %28, label %121, label %29

29:                                               ; preds = %24
  %30 = call %"class.std::__1::vector.29"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* nonnull %27) #12
  %31 = icmp eq %"class.std::__1::vector.29"* %30, null
  br i1 %31, label %121, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %30, i64 0, i32 0, i32 1
  %34 = bitcast %"class.base::Value"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.std::__1::vector.29"* %30 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %35, %37
  %39 = icmp eq i64 %38, 64
  br i1 %39, label %40, label %121

40:                                               ; preds = %32
  %41 = call %"class.std::__1::vector.29"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* nonnull %27) #12
  %42 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #12
  %43 = bitcast %"class.base::CheckedContiguousIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #12
  %44 = icmp eq %"class.std::__1::vector.29"* %41, null
  br i1 %44, label %54, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %41, i64 0, i32 0, i32 0
  %47 = load %"class.base::Value"*, %"class.base::Value"** %46, align 8
  %48 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %41, i64 0, i32 0, i32 1
  %49 = bitcast %"class.base::Value"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = ptrtoint %"class.base::Value"* %47 to i64
  %52 = sub i64 %50, %51
  %53 = ashr exact i64 %52, 5
  br label %54

54:                                               ; preds = %40, %45
  %55 = phi %"class.base::Value"* [ %47, %45 ], [ null, %40 ]
  %56 = phi i64 [ %53, %45 ], [ 0, %40 ]
  %57 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %55, i64 %56
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %7, %"class.base::Value"* %55, %"class.base::Value"* %55, %"class.base::Value"* %57) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* nonnull align 8 %43, i64 24, i1 false) #12
  %58 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEpLEl(%"class.base::CheckedContiguousIterator"* nonnull %6, i64 0) #12
  %59 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #12
  %60 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = trunc i64 %61 to i8
  %63 = icmp eq i8 %62, 6
  br i1 %63, label %64, label %121

64:                                               ; preds = %54
  %65 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %2, i64 0, i32 1
  %66 = call zeroext i1 @_ZN16SuggestionAnswer9ImageLine14ParseImageLineERKN4base5ValueEPS0_(%"class.base::Value"* dereferenceable(32) %59, %"class.SuggestionAnswer::ImageLine"* %65)
  br i1 %66, label %67, label %121

67:                                               ; preds = %64
  %68 = call %"class.std::__1::vector.29"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* nonnull %27) #12
  %69 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #12
  %70 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #12
  %71 = icmp eq %"class.std::__1::vector.29"* %68, null
  br i1 %71, label %81, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %68, i64 0, i32 0, i32 0
  %74 = load %"class.base::Value"*, %"class.base::Value"** %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %68, i64 0, i32 0, i32 1
  %76 = bitcast %"class.base::Value"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = ptrtoint %"class.base::Value"* %74 to i64
  %79 = sub i64 %77, %78
  %80 = ashr exact i64 %79, 5
  br label %81

81:                                               ; preds = %67, %72
  %82 = phi %"class.base::Value"* [ %74, %72 ], [ null, %67 ]
  %83 = phi i64 [ %80, %72 ], [ 0, %67 ]
  %84 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %82, i64 %83
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %5, %"class.base::Value"* %82, %"class.base::Value"* %82, %"class.base::Value"* %84) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %69, i8* nonnull align 8 %70, i64 24, i1 false) #12
  %85 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEpLEl(%"class.base::CheckedContiguousIterator"* nonnull %4, i64 1) #12
  %86 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #12
  %87 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = trunc i64 %88 to i8
  %90 = icmp eq i8 %89, 6
  br i1 %90, label %91, label %121

91:                                               ; preds = %81
  %92 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %2, i64 0, i32 2
  %93 = call zeroext i1 @_ZN16SuggestionAnswer9ImageLine14ParseImageLineERKN4base5ValueEPS0_(%"class.base::Value"* dereferenceable(32) %86, %"class.SuggestionAnswer::ImageLine"* %92)
  br i1 %93, label %94, label %121

94:                                               ; preds = %91
  %95 = call %"class.base::Value"* @_ZNK4base5Value13FindKeyOfTypeENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_4TypeE(%"class.base::Value"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1, i8 zeroext 6) #12
  %96 = icmp eq %"class.base::Value"* %95, null
  br i1 %96, label %116, label %97

97:                                               ; preds = %94
  %98 = call %"class.std::__1::basic_string.5"* @_ZNK4base5Value13FindStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull %95, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1) #12
  %99 = icmp eq %"class.std::__1::basic_string.5"* %98, null
  br i1 %99, label %116, label %100

100:                                              ; preds = %97
  %101 = bitcast %class.GURL* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %101) #12
  %102 = bitcast %"class.std::__1::basic_string.5"* %98 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  %106 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  %108 = bitcast %"class.std::__1::basic_string.5"* %98 to i8*
  %109 = select i1 %105, i8* %107, i8* %108
  %110 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %111 = load i64, i64* %110, align 8
  %112 = zext i8 %104 to i64
  %113 = select i1 %105, i64 %111, i64 %112
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %9, i8* %109, i64 %113) #12
  %114 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %2, i64 0, i32 0
  %115 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %114, %class.GURL* nonnull dereferenceable(120) %9) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %101) #12
  br label %120

116:                                              ; preds = %97, %94
  %117 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %2, i64 0, i32 2, i32 4
  %118 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %2, i64 0, i32 0
  %119 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %118, %class.GURL* dereferenceable(120) %117) #12
  br label %120

120:                                              ; preds = %116, %100
  call void @_ZN16SuggestionAnswer18InterpretTextTypesEv(%class.SuggestionAnswer* %2)
  br label %121

121:                                              ; preds = %29, %24, %32, %120, %91, %81, %54, %64, %3
  %122 = phi i1 [ false, %3 ], [ false, %32 ], [ false, %64 ], [ false, %54 ], [ true, %120 ], [ false, %91 ], [ false, %81 ], [ false, %24 ], [ false, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #12
  ret i1 %122
}

declare zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPi(i16*, i64, i32*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN16SuggestionAnswer18InterpretTextTypesEv(%class.SuggestionAnswer* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %184 [
    i32 8, label %4
    i32 2, label %49
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %5, align 8
  %7 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %8 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %7, align 8
  %9 = icmp eq %"class.SuggestionAnswer::TextField"* %6, %8
  br i1 %9, label %10, label %14

10:                                               ; preds = %24, %4
  %11 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 8, !range !40
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %36, label %27

14:                                               ; preds = %4, %24
  %15 = phi %"class.SuggestionAnswer::TextField"* [ %25, %24 ], [ %6, %4 ]
  %16 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %15, i64 0, i32 4
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %24

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %15, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 3
  br i1 %22, label %23, label %24

23:                                               ; preds = %19
  store i32 7, i32* %16, align 4
  br label %24

24:                                               ; preds = %23, %19, %14
  %25 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %15, i64 1
  %26 = icmp eq %"class.SuggestionAnswer::TextField"* %25, %8
  br i1 %26, label %10, label %14

27:                                               ; preds = %10
  %28 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %36

31:                                               ; preds = %27
  %32 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 3
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  store i32 7, i32* %28, align 4
  br label %36

36:                                               ; preds = %35, %31, %27, %10
  %37 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 0
  %38 = load i8, i8* %37, align 8, !range !40
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %182, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %182

44:                                               ; preds = %40
  %45 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 3
  br i1 %47, label %48, label %182

48:                                               ; preds = %44
  store i32 7, i32* %41, align 4
  br label %182

49:                                               ; preds = %1
  %50 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %50, align 8
  %52 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %53 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %52, align 8
  %54 = icmp eq %"class.SuggestionAnswer::TextField"* %51, %53
  br i1 %54, label %55, label %59

55:                                               ; preds = %69, %49
  %56 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0
  %57 = load i8, i8* %56, align 8, !range !40
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %81, label %72

59:                                               ; preds = %49, %69
  %60 = phi %"class.SuggestionAnswer::TextField"* [ %70, %69 ], [ %51, %49 ]
  %61 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %60, i64 0, i32 4
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %69

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %60, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %66, 19
  br i1 %67, label %68, label %69

68:                                               ; preds = %64
  store i32 3, i32* %61, align 4
  br label %69

69:                                               ; preds = %68, %64, %59
  %70 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %60, i64 1
  %71 = icmp eq %"class.SuggestionAnswer::TextField"* %70, %53
  br i1 %71, label %55, label %59

72:                                               ; preds = %55
  %73 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %81

76:                                               ; preds = %72
  %77 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 19
  br i1 %79, label %80, label %81

80:                                               ; preds = %76
  store i32 3, i32* %73, align 4
  br label %81

81:                                               ; preds = %80, %76, %72, %55
  %82 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 0
  %83 = load i8, i8* %82, align 8, !range !40
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %94, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %94

89:                                               ; preds = %85
  %90 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = icmp eq i32 %91, 19
  br i1 %92, label %93, label %94

93:                                               ; preds = %89
  store i32 3, i32* %86, align 4
  br label %94

94:                                               ; preds = %81, %85, %89, %93
  %95 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %96 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %95, align 8
  %97 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %98 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %97, align 8
  %99 = icmp eq %"class.SuggestionAnswer::TextField"* %96, %98
  br i1 %99, label %100, label %104

100:                                              ; preds = %114, %94
  %101 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 0
  %102 = load i8, i8* %101, align 8, !range !40
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %126, label %117

104:                                              ; preds = %94, %114
  %105 = phi %"class.SuggestionAnswer::TextField"* [ %115, %114 ], [ %96, %94 ]
  %106 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %105, i64 0, i32 4
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %114

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %105, i64 0, i32 1
  %111 = load i32, i32* %110, align 8
  %112 = icmp eq i32 %111, 6
  br i1 %112, label %113, label %114

113:                                              ; preds = %109
  store i32 5, i32* %106, align 4
  br label %114

114:                                              ; preds = %113, %109, %104
  %115 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %105, i64 1
  %116 = icmp eq %"class.SuggestionAnswer::TextField"* %115, %98
  br i1 %116, label %100, label %104

117:                                              ; preds = %100
  %118 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %126

121:                                              ; preds = %117
  %122 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %123 = load i32, i32* %122, align 8
  %124 = icmp eq i32 %123, 6
  br i1 %124, label %125, label %126

125:                                              ; preds = %121
  store i32 5, i32* %118, align 4
  br label %126

126:                                              ; preds = %125, %121, %117, %100
  %127 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 0
  %128 = load i8, i8* %127, align 8, !range !40
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %139, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %139

134:                                              ; preds = %130
  %135 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %136 = load i32, i32* %135, align 8
  %137 = icmp eq i32 %136, 6
  br i1 %137, label %138, label %139

138:                                              ; preds = %134
  store i32 5, i32* %131, align 4
  br label %139

139:                                              ; preds = %126, %130, %134, %138
  %140 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %95, align 8
  %141 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %97, align 8
  %142 = icmp eq %"class.SuggestionAnswer::TextField"* %140, %141
  br i1 %142, label %145, label %148

143:                                              ; preds = %158
  %144 = load i8, i8* %101, align 8, !range !40
  br label %145

145:                                              ; preds = %143, %139
  %146 = phi i8 [ %144, %143 ], [ %102, %139 ]
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %170, label %161

148:                                              ; preds = %139, %158
  %149 = phi %"class.SuggestionAnswer::TextField"* [ %159, %158 ], [ %140, %139 ]
  %150 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %149, i64 0, i32 4
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %158

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %149, i64 0, i32 1
  %155 = load i32, i32* %154, align 8
  %156 = icmp eq i32 %155, 5
  br i1 %156, label %157, label %158

157:                                              ; preds = %153
  store i32 6, i32* %150, align 4
  br label %158

158:                                              ; preds = %157, %153, %148
  %159 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %149, i64 1
  %160 = icmp eq %"class.SuggestionAnswer::TextField"* %159, %141
  br i1 %160, label %143, label %148

161:                                              ; preds = %145
  %162 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %163 = load i32, i32* %162, align 4
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %170

165:                                              ; preds = %161
  %166 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %167 = load i32, i32* %166, align 8
  %168 = icmp eq i32 %167, 5
  br i1 %168, label %169, label %170

169:                                              ; preds = %165
  store i32 6, i32* %162, align 4
  br label %170

170:                                              ; preds = %169, %165, %161, %145
  %171 = load i8, i8* %127, align 8, !range !40
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %182, label %173

173:                                              ; preds = %170
  %174 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %175 = load i32, i32* %174, align 4
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %182

177:                                              ; preds = %173
  %178 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %179 = load i32, i32* %178, align 8
  %180 = icmp eq i32 %179, 5
  br i1 %180, label %181, label %182

181:                                              ; preds = %177
  store i32 6, i32* %174, align 4
  br label %182

182:                                              ; preds = %36, %40, %44, %48, %170, %173, %177, %181
  %183 = load i32, i32* %2, align 8
  br label %184

184:                                              ; preds = %182, %1
  %185 = phi i32 [ %183, %182 ], [ %3, %1 ]
  %186 = icmp eq i32 %185, 1
  %187 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %188 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %187, align 8
  %189 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %190 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %189, align 8
  %191 = icmp eq %"class.SuggestionAnswer::TextField"* %188, %190
  br i1 %186, label %192, label %253

192:                                              ; preds = %184
  br i1 %191, label %193, label %197

193:                                              ; preds = %203, %192
  %194 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0
  %195 = load i8, i8* %194, align 8, !range !40
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %211, label %206

197:                                              ; preds = %192, %203
  %198 = phi %"class.SuggestionAnswer::TextField"* [ %204, %203 ], [ %188, %192 ]
  %199 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %198, i64 0, i32 4
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %197
  store i32 1, i32* %199, align 4
  br label %203

203:                                              ; preds = %202, %197
  %204 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %198, i64 1
  %205 = icmp eq %"class.SuggestionAnswer::TextField"* %204, %190
  br i1 %205, label %193, label %197

206:                                              ; preds = %193
  %207 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %208 = load i32, i32* %207, align 4
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %206
  store i32 1, i32* %207, align 4
  br label %211

211:                                              ; preds = %210, %206, %193
  %212 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 0
  %213 = load i8, i8* %212, align 8, !range !40
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %220, label %215

215:                                              ; preds = %211
  %216 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %217 = load i32, i32* %216, align 4
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %215
  store i32 1, i32* %216, align 4
  br label %220

220:                                              ; preds = %211, %215, %219
  %221 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %222 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %221, align 8
  %223 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %224 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %223, align 8
  %225 = icmp eq %"class.SuggestionAnswer::TextField"* %222, %224
  br i1 %225, label %226, label %230

226:                                              ; preds = %236, %220
  %227 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 0
  %228 = load i8, i8* %227, align 8, !range !40
  %229 = icmp eq i8 %228, 0
  br i1 %229, label %244, label %239

230:                                              ; preds = %220, %236
  %231 = phi %"class.SuggestionAnswer::TextField"* [ %237, %236 ], [ %222, %220 ]
  %232 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %231, i64 0, i32 4
  %233 = load i32, i32* %232, align 4
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %230
  store i32 2, i32* %232, align 4
  br label %236

236:                                              ; preds = %235, %230
  %237 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %231, i64 1
  %238 = icmp eq %"class.SuggestionAnswer::TextField"* %237, %224
  br i1 %238, label %226, label %230

239:                                              ; preds = %226
  %240 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %241 = load i32, i32* %240, align 4
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %244

243:                                              ; preds = %239
  store i32 2, i32* %240, align 4
  br label %244

244:                                              ; preds = %243, %239, %226
  %245 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 0
  %246 = load i8, i8* %245, align 8, !range !40
  %247 = icmp eq i8 %246, 0
  br i1 %247, label %314, label %248

248:                                              ; preds = %244
  %249 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %250 = load i32, i32* %249, align 4
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %314

252:                                              ; preds = %248
  store i32 2, i32* %249, align 4
  br label %314

253:                                              ; preds = %184
  br i1 %191, label %254, label %258

254:                                              ; preds = %264, %253
  %255 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0
  %256 = load i8, i8* %255, align 8, !range !40
  %257 = icmp eq i8 %256, 0
  br i1 %257, label %272, label %267

258:                                              ; preds = %253, %264
  %259 = phi %"class.SuggestionAnswer::TextField"* [ %265, %264 ], [ %188, %253 ]
  %260 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %259, i64 0, i32 4
  %261 = load i32, i32* %260, align 4
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %258
  store i32 2, i32* %260, align 4
  br label %264

264:                                              ; preds = %263, %258
  %265 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %259, i64 1
  %266 = icmp eq %"class.SuggestionAnswer::TextField"* %265, %190
  br i1 %266, label %254, label %258

267:                                              ; preds = %254
  %268 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %269 = load i32, i32* %268, align 4
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %272

271:                                              ; preds = %267
  store i32 2, i32* %268, align 4
  br label %272

272:                                              ; preds = %271, %267, %254
  %273 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 0
  %274 = load i8, i8* %273, align 8, !range !40
  %275 = icmp eq i8 %274, 0
  br i1 %275, label %281, label %276

276:                                              ; preds = %272
  %277 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %278 = load i32, i32* %277, align 4
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %281

280:                                              ; preds = %276
  store i32 2, i32* %277, align 4
  br label %281

281:                                              ; preds = %272, %276, %280
  %282 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %283 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %282, align 8
  %284 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %285 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %284, align 8
  %286 = icmp eq %"class.SuggestionAnswer::TextField"* %283, %285
  br i1 %286, label %287, label %291

287:                                              ; preds = %297, %281
  %288 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 0
  %289 = load i8, i8* %288, align 8, !range !40
  %290 = icmp eq i8 %289, 0
  br i1 %290, label %305, label %300

291:                                              ; preds = %281, %297
  %292 = phi %"class.SuggestionAnswer::TextField"* [ %298, %297 ], [ %283, %281 ]
  %293 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %292, i64 0, i32 4
  %294 = load i32, i32* %293, align 4
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %296, label %297

296:                                              ; preds = %291
  store i32 1, i32* %293, align 4
  br label %297

297:                                              ; preds = %296, %291
  %298 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %292, i64 1
  %299 = icmp eq %"class.SuggestionAnswer::TextField"* %298, %285
  br i1 %299, label %287, label %291

300:                                              ; preds = %287
  %301 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %302 = load i32, i32* %301, align 4
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %304, label %305

304:                                              ; preds = %300
  store i32 1, i32* %301, align 4
  br label %305

305:                                              ; preds = %304, %300, %287
  %306 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 0
  %307 = load i8, i8* %306, align 8, !range !40
  %308 = icmp eq i8 %307, 0
  br i1 %308, label %314, label %309

309:                                              ; preds = %305
  %310 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %311 = load i32, i32* %310, align 4
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %314

313:                                              ; preds = %309
  store i32 1, i32* %310, align 4
  br label %314

314:                                              ; preds = %313, %309, %305, %252, %248, %244
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK16SuggestionAnswer6EqualsERKS_(%class.SuggestionAnswer*, %class.SuggestionAnswer* dereferenceable(624)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 0
  %10 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 0
  %11 = tail call zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* dereferenceable(120) %9, %class.GURL* dereferenceable(120) %10) #12
  br i1 %11, label %12, label %20

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1
  %14 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 1
  %15 = tail call zeroext i1 @_ZNK16SuggestionAnswer9ImageLine6EqualsERKS0_(%"class.SuggestionAnswer::ImageLine"* %13, %"class.SuggestionAnswer::ImageLine"* dereferenceable(248) %14)
  br i1 %15, label %16, label %20

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2
  %18 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %1, i64 0, i32 2
  %19 = tail call zeroext i1 @_ZNK16SuggestionAnswer9ImageLine6EqualsERKS0_(%"class.SuggestionAnswer::ImageLine"* %17, %"class.SuggestionAnswer::ImageLine"* dereferenceable(248) %18)
  br label %20

20:                                               ; preds = %16, %12, %8, %2
  %21 = phi i1 [ false, %12 ], [ false, %8 ], [ false, %2 ], [ %19, %16 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK16SuggestionAnswer14AddImageURLsToEPNSt3__16vectorI4GURLNS0_9allocatorIS2_EEEE(%class.SuggestionAnswer*, %"class.std::__1::vector.55"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !40
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %18, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %1, i64 0, i32 0, i32 1
  %9 = load %class.GURL*, %class.GURL** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %class.GURL*, %class.GURL** %10, align 8
  %12 = icmp eq %class.GURL* %9, %11
  br i1 %12, label %17, label %13

13:                                               ; preds = %7
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %9, %class.GURL* dereferenceable(120) %3) #12
  %14 = getelementptr inbounds %class.GURL, %class.GURL* %9, i64 1
  %15 = ptrtoint %class.GURL* %14 to i64
  %16 = bitcast %class.GURL** %8 to i64*
  store i64 %15, i64* %16, align 8
  br label %34

17:                                               ; preds = %7
  tail call void @_ZNSt3__16vectorI4GURLNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(%"class.std::__1::vector.55"* %1, %class.GURL* dereferenceable(120) %3) #12
  br label %34

18:                                               ; preds = %2
  %19 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 4
  %20 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 4, i32 1
  %21 = load i8, i8* %20, align 8, !range !40
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %34, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %1, i64 0, i32 0, i32 1
  %25 = load %class.GURL*, %class.GURL** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %27 = load %class.GURL*, %class.GURL** %26, align 8
  %28 = icmp eq %class.GURL* %25, %27
  br i1 %28, label %33, label %29

29:                                               ; preds = %23
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %25, %class.GURL* dereferenceable(120) %19) #12
  %30 = getelementptr inbounds %class.GURL, %class.GURL* %25, i64 1
  %31 = ptrtoint %class.GURL* %30 to i64
  %32 = bitcast %class.GURL** %24 to i64*
  store i64 %31, i64* %32, align 8
  br label %34

33:                                               ; preds = %23
  tail call void @_ZNSt3__16vectorI4GURLNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(%"class.std::__1::vector.55"* %1, %class.GURL* dereferenceable(120) %19) #12
  br label %34

34:                                               ; preds = %18, %33, %29, %17, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK16SuggestionAnswer19EstimateMemoryUsageEv(%class.SuggestionAnswer*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 0
  %3 = tail call i64 @_ZNK4GURL19EstimateMemoryUsageEv(%class.GURL* %2) #12
  %4 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.SuggestionAnswer::TextField"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.SuggestionAnswer::ImageLine"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = inttoptr i64 %9 to %"class.SuggestionAnswer::TextField"*
  %12 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %13 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %12, align 8
  %14 = icmp eq %"class.SuggestionAnswer::TextField"* %13, %11
  br i1 %14, label %23, label %15

15:                                               ; preds = %1, %15
  %16 = phi i64 [ %20, %15 ], [ 0, %1 ]
  %17 = phi %"class.SuggestionAnswer::TextField"* [ %21, %15 ], [ %11, %1 ]
  %18 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %17, i64 0, i32 0
  %19 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIDsNSt3__111char_traitsIDsEENS2_9allocatorIDsEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %18) #12
  %20 = add i64 %19, %16
  %21 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %17, i64 1
  %22 = icmp eq %"class.SuggestionAnswer::TextField"* %21, %13
  br i1 %22, label %23, label %15

23:                                               ; preds = %15, %1
  %24 = phi i64 [ 0, %1 ], [ %20, %15 ]
  %25 = add i64 %24, %10
  %26 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0
  %27 = load i8, i8* %26, align 8, !range !40
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %23
  %30 = add i64 %25, 4
  %31 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %32 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIDsNSt3__111char_traitsIDsEENS2_9allocatorIDsEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %31) #12
  %33 = add i64 %30, %32
  br label %36

34:                                               ; preds = %23
  %35 = add i64 %25, 44
  br label %36

36:                                               ; preds = %34, %29
  %37 = phi i64 [ %33, %29 ], [ %35, %34 ]
  %38 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 0
  %39 = load i8, i8* %38, align 8, !range !40
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %36
  %42 = add i64 %37, 4
  %43 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %44 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIDsNSt3__111char_traitsIDsEENS2_9allocatorIDsEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %43) #12
  %45 = add i64 %42, %44
  br label %48

46:                                               ; preds = %36
  %47 = add i64 %37, 44
  br label %48

48:                                               ; preds = %41, %46
  %49 = phi i64 [ %45, %41 ], [ %47, %46 ]
  %50 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 1, i32 4
  %51 = tail call i64 @_ZNK4GURL19EstimateMemoryUsageEv(%class.GURL* %50) #12
  %52 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2
  %53 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %54 = bitcast %"class.SuggestionAnswer::TextField"** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.SuggestionAnswer::ImageLine"* %52 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = sub i64 %55, %57
  %59 = inttoptr i64 %57 to %"class.SuggestionAnswer::TextField"*
  %60 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %61 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %60, align 8
  %62 = icmp eq %"class.SuggestionAnswer::TextField"* %61, %59
  br i1 %62, label %71, label %63

63:                                               ; preds = %48, %63
  %64 = phi i64 [ %68, %63 ], [ 0, %48 ]
  %65 = phi %"class.SuggestionAnswer::TextField"* [ %69, %63 ], [ %59, %48 ]
  %66 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %65, i64 0, i32 0
  %67 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIDsNSt3__111char_traitsIDsEENS2_9allocatorIDsEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %66) #12
  %68 = add i64 %67, %64
  %69 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %65, i64 1
  %70 = icmp eq %"class.SuggestionAnswer::TextField"* %69, %61
  br i1 %70, label %71, label %63

71:                                               ; preds = %63, %48
  %72 = phi i64 [ 0, %48 ], [ %68, %63 ]
  %73 = add i64 %72, %58
  %74 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 0
  %75 = load i8, i8* %74, align 8, !range !40
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %82, label %77

77:                                               ; preds = %71
  %78 = add i64 %73, 4
  %79 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %80 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIDsNSt3__111char_traitsIDsEENS2_9allocatorIDsEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %79) #12
  %81 = add i64 %78, %80
  br label %84

82:                                               ; preds = %71
  %83 = add i64 %73, 44
  br label %84

84:                                               ; preds = %82, %77
  %85 = phi i64 [ %81, %77 ], [ %83, %82 ]
  %86 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 0
  %87 = load i8, i8* %86, align 8, !range !40
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %94, label %89

89:                                               ; preds = %84
  %90 = add i64 %85, 4
  %91 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %92 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIDsNSt3__111char_traitsIDsEENS2_9allocatorIDsEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %91) #12
  %93 = add i64 %90, %92
  br label %96

94:                                               ; preds = %84
  %95 = add i64 %85, 44
  br label %96

96:                                               ; preds = %89, %94
  %97 = phi i64 [ %93, %89 ], [ %95, %94 ]
  %98 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 2, i32 4
  %99 = tail call i64 @_ZNK4GURL19EstimateMemoryUsageEv(%class.GURL* %98) #12
  %100 = add i64 %49, %3
  %101 = add i64 %100, %51
  %102 = add i64 %101, %97
  %103 = add i64 %102, %99
  ret i64 %103
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK16SuggestionAnswer26IsExceptedFromLineReversalEv(%class.SuggestionAnswer* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.SuggestionAnswer, %class.SuggestionAnswer* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SuggestionAnswer13LogAnswerUsedERKN4absl8optionalIS_EE(%"class.absl::optional.61"* nocapture readonly dereferenceable(632)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.absl::optional.61", %"class.absl::optional.61"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !40
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.absl::optional.61", %"class.absl::optional.61"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3
  %7 = load i32, i32* %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ]
  %10 = load atomic i64, i64* @_ZZN16SuggestionAnswer13LogAnswerUsedERKN4absl8optionalIS_EEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %11 = inttoptr i64 %10 to %"class.base::HistogramBase"*
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @_ZN16SuggestionAnswer27kAnswerUsedUmaHistogramNameE, i64 0, i64 0), i32 1, i32 13, i32 14, i32 1) #12
  %15 = ptrtoint %"class.base::HistogramBase"* %14 to i64
  store atomic i64 %15, i64* @_ZZN16SuggestionAnswer13LogAnswerUsedERKN4absl8optionalIS_EEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %16

16:                                               ; preds = %8, %13
  %17 = phi %"class.base::HistogramBase"* [ %11, %8 ], [ %14, %13 ]
  %18 = bitcast %"class.base::HistogramBase"* %17 to void (%"class.base::HistogramBase"*, i32)***
  %19 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %19, i64 6
  %21 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %20, align 8
  tail call void %21(%"class.base::HistogramBase"* %17, i32 %9) #12
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"*, %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.base::Value"*, align 8
  %8 = alloca %"class.base::Value"*, align 8
  %9 = alloca %"class.base::Value"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"class.base::Value"* %1, %"class.base::Value"** %7, align 8
  store %"class.base::Value"* %2, %"class.base::Value"** %8, align 8
  store %"class.base::Value"* %3, %"class.base::Value"** %9, align 8
  %14 = ptrtoint %"class.base::Value"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint %"class.base::Value"* %2 to i64
  %18 = bitcast %"class.base::Value"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint %"class.base::Value"* %3 to i64
  %21 = bitcast %"class.base::Value"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"class.base::Value"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"class.base::Value"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  %30 = bitcast %"class.base::Value"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* %29, i8* %31) #12
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %43 = load %"class.base::Value"*, %"class.base::Value"** %9, align 8
  %44 = icmp ugt %"class.base::Value"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"class.base::Value"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  %49 = bitcast %"class.base::Value"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i8* %48, i8* %50) #12
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #12
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #12
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #7 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #12
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load %"class.base::Value"*, %"class.base::Value"** %11, align 8
  %15 = load %"class.base::Value"*, %"class.base::Value"** %12, align 8
  %16 = icmp eq %"class.base::Value"* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %20, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #12
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load %"class.base::Value"*, %"class.base::Value"** %32, align 8
  %36 = load %"class.base::Value"*, %"class.base::Value"** %33, align 8
  %37 = icmp eq %"class.base::Value"* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast %"class.base::Value"** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  %42 = bitcast %"class.base::Value"** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0), i8* %41, i8* %43) #12
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #12
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #12
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %8 = sub i64 9223372036854775791, %1
  %9 = icmp ult i64 %8, %2
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #14
  unreachable

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  br label %22

20:                                               ; preds = %12
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i16* [ %19, %17 ], [ %21, %20 ]
  %24 = bitcast i16* %23 to i8*
  %25 = icmp ult i64 %1, 4611686018427387879
  br i1 %25, label %26, label %37

26:                                               ; preds = %22
  %27 = add i64 %2, %1
  %28 = shl i64 %1, 1
  %29 = icmp ult i64 %27, %28
  %30 = select i1 %29, i64 %28, i64 %27
  %31 = icmp ult i64 %30, 11
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = add i64 %30, 8
  %34 = and i64 %33, -8
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @abort() #14
  unreachable

37:                                               ; preds = %22, %26, %32
  %38 = phi i64 [ %34, %32 ], [ 9223372036854775791, %22 ], [ 11, %26 ]
  %39 = shl i64 %38, 1
  %40 = tail call i8* @_Znwm(i64 %39) #13
  %41 = bitcast i8* %40 to i16*
  %42 = icmp eq i64 %4, 0
  br i1 %42, label %188, label %43

43:                                               ; preds = %37
  %44 = icmp ult i64 %4, 16
  br i1 %44, label %135, label %45

45:                                               ; preds = %43
  %46 = shl i64 %4, 1
  %47 = getelementptr i8, i8* %40, i64 %46
  %48 = getelementptr i16, i16* %23, i64 %4
  %49 = bitcast i16* %48 to i8*
  %50 = icmp ult i8* %40, %49
  %51 = icmp ugt i8* %47, %24
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %45
  %54 = and i64 %4, -16
  %55 = sub i64 %4, %54
  %56 = getelementptr i16, i16* %23, i64 %54
  %57 = getelementptr i16, i16* %41, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %23, i64 %66
  %69 = getelementptr i16, i16* %41, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !119
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !119
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !122, !noalias !119
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !122, !noalias !119
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %23, i64 %78
  %80 = getelementptr i16, i16* %41, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !119
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !119
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !122, !noalias !119
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !122, !noalias !119
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %23, i64 %89
  %91 = getelementptr i16, i16* %41, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !119
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !119
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !122, !noalias !119
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !122, !noalias !119
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %23, i64 %100
  %102 = getelementptr i16, i16* %41, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !119
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !119
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !122, !noalias !119
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !122, !noalias !119
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !124

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %23, i64 %118
  %121 = getelementptr i16, i16* %41, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !119
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !119
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !122, !noalias !119
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !122, !noalias !119
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !125

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %54, %4
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %45, %43
  %136 = phi i64 [ %4, %45 ], [ %4, %43 ], [ %55, %133 ]
  %137 = phi i16* [ %23, %45 ], [ %23, %43 ], [ %56, %133 ]
  %138 = phi i16* [ %41, %45 ], [ %41, %43 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !126

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !127

188:                                              ; preds = %153, %158, %133, %37
  %189 = sub i64 %3, %5
  %190 = sub i64 %189, %4
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %347, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds i16, i16* %41, i64 %4
  %194 = getelementptr inbounds i16, i16* %193, i64 %6
  %195 = getelementptr inbounds i16, i16* %23, i64 %4
  %196 = getelementptr inbounds i16, i16* %195, i64 %5
  %197 = icmp ult i64 %190, 16
  br i1 %197, label %294, label %198

198:                                              ; preds = %192
  %199 = bitcast i16* %196 to i8*
  %200 = add i64 %6, %4
  %201 = shl i64 %200, 1
  %202 = getelementptr i8, i8* %40, i64 %201
  %203 = add i64 %6, %3
  %204 = sub i64 %203, %5
  %205 = shl i64 %204, 1
  %206 = getelementptr i8, i8* %40, i64 %205
  %207 = getelementptr i16, i16* %23, i64 %3
  %208 = bitcast i16* %207 to i8*
  %209 = icmp ult i8* %202, %208
  %210 = icmp ugt i8* %206, %199
  %211 = and i1 %209, %210
  br i1 %211, label %294, label %212

212:                                              ; preds = %198
  %213 = and i64 %190, -16
  %214 = sub i64 %190, %213
  %215 = getelementptr i16, i16* %196, i64 %213
  %216 = getelementptr i16, i16* %194, i64 %213
  %217 = add i64 %213, -16
  %218 = lshr exact i64 %217, 4
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 3
  %221 = icmp ult i64 %217, 48
  br i1 %221, label %273, label %222

222:                                              ; preds = %212
  %223 = sub nsw i64 %219, %220
  br label %224

224:                                              ; preds = %224, %222
  %225 = phi i64 [ 0, %222 ], [ %270, %224 ]
  %226 = phi i64 [ %223, %222 ], [ %271, %224 ]
  %227 = getelementptr i16, i16* %196, i64 %225
  %228 = getelementptr i16, i16* %194, i64 %225
  %229 = bitcast i16* %227 to <8 x i16>*
  %230 = load <8 x i16>, <8 x i16>* %229, align 2, !alias.scope !128
  %231 = getelementptr i16, i16* %227, i64 8
  %232 = bitcast i16* %231 to <8 x i16>*
  %233 = load <8 x i16>, <8 x i16>* %232, align 2, !alias.scope !128
  %234 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %230, <8 x i16>* %234, align 2, !alias.scope !131, !noalias !128
  %235 = getelementptr i16, i16* %228, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %236, align 2, !alias.scope !131, !noalias !128
  %237 = or i64 %225, 16
  %238 = getelementptr i16, i16* %196, i64 %237
  %239 = getelementptr i16, i16* %194, i64 %237
  %240 = bitcast i16* %238 to <8 x i16>*
  %241 = load <8 x i16>, <8 x i16>* %240, align 2, !alias.scope !128
  %242 = getelementptr i16, i16* %238, i64 8
  %243 = bitcast i16* %242 to <8 x i16>*
  %244 = load <8 x i16>, <8 x i16>* %243, align 2, !alias.scope !128
  %245 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %241, <8 x i16>* %245, align 2, !alias.scope !131, !noalias !128
  %246 = getelementptr i16, i16* %239, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %244, <8 x i16>* %247, align 2, !alias.scope !131, !noalias !128
  %248 = or i64 %225, 32
  %249 = getelementptr i16, i16* %196, i64 %248
  %250 = getelementptr i16, i16* %194, i64 %248
  %251 = bitcast i16* %249 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !128
  %253 = getelementptr i16, i16* %249, i64 8
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !128
  %256 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %252, <8 x i16>* %256, align 2, !alias.scope !131, !noalias !128
  %257 = getelementptr i16, i16* %250, i64 8
  %258 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %258, align 2, !alias.scope !131, !noalias !128
  %259 = or i64 %225, 48
  %260 = getelementptr i16, i16* %196, i64 %259
  %261 = getelementptr i16, i16* %194, i64 %259
  %262 = bitcast i16* %260 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !128
  %264 = getelementptr i16, i16* %260, i64 8
  %265 = bitcast i16* %264 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !128
  %267 = bitcast i16* %261 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %267, align 2, !alias.scope !131, !noalias !128
  %268 = getelementptr i16, i16* %261, i64 8
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %269, align 2, !alias.scope !131, !noalias !128
  %270 = add i64 %225, 64
  %271 = add i64 %226, -4
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %224, !llvm.loop !133

273:                                              ; preds = %224, %212
  %274 = phi i64 [ 0, %212 ], [ %270, %224 ]
  %275 = icmp eq i64 %220, 0
  br i1 %275, label %292, label %276

276:                                              ; preds = %273, %276
  %277 = phi i64 [ %289, %276 ], [ %274, %273 ]
  %278 = phi i64 [ %290, %276 ], [ %220, %273 ]
  %279 = getelementptr i16, i16* %196, i64 %277
  %280 = getelementptr i16, i16* %194, i64 %277
  %281 = bitcast i16* %279 to <8 x i16>*
  %282 = load <8 x i16>, <8 x i16>* %281, align 2, !alias.scope !128
  %283 = getelementptr i16, i16* %279, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !128
  %286 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %282, <8 x i16>* %286, align 2, !alias.scope !131, !noalias !128
  %287 = getelementptr i16, i16* %280, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %288, align 2, !alias.scope !131, !noalias !128
  %289 = add i64 %277, 16
  %290 = add i64 %278, -1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %276, !llvm.loop !134

292:                                              ; preds = %276, %273
  %293 = icmp eq i64 %190, %213
  br i1 %293, label %347, label %294

294:                                              ; preds = %292, %198, %192
  %295 = phi i64 [ %190, %198 ], [ %190, %192 ], [ %214, %292 ]
  %296 = phi i16* [ %196, %198 ], [ %196, %192 ], [ %215, %292 ]
  %297 = phi i16* [ %194, %198 ], [ %194, %192 ], [ %216, %292 ]
  %298 = add i64 %295, -1
  %299 = and i64 %295, 7
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %312, label %301

301:                                              ; preds = %294, %301
  %302 = phi i64 [ %307, %301 ], [ %295, %294 ]
  %303 = phi i16* [ %309, %301 ], [ %296, %294 ]
  %304 = phi i16* [ %308, %301 ], [ %297, %294 ]
  %305 = phi i64 [ %310, %301 ], [ %299, %294 ]
  %306 = load i16, i16* %303, align 2
  store i16 %306, i16* %304, align 2
  %307 = add i64 %302, -1
  %308 = getelementptr inbounds i16, i16* %304, i64 1
  %309 = getelementptr inbounds i16, i16* %303, i64 1
  %310 = add i64 %305, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %301, !llvm.loop !135

312:                                              ; preds = %301, %294
  %313 = phi i64 [ %295, %294 ], [ %307, %301 ]
  %314 = phi i16* [ %296, %294 ], [ %309, %301 ]
  %315 = phi i16* [ %297, %294 ], [ %308, %301 ]
  %316 = icmp ult i64 %298, 7
  br i1 %316, label %347, label %317

317:                                              ; preds = %312, %317
  %318 = phi i64 [ %343, %317 ], [ %313, %312 ]
  %319 = phi i16* [ %345, %317 ], [ %314, %312 ]
  %320 = phi i16* [ %344, %317 ], [ %315, %312 ]
  %321 = load i16, i16* %319, align 2
  store i16 %321, i16* %320, align 2
  %322 = getelementptr inbounds i16, i16* %320, i64 1
  %323 = getelementptr inbounds i16, i16* %319, i64 1
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %320, i64 2
  %326 = getelementptr inbounds i16, i16* %319, i64 2
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %320, i64 3
  %329 = getelementptr inbounds i16, i16* %319, i64 3
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = getelementptr inbounds i16, i16* %320, i64 4
  %332 = getelementptr inbounds i16, i16* %319, i64 4
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %320, i64 5
  %335 = getelementptr inbounds i16, i16* %319, i64 5
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %320, i64 6
  %338 = getelementptr inbounds i16, i16* %319, i64 6
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %320, i64 7
  %341 = getelementptr inbounds i16, i16* %319, i64 7
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = add i64 %318, -8
  %344 = getelementptr inbounds i16, i16* %320, i64 8
  %345 = getelementptr inbounds i16, i16* %319, i64 8
  %346 = icmp eq i64 %343, 0
  br i1 %346, label %347, label %317, !llvm.loop !136

347:                                              ; preds = %312, %317, %292, %188
  %348 = icmp eq i64 %1, 10
  br i1 %348, label %350, label %349

349:                                              ; preds = %347
  tail call void @_ZdlPv(i8* %24) #13
  br label %350

350:                                              ; preds = %347, %349
  %351 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %40, i8** %351, align 8
  %352 = or i64 %38, -9223372036854775808
  %353 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %352, i64* %353, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #14
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #14
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #13
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !137
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !137
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !140, !noalias !137
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !140, !noalias !137
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !137
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !137
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !140, !noalias !137
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !140, !noalias !137
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !137
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !137
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !140, !noalias !137
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !140, !noalias !137
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !137
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !137
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !140, !noalias !137
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !140, !noalias !137
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !142

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !137
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !137
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !140, !noalias !137
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !140, !noalias !137
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !143

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !144

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !145

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !146

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !147

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !148

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !150
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !150
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !153, !noalias !150
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !153, !noalias !150
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !150
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !150
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !153, !noalias !150
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !153, !noalias !150
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !150
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !150
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !153, !noalias !150
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !153, !noalias !150
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !150
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !150
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !153, !noalias !150
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !153, !noalias !150
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !155

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !150
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !150
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !153, !noalias !150
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !153, !noalias !150
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !156

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !157

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !158

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #13
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEpLEl(%"class.base::CheckedContiguousIterator"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = icmp sgt i64 %1, 0
  br i1 %9, label %10, label %33

10:                                               ; preds = %2
  %11 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %13 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %14 = bitcast %"class.base::Value"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = bitcast %"class.base::Value"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 5
  %21 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp slt i64 %20, %1
  br i1 %22, label %24, label %23

23:                                               ; preds = %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %12, align 8
  br label %56

24:                                               ; preds = %10
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #12
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %20) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* %25, i8* %26) #12
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %12, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %56, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 135, %"class.logging::CheckOpResult"* nonnull %5) #12
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br label %56

33:                                               ; preds = %2
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = sub nsw i64 0, %1
  %37 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %38 = bitcast %"class.base::Value"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = ashr exact i64 %42, 5
  %44 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  %45 = icmp slt i64 %43, %36
  br i1 %45, label %47, label %46

46:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  store i8* null, i8** %35, align 8
  br label %56

47:                                               ; preds = %33
  %48 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %36) #12
  %49 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %43) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.15, i64 0, i64 0), i8* %48, i8* %49) #12
  %50 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  store i8* %51, i8** %35, align 8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %47
  %54 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 137, %"class.logging::CheckOpResult"* nonnull %7) #12
  %55 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #12
  br label %56

56:                                               ; preds = %53, %47, %46, %30, %24, %23
  %57 = phi i8* [ %11, %23 ], [ %11, %24 ], [ %11, %30 ], [ %34, %46 ], [ %34, %47 ], [ %34, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #12
  %58 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %59 = load %"class.base::Value"*, %"class.base::Value"** %58, align 8
  %60 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %59, i64 %1
  store %"class.base::Value"* %60, %"class.base::Value"** %58, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN16SuggestionAnswer9TextFieldENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.39"*, %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.SuggestionAnswer::TextField"* %2 to i64
  %5 = ptrtoint %"class.SuggestionAnswer::TextField"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 40
  %8 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.SuggestionAnswer::TextField"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.39"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 40
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.SuggestionAnswer::TextField"*
  br i1 %15, label %261, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.SuggestionAnswer::TextField"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 40
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %1, i64 %22
  %25 = select i1 %23, %"class.SuggestionAnswer::TextField"* %24, %"class.SuggestionAnswer::TextField"* %2
  %26 = icmp eq %"class.SuggestionAnswer::TextField"* %25, %1
  br i1 %26, label %40, label %27

27:                                               ; preds = %17, %27
  %28 = phi %"class.SuggestionAnswer::TextField"* [ %38, %27 ], [ %16, %17 ]
  %29 = phi %"class.SuggestionAnswer::TextField"* [ %37, %27 ], [ %1, %17 ]
  %30 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %28, i64 0, i32 0
  %31 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %29, i64 0, i32 0
  %32 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %30, %"class.std::__1::basic_string"* dereferenceable(24) %31) #12
  %33 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %28, i64 0, i32 1
  %34 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %29, i64 0, i32 1
  %35 = bitcast i32* %33 to i8*
  %36 = bitcast i32* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false) #12
  %37 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %29, i64 1
  %38 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %28, i64 1
  %39 = icmp eq %"class.SuggestionAnswer::TextField"* %37, %25
  br i1 %39, label %40, label %27

40:                                               ; preds = %27, %17
  %41 = phi %"class.SuggestionAnswer::TextField"* [ %16, %17 ], [ %38, %27 ]
  br i1 %23, label %42, label %245

42:                                               ; preds = %40
  %43 = load i64, i64* %19, align 8
  %44 = icmp eq %"class.SuggestionAnswer::TextField"* %25, %2
  br i1 %44, label %243, label %45

45:                                               ; preds = %42
  %46 = inttoptr i64 %43 to %"class.SuggestionAnswer::TextField"*
  br label %47

47:                                               ; preds = %233, %45
  %48 = phi %"class.SuggestionAnswer::TextField"* [ %239, %233 ], [ %46, %45 ]
  %49 = phi %"class.SuggestionAnswer::TextField"* [ %238, %233 ], [ %24, %45 ]
  %50 = bitcast %"class.SuggestionAnswer::TextField"* %49 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %50, i64 0, i32 1, i32 1
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %47
  %55 = bitcast %"class.SuggestionAnswer::TextField"* %48 to i8*
  %56 = bitcast %"class.SuggestionAnswer::TextField"* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 24, i1 false) #12
  br label %233

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i16*, i16** %58, align 8
  %60 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = icmp ult i64 %61, 11
  br i1 %62, label %63, label %68

63:                                               ; preds = %57
  %64 = bitcast %"class.SuggestionAnswer::TextField"* %48 to i16*
  %65 = trunc i64 %61 to i8
  %66 = bitcast %"class.SuggestionAnswer::TextField"* %48 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %66, i64 0, i32 1, i32 1
  store i8 %65, i8* %67, align 1
  br label %85

68:                                               ; preds = %57
  %69 = icmp ugt i64 %61, 9223372036854775791
  br i1 %69, label %70, label %72

70:                                               ; preds = %68
  %71 = bitcast %"class.SuggestionAnswer::TextField"* %48 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %71) #14
  unreachable

72:                                               ; preds = %68
  %73 = add nuw nsw i64 %61, 8
  %74 = and i64 %73, -8
  %75 = icmp slt i64 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %72
  tail call void @abort() #14
  unreachable

77:                                               ; preds = %72
  %78 = shl i64 %74, 1
  %79 = tail call i8* @_Znwm(i64 %78) #13
  %80 = bitcast i8* %79 to i16*
  %81 = bitcast %"class.SuggestionAnswer::TextField"* %48 to i8**
  store i8* %79, i8** %81, align 8
  %82 = or i64 %74, -9223372036854775808
  %83 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %61, i64* %84, align 8
  br label %85

85:                                               ; preds = %77, %63
  %86 = phi i16* [ %64, %63 ], [ %80, %77 ]
  %87 = add nuw nsw i64 %61, 1
  %88 = add i64 %61, 1
  %89 = icmp ult i64 %88, 16
  br i1 %89, label %180, label %90

90:                                               ; preds = %85
  %91 = getelementptr i16, i16* %86, i64 1
  %92 = getelementptr i16, i16* %91, i64 %61
  %93 = getelementptr i16, i16* %59, i64 1
  %94 = getelementptr i16, i16* %93, i64 %61
  %95 = icmp ult i16* %86, %94
  %96 = icmp ult i16* %59, %92
  %97 = and i1 %95, %96
  br i1 %97, label %180, label %98

98:                                               ; preds = %90
  %99 = and i64 %88, -16
  %100 = sub i64 %87, %99
  %101 = getelementptr i16, i16* %59, i64 %99
  %102 = getelementptr i16, i16* %86, i64 %99
  %103 = add i64 %99, -16
  %104 = lshr exact i64 %103, 4
  %105 = add nuw nsw i64 %104, 1
  %106 = and i64 %105, 3
  %107 = icmp ult i64 %103, 48
  br i1 %107, label %159, label %108

108:                                              ; preds = %98
  %109 = sub nsw i64 %105, %106
  br label %110

110:                                              ; preds = %110, %108
  %111 = phi i64 [ 0, %108 ], [ %156, %110 ]
  %112 = phi i64 [ %109, %108 ], [ %157, %110 ]
  %113 = getelementptr i16, i16* %59, i64 %111
  %114 = getelementptr i16, i16* %86, i64 %111
  %115 = bitcast i16* %113 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !159
  %117 = getelementptr i16, i16* %113, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !159
  %120 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %120, align 2, !alias.scope !162, !noalias !159
  %121 = getelementptr i16, i16* %114, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %122, align 2, !alias.scope !162, !noalias !159
  %123 = or i64 %111, 16
  %124 = getelementptr i16, i16* %59, i64 %123
  %125 = getelementptr i16, i16* %86, i64 %123
  %126 = bitcast i16* %124 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !159
  %128 = getelementptr i16, i16* %124, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !159
  %131 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %131, align 2, !alias.scope !162, !noalias !159
  %132 = getelementptr i16, i16* %125, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %133, align 2, !alias.scope !162, !noalias !159
  %134 = or i64 %111, 32
  %135 = getelementptr i16, i16* %59, i64 %134
  %136 = getelementptr i16, i16* %86, i64 %134
  %137 = bitcast i16* %135 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !159
  %139 = getelementptr i16, i16* %135, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !159
  %142 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %142, align 2, !alias.scope !162, !noalias !159
  %143 = getelementptr i16, i16* %136, i64 8
  %144 = bitcast i16* %143 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %144, align 2, !alias.scope !162, !noalias !159
  %145 = or i64 %111, 48
  %146 = getelementptr i16, i16* %59, i64 %145
  %147 = getelementptr i16, i16* %86, i64 %145
  %148 = bitcast i16* %146 to <8 x i16>*
  %149 = load <8 x i16>, <8 x i16>* %148, align 2, !alias.scope !159
  %150 = getelementptr i16, i16* %146, i64 8
  %151 = bitcast i16* %150 to <8 x i16>*
  %152 = load <8 x i16>, <8 x i16>* %151, align 2, !alias.scope !159
  %153 = bitcast i16* %147 to <8 x i16>*
  store <8 x i16> %149, <8 x i16>* %153, align 2, !alias.scope !162, !noalias !159
  %154 = getelementptr i16, i16* %147, i64 8
  %155 = bitcast i16* %154 to <8 x i16>*
  store <8 x i16> %152, <8 x i16>* %155, align 2, !alias.scope !162, !noalias !159
  %156 = add i64 %111, 64
  %157 = add i64 %112, -4
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %110, !llvm.loop !164

159:                                              ; preds = %110, %98
  %160 = phi i64 [ 0, %98 ], [ %156, %110 ]
  %161 = icmp eq i64 %106, 0
  br i1 %161, label %178, label %162

162:                                              ; preds = %159, %162
  %163 = phi i64 [ %175, %162 ], [ %160, %159 ]
  %164 = phi i64 [ %176, %162 ], [ %106, %159 ]
  %165 = getelementptr i16, i16* %59, i64 %163
  %166 = getelementptr i16, i16* %86, i64 %163
  %167 = bitcast i16* %165 to <8 x i16>*
  %168 = load <8 x i16>, <8 x i16>* %167, align 2, !alias.scope !159
  %169 = getelementptr i16, i16* %165, i64 8
  %170 = bitcast i16* %169 to <8 x i16>*
  %171 = load <8 x i16>, <8 x i16>* %170, align 2, !alias.scope !159
  %172 = bitcast i16* %166 to <8 x i16>*
  store <8 x i16> %168, <8 x i16>* %172, align 2, !alias.scope !162, !noalias !159
  %173 = getelementptr i16, i16* %166, i64 8
  %174 = bitcast i16* %173 to <8 x i16>*
  store <8 x i16> %171, <8 x i16>* %174, align 2, !alias.scope !162, !noalias !159
  %175 = add i64 %163, 16
  %176 = add i64 %164, -1
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %162, !llvm.loop !165

178:                                              ; preds = %162, %159
  %179 = icmp eq i64 %88, %99
  br i1 %179, label %233, label %180

180:                                              ; preds = %178, %90, %85
  %181 = phi i64 [ %87, %90 ], [ %87, %85 ], [ %100, %178 ]
  %182 = phi i16* [ %59, %90 ], [ %59, %85 ], [ %101, %178 ]
  %183 = phi i16* [ %86, %90 ], [ %86, %85 ], [ %102, %178 ]
  %184 = add i64 %181, -1
  %185 = and i64 %181, 7
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %198, label %187

187:                                              ; preds = %180, %187
  %188 = phi i64 [ %193, %187 ], [ %181, %180 ]
  %189 = phi i16* [ %195, %187 ], [ %182, %180 ]
  %190 = phi i16* [ %194, %187 ], [ %183, %180 ]
  %191 = phi i64 [ %196, %187 ], [ %185, %180 ]
  %192 = load i16, i16* %189, align 2
  store i16 %192, i16* %190, align 2
  %193 = add i64 %188, -1
  %194 = getelementptr inbounds i16, i16* %190, i64 1
  %195 = getelementptr inbounds i16, i16* %189, i64 1
  %196 = add i64 %191, -1
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %198, label %187, !llvm.loop !166

198:                                              ; preds = %187, %180
  %199 = phi i64 [ %181, %180 ], [ %193, %187 ]
  %200 = phi i16* [ %182, %180 ], [ %195, %187 ]
  %201 = phi i16* [ %183, %180 ], [ %194, %187 ]
  %202 = icmp ult i64 %184, 7
  br i1 %202, label %233, label %203

203:                                              ; preds = %198, %203
  %204 = phi i64 [ %229, %203 ], [ %199, %198 ]
  %205 = phi i16* [ %231, %203 ], [ %200, %198 ]
  %206 = phi i16* [ %230, %203 ], [ %201, %198 ]
  %207 = load i16, i16* %205, align 2
  store i16 %207, i16* %206, align 2
  %208 = getelementptr inbounds i16, i16* %206, i64 1
  %209 = getelementptr inbounds i16, i16* %205, i64 1
  %210 = load i16, i16* %209, align 2
  store i16 %210, i16* %208, align 2
  %211 = getelementptr inbounds i16, i16* %206, i64 2
  %212 = getelementptr inbounds i16, i16* %205, i64 2
  %213 = load i16, i16* %212, align 2
  store i16 %213, i16* %211, align 2
  %214 = getelementptr inbounds i16, i16* %206, i64 3
  %215 = getelementptr inbounds i16, i16* %205, i64 3
  %216 = load i16, i16* %215, align 2
  store i16 %216, i16* %214, align 2
  %217 = getelementptr inbounds i16, i16* %206, i64 4
  %218 = getelementptr inbounds i16, i16* %205, i64 4
  %219 = load i16, i16* %218, align 2
  store i16 %219, i16* %217, align 2
  %220 = getelementptr inbounds i16, i16* %206, i64 5
  %221 = getelementptr inbounds i16, i16* %205, i64 5
  %222 = load i16, i16* %221, align 2
  store i16 %222, i16* %220, align 2
  %223 = getelementptr inbounds i16, i16* %206, i64 6
  %224 = getelementptr inbounds i16, i16* %205, i64 6
  %225 = load i16, i16* %224, align 2
  store i16 %225, i16* %223, align 2
  %226 = getelementptr inbounds i16, i16* %206, i64 7
  %227 = getelementptr inbounds i16, i16* %205, i64 7
  %228 = load i16, i16* %227, align 2
  store i16 %228, i16* %226, align 2
  %229 = add i64 %204, -8
  %230 = getelementptr inbounds i16, i16* %206, i64 8
  %231 = getelementptr inbounds i16, i16* %205, i64 8
  %232 = icmp eq i64 %229, 0
  br i1 %232, label %233, label %203, !llvm.loop !167

233:                                              ; preds = %198, %203, %178, %54
  %234 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %48, i64 0, i32 1
  %235 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %49, i64 0, i32 1
  %236 = bitcast i32* %234 to i8*
  %237 = bitcast i32* %235 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %236, i8* align 8 %237, i64 16, i1 false) #12
  %238 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %49, i64 1
  %239 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %48, i64 1
  %240 = icmp eq %"class.SuggestionAnswer::TextField"* %238, %2
  br i1 %240, label %241, label %47

241:                                              ; preds = %233
  %242 = ptrtoint %"class.SuggestionAnswer::TextField"* %239 to i64
  br label %243

243:                                              ; preds = %42, %241
  %244 = phi i64 [ %43, %42 ], [ %242, %241 ]
  store i64 %244, i64* %19, align 8
  br label %508

245:                                              ; preds = %40
  %246 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %18, align 8
  %247 = icmp eq %"class.SuggestionAnswer::TextField"* %246, %41
  br i1 %247, label %260, label %248

248:                                              ; preds = %245, %258
  %249 = phi %"class.SuggestionAnswer::TextField"* [ %250, %258 ], [ %246, %245 ]
  %250 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %249, i64 -1
  %251 = bitcast %"class.SuggestionAnswer::TextField"* %250 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %252 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %251, i64 0, i32 1, i32 1
  %253 = load i8, i8* %252, align 1
  %254 = icmp slt i8 %253, 0
  br i1 %254, label %255, label %258

255:                                              ; preds = %248
  %256 = bitcast %"class.SuggestionAnswer::TextField"* %250 to i8**
  %257 = load i8*, i8** %256, align 8
  tail call void @_ZdlPv(i8* %257) #13
  br label %258

258:                                              ; preds = %255, %248
  %259 = icmp eq %"class.SuggestionAnswer::TextField"* %250, %41
  br i1 %259, label %260, label %248

260:                                              ; preds = %258, %245
  store %"class.SuggestionAnswer::TextField"* %41, %"class.SuggestionAnswer::TextField"** %18, align 8
  br label %508

261:                                              ; preds = %3
  %262 = icmp eq i64 %12, 0
  br i1 %262, label %286, label %263

263:                                              ; preds = %261
  %264 = inttoptr i64 %12 to i8*
  %265 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 1
  %266 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %265, align 8
  %267 = icmp eq %"class.SuggestionAnswer::TextField"* %266, %16
  br i1 %267, label %283, label %268

268:                                              ; preds = %263, %278
  %269 = phi %"class.SuggestionAnswer::TextField"* [ %270, %278 ], [ %266, %263 ]
  %270 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %269, i64 -1
  %271 = bitcast %"class.SuggestionAnswer::TextField"* %270 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %272 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %271, i64 0, i32 1, i32 1
  %273 = load i8, i8* %272, align 1
  %274 = icmp slt i8 %273, 0
  br i1 %274, label %275, label %278

275:                                              ; preds = %268
  %276 = bitcast %"class.SuggestionAnswer::TextField"* %270 to i8**
  %277 = load i8*, i8** %276, align 8
  tail call void @_ZdlPv(i8* %277) #13
  br label %278

278:                                              ; preds = %275, %268
  %279 = icmp eq %"class.SuggestionAnswer::TextField"* %270, %16
  br i1 %279, label %280, label %268

280:                                              ; preds = %278
  %281 = bitcast %"class.std::__1::vector.39"* %0 to i8**
  %282 = load i8*, i8** %281, align 8
  br label %283

283:                                              ; preds = %280, %263
  %284 = phi i8* [ %282, %280 ], [ %264, %263 ]
  store %"class.SuggestionAnswer::TextField"* %16, %"class.SuggestionAnswer::TextField"** %265, align 8
  tail call void @_ZdlPv(i8* %284) #13
  %285 = bitcast %"class.std::__1::vector.39"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %285, i8 0, i64 24, i1 false) #12
  br label %286

286:                                              ; preds = %261, %283
  %287 = phi i64 [ %10, %261 ], [ 0, %283 ]
  %288 = icmp ugt i64 %7, 461168601842738790
  br i1 %288, label %289, label %291

289:                                              ; preds = %286
  %290 = bitcast %"class.std::__1::vector.39"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %290) #14
  unreachable

291:                                              ; preds = %286
  %292 = sdiv exact i64 %287, 40
  %293 = icmp ult i64 %292, 230584300921369395
  br i1 %293, label %294, label %298

294:                                              ; preds = %291
  %295 = shl nsw i64 %292, 1
  %296 = icmp ult i64 %295, %7
  %297 = select i1 %296, i64 %7, i64 %295
  br label %298

298:                                              ; preds = %294, %291
  %299 = phi i64 [ %297, %294 ], [ 461168601842738790, %291 ]
  %300 = mul i64 %299, 40
  %301 = tail call i8* @_Znwm(i64 %300) #13
  %302 = bitcast i8* %301 to %"class.SuggestionAnswer::TextField"*
  %303 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 1
  %304 = bitcast %"class.SuggestionAnswer::TextField"** %303 to i8**
  store i8* %301, i8** %304, align 8
  %305 = bitcast %"class.std::__1::vector.39"* %0 to i8**
  store i8* %301, i8** %305, align 8
  %306 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %302, i64 %299
  store %"class.SuggestionAnswer::TextField"* %306, %"class.SuggestionAnswer::TextField"** %8, align 8
  %307 = bitcast %"class.SuggestionAnswer::TextField"** %303 to i64*
  %308 = ptrtoint i8* %301 to i64
  %309 = icmp eq %"class.SuggestionAnswer::TextField"* %1, %2
  br i1 %309, label %506, label %310

310:                                              ; preds = %298, %496
  %311 = phi %"class.SuggestionAnswer::TextField"* [ %502, %496 ], [ %302, %298 ]
  %312 = phi %"class.SuggestionAnswer::TextField"* [ %501, %496 ], [ %1, %298 ]
  %313 = bitcast %"class.SuggestionAnswer::TextField"* %312 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %314 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %313, i64 0, i32 1, i32 1
  %315 = load i8, i8* %314, align 1
  %316 = icmp slt i8 %315, 0
  br i1 %316, label %320, label %317

317:                                              ; preds = %310
  %318 = bitcast %"class.SuggestionAnswer::TextField"* %311 to i8*
  %319 = bitcast %"class.SuggestionAnswer::TextField"* %312 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %318, i8* align 8 %319, i64 24, i1 false) #12
  br label %496

320:                                              ; preds = %310
  %321 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %312, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %322 = load i16*, i16** %321, align 8
  %323 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %312, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %324 = load i64, i64* %323, align 8
  %325 = icmp ult i64 %324, 11
  br i1 %325, label %326, label %331

326:                                              ; preds = %320
  %327 = bitcast %"class.SuggestionAnswer::TextField"* %311 to i16*
  %328 = trunc i64 %324 to i8
  %329 = bitcast %"class.SuggestionAnswer::TextField"* %311 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %330 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %329, i64 0, i32 1, i32 1
  store i8 %328, i8* %330, align 1
  br label %348

331:                                              ; preds = %320
  %332 = icmp ugt i64 %324, 9223372036854775791
  br i1 %332, label %333, label %335

333:                                              ; preds = %331
  %334 = bitcast %"class.SuggestionAnswer::TextField"* %311 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %334) #14
  unreachable

335:                                              ; preds = %331
  %336 = add nuw nsw i64 %324, 8
  %337 = and i64 %336, -8
  %338 = icmp slt i64 %337, 0
  br i1 %338, label %339, label %340

339:                                              ; preds = %335
  tail call void @abort() #14
  unreachable

340:                                              ; preds = %335
  %341 = shl i64 %337, 1
  %342 = tail call i8* @_Znwm(i64 %341) #13
  %343 = bitcast i8* %342 to i16*
  %344 = bitcast %"class.SuggestionAnswer::TextField"* %311 to i8**
  store i8* %342, i8** %344, align 8
  %345 = or i64 %337, -9223372036854775808
  %346 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %311, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %345, i64* %346, align 8
  %347 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %311, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %324, i64* %347, align 8
  br label %348

348:                                              ; preds = %340, %326
  %349 = phi i16* [ %327, %326 ], [ %343, %340 ]
  %350 = add nuw nsw i64 %324, 1
  %351 = add i64 %324, 1
  %352 = icmp ult i64 %351, 16
  br i1 %352, label %443, label %353

353:                                              ; preds = %348
  %354 = getelementptr i16, i16* %349, i64 1
  %355 = getelementptr i16, i16* %354, i64 %324
  %356 = getelementptr i16, i16* %322, i64 1
  %357 = getelementptr i16, i16* %356, i64 %324
  %358 = icmp ult i16* %349, %357
  %359 = icmp ult i16* %322, %355
  %360 = and i1 %358, %359
  br i1 %360, label %443, label %361

361:                                              ; preds = %353
  %362 = and i64 %351, -16
  %363 = sub i64 %350, %362
  %364 = getelementptr i16, i16* %322, i64 %362
  %365 = getelementptr i16, i16* %349, i64 %362
  %366 = add i64 %362, -16
  %367 = lshr exact i64 %366, 4
  %368 = add nuw nsw i64 %367, 1
  %369 = and i64 %368, 3
  %370 = icmp ult i64 %366, 48
  br i1 %370, label %422, label %371

371:                                              ; preds = %361
  %372 = sub nsw i64 %368, %369
  br label %373

373:                                              ; preds = %373, %371
  %374 = phi i64 [ 0, %371 ], [ %419, %373 ]
  %375 = phi i64 [ %372, %371 ], [ %420, %373 ]
  %376 = getelementptr i16, i16* %322, i64 %374
  %377 = getelementptr i16, i16* %349, i64 %374
  %378 = bitcast i16* %376 to <8 x i16>*
  %379 = load <8 x i16>, <8 x i16>* %378, align 2, !alias.scope !168
  %380 = getelementptr i16, i16* %376, i64 8
  %381 = bitcast i16* %380 to <8 x i16>*
  %382 = load <8 x i16>, <8 x i16>* %381, align 2, !alias.scope !168
  %383 = bitcast i16* %377 to <8 x i16>*
  store <8 x i16> %379, <8 x i16>* %383, align 2, !alias.scope !171, !noalias !168
  %384 = getelementptr i16, i16* %377, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  store <8 x i16> %382, <8 x i16>* %385, align 2, !alias.scope !171, !noalias !168
  %386 = or i64 %374, 16
  %387 = getelementptr i16, i16* %322, i64 %386
  %388 = getelementptr i16, i16* %349, i64 %386
  %389 = bitcast i16* %387 to <8 x i16>*
  %390 = load <8 x i16>, <8 x i16>* %389, align 2, !alias.scope !168
  %391 = getelementptr i16, i16* %387, i64 8
  %392 = bitcast i16* %391 to <8 x i16>*
  %393 = load <8 x i16>, <8 x i16>* %392, align 2, !alias.scope !168
  %394 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %390, <8 x i16>* %394, align 2, !alias.scope !171, !noalias !168
  %395 = getelementptr i16, i16* %388, i64 8
  %396 = bitcast i16* %395 to <8 x i16>*
  store <8 x i16> %393, <8 x i16>* %396, align 2, !alias.scope !171, !noalias !168
  %397 = or i64 %374, 32
  %398 = getelementptr i16, i16* %322, i64 %397
  %399 = getelementptr i16, i16* %349, i64 %397
  %400 = bitcast i16* %398 to <8 x i16>*
  %401 = load <8 x i16>, <8 x i16>* %400, align 2, !alias.scope !168
  %402 = getelementptr i16, i16* %398, i64 8
  %403 = bitcast i16* %402 to <8 x i16>*
  %404 = load <8 x i16>, <8 x i16>* %403, align 2, !alias.scope !168
  %405 = bitcast i16* %399 to <8 x i16>*
  store <8 x i16> %401, <8 x i16>* %405, align 2, !alias.scope !171, !noalias !168
  %406 = getelementptr i16, i16* %399, i64 8
  %407 = bitcast i16* %406 to <8 x i16>*
  store <8 x i16> %404, <8 x i16>* %407, align 2, !alias.scope !171, !noalias !168
  %408 = or i64 %374, 48
  %409 = getelementptr i16, i16* %322, i64 %408
  %410 = getelementptr i16, i16* %349, i64 %408
  %411 = bitcast i16* %409 to <8 x i16>*
  %412 = load <8 x i16>, <8 x i16>* %411, align 2, !alias.scope !168
  %413 = getelementptr i16, i16* %409, i64 8
  %414 = bitcast i16* %413 to <8 x i16>*
  %415 = load <8 x i16>, <8 x i16>* %414, align 2, !alias.scope !168
  %416 = bitcast i16* %410 to <8 x i16>*
  store <8 x i16> %412, <8 x i16>* %416, align 2, !alias.scope !171, !noalias !168
  %417 = getelementptr i16, i16* %410, i64 8
  %418 = bitcast i16* %417 to <8 x i16>*
  store <8 x i16> %415, <8 x i16>* %418, align 2, !alias.scope !171, !noalias !168
  %419 = add i64 %374, 64
  %420 = add i64 %375, -4
  %421 = icmp eq i64 %420, 0
  br i1 %421, label %422, label %373, !llvm.loop !173

422:                                              ; preds = %373, %361
  %423 = phi i64 [ 0, %361 ], [ %419, %373 ]
  %424 = icmp eq i64 %369, 0
  br i1 %424, label %441, label %425

425:                                              ; preds = %422, %425
  %426 = phi i64 [ %438, %425 ], [ %423, %422 ]
  %427 = phi i64 [ %439, %425 ], [ %369, %422 ]
  %428 = getelementptr i16, i16* %322, i64 %426
  %429 = getelementptr i16, i16* %349, i64 %426
  %430 = bitcast i16* %428 to <8 x i16>*
  %431 = load <8 x i16>, <8 x i16>* %430, align 2, !alias.scope !168
  %432 = getelementptr i16, i16* %428, i64 8
  %433 = bitcast i16* %432 to <8 x i16>*
  %434 = load <8 x i16>, <8 x i16>* %433, align 2, !alias.scope !168
  %435 = bitcast i16* %429 to <8 x i16>*
  store <8 x i16> %431, <8 x i16>* %435, align 2, !alias.scope !171, !noalias !168
  %436 = getelementptr i16, i16* %429, i64 8
  %437 = bitcast i16* %436 to <8 x i16>*
  store <8 x i16> %434, <8 x i16>* %437, align 2, !alias.scope !171, !noalias !168
  %438 = add i64 %426, 16
  %439 = add i64 %427, -1
  %440 = icmp eq i64 %439, 0
  br i1 %440, label %441, label %425, !llvm.loop !174

441:                                              ; preds = %425, %422
  %442 = icmp eq i64 %351, %362
  br i1 %442, label %496, label %443

443:                                              ; preds = %441, %353, %348
  %444 = phi i64 [ %350, %353 ], [ %350, %348 ], [ %363, %441 ]
  %445 = phi i16* [ %322, %353 ], [ %322, %348 ], [ %364, %441 ]
  %446 = phi i16* [ %349, %353 ], [ %349, %348 ], [ %365, %441 ]
  %447 = add i64 %444, -1
  %448 = and i64 %444, 7
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %461, label %450

450:                                              ; preds = %443, %450
  %451 = phi i64 [ %456, %450 ], [ %444, %443 ]
  %452 = phi i16* [ %458, %450 ], [ %445, %443 ]
  %453 = phi i16* [ %457, %450 ], [ %446, %443 ]
  %454 = phi i64 [ %459, %450 ], [ %448, %443 ]
  %455 = load i16, i16* %452, align 2
  store i16 %455, i16* %453, align 2
  %456 = add i64 %451, -1
  %457 = getelementptr inbounds i16, i16* %453, i64 1
  %458 = getelementptr inbounds i16, i16* %452, i64 1
  %459 = add i64 %454, -1
  %460 = icmp eq i64 %459, 0
  br i1 %460, label %461, label %450, !llvm.loop !175

461:                                              ; preds = %450, %443
  %462 = phi i64 [ %444, %443 ], [ %456, %450 ]
  %463 = phi i16* [ %445, %443 ], [ %458, %450 ]
  %464 = phi i16* [ %446, %443 ], [ %457, %450 ]
  %465 = icmp ult i64 %447, 7
  br i1 %465, label %496, label %466

466:                                              ; preds = %461, %466
  %467 = phi i64 [ %492, %466 ], [ %462, %461 ]
  %468 = phi i16* [ %494, %466 ], [ %463, %461 ]
  %469 = phi i16* [ %493, %466 ], [ %464, %461 ]
  %470 = load i16, i16* %468, align 2
  store i16 %470, i16* %469, align 2
  %471 = getelementptr inbounds i16, i16* %469, i64 1
  %472 = getelementptr inbounds i16, i16* %468, i64 1
  %473 = load i16, i16* %472, align 2
  store i16 %473, i16* %471, align 2
  %474 = getelementptr inbounds i16, i16* %469, i64 2
  %475 = getelementptr inbounds i16, i16* %468, i64 2
  %476 = load i16, i16* %475, align 2
  store i16 %476, i16* %474, align 2
  %477 = getelementptr inbounds i16, i16* %469, i64 3
  %478 = getelementptr inbounds i16, i16* %468, i64 3
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %469, i64 4
  %481 = getelementptr inbounds i16, i16* %468, i64 4
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %469, i64 5
  %484 = getelementptr inbounds i16, i16* %468, i64 5
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %469, i64 6
  %487 = getelementptr inbounds i16, i16* %468, i64 6
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %469, i64 7
  %490 = getelementptr inbounds i16, i16* %468, i64 7
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = add i64 %467, -8
  %493 = getelementptr inbounds i16, i16* %469, i64 8
  %494 = getelementptr inbounds i16, i16* %468, i64 8
  %495 = icmp eq i64 %492, 0
  br i1 %495, label %496, label %466, !llvm.loop !176

496:                                              ; preds = %461, %466, %441, %317
  %497 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %311, i64 0, i32 1
  %498 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %312, i64 0, i32 1
  %499 = bitcast i32* %497 to i8*
  %500 = bitcast i32* %498 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %499, i8* align 8 %500, i64 16, i1 false) #12
  %501 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %312, i64 1
  %502 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %311, i64 1
  %503 = icmp eq %"class.SuggestionAnswer::TextField"* %501, %2
  br i1 %503, label %504, label %310

504:                                              ; preds = %496
  %505 = ptrtoint %"class.SuggestionAnswer::TextField"* %502 to i64
  br label %506

506:                                              ; preds = %298, %504
  %507 = phi i64 [ %308, %298 ], [ %505, %504 ]
  store i64 %507, i64* %307, align 8
  br label %508

508:                                              ; preds = %243, %260, %506
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN16SuggestionAnswer9TextFieldENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.39"*, %"class.SuggestionAnswer::TextField"* dereferenceable(40)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.SuggestionAnswer::TextField"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.39"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 40
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 461168601842738790
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.39"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.SuggestionAnswer::TextField"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 40
  %20 = icmp ult i64 %19, 230584300921369395
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 461168601842738790, %14 ]
  %28 = mul i64 %27, 40
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"class.SuggestionAnswer::TextField"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.SuggestionAnswer::TextField"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %33, i64 %9
  %35 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %33, i64 %32
  %36 = ptrtoint %"class.SuggestionAnswer::TextField"* %35 to i64
  %37 = bitcast %"class.SuggestionAnswer::TextField"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.SuggestionAnswer::TextField"* %34 to i8*
  %43 = bitcast %"class.SuggestionAnswer::TextField"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #12
  br label %219

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i16*, i16** %45, align 8
  %47 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = icmp ult i64 %48, 11
  br i1 %49, label %50, label %55

50:                                               ; preds = %44
  %51 = bitcast %"class.SuggestionAnswer::TextField"* %34 to i16*
  %52 = trunc i64 %48 to i8
  %53 = bitcast %"class.SuggestionAnswer::TextField"* %34 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %53, i64 0, i32 1, i32 1
  store i8 %52, i8* %54, align 1
  br label %72

55:                                               ; preds = %44
  %56 = icmp ugt i64 %48, 9223372036854775791
  br i1 %56, label %57, label %59

57:                                               ; preds = %55
  %58 = bitcast %"class.SuggestionAnswer::TextField"* %34 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %58) #14
  unreachable

59:                                               ; preds = %55
  %60 = add nuw nsw i64 %48, 8
  %61 = and i64 %60, -8
  %62 = icmp slt i64 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %59
  tail call void @abort() #14
  unreachable

64:                                               ; preds = %59
  %65 = shl i64 %61, 1
  %66 = tail call i8* @_Znwm(i64 %65) #13
  %67 = bitcast i8* %66 to i16*
  %68 = bitcast %"class.SuggestionAnswer::TextField"* %34 to i8**
  store i8* %66, i8** %68, align 8
  %69 = or i64 %61, -9223372036854775808
  %70 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %33, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %33, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %48, i64* %71, align 8
  br label %72

72:                                               ; preds = %64, %50
  %73 = phi i16* [ %51, %50 ], [ %67, %64 ]
  %74 = add nuw nsw i64 %48, 1
  %75 = add i64 %48, 1
  %76 = icmp ult i64 %75, 16
  br i1 %76, label %166, label %77

77:                                               ; preds = %72
  %78 = add i64 %48, 1
  %79 = getelementptr i16, i16* %73, i64 %78
  %80 = getelementptr i16, i16* %46, i64 %78
  %81 = icmp ult i16* %73, %80
  %82 = icmp ult i16* %46, %79
  %83 = and i1 %81, %82
  br i1 %83, label %166, label %84

84:                                               ; preds = %77
  %85 = and i64 %75, -16
  %86 = sub i64 %74, %85
  %87 = getelementptr i16, i16* %46, i64 %85
  %88 = getelementptr i16, i16* %73, i64 %85
  %89 = add i64 %85, -16
  %90 = lshr exact i64 %89, 4
  %91 = add nuw nsw i64 %90, 1
  %92 = and i64 %91, 3
  %93 = icmp ult i64 %89, 48
  br i1 %93, label %145, label %94

94:                                               ; preds = %84
  %95 = sub nsw i64 %91, %92
  br label %96

96:                                               ; preds = %96, %94
  %97 = phi i64 [ 0, %94 ], [ %142, %96 ]
  %98 = phi i64 [ %95, %94 ], [ %143, %96 ]
  %99 = getelementptr i16, i16* %46, i64 %97
  %100 = getelementptr i16, i16* %73, i64 %97
  %101 = bitcast i16* %99 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !177
  %103 = getelementptr i16, i16* %99, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !177
  %106 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !180, !noalias !177
  %107 = getelementptr i16, i16* %100, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !180, !noalias !177
  %109 = or i64 %97, 16
  %110 = getelementptr i16, i16* %46, i64 %109
  %111 = getelementptr i16, i16* %73, i64 %109
  %112 = bitcast i16* %110 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !177
  %114 = getelementptr i16, i16* %110, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !177
  %117 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %117, align 2, !alias.scope !180, !noalias !177
  %118 = getelementptr i16, i16* %111, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %119, align 2, !alias.scope !180, !noalias !177
  %120 = or i64 %97, 32
  %121 = getelementptr i16, i16* %46, i64 %120
  %122 = getelementptr i16, i16* %73, i64 %120
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !177
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !177
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !180, !noalias !177
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !180, !noalias !177
  %131 = or i64 %97, 48
  %132 = getelementptr i16, i16* %46, i64 %131
  %133 = getelementptr i16, i16* %73, i64 %131
  %134 = bitcast i16* %132 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !177
  %136 = getelementptr i16, i16* %132, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !177
  %139 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %139, align 2, !alias.scope !180, !noalias !177
  %140 = getelementptr i16, i16* %133, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %141, align 2, !alias.scope !180, !noalias !177
  %142 = add i64 %97, 64
  %143 = add i64 %98, -4
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %96, !llvm.loop !182

145:                                              ; preds = %96, %84
  %146 = phi i64 [ 0, %84 ], [ %142, %96 ]
  %147 = icmp eq i64 %92, 0
  br i1 %147, label %164, label %148

148:                                              ; preds = %145, %148
  %149 = phi i64 [ %161, %148 ], [ %146, %145 ]
  %150 = phi i64 [ %162, %148 ], [ %92, %145 ]
  %151 = getelementptr i16, i16* %46, i64 %149
  %152 = getelementptr i16, i16* %73, i64 %149
  %153 = bitcast i16* %151 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !177
  %155 = getelementptr i16, i16* %151, i64 8
  %156 = bitcast i16* %155 to <8 x i16>*
  %157 = load <8 x i16>, <8 x i16>* %156, align 2, !alias.scope !177
  %158 = bitcast i16* %152 to <8 x i16>*
  store <8 x i16> %154, <8 x i16>* %158, align 2, !alias.scope !180, !noalias !177
  %159 = getelementptr i16, i16* %152, i64 8
  %160 = bitcast i16* %159 to <8 x i16>*
  store <8 x i16> %157, <8 x i16>* %160, align 2, !alias.scope !180, !noalias !177
  %161 = add i64 %149, 16
  %162 = add i64 %150, -1
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %148, !llvm.loop !183

164:                                              ; preds = %148, %145
  %165 = icmp eq i64 %75, %85
  br i1 %165, label %219, label %166

166:                                              ; preds = %164, %77, %72
  %167 = phi i64 [ %74, %77 ], [ %74, %72 ], [ %86, %164 ]
  %168 = phi i16* [ %46, %77 ], [ %46, %72 ], [ %87, %164 ]
  %169 = phi i16* [ %73, %77 ], [ %73, %72 ], [ %88, %164 ]
  %170 = add i64 %167, -1
  %171 = and i64 %167, 7
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %184, label %173

173:                                              ; preds = %166, %173
  %174 = phi i64 [ %179, %173 ], [ %167, %166 ]
  %175 = phi i16* [ %181, %173 ], [ %168, %166 ]
  %176 = phi i16* [ %180, %173 ], [ %169, %166 ]
  %177 = phi i64 [ %182, %173 ], [ %171, %166 ]
  %178 = load i16, i16* %175, align 2
  store i16 %178, i16* %176, align 2
  %179 = add i64 %174, -1
  %180 = getelementptr inbounds i16, i16* %176, i64 1
  %181 = getelementptr inbounds i16, i16* %175, i64 1
  %182 = add i64 %177, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %173, !llvm.loop !184

184:                                              ; preds = %173, %166
  %185 = phi i64 [ %167, %166 ], [ %179, %173 ]
  %186 = phi i16* [ %168, %166 ], [ %181, %173 ]
  %187 = phi i16* [ %169, %166 ], [ %180, %173 ]
  %188 = icmp ult i64 %170, 7
  br i1 %188, label %219, label %189

189:                                              ; preds = %184, %189
  %190 = phi i64 [ %215, %189 ], [ %185, %184 ]
  %191 = phi i16* [ %217, %189 ], [ %186, %184 ]
  %192 = phi i16* [ %216, %189 ], [ %187, %184 ]
  %193 = load i16, i16* %191, align 2
  store i16 %193, i16* %192, align 2
  %194 = getelementptr inbounds i16, i16* %192, i64 1
  %195 = getelementptr inbounds i16, i16* %191, i64 1
  %196 = load i16, i16* %195, align 2
  store i16 %196, i16* %194, align 2
  %197 = getelementptr inbounds i16, i16* %192, i64 2
  %198 = getelementptr inbounds i16, i16* %191, i64 2
  %199 = load i16, i16* %198, align 2
  store i16 %199, i16* %197, align 2
  %200 = getelementptr inbounds i16, i16* %192, i64 3
  %201 = getelementptr inbounds i16, i16* %191, i64 3
  %202 = load i16, i16* %201, align 2
  store i16 %202, i16* %200, align 2
  %203 = getelementptr inbounds i16, i16* %192, i64 4
  %204 = getelementptr inbounds i16, i16* %191, i64 4
  %205 = load i16, i16* %204, align 2
  store i16 %205, i16* %203, align 2
  %206 = getelementptr inbounds i16, i16* %192, i64 5
  %207 = getelementptr inbounds i16, i16* %191, i64 5
  %208 = load i16, i16* %207, align 2
  store i16 %208, i16* %206, align 2
  %209 = getelementptr inbounds i16, i16* %192, i64 6
  %210 = getelementptr inbounds i16, i16* %191, i64 6
  %211 = load i16, i16* %210, align 2
  store i16 %211, i16* %209, align 2
  %212 = getelementptr inbounds i16, i16* %192, i64 7
  %213 = getelementptr inbounds i16, i16* %191, i64 7
  %214 = load i16, i16* %213, align 2
  store i16 %214, i16* %212, align 2
  %215 = add i64 %190, -8
  %216 = getelementptr inbounds i16, i16* %192, i64 8
  %217 = getelementptr inbounds i16, i16* %191, i64 8
  %218 = icmp eq i64 %215, 0
  br i1 %218, label %219, label %189, !llvm.loop !185

219:                                              ; preds = %184, %189, %164, %41
  %220 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %33, i64 %9, i32 1
  %221 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %1, i64 0, i32 1
  %222 = bitcast i32* %220 to i8*
  %223 = bitcast i32* %221 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 8 %223, i64 16, i1 false) #12
  %224 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %34, i64 1
  %225 = ptrtoint %"class.SuggestionAnswer::TextField"* %224 to i64
  %226 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 0
  %227 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %226, align 8
  %228 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %3, align 8
  %229 = icmp eq %"class.SuggestionAnswer::TextField"* %228, %227
  br i1 %229, label %230, label %232

230:                                              ; preds = %219
  %231 = ptrtoint %"class.SuggestionAnswer::TextField"* %227 to i64
  br label %247

232:                                              ; preds = %219, %232
  %233 = phi %"class.SuggestionAnswer::TextField"* [ %235, %232 ], [ %34, %219 ]
  %234 = phi %"class.SuggestionAnswer::TextField"* [ %236, %232 ], [ %228, %219 ]
  %235 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %233, i64 -1
  %236 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %234, i64 -1
  %237 = bitcast %"class.SuggestionAnswer::TextField"* %235 to i8*
  %238 = bitcast %"class.SuggestionAnswer::TextField"* %236 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %237, i8* align 8 %238, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %238, i8 0, i64 24, i1 false) #12
  %239 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %233, i64 -1, i32 1
  %240 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %234, i64 -1, i32 1
  %241 = bitcast i32* %239 to i8*
  %242 = bitcast i32* %240 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %241, i8* align 8 %242, i64 16, i1 false) #12
  %243 = icmp eq %"class.SuggestionAnswer::TextField"* %236, %227
  br i1 %243, label %244, label %232

244:                                              ; preds = %232
  %245 = load i64, i64* %6, align 8
  %246 = load %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"** %3, align 8
  br label %247

247:                                              ; preds = %230, %244
  %248 = phi %"class.SuggestionAnswer::TextField"* [ %227, %230 ], [ %246, %244 ]
  %249 = phi %"class.SuggestionAnswer::TextField"* [ %34, %230 ], [ %235, %244 ]
  %250 = phi i64 [ %231, %230 ], [ %245, %244 ]
  %251 = ptrtoint %"class.SuggestionAnswer::TextField"* %249 to i64
  store i64 %251, i64* %6, align 8
  store i64 %225, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %252 = inttoptr i64 %250 to %"class.SuggestionAnswer::TextField"*
  %253 = icmp eq %"class.SuggestionAnswer::TextField"* %248, %252
  br i1 %253, label %266, label %254

254:                                              ; preds = %247, %264
  %255 = phi %"class.SuggestionAnswer::TextField"* [ %256, %264 ], [ %248, %247 ]
  %256 = getelementptr inbounds %"class.SuggestionAnswer::TextField", %"class.SuggestionAnswer::TextField"* %255, i64 -1
  %257 = bitcast %"class.SuggestionAnswer::TextField"* %256 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %258 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %257, i64 0, i32 1, i32 1
  %259 = load i8, i8* %258, align 1
  %260 = icmp slt i8 %259, 0
  br i1 %260, label %261, label %264

261:                                              ; preds = %254
  %262 = bitcast %"class.SuggestionAnswer::TextField"* %256 to i8**
  %263 = load i8*, i8** %262, align 8
  tail call void @_ZdlPv(i8* %263) #13
  br label %264

264:                                              ; preds = %261, %254
  %265 = icmp eq %"class.SuggestionAnswer::TextField"* %256, %252
  br i1 %265, label %266, label %254

266:                                              ; preds = %264, %247
  %267 = icmp eq i64 %250, 0
  br i1 %267, label %270, label %268

268:                                              ; preds = %266
  %269 = inttoptr i64 %250 to i8*
  tail call void @_ZdlPv(i8* %269) #13
  br label %270

270:                                              ; preds = %266, %268
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string.5"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.5"*, i8*) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string.5"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.5"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.5"*, i8*, i64) local_unnamed_addr #2

declare i64 @_ZNK4GURL19EstimateMemoryUsageEv(%class.GURL*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI4GURLNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(%"class.std::__1::vector.55"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.GURL** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.55"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 120
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 153722867280912930
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.55"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.GURL** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 120
  %20 = icmp ult i64 %19, 76861433640456465
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 153722867280912930, %14 ]
  %28 = mul i64 %27, 120
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %class.GURL*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %class.GURL* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %class.GURL, %class.GURL* %33, i64 %9
  %35 = getelementptr inbounds %class.GURL, %class.GURL* %33, i64 %32
  %36 = ptrtoint %class.GURL* %35 to i64
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %34, %class.GURL* dereferenceable(120) %1) #12
  %37 = getelementptr inbounds %class.GURL, %class.GURL* %34, i64 1
  %38 = ptrtoint %class.GURL* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %0, i64 0, i32 0, i32 0
  %40 = load %class.GURL*, %class.GURL** %39, align 8
  %41 = load %class.GURL*, %class.GURL** %3, align 8
  %42 = icmp eq %class.GURL* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %class.GURL* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %class.GURL* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %class.GURL* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %class.GURL, %class.GURL* %46, i64 -1
  %49 = getelementptr inbounds %class.GURL, %class.GURL* %47, i64 -1
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %48, %class.GURL* dereferenceable(120) %49) #12
  %50 = icmp eq %class.GURL* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %class.GURL*, %class.GURL** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %class.GURL* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %class.GURL* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %class.GURL* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %class.GURL*
  %60 = icmp eq %class.GURL* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %class.GURL* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %class.GURL, %class.GURL* %62, i64 -1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %63) #12
  %64 = icmp eq %class.GURL* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #13
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !8}
!28 = distinct !{!28, !10}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !8}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !8}
!37 = distinct !{!37, !10}
!38 = distinct !{!38, !10}
!39 = distinct !{!39, !8}
!40 = !{i8 0, i8 2}
!41 = !{!42}
!42 = distinct !{!42, !43}
!43 = distinct !{!43, !"LVerDomain"}
!44 = !{!45}
!45 = distinct !{!45, !43}
!46 = distinct !{!46, !8}
!47 = distinct !{!47, !10}
!48 = distinct !{!48, !10}
!49 = distinct !{!49, !8}
!50 = !{!51}
!51 = distinct !{!51, !52}
!52 = distinct !{!52, !"LVerDomain"}
!53 = !{!54}
!54 = distinct !{!54, !52}
!55 = distinct !{!55, !8}
!56 = distinct !{!56, !10}
!57 = distinct !{!57, !10}
!58 = distinct !{!58, !8}
!59 = !{!60}
!60 = distinct !{!60, !61}
!61 = distinct !{!61, !"LVerDomain"}
!62 = !{!63}
!63 = distinct !{!63, !61}
!64 = distinct !{!64, !8}
!65 = distinct !{!65, !10}
!66 = distinct !{!66, !10}
!67 = distinct !{!67, !8}
!68 = !{!69}
!69 = distinct !{!69, !70}
!70 = distinct !{!70, !"LVerDomain"}
!71 = !{!72}
!72 = distinct !{!72, !70}
!73 = distinct !{!73, !8}
!74 = distinct !{!74, !10}
!75 = distinct !{!75, !10}
!76 = distinct !{!76, !8}
!77 = !{!78}
!78 = distinct !{!78, !79}
!79 = distinct !{!79, !"LVerDomain"}
!80 = !{!81}
!81 = distinct !{!81, !79}
!82 = distinct !{!82, !8}
!83 = distinct !{!83, !10}
!84 = distinct !{!84, !10}
!85 = distinct !{!85, !8}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!88 = distinct !{!88, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!89 = !{!90}
!90 = distinct !{!90, !91, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!91 = distinct !{!91, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!92 = !{!93}
!93 = distinct !{!93, !94}
!94 = distinct !{!94, !"LVerDomain"}
!95 = !{!96}
!96 = distinct !{!96, !94}
!97 = distinct !{!97, !8}
!98 = distinct !{!98, !10}
!99 = distinct !{!99, !10}
!100 = distinct !{!100, !8}
!101 = !{!102}
!102 = distinct !{!102, !103}
!103 = distinct !{!103, !"LVerDomain"}
!104 = !{!105}
!105 = distinct !{!105, !103}
!106 = distinct !{!106, !8}
!107 = distinct !{!107, !10}
!108 = distinct !{!108, !10}
!109 = distinct !{!109, !8}
!110 = !{!111}
!111 = distinct !{!111, !112}
!112 = distinct !{!112, !"LVerDomain"}
!113 = !{!114}
!114 = distinct !{!114, !112}
!115 = distinct !{!115, !8}
!116 = distinct !{!116, !10}
!117 = distinct !{!117, !10}
!118 = distinct !{!118, !8}
!119 = !{!120}
!120 = distinct !{!120, !121}
!121 = distinct !{!121, !"LVerDomain"}
!122 = !{!123}
!123 = distinct !{!123, !121}
!124 = distinct !{!124, !8}
!125 = distinct !{!125, !10}
!126 = distinct !{!126, !10}
!127 = distinct !{!127, !8}
!128 = !{!129}
!129 = distinct !{!129, !130}
!130 = distinct !{!130, !"LVerDomain"}
!131 = !{!132}
!132 = distinct !{!132, !130}
!133 = distinct !{!133, !8}
!134 = distinct !{!134, !10}
!135 = distinct !{!135, !10}
!136 = distinct !{!136, !8}
!137 = !{!138}
!138 = distinct !{!138, !139}
!139 = distinct !{!139, !"LVerDomain"}
!140 = !{!141}
!141 = distinct !{!141, !139}
!142 = distinct !{!142, !8}
!143 = distinct !{!143, !10}
!144 = distinct !{!144, !10}
!145 = distinct !{!145, !8}
!146 = distinct !{!146, !8}
!147 = distinct !{!147, !10}
!148 = distinct !{!148, !149, !8}
!149 = !{!"llvm.loop.unroll.runtime.disable"}
!150 = !{!151}
!151 = distinct !{!151, !152}
!152 = distinct !{!152, !"LVerDomain"}
!153 = !{!154}
!154 = distinct !{!154, !152}
!155 = distinct !{!155, !8}
!156 = distinct !{!156, !10}
!157 = distinct !{!157, !10}
!158 = distinct !{!158, !8}
!159 = !{!160}
!160 = distinct !{!160, !161}
!161 = distinct !{!161, !"LVerDomain"}
!162 = !{!163}
!163 = distinct !{!163, !161}
!164 = distinct !{!164, !8}
!165 = distinct !{!165, !10}
!166 = distinct !{!166, !10}
!167 = distinct !{!167, !8}
!168 = !{!169}
!169 = distinct !{!169, !170}
!170 = distinct !{!170, !"LVerDomain"}
!171 = !{!172}
!172 = distinct !{!172, !170}
!173 = distinct !{!173, !8}
!174 = distinct !{!174, !10}
!175 = distinct !{!175, !10}
!176 = distinct !{!176, !8}
!177 = !{!178}
!178 = distinct !{!178, !179}
!179 = distinct !{!179, !"LVerDomain"}
!180 = !{!181}
!181 = distinct !{!181, !179}
!182 = distinct !{!182, !8}
!183 = distinct !{!183, !10}
!184 = distinct !{!184, !10}
!185 = distinct !{!185, !8}
