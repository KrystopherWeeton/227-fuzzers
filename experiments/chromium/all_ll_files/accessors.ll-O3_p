; ModuleID = '../../v8/src/builtins/accessors.cc'
source_filename = "../../v8/src/builtins/accessors.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.1522" = type { %"struct.std::__1::__atomic_base.1523" }
%"struct.std::__1::__atomic_base.1523" = type { %"struct.std::__1::__atomic_base.1524" }
%"struct.std::__1::__atomic_base.1524" = type { %"struct.std::__1::__cxx_atomic_impl.1525" }
%"struct.std::__1::__cxx_atomic_impl.1525" = type { %"struct.std::__1::__cxx_atomic_base_impl.1526" }
%"struct.std::__1::__cxx_atomic_base_impl.1526" = type { i32 }
%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.542" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.140", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.20", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.20", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.20", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.20", i64, i64, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.30", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.162", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.20", i64, i8, %"struct.std::__1::atomic.20", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.166", %"class.std::__1::vector.166", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.315", %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.360", %"class.std::__1::unique_ptr.399", %"class.std::__1::unique_ptr.429", %"class.std::__1::unique_ptr.435", %"class.std::__1::unique_ptr.445", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr.475", %"class.std::__1::shared_ptr.481", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.504", %"class.std::__1::unique_ptr.530", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.536", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.549", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.331", i8, [7 x i8], %"class.std::__1::unordered_map.555", %"class.std::__1::unordered_map.581", %"class.std::__1::unordered_map.555", %"class.std::__1::unordered_map.605", %"class.std::__1::vector.633", i8, %"class.std::__1::unique_ptr.640", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.3", %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.17", [4 x i8] }>
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5", %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25" }
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.646", %"class.std::__1::unique_ptr.667", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.677", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.866", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.879", void (i32, %"class.v8::SharedArrayBuffer"*, i64, i64, double, %"class.v8::Isolate::AtomicsWaitWakeHandle"*, i8*)*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.889", void (%"class.v8::Context"*, %"class.v8::Module"*, %"class.v8::Object"*)*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.900", %"struct.std::__1::atomic.153", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.975", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1021"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1032", i32, i8, i8, i32, i32, %"class.std::__1::vector.1038", %"class.std::__1::vector.1038", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1045", i64, %"class.std::__1::unordered_map.1046", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.542", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.161", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1102", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1140", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, %"class.v8::Value"* (%"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Array"*)*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1174", %"class.std::__1::vector.1178", %"class.std::__1::vector.1178", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.0", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.0" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.646" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.140", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.647", %"class.std::__1::unique_ptr.661" }
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.650" }
%"class.std::__1::vector.650" = type { %"class.std::__1::__vector_base.651" }
%"class.std::__1::__vector_base.651" = type { %"class.std::__1::unique_ptr.652"*, %"class.std::__1::unique_ptr.652"*, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.1503" }
%"class.std::__1::__compressed_pair.1503" = type { %"struct.std::__1::__compressed_pair_elem.1504" }
%"struct.std::__1::__compressed_pair_elem.1504" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.std::__1::unique_ptr.652"* }
%"class.std::__1::unique_ptr.661" = type { %"class.std::__1::__compressed_pair.662" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.663" }
%"struct.std::__1::__compressed_pair_elem.663" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.670", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.670" = type { %"struct.std::__1::__atomic_base.671" }
%"struct.std::__1::__atomic_base.671" = type { %"struct.std::__1::__cxx_atomic_impl.672" }
%"struct.std::__1::__cxx_atomic_impl.672" = type { %"struct.std::__1::__cxx_atomic_base_impl.673" }
%"struct.std::__1::__cxx_atomic_base_impl.673" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.677" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.678", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.678" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.679", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.679" = type { %"class.std::__1::__vector_base.680" }
%"class.std::__1::__vector_base.680" = type { %"class.std::__1::unique_ptr.681"*, %"class.std::__1::unique_ptr.681"*, %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::unique_ptr.681" = type opaque
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.std::__1::unique_ptr.681"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.687", %"class.std::__1::unique_ptr.693", %"struct.std::__1::atomic.153", %"class.std::__1::unique_ptr.699", %"class.std::__1::unique_ptr.705", %"class.std::__1::unique_ptr.711", %"class.std::__1::unique_ptr.717", %"class.std::__1::unique_ptr.723", %"class.std::__1::set.729", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.687" = type { %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.705" = type { %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.717" = type { %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.729" = type { %"class.std::__1::__tree.730" }
%"class.std::__1::__tree.730" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.731", %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.738" }
%"class.v8::internal::TaggedImpl.738" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::Deoptimizer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::JSFunction", %"class.v8::internal::Code", i32, i8, i64, i32, i8, i32, i32, %"class.v8::internal::FrameDescription"*, i32, %"class.v8::internal::FrameDescription"**, i64, i64, i64, i64, i32, i64, %"class.v8::internal::TranslatedState", %"class.std::__1::vector.776", %"class.std::__1::unique_ptr.783" }
%"class.v8::internal::JSFunction" = type { %"class.v8::internal::JSFunctionOrBoundFunction" }
%"class.v8::internal::JSFunctionOrBoundFunction" = type { %"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" }
%"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FrameDescription" = type { i64, i32, %"class.v8::internal::RegisterValues", i64, i64, i64, i64, i64, i64, [1 x i64] }
%"class.v8::internal::RegisterValues" = type { [16 x i64], [16 x %"class.v8::internal::Float64"] }
%"class.v8::internal::Float64" = type { i64 }
%"class.v8::internal::TranslatedState" = type <{ i32, [4 x i8], %"class.std::__1::vector.739", %"class.v8::internal::Isolate"*, i64, i32, i32, %"class.std::__1::deque.763", %"class.v8::internal::Handle.775", %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.std::__1::vector.739" = type { %"class.std::__1::__vector_base.740" }
%"class.std::__1::__vector_base.740" = type { %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"*, %"class.std::__1::__compressed_pair.758" }
%"class.v8::internal::TranslatedFrame" = type <{ i32, %"class.v8::internal::BytecodeOffset", %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::Handle.741", i32, i32, i32, [4 x i8], %"class.std::__1::deque", %"class.v8::base::Optional.753", [6 x i8] }>
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle.741" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.749" }
%"struct.std::__1::__split_buffer" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.std::__1::__compressed_pair.744" }
%"class.v8::internal::TranslatedValue" = type { i8, i8, %"class.v8::internal::TranslatedState"*, %"class.v8::internal::Handle.742", %union.anon.743 }
%"class.v8::internal::Handle.742" = type { %"class.v8::internal::HandleBase" }
%union.anon.743 = type { %"class.v8::internal::Object" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.745" }
%"struct.std::__1::__compressed_pair_elem.745" = type { %"class.v8::internal::TranslatedValue"** }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::base::Optional.753" = type { %"class.v8::base::internal::OptionalBase.754" }
%"class.v8::base::internal::OptionalBase.754" = type { %"struct.v8::base::internal::OptionalStorage.755" }
%"struct.v8::base::internal::OptionalStorage.755" = type { %"struct.v8::base::internal::OptionalStorageBase.756" }
%"struct.v8::base::internal::OptionalStorageBase.756" = type { i8, %union.anon.757 }
%union.anon.757 = type { i8 }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.v8::internal::TranslatedFrame"* }
%"class.std::__1::deque.763" = type { %"class.std::__1::__deque_base.764" }
%"class.std::__1::__deque_base.764" = type { %"struct.std::__1::__split_buffer.765", i64, %"class.std::__1::__compressed_pair.771" }
%"struct.std::__1::__split_buffer.765" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"class.std::__1::__compressed_pair.766" }
%"struct.v8::internal::TranslatedState::ObjectPosition" = type { i32, i32 }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"** }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::internal::Handle.775" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackVector" = type { %"class.v8::internal::TorqueGeneratedFeedbackVector" }
%"class.v8::internal::TorqueGeneratedFeedbackVector" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"class.std::__1::vector.776" = type { %"class.std::__1::__vector_base.777" }
%"class.std::__1::__vector_base.777" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"class.std::__1::__compressed_pair.778" }
%"struct.v8::internal::Deoptimizer::ValueToMaterialize" = type { i64, %"class.v8::internal::TranslatedFrame::iterator" }
%"class.v8::internal::TranslatedFrame::iterator" = type <{ %"class.std::__1::__deque_iterator", i32, [4 x i8] }>
%"class.std::__1::__deque_iterator" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"* }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.779" }
%"struct.std::__1::__compressed_pair_elem.779" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"* }
%"class.std::__1::unique_ptr.783" = type { %"class.std::__1::__compressed_pair.784" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.785" }
%"struct.std::__1::__compressed_pair_elem.785" = type { %"class.v8::internal::CodeTracer::Scope"* }
%"class.v8::internal::CodeTracer::Scope" = type { %"class.v8::internal::CodeTracer"* }
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.795", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.795" = type { %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.801", %"class.v8::internal::DetachableVector.802", %"class.v8::internal::DetachableVector.801", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.802" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.801" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.std::__1::unique_ptr.789", %"class.std::__1::unique_ptr.482" }
%"class.std::__1::unique_ptr.789" = type { %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.791" }
%"struct.std::__1::__compressed_pair_elem.791" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.485", %"class.std::__1::set.493" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.485" = type { %"class.std::__1::__tree.486" }
%"class.std::__1::__tree.486" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.487", %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::set.493" = type { %"class.std::__1::__tree.494" }
%"class.std::__1::__tree.494" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.487", %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::internal::InnerPointerToCodeCache" = type { %"class.v8::internal::Isolate"*, [1024 x %"struct.v8::internal::InnerPointerToCodeCache::InnerPointerToCodeCacheEntry"] }
%"struct.v8::internal::InnerPointerToCodeCache::InnerPointerToCodeCacheEntry" = type { i64, %"class.v8::internal::Code", %"class.v8::internal::SafepointEntry" }
%"class.v8::internal::SafepointEntry" = type <{ i32, [4 x i8], i8*, i8*, i32, [4 x i8] }>
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.803", %"class.std::__1::vector.809", %"class.std::__1::unique_ptr.816", %"class.std::__1::vector.823", %"class.std::__1::unique_ptr.830", i64, %"class.std::__1::vector.836", %"class.std::__1::vector.844", %"class.std::__1::vector.852", i8, i8, i32 }
%"class.std::__1::unique_ptr.803" = type { %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.809" = type { %"class.std::__1::__vector_base.810" }
%"class.std::__1::__vector_base.810" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.811" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.816" = type { %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { %"class.v8::internal::GlobalHandles::NodeSpace.819"* }
%"class.v8::internal::GlobalHandles::NodeSpace.819" = type opaque
%"class.std::__1::vector.823" = type { %"class.std::__1::__vector_base.824" }
%"class.std::__1::__vector_base.824" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.825" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.825" = type { %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.830" = type { %"class.std::__1::__compressed_pair.831" }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.836" = type { %"class.std::__1::__vector_base.837" }
%"class.std::__1::__vector_base.837" = type { %"struct.std::__1::pair.838"*, %"struct.std::__1::pair.838"*, %"class.std::__1::__compressed_pair.839" }
%"struct.std::__1::pair.838" = type opaque
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"struct.std::__1::pair.838"* }
%"class.std::__1::vector.844" = type { %"class.std::__1::__vector_base.845" }
%"class.std::__1::__vector_base.845" = type { %"struct.std::__1::pair.846"*, %"struct.std::__1::pair.846"*, %"class.std::__1::__compressed_pair.847" }
%"struct.std::__1::pair.846" = type opaque
%"class.std::__1::__compressed_pair.847" = type { %"struct.std::__1::__compressed_pair_elem.848" }
%"struct.std::__1::__compressed_pair_elem.848" = type { %"struct.std::__1::pair.846"* }
%"class.std::__1::vector.852" = type { %"class.std::__1::__vector_base.853" }
%"class.std::__1::__vector_base.853" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.854" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.859", %"class.std::__1::vector.866" }
%"class.std::__1::vector.859" = type { %"class.std::__1::__vector_base.860" }
%"class.std::__1::__vector_base.860" = type { i64**, i64**, %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.873" }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.866" = type { %"class.std::__1::__vector_base.867" }
%"class.std::__1::__vector_base.867" = type { i32*, i32*, %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.869" }
%"struct.std::__1::__compressed_pair_elem.869" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.879" = type { %"struct.std::__1::__atomic_base.880" }
%"struct.std::__1::__atomic_base.880" = type { %"struct.std::__1::__cxx_atomic_impl.881" }
%"struct.std::__1::__cxx_atomic_impl.881" = type { %"struct.std::__1::__cxx_atomic_base_impl.882" }
%"struct.std::__1::__cxx_atomic_base_impl.882" = type { i32 }
%"class.v8::SharedArrayBuffer" = type { i8 }
%"class.v8::Isolate::AtomicsWaitWakeHandle" = type { i8 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.889" = type { %"struct.std::__1::__atomic_base.890" }
%"struct.std::__1::__atomic_base.890" = type { %"struct.std::__1::__cxx_atomic_impl.891" }
%"struct.std::__1::__cxx_atomic_impl.891" = type { %"struct.std::__1::__cxx_atomic_base_impl.892" }
%"struct.std::__1::__cxx_atomic_base_impl.892" = type { i32 }
%"class.v8::Context" = type { i8 }
%"class.v8::Module" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.894" }
%"class.std::__1::__compressed_pair.894" = type { %"struct.std::__1::__compressed_pair_elem.895" }
%"struct.std::__1::__compressed_pair_elem.895" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.896 }
%union.anon.896 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.900" = type { %"class.std::__1::__hash_table.901" }
%"class.std::__1::__hash_table.901" = type <{ %"class.std::__1::unique_ptr.902", %"class.std::__1::__compressed_pair.912", %"class.std::__1::__compressed_pair.917", %"class.std::__1::__compressed_pair.920", [4 x i8] }>
%"class.std::__1::unique_ptr.902" = type { %"class.std::__1::__compressed_pair.903" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.904", %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.904" = type { %"struct.std::__1::__hash_node_base.905"** }
%"struct.std::__1::__hash_node_base.905" = type { %"struct.std::__1::__hash_node_base.905"* }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"class.std::__1::__bucket_list_deallocator.907" }
%"class.std::__1::__bucket_list_deallocator.907" = type { %"class.std::__1::__compressed_pair.908" }
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"struct.std::__1::__hash_node_base.905" }
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::atomic.153" = type { %"struct.std::__1::__atomic_base.154" }
%"struct.std::__1::__atomic_base.154" = type { %"struct.std::__1::__cxx_atomic_impl.155" }
%"struct.std::__1::__cxx_atomic_impl.155" = type { %"struct.std::__1::__cxx_atomic_base_impl.156" }
%"struct.std::__1::__cxx_atomic_base_impl.156" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.926", %"class.v8::internal::Handle.932", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.933", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.926" = type { %"class.std::__1::__compressed_pair.927" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.928" }
%"struct.std::__1::__compressed_pair_elem.928" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.932" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.933" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.934", %"class.std::__1::vector.940", %"class.std::__1::unique_ptr.948", %"class.std::__1::unique_ptr.954", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.960", %"class.std::__1::vector.966", %"struct.std::__1::pair.974" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.936" }
%"struct.std::__1::__compressed_pair_elem.936" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.940" = type { %"class.std::__1::__vector_base.941" }
%"class.std::__1::__vector_base.941" = type { %"class.std::__1::unique_ptr.942"*, %"class.std::__1::unique_ptr.942"*, %"class.std::__1::__compressed_pair.943" }
%"class.std::__1::unique_ptr.942" = type opaque
%"class.std::__1::__compressed_pair.943" = type { %"struct.std::__1::__compressed_pair_elem.944" }
%"struct.std::__1::__compressed_pair_elem.944" = type { %"class.std::__1::unique_ptr.942"* }
%"class.std::__1::unique_ptr.948" = type { %"class.std::__1::__compressed_pair.949" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.950" }
%"struct.std::__1::__compressed_pair_elem.950" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.954" = type { %"class.std::__1::__compressed_pair.955" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.956" }
%"struct.std::__1::__compressed_pair_elem.956" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.960" = type { %"class.std::__1::__compressed_pair.961" }
%"class.std::__1::__compressed_pair.961" = type { %"struct.std::__1::__compressed_pair_elem.962" }
%"struct.std::__1::__compressed_pair_elem.962" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.966" = type { %"class.std::__1::__vector_base.967" }
%"class.std::__1::__vector_base.967" = type { %"struct.std::__1::pair.968"*, %"struct.std::__1::pair.968"*, %"class.std::__1::__compressed_pair.969" }
%"struct.std::__1::pair.968" = type opaque
%"class.std::__1::__compressed_pair.969" = type { %"struct.std::__1::__compressed_pair_elem.970" }
%"struct.std::__1::__compressed_pair_elem.970" = type { %"struct.std::__1::pair.968"* }
%"struct.std::__1::pair.974" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.1"*, i16, i8*)*, i8* }
%"class.v8::Local.1" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.975" = type { %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.978", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.978" = type { %"class.std::__1::__hash_table.979" }
%"class.std::__1::__hash_table.979" = type <{ %"class.std::__1::unique_ptr.980", %"class.std::__1::__compressed_pair.990", %"class.std::__1::__compressed_pair.995", %"class.std::__1::__compressed_pair.999", [4 x i8] }>
%"class.std::__1::unique_ptr.980" = type { %"class.std::__1::__compressed_pair.981" }
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.982", %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.982" = type { %"struct.std::__1::__hash_node_base.983"** }
%"struct.std::__1::__hash_node_base.983" = type { %"struct.std::__1::__hash_node_base.983"* }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"class.std::__1::__bucket_list_deallocator.985" }
%"class.std::__1::__bucket_list_deallocator.985" = type { %"class.std::__1::__compressed_pair.986" }
%"class.std::__1::__compressed_pair.986" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.991" }
%"struct.std::__1::__compressed_pair_elem.991" = type { %"struct.std::__1::__hash_node_base.983" }
%"class.std::__1::__compressed_pair.995" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.999" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque.1007" }
%"class.std::__1::deque.1007" = type { %"class.std::__1::__deque_base.1008" }
%"class.std::__1::__deque_base.1008" = type { %"struct.std::__1::__split_buffer.1009", i64, %"class.std::__1::__compressed_pair.1016" }
%"struct.std::__1::__split_buffer.1009" = type { %"struct.std::__1::pair.1010"**, %"struct.std::__1::pair.1010"**, %"struct.std::__1::pair.1010"**, %"class.std::__1::__compressed_pair.1011" }
%"struct.std::__1::pair.1010" = type opaque
%"class.std::__1::__compressed_pair.1011" = type { %"struct.std::__1::__compressed_pair_elem.1012" }
%"struct.std::__1::__compressed_pair_elem.1012" = type { %"struct.std::__1::pair.1010"** }
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::String" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1021" = type { %"class.std::__1::__vector_base.1022" }
%"class.std::__1::__vector_base.1022" = type { %"class.v8::internal::Handle.742"*, %"class.v8::internal::Handle.742"*, %"class.std::__1::__compressed_pair.1023" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"class.v8::internal::Handle.742"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type { %"class.v8::MicrotaskQueue", i64, i64, i64, i64*, i64, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"*, i32, i32, i32, i8, %"class.std::__1::vector.1028" }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.std::__1::vector.1028" = type { %"class.std::__1::__vector_base.1029" }
%"class.std::__1::__vector_base.1029" = type { %"struct.std::__1::pair.1010"*, %"struct.std::__1::pair.1010"*, %"class.std::__1::__compressed_pair.1030" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.1031" }
%"struct.std::__1::__compressed_pair_elem.1031" = type { %"struct.std::__1::pair.1010"* }
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.884", i32, %"class.v8::Local.1" }
%"class.v8::Local.884" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1032" = type { %"class.std::__1::__compressed_pair.1033" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.1034" }
%"struct.std::__1::__compressed_pair_elem.1034" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.859", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1038" = type { %"class.std::__1::__vector_base.1039" }
%"class.std::__1::__vector_base.1039" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1040" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.1041" }
%"struct.std::__1::__compressed_pair_elem.1041" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1045" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1046" = type { %"class.std::__1::__hash_table.1047" }
%"class.std::__1::__hash_table.1047" = type <{ %"class.std::__1::unique_ptr.1048", %"class.std::__1::__compressed_pair.1058", %"class.std::__1::__compressed_pair.1063", %"class.std::__1::__compressed_pair.1066", [4 x i8] }>
%"class.std::__1::unique_ptr.1048" = type { %"class.std::__1::__compressed_pair.1049" }
%"class.std::__1::__compressed_pair.1049" = type { %"struct.std::__1::__compressed_pair_elem.1050", %"struct.std::__1::__compressed_pair_elem.1052" }
%"struct.std::__1::__compressed_pair_elem.1050" = type { %"struct.std::__1::__hash_node_base.1051"** }
%"struct.std::__1::__hash_node_base.1051" = type { %"struct.std::__1::__hash_node_base.1051"* }
%"struct.std::__1::__compressed_pair_elem.1052" = type { %"class.std::__1::__bucket_list_deallocator.1053" }
%"class.std::__1::__bucket_list_deallocator.1053" = type { %"class.std::__1::__compressed_pair.1054" }
%"class.std::__1::__compressed_pair.1054" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.1059" }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"struct.std::__1::__hash_node_base.1051" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1066" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.161" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1070", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1099", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1100", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1070" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1095, %union.anon.1097, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1095 = type { i64 }
%union.anon.1097 = type { i64 }
%"class.std::__1::weak_ptr.1099" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.20", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.161" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1100" = type { %"class.v8::PersistentBase.1101" }
%"class.v8::PersistentBase.1101" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1071", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1071" = type { %"class.std::__1::__hash_table.1072" }
%"class.std::__1::__hash_table.1072" = type <{ %"class.std::__1::unique_ptr.1073", %"class.std::__1::__compressed_pair.1083", %"class.std::__1::__compressed_pair.1088", %"class.std::__1::__compressed_pair.1091", [4 x i8] }>
%"class.std::__1::unique_ptr.1073" = type { %"class.std::__1::__compressed_pair.1074" }
%"class.std::__1::__compressed_pair.1074" = type { %"struct.std::__1::__compressed_pair_elem.1075", %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1075" = type { %"struct.std::__1::__hash_node_base.1076"** }
%"struct.std::__1::__hash_node_base.1076" = type { %"struct.std::__1::__hash_node_base.1076"* }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.std::__1::__bucket_list_deallocator.1078" }
%"class.std::__1::__bucket_list_deallocator.1078" = type { %"class.std::__1::__compressed_pair.1079" }
%"class.std::__1::__compressed_pair.1079" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1083" = type { %"struct.std::__1::__compressed_pair_elem.1084" }
%"struct.std::__1::__compressed_pair_elem.1084" = type { %"struct.std::__1::__hash_node_base.1076" }
%"class.std::__1::__compressed_pair.1088" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1102" = type { %"class.std::__1::__compressed_pair.1103" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1131", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1107", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1111", %"class.std::__1::unique_ptr.1117", %"class.std::__1::unique_ptr.475", %"class.std::__1::vector.1123", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1107" = type { %"struct.std::__1::__atomic_base.1108" }
%"struct.std::__1::__atomic_base.1108" = type { %"struct.std::__1::__cxx_atomic_impl.1109" }
%"struct.std::__1::__cxx_atomic_impl.1109" = type { %"struct.std::__1::__cxx_atomic_base_impl.1110" }
%"struct.std::__1::__cxx_atomic_base_impl.1110" = type { i32 }
%"class.std::__1::unique_ptr.1111" = type { %"class.std::__1::__compressed_pair.1112" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.1113" }
%"struct.std::__1::__compressed_pair_elem.1113" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.859" }
%"class.std::__1::unique_ptr.1117" = type { %"class.std::__1::__compressed_pair.1118" }
%"class.std::__1::__compressed_pair.1118" = type { %"struct.std::__1::__compressed_pair_elem.1119" }
%"struct.std::__1::__compressed_pair_elem.1119" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1123" = type { %"class.std::__1::__vector_base.1124" }
%"class.std::__1::__vector_base.1124" = type { %"struct.std::__1::pair.1125"*, %"struct.std::__1::pair.1125"*, %"class.std::__1::__compressed_pair.1126" }
%"struct.std::__1::pair.1125" = type opaque
%"class.std::__1::__compressed_pair.1126" = type { %"struct.std::__1::__compressed_pair_elem.1127" }
%"struct.std::__1::__compressed_pair_elem.1127" = type { %"struct.std::__1::pair.1125"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.20"*, %"class.std::__1::unique_ptr.98" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.39", %"class.std::__1::vector.39", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.41" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.46" }
%"class.std::__1::__hash_table.46" = type <{ %"class.std::__1::unique_ptr.47", %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.64", [4 x i8] }>
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49", %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.std::__1::__hash_node_base.50"** }
%"struct.std::__1::__hash_node_base.50" = type { %"struct.std::__1::__hash_node_base.50"* }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.std::__1::__bucket_list_deallocator.52" }
%"class.std::__1::__bucket_list_deallocator.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.std::__1::__hash_node_base.50" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.25", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.87", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.20"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.25", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.69", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.69" = type { %"struct.std::__1::__atomic_base.70" }
%"struct.std::__1::__atomic_base.70" = type { %"struct.std::__1::__cxx_atomic_impl.71" }
%"struct.std::__1::__cxx_atomic_impl.71" = type { %"struct.std::__1::__cxx_atomic_base_impl.72" }
%"struct.std::__1::__cxx_atomic_base_impl.72" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.73" }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.75" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::atomic.87" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__cxx_atomic_impl.89" }
%"struct.std::__1::__cxx_atomic_impl.89" = type { %"struct.std::__1::__cxx_atomic_base_impl.90" }
%"struct.std::__1::__cxx_atomic_base_impl.90" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.91", i8, [7 x i8] }>
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { i64*, i64*, %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.20", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1131" = type { %"class.std::__1::__compressed_pair.1132" }
%"class.std::__1::__compressed_pair.1132" = type { %"struct.std::__1::__compressed_pair_elem.1133" }
%"struct.std::__1::__compressed_pair_elem.1133" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1140" = type { %"class.std::__1::__compressed_pair.1141" }
%"class.std::__1::__compressed_pair.1141" = type { %"struct.std::__1::__compressed_pair_elem.1142" }
%"struct.std::__1::__compressed_pair_elem.1142" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.885", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.885" = type { %"class.v8::Context"* }
%"class.v8::Array" = type { i8 }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1148" }
%"class.std::__1::unordered_map.1148" = type { %"class.std::__1::__hash_table.1149" }
%"class.std::__1::__hash_table.1149" = type <{ %"class.std::__1::unique_ptr.1150", %"class.std::__1::__compressed_pair.1160", %"class.std::__1::__compressed_pair.1165", %"class.std::__1::__compressed_pair.1168", [4 x i8] }>
%"class.std::__1::unique_ptr.1150" = type { %"class.std::__1::__compressed_pair.1151" }
%"class.std::__1::__compressed_pair.1151" = type { %"struct.std::__1::__compressed_pair_elem.1152", %"struct.std::__1::__compressed_pair_elem.1154" }
%"struct.std::__1::__compressed_pair_elem.1152" = type { %"struct.std::__1::__hash_node_base.1153"** }
%"struct.std::__1::__hash_node_base.1153" = type { %"struct.std::__1::__hash_node_base.1153"* }
%"struct.std::__1::__compressed_pair_elem.1154" = type { %"class.std::__1::__bucket_list_deallocator.1155" }
%"class.std::__1::__bucket_list_deallocator.1155" = type { %"class.std::__1::__compressed_pair.1156" }
%"class.std::__1::__compressed_pair.1156" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1160" = type { %"struct.std::__1::__compressed_pair_elem.1161" }
%"struct.std::__1::__compressed_pair_elem.1161" = type { %"struct.std::__1::__hash_node_base.1153" }
%"class.std::__1::__compressed_pair.1165" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1168" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::atomic.1174" = type { %"struct.std::__1::__atomic_base.1175" }
%"struct.std::__1::__atomic_base.1175" = type { %"struct.std::__1::__cxx_atomic_impl.1176" }
%"struct.std::__1::__cxx_atomic_impl.1176" = type { %"struct.std::__1::__cxx_atomic_base_impl.1177" }
%"struct.std::__1::__cxx_atomic_base_impl.1177" = type { %"class.std::__1::vector.1178"* }
%"class.std::__1::vector.1178" = type { %"class.std::__1::__vector_base.1179" }
%"class.std::__1::__vector_base.1179" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1180" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1180" = type { %"struct.std::__1::__compressed_pair_elem.1181" }
%"struct.std::__1::__compressed_pair_elem.1181" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl.32" }
%"struct.std::__1::__cxx_atomic_impl.32" = type { %"struct.std::__1::__cxx_atomic_base_impl.33" }
%"struct.std::__1::__cxx_atomic_base_impl.33" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.34" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.104" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %"struct.std::__1::pair.106"*, %"struct.std::__1::pair.106"*, %"class.std::__1::__compressed_pair.107" }
%"struct.std::__1::pair.106" = type { i32, i64 }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::pair.106"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.20", i32, %"struct.std::__1::atomic.20", %"class.v8::base::Mutex", %"struct.std::__1::atomic.20" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.112" }
%"class.std::__1::unordered_map.112" = type { %"class.std::__1::__hash_table.113" }
%"class.std::__1::__hash_table.113" = type <{ %"class.std::__1::unique_ptr.114", %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.129", %"class.std::__1::__compressed_pair.134", [4 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116", %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::__hash_node_base.117"** }
%"struct.std::__1::__hash_node_base.117" = type { %"struct.std::__1::__hash_node_base.117"* }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.std::__1::__bucket_list_deallocator.119" }
%"class.std::__1::__bucket_list_deallocator.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::__hash_node_base.117" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.153", %"struct.std::__1::atomic.157", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.20" }
%"struct.std::__1::atomic.157" = type { %"struct.std::__1::__atomic_base.158" }
%"struct.std::__1::__atomic_base.158" = type { %"struct.std::__1::__cxx_atomic_impl.159" }
%"struct.std::__1::__cxx_atomic_impl.159" = type { %"struct.std::__1::__cxx_atomic_base_impl.160" }
%"struct.std::__1::__cxx_atomic_base_impl.160" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.162" = type { %"struct.std::__1::__atomic_base.163" }
%"struct.std::__1::__atomic_base.163" = type { %"struct.std::__1::__cxx_atomic_impl.164" }
%"struct.std::__1::__cxx_atomic_impl.164" = type { %"struct.std::__1::__cxx_atomic_base_impl.165" }
%"struct.std::__1::__cxx_atomic_base_impl.165" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.166" = type { %"class.std::__1::__vector_base.167" }
%"class.std::__1::__vector_base.167" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.168" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.227", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.std::__1::vector.288", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.182", %"class.std::__1::vector.183", %"class.std::__1::vector.190", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.182" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.183" = type { %"class.std::__1::__vector_base.184" }
%"class.std::__1::__vector_base.184" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.185" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.190" = type { %"class.std::__1::__vector_base.191" }
%"class.std::__1::__vector_base.191" = type { %"class.std::__1::unique_ptr.192"*, %"class.std::__1::unique_ptr.192"*, %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::unique_ptr.192" = type opaque
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.std::__1::unique_ptr.192"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.198", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.202", %"class.v8::internal::Worklist.204", %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.208", %"class.v8::internal::Worklist.210", %"class.v8::internal::Worklist.212" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.198" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.200" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.202" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.204" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.206" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.208" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.210" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.212" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.214", i8, i64 }
%"class.std::__1::vector.214" = type { %"class.std::__1::__vector_base.215" }
%"class.std::__1::__vector_base.215" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.230" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.182"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.230" = type { %"class.std::__1::__hash_table.231" }
%"class.std::__1::__hash_table.231" = type <{ %"class.std::__1::unique_ptr.232", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.247", %"class.std::__1::__compressed_pair.250", [4 x i8] }>
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234", %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"struct.std::__1::__hash_node_base.235"** }
%"struct.std::__1::__hash_node_base.235" = type { %"struct.std::__1::__hash_node_base.235"* }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.std::__1::__bucket_list_deallocator.237" }
%"class.std::__1::__bucket_list_deallocator.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.std::__1::__hash_node_base.235" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.257" }
%"class.std::__1::unordered_map.257" = type { %"class.std::__1::__hash_table.258" }
%"class.std::__1::__hash_table.258" = type <{ %"class.std::__1::unique_ptr.259", %"class.std::__1::__compressed_pair.269", %"class.std::__1::__compressed_pair.274", %"class.std::__1::__compressed_pair.277", [4 x i8] }>
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261", %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"struct.std::__1::__hash_node_base.262"** }
%"struct.std::__1::__hash_node_base.262" = type { %"struct.std::__1::__hash_node_base.262"* }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.std::__1::__bucket_list_deallocator.264" }
%"class.std::__1::__bucket_list_deallocator.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"struct.std::__1::__hash_node_base.262" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::vector.281" = type { %"class.std::__1::__vector_base.282" }
%"class.std::__1::__vector_base.282" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.288" = type { %"class.std::__1::__vector_base.289" }
%"class.std::__1::__vector_base.289" = type { %"struct.std::__1::pair.290"*, %"struct.std::__1::pair.290"*, %"class.std::__1::__compressed_pair.291" }
%"struct.std::__1::pair.290" = type opaque
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.std::__1::pair.290"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.296", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.281"], [3 x %"class.std::__1::vector.281"], i8, %"struct.std::__1::atomic.153", [6 x i8], %"class.std::__1::vector.281", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.306"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.306" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.331", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.324"], %"class.std::__1::unique_ptr.296" }
%"class.std::__1::vector.324" = type { %"class.std::__1::__vector_base.325" }
%"class.std::__1::__vector_base.325" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.363", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.367", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.372" }
%"struct.std::__1::atomic.363" = type { %"struct.std::__1::__atomic_base.364" }
%"struct.std::__1::__atomic_base.364" = type { %"struct.std::__1::__cxx_atomic_impl.365" }
%"struct.std::__1::__cxx_atomic_impl.365" = type { %"struct.std::__1::__cxx_atomic_base_impl.366" }
%"struct.std::__1::__cxx_atomic_base_impl.366" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.367" = type { %"struct.std::__1::__atomic_base.368" }
%"struct.std::__1::__atomic_base.368" = type { %"struct.std::__1::__cxx_atomic_impl.369" }
%"struct.std::__1::__cxx_atomic_impl.369" = type { %"struct.std::__1::__cxx_atomic_base_impl.370" }
%"struct.std::__1::__cxx_atomic_base_impl.370" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.372" = type { %"class.std::__1::__hash_table.373" }
%"class.std::__1::__hash_table.373" = type <{ %"class.std::__1::unique_ptr.374", %"class.std::__1::__compressed_pair.384", %"class.std::__1::__compressed_pair.389", %"class.std::__1::__compressed_pair.392", [4 x i8] }>
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376", %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"struct.std::__1::__hash_node_base.377"** }
%"struct.std::__1::__hash_node_base.377" = type { %"struct.std::__1::__hash_node_base.377"* }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.std::__1::__bucket_list_deallocator.379" }
%"class.std::__1::__bucket_list_deallocator.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"struct.std::__1::__hash_node_base.377" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.296", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.153", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.402", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.402" = type { %"class.std::__1::__hash_table.403" }
%"class.std::__1::__hash_table.403" = type <{ %"class.std::__1::unique_ptr.404", %"class.std::__1::__compressed_pair.414", %"class.std::__1::__compressed_pair.419", %"class.std::__1::__compressed_pair.422", [4 x i8] }>
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406", %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"struct.std::__1::__hash_node_base.407"** }
%"struct.std::__1::__hash_node_base.407" = type { %"struct.std::__1::__hash_node_base.407"* }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.std::__1::__bucket_list_deallocator.409" }
%"class.std::__1::__bucket_list_deallocator.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"struct.std::__1::__hash_node_base.407" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.438" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.481" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.500", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.482", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.500" = type { %"struct.std::__1::__atomic_base.501" }
%"struct.std::__1::__atomic_base.501" = type { %"struct.std::__1::__cxx_atomic_impl.502" }
%"struct.std::__1::__cxx_atomic_impl.502" = type { %"struct.std::__1::__cxx_atomic_base_impl.503" }
%"struct.std::__1::__cxx_atomic_base_impl.503" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.504" = type { %"class.std::__1::__hash_table.505" }
%"class.std::__1::__hash_table.505" = type <{ %"class.std::__1::unique_ptr.506", %"class.std::__1::__compressed_pair.516", %"class.std::__1::__compressed_pair.521", %"class.std::__1::__compressed_pair.524", [4 x i8] }>
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508", %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"struct.std::__1::__hash_node_base.509"** }
%"struct.std::__1::__hash_node_base.509" = type { %"struct.std::__1::__hash_node_base.509"* }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"class.std::__1::__bucket_list_deallocator.511" }
%"class.std::__1::__bucket_list_deallocator.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"struct.std::__1::__hash_node_base.509" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.542", %"class.std::__1::vector.542" }
%"class.std::__1::unique_ptr.549" = type { %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.331" = type { %"class.std::__1::__hash_table.332" }
%"class.std::__1::__hash_table.332" = type <{ %"class.std::__1::unique_ptr.333", %"class.std::__1::__compressed_pair.343", %"class.std::__1::__compressed_pair.348", %"class.std::__1::__compressed_pair.352", [4 x i8] }>
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335", %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.std::__1::__hash_node_base.336"** }
%"struct.std::__1::__hash_node_base.336" = type { %"struct.std::__1::__hash_node_base.336"* }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.std::__1::__bucket_list_deallocator.338" }
%"class.std::__1::__bucket_list_deallocator.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"struct.std::__1::__hash_node_base.336" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.581" = type { %"class.std::__1::__hash_table.582" }
%"class.std::__1::__hash_table.582" = type <{ %"class.std::__1::unique_ptr.583", %"class.std::__1::__compressed_pair.593", %"class.std::__1::__compressed_pair.598", %"class.std::__1::__compressed_pair.601", [4 x i8] }>
%"class.std::__1::unique_ptr.583" = type { %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585", %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"struct.std::__1::__hash_node_base.586"** }
%"struct.std::__1::__hash_node_base.586" = type { %"struct.std::__1::__hash_node_base.586"* }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.std::__1::__bucket_list_deallocator.588" }
%"class.std::__1::__bucket_list_deallocator.588" = type { %"class.std::__1::__compressed_pair.589" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"struct.std::__1::__hash_node_base.586" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.555" = type { %"class.std::__1::__hash_table.556" }
%"class.std::__1::__hash_table.556" = type <{ %"class.std::__1::unique_ptr.557", %"class.std::__1::__compressed_pair.567", %"class.std::__1::__compressed_pair.572", %"class.std::__1::__compressed_pair.575", [4 x i8] }>
%"class.std::__1::unique_ptr.557" = type { %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559", %"struct.std::__1::__compressed_pair_elem.561" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"struct.std::__1::__hash_node_base.560"** }
%"struct.std::__1::__hash_node_base.560" = type { %"struct.std::__1::__hash_node_base.560"* }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"class.std::__1::__bucket_list_deallocator.562" }
%"class.std::__1::__bucket_list_deallocator.562" = type { %"class.std::__1::__compressed_pair.563" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"struct.std::__1::__hash_node_base.560" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.605" = type { %"class.std::__1::__hash_table.606" }
%"class.std::__1::__hash_table.606" = type <{ %"class.std::__1::unique_ptr.607", %"class.std::__1::__compressed_pair.617", %"class.std::__1::__compressed_pair.622", %"class.std::__1::__compressed_pair.627", [4 x i8] }>
%"class.std::__1::unique_ptr.607" = type { %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609", %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.610"** }
%"struct.std::__1::__hash_node_base.610" = type { %"struct.std::__1::__hash_node_base.610"* }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.std::__1::__bucket_list_deallocator.612" }
%"class.std::__1::__bucket_list_deallocator.612" = type { %"class.std::__1::__compressed_pair.613" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"struct.std::__1::__hash_node_base.610" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::vector.633" = type { %"class.std::__1::__vector_base.634" }
%"class.std::__1::__vector_base.634" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.635" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.636" }
%"struct.std::__1::__compressed_pair_elem.636" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.640" = type { %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl.23" }
%"struct.std::__1::__cxx_atomic_impl.23" = type { %"struct.std::__1::__cxx_atomic_base_impl.24" }
%"struct.std::__1::__cxx_atomic_base_impl.24" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.20", i64, %"struct.std::__1::atomic.20" }
%"class.std::__1::vector.140" = type { %"class.std::__1::__vector_base.141" }
%"class.std::__1::__vector_base.141" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.142" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.542" = type { %"class.std::__1::__vector_base.543" }
%"class.std::__1::__vector_base.543" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.v8::internal::Object"* }
%"class.v8::Name" = type { i8 }
%"class.v8::PropertyCallbackInfo" = type { i64* }
%"class.v8::PropertyCallbackInfo.1187" = type { i64* }
%"class.v8::internal::Handle<v8::internal::AccessorInfo>::ObjectRef" = type { %"class.v8::internal::AccessorInfo" }
%"class.v8::internal::AccessorInfo" = type { %"class.v8::internal::TorqueGeneratedAccessorInfo" }
%"class.v8::internal::TorqueGeneratedAccessorInfo" = type { %"class.v8::internal::Struct" }
%"class.v8::internal::Struct" = type { %"class.v8::internal::TorqueGeneratedStruct" }
%"class.v8::internal::TorqueGeneratedStruct" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::RuntimeCallTimerScope" = type { %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer" }
%"class.v8::internal::RuntimeCallTimer" = type { %"class.v8::internal::RuntimeCallCounter"*, %"class.v8::base::AtomicValue", %"class.v8::base::TimeTicks", %"class.v8::base::TimeDelta" }
%"class.v8::internal::FieldIndex" = type { i64 }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }
%"class.v8::internal::LookupIterator" = type { i32, i32, i8, i32, %"class.v8::internal::PropertyDetails", %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1185", %"class.v8::internal::Handle.1188", %"class.v8::internal::Handle.1188", %"class.v8::internal::Handle.1191", %"class.v8::internal::Handle.1188", i64, %"class.v8::internal::InternalIndex" }
%"class.v8::internal::PropertyDetails" = type { i32 }
%"class.v8::internal::Handle.1185" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1191" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1188" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::InternalIndex" = type { i64 }
%"class.v8::internal::LookupIterator::Key" = type { %"class.v8::internal::Handle.1185", i64 }
%"class.v8::internal::MessageLocation" = type { %"class.v8::internal::Handle.1527", i32, i32, i32, %"class.v8::internal::Handle.741" }
%"class.v8::internal::Handle.1527" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.v8::internal::JSModuleNamespace" = type { %"class.v8::internal::TorqueGeneratedJSModuleNamespace" }
%"class.v8::internal::TorqueGeneratedJSModuleNamespace" = type { %"class.v8::internal::JSSpecialObject" }
%"class.v8::internal::JSSpecialObject" = type { %"class.v8::internal::TorqueGeneratedJSSpecialObject" }
%"class.v8::internal::TorqueGeneratedJSSpecialObject" = type { %"class.v8::internal::JSCustomElementsObject" }
%"class.v8::internal::JSCustomElementsObject" = type { %"class.v8::internal::TorqueGeneratedJSCustomElementsObject" }
%"class.v8::internal::TorqueGeneratedJSCustomElementsObject" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::Handle<v8::internal::JSFunction>::ObjectRef" = type { %"class.v8::internal::JSFunction" }
%"class.v8::internal::JavaScriptFrame" = type { %"class.v8::internal::CommonFrameWithJSLinkage" }
%"class.v8::internal::CommonFrameWithJSLinkage" = type { %"class.v8::internal::CommonFrame" }
%"class.v8::internal::CommonFrame" = type { %"class.v8::internal::StackFrame" }
%"class.v8::internal::StackFrame" = type { i32 (...)**, %"class.v8::internal::StackFrameIteratorBase"*, %"class.v8::internal::Isolate"*, %"struct.v8::internal::StackFrame::State" }
%"class.v8::internal::StackFrameIteratorBase" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::EntryFrame", %"class.v8::internal::ConstructEntryFrame", %"class.v8::internal::ExitFrame", %"class.v8::internal::WasmFrame", %"class.v8::internal::WasmToJsFrame", %"class.v8::internal::JsToWasmFrame", %"class.v8::internal::WasmDebugBreakFrame", %"class.v8::internal::CWasmEntryFrame", %"class.v8::internal::WasmExitFrame", %"class.v8::internal::WasmCompileLazyFrame", %"class.v8::internal::InterpretedFrame", %"class.v8::internal::BaselineFrame", %"class.v8::internal::OptimizedFrame", %"class.v8::internal::StubFrame", %"class.v8::internal::BuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame", %"class.v8::internal::InternalFrame", %"class.v8::internal::ConstructFrame", %"class.v8::internal::BuiltinFrame", %"class.v8::internal::BuiltinExitFrame", %"class.v8::internal::NativeFrame", %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackHandler"*, i8, [7 x i8] }>
%"class.v8::internal::EntryFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::TypedFrame" = type { %"class.v8::internal::CommonFrame" }
%"class.v8::internal::ConstructEntryFrame" = type { %"class.v8::internal::EntryFrame" }
%"class.v8::internal::ExitFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::WasmFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::WasmToJsFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::JsToWasmFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::WasmDebugBreakFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::CWasmEntryFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::WasmExitFrame" = type { %"class.v8::internal::WasmFrame" }
%"class.v8::internal::WasmCompileLazyFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::InterpretedFrame" = type { %"class.v8::internal::UnoptimizedFrame" }
%"class.v8::internal::UnoptimizedFrame" = type { %"class.v8::internal::JavaScriptFrame" }
%"class.v8::internal::BaselineFrame" = type { %"class.v8::internal::UnoptimizedFrame" }
%"class.v8::internal::OptimizedFrame" = type { %"class.v8::internal::JavaScriptFrame" }
%"class.v8::internal::StubFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::BuiltinContinuationFrame" = type { %"class.v8::internal::InternalFrame" }
%"class.v8::internal::JavaScriptBuiltinContinuationFrame" = type { %"class.v8::internal::TypedFrameWithJSLinkage" }
%"class.v8::internal::TypedFrameWithJSLinkage" = type { %"class.v8::internal::CommonFrameWithJSLinkage" }
%"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame" = type { %"class.v8::internal::JavaScriptBuiltinContinuationFrame" }
%"class.v8::internal::InternalFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::ConstructFrame" = type { %"class.v8::internal::InternalFrame" }
%"class.v8::internal::BuiltinFrame" = type { %"class.v8::internal::TypedFrameWithJSLinkage" }
%"class.v8::internal::BuiltinExitFrame" = type { %"class.v8::internal::ExitFrame" }
%"class.v8::internal::NativeFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::StackHandler" = type { i8 }
%"struct.v8::internal::StackFrame::State" = type { i64, i64, i64*, i64, i64*, i64* }
%"class.v8::internal::JavaScriptFrameIterator" = type { %"class.v8::internal::StackFrameIterator" }
%"class.v8::internal::StackFrameIterator" = type { %"class.v8::internal::StackFrameIteratorBase.base", [7 x i8] }
%"class.v8::internal::StackFrameIteratorBase.base" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::EntryFrame", %"class.v8::internal::ConstructEntryFrame", %"class.v8::internal::ExitFrame", %"class.v8::internal::WasmFrame", %"class.v8::internal::WasmToJsFrame", %"class.v8::internal::JsToWasmFrame", %"class.v8::internal::WasmDebugBreakFrame", %"class.v8::internal::CWasmEntryFrame", %"class.v8::internal::WasmExitFrame", %"class.v8::internal::WasmCompileLazyFrame", %"class.v8::internal::InterpretedFrame", %"class.v8::internal::BaselineFrame", %"class.v8::internal::OptimizedFrame", %"class.v8::internal::StubFrame", %"class.v8::internal::BuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame", %"class.v8::internal::InternalFrame", %"class.v8::internal::ConstructFrame", %"class.v8::internal::BuiltinFrame", %"class.v8::internal::BuiltinExitFrame", %"class.v8::internal::NativeFrame", %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackHandler"*, i8 }>
%"class.std::__1::vector.1203" = type { %"class.std::__1::__vector_base.1204" }
%"class.std::__1::__vector_base.1204" = type { %"class.v8::internal::FrameSummary"*, %"class.v8::internal::FrameSummary"*, %"class.std::__1::__compressed_pair.1494" }
%"class.v8::internal::FrameSummary" = type { %union.anon.1205 }
%union.anon.1205 = type { %"class.v8::internal::FrameSummary::JavaScriptFrameSummary" }
%"class.v8::internal::FrameSummary::JavaScriptFrameSummary" = type { %"class.v8::internal::FrameSummary::FrameSummaryBase.base", %"class.v8::internal::Handle.1188", %"class.v8::internal::Handle.1200", %"class.v8::internal::Handle.1206", i32, i8, %"class.v8::internal::Handle.1207" }
%"class.v8::internal::FrameSummary::FrameSummaryBase.base" = type <{ %"class.v8::internal::Isolate"*, i32 }>
%"class.v8::internal::Handle.1200" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1206" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1207" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1494" = type { %"struct.std::__1::__compressed_pair_elem.1495" }
%"struct.std::__1::__compressed_pair_elem.1495" = type { %"class.v8::internal::FrameSummary"* }
%"class.v8::internal::FrameFunctionIterator" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1200", %"class.v8::internal::JavaScriptFrameIterator", %"class.std::__1::vector.1203", i32, [4 x i8] }>
%"class.v8::internal::Script" = type { %"class.v8::internal::TorqueGeneratedScript" }
%"class.v8::internal::TorqueGeneratedScript" = type { %"class.v8::internal::Struct" }

$_ZN2v88internal21FrameFunctionIterator31FindFirstNativeOrUserJavaScriptEv = comdat any

$_ZN2v88internal21FrameFunctionIterator19MaterializeFunctionEv = comdat any

$_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE = comdat any

$_ZNK2v88internal10JSFunction9prototypeENS0_16PtrComprCageBaseE = comdat any

$_ZN2v88internal15TranslatedStateD2Ev = comdat any

$_ZNSt3__16vectorIN2v88internal15TranslatedFrameENS_9allocatorIS3_EEED2Ev = comdat any

$_ZN2v88internal21FrameFunctionIterator4nextEv = comdat any

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"it.HasAccess()\00", align 1
@.str.2 = private unnamed_addr constant [39 x i8] c"LookupIterator::ACCESSOR == it.state()\00", align 1
@.str.3 = private unnamed_addr constant [41 x i8] c"Fatal JavaScript invalid array length %u\00", align 1
@.str.4 = private unnamed_addr constant [47 x i8] c"array->length().ToArrayLength(&actual_new_len)\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZN2v88internal36FLAG_correctness_fuzzer_suppressionsE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal12TracingFlags13runtime_statsE = external local_unnamed_addr global %"struct.std::__1::atomic.1522", align 4
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9Accessors12MakeAccessorEPNS0_7IsolateENS0_6HandleINS0_4NameEEEPFvNS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEEEPFvS9_NS7_ISB_EERKNSA_INS_7BooleanEEEE(%"class.v8::internal::Isolate"*, i64*, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)*, void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo.1187"*)*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::AccessorInfo>::ObjectRef", align 8
  %6 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %7 = tail call i64* @_ZN2v88internal7Factory15NewAccessorInfoEv(%"class.v8::internal::Factory"* %6) #4
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 7
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, -4
  store atomic volatile i32 %12, i32* %10 monotonic, align 4
  %13 = load i64, i64* %7, align 8
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, -6
  store atomic volatile i32 %17, i32* %15 monotonic, align 4
  %18 = load i64, i64* %7, align 8
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, -10
  %23 = or i32 %22, 8
  store atomic volatile i32 %23, i32* %20 monotonic, align 4
  %24 = load i64, i64* %7, align 8
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, -18
  store atomic volatile i32 %28, i32* %26 monotonic, align 4
  %29 = load i64, i64* %7, align 8
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = and i32 %32, -34
  store atomic volatile i32 %33, i32* %31 monotonic, align 4
  %34 = load i64, i64* %7, align 8
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, -194
  store atomic volatile i32 %38, i32* %36 monotonic, align 4
  %39 = load i64, i64* %7, align 8
  %40 = add i64 %39, 7
  %41 = inttoptr i64 %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = and i32 %42, -770
  store atomic volatile i32 %43, i32* %41 monotonic, align 4
  %44 = load i64, i64* %1, align 8
  %45 = and i64 %44, -4294967296
  %46 = add i64 %44, -1
  %47 = inttoptr i64 %46 to i32*
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %45, %49
  %51 = add i64 %50, 7
  %52 = inttoptr i64 %51 to i16*
  %53 = load atomic i16, i16* %52 monotonic, align 2
  %54 = and i16 %53, -32
  %55 = icmp eq i16 %54, 32
  br i1 %55, label %56, label %61

56:                                               ; preds = %4
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %58 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %57, align 8
  %59 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %58, %"class.v8::internal::Isolate"* %0, i64* %1) #4
  %60 = load i64, i64* %59, align 8
  br label %61

61:                                               ; preds = %4, %56
  %62 = phi i64 [ %60, %56 ], [ %44, %4 ]
  %63 = load i64, i64* %7, align 8
  %64 = add i64 %63, 3
  %65 = inttoptr i64 %64 to i32*
  %66 = trunc i64 %62 to i32
  store atomic volatile i32 %66, i32* %65 monotonic, align 4
  %67 = and i64 %62, 1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %80, label %69

69:                                               ; preds = %61
  %70 = and i64 %63, -262144
  %71 = or i64 %70, 8
  %72 = inttoptr i64 %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = and i64 %73, 262144
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %80, label %76

76:                                               ; preds = %69
  %77 = or i64 %70, 16
  %78 = inttoptr i64 %77 to %"class.v8::internal::Heap"**
  %79 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %78, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %79, i64 %63, i64 %64, i64 %62) #4
  br label %80

80:                                               ; preds = %76, %69, %61
  %81 = and i64 %62, -262144
  %82 = or i64 %81, 8
  %83 = inttoptr i64 %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = and i64 %84, 24
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %95, label %87

87:                                               ; preds = %80
  %88 = and i64 %63, -262144
  %89 = or i64 %88, 8
  %90 = inttoptr i64 %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = and i64 %91, 24
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %87
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %63, i64 %64, i64 %62) #4
  br label %95

95:                                               ; preds = %80, %87, %94
  %96 = icmp eq void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)* %2, null
  br i1 %96, label %97, label %116

97:                                               ; preds = %95
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %99 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %98, align 8
  %100 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %99, i64 0) #4
  br label %119

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %105 = load i64*, i64** %104, align 8
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %107 = load i64*, i64** %106, align 8
  %108 = icmp eq i64* %105, %107
  br i1 %108, label %109, label %111

109:                                              ; preds = %103
  %110 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %111

111:                                              ; preds = %109, %103
  %112 = phi i64* [ %110, %109 ], [ %105, %103 ]
  %113 = ptrtoint i64* %112 to i64
  %114 = add i64 %113, 8
  %115 = inttoptr i64 %114 to i64*
  store i64* %115, i64** %104, align 8
  store i64 0, i64* %112, align 8
  br label %119

116:                                              ; preds = %95
  %117 = ptrtoint void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)* %2 to i64
  %118 = tail call i64* @_ZN2v88internal7Factory10NewForeignEm(%"class.v8::internal::Factory"* %6, i64 %117) #4
  br label %119

119:                                              ; preds = %101, %111, %116
  %120 = phi i64* [ %118, %116 ], [ %102, %101 ], [ %112, %111 ]
  %121 = icmp eq void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo.1187"*)* %3, null
  %122 = select i1 %121, void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo.1187"*)* @_ZN2v88internal9Accessors25ReconfigureToDataPropertyENS_5LocalINS_4NameEEENS2_INS_5ValueEEERKNS_20PropertyCallbackInfoINS_7BooleanEEE, void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo.1187"*)* %3
  %123 = ptrtoint void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo.1187"*)* %122 to i64
  %124 = tail call i64* @_ZN2v88internal7Factory10NewForeignEm(%"class.v8::internal::Factory"* %6, i64 %123) #4
  %125 = load i64, i64* %7, align 8
  %126 = load i64, i64* %120, align 8
  %127 = add i64 %125, 19
  %128 = inttoptr i64 %127 to i32*
  %129 = trunc i64 %126 to i32
  store atomic volatile i32 %129, i32* %128 monotonic, align 4
  %130 = and i64 %126, 1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %155, label %132

132:                                              ; preds = %119
  %133 = and i64 %125, -262144
  %134 = or i64 %133, 8
  %135 = inttoptr i64 %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = and i64 %136, 262144
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %143, label %139

139:                                              ; preds = %132
  %140 = or i64 %133, 16
  %141 = inttoptr i64 %140 to %"class.v8::internal::Heap"**
  %142 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %141, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %142, i64 %125, i64 %127, i64 %126) #4
  br label %143

143:                                              ; preds = %139, %132
  %144 = and i64 %126, -262144
  %145 = or i64 %144, 8
  %146 = inttoptr i64 %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = and i64 %147, 24
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %155, label %150

150:                                              ; preds = %143
  %151 = load i64, i64* %135, align 8
  %152 = and i64 %151, 24
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %150
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %125, i64 %127, i64 %126) #4
  br label %155

155:                                              ; preds = %119, %143, %150, %154
  %156 = load i64, i64* %7, align 8
  %157 = load i64, i64* %124, align 8
  %158 = add i64 %156, 15
  %159 = inttoptr i64 %158 to i32*
  %160 = trunc i64 %157 to i32
  store atomic volatile i32 %160, i32* %159 monotonic, align 4
  %161 = and i64 %157, 1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %186, label %163

163:                                              ; preds = %155
  %164 = and i64 %156, -262144
  %165 = or i64 %164, 8
  %166 = inttoptr i64 %165 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = and i64 %167, 262144
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %174, label %170

170:                                              ; preds = %163
  %171 = or i64 %164, 16
  %172 = inttoptr i64 %171 to %"class.v8::internal::Heap"**
  %173 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %172, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %173, i64 %156, i64 %158, i64 %157) #4
  br label %174

174:                                              ; preds = %170, %163
  %175 = and i64 %157, -262144
  %176 = or i64 %175, 8
  %177 = inttoptr i64 %176 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = and i64 %178, 24
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %186, label %181

181:                                              ; preds = %174
  %182 = load i64, i64* %166, align 8
  %183 = and i64 %182, 24
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %181
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %156, i64 %158, i64 %157) #4
  br label %186

186:                                              ; preds = %155, %174, %181, %185
  %187 = bitcast %"class.v8::internal::Handle<v8::internal::AccessorInfo>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %187) #4
  %188 = load i64, i64* %7, align 8
  %189 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorInfo>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %188, i64* %189, align 8
  %190 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorInfo>::ObjectRef"* %5, i64 0, i32 0
  %191 = call i64 @_ZNK2v88internal12AccessorInfo17redirected_getterEv(%"class.v8::internal::AccessorInfo"* nonnull %190) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %187) #4
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %225, label %193

193:                                              ; preds = %186
  %194 = call i64* @_ZN2v88internal7Factory10NewForeignEm(%"class.v8::internal::Factory"* %6, i64 %191) #4
  %195 = load i64, i64* %7, align 8
  %196 = load i64, i64* %194, align 8
  %197 = add i64 %195, 23
  %198 = inttoptr i64 %197 to i32*
  %199 = trunc i64 %196 to i32
  store atomic volatile i32 %199, i32* %198 monotonic, align 4
  %200 = and i64 %196, 1
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %225, label %202

202:                                              ; preds = %193
  %203 = and i64 %195, -262144
  %204 = or i64 %203, 8
  %205 = inttoptr i64 %204 to i64*
  %206 = load i64, i64* %205, align 8
  %207 = and i64 %206, 262144
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %213, label %209

209:                                              ; preds = %202
  %210 = or i64 %203, 16
  %211 = inttoptr i64 %210 to %"class.v8::internal::Heap"**
  %212 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %211, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %212, i64 %195, i64 %197, i64 %196) #4
  br label %213

213:                                              ; preds = %209, %202
  %214 = and i64 %196, -262144
  %215 = or i64 %214, 8
  %216 = inttoptr i64 %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = and i64 %217, 24
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %225, label %220

220:                                              ; preds = %213
  %221 = load i64, i64* %205, align 8
  %222 = and i64 %221, 24
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %220
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %195, i64 %197, i64 %196) #4
  br label %225

225:                                              ; preds = %224, %220, %213, %193, %186
  ret i64* %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i64* @_ZN2v88internal7Factory15NewAccessorInfoEv(%"class.v8::internal::Factory"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Accessors25ReconfigureToDataPropertyENS_5LocalINS_4NameEEENS2_INS_5ValueEEERKNS_20PropertyCallbackInfoINS_7BooleanEEE(%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo.1187"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %4 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %5 = getelementptr inbounds %"class.v8::PropertyCallbackInfo.1187", %"class.v8::PropertyCallbackInfo.1187"* %2, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 2
  %8 = bitcast i64* %7 to %"class.v8::internal::Isolate"**
  %9 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %10 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 40, i1 false) #4
  %11 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1522", %"struct.std::__1::atomic.1522"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %19, label %13, !prof !2

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 0
  %15 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 1
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 14, i32 0
  %17 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %17, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %18, %"class.v8::internal::RuntimeCallStats"** %14, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %18, %"class.v8::internal::RuntimeCallTimer"* %15, i32 206) #4
  br label %19

19:                                               ; preds = %3, %13
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31
  %21 = bitcast %"struct.v8::internal::HandleScopeData"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %24 = load i64*, i64** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %25, align 8
  %28 = load i64*, i64** %5, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 6
  %30 = getelementptr inbounds i64, i64* %28, i64 1
  %31 = bitcast %"class.v8::Name"* %0 to i64*
  %32 = bitcast %"class.v8::Value"* %1 to i64*
  %33 = call i64* @_ZN2v88internal9Accessors31ReplaceAccessorWithDataPropertyEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_8JSObjectEEENS4_INS0_4NameEEES6_(%"class.v8::internal::Isolate"* %9, i64* %29, i64* %30, i64* %31, i64* %32)
  %34 = icmp eq i64* %33, null
  br i1 %34, label %35, label %37

35:                                               ; preds = %19
  %36 = call zeroext i1 @_ZN2v88internal7Isolate27OptionalRescheduleExceptionEb(%"class.v8::internal::Isolate"* %9, i1 zeroext false) #4
  br label %45

37:                                               ; preds = %19
  %38 = load i64*, i64** %5, align 8
  %39 = getelementptr inbounds i64, i64* %38, i64 4
  %40 = getelementptr inbounds i64, i64* %38, i64 2
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, 184
  %43 = inttoptr i64 %42 to i64*
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %39, align 8
  br label %45

45:                                               ; preds = %37, %35
  %46 = icmp eq %"class.v8::internal::Isolate"* %9, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %45
  %48 = inttoptr i64 %22 to i64*
  %49 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %20, i64 0, i32 0
  %50 = load i64*, i64** %49, align 8
  store i64 %22, i64* %21, align 8
  %51 = load i32, i32* %25, align 8
  %52 = add nsw i32 %51, -1
  store i32 %52, i32* %25, align 8
  %53 = load i64*, i64** %23, align 8
  %54 = icmp eq i64* %53, %24
  br i1 %54, label %57, label %55

55:                                               ; preds = %47
  store i64* %24, i64** %23, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %9) #4
  %56 = load i64*, i64** %49, align 8
  br label %57

57:                                               ; preds = %55, %47
  %58 = phi i64* [ %56, %55 ], [ %48, %47 ]
  %59 = phi i64* [ %24, %55 ], [ %50, %47 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %58, i64* %59) #4
  br label %60

60:                                               ; preds = %45, %57
  %61 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 0
  %62 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %61, align 8
  %63 = icmp eq %"class.v8::internal::RuntimeCallStats"* %62, null
  br i1 %63, label %66, label %64, !prof !2

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %62, %"class.v8::internal::RuntimeCallTimer"* %65) #4
  br label %66

66:                                               ; preds = %60, %64
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #4
  ret void
}

declare i64 @_ZNK2v88internal12AccessorInfo17redirected_getterEv(%"class.v8::internal::AccessorInfo"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal9Accessors23IsJSObjectFieldAccessorEPNS0_7IsolateENS0_6HandleINS0_3MapEEENS4_INS0_4NameEEEPNS0_10FieldIndexE(%"class.v8::internal::Isolate"*, i64*, i64*, %"class.v8::internal::FieldIndex"* nocapture) local_unnamed_addr #0 align 2 {
  %5 = load i64, i64* %1, align 8
  %6 = add i64 %5, 11
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2097152
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %139

11:                                               ; preds = %4
  %12 = add i64 %5, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = icmp eq i16 %14, 1085
  br i1 %15, label %16, label %76

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 363
  %18 = icmp eq i64* %17, %2
  br i1 %18, label %74, label %19

19:                                               ; preds = %16
  %20 = icmp eq i64* %2, null
  %21 = icmp eq i64* %17, null
  %22 = or i1 %21, %20
  %23 = load i64, i64* %2, align 8
  br i1 %22, label %29, label %24

24:                                               ; preds = %19
  %25 = load i64, i64* %17, align 8
  %26 = trunc i64 %23 to i32
  %27 = trunc i64 %25 to i32
  %28 = icmp eq i32 %26, %27
  br i1 %28, label %74, label %29

29:                                               ; preds = %24, %19
  %30 = and i64 %23, -4294967296
  %31 = add i64 %23, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %30, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = icmp ult i16 %38, 32
  br i1 %39, label %40, label %52

40:                                               ; preds = %29
  %41 = load i64, i64* %17, align 8
  %42 = and i64 %41, -4294967296
  %43 = add i64 %41, -1
  %44 = inttoptr i64 %43 to i32*
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %42, %46
  %48 = add i64 %47, 7
  %49 = inttoptr i64 %48 to i16*
  %50 = load atomic i16, i16* %49 monotonic, align 2
  %51 = icmp ult i16 %50, 32
  br i1 %51, label %139, label %52

52:                                               ; preds = %40, %29
  %53 = load atomic i32, i32* %32 monotonic, align 4
  %54 = zext i32 %53 to i64
  %55 = or i64 %30, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load atomic i16, i16* %57 monotonic, align 2
  %59 = icmp eq i16 %58, 64
  br i1 %59, label %139, label %60

60:                                               ; preds = %52
  %61 = load i64, i64* %17, align 8
  %62 = and i64 %61, -4294967296
  %63 = add i64 %61, -1
  %64 = inttoptr i64 %63 to i32*
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %62, %66
  %68 = add i64 %67, 7
  %69 = inttoptr i64 %68 to i16*
  %70 = load atomic i16, i16* %69 monotonic, align 2
  %71 = icmp eq i16 %70, 64
  br i1 %71, label %139, label %72

72:                                               ; preds = %60
  %73 = tail call zeroext i1 @_ZN2v88internal6String10SlowEqualsEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %0, i64* %2, i64* %17) #4
  br i1 %73, label %74, label %139

74:                                               ; preds = %72, %24, %16
  %75 = getelementptr inbounds %"class.v8::internal::FieldIndex", %"class.v8::internal::FieldIndex"* %3, i64 0, i32 0
  store i64 8204, i64* %75, align 8
  br label %139

76:                                               ; preds = %11
  %77 = load atomic i16, i16* %13 monotonic, align 2
  %78 = icmp ult i16 %77, 64
  br i1 %78, label %79, label %139

79:                                               ; preds = %76
  %80 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 363
  %81 = icmp eq i64* %80, %2
  br i1 %81, label %137, label %82

82:                                               ; preds = %79
  %83 = icmp eq i64* %2, null
  %84 = icmp eq i64* %80, null
  %85 = or i1 %84, %83
  %86 = load i64, i64* %2, align 8
  br i1 %85, label %92, label %87

87:                                               ; preds = %82
  %88 = load i64, i64* %80, align 8
  %89 = trunc i64 %86 to i32
  %90 = trunc i64 %88 to i32
  %91 = icmp eq i32 %89, %90
  br i1 %91, label %137, label %92

92:                                               ; preds = %87, %82
  %93 = and i64 %86, -4294967296
  %94 = add i64 %86, -1
  %95 = inttoptr i64 %94 to i32*
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = zext i32 %96 to i64
  %98 = or i64 %93, %97
  %99 = add i64 %98, 7
  %100 = inttoptr i64 %99 to i16*
  %101 = load atomic i16, i16* %100 monotonic, align 2
  %102 = icmp ult i16 %101, 32
  br i1 %102, label %103, label %115

103:                                              ; preds = %92
  %104 = load i64, i64* %80, align 8
  %105 = and i64 %104, -4294967296
  %106 = add i64 %104, -1
  %107 = inttoptr i64 %106 to i32*
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = zext i32 %108 to i64
  %110 = or i64 %105, %109
  %111 = add i64 %110, 7
  %112 = inttoptr i64 %111 to i16*
  %113 = load atomic i16, i16* %112 monotonic, align 2
  %114 = icmp ult i16 %113, 32
  br i1 %114, label %139, label %115

115:                                              ; preds = %103, %92
  %116 = load atomic i32, i32* %95 monotonic, align 4
  %117 = zext i32 %116 to i64
  %118 = or i64 %93, %117
  %119 = add i64 %118, 7
  %120 = inttoptr i64 %119 to i16*
  %121 = load atomic i16, i16* %120 monotonic, align 2
  %122 = icmp eq i16 %121, 64
  br i1 %122, label %139, label %123

123:                                              ; preds = %115
  %124 = load i64, i64* %80, align 8
  %125 = and i64 %124, -4294967296
  %126 = add i64 %124, -1
  %127 = inttoptr i64 %126 to i32*
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = zext i32 %128 to i64
  %130 = or i64 %125, %129
  %131 = add i64 %130, 7
  %132 = inttoptr i64 %131 to i16*
  %133 = load atomic i16, i16* %132 monotonic, align 2
  %134 = icmp eq i16 %133, 64
  br i1 %134, label %139, label %135

135:                                              ; preds = %123
  %136 = tail call zeroext i1 @_ZN2v88internal6String10SlowEqualsEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %0, i64* %2, i64* %80) #4
  br i1 %136, label %137, label %139

137:                                              ; preds = %135, %87, %79
  %138 = getelementptr inbounds %"class.v8::internal::FieldIndex", %"class.v8::internal::FieldIndex"* %3, i64 0, i32 0
  store i64 40968, i64* %138, align 8
  br label %139

139:                                              ; preds = %4, %137, %135, %123, %115, %103, %74, %72, %60, %52, %40, %76
  %140 = phi i1 [ false, %4 ], [ false, %76 ], [ true, %74 ], [ false, %72 ], [ false, %60 ], [ false, %52 ], [ false, %40 ], [ true, %137 ], [ false, %135 ], [ false, %123 ], [ false, %115 ], [ false, %103 ]
  ret i1 %140
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9Accessors31ReplaceAccessorWithDataPropertyEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_8JSObjectEEENS4_INS0_4NameEEES6_(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::String", align 8
  %7 = alloca %"class.v8::internal::LookupIterator", align 8
  %8 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %9 = bitcast %"class.v8::internal::LookupIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %9) #4
  %10 = bitcast %"class.v8::internal::LookupIterator::Key"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #4
  %11 = ptrtoint i64* %3 to i64
  %12 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %8, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %12, align 8
  %13 = load i64, i64* %3, align 8
  %14 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %8, i64 0, i32 1
  %15 = and i64 %13, -4294967296
  %16 = add i64 %13, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %15, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = icmp ult i16 %23, 64
  %25 = bitcast %"class.v8::internal::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #4
  br i1 %24, label %26, label %40

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %13, i64* %27, align 8
  %28 = add i64 %13, 3
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, -536870910
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %26
  %34 = lshr i32 %30, 2
  %35 = and i32 %34, 16777215
  %36 = zext i32 %35 to i64
  store i64 %36, i64* %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #4
  br label %48

37:                                               ; preds = %26
  %38 = and i32 %30, 3
  %39 = icmp eq i32 %38, 2
  br i1 %39, label %40, label %41

40:                                               ; preds = %37, %5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #4
  br label %50

41:                                               ; preds = %37
  %42 = call zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"* nonnull %6, i64* %14) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #4
  br i1 %42, label %48, label %43

43:                                               ; preds = %41
  %44 = load i64, i64* %3, align 8
  %45 = and i64 %44, -4294967296
  %46 = add i64 %44, -1
  %47 = inttoptr i64 %46 to i32*
  br label %50

48:                                               ; preds = %41, %33
  %49 = bitcast %"class.v8::internal::LookupIterator::Key"* %8 to i64*
  store i64 %11, i64* %49, align 8
  br label %67

50:                                               ; preds = %43, %40
  %51 = phi i32* [ %47, %43 ], [ %17, %40 ]
  %52 = phi i64 [ %45, %43 ], [ %15, %40 ]
  store i64 -1, i64* %14, align 8
  %53 = load atomic i32, i32* %51 monotonic, align 4
  %54 = zext i32 %53 to i64
  %55 = or i64 %52, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load atomic i16, i16* %57 monotonic, align 2
  %59 = and i16 %58, -32
  %60 = icmp eq i16 %59, 32
  br i1 %60, label %61, label %65

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %63 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %62, align 8
  %64 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %63, %"class.v8::internal::Isolate"* %0, i64* %3) #4
  br label %65

65:                                               ; preds = %61, %50
  %66 = phi i64* [ %64, %61 ], [ %3, %50 ]
  store i64* %66, i64** %12, align 8
  br label %67

67:                                               ; preds = %48, %65
  %68 = phi i64* [ %3, %48 ], [ %66, %65 ]
  %69 = load i64, i64* %14, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %7, %"class.v8::internal::Isolate"* %0, i64* %1, i64* %68, i64 %69, i64* %2, i32 0) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #4
  %70 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %78

73:                                               ; preds = %67
  %74 = call zeroext i1 @_ZNK2v88internal14LookupIterator9HasAccessEv(%"class.v8::internal::LookupIterator"* nonnull %7) #4
  br i1 %74, label %76, label %75, !prof !2

75:                                               ; preds = %73
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #8
  unreachable

76:                                               ; preds = %73
  call void @_ZN2v88internal14LookupIterator4NextEv(%"class.v8::internal::LookupIterator"* nonnull %7) #4
  %77 = load i32, i32* %70, align 4
  br label %78

78:                                               ; preds = %67, %76
  %79 = phi i32 [ %71, %67 ], [ %77, %76 ]
  %80 = icmp eq i32 %79, 5
  br i1 %80, label %82, label %81, !prof !2

81:                                               ; preds = %78
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0)) #8
  unreachable

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 4, i32 0
  %84 = load i32, i32* %83, align 8
  %85 = lshr i32 %84, 3
  %86 = and i32 %85, 7
  call void @_ZN2v88internal14LookupIterator23ReconfigureDataPropertyENS0_6HandleINS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::LookupIterator"* nonnull %7, i64* %4, i32 %86) #4
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %9) #4
  ret i64* %4
}

declare zeroext i1 @_ZNK2v88internal14LookupIterator9HasAccessEv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

declare void @_ZN2v88internal14LookupIterator4NextEv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #2

declare void @_ZN2v88internal14LookupIterator23ReconfigureDataPropertyENS0_6HandleINS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::LookupIterator"*, i64*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal7Isolate27OptionalRescheduleExceptionEb(%"class.v8::internal::Isolate"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Accessors23ArgumentsIteratorGetterENS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEE(%"class.v8::Name"* nocapture readnone, %"class.v8::PropertyCallbackInfo"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %1, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 2
  %6 = bitcast i64* %5 to %"class.v8::internal::Isolate"**
  %7 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 31
  %9 = bitcast %"struct.v8::internal::HandleScopeData"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 31, i32 1
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 31, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %13, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, -4294967296
  %19 = add i64 %17, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  %24 = add i64 %23, 19
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %18, %27
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 31, i32 4
  %30 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %29, align 8
  %31 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %30, null
  %32 = inttoptr i64 %10 to i64*
  br i1 %31, label %36, label %33

33:                                               ; preds = %2
  %34 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %30, i64 %28) #4
  %35 = load i64, i64* %34, align 8
  br label %46

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 31, i32 0
  %38 = icmp eq i64* %12, %32
  br i1 %38, label %39, label %41

39:                                               ; preds = %36
  %40 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %7) #4
  br label %41

41:                                               ; preds = %39, %36
  %42 = phi i64* [ %40, %39 ], [ %32, %36 ]
  %43 = ptrtoint i64* %42 to i64
  %44 = add i64 %43, 8
  %45 = inttoptr i64 %44 to i64*
  store i64* %45, i64** %37, align 8
  store i64 %28, i64* %42, align 8
  br label %46

46:                                               ; preds = %33, %41
  %47 = phi i64 [ %35, %33 ], [ %28, %41 ]
  %48 = and i64 %47, -4294967296
  %49 = add i64 %47, 875
  %50 = inttoptr i64 %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %48, %52
  %54 = load i64*, i64** %3, align 8
  %55 = getelementptr inbounds i64, i64* %54, i64 4
  %56 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %29, align 8
  %57 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %46
  %59 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %56, i64 %53) #4
  br label %72

60:                                               ; preds = %46
  %61 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 31, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = load i64*, i64** %11, align 8
  %64 = icmp eq i64* %62, %63
  br i1 %64, label %65, label %67

65:                                               ; preds = %60
  %66 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %7) #4
  br label %67

67:                                               ; preds = %65, %60
  %68 = phi i64* [ %66, %65 ], [ %62, %60 ]
  %69 = ptrtoint i64* %68 to i64
  %70 = add i64 %69, 8
  %71 = inttoptr i64 %70 to i64*
  store i64* %71, i64** %61, align 8
  store i64 %53, i64* %68, align 8
  br label %72

72:                                               ; preds = %58, %67
  %73 = phi i64* [ %59, %58 ], [ %68, %67 ]
  %74 = icmp eq i64* %73, null
  %75 = getelementptr inbounds i64, i64* %54, i64 3
  %76 = select i1 %74, i64* %75, i64* %73, !prof !3
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %55, align 8
  %78 = icmp eq %"class.v8::internal::Isolate"* %7, null
  br i1 %78, label %91, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %8, i64 0, i32 0
  %81 = load i64*, i64** %80, align 8
  store i64 %10, i64* %9, align 8
  %82 = load i32, i32* %13, align 8
  %83 = add nsw i32 %82, -1
  store i32 %83, i32* %13, align 8
  %84 = load i64*, i64** %11, align 8
  %85 = icmp eq i64* %84, %12
  br i1 %85, label %88, label %86

86:                                               ; preds = %79
  store i64* %12, i64** %11, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %7) #4
  %87 = load i64*, i64** %80, align 8
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i64* [ %87, %86 ], [ %32, %79 ]
  %90 = phi i64* [ %12, %86 ], [ %81, %79 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %89, i64* %90) #4
  br label %91

91:                                               ; preds = %72, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9Accessors25MakeArgumentsIteratorInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 510
  %3 = tail call i64* @_ZN2v88internal9Accessors12MakeAccessorEPNS0_7IsolateENS0_6HandleINS0_4NameEEEPFvNS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEEEPFvS9_NS7_ISB_EERKNSA_INS_7BooleanEEEE(%"class.v8::internal::Isolate"* %0, i64* %2, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)* nonnull @_ZN2v88internal9Accessors23ArgumentsIteratorGetterENS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEE, void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo.1187"*)* null)
  ret i64* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Accessors17ArrayLengthGetterENS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEE(%"class.v8::Name"* nocapture readnone, %"class.v8::PropertyCallbackInfo"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %4 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %1, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 2
  %7 = bitcast i64* %6 to %"class.v8::internal::Isolate"**
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %9 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 40, i1 false) #4
  %10 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1522", %"struct.std::__1::atomic.1522"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %18, label %12, !prof !2

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 1
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 14, i32 0
  %16 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %16, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %17, %"class.v8::internal::RuntimeCallStats"** %13, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %17, %"class.v8::internal::RuntimeCallTimer"* %14, i32 126) #4
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31
  %20 = bitcast %"struct.v8::internal::HandleScopeData"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 1
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %24, align 8
  %27 = load i64*, i64** %4, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 1
  %29 = load i64, i64* %28, align 8
  %30 = and i64 %29, -4294967296
  %31 = add i64 %29, 11
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %30, %34
  %36 = getelementptr inbounds i64, i64* %27, i64 4
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 4
  %38 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %37, align 8
  %39 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %38, null
  %40 = inttoptr i64 %21 to i64*
  br i1 %39, label %43, label %41

41:                                               ; preds = %18
  %42 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %38, i64 %35) #4
  br label %53

43:                                               ; preds = %18
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  %45 = icmp eq i64* %23, %40
  br i1 %45, label %46, label %48

46:                                               ; preds = %43
  %47 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #4
  br label %48

48:                                               ; preds = %46, %43
  %49 = phi i64* [ %47, %46 ], [ %40, %43 ]
  %50 = ptrtoint i64* %49 to i64
  %51 = add i64 %50, 8
  %52 = inttoptr i64 %51 to i64*
  store i64* %52, i64** %44, align 8
  store i64 %35, i64* %49, align 8
  br label %53

53:                                               ; preds = %41, %48
  %54 = phi i64* [ %42, %41 ], [ %49, %48 ]
  %55 = icmp eq i64* %54, null
  %56 = getelementptr inbounds i64, i64* %27, i64 3
  %57 = select i1 %55, i64* %56, i64* %54, !prof !3
  %58 = load i64, i64* %57, align 8
  store i64 %58, i64* %36, align 8
  %59 = icmp eq %"class.v8::internal::Isolate"* %8, null
  br i1 %59, label %72, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %19, i64 0, i32 0
  %62 = load i64*, i64** %61, align 8
  store i64 %21, i64* %20, align 8
  %63 = load i32, i32* %24, align 8
  %64 = add nsw i32 %63, -1
  store i32 %64, i32* %24, align 8
  %65 = load i64*, i64** %22, align 8
  %66 = icmp eq i64* %65, %23
  br i1 %66, label %69, label %67

67:                                               ; preds = %60
  store i64* %23, i64** %22, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %8) #4
  %68 = load i64*, i64** %61, align 8
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i64* [ %68, %67 ], [ %40, %60 ]
  %71 = phi i64* [ %23, %67 ], [ %62, %60 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %70, i64* %71) #4
  br label %72

72:                                               ; preds = %53, %69
  %73 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 0
  %74 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %73, align 8
  %75 = icmp eq %"class.v8::internal::RuntimeCallStats"* %74, null
  br i1 %75, label %78, label %76, !prof !2

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %74, %"class.v8::internal::RuntimeCallTimer"* %77) #4
  br label %78

78:                                               ; preds = %72, %76
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Accessors17ArrayLengthSetterENS_5LocalINS_4NameEEENS2_INS_5ValueEEERKNS_20PropertyCallbackInfoINS_7BooleanEEE(%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo.1187"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %4 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.v8::PropertyCallbackInfo.1187", %"class.v8::PropertyCallbackInfo.1187"* %2, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 2
  %9 = bitcast i64* %8 to %"class.v8::internal::Isolate"**
  %10 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %11 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 40, i1 false) #4
  %12 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1522", %"struct.std::__1::atomic.1522"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %20, label %14, !prof !2

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 0
  %16 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 1
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 14, i32 0
  %18 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %18, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %19, %"class.v8::internal::RuntimeCallStats"** %15, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %19, %"class.v8::internal::RuntimeCallTimer"* %16, i32 127) #4
  br label %20

20:                                               ; preds = %3, %14
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31
  %22 = bitcast %"struct.v8::internal::HandleScopeData"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 1
  %25 = load i64*, i64** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = load i64*, i64** %6, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 1
  %31 = bitcast %"class.v8::Value"* %1 to i64*
  %32 = call zeroext i1 @_ZN2v88internal7JSArray17HasReadOnlyLengthENS0_6HandleIS1_EE(i64* %30) #4
  %33 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #4
  store i32 0, i32* %5, align 4
  %34 = call zeroext i1 @_ZN2v88internal7JSArray21AnythingToArrayLengthEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEPj(%"class.v8::internal::Isolate"* %10, i64* %31, i32* nonnull %5) #4
  br i1 %34, label %37, label %35

35:                                               ; preds = %20
  %36 = call zeroext i1 @_ZN2v88internal7Isolate27OptionalRescheduleExceptionEb(%"class.v8::internal::Isolate"* %10, i1 zeroext false) #4
  br label %205

37:                                               ; preds = %20
  br i1 %32, label %95, label %38

38:                                               ; preds = %37
  %39 = call zeroext i1 @_ZN2v88internal7JSArray17HasReadOnlyLengthENS0_6HandleIS1_EE(i64* %30) #4
  br i1 %39, label %40, label %95, !prof !3

40:                                               ; preds = %38
  %41 = load i32, i32* %5, align 4
  %42 = uitofp i32 %41 to double
  %43 = load i64, i64* %30, align 8
  %44 = add i64 %43, 11
  %45 = inttoptr i64 %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i64
  %48 = and i64 %47, 1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %40
  %51 = ashr i32 %46, 1
  %52 = sitofp i32 %51 to double
  br label %59

53:                                               ; preds = %40
  %54 = and i64 %43, -4294967296
  %55 = or i64 %54, %47
  %56 = add i64 %55, 3
  %57 = inttoptr i64 %56 to double*
  %58 = load double, double* %57, align 1
  br label %59

59:                                               ; preds = %50, %53
  %60 = phi double [ %52, %50 ], [ %58, %53 ]
  %61 = fcmp oeq double %60, %42
  %62 = load i64*, i64** %6, align 8
  br i1 %61, label %63, label %70

63:                                               ; preds = %59
  %64 = getelementptr inbounds i64, i64* %62, i64 4
  %65 = getelementptr inbounds i64, i64* %62, i64 2
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, 184
  %68 = inttoptr i64 %67 to i64*
  %69 = load i64, i64* %68, align 8
  store i64 %69, i64* %64, align 8
  br label %205

70:                                               ; preds = %59
  %71 = load i64, i64* %62, align 8
  switch i64 %71, label %79 [
    i64 4, label %72
    i64 2, label %87
  ]

72:                                               ; preds = %70
  %73 = getelementptr inbounds i64, i64* %62, i64 2
  %74 = bitcast i64* %73 to %"class.v8::internal::Isolate"**
  %75 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %74, align 8
  %76 = call zeroext i1 @_ZN2v88internal18ShouldThrowOnErrorEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %75) #4
  br i1 %76, label %79, label %77

77:                                               ; preds = %72
  %78 = load i64*, i64** %6, align 8
  br label %87

79:                                               ; preds = %70, %72
  %80 = bitcast %"class.v8::internal::Isolate"* %10 to %"class.v8::internal::Factory"*
  %81 = bitcast %"class.v8::Name"* %0 to i64*
  %82 = call i64* @_ZN2v88internal6Object6TypeOfEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %10, i64* %30) #4
  %83 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %80, i32 171, i64* %81, i64* %82, i64* %30) #4
  %84 = load i64, i64* %83, align 8
  %85 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %10, i64 %84, %"class.v8::internal::MessageLocation"* null) #4
  %86 = call zeroext i1 @_ZN2v88internal7Isolate27OptionalRescheduleExceptionEb(%"class.v8::internal::Isolate"* %10, i1 zeroext false) #4
  br label %205

87:                                               ; preds = %77, %70
  %88 = phi i64* [ %78, %77 ], [ %62, %70 ]
  %89 = getelementptr inbounds i64, i64* %88, i64 4
  %90 = getelementptr inbounds i64, i64* %88, i64 2
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, 192
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %89, align 8
  br label %205

95:                                               ; preds = %38, %37
  %96 = load i32, i32* %5, align 4
  %97 = call i16 @_ZN2v88internal7JSArray9SetLengthENS0_6HandleIS1_EEj(i64* %30, i32 %96) #4
  %98 = trunc i16 %97 to i8
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %95
  %101 = load i32, i32* %5, align 4
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0), i32 %101) #8
  unreachable

102:                                              ; preds = %95
  %103 = load i64, i64* %30, align 8
  %104 = and i64 %103, -4294967296
  %105 = add i64 %103, 11
  %106 = inttoptr i64 %105 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = zext i32 %107 to i64
  %109 = or i64 %104, %108
  %110 = and i64 %108, 1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %116

112:                                              ; preds = %102
  %113 = icmp slt i32 %107, 0
  br i1 %113, label %138, label %114, !prof !4

114:                                              ; preds = %112
  %115 = lshr i32 %107, 1
  br label %139

116:                                              ; preds = %102
  %117 = add i64 %109, -1
  %118 = inttoptr i64 %117 to i32*
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = zext i32 %119 to i64
  %121 = or i64 %104, %120
  %122 = add i64 %121, 7
  %123 = inttoptr i64 %122 to i16*
  %124 = load atomic i16, i16* %123 monotonic, align 2
  %125 = icmp eq i16 %124, 66
  br i1 %125, label %126, label %138, !prof !5

126:                                              ; preds = %116
  %127 = add i64 %109, 3
  %128 = inttoptr i64 %127 to double*
  %129 = load double, double* %128, align 1
  %130 = fadd double %129, 0x4330000000000000
  %131 = bitcast double %130 to i64
  %132 = and i64 %131, -4294967296
  %133 = icmp eq i64 %132, 4841369599423283200
  br i1 %133, label %134, label %138, !prof !5

134:                                              ; preds = %126
  %135 = trunc i64 %131 to i32
  %136 = uitofp i32 %135 to double
  %137 = fcmp oeq double %129, %136
  br i1 %137, label %139, label %138, !prof !2

138:                                              ; preds = %126, %116, %112, %134
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0)) #8
  unreachable

139:                                              ; preds = %114, %134
  %140 = phi i32 [ %115, %114 ], [ %135, %134 ]
  %141 = load i32, i32* %5, align 4
  %142 = icmp eq i32 %140, %141
  %143 = load i64*, i64** %6, align 8
  br i1 %142, label %198, label %144

144:                                              ; preds = %139
  %145 = load i64, i64* %143, align 8
  switch i64 %145, label %153 [
    i64 4, label %146
    i64 2, label %190
  ]

146:                                              ; preds = %144
  %147 = getelementptr inbounds i64, i64* %143, i64 2
  %148 = bitcast i64* %147 to %"class.v8::internal::Isolate"**
  %149 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %148, align 8
  %150 = call zeroext i1 @_ZN2v88internal18ShouldThrowOnErrorEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %149) #4
  br i1 %150, label %153, label %151

151:                                              ; preds = %146
  %152 = load i64*, i64** %6, align 8
  br label %190

153:                                              ; preds = %144, %146
  %154 = bitcast %"class.v8::internal::Isolate"* %10 to %"class.v8::internal::Factory"*
  %155 = add i32 %140, -1
  %156 = icmp ult i32 %155, 1073741824
  br i1 %156, label %157, label %177

157:                                              ; preds = %153
  %158 = sext i32 %155 to i64
  %159 = shl nsw i64 %158, 1
  %160 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 4
  %161 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %160, align 8
  %162 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %161, null
  br i1 %162, label %165, label %163

163:                                              ; preds = %157
  %164 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %161, i64 %159) #4
  br label %184

165:                                              ; preds = %157
  %166 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 0
  %167 = load i64*, i64** %166, align 8
  %168 = load i64*, i64** %24, align 8
  %169 = icmp eq i64* %167, %168
  br i1 %169, label %170, label %172

170:                                              ; preds = %165
  %171 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %10) #4
  br label %172

172:                                              ; preds = %170, %165
  %173 = phi i64* [ %171, %170 ], [ %167, %165 ]
  %174 = ptrtoint i64* %173 to i64
  %175 = add i64 %174, 8
  %176 = inttoptr i64 %175 to i64*
  store i64* %176, i64** %166, align 8
  store i64 %159, i64* %173, align 8
  br label %184

177:                                              ; preds = %153
  %178 = bitcast %"class.v8::internal::Isolate"* %10 to %"class.v8::internal::FactoryBase"*
  %179 = uitofp i32 %155 to double
  %180 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %178) #4
  %181 = load i64, i64* %180, align 8
  %182 = add i64 %181, 3
  %183 = inttoptr i64 %182 to double*
  store double %179, double* %183, align 1
  br label %184

184:                                              ; preds = %163, %172, %177
  %185 = phi i64* [ %180, %177 ], [ %164, %163 ], [ %173, %172 ]
  %186 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %154, i32 169, i64* %185, i64* %30, i64* null) #4
  %187 = load i64, i64* %186, align 8
  %188 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %10, i64 %187, %"class.v8::internal::MessageLocation"* null) #4
  %189 = call zeroext i1 @_ZN2v88internal7Isolate27OptionalRescheduleExceptionEb(%"class.v8::internal::Isolate"* %10, i1 zeroext false) #4
  br label %205

190:                                              ; preds = %151, %144
  %191 = phi i64* [ %152, %151 ], [ %143, %144 ]
  %192 = getelementptr inbounds i64, i64* %191, i64 4
  %193 = getelementptr inbounds i64, i64* %191, i64 2
  %194 = load i64, i64* %193, align 8
  %195 = add i64 %194, 192
  %196 = inttoptr i64 %195 to i64*
  %197 = load i64, i64* %196, align 8
  store i64 %197, i64* %192, align 8
  br label %205

198:                                              ; preds = %139
  %199 = getelementptr inbounds i64, i64* %143, i64 4
  %200 = getelementptr inbounds i64, i64* %143, i64 2
  %201 = load i64, i64* %200, align 8
  %202 = add i64 %201, 184
  %203 = inttoptr i64 %202 to i64*
  %204 = load i64, i64* %203, align 8
  store i64 %204, i64* %199, align 8
  br label %205

205:                                              ; preds = %198, %190, %184, %63, %87, %79, %35
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #4
  %206 = icmp eq %"class.v8::internal::Isolate"* %10, null
  br i1 %206, label %220, label %207

207:                                              ; preds = %205
  %208 = inttoptr i64 %23 to i64*
  %209 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %21, i64 0, i32 0
  %210 = load i64*, i64** %209, align 8
  store i64 %23, i64* %22, align 8
  %211 = load i32, i32* %26, align 8
  %212 = add nsw i32 %211, -1
  store i32 %212, i32* %26, align 8
  %213 = load i64*, i64** %24, align 8
  %214 = icmp eq i64* %213, %25
  br i1 %214, label %217, label %215

215:                                              ; preds = %207
  store i64* %25, i64** %24, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %10) #4
  %216 = load i64*, i64** %209, align 8
  br label %217

217:                                              ; preds = %215, %207
  %218 = phi i64* [ %216, %215 ], [ %208, %207 ]
  %219 = phi i64* [ %25, %215 ], [ %210, %207 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %218, i64* %219) #4
  br label %220

220:                                              ; preds = %205, %217
  %221 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 0
  %222 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %221, align 8
  %223 = icmp eq %"class.v8::internal::RuntimeCallStats"* %222, null
  br i1 %223, label %226, label %224, !prof !2

224:                                              ; preds = %220
  %225 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %222, %"class.v8::internal::RuntimeCallTimer"* %225) #4
  br label %226

226:                                              ; preds = %220, %224
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #4
  ret void
}

declare zeroext i1 @_ZN2v88internal7JSArray17HasReadOnlyLengthENS0_6HandleIS1_EE(i64*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal7JSArray21AnythingToArrayLengthEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEPj(%"class.v8::internal::Isolate"*, i64*, i32*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"*, i32, i64*, i64*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal6Object6TypeOfEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare i16 @_ZN2v88internal7JSArray9SetLengthENS0_6HandleIS1_EEj(i64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9Accessors19MakeArrayLengthInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 363
  %3 = tail call i64* @_ZN2v88internal9Accessors12MakeAccessorEPNS0_7IsolateENS0_6HandleINS0_4NameEEEPFvNS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEEEPFvS9_NS7_ISB_EERKNSA_INS_7BooleanEEEE(%"class.v8::internal::Isolate"* %0, i64* %2, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)* nonnull @_ZN2v88internal9Accessors17ArrayLengthGetterENS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEE, void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo.1187"*)* nonnull @_ZN2v88internal9Accessors17ArrayLengthSetterENS_5LocalINS_4NameEEENS2_INS_5ValueEEERKNS_20PropertyCallbackInfoINS_7BooleanEEE)
  ret i64* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Accessors26ModuleNamespaceEntryGetterENS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEE(%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.v8::internal::JSModuleNamespace", align 8
  %4 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %1, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 2
  %7 = bitcast i64* %6 to %"class.v8::internal::Isolate"**
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31
  %10 = bitcast %"struct.v8::internal::HandleScopeData"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %14, align 8
  %17 = bitcast %"class.v8::internal::JSModuleNamespace"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #4
  %18 = load i64*, i64** %4, align 8
  %19 = getelementptr inbounds i64, i64* %18, i64 1
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::JSModuleNamespace", %"class.v8::internal::JSModuleNamespace"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.v8::Name"* %0 to i64*
  %23 = call i64* @_ZN2v88internal17JSModuleNamespace9GetExportEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JSModuleNamespace"* nonnull %3, %"class.v8::internal::Isolate"* %8, i64* %22) #4
  %24 = icmp eq i64* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %2
  %26 = call zeroext i1 @_ZN2v88internal7Isolate27OptionalRescheduleExceptionEb(%"class.v8::internal::Isolate"* %8, i1 zeroext false) #4
  br label %31

27:                                               ; preds = %2
  %28 = load i64*, i64** %4, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 4
  %30 = load i64, i64* %23, align 8
  store i64 %30, i64* %29, align 8
  br label %31

31:                                               ; preds = %27, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #4
  %32 = icmp eq %"class.v8::internal::Isolate"* %8, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %31
  %34 = inttoptr i64 %11 to i64*
  %35 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %9, i64 0, i32 0
  %36 = load i64*, i64** %35, align 8
  store i64 %11, i64* %10, align 8
  %37 = load i32, i32* %14, align 8
  %38 = add nsw i32 %37, -1
  store i32 %38, i32* %14, align 8
  %39 = load i64*, i64** %12, align 8
  %40 = icmp eq i64* %39, %13
  br i1 %40, label %43, label %41

41:                                               ; preds = %33
  store i64* %13, i64** %12, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %8) #4
  %42 = load i64*, i64** %35, align 8
  br label %43

43:                                               ; preds = %41, %33
  %44 = phi i64* [ %42, %41 ], [ %34, %33 ]
  %45 = phi i64* [ %13, %41 ], [ %36, %33 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %44, i64* %45) #4
  br label %46

46:                                               ; preds = %31, %43
  ret void
}

declare i64* @_ZN2v88internal17JSModuleNamespace9GetExportEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JSModuleNamespace"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Accessors26ModuleNamespaceEntrySetterENS_5LocalINS_4NameEEENS2_INS_5ValueEEERKNS_20PropertyCallbackInfoINS_7BooleanEEE(%"class.v8::Name"*, %"class.v8::Value"* nocapture readnone, %"class.v8::PropertyCallbackInfo.1187"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::PropertyCallbackInfo.1187", %"class.v8::PropertyCallbackInfo.1187"* %2, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 2
  %7 = bitcast i64* %6 to %"class.v8::internal::Isolate"**
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31
  %10 = bitcast %"struct.v8::internal::HandleScopeData"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %14, align 8
  %17 = bitcast %"class.v8::internal::Isolate"* %8 to %"class.v8::internal::Factory"*
  %18 = load i64*, i64** %4, align 8
  %19 = getelementptr inbounds i64, i64* %18, i64 1
  %20 = load i64, i64* %18, align 8
  switch i64 %20, label %28 [
    i64 4, label %21
    i64 2, label %35
  ]

21:                                               ; preds = %3
  %22 = getelementptr inbounds i64, i64* %18, i64 2
  %23 = bitcast i64* %22 to %"class.v8::internal::Isolate"**
  %24 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %23, align 8
  %25 = tail call zeroext i1 @_ZN2v88internal18ShouldThrowOnErrorEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %24) #4
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  %27 = load i64*, i64** %4, align 8
  br label %35

28:                                               ; preds = %3, %21
  %29 = bitcast %"class.v8::Name"* %0 to i64*
  %30 = tail call i64* @_ZN2v88internal6Object6TypeOfEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %8, i64* %19) #4
  %31 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %17, i32 171, i64* %29, i64* %30, i64* %19) #4
  %32 = load i64, i64* %31, align 8
  %33 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %8, i64 %32, %"class.v8::internal::MessageLocation"* null) #4
  %34 = tail call zeroext i1 @_ZN2v88internal7Isolate27OptionalRescheduleExceptionEb(%"class.v8::internal::Isolate"* %8, i1 zeroext false) #4
  br label %43

35:                                               ; preds = %26, %3
  %36 = phi i64* [ %27, %26 ], [ %18, %3 ]
  %37 = getelementptr inbounds i64, i64* %36, i64 4
  %38 = getelementptr inbounds i64, i64* %36, i64 2
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 192
  %41 = inttoptr i64 %40 to i64*
  %42 = load i64, i64* %41, align 8
  store i64 %42, i64* %37, align 8
  br label %43

43:                                               ; preds = %35, %28
  %44 = icmp eq %"class.v8::internal::Isolate"* %8, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %43
  %46 = inttoptr i64 %11 to i64*
  %47 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %9, i64 0, i32 0
  %48 = load i64*, i64** %47, align 8
  store i64 %11, i64* %10, align 8
  %49 = load i32, i32* %14, align 8
  %50 = add nsw i32 %49, -1
  store i32 %50, i32* %14, align 8
  %51 = load i64*, i64** %12, align 8
  %52 = icmp eq i64* %51, %13
  br i1 %52, label %55, label %53

53:                                               ; preds = %45
  store i64* %13, i64** %12, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %8) #4
  %54 = load i64*, i64** %47, align 8
  br label %55

55:                                               ; preds = %53, %45
  %56 = phi i64* [ %54, %53 ], [ %46, %45 ]
  %57 = phi i64* [ %13, %53 ], [ %48, %45 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %56, i64* %57) #4
  br label %58

58:                                               ; preds = %43, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9Accessors28MakeModuleNamespaceEntryInfoEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = tail call i64* @_ZN2v88internal9Accessors12MakeAccessorEPNS0_7IsolateENS0_6HandleINS0_4NameEEEPFvNS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEEEPFvS9_NS7_ISB_EERKNSA_INS_7BooleanEEEE(%"class.v8::internal::Isolate"* %0, i64* %1, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)* nonnull @_ZN2v88internal9Accessors26ModuleNamespaceEntryGetterENS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEE, void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo.1187"*)* nonnull @_ZN2v88internal9Accessors26ModuleNamespaceEntrySetterENS_5LocalINS_4NameEEENS2_INS_5ValueEEERKNS_20PropertyCallbackInfoINS_7BooleanEEE)
  ret i64* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Accessors18StringLengthGetterENS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEE(%"class.v8::Name"* nocapture readnone, %"class.v8::PropertyCallbackInfo"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %4 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %1, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 2
  %7 = bitcast i64* %6 to %"class.v8::internal::Isolate"**
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %9 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 40, i1 false) #4
  %10 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1522", %"struct.std::__1::atomic.1522"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %18, label %12, !prof !2

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 1
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 14, i32 0
  %16 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %16, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %17, %"class.v8::internal::RuntimeCallStats"** %13, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %17, %"class.v8::internal::RuntimeCallTimer"* %14, i32 208) #4
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31
  %20 = bitcast %"struct.v8::internal::HandleScopeData"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 1
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %24, align 8
  %27 = load i64*, i64** %4, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 6
  %29 = load i64, i64* %28, align 8
  %30 = and i64 %29, 1
  %31 = icmp eq i64 %30, 0
  %32 = inttoptr i64 %21 to i64*
  br i1 %31, label %44, label %33

33:                                               ; preds = %18
  %34 = and i64 %29, -4294967296
  %35 = add i64 %29, -1
  %36 = inttoptr i64 %35 to i32*
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = zext i32 %37 to i64
  %39 = or i64 %34, %38
  %40 = add i64 %39, 7
  %41 = inttoptr i64 %40 to i16*
  %42 = load atomic i16, i16* %41 monotonic, align 2
  %43 = icmp ult i16 %42, 64
  br i1 %43, label %53, label %44

44:                                               ; preds = %18, %33
  %45 = getelementptr inbounds i64, i64* %27, i64 1
  %46 = load i64, i64* %45, align 8
  %47 = and i64 %46, -4294967296
  %48 = add i64 %46, 11
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %47, %51
  br label %53

53:                                               ; preds = %44, %33
  %54 = phi i64 [ %29, %33 ], [ %52, %44 ]
  %55 = add i64 %54, 7
  %56 = inttoptr i64 %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = sext i32 %57 to i64
  %59 = shl nsw i64 %58, 1
  %60 = getelementptr inbounds i64, i64* %27, i64 4
  %61 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 4
  %62 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %61, align 8
  %63 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %53
  %65 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %62, i64 %59) #4
  br label %76

66:                                               ; preds = %53
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  %68 = icmp eq i64* %23, %32
  br i1 %68, label %69, label %71

69:                                               ; preds = %66
  %70 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #4
  br label %71

71:                                               ; preds = %69, %66
  %72 = phi i64* [ %70, %69 ], [ %32, %66 ]
  %73 = ptrtoint i64* %72 to i64
  %74 = add i64 %73, 8
  %75 = inttoptr i64 %74 to i64*
  store i64* %75, i64** %67, align 8
  store i64 %59, i64* %72, align 8
  br label %76

76:                                               ; preds = %64, %71
  %77 = phi i64* [ %65, %64 ], [ %72, %71 ]
  %78 = icmp eq i64* %77, null
  %79 = getelementptr inbounds i64, i64* %27, i64 3
  %80 = select i1 %78, i64* %79, i64* %77, !prof !3
  %81 = load i64, i64* %80, align 8
  store i64 %81, i64* %60, align 8
  %82 = icmp eq %"class.v8::internal::Isolate"* %8, null
  br i1 %82, label %95, label %83

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %19, i64 0, i32 0
  %85 = load i64*, i64** %84, align 8
  store i64 %21, i64* %20, align 8
  %86 = load i32, i32* %24, align 8
  %87 = add nsw i32 %86, -1
  store i32 %87, i32* %24, align 8
  %88 = load i64*, i64** %22, align 8
  %89 = icmp eq i64* %88, %23
  br i1 %89, label %92, label %90

90:                                               ; preds = %83
  store i64* %23, i64** %22, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %8) #4
  %91 = load i64*, i64** %84, align 8
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i64* [ %91, %90 ], [ %32, %83 ]
  %94 = phi i64* [ %23, %90 ], [ %85, %83 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %93, i64* %94) #4
  br label %95

95:                                               ; preds = %76, %92
  %96 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 0
  %97 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %96, align 8
  %98 = icmp eq %"class.v8::internal::RuntimeCallStats"* %97, null
  br i1 %98, label %101, label %99, !prof !2

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %97, %"class.v8::internal::RuntimeCallTimer"* %100) #4
  br label %101

101:                                              ; preds = %95, %99
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9Accessors20MakeStringLengthInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 363
  %3 = tail call i64* @_ZN2v88internal9Accessors12MakeAccessorEPNS0_7IsolateENS0_6HandleINS0_4NameEEEPFvNS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEEEPFvS9_NS7_ISB_EERKNSA_INS_7BooleanEEEE(%"class.v8::internal::Isolate"* %0, i64* %2, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)* nonnull @_ZN2v88internal9Accessors18StringLengthGetterENS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEE, void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo.1187"*)* null)
  ret i64* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Accessors23FunctionPrototypeGetterENS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEE(%"class.v8::Name"* nocapture readnone, %"class.v8::PropertyCallbackInfo"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::JSFunction>::ObjectRef", align 8
  %4 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %5 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %1, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 2
  %8 = bitcast i64* %7 to %"class.v8::internal::Isolate"**
  %9 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %10 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 40, i1 false) #4
  %11 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1522", %"struct.std::__1::atomic.1522"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %19, label %13, !prof !2

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 0
  %15 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 1
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 14, i32 0
  %17 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %17, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %18, %"class.v8::internal::RuntimeCallStats"** %14, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %18, %"class.v8::internal::RuntimeCallTimer"* %15, i32 152) #4
  br label %19

19:                                               ; preds = %2, %13
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31
  %21 = bitcast %"struct.v8::internal::HandleScopeData"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %24 = load i64*, i64** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %25, align 8
  %28 = load i64*, i64** %5, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 1
  %30 = load i64, i64* %29, align 8
  %31 = and i64 %30, -4294967296
  %32 = add i64 %30, -1
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %31, %35
  %37 = add i64 %36, 9
  %38 = inttoptr i64 %37 to i8*
  %39 = load atomic i8, i8* %38 monotonic, align 1
  %40 = and i8 %39, 1
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %87

42:                                               ; preds = %19
  %43 = add i64 %30, 27
  %44 = inttoptr i64 %43 to i32*
  %45 = load atomic i32, i32* %44 acquire, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %31, %46
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %31, %51
  %53 = add i64 %52, 7
  %54 = inttoptr i64 %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = icmp eq i16 %55, 172
  br i1 %56, label %87, label %57

57:                                               ; preds = %42
  %58 = load atomic i32, i32* %44 acquire, align 4
  %59 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %60 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %59, null
  br i1 %60, label %67, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %59, i64 0, i32 0, i32 1
  %63 = load i8, i8* %62, align 8, !range !6
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %59, i64 0, i32 1, i64 0
  br label %75

67:                                               ; preds = %61, %57
  %68 = and i64 %30, -262144
  %69 = or i64 %68, 16
  %70 = inttoptr i64 %69 to i64*
  %71 = load i64, i64* %70, align 16
  %72 = add i64 %71, -41416
  %73 = inttoptr i64 %72 to %"class.v8::internal::Isolate"*
  %74 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %73, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %75

75:                                               ; preds = %67, %65
  %76 = phi i64* [ %74, %67 ], [ %66, %65 ]
  %77 = getelementptr inbounds i64, i64* %76, i64 5
  %78 = load i64, i64* %77, align 8
  %79 = trunc i64 %78 to i32
  %80 = icmp eq i32 %58, %79
  br i1 %80, label %81, label %87

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 68
  %83 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %82, align 8
  %84 = call zeroext i1 @_ZNK2v88internal5Debug34GetTemporaryObjectTrackingDisabledEv(%"class.v8::internal::Debug"* %83) #4
  call void @_ZN2v88internal5Debug34SetTemporaryObjectTrackingDisabledEb(%"class.v8::internal::Debug"* %83, i1 zeroext true) #4
  %85 = bitcast %"class.v8::internal::Isolate"* %9 to %"class.v8::internal::Factory"*
  %86 = call i64* @_ZN2v88internal7Factory20NewFunctionPrototypeENS0_6HandleINS0_10JSFunctionEEE(%"class.v8::internal::Factory"* %85, i64* %29) #4
  call void @_ZN2v88internal10JSFunction12SetPrototypeENS0_6HandleIS1_EENS2_INS0_6ObjectEEE(i64* %29, i64* %86) #4
  call void @_ZN2v88internal5Debug34SetTemporaryObjectTrackingDisabledEb(%"class.v8::internal::Debug"* %83, i1 zeroext %84) #4
  br label %87

87:                                               ; preds = %81, %75, %42, %19
  %88 = bitcast %"class.v8::internal::Handle<v8::internal::JSFunction>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #4
  %89 = load i64, i64* %29, align 8
  %90 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSFunction>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSFunction>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSFunction>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSFunction>::ObjectRef"* %3, i64 0, i32 0
  %92 = and i64 %89, -4294967296
  %93 = call i64 @_ZNK2v88internal10JSFunction9prototypeENS0_16PtrComprCageBaseE(%"class.v8::internal::JSFunction"* nonnull %91, i64 %92) #4
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 4
  %95 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %94, align 8
  %96 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %87
  %98 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %95, i64 %93) #4
  br label %111

99:                                               ; preds = %87
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %101 = load i64*, i64** %100, align 8
  %102 = load i64*, i64** %23, align 8
  %103 = icmp eq i64* %101, %102
  br i1 %103, label %104, label %106

104:                                              ; preds = %99
  %105 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #4
  br label %106

106:                                              ; preds = %104, %99
  %107 = phi i64* [ %105, %104 ], [ %101, %99 ]
  %108 = ptrtoint i64* %107 to i64
  %109 = add i64 %108, 8
  %110 = inttoptr i64 %109 to i64*
  store i64* %110, i64** %100, align 8
  store i64 %93, i64* %107, align 8
  br label %111

111:                                              ; preds = %97, %106
  %112 = phi i64* [ %98, %97 ], [ %107, %106 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #4
  %113 = load i64*, i64** %5, align 8
  %114 = getelementptr inbounds i64, i64* %113, i64 4
  %115 = icmp eq i64* %112, null
  %116 = getelementptr inbounds i64, i64* %113, i64 3
  %117 = select i1 %115, i64* %116, i64* %112, !prof !3
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %114, align 8
  %119 = icmp eq %"class.v8::internal::Isolate"* %9, null
  br i1 %119, label %133, label %120

120:                                              ; preds = %111
  %121 = inttoptr i64 %22 to i64*
  %122 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %20, i64 0, i32 0
  %123 = load i64*, i64** %122, align 8
  store i64 %22, i64* %21, align 8
  %124 = load i32, i32* %25, align 8
  %125 = add nsw i32 %124, -1
  store i32 %125, i32* %25, align 8
  %126 = load i64*, i64** %23, align 8
  %127 = icmp eq i64* %126, %24
  br i1 %127, label %130, label %128

128:                                              ; preds = %120
  store i64* %24, i64** %23, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %9) #4
  %129 = load i64*, i64** %122, align 8
  br label %130

130:                                              ; preds = %128, %120
  %131 = phi i64* [ %129, %128 ], [ %121, %120 ]
  %132 = phi i64* [ %24, %128 ], [ %123, %120 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %131, i64* %132) #4
  br label %133

133:                                              ; preds = %111, %130
  %134 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 0
  %135 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %134, align 8
  %136 = icmp eq %"class.v8::internal::RuntimeCallStats"* %135, null
  br i1 %136, label %139, label %137, !prof !2

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %135, %"class.v8::internal::RuntimeCallTimer"* %138) #4
  br label %139

139:                                              ; preds = %133, %137
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Accessors23FunctionPrototypeSetterENS_5LocalINS_4NameEEENS2_INS_5ValueEEERKNS_20PropertyCallbackInfoINS_7BooleanEEE(%"class.v8::Name"* nocapture readnone, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo.1187"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %4 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %5 = getelementptr inbounds %"class.v8::PropertyCallbackInfo.1187", %"class.v8::PropertyCallbackInfo.1187"* %2, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 2
  %8 = bitcast i64* %7 to %"class.v8::internal::Isolate"**
  %9 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %10 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 40, i1 false) #4
  %11 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1522", %"struct.std::__1::atomic.1522"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %19, label %13, !prof !2

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 0
  %15 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 1
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 14, i32 0
  %17 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %17, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %18, %"class.v8::internal::RuntimeCallStats"** %14, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %18, %"class.v8::internal::RuntimeCallTimer"* %15, i32 153) #4
  br label %19

19:                                               ; preds = %3, %13
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31
  %21 = bitcast %"struct.v8::internal::HandleScopeData"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %24 = load i64*, i64** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %25, align 8
  %28 = bitcast %"class.v8::Value"* %1 to i64*
  %29 = load i64*, i64** %5, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 1
  call void @_ZN2v88internal10JSFunction12SetPrototypeENS0_6HandleIS1_EENS2_INS0_6ObjectEEE(i64* %30, i64* %28) #4
  %31 = load i64*, i64** %5, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 4
  %33 = getelementptr inbounds i64, i64* %31, i64 2
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, 184
  %36 = inttoptr i64 %35 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %32, align 8
  %38 = icmp eq %"class.v8::internal::Isolate"* %9, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %19
  %40 = inttoptr i64 %22 to i64*
  %41 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %20, i64 0, i32 0
  %42 = load i64*, i64** %41, align 8
  store i64 %22, i64* %21, align 8
  %43 = load i32, i32* %25, align 8
  %44 = add nsw i32 %43, -1
  store i32 %44, i32* %25, align 8
  %45 = load i64*, i64** %23, align 8
  %46 = icmp eq i64* %45, %24
  br i1 %46, label %49, label %47

47:                                               ; preds = %39
  store i64* %24, i64** %23, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %9) #4
  %48 = load i64*, i64** %41, align 8
  br label %49

49:                                               ; preds = %47, %39
  %50 = phi i64* [ %48, %47 ], [ %40, %39 ]
  %51 = phi i64* [ %24, %47 ], [ %42, %39 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %50, i64* %51) #4
  br label %52

52:                                               ; preds = %19, %49
  %53 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 0
  %54 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %53, align 8
  %55 = icmp eq %"class.v8::internal::RuntimeCallStats"* %54, null
  br i1 %55, label %58, label %56, !prof !2

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %54, %"class.v8::internal::RuntimeCallTimer"* %57) #4
  br label %58

58:                                               ; preds = %52, %56
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #4
  ret void
}

declare void @_ZN2v88internal10JSFunction12SetPrototypeENS0_6HandleIS1_EENS2_INS0_6ObjectEEE(i64*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9Accessors25MakeFunctionPrototypeInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 408
  %3 = tail call i64* @_ZN2v88internal9Accessors12MakeAccessorEPNS0_7IsolateENS0_6HandleINS0_4NameEEEPFvNS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEEEPFvS9_NS7_ISB_EERKNSA_INS_7BooleanEEEE(%"class.v8::internal::Isolate"* %0, i64* %2, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)* nonnull @_ZN2v88internal9Accessors23FunctionPrototypeGetterENS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEE, void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo.1187"*)* nonnull @_ZN2v88internal9Accessors23FunctionPrototypeSetterENS_5LocalINS_4NameEEENS2_INS_5ValueEEERKNS_20PropertyCallbackInfoINS_7BooleanEEE)
  ret i64* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Accessors20FunctionLengthGetterENS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEE(%"class.v8::Name"* nocapture readnone, %"class.v8::PropertyCallbackInfo"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %4 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %1, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 2
  %7 = bitcast i64* %6 to %"class.v8::internal::Isolate"**
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %9 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 40, i1 false) #4
  %10 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1522", %"struct.std::__1::atomic.1522"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %18, label %12, !prof !2

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 1
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 14, i32 0
  %16 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %16, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %17, %"class.v8::internal::RuntimeCallStats"** %13, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %17, %"class.v8::internal::RuntimeCallTimer"* %14, i32 151) #4
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31
  %20 = bitcast %"struct.v8::internal::HandleScopeData"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 1
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %24, align 8
  %27 = load i64*, i64** %4, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 1
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 11
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i64 %29, -4294967296
  %34 = zext i32 %32 to i64
  %35 = or i64 %33, %34
  %36 = add i64 %35, 19
  %37 = inttoptr i64 %36 to i16*
  %38 = load i16, i16* %37, align 2
  %39 = sext i16 %38 to i64
  %40 = shl nsw i64 %39, 1
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 4
  %42 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %41, align 8
  %43 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %42, null
  %44 = inttoptr i64 %21 to i64*
  br i1 %43, label %47, label %45

45:                                               ; preds = %18
  %46 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %42, i64 %40) #4
  br label %57

47:                                               ; preds = %18
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  %49 = icmp eq i64* %23, %44
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #4
  br label %52

52:                                               ; preds = %50, %47
  %53 = phi i64* [ %51, %50 ], [ %44, %47 ]
  %54 = ptrtoint i64* %53 to i64
  %55 = add i64 %54, 8
  %56 = inttoptr i64 %55 to i64*
  store i64* %56, i64** %48, align 8
  store i64 %40, i64* %53, align 8
  br label %57

57:                                               ; preds = %45, %52
  %58 = phi i64* [ %46, %45 ], [ %53, %52 ]
  %59 = load i64*, i64** %4, align 8
  %60 = getelementptr inbounds i64, i64* %59, i64 4
  %61 = icmp eq i64* %58, null
  %62 = getelementptr inbounds i64, i64* %59, i64 3
  %63 = select i1 %61, i64* %62, i64* %58, !prof !3
  %64 = load i64, i64* %63, align 8
  store i64 %64, i64* %60, align 8
  %65 = icmp eq %"class.v8::internal::Isolate"* %8, null
  br i1 %65, label %78, label %66

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %19, i64 0, i32 0
  %68 = load i64*, i64** %67, align 8
  store i64 %21, i64* %20, align 8
  %69 = load i32, i32* %24, align 8
  %70 = add nsw i32 %69, -1
  store i32 %70, i32* %24, align 8
  %71 = load i64*, i64** %22, align 8
  %72 = icmp eq i64* %71, %23
  br i1 %72, label %75, label %73

73:                                               ; preds = %66
  store i64* %23, i64** %22, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %8) #4
  %74 = load i64*, i64** %67, align 8
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i64* [ %74, %73 ], [ %44, %66 ]
  %77 = phi i64* [ %23, %73 ], [ %68, %66 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %76, i64* %77) #4
  br label %78

78:                                               ; preds = %57, %75
  %79 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 0
  %80 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %79, align 8
  %81 = icmp eq %"class.v8::internal::RuntimeCallStats"* %80, null
  br i1 %81, label %84, label %82, !prof !2

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %80, %"class.v8::internal::RuntimeCallTimer"* %83) #4
  br label %84

84:                                               ; preds = %78, %82
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9Accessors22MakeFunctionLengthInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 363
  %3 = tail call i64* @_ZN2v88internal9Accessors12MakeAccessorEPNS0_7IsolateENS0_6HandleINS0_4NameEEEPFvNS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEEEPFvS9_NS7_ISB_EERKNSA_INS_7BooleanEEEE(%"class.v8::internal::Isolate"* %0, i64* %2, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)* nonnull @_ZN2v88internal9Accessors20FunctionLengthGetterENS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEE, void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo.1187"*)* nonnull @_ZN2v88internal9Accessors25ReconfigureToDataPropertyENS_5LocalINS_4NameEEENS2_INS_5ValueEEERKNS_20PropertyCallbackInfoINS_7BooleanEEE)
  ret i64* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Accessors18FunctionNameGetterENS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEE(%"class.v8::Name"* nocapture readnone, %"class.v8::PropertyCallbackInfo"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %1, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 2
  %6 = bitcast i64* %5 to %"class.v8::internal::Isolate"**
  %7 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 31
  %9 = bitcast %"struct.v8::internal::HandleScopeData"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 31, i32 1
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 31, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %13, align 8
  %16 = load i64*, i64** %3, align 8
  %17 = getelementptr inbounds i64, i64* %16, i64 1
  %18 = tail call i64* @_ZN2v88internal10JSFunction7GetNameEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %7, i64* %17) #4
  %19 = load i64*, i64** %3, align 8
  %20 = getelementptr inbounds i64, i64* %19, i64 4
  %21 = icmp eq i64* %18, null
  %22 = getelementptr inbounds i64, i64* %19, i64 3
  %23 = select i1 %21, i64* %22, i64* %18, !prof !3
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %20, align 8
  %25 = icmp eq %"class.v8::internal::Isolate"* %7, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %2
  %27 = inttoptr i64 %10 to i64*
  %28 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %8, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  store i64 %10, i64* %9, align 8
  %30 = load i32, i32* %13, align 8
  %31 = add nsw i32 %30, -1
  store i32 %31, i32* %13, align 8
  %32 = load i64*, i64** %11, align 8
  %33 = icmp eq i64* %32, %12
  br i1 %33, label %36, label %34

34:                                               ; preds = %26
  store i64* %12, i64** %11, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %7) #4
  %35 = load i64*, i64** %28, align 8
  br label %36

36:                                               ; preds = %34, %26
  %37 = phi i64* [ %35, %34 ], [ %27, %26 ]
  %38 = phi i64* [ %12, %34 ], [ %29, %26 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %37, i64* %38) #4
  br label %39

39:                                               ; preds = %2, %36
  ret void
}

declare i64* @_ZN2v88internal10JSFunction7GetNameEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9Accessors20MakeFunctionNameInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 378
  %3 = tail call i64* @_ZN2v88internal9Accessors12MakeAccessorEPNS0_7IsolateENS0_6HandleINS0_4NameEEEPFvNS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEEEPFvS9_NS7_ISB_EERKNSA_INS_7BooleanEEEE(%"class.v8::internal::Isolate"* %0, i64* %2, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)* nonnull @_ZN2v88internal9Accessors18FunctionNameGetterENS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEE, void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo.1187"*)* nonnull @_ZN2v88internal9Accessors25ReconfigureToDataPropertyENS_5LocalINS_4NameEEENS2_INS_5ValueEEERKNS_20PropertyCallbackInfoINS_7BooleanEEE)
  ret i64* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9Accessors20FunctionGetArgumentsEPNS0_15JavaScriptFrameEi(%"class.v8::internal::JavaScriptFrame"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::JavaScriptFrameIterator", align 8
  %4 = getelementptr inbounds %"class.v8::internal::JavaScriptFrame", %"class.v8::internal::JavaScriptFrame"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::JavaScriptFrame", %"class.v8::internal::JavaScriptFrame"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.v8::internal::JavaScriptFrameIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1616, i8* nonnull %8) #4
  %9 = getelementptr inbounds %"class.v8::internal::JavaScriptFrameIterator", %"class.v8::internal::JavaScriptFrameIterator"* %3, i64 0, i32 0
  call void @_ZN2v88internal18StackFrameIteratorC1EPNS0_7IsolateE(%"class.v8::internal::StackFrameIterator"* nonnull %9, %"class.v8::internal::Isolate"* %5) #4
  %10 = getelementptr inbounds %"class.v8::internal::JavaScriptFrameIterator", %"class.v8::internal::JavaScriptFrameIterator"* %3, i64 0, i32 0, i32 0, i32 23
  %11 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %10, align 8
  %12 = icmp eq %"class.v8::internal::StackFrame"* %11, null
  br i1 %12, label %24, label %13

13:                                               ; preds = %2
  call void @_ZN2v88internal23JavaScriptFrameIterator7AdvanceEv(%"class.v8::internal::JavaScriptFrameIterator"* nonnull %3) #4
  %14 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %10, align 8
  %15 = icmp eq %"class.v8::internal::StackFrame"* %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %13, %21
  %17 = phi %"class.v8::internal::StackFrame"* [ %22, %21 ], [ %14, %13 ]
  %18 = getelementptr inbounds %"class.v8::internal::StackFrame", %"class.v8::internal::StackFrame"* %17, i64 0, i32 3, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, %7
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  call void @_ZN2v88internal23JavaScriptFrameIterator7AdvanceEv(%"class.v8::internal::JavaScriptFrameIterator"* nonnull %3) #4
  %22 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %10, align 8
  %23 = icmp eq %"class.v8::internal::StackFrame"* %22, null
  br i1 %23, label %24, label %16

24:                                               ; preds = %21, %2, %13
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %8) #4
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #8
  unreachable

25:                                               ; preds = %16
  %26 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_117GetFrameArgumentsEPNS0_7IsolateEPNS0_23JavaScriptFrameIteratorEi(%"class.v8::internal::Isolate"* %5, %"class.v8::internal::JavaScriptFrameIterator"* nonnull %3, i32 %1)
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %8) #4
  ret i64* %26
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_117GetFrameArgumentsEPNS0_7IsolateEPNS0_23JavaScriptFrameIteratorEi(%"class.v8::internal::Isolate"*, %"class.v8::internal::JavaScriptFrameIterator"* nocapture readonly, i32) unnamed_addr #0 {
  %4 = alloca %"class.v8::internal::TranslatedState", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.v8::internal::TranslatedFrame::iterator", align 8
  %7 = getelementptr inbounds %"class.v8::internal::JavaScriptFrameIterator", %"class.v8::internal::JavaScriptFrameIterator"* %1, i64 0, i32 0, i32 0, i32 23
  %8 = bitcast %"class.v8::internal::StackFrame"** %7 to %"class.v8::internal::JavaScriptFrame"**
  %9 = load %"class.v8::internal::JavaScriptFrame"*, %"class.v8::internal::JavaScriptFrame"** %8, align 8
  %10 = icmp sgt i32 %2, 0
  br i1 %10, label %11, label %141

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8::internal::JavaScriptFrame", %"class.v8::internal::JavaScriptFrame"* %9, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = bitcast %"class.v8::internal::Isolate"** %12 to %"class.v8::internal::Factory"**
  %14 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %13, align 8
  %15 = bitcast %"class.v8::internal::TranslatedState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %15) #4
  call void @_ZN2v88internal15TranslatedStateC1EPKNS0_15JavaScriptFrameE(%"class.v8::internal::TranslatedState"* nonnull %4, %"class.v8::internal::JavaScriptFrame"* %9) #4
  %16 = getelementptr inbounds %"class.v8::internal::JavaScriptFrame", %"class.v8::internal::JavaScriptFrame"* %9, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %17 = load i64, i64* %16, align 8
  call void @_ZN2v88internal15TranslatedState7PrepareEm(%"class.v8::internal::TranslatedState"* nonnull %4, i64 %17) #4
  %18 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #4
  store i32 0, i32* %5, align 4
  %19 = call %"class.v8::internal::TranslatedFrame"* @_ZN2v88internal15TranslatedState32GetArgumentsInfoFromJSFrameIndexEiPi(%"class.v8::internal::TranslatedState"* nonnull %4, i32 %2, i32* nonnull %5) #4
  %20 = bitcast %"class.v8::internal::TranslatedFrame::iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #4
  %21 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %19, i64 0, i32 8, i32 0, i32 0, i32 1
  %22 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %21, align 8, !noalias !7
  %23 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %19, i64 0, i32 8, i32 0, i32 1
  %24 = load i64, i64* %23, align 8, !noalias !7
  %25 = lshr i64 %24, 7
  %26 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %22, i64 %25
  %27 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %19, i64 0, i32 8, i32 0, i32 0, i32 2
  %28 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %27, align 8, !noalias !7
  %29 = icmp eq %"class.v8::internal::TranslatedValue"** %28, %22
  br i1 %29, label %34, label %30

30:                                               ; preds = %11
  %31 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %26, align 8, !noalias !7
  %32 = and i64 %24, 127
  %33 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %31, i64 %32
  br label %34

34:                                               ; preds = %30, %11
  %35 = phi %"class.v8::internal::TranslatedValue"* [ %33, %30 ], [ null, %11 ]
  %36 = getelementptr inbounds %"class.v8::internal::TranslatedFrame::iterator", %"class.v8::internal::TranslatedFrame::iterator"* %6, i64 0, i32 0, i32 0
  store %"class.v8::internal::TranslatedValue"** %26, %"class.v8::internal::TranslatedValue"*** %36, align 8, !alias.scope !7
  %37 = getelementptr inbounds %"class.v8::internal::TranslatedFrame::iterator", %"class.v8::internal::TranslatedFrame::iterator"* %6, i64 0, i32 0, i32 1
  store %"class.v8::internal::TranslatedValue"* %35, %"class.v8::internal::TranslatedValue"** %37, align 8, !alias.scope !7
  %38 = getelementptr inbounds %"class.v8::internal::TranslatedFrame::iterator", %"class.v8::internal::TranslatedFrame::iterator"* %6, i64 0, i32 1
  %39 = call zeroext i1 @_ZNK2v88internal15TranslatedValue20IsMaterializedObjectEv(%"class.v8::internal::TranslatedValue"* %35) #4
  %40 = call i64* @_ZN2v88internal15TranslatedValue8GetValueEv(%"class.v8::internal::TranslatedValue"* %35) #4
  store i32 1, i32* %38, align 8, !noalias !10
  %41 = getelementptr inbounds %"class.v8::internal::TranslatedFrame::iterator", %"class.v8::internal::TranslatedFrame::iterator"* %6, i64 0, i32 0
  call void @_ZN2v88internal15TranslatedFrame15AdvanceIteratorEPNSt3__116__deque_iteratorINS0_15TranslatedValueEPS4_RS4_PS5_lLl0EEE(%"class.std::__1::__deque_iterator"* nonnull %41) #4, !noalias !10
  %42 = load i32, i32* %38, align 8, !noalias !13
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %38, align 8, !noalias !13
  call void @_ZN2v88internal15TranslatedFrame15AdvanceIteratorEPNSt3__116__deque_iteratorINS0_15TranslatedValueEPS4_RS4_PS5_lLl0EEE(%"class.std::__1::__deque_iterator"* nonnull %41) #4, !noalias !13
  %44 = load i32, i32* %5, align 4
  %45 = add nsw i32 %44, -1
  store i32 %45, i32* %5, align 4
  %46 = call i64* @_ZN2v88internal7Factory18NewArgumentsObjectENS0_6HandleINS0_10JSFunctionEEEi(%"class.v8::internal::Factory"* %14, i64* %40, i32 %45) #4
  %47 = bitcast %"class.v8::internal::Factory"* %14 to %"class.v8::internal::FactoryBase"*
  %48 = load i32, i32* %5, align 4
  %49 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %47, i32 %48, i8 zeroext 0) #4
  %50 = load i32, i32* %5, align 4
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %88, label %52

52:                                               ; preds = %132, %34
  %53 = phi i1 [ %39, %34 ], [ %95, %132 ]
  %54 = load i64, i64* %46, align 8
  %55 = load i64, i64* %49, align 8
  %56 = add i64 %54, 7
  %57 = inttoptr i64 %56 to i32*
  %58 = trunc i64 %55 to i32
  store atomic volatile i32 %58, i32* %57 monotonic, align 4
  %59 = and i64 %55, 1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %72, label %61

61:                                               ; preds = %52
  %62 = and i64 %54, -262144
  %63 = or i64 %62, 8
  %64 = inttoptr i64 %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = and i64 %65, 262144
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %72, label %68

68:                                               ; preds = %61
  %69 = or i64 %62, 16
  %70 = inttoptr i64 %69 to %"class.v8::internal::Heap"**
  %71 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %70, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %71, i64 %54, i64 %56, i64 %55) #4
  br label %72

72:                                               ; preds = %68, %61, %52
  %73 = and i64 %55, -262144
  %74 = or i64 %73, 8
  %75 = inttoptr i64 %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = and i64 %76, 24
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %87, label %79

79:                                               ; preds = %72
  %80 = and i64 %54, -262144
  %81 = or i64 %80, 8
  %82 = inttoptr i64 %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = and i64 %83, 24
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %79
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %54, i64 %56, i64 %55) #4
  br label %87

87:                                               ; preds = %86, %79, %72
  br i1 %53, label %139, label %140

88:                                               ; preds = %34, %132
  %89 = phi i64 [ %135, %132 ], [ 0, %34 ]
  %90 = phi i1 [ %95, %132 ], [ %39, %34 ]
  br i1 %90, label %94, label %91

91:                                               ; preds = %88
  %92 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %37, align 8
  %93 = call zeroext i1 @_ZNK2v88internal15TranslatedValue20IsMaterializedObjectEv(%"class.v8::internal::TranslatedValue"* %92) #4
  br label %94

94:                                               ; preds = %91, %88
  %95 = phi i1 [ true, %88 ], [ %93, %91 ]
  %96 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %37, align 8
  %97 = call i64* @_ZN2v88internal15TranslatedValue8GetValueEv(%"class.v8::internal::TranslatedValue"* %96) #4
  %98 = load i64, i64* %49, align 8
  %99 = load i64, i64* %97, align 8
  %100 = trunc i64 %89 to i32
  %101 = shl i32 %100, 2
  %102 = sext i32 %101 to i64
  %103 = add nsw i64 %102, 7
  %104 = add i64 %103, %98
  %105 = inttoptr i64 %104 to i32*
  %106 = trunc i64 %99 to i32
  store atomic volatile i32 %106, i32* %105 monotonic, align 4
  %107 = and i64 %99, 1
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %132, label %109

109:                                              ; preds = %94
  %110 = and i64 %98, -262144
  %111 = or i64 %110, 8
  %112 = inttoptr i64 %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = and i64 %113, 262144
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %120, label %116

116:                                              ; preds = %109
  %117 = or i64 %110, 16
  %118 = inttoptr i64 %117 to %"class.v8::internal::Heap"**
  %119 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %118, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %119, i64 %98, i64 %104, i64 %99) #4
  br label %120

120:                                              ; preds = %116, %109
  %121 = and i64 %99, -262144
  %122 = or i64 %121, 8
  %123 = inttoptr i64 %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = and i64 %124, 24
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %132, label %127

127:                                              ; preds = %120
  %128 = load i64, i64* %112, align 8
  %129 = and i64 %128, 24
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %127
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %98, i64 %104, i64 %99) #4
  br label %132

132:                                              ; preds = %131, %127, %120, %94
  %133 = load i32, i32* %38, align 8, !noalias !16
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %38, align 8, !noalias !16
  call void @_ZN2v88internal15TranslatedFrame15AdvanceIteratorEPNSt3__116__deque_iteratorINS0_15TranslatedValueEPS4_RS4_PS5_lLl0EEE(%"class.std::__1::__deque_iterator"* nonnull %41) #4, !noalias !16
  %135 = add nuw nsw i64 %89, 1
  %136 = load i32, i32* %5, align 4
  %137 = sext i32 %136 to i64
  %138 = icmp slt i64 %135, %137
  br i1 %138, label %88, label %52

139:                                              ; preds = %87
  call void @_ZN2v88internal15TranslatedState31StoreMaterializedValuesAndDeoptEPNS0_15JavaScriptFrameE(%"class.v8::internal::TranslatedState"* nonnull %4, %"class.v8::internal::JavaScriptFrame"* %9) #4
  br label %140

140:                                              ; preds = %87, %139
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #4
  call void @_ZN2v88internal15TranslatedStateD2Ev(%"class.v8::internal::TranslatedState"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %15) #4
  br label %268

141:                                              ; preds = %3
  %142 = bitcast %"class.v8::internal::JavaScriptFrame"* %9 to i32 (%"class.v8::internal::JavaScriptFrame"*)***
  %143 = load i32 (%"class.v8::internal::JavaScriptFrame"*)**, i32 (%"class.v8::internal::JavaScriptFrame"*)*** %142, align 8
  %144 = getelementptr inbounds i32 (%"class.v8::internal::JavaScriptFrame"*)*, i32 (%"class.v8::internal::JavaScriptFrame"*)** %143, i64 17
  %145 = load i32 (%"class.v8::internal::JavaScriptFrame"*)*, i32 (%"class.v8::internal::JavaScriptFrame"*)** %144, align 8
  %146 = tail call i32 %145(%"class.v8::internal::JavaScriptFrame"* %9) #4
  %147 = bitcast %"class.v8::internal::JavaScriptFrame"* %9 to i64 (%"class.v8::internal::JavaScriptFrame"*)***
  %148 = load i64 (%"class.v8::internal::JavaScriptFrame"*)**, i64 (%"class.v8::internal::JavaScriptFrame"*)*** %147, align 8
  %149 = getelementptr inbounds i64 (%"class.v8::internal::JavaScriptFrame"*)*, i64 (%"class.v8::internal::JavaScriptFrame"*)** %148, i64 13
  %150 = load i64 (%"class.v8::internal::JavaScriptFrame"*)*, i64 (%"class.v8::internal::JavaScriptFrame"*)** %149, align 8
  %151 = tail call i64 %150(%"class.v8::internal::JavaScriptFrame"* %9) #4
  %152 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %153 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %152, align 8
  %154 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %153, null
  br i1 %154, label %157, label %155

155:                                              ; preds = %141
  %156 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %153, i64 %151) #4
  br label %170

157:                                              ; preds = %141
  %158 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %159 = load i64*, i64** %158, align 8
  %160 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %161 = load i64*, i64** %160, align 8
  %162 = icmp eq i64* %159, %161
  br i1 %162, label %163, label %165

163:                                              ; preds = %157
  %164 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #4
  br label %165

165:                                              ; preds = %163, %157
  %166 = phi i64* [ %164, %163 ], [ %159, %157 ]
  %167 = ptrtoint i64* %166 to i64
  %168 = add i64 %167, 8
  %169 = inttoptr i64 %168 to i64*
  store i64* %169, i64** %158, align 8
  store i64 %151, i64* %166, align 8
  br label %170

170:                                              ; preds = %155, %165
  %171 = phi i64* [ %156, %155 ], [ %166, %165 ]
  %172 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %173 = tail call i64* @_ZN2v88internal7Factory18NewArgumentsObjectENS0_6HandleINS0_10JSFunctionEEEi(%"class.v8::internal::Factory"* %172, i64* %171, i32 %146) #4
  %174 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %175 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %174, i32 %146, i8 zeroext 0) #4
  %176 = icmp sgt i32 %146, 0
  br i1 %176, label %177, label %183

177:                                              ; preds = %170
  %178 = getelementptr inbounds %"class.v8::internal::JavaScriptFrame", %"class.v8::internal::JavaScriptFrame"* %9, i64 0, i32 0
  %179 = bitcast %"class.v8::internal::JavaScriptFrame"* %9 to i64 (%"class.v8::internal::CommonFrameWithJSLinkage"*, i32)***
  %180 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %181 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %182 = zext i32 %146 to i64
  br label %217

183:                                              ; preds = %265, %170
  %184 = load i64, i64* %173, align 8
  %185 = load i64, i64* %175, align 8
  %186 = add i64 %184, 7
  %187 = inttoptr i64 %186 to i32*
  %188 = trunc i64 %185 to i32
  store atomic volatile i32 %188, i32* %187 monotonic, align 4
  %189 = and i64 %185, 1
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %202, label %191

191:                                              ; preds = %183
  %192 = and i64 %184, -262144
  %193 = or i64 %192, 8
  %194 = inttoptr i64 %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = and i64 %195, 262144
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %202, label %198

198:                                              ; preds = %191
  %199 = or i64 %192, 16
  %200 = inttoptr i64 %199 to %"class.v8::internal::Heap"**
  %201 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %200, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %201, i64 %184, i64 %186, i64 %185) #4
  br label %202

202:                                              ; preds = %198, %191, %183
  %203 = and i64 %185, -262144
  %204 = or i64 %203, 8
  %205 = inttoptr i64 %204 to i64*
  %206 = load i64, i64* %205, align 8
  %207 = and i64 %206, 24
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %268, label %209

209:                                              ; preds = %202
  %210 = and i64 %184, -262144
  %211 = or i64 %210, 8
  %212 = inttoptr i64 %211 to i64*
  %213 = load i64, i64* %212, align 8
  %214 = and i64 %213, 24
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %216, label %268

216:                                              ; preds = %209
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %184, i64 %186, i64 %185) #4
  br label %268

217:                                              ; preds = %265, %177
  %218 = phi i64 [ 0, %177 ], [ %266, %265 ]
  %219 = load i64 (%"class.v8::internal::CommonFrameWithJSLinkage"*, i32)**, i64 (%"class.v8::internal::CommonFrameWithJSLinkage"*, i32)*** %179, align 8
  %220 = getelementptr inbounds i64 (%"class.v8::internal::CommonFrameWithJSLinkage"*, i32)*, i64 (%"class.v8::internal::CommonFrameWithJSLinkage"*, i32)** %219, i64 15
  %221 = load i64 (%"class.v8::internal::CommonFrameWithJSLinkage"*, i32)*, i64 (%"class.v8::internal::CommonFrameWithJSLinkage"*, i32)** %220, align 8
  %222 = trunc i64 %218 to i32
  %223 = tail call i64 %221(%"class.v8::internal::CommonFrameWithJSLinkage"* %178, i32 %222) #4
  %224 = load i64, i64* %180, align 8
  %225 = trunc i64 %223 to i32
  %226 = trunc i64 %224 to i32
  %227 = icmp eq i32 %225, %226
  br i1 %227, label %228, label %231

228:                                              ; preds = %217
  %229 = load i64, i64* %181, align 8
  %230 = trunc i64 %229 to i32
  br label %231

231:                                              ; preds = %228, %217
  %232 = phi i32 [ %230, %228 ], [ %225, %217 ]
  %233 = phi i64 [ %229, %228 ], [ %223, %217 ]
  %234 = load i64, i64* %175, align 8
  %235 = shl i32 %222, 2
  %236 = sext i32 %235 to i64
  %237 = add nsw i64 %236, 7
  %238 = add i64 %237, %234
  %239 = inttoptr i64 %238 to i32*
  store atomic volatile i32 %232, i32* %239 monotonic, align 4
  %240 = and i64 %233, 1
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %265, label %242

242:                                              ; preds = %231
  %243 = and i64 %234, -262144
  %244 = or i64 %243, 8
  %245 = inttoptr i64 %244 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = and i64 %246, 262144
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %253, label %249

249:                                              ; preds = %242
  %250 = or i64 %243, 16
  %251 = inttoptr i64 %250 to %"class.v8::internal::Heap"**
  %252 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %251, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %252, i64 %234, i64 %238, i64 %233) #4
  br label %253

253:                                              ; preds = %249, %242
  %254 = and i64 %233, -262144
  %255 = or i64 %254, 8
  %256 = inttoptr i64 %255 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = and i64 %257, 24
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %265, label %260

260:                                              ; preds = %253
  %261 = load i64, i64* %245, align 8
  %262 = and i64 %261, 24
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %264, label %265

264:                                              ; preds = %260
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %234, i64 %238, i64 %233) #4
  br label %265

265:                                              ; preds = %231, %253, %260, %264
  %266 = add nuw nsw i64 %218, 1
  %267 = icmp eq i64 %266, %182
  br i1 %267, label %183, label %217

268:                                              ; preds = %216, %209, %202, %140
  %269 = phi i64* [ %46, %140 ], [ %173, %202 ], [ %173, %209 ], [ %173, %216 ]
  ret i64* %269
}

declare void @_ZN2v88internal23JavaScriptFrameIterator7AdvanceEv(%"class.v8::internal::JavaScriptFrameIterator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Accessors23FunctionArgumentsGetterENS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEE(%"class.v8::Name"* nocapture readnone, %"class.v8::PropertyCallbackInfo"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.std::__1::vector.1203", align 8
  %4 = alloca %"class.v8::internal::JavaScriptFrameIterator", align 8
  %5 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %1, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 2
  %8 = bitcast i64* %7 to %"class.v8::internal::Isolate"**
  %9 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31
  %11 = bitcast %"struct.v8::internal::HandleScopeData"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 8
  %18 = load i64*, i64** %5, align 8
  %19 = getelementptr inbounds i64, i64* %18, i64 1
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 6
  %21 = load i64, i64* %19, align 8
  %22 = add i64 %21, 11
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i64 %21, -4294967296
  %26 = zext i32 %24 to i64
  %27 = or i64 %25, %26
  %28 = add i64 %27, 27
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 32
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %100

33:                                               ; preds = %2
  %34 = bitcast %"class.v8::internal::JavaScriptFrameIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1616, i8* nonnull %34) #4
  %35 = getelementptr inbounds %"class.v8::internal::JavaScriptFrameIterator", %"class.v8::internal::JavaScriptFrameIterator"* %4, i64 0, i32 0
  call void @_ZN2v88internal18StackFrameIteratorC1EPNS0_7IsolateE(%"class.v8::internal::StackFrameIterator"* nonnull %35, %"class.v8::internal::Isolate"* %9) #4
  %36 = getelementptr inbounds %"class.v8::internal::JavaScriptFrameIterator", %"class.v8::internal::JavaScriptFrameIterator"* %4, i64 0, i32 0, i32 0, i32 23
  %37 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %36, align 8
  %38 = icmp eq %"class.v8::internal::StackFrame"* %37, null
  br i1 %38, label %97, label %39

39:                                               ; preds = %33
  call void @_ZN2v88internal23JavaScriptFrameIterator7AdvanceEv(%"class.v8::internal::JavaScriptFrameIterator"* nonnull %4) #4
  %40 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %36, align 8
  %41 = icmp eq %"class.v8::internal::StackFrame"* %40, null
  br i1 %41, label %97, label %42

42:                                               ; preds = %39
  %43 = bitcast %"class.std::__1::vector.1203"* %3 to i8*
  %44 = getelementptr inbounds %"class.std::__1::vector.1203", %"class.std::__1::vector.1203"* %3, i64 0, i32 0, i32 1
  %45 = bitcast %"class.v8::internal::FrameSummary"** %44 to i64*
  %46 = bitcast %"class.std::__1::vector.1203"* %3 to i64*
  %47 = bitcast %"class.std::__1::vector.1203"* %3 to i8**
  br label %48

48:                                               ; preds = %42, %94
  %49 = phi %"class.v8::internal::StackFrame"* [ %40, %42 ], [ %95, %94 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 24, i1 false) #4
  %50 = bitcast %"class.v8::internal::StackFrame"* %49 to %"class.v8::internal::CommonFrameWithJSLinkage"*
  %51 = bitcast %"class.v8::internal::StackFrame"* %49 to void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1203"*)***
  %52 = load void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1203"*)**, void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1203"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1203"*)*, void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1203"*)** %52, i64 11
  %54 = load void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1203"*)*, void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1203"*)** %53, align 8
  call void %54(%"class.v8::internal::CommonFrameWithJSLinkage"* %50, %"class.std::__1::vector.1203"* nonnull %3) #4
  %55 = load i64, i64* %45, align 8
  %56 = load i64, i64* %46, align 8
  %57 = sub i64 %55, %56
  %58 = sdiv exact i64 %57, 56
  %59 = inttoptr i64 %56 to %"class.v8::internal::FrameSummary"*
  %60 = inttoptr i64 %55 to %"class.v8::internal::FrameSummary"*
  br label %61

61:                                               ; preds = %64, %48
  %62 = phi i64 [ %58, %48 ], [ %65, %64 ]
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %76, label %64

64:                                               ; preds = %61
  %65 = add i64 %62, -1
  %66 = getelementptr inbounds %"class.v8::internal::FrameSummary", %"class.v8::internal::FrameSummary"* %59, i64 %65, i32 0, i32 0, i32 2, i32 0, i32 0
  %67 = load i64*, i64** %66, align 8
  %68 = load i64, i64* %67, align 8
  %69 = load i64, i64* %19, align 8
  %70 = trunc i64 %68 to i32
  %71 = trunc i64 %69 to i32
  %72 = icmp eq i32 %70, %71
  br i1 %72, label %73, label %61

73:                                               ; preds = %64
  %74 = trunc i64 %62 to i32
  %75 = add nsw i32 %74, -1
  br label %76

76:                                               ; preds = %61, %73
  %77 = phi i32 [ %75, %73 ], [ -1, %61 ]
  %78 = icmp eq i64 %56, 0
  br i1 %78, label %90, label %79

79:                                               ; preds = %76
  %80 = inttoptr i64 %56 to i8*
  %81 = icmp eq %"class.v8::internal::FrameSummary"* %60, %59
  br i1 %81, label %88, label %82

82:                                               ; preds = %79, %82
  %83 = phi %"class.v8::internal::FrameSummary"* [ %84, %82 ], [ %60, %79 ]
  %84 = getelementptr inbounds %"class.v8::internal::FrameSummary", %"class.v8::internal::FrameSummary"* %83, i64 -1
  call void @_ZN2v88internal12FrameSummaryD1Ev(%"class.v8::internal::FrameSummary"* %84) #4
  %85 = icmp eq %"class.v8::internal::FrameSummary"* %84, %59
  br i1 %85, label %86, label %82

86:                                               ; preds = %82
  %87 = load i8*, i8** %47, align 8
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i8* [ %87, %86 ], [ %80, %79 ]
  store %"class.v8::internal::FrameSummary"* %59, %"class.v8::internal::FrameSummary"** %44, align 8
  call void @_ZdlPv(i8* %89) #9
  br label %90

90:                                               ; preds = %76, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #4
  %91 = icmp sgt i32 %77, -1
  br i1 %91, label %92, label %94

92:                                               ; preds = %90
  %93 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_117GetFrameArgumentsEPNS0_7IsolateEPNS0_23JavaScriptFrameIteratorEi(%"class.v8::internal::Isolate"* %9, %"class.v8::internal::JavaScriptFrameIterator"* nonnull %4, i32 %77)
  br label %97

94:                                               ; preds = %90
  call void @_ZN2v88internal23JavaScriptFrameIterator7AdvanceEv(%"class.v8::internal::JavaScriptFrameIterator"* nonnull %4) #4
  %95 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %36, align 8
  %96 = icmp eq %"class.v8::internal::StackFrame"* %95, null
  br i1 %96, label %97, label %48

97:                                               ; preds = %94, %33, %39, %92
  %98 = phi i64* [ %93, %92 ], [ %20, %39 ], [ %20, %33 ], [ %20, %94 ]
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %34) #4
  %99 = load i64*, i64** %5, align 8
  br label %100

100:                                              ; preds = %2, %97
  %101 = phi i64* [ %18, %2 ], [ %99, %97 ]
  %102 = phi i64* [ %20, %2 ], [ %98, %97 ]
  %103 = getelementptr inbounds i64, i64* %101, i64 4
  %104 = icmp eq i64* %102, null
  %105 = getelementptr inbounds i64, i64* %101, i64 3
  %106 = select i1 %104, i64* %105, i64* %102, !prof !3
  %107 = load i64, i64* %106, align 8
  store i64 %107, i64* %103, align 8
  %108 = icmp eq %"class.v8::internal::Isolate"* %9, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %100
  %110 = inttoptr i64 %12 to i64*
  %111 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %10, i64 0, i32 0
  %112 = load i64*, i64** %111, align 8
  store i64 %12, i64* %11, align 8
  %113 = load i32, i32* %15, align 8
  %114 = add nsw i32 %113, -1
  store i32 %114, i32* %15, align 8
  %115 = load i64*, i64** %13, align 8
  %116 = icmp eq i64* %115, %14
  br i1 %116, label %119, label %117

117:                                              ; preds = %109
  store i64* %14, i64** %13, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %9) #4
  %118 = load i64*, i64** %111, align 8
  br label %119

119:                                              ; preds = %117, %109
  %120 = phi i64* [ %118, %117 ], [ %110, %109 ]
  %121 = phi i64* [ %14, %117 ], [ %112, %109 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %120, i64* %121) #4
  br label %122

122:                                              ; preds = %100, %119
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9Accessors25MakeFunctionArgumentsInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 262
  %3 = tail call i64* @_ZN2v88internal9Accessors12MakeAccessorEPNS0_7IsolateENS0_6HandleINS0_4NameEEEPFvNS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEEEPFvS9_NS7_ISB_EERKNSA_INS_7BooleanEEEE(%"class.v8::internal::Isolate"* %0, i64* %2, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)* nonnull @_ZN2v88internal9Accessors23FunctionArgumentsGetterENS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEE, void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo.1187"*)* null)
  ret i64* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10FindCallerEPNS0_7IsolateENS0_6HandleINS0_10JSFunctionEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 {
  %3 = alloca %"class.v8::internal::FrameFunctionIterator", align 8
  %4 = bitcast %"class.v8::internal::FrameFunctionIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1664, i8* nonnull %4) #4
  %5 = getelementptr inbounds %"class.v8::internal::FrameFunctionIterator", %"class.v8::internal::FrameFunctionIterator"* %3, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::FrameFunctionIterator", %"class.v8::internal::FrameFunctionIterator"* %3, i64 0, i32 1, i32 0, i32 0
  store i64* null, i64** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::FrameFunctionIterator", %"class.v8::internal::FrameFunctionIterator"* %3, i64 0, i32 2
  %8 = getelementptr inbounds %"class.v8::internal::JavaScriptFrameIterator", %"class.v8::internal::JavaScriptFrameIterator"* %7, i64 0, i32 0
  call void @_ZN2v88internal18StackFrameIteratorC1EPNS0_7IsolateE(%"class.v8::internal::StackFrameIterator"* %8, %"class.v8::internal::Isolate"* %0) #4
  %9 = getelementptr inbounds %"class.v8::internal::FrameFunctionIterator", %"class.v8::internal::FrameFunctionIterator"* %3, i64 0, i32 2, i32 0, i32 0, i32 23
  %10 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %9, align 8
  %11 = icmp eq %"class.v8::internal::StackFrame"* %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::FrameFunctionIterator", %"class.v8::internal::FrameFunctionIterator"* %3, i64 0, i32 3
  %14 = bitcast %"class.std::__1::vector.1203"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #4
  %15 = getelementptr inbounds %"class.v8::internal::FrameFunctionIterator", %"class.v8::internal::FrameFunctionIterator"* %3, i64 0, i32 4
  store i32 -1, i32* %15, align 8
  br label %36

16:                                               ; preds = %2
  call void @_ZN2v88internal23JavaScriptFrameIterator7AdvanceEv(%"class.v8::internal::JavaScriptFrameIterator"* %7) #4
  %17 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %9, align 8
  %18 = getelementptr inbounds %"class.v8::internal::FrameFunctionIterator", %"class.v8::internal::FrameFunctionIterator"* %3, i64 0, i32 3
  %19 = bitcast %"class.std::__1::vector.1203"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #4
  %20 = getelementptr inbounds %"class.v8::internal::FrameFunctionIterator", %"class.v8::internal::FrameFunctionIterator"* %3, i64 0, i32 4
  store i32 -1, i32* %20, align 8
  %21 = icmp eq %"class.v8::internal::StackFrame"* %17, null
  br i1 %21, label %36, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.v8::internal::StackFrame"* %17 to %"class.v8::internal::CommonFrameWithJSLinkage"*
  %24 = bitcast %"class.v8::internal::StackFrame"* %17 to void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1203"*)***
  %25 = load void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1203"*)**, void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1203"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1203"*)*, void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1203"*)** %25, i64 11
  %27 = load void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1203"*)*, void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1203"*)** %26, align 8
  call void %27(%"class.v8::internal::CommonFrameWithJSLinkage"* nonnull %23, %"class.std::__1::vector.1203"* %18) #4
  %28 = getelementptr inbounds %"class.v8::internal::FrameFunctionIterator", %"class.v8::internal::FrameFunctionIterator"* %3, i64 0, i32 3, i32 0, i32 1
  %29 = bitcast %"class.v8::internal::FrameSummary"** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::vector.1203"* %18 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %30, %32
  %34 = sdiv exact i64 %33, 56
  %35 = trunc i64 %34 to i32
  store i32 %35, i32* %20, align 8
  br label %36

36:                                               ; preds = %12, %16, %22
  %37 = load i64, i64* %1, align 8
  %38 = add i64 %37, 11
  %39 = inttoptr i64 %38 to i32*
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i64 %37, -4294967296
  %42 = zext i32 %40 to i64
  %43 = or i64 %41, %42
  %44 = add i64 %43, 27
  %45 = inttoptr i64 %44 to i32*
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 32
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %149

49:                                               ; preds = %36
  %50 = call i64* @_ZN2v88internal21FrameFunctionIterator4nextEv(%"class.v8::internal::FrameFunctionIterator"* nonnull %3) #4
  %51 = getelementptr inbounds %"class.v8::internal::FrameFunctionIterator", %"class.v8::internal::FrameFunctionIterator"* %3, i64 0, i32 1
  %52 = icmp eq i64* %50, null
  br i1 %52, label %75, label %53

53:                                               ; preds = %49
  %54 = bitcast %"class.v8::internal::Handle.1200"* %51 to i64*
  %55 = icmp eq i64* %1, null
  br i1 %55, label %56, label %61

56:                                               ; preds = %53, %56
  %57 = phi i64* [ %59, %56 ], [ %50, %53 ]
  %58 = ptrtoint i64* %57 to i64
  store i64 %58, i64* %54, align 8
  %59 = call i64* @_ZN2v88internal21FrameFunctionIterator4nextEv(%"class.v8::internal::FrameFunctionIterator"* nonnull %3) #4
  %60 = icmp eq i64* %59, null
  br i1 %60, label %75, label %56

61:                                               ; preds = %53, %72
  %62 = phi i64* [ %73, %72 ], [ %50, %53 ]
  %63 = ptrtoint i64* %62 to i64
  store i64 %63, i64* %54, align 8
  %64 = icmp eq i64* %62, %1
  br i1 %64, label %65, label %66

65:                                               ; preds = %66, %61
  br label %77

66:                                               ; preds = %61
  %67 = load i64, i64* %62, align 8
  %68 = load i64, i64* %1, align 8
  %69 = trunc i64 %67 to i32
  %70 = trunc i64 %68 to i32
  %71 = icmp eq i32 %69, %70
  br i1 %71, label %65, label %72

72:                                               ; preds = %66
  %73 = call i64* @_ZN2v88internal21FrameFunctionIterator4nextEv(%"class.v8::internal::FrameFunctionIterator"* nonnull %3) #4
  %74 = icmp eq i64* %73, null
  br i1 %74, label %75, label %61

75:                                               ; preds = %72, %56, %49
  %76 = getelementptr inbounds %"class.v8::internal::Handle.1200", %"class.v8::internal::Handle.1200"* %51, i64 0, i32 0, i32 0
  store i64* null, i64** %76, align 8
  br label %149

77:                                               ; preds = %65, %80
  %78 = call i64* @_ZN2v88internal21FrameFunctionIterator4nextEv(%"class.v8::internal::FrameFunctionIterator"* nonnull %3) #4
  %79 = icmp eq i64* %78, null
  br i1 %79, label %94, label %80

80:                                               ; preds = %77
  %81 = ptrtoint i64* %78 to i64
  store i64 %81, i64* %54, align 8
  %82 = load i64, i64* %78, align 8
  %83 = add i64 %82, 11
  %84 = inttoptr i64 %83 to i32*
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i64 %82, -4294967296
  %87 = zext i32 %85 to i64
  %88 = or i64 %86, %87
  %89 = add i64 %88, 27
  %90 = inttoptr i64 %89 to i32*
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 134217728
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %96, label %77

94:                                               ; preds = %77
  %95 = getelementptr inbounds %"class.v8::internal::Handle.1200", %"class.v8::internal::Handle.1200"* %51, i64 0, i32 0, i32 0
  store i64* null, i64** %95, align 8
  br label %149

96:                                               ; preds = %80
  %97 = call zeroext i1 @_ZN2v88internal21FrameFunctionIterator31FindFirstNativeOrUserJavaScriptEv(%"class.v8::internal::FrameFunctionIterator"* nonnull %3)
  br i1 %97, label %98, label %149

98:                                               ; preds = %96
  %99 = call i64* @_ZN2v88internal21FrameFunctionIterator19MaterializeFunctionEv(%"class.v8::internal::FrameFunctionIterator"* nonnull %3)
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %100, 11
  %102 = inttoptr i64 %101 to i32*
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i64 %100, -4294967296
  %105 = zext i32 %103 to i64
  %106 = or i64 %104, %105
  %107 = add i64 %106, 27
  %108 = inttoptr i64 %107 to i32*
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 64
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %149

112:                                              ; preds = %98
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = add i64 %100, 15
  %116 = inttoptr i64 %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = zext i32 %117 to i64
  %119 = or i64 %104, %118
  %120 = and i64 %114, -4294967296
  %121 = add i64 %114, -1
  %122 = inttoptr i64 %121 to i32*
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = zext i32 %123 to i64
  %125 = or i64 %120, %124
  %126 = add i64 %125, 19
  %127 = inttoptr i64 %126 to i32*
  %128 = load i32, i32* %127, align 4
  %129 = zext i32 %128 to i64
  %130 = or i64 %120, %129
  %131 = add i64 %130, 691
  %132 = inttoptr i64 %131 to i32*
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = add i64 %119, -1
  %135 = inttoptr i64 %134 to i32*
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = zext i32 %136 to i64
  %138 = or i64 %104, %137
  %139 = add i64 %138, 19
  %140 = inttoptr i64 %139 to i32*
  %141 = load i32, i32* %140, align 4
  %142 = zext i32 %141 to i64
  %143 = or i64 %104, %142
  %144 = add i64 %143, 691
  %145 = inttoptr i64 %144 to i32*
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = icmp eq i32 %133, %146
  %148 = select i1 %147, i64* %99, i64* null
  br label %149

149:                                              ; preds = %98, %36, %112, %96, %94, %75
  %150 = phi i64* [ null, %94 ], [ null, %75 ], [ null, %36 ], [ null, %96 ], [ null, %98 ], [ %148, %112 ]
  %151 = getelementptr inbounds %"class.v8::internal::FrameFunctionIterator", %"class.v8::internal::FrameFunctionIterator"* %3, i64 0, i32 3
  %152 = getelementptr inbounds %"class.std::__1::vector.1203", %"class.std::__1::vector.1203"* %151, i64 0, i32 0, i32 0
  %153 = load %"class.v8::internal::FrameSummary"*, %"class.v8::internal::FrameSummary"** %152, align 8
  %154 = icmp eq %"class.v8::internal::FrameSummary"* %153, null
  br i1 %154, label %169, label %155

155:                                              ; preds = %149
  %156 = bitcast %"class.v8::internal::FrameSummary"* %153 to i8*
  %157 = getelementptr inbounds %"class.v8::internal::FrameFunctionIterator", %"class.v8::internal::FrameFunctionIterator"* %3, i64 0, i32 3, i32 0, i32 1
  %158 = load %"class.v8::internal::FrameSummary"*, %"class.v8::internal::FrameSummary"** %157, align 8
  %159 = icmp eq %"class.v8::internal::FrameSummary"* %158, %153
  br i1 %159, label %167, label %160

160:                                              ; preds = %155, %160
  %161 = phi %"class.v8::internal::FrameSummary"* [ %162, %160 ], [ %158, %155 ]
  %162 = getelementptr inbounds %"class.v8::internal::FrameSummary", %"class.v8::internal::FrameSummary"* %161, i64 -1
  call void @_ZN2v88internal12FrameSummaryD1Ev(%"class.v8::internal::FrameSummary"* %162) #4
  %163 = icmp eq %"class.v8::internal::FrameSummary"* %162, %153
  br i1 %163, label %164, label %160

164:                                              ; preds = %160
  %165 = bitcast %"class.std::__1::vector.1203"* %151 to i8**
  %166 = load i8*, i8** %165, align 8
  br label %167

167:                                              ; preds = %164, %155
  %168 = phi i8* [ %166, %164 ], [ %156, %155 ]
  store %"class.v8::internal::FrameSummary"* %153, %"class.v8::internal::FrameSummary"** %157, align 8
  call void @_ZdlPv(i8* %168) #9
  br label %169

169:                                              ; preds = %149, %167
  call void @llvm.lifetime.end.p0i8(i64 1664, i8* nonnull %4) #4
  ret i64* %150
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal21FrameFunctionIterator31FindFirstNativeOrUserJavaScriptEv(%"class.v8::internal::FrameFunctionIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.v8::internal::Script", align 8
  %3 = getelementptr inbounds %"class.v8::internal::FrameFunctionIterator", %"class.v8::internal::FrameFunctionIterator"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.v8::internal::Handle.1200", %"class.v8::internal::Handle.1200"* %3, i64 0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 11
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i64 %6, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = add i64 %12, 27
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 32
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %96

18:                                               ; preds = %1
  %19 = bitcast %"class.v8::internal::Script"* %2 to i8*
  %20 = getelementptr inbounds %"class.v8::internal::Script", %"class.v8::internal::Script"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.v8::internal::Handle.1200"* %3 to i64*
  br label %22

22:                                               ; preds = %18, %82
  %23 = phi i64 [ %10, %18 ], [ %88, %82 ]
  %24 = phi i32* [ %8, %18 ], [ %86, %82 ]
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %23, %26
  %28 = add i64 %27, 15
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 acquire, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %23, %31
  %33 = add i64 %32, -1
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %23, %36
  %38 = add i64 %37, 7
  %39 = inttoptr i64 %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = icmp eq i16 %40, 100
  br i1 %41, label %42, label %48

42:                                               ; preds = %22
  %43 = add i64 %32, 11
  %44 = inttoptr i64 %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %23, %46
  br label %48

48:                                               ; preds = %42, %22
  %49 = phi i64 [ %47, %42 ], [ %32, %22 ]
  %50 = and i64 %49, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %76, label %52

52:                                               ; preds = %48
  %53 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %54 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %53, null
  br i1 %54, label %61, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %53, i64 0, i32 0, i32 1
  %57 = load i8, i8* %56, align 8, !range !6
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %53, i64 0, i32 1, i64 0
  br label %69

61:                                               ; preds = %55, %52
  %62 = and i64 %49, -262144
  %63 = or i64 %62, 16
  %64 = inttoptr i64 %63 to i64*
  %65 = load i64, i64* %64, align 16
  %66 = add i64 %65, -41416
  %67 = inttoptr i64 %66 to %"class.v8::internal::Isolate"*
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %67, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %69

69:                                               ; preds = %61, %59
  %70 = phi i64* [ %68, %61 ], [ %60, %59 ]
  %71 = getelementptr inbounds i64, i64* %70, i64 4
  %72 = load i64, i64* %71, align 8
  %73 = trunc i64 %49 to i32
  %74 = trunc i64 %72 to i32
  %75 = icmp eq i32 %73, %74
  br i1 %75, label %78, label %76

76:                                               ; preds = %48, %69
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #4
  store i64 %49, i64* %20, align 8
  %77 = call zeroext i1 @_ZNK2v88internal6Script16IsUserJavaScriptEv(%"class.v8::internal::Script"* nonnull %2) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #4
  br i1 %77, label %96, label %78

78:                                               ; preds = %69, %76
  %79 = call i64* @_ZN2v88internal21FrameFunctionIterator4nextEv(%"class.v8::internal::FrameFunctionIterator"* %0)
  %80 = icmp eq i64* %79, null
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  store i64* null, i64** %4, align 8
  br label %96

82:                                               ; preds = %78
  %83 = ptrtoint i64* %79 to i64
  store i64 %83, i64* %21, align 8
  %84 = load i64, i64* %79, align 8
  %85 = add i64 %84, 11
  %86 = inttoptr i64 %85 to i32*
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i64 %84, -4294967296
  %89 = zext i32 %87 to i64
  %90 = or i64 %88, %89
  %91 = add i64 %90, 27
  %92 = inttoptr i64 %91 to i32*
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 32
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %22, label %96

96:                                               ; preds = %76, %82, %1, %81
  %97 = phi i1 [ false, %81 ], [ true, %1 ], [ true, %82 ], [ true, %76 ]
  ret i1 %97
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal21FrameFunctionIterator19MaterializeFunctionEv(%"class.v8::internal::FrameFunctionIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.v8::internal::TranslatedState", align 8
  %3 = getelementptr inbounds %"class.v8::internal::FrameFunctionIterator", %"class.v8::internal::FrameFunctionIterator"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::FrameFunctionIterator", %"class.v8::internal::FrameFunctionIterator"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  br label %37

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.v8::internal::FrameFunctionIterator", %"class.v8::internal::FrameFunctionIterator"* %0, i64 0, i32 2, i32 0, i32 0, i32 23
  %11 = bitcast %"class.v8::internal::StackFrame"** %10 to %"class.v8::internal::JavaScriptFrame"**
  %12 = load %"class.v8::internal::JavaScriptFrame"*, %"class.v8::internal::JavaScriptFrame"** %11, align 8
  %13 = bitcast %"class.v8::internal::TranslatedState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %13) #4
  call void @_ZN2v88internal15TranslatedStateC1EPKNS0_15JavaScriptFrameE(%"class.v8::internal::TranslatedState"* nonnull %2, %"class.v8::internal::JavaScriptFrame"* %12) #4
  %14 = getelementptr inbounds %"class.v8::internal::JavaScriptFrame", %"class.v8::internal::JavaScriptFrame"* %12, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %15 = load i64, i64* %14, align 8
  call void @_ZN2v88internal15TranslatedState7PrepareEm(%"class.v8::internal::TranslatedState"* nonnull %2, i64 %15) #4
  %16 = load i32, i32* %3, align 8
  %17 = call %"class.v8::internal::TranslatedFrame"* @_ZN2v88internal15TranslatedState24GetFrameFromJSFrameIndexEi(%"class.v8::internal::TranslatedState"* nonnull %2, i32 %16) #4
  %18 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %17, i64 0, i32 8, i32 0, i32 0, i32 1
  %19 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %18, align 8, !noalias !19
  %20 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %17, i64 0, i32 8, i32 0, i32 1
  %21 = load i64, i64* %20, align 8, !noalias !19
  %22 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %17, i64 0, i32 8, i32 0, i32 0, i32 2
  %23 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %22, align 8, !noalias !19
  %24 = icmp eq %"class.v8::internal::TranslatedValue"** %23, %19
  br i1 %24, label %31, label %25

25:                                               ; preds = %9
  %26 = lshr i64 %21, 7
  %27 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %19, i64 %26
  %28 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %27, align 8, !noalias !19
  %29 = and i64 %21, 127
  %30 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %28, i64 %29
  br label %31

31:                                               ; preds = %9, %25
  %32 = phi %"class.v8::internal::TranslatedValue"* [ %30, %25 ], [ null, %9 ]
  %33 = call zeroext i1 @_ZNK2v88internal15TranslatedValue20IsMaterializedObjectEv(%"class.v8::internal::TranslatedValue"* %32) #4
  %34 = call i64* @_ZN2v88internal15TranslatedValue8GetValueEv(%"class.v8::internal::TranslatedValue"* %32) #4
  br i1 %33, label %35, label %36

35:                                               ; preds = %31
  call void @_ZN2v88internal15TranslatedState31StoreMaterializedValuesAndDeoptEPNS0_15JavaScriptFrameE(%"class.v8::internal::TranslatedState"* nonnull %2, %"class.v8::internal::JavaScriptFrame"* %12) #4
  br label %36

36:                                               ; preds = %35, %31
  call void @_ZN2v88internal15TranslatedStateD2Ev(%"class.v8::internal::TranslatedState"* nonnull %2) #4
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %13) #4
  br label %37

37:                                               ; preds = %36, %6
  %38 = phi i64* [ %8, %6 ], [ %34, %36 ]
  ret i64* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Accessors20FunctionCallerGetterENS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEE(%"class.v8::Name"* nocapture readnone, %"class.v8::PropertyCallbackInfo"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %1, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 2
  %6 = bitcast i64* %5 to %"class.v8::internal::Isolate"**
  %7 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 31
  %9 = bitcast %"struct.v8::internal::HandleScopeData"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 31, i32 1
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 31, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %13, align 8
  %16 = load i64*, i64** %3, align 8
  %17 = getelementptr inbounds i64, i64* %16, i64 1
  %18 = tail call i64* @_ZN2v88internal10FindCallerEPNS0_7IsolateENS0_6HandleINS0_10JSFunctionEEE(%"class.v8::internal::Isolate"* %7, i64* %17)
  %19 = load i8, i8* @_ZN2v88internal36FLAG_correctness_fuzzer_suppressionsE, align 1, !range !6
  %20 = icmp ne i8 %19, 0
  %21 = icmp eq i64* %18, null
  %22 = or i1 %21, %20
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 6
  %24 = select i1 %22, i64* %23, i64* %18
  %25 = load i64*, i64** %3, align 8
  %26 = getelementptr inbounds i64, i64* %25, i64 4
  %27 = icmp eq i64* %24, null
  %28 = getelementptr inbounds i64, i64* %25, i64 3
  %29 = select i1 %27, i64* %28, i64* %24, !prof !3
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %26, align 8
  %31 = icmp eq %"class.v8::internal::Isolate"* %7, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %2
  %33 = inttoptr i64 %10 to i64*
  %34 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %8, i64 0, i32 0
  %35 = load i64*, i64** %34, align 8
  store i64 %10, i64* %9, align 8
  %36 = load i32, i32* %13, align 8
  %37 = add nsw i32 %36, -1
  store i32 %37, i32* %13, align 8
  %38 = load i64*, i64** %11, align 8
  %39 = icmp eq i64* %38, %12
  br i1 %39, label %42, label %40

40:                                               ; preds = %32
  store i64* %12, i64** %11, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %7) #4
  %41 = load i64*, i64** %34, align 8
  br label %42

42:                                               ; preds = %40, %32
  %43 = phi i64* [ %41, %40 ], [ %33, %32 ]
  %44 = phi i64* [ %12, %40 ], [ %35, %32 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %43, i64* %44) #4
  br label %45

45:                                               ; preds = %2, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9Accessors22MakeFunctionCallerInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 287
  %3 = tail call i64* @_ZN2v88internal9Accessors12MakeAccessorEPNS0_7IsolateENS0_6HandleINS0_4NameEEEPFvNS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEEEPFvS9_NS7_ISB_EERKNSA_INS_7BooleanEEEE(%"class.v8::internal::Isolate"* %0, i64* %2, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)* nonnull @_ZN2v88internal9Accessors20FunctionCallerGetterENS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEE, void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo.1187"*)* null)
  ret i64* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Accessors25BoundFunctionLengthGetterENS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEE(%"class.v8::Name"* nocapture readnone, %"class.v8::PropertyCallbackInfo"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %4 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %1, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 2
  %7 = bitcast i64* %6 to %"class.v8::internal::Isolate"**
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %9 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 40, i1 false) #4
  %10 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1522", %"struct.std::__1::atomic.1522"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %18, label %12, !prof !2

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 1
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 14, i32 0
  %16 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %16, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %17, %"class.v8::internal::RuntimeCallStats"** %13, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %17, %"class.v8::internal::RuntimeCallTimer"* %14, i32 128) #4
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31
  %20 = bitcast %"struct.v8::internal::HandleScopeData"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 1
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %24, align 8
  %27 = load i64*, i64** %4, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 1
  %29 = call i64 @_ZN2v88internal15JSBoundFunction9GetLengthEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %8, i64* %28) #4
  %30 = trunc i64 %29 to i8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %34, !prof !3

32:                                               ; preds = %18
  %33 = call zeroext i1 @_ZN2v88internal7Isolate27OptionalRescheduleExceptionEb(%"class.v8::internal::Isolate"* %8, i1 zeroext false) #4
  br label %64

34:                                               ; preds = %18
  %35 = ashr i64 %29, 32
  %36 = shl nsw i64 %35, 1
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 4
  %38 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %37, align 8
  %39 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %38, i64 %36) #4
  br label %54

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = load i64*, i64** %22, align 8
  %46 = icmp eq i64* %44, %45
  br i1 %46, label %47, label %49

47:                                               ; preds = %42
  %48 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #4
  br label %49

49:                                               ; preds = %47, %42
  %50 = phi i64* [ %48, %47 ], [ %44, %42 ]
  %51 = ptrtoint i64* %50 to i64
  %52 = add i64 %51, 8
  %53 = inttoptr i64 %52 to i64*
  store i64* %53, i64** %43, align 8
  store i64 %36, i64* %50, align 8
  br label %54

54:                                               ; preds = %40, %49
  %55 = phi i64* [ %41, %40 ], [ %50, %49 ]
  %56 = load i64*, i64** %4, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 4
  %58 = icmp eq i64* %55, null
  br i1 %58, label %59, label %62, !prof !3

59:                                               ; preds = %54
  %60 = getelementptr inbounds i64, i64* %56, i64 3
  %61 = load i64, i64* %60, align 8
  store i64 %61, i64* %57, align 8
  br label %64

62:                                               ; preds = %54
  %63 = load i64, i64* %55, align 8
  store i64 %63, i64* %57, align 8
  br label %64

64:                                               ; preds = %62, %59, %32
  %65 = icmp eq %"class.v8::internal::Isolate"* %8, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %64
  %67 = inttoptr i64 %21 to i64*
  %68 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %19, i64 0, i32 0
  %69 = load i64*, i64** %68, align 8
  store i64 %21, i64* %20, align 8
  %70 = load i32, i32* %24, align 8
  %71 = add nsw i32 %70, -1
  store i32 %71, i32* %24, align 8
  %72 = load i64*, i64** %22, align 8
  %73 = icmp eq i64* %72, %23
  br i1 %73, label %76, label %74

74:                                               ; preds = %66
  store i64* %23, i64** %22, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %8) #4
  %75 = load i64*, i64** %68, align 8
  br label %76

76:                                               ; preds = %74, %66
  %77 = phi i64* [ %75, %74 ], [ %67, %66 ]
  %78 = phi i64* [ %23, %74 ], [ %69, %66 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %77, i64* %78) #4
  br label %79

79:                                               ; preds = %64, %76
  %80 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 0
  %81 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %80, align 8
  %82 = icmp eq %"class.v8::internal::RuntimeCallStats"* %81, null
  br i1 %82, label %85, label %83, !prof !2

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %81, %"class.v8::internal::RuntimeCallTimer"* %84) #4
  br label %85

85:                                               ; preds = %79, %83
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #4
  ret void
}

declare i64 @_ZN2v88internal15JSBoundFunction9GetLengthEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9Accessors27MakeBoundFunctionLengthInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 363
  %3 = tail call i64* @_ZN2v88internal9Accessors12MakeAccessorEPNS0_7IsolateENS0_6HandleINS0_4NameEEEPFvNS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEEEPFvS9_NS7_ISB_EERKNSA_INS_7BooleanEEEE(%"class.v8::internal::Isolate"* %0, i64* %2, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)* nonnull @_ZN2v88internal9Accessors25BoundFunctionLengthGetterENS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEE, void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo.1187"*)* nonnull @_ZN2v88internal9Accessors25ReconfigureToDataPropertyENS_5LocalINS_4NameEEENS2_INS_5ValueEEERKNS_20PropertyCallbackInfoINS_7BooleanEEE)
  ret i64* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Accessors23BoundFunctionNameGetterENS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEE(%"class.v8::Name"* nocapture readnone, %"class.v8::PropertyCallbackInfo"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %4 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %1, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 2
  %7 = bitcast i64* %6 to %"class.v8::internal::Isolate"**
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %9 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 40, i1 false) #4
  %10 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1522", %"struct.std::__1::atomic.1522"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %18, label %12, !prof !2

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 1
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 14, i32 0
  %16 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %16, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %17, %"class.v8::internal::RuntimeCallStats"** %13, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %17, %"class.v8::internal::RuntimeCallTimer"* %14, i32 129) #4
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31
  %20 = bitcast %"struct.v8::internal::HandleScopeData"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 1
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %24, align 8
  %27 = load i64*, i64** %4, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 1
  %29 = call i64* @_ZN2v88internal15JSBoundFunction7GetNameEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %8, i64* %28) #4
  %30 = icmp eq i64* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %18
  %32 = call zeroext i1 @_ZN2v88internal7Isolate27OptionalRescheduleExceptionEb(%"class.v8::internal::Isolate"* %8, i1 zeroext false) #4
  br label %37

33:                                               ; preds = %18
  %34 = load i64*, i64** %4, align 8
  %35 = getelementptr inbounds i64, i64* %34, i64 4
  %36 = load i64, i64* %29, align 8
  store i64 %36, i64* %35, align 8
  br label %37

37:                                               ; preds = %33, %31
  %38 = icmp eq %"class.v8::internal::Isolate"* %8, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %37
  %40 = inttoptr i64 %21 to i64*
  %41 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %19, i64 0, i32 0
  %42 = load i64*, i64** %41, align 8
  store i64 %21, i64* %20, align 8
  %43 = load i32, i32* %24, align 8
  %44 = add nsw i32 %43, -1
  store i32 %44, i32* %24, align 8
  %45 = load i64*, i64** %22, align 8
  %46 = icmp eq i64* %45, %23
  br i1 %46, label %49, label %47

47:                                               ; preds = %39
  store i64* %23, i64** %22, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %8) #4
  %48 = load i64*, i64** %41, align 8
  br label %49

49:                                               ; preds = %47, %39
  %50 = phi i64* [ %48, %47 ], [ %40, %39 ]
  %51 = phi i64* [ %23, %47 ], [ %42, %39 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %50, i64* %51) #4
  br label %52

52:                                               ; preds = %37, %49
  %53 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 0
  %54 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %53, align 8
  %55 = icmp eq %"class.v8::internal::RuntimeCallStats"* %54, null
  br i1 %55, label %58, label %56, !prof !2

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %54, %"class.v8::internal::RuntimeCallTimer"* %57) #4
  br label %58

58:                                               ; preds = %52, %56
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #4
  ret void
}

declare i64* @_ZN2v88internal15JSBoundFunction7GetNameEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9Accessors25MakeBoundFunctionNameInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 378
  %3 = tail call i64* @_ZN2v88internal9Accessors12MakeAccessorEPNS0_7IsolateENS0_6HandleINS0_4NameEEEPFvNS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEEEPFvS9_NS7_ISB_EERKNSA_INS_7BooleanEEEE(%"class.v8::internal::Isolate"* %0, i64* %2, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)* nonnull @_ZN2v88internal9Accessors23BoundFunctionNameGetterENS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEE, void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo.1187"*)* nonnull @_ZN2v88internal9Accessors25ReconfigureToDataPropertyENS_5LocalINS_4NameEEENS2_INS_5ValueEEERKNS_20PropertyCallbackInfoINS_7BooleanEEE)
  ret i64* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Accessors16ErrorStackGetterENS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEE(%"class.v8::Name"* nocapture readnone, %"class.v8::PropertyCallbackInfo"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.v8::internal::LookupIterator", align 8
  %4 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %1, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 2
  %7 = bitcast i64* %6 to %"class.v8::internal::Isolate"**
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31
  %10 = bitcast %"struct.v8::internal::HandleScopeData"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %14, align 8
  %17 = load i64*, i64** %4, align 8
  %18 = getelementptr inbounds i64, i64* %17, i64 1
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 7, i32 0, i64 500
  %20 = bitcast %"class.v8::internal::LookupIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %20) #4
  %21 = ptrtoint i64* %18 to i64
  %22 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 0
  %23 = icmp eq i64* %19, null
  br i1 %23, label %24, label %28

24:                                               ; preds = %2
  %25 = load i64, i64* null, align 536870912
  %26 = add i64 %25, -1
  %27 = inttoptr i64 %26 to i32*
  br label %49

28:                                               ; preds = %2
  %29 = load i64, i64* %19, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 4
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %29, -1
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i64 %31, 4294967295
  %36 = icmp eq i64 %35, 0
  tail call void @llvm.assume(i1 %36) #4
  %37 = zext i32 %34 to i64
  %38 = or i64 %31, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i16*
  %41 = load atomic i16, i16* %40 monotonic, align 2
  %42 = icmp eq i16 %41, 64
  br i1 %42, label %43, label %49

43:                                               ; preds = %28
  %44 = add i64 %29, 7
  %45 = inttoptr i64 %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %24, %43, %28
  %50 = phi i32* [ %27, %24 ], [ %33, %43 ], [ %33, %28 ]
  %51 = phi i64 [ %25, %24 ], [ %29, %43 ], [ %29, %28 ]
  br label %52

52:                                               ; preds = %49, %43
  %53 = phi i32* [ %50, %49 ], [ %33, %43 ]
  %54 = phi i64 [ %51, %49 ], [ %29, %43 ]
  %55 = phi i32 [ 3, %49 ], [ 0, %43 ]
  store i32 %55, i32* %22, align 8
  %56 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 1
  store i32 4, i32* %56, align 4
  %57 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 2
  store i8 0, i8* %57, align 8
  %58 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 3
  store i32 0, i32* %58, align 4
  %59 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 4, i32 0
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %8, %"class.v8::internal::Isolate"** %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 6, i32 0, i32 0
  store i64* %19, i64** %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 8, i32 0, i32 0
  store i64* %18, i64** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 10
  %66 = bitcast %"class.v8::internal::Handle.1188"* %65 to i64*
  store i64 %21, i64* %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 11
  %68 = bitcast i64* %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 -1, i64 16, i1 false) #4
  %69 = and i64 %54, -4294967296
  %70 = load atomic i32, i32* %53 monotonic, align 4
  %71 = zext i32 %70 to i64
  %72 = or i64 %69, %71
  %73 = add i64 %72, 7
  %74 = inttoptr i64 %73 to i16*
  %75 = load atomic i16, i16* %74 monotonic, align 2
  %76 = and i16 %75, -32
  %77 = icmp eq i16 %76, 32
  br i1 %77, label %78, label %82

78:                                               ; preds = %52
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 5, i32 0, i32 0, i32 0
  %80 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %79, align 8
  %81 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %80, %"class.v8::internal::Isolate"* %8, i64* %19) #4
  br label %82

82:                                               ; preds = %52, %78
  %83 = phi i64* [ %81, %78 ], [ %19, %52 ]
  store i64* %83, i64** %61, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %3) #4
  %84 = load i32, i32* %56, align 4
  %85 = icmp eq i32 %84, 4
  br i1 %85, label %86, label %91

86:                                               ; preds = %82
  %87 = bitcast %"class.v8::internal::Isolate"** %60 to %"class.v8::internal::Factory"**
  %88 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %88, i64 160
  %90 = bitcast %"class.v8::internal::Factory"* %89 to i64*
  br label %93

91:                                               ; preds = %82
  %92 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %3, i1 zeroext false) #4
  br label %93

93:                                               ; preds = %86, %91
  %94 = phi i64* [ %92, %91 ], [ %90, %86 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %20) #4
  %95 = icmp eq i64* %94, null
  br i1 %95, label %103, label %96

96:                                               ; preds = %93
  %97 = load i64, i64* %94, align 8
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 7, i32 0, i64 4
  %99 = load i64, i64* %98, align 8
  %100 = trunc i64 %97 to i32
  %101 = trunc i64 %99 to i32
  %102 = icmp eq i32 %100, %101
  br i1 %102, label %103, label %113

103:                                              ; preds = %93, %96
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 7, i32 0, i64 4
  %105 = load i64*, i64** %4, align 8
  %106 = getelementptr inbounds i64, i64* %105, i64 4
  %107 = icmp eq i64* %104, null
  br i1 %107, label %108, label %111, !prof !3

108:                                              ; preds = %103
  %109 = getelementptr inbounds i64, i64* %105, i64 3
  %110 = load i64, i64* %109, align 8
  store i64 %110, i64* %106, align 8
  br label %145

111:                                              ; preds = %103
  %112 = load i64, i64* %104, align 8
  store i64 %112, i64* %106, align 8
  br label %145

113:                                              ; preds = %96
  %114 = and i64 %97, 1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %128, label %116

116:                                              ; preds = %113
  %117 = and i64 %97, -4294967296
  %118 = add i64 %97, -1
  %119 = inttoptr i64 %118 to i32*
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = zext i32 %120 to i64
  %122 = or i64 %117, %121
  %123 = add i64 %122, 7
  %124 = inttoptr i64 %123 to i16*
  %125 = load atomic i16, i16* %124 monotonic, align 2
  %126 = add i16 %125, -119
  %127 = icmp ult i16 %126, 13
  br i1 %127, label %131, label %128

128:                                              ; preds = %116, %113
  %129 = load i64*, i64** %4, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 4
  store i64 %97, i64* %130, align 8
  br label %145

131:                                              ; preds = %116
  %132 = call i64* @_ZN2v88internal10ErrorUtils16FormatStackTraceEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %8, i64* %18, i64* nonnull %94) #4
  %133 = icmp eq i64* %132, null
  br i1 %133, label %134, label %136

134:                                              ; preds = %131
  %135 = call zeroext i1 @_ZN2v88internal7Isolate27OptionalRescheduleExceptionEb(%"class.v8::internal::Isolate"* %8, i1 zeroext false) #4
  br label %145

136:                                              ; preds = %131
  %137 = call i64* @_ZN2v88internal6Object11SetPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEES5_NS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %8, i64* %18, i64* %19, i64* nonnull %132, i32 0, i64 1) #4
  %138 = icmp eq i64* %137, null
  br i1 %138, label %139, label %141

139:                                              ; preds = %136
  %140 = call zeroext i1 @_ZN2v88internal7Isolate27OptionalRescheduleExceptionEb(%"class.v8::internal::Isolate"* %8, i1 zeroext false) #4
  br label %145

141:                                              ; preds = %136
  %142 = load i64*, i64** %4, align 8
  %143 = getelementptr inbounds i64, i64* %142, i64 4
  %144 = load i64, i64* %132, align 8
  store i64 %144, i64* %143, align 8
  br label %145

145:                                              ; preds = %134, %141, %139, %128, %111, %108
  %146 = icmp eq %"class.v8::internal::Isolate"* %8, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %145
  %148 = inttoptr i64 %11 to i64*
  %149 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %9, i64 0, i32 0
  %150 = load i64*, i64** %149, align 8
  store i64 %11, i64* %10, align 8
  %151 = load i32, i32* %14, align 8
  %152 = add nsw i32 %151, -1
  store i32 %152, i32* %14, align 8
  %153 = load i64*, i64** %12, align 8
  %154 = icmp eq i64* %153, %13
  br i1 %154, label %157, label %155

155:                                              ; preds = %147
  store i64* %13, i64** %12, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %8) #4
  %156 = load i64*, i64** %149, align 8
  br label %157

157:                                              ; preds = %155, %147
  %158 = phi i64* [ %156, %155 ], [ %148, %147 ]
  %159 = phi i64* [ %13, %155 ], [ %150, %147 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %158, i64* %159) #4
  br label %160

160:                                              ; preds = %145, %157
  ret void
}

declare i64* @_ZN2v88internal10ErrorUtils16FormatStackTraceEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal6Object11SetPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEES5_NS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Accessors16ErrorStackSetterENS_5LocalINS_4NameEEENS2_INS_5ValueEEERKNS_20PropertyCallbackInfoINS_7BooleanEEE(%"class.v8::Name"* nocapture readnone, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo.1187"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::PropertyCallbackInfo.1187", %"class.v8::PropertyCallbackInfo.1187"* %2, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 2
  %7 = bitcast i64* %6 to %"class.v8::internal::Isolate"**
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31
  %10 = bitcast %"struct.v8::internal::HandleScopeData"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %14, align 8
  %17 = load i64*, i64** %4, align 8
  %18 = getelementptr inbounds i64, i64* %17, i64 6
  %19 = bitcast %"class.v8::Value"* %1 to i64*
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 7, i32 0, i64 500
  %21 = tail call i64* @_ZN2v88internal6Object11SetPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEES5_NS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %8, i64* %18, i64* %20, i64* %19, i32 0, i64 1) #4
  %22 = icmp eq i64* %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %3
  %24 = tail call zeroext i1 @_ZN2v88internal7Isolate27OptionalRescheduleExceptionEb(%"class.v8::internal::Isolate"* %8, i1 zeroext false) #4
  br label %25

25:                                               ; preds = %3, %23
  %26 = icmp eq %"class.v8::internal::Isolate"* %8, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %25
  %28 = inttoptr i64 %11 to i64*
  %29 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %9, i64 0, i32 0
  %30 = load i64*, i64** %29, align 8
  store i64 %11, i64* %10, align 8
  %31 = load i32, i32* %14, align 8
  %32 = add nsw i32 %31, -1
  store i32 %32, i32* %14, align 8
  %33 = load i64*, i64** %12, align 8
  %34 = icmp eq i64* %33, %13
  br i1 %34, label %37, label %35

35:                                               ; preds = %27
  store i64* %13, i64** %12, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %8) #4
  %36 = load i64*, i64** %29, align 8
  br label %37

37:                                               ; preds = %35, %27
  %38 = phi i64* [ %36, %35 ], [ %28, %27 ]
  %39 = phi i64* [ %13, %35 ], [ %30, %27 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %38, i64* %39) #4
  br label %40

40:                                               ; preds = %25, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9Accessors18MakeErrorStackInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 436
  %3 = tail call i64* @_ZN2v88internal9Accessors12MakeAccessorEPNS0_7IsolateENS0_6HandleINS0_4NameEEEPFvNS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEEEPFvS9_NS7_ISB_EERKNSA_INS_7BooleanEEEE(%"class.v8::internal::Isolate"* %0, i64* %2, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)* nonnull @_ZN2v88internal9Accessors16ErrorStackGetterENS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEE, void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo.1187"*)* nonnull @_ZN2v88internal9Accessors16ErrorStackSetterENS_5LocalINS_4NameEEENS2_INS_5ValueEEERKNS_20PropertyCallbackInfoINS_7BooleanEEE)
  ret i64* %3
}

declare i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.assume(i1) #4

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #2

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory10NewForeignEm(%"class.v8::internal::Factory"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal6String10SlowEqualsEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"*, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64*, i32) unnamed_addr #5 comdat align 2 {
  %8 = ptrtoint i64* %5 to i64
  %9 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 0
  %10 = icmp eq i64* %3, null
  br i1 %10, label %32, label %11

11:                                               ; preds = %7
  %12 = load i64, i64* %3, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %12, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i64 %14, 4294967295
  %19 = icmp eq i64 %18, 0
  tail call void @llvm.assume(i1 %19) #4
  %20 = zext i32 %17 to i64
  %21 = or i64 %14, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = icmp eq i16 %24, 64
  br i1 %25, label %26, label %32

26:                                               ; preds = %11
  %27 = add i64 %12, 7
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %26, %11, %7
  br label %33

33:                                               ; preds = %26, %32
  %34 = phi i32 [ %6, %32 ], [ 0, %26 ]
  store i32 %34, i32* %9, align 8
  %35 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 4, i32* %35, align 4
  %36 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 2
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  store i64* %3, i64** %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  store i64* %2, i64** %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 10
  %45 = bitcast %"class.v8::internal::Handle.1188"* %44 to i64*
  store i64 %8, i64* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  store i64 %4, i64* %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 -1, i64* %47, align 8
  %48 = icmp eq i64 %4, -1
  br i1 %48, label %115, label %49

49:                                               ; preds = %33
  %50 = icmp ugt i64 %4, 4294967294
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %10, label %114, label %99

53:                                               ; preds = %49
  %54 = load i64, i64* %5, align 8
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %10, label %72, label %78

59:                                               ; preds = %53
  %60 = and i64 %54, -4294967296
  %61 = add i64 %54, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %60, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = icmp eq i16 %68, 1080
  %70 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %69, label %98, label %71

71:                                               ; preds = %59
  br i1 %10, label %72, label %78

72:                                               ; preds = %57, %71
  %73 = phi %"class.v8::internal::Handle.1185"* [ %58, %57 ], [ %70, %71 ]
  %74 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::Factory"*
  %75 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %74, i64 %4, i1 zeroext true) #4
  %76 = ptrtoint i64* %75 to i64
  %77 = bitcast %"class.v8::internal::Handle.1185"* %73 to i64*
  store i64 %76, i64* %77, align 8
  br label %78

78:                                               ; preds = %57, %72, %71
  %79 = phi i64* [ %3, %57 ], [ %75, %72 ], [ %3, %71 ]
  %80 = load i64, i64* %79, align 8
  %81 = and i64 %80, -4294967296
  %82 = add i64 %80, -1
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %81, %85
  %87 = add i64 %86, 7
  %88 = inttoptr i64 %87 to i16*
  %89 = load atomic i16, i16* %88 monotonic, align 2
  %90 = and i16 %89, -32
  %91 = icmp eq i16 %90, 32
  br i1 %91, label %92, label %96

92:                                               ; preds = %78
  %93 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %94 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %93, align 8
  %95 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %94, %"class.v8::internal::Isolate"* %1, i64* %79) #4
  br label %96

96:                                               ; preds = %78, %92
  %97 = phi i64* [ %95, %92 ], [ %79, %78 ]
  store i64* %97, i64** %40, align 8
  br label %114

98:                                               ; preds = %59
  br i1 %10, label %114, label %99

99:                                               ; preds = %51, %98
  %100 = phi %"class.v8::internal::Handle.1185"* [ %52, %51 ], [ %70, %98 ]
  %101 = load i64, i64* %3, align 8
  %102 = and i64 %101, -4294967296
  %103 = add i64 %101, -1
  %104 = inttoptr i64 %103 to i32*
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = zext i32 %105 to i64
  %107 = or i64 %102, %106
  %108 = add i64 %107, 7
  %109 = inttoptr i64 %108 to i16*
  %110 = load atomic i16, i16* %109 monotonic, align 2
  %111 = icmp ult i16 %110, 32
  br i1 %111, label %114, label %112

112:                                              ; preds = %99
  %113 = bitcast %"class.v8::internal::Handle.1185"* %100 to i64*
  store i64 0, i64* %113, align 8
  br label %114

114:                                              ; preds = %98, %51, %99, %112, %96
  tail call void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"* %0) #4
  br label %134

115:                                              ; preds = %33
  %116 = load i64, i64* %3, align 8
  %117 = and i64 %116, -4294967296
  %118 = add i64 %116, -1
  %119 = inttoptr i64 %118 to i32*
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = zext i32 %120 to i64
  %122 = or i64 %117, %121
  %123 = add i64 %122, 7
  %124 = inttoptr i64 %123 to i16*
  %125 = load atomic i16, i16* %124 monotonic, align 2
  %126 = and i16 %125, -32
  %127 = icmp eq i16 %126, 32
  br i1 %127, label %128, label %132

128:                                              ; preds = %115
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %130 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %129, align 8
  %131 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %130, %"class.v8::internal::Isolate"* %1, i64* %3) #4
  br label %132

132:                                              ; preds = %115, %128
  %133 = phi i64* [ %131, %128 ], [ %3, %115 ]
  store i64* %133, i64** %40, align 8
  tail call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* %0) #4
  br label %134

134:                                              ; preds = %132, %114
  ret void
}

declare i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"*, i64, i1 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #2

declare void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #2

declare void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*) local_unnamed_addr #2

declare i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"*, i64, %"class.v8::internal::MessageLocation"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory20NewFunctionPrototypeENS0_6HandleINS0_10JSFunctionEEE(%"class.v8::internal::Factory"*, i64*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal5Debug34GetTemporaryObjectTrackingDisabledEv(%"class.v8::internal::Debug"*) local_unnamed_addr #2

declare void @_ZN2v88internal5Debug34SetTemporaryObjectTrackingDisabledEb(%"class.v8::internal::Debug"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK2v88internal10JSFunction9prototypeENS0_16PtrComprCageBaseE(%"class.v8::internal::JSFunction"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::JSFunction", %"class.v8::internal::JSFunction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i64 %1, 4294967295
  %9 = icmp eq i64 %8, 0
  tail call void @llvm.assume(i1 %9) #4
  %10 = zext i32 %7 to i64
  %11 = or i64 %10, %1
  %12 = add i64 %11, 9
  %13 = inttoptr i64 %12 to i8*
  %14 = load atomic i8, i8* %13 monotonic, align 1
  %15 = and i8 %14, 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %98, label %17

17:                                               ; preds = %2
  %18 = load atomic i32, i32* %6 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %19, %1
  %21 = add i64 %20, 19
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %24, %1
  %26 = and i64 %24, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %125, label %28

28:                                               ; preds = %17
  %29 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %30 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %29, null
  %31 = and i64 %20, -262144
  %32 = or i64 %31, 16
  %33 = inttoptr i64 %32 to i64*
  br i1 %30, label %63, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %29, i64 0, i32 0, i32 1
  %36 = load i8, i8* %35, align 8, !range !6
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %29, i64 0, i32 1, i64 10
  %40 = load i64, i64* %39, align 8
  %41 = trunc i64 %40 to i32
  br label %84

42:                                               ; preds = %34
  %43 = load i64, i64* %33, align 16
  %44 = add i64 %43, -41416
  %45 = inttoptr i64 %44 to %"class.v8::internal::Isolate"*
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %45, i64 0, i32 0, i32 7, i32 0, i64 10
  %47 = load i64, i64* %46, align 8
  %48 = trunc i64 %47 to i32
  br label %49

49:                                               ; preds = %42, %55
  %50 = phi i64 [ %60, %55 ], [ %25, %42 ]
  %51 = add i64 %50, -1
  %52 = inttoptr i64 %51 to i32*
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = icmp eq i32 %53, %48
  br i1 %54, label %55, label %125

55:                                               ; preds = %49
  %56 = add i64 %50, 19
  %57 = inttoptr i64 %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %59, %1
  %61 = and i64 %59, 1
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %125, label %49

63:                                               ; preds = %28
  %64 = load i64, i64* %33, align 16
  %65 = add i64 %64, -41416
  %66 = inttoptr i64 %65 to %"class.v8::internal::Isolate"*
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %66, i64 0, i32 0, i32 7, i32 0, i64 10
  %68 = load i64, i64* %67, align 8
  %69 = trunc i64 %68 to i32
  br label %70

70:                                               ; preds = %76, %63
  %71 = phi i64 [ %81, %76 ], [ %25, %63 ]
  %72 = add i64 %71, -1
  %73 = inttoptr i64 %72 to i32*
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = icmp eq i32 %74, %69
  br i1 %75, label %76, label %125

76:                                               ; preds = %70
  %77 = add i64 %71, 19
  %78 = inttoptr i64 %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = or i64 %80, %1
  %82 = and i64 %80, 1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %125, label %70

84:                                               ; preds = %38, %90
  %85 = phi i64 [ %95, %90 ], [ %25, %38 ]
  %86 = add i64 %85, -1
  %87 = inttoptr i64 %86 to i32*
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = icmp eq i32 %88, %41
  br i1 %89, label %90, label %125

90:                                               ; preds = %84
  %91 = add i64 %85, 19
  %92 = inttoptr i64 %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = zext i32 %93 to i64
  %95 = or i64 %94, %1
  %96 = and i64 %94, 1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %125, label %84

98:                                               ; preds = %2
  %99 = add i64 %4, 27
  %100 = inttoptr i64 %99 to i32*
  %101 = load atomic i32, i32* %100 acquire, align 4
  %102 = zext i32 %101 to i64
  %103 = or i64 %102, %1
  %104 = add i64 %103, -1
  %105 = inttoptr i64 %104 to i32*
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = zext i32 %106 to i64
  %108 = or i64 %107, %1
  %109 = add i64 %108, 7
  %110 = inttoptr i64 %109 to i16*
  %111 = load atomic i16, i16* %110 monotonic, align 2
  %112 = icmp eq i16 %111, 172
  %113 = load i64, i64* %3, align 8
  %114 = add i64 %113, 27
  %115 = inttoptr i64 %114 to i32*
  %116 = load atomic i32, i32* %115 acquire, align 4
  %117 = zext i32 %116 to i64
  %118 = or i64 %117, %1
  br i1 %112, label %119, label %125

119:                                              ; preds = %98
  %120 = add i64 %118, 15
  %121 = inttoptr i64 %120 to i32*
  %122 = load i32, i32* %121, align 4
  %123 = zext i32 %122 to i64
  %124 = or i64 %123, %1
  br label %125

125:                                              ; preds = %90, %84, %55, %49, %76, %70, %119, %98, %17
  %126 = phi i64 [ %25, %17 ], [ %124, %119 ], [ %118, %98 ], [ %71, %70 ], [ %81, %76 ], [ %60, %55 ], [ %50, %49 ], [ %95, %90 ], [ %85, %84 ]
  ret i64 %126
}

declare void @_ZN2v88internal18StackFrameIteratorC1EPNS0_7IsolateE(%"class.v8::internal::StackFrameIterator"*, %"class.v8::internal::Isolate"*) unnamed_addr #2

declare i64* @_ZN2v88internal7Factory18NewArgumentsObjectENS0_6HandleINS0_10JSFunctionEEEi(%"class.v8::internal::Factory"*, i64*, i32) local_unnamed_addr #2

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal15TranslatedStateC1EPKNS0_15JavaScriptFrameE(%"class.v8::internal::TranslatedState"*, %"class.v8::internal::JavaScriptFrame"*) unnamed_addr #2

declare void @_ZN2v88internal15TranslatedState7PrepareEm(%"class.v8::internal::TranslatedState"*, i64) local_unnamed_addr #2

declare %"class.v8::internal::TranslatedFrame"* @_ZN2v88internal15TranslatedState32GetArgumentsInfoFromJSFrameIndexEiPi(%"class.v8::internal::TranslatedState"*, i32, i32*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal15TranslatedValue20IsMaterializedObjectEv(%"class.v8::internal::TranslatedValue"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal15TranslatedValue8GetValueEv(%"class.v8::internal::TranslatedValue"*) local_unnamed_addr #2

declare void @_ZN2v88internal15TranslatedState31StoreMaterializedValuesAndDeoptEPNS0_15JavaScriptFrameE(%"class.v8::internal::TranslatedState"*, %"class.v8::internal::JavaScriptFrame"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15TranslatedStateD2Ev(%"class.v8::internal::TranslatedState"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %3 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 9
  %7 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %3, i64 %6
  %8 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %9 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %8, align 8
  %10 = icmp eq %"struct.v8::internal::TranslatedState::ObjectPosition"** %9, %3
  %11 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %9 to i64
  %12 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %3 to i64
  br i1 %10, label %13, label %15

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  br label %28

15:                                               ; preds = %1
  %16 = load %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %7, align 8
  %17 = and i64 %5, 511
  %18 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %16, i64 %17
  %19 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %5
  %22 = lshr i64 %21, 9
  %23 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %3, i64 %22
  %24 = load %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %23, align 8
  %25 = and i64 %21, 511
  %26 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %24, i64 %25
  %27 = icmp eq %"struct.v8::internal::TranslatedState::ObjectPosition"* %26, %18
  br i1 %27, label %28, label %34

28:                                               ; preds = %47, %15, %13
  %29 = phi i64* [ %14, %13 ], [ %19, %15 ], [ %19, %47 ]
  store i64 0, i64* %29, align 8
  %30 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"*** %8 to i64*
  %31 = sub i64 %11, %12
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, 2
  br i1 %33, label %52, label %65

34:                                               ; preds = %15, %47
  %35 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"* [ %50, %47 ], [ %18, %15 ]
  %36 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %48, %47 ], [ %7, %15 ]
  %37 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %35, i64 1
  %38 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"* %37 to i64
  %39 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %36 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = icmp eq i64 %41, 4096
  br i1 %42, label %43, label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %36, i64 1
  %45 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %43, %34
  %48 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %44, %43 ], [ %36, %34 ]
  %49 = phi i64 [ %46, %43 ], [ %38, %34 ]
  %50 = inttoptr i64 %49 to %"struct.v8::internal::TranslatedState::ObjectPosition"*
  %51 = icmp eq %"struct.v8::internal::TranslatedState::ObjectPosition"* %26, %50
  br i1 %51, label %28, label %34

52:                                               ; preds = %28, %52
  %53 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %57, %52 ], [ %3, %28 ]
  %54 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %53 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #9
  %56 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %2, align 8
  %57 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %56, i64 1
  store %"struct.v8::internal::TranslatedState::ObjectPosition"** %57, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %2, align 8
  %58 = load i64, i64* %30, align 8
  %59 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = icmp ugt i64 %61, 2
  br i1 %62, label %52, label %63

63:                                               ; preds = %52
  %64 = inttoptr i64 %58 to %"struct.v8::internal::TranslatedState::ObjectPosition"**
  br label %65

65:                                               ; preds = %63, %28
  %66 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %9, %28 ], [ %64, %63 ]
  %67 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %3, %28 ], [ %57, %63 ]
  %68 = phi i64 [ %32, %28 ], [ %61, %63 ]
  switch i64 %68, label %72 [
    i64 1, label %70
    i64 2, label %69
  ]

69:                                               ; preds = %65
  br label %70

70:                                               ; preds = %65, %69
  %71 = phi i64 [ 512, %69 ], [ 256, %65 ]
  store i64 %71, i64* %4, align 8
  br label %72

72:                                               ; preds = %70, %65
  %73 = icmp eq %"struct.v8::internal::TranslatedState::ObjectPosition"** %67, %66
  br i1 %73, label %92, label %74

74:                                               ; preds = %72, %74
  %75 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %78, %74 ], [ %67, %72 ]
  %76 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %75 to i8**
  %77 = load i8*, i8** %76, align 8
  tail call void @_ZdlPv(i8* %77) #9
  %78 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %75, i64 1
  %79 = icmp eq %"struct.v8::internal::TranslatedState::ObjectPosition"** %78, %66
  br i1 %79, label %80, label %74

80:                                               ; preds = %74
  %81 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %2, align 8
  %82 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %8, align 8
  %83 = icmp eq %"struct.v8::internal::TranslatedState::ObjectPosition"** %82, %81
  br i1 %83, label %92, label %84

84:                                               ; preds = %80
  %85 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %81 to i64
  %86 = getelementptr %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %82, i64 -1
  %87 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %86 to i64
  %88 = sub i64 %87, %85
  %89 = lshr i64 %88, 3
  %90 = xor i64 %89, -1
  %91 = getelementptr %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %82, i64 %90
  store %"struct.v8::internal::TranslatedState::ObjectPosition"** %91, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %8, align 8
  br label %92

92:                                               ; preds = %84, %80, %72
  %93 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %94 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %93, align 8
  %95 = icmp eq %"struct.v8::internal::TranslatedState::ObjectPosition"** %94, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %92
  %97 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %94 to i8*
  tail call void @_ZdlPv(i8* %97) #9
  br label %98

98:                                               ; preds = %92, %96
  %99 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 2
  tail call void @_ZNSt3__16vectorIN2v88internal15TranslatedFrameENS_9allocatorIS3_EEED2Ev(%"class.std::__1::vector.739"* %99) #4
  ret void
}

declare void @_ZN2v88internal15TranslatedFrame15AdvanceIteratorEPNSt3__116__deque_iteratorINS0_15TranslatedValueEPS4_RS4_PS5_lLl0EEE(%"class.std::__1::__deque_iterator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal15TranslatedFrameENS_9allocatorIS3_EEED2Ev(%"class.std::__1::vector.739"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::vector.739", %"class.std::__1::vector.739"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"** %2, align 8
  %4 = icmp eq %"class.v8::internal::TranslatedFrame"* %3, null
  br i1 %4, label %114, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::internal::TranslatedFrame"* %3 to i8*
  %7 = getelementptr inbounds %"class.std::__1::vector.739", %"class.std::__1::vector.739"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"** %7, align 8
  %9 = icmp eq %"class.v8::internal::TranslatedFrame"* %8, %3
  br i1 %9, label %112, label %10

10:                                               ; preds = %5, %107
  %11 = phi %"class.v8::internal::TranslatedFrame"* [ %12, %107 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %11, i64 -1
  %13 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %11, i64 -1, i32 8, i32 0, i32 0, i32 1
  %14 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %11, i64 -1, i32 8, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = lshr i64 %16, 7
  %18 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %14, i64 %17
  %19 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %11, i64 -1, i32 8, i32 0, i32 0, i32 2
  %20 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %19, align 8
  %21 = icmp eq %"class.v8::internal::TranslatedValue"** %20, %14
  %22 = ptrtoint %"class.v8::internal::TranslatedValue"** %20 to i64
  %23 = ptrtoint %"class.v8::internal::TranslatedValue"** %14 to i64
  br i1 %21, label %24, label %26

24:                                               ; preds = %10
  %25 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %11, i64 -1, i32 8, i32 0, i32 2, i32 0, i32 0
  br label %39

26:                                               ; preds = %10
  %27 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %18, align 8
  %28 = and i64 %16, 127
  %29 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %27, i64 %28
  %30 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %11, i64 -1, i32 8, i32 0, i32 2, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, %16
  %33 = lshr i64 %32, 7
  %34 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %14, i64 %33
  %35 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %34, align 8
  %36 = and i64 %32, 127
  %37 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %35, i64 %36
  %38 = icmp eq %"class.v8::internal::TranslatedValue"* %37, %29
  br i1 %38, label %39, label %45

39:                                               ; preds = %58, %26, %24
  %40 = phi i64* [ %25, %24 ], [ %30, %26 ], [ %30, %58 ]
  store i64 0, i64* %40, align 8
  %41 = bitcast %"class.v8::internal::TranslatedValue"*** %19 to i64*
  %42 = sub i64 %22, %23
  %43 = ashr exact i64 %42, 3
  %44 = icmp ugt i64 %43, 2
  br i1 %44, label %63, label %74

45:                                               ; preds = %26, %58
  %46 = phi %"class.v8::internal::TranslatedValue"* [ %61, %58 ], [ %29, %26 ]
  %47 = phi %"class.v8::internal::TranslatedValue"** [ %59, %58 ], [ %18, %26 ]
  %48 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %46, i64 1
  %49 = ptrtoint %"class.v8::internal::TranslatedValue"* %48 to i64
  %50 = bitcast %"class.v8::internal::TranslatedValue"** %47 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = sub i64 %49, %51
  %53 = icmp eq i64 %52, 4096
  br i1 %53, label %54, label %58

54:                                               ; preds = %45
  %55 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %47, i64 1
  %56 = bitcast %"class.v8::internal::TranslatedValue"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  br label %58

58:                                               ; preds = %54, %45
  %59 = phi %"class.v8::internal::TranslatedValue"** [ %55, %54 ], [ %47, %45 ]
  %60 = phi i64 [ %57, %54 ], [ %49, %45 ]
  %61 = inttoptr i64 %60 to %"class.v8::internal::TranslatedValue"*
  %62 = icmp eq %"class.v8::internal::TranslatedValue"* %37, %61
  br i1 %62, label %39, label %45

63:                                               ; preds = %39, %63
  %64 = phi %"class.v8::internal::TranslatedValue"** [ %68, %63 ], [ %14, %39 ]
  %65 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %65, i64 0, i32 0
  tail call void @_ZdlPv(i8* %66) #9
  %67 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %13, align 8
  %68 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %67, i64 1
  store %"class.v8::internal::TranslatedValue"** %68, %"class.v8::internal::TranslatedValue"*** %13, align 8
  %69 = load i64, i64* %41, align 8
  %70 = ptrtoint %"class.v8::internal::TranslatedValue"** %68 to i64
  %71 = sub i64 %69, %70
  %72 = ashr exact i64 %71, 3
  %73 = icmp ugt i64 %72, 2
  br i1 %73, label %63, label %74

74:                                               ; preds = %63, %39
  %75 = phi i64 [ %43, %39 ], [ %72, %63 ]
  switch i64 %75, label %79 [
    i64 1, label %77
    i64 2, label %76
  ]

76:                                               ; preds = %74
  br label %77

77:                                               ; preds = %74, %76
  %78 = phi i64 [ 128, %76 ], [ 64, %74 ]
  store i64 %78, i64* %15, align 8
  br label %79

79:                                               ; preds = %77, %74
  %80 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %13, align 8
  %81 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %19, align 8
  %82 = icmp eq %"class.v8::internal::TranslatedValue"** %80, %81
  br i1 %82, label %101, label %83

83:                                               ; preds = %79, %83
  %84 = phi %"class.v8::internal::TranslatedValue"** [ %87, %83 ], [ %80, %79 ]
  %85 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %84, align 8
  %86 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %85, i64 0, i32 0
  tail call void @_ZdlPv(i8* %86) #9
  %87 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %84, i64 1
  %88 = icmp eq %"class.v8::internal::TranslatedValue"** %87, %81
  br i1 %88, label %89, label %83

89:                                               ; preds = %83
  %90 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %13, align 8
  %91 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %19, align 8
  %92 = icmp eq %"class.v8::internal::TranslatedValue"** %91, %90
  br i1 %92, label %101, label %93

93:                                               ; preds = %89
  %94 = ptrtoint %"class.v8::internal::TranslatedValue"** %90 to i64
  %95 = getelementptr %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %91, i64 -1
  %96 = ptrtoint %"class.v8::internal::TranslatedValue"** %95 to i64
  %97 = sub i64 %96, %94
  %98 = lshr i64 %97, 3
  %99 = xor i64 %98, -1
  %100 = getelementptr %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %91, i64 %99
  store %"class.v8::internal::TranslatedValue"** %100, %"class.v8::internal::TranslatedValue"*** %19, align 8
  br label %101

101:                                              ; preds = %93, %89, %79
  %102 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %11, i64 -1, i32 8, i32 0, i32 0, i32 0
  %103 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %102, align 8
  %104 = icmp eq %"class.v8::internal::TranslatedValue"** %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %101
  %106 = bitcast %"class.v8::internal::TranslatedValue"** %103 to i8*
  tail call void @_ZdlPv(i8* %106) #9
  br label %107

107:                                              ; preds = %105, %101
  %108 = icmp eq %"class.v8::internal::TranslatedFrame"* %12, %3
  br i1 %108, label %109, label %10

109:                                              ; preds = %107
  %110 = bitcast %"class.std::__1::vector.739"* %0 to i8**
  %111 = load i8*, i8** %110, align 8
  br label %112

112:                                              ; preds = %5, %109
  %113 = phi i8* [ %111, %109 ], [ %6, %5 ]
  store %"class.v8::internal::TranslatedFrame"* %3, %"class.v8::internal::TranslatedFrame"** %7, align 8
  tail call void @_ZdlPv(i8* %113) #9
  br label %114

114:                                              ; preds = %1, %112
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN2v88internal12FrameSummaryD1Ev(%"class.v8::internal::FrameSummary"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal21FrameFunctionIterator4nextEv(%"class.v8::internal::FrameFunctionIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::FrameFunctionIterator", %"class.v8::internal::FrameFunctionIterator"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.v8::internal::FrameFunctionIterator", %"class.v8::internal::FrameFunctionIterator"* %0, i64 0, i32 2, i32 0, i32 0, i32 23
  %4 = getelementptr inbounds %"class.v8::internal::FrameFunctionIterator", %"class.v8::internal::FrameFunctionIterator"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.v8::internal::FrameFunctionIterator", %"class.v8::internal::FrameFunctionIterator"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.std::__1::vector.1203", %"class.std::__1::vector.1203"* %5, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::FrameFunctionIterator", %"class.v8::internal::FrameFunctionIterator"* %0, i64 0, i32 3, i32 0, i32 1
  %8 = bitcast %"class.v8::internal::FrameSummary"** %7 to i64*
  %9 = bitcast %"class.std::__1::vector.1203"* %5 to i64*
  %10 = getelementptr inbounds %"class.v8::internal::FrameFunctionIterator", %"class.v8::internal::FrameFunctionIterator"* %0, i64 0, i32 3, i32 0, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::FrameFunctionIterator", %"class.v8::internal::FrameFunctionIterator"* %0, i64 0, i32 0
  %12 = load i32, i32* %2, align 8
  br label %13

13:                                               ; preds = %44, %1
  %14 = phi i32 [ %46, %44 ], [ %12, %1 ]
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %16, label %44

16:                                               ; preds = %13
  %17 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %3, align 8
  %18 = icmp eq %"class.v8::internal::StackFrame"* %17, null
  br i1 %18, label %41, label %19

19:                                               ; preds = %16
  tail call void @_ZN2v88internal23JavaScriptFrameIterator7AdvanceEv(%"class.v8::internal::JavaScriptFrameIterator"* %4) #4
  %20 = load %"class.v8::internal::FrameSummary"*, %"class.v8::internal::FrameSummary"** %6, align 8
  %21 = load %"class.v8::internal::FrameSummary"*, %"class.v8::internal::FrameSummary"** %7, align 8
  %22 = icmp eq %"class.v8::internal::FrameSummary"* %21, %20
  br i1 %22, label %27, label %23

23:                                               ; preds = %19, %23
  %24 = phi %"class.v8::internal::FrameSummary"* [ %25, %23 ], [ %21, %19 ]
  %25 = getelementptr inbounds %"class.v8::internal::FrameSummary", %"class.v8::internal::FrameSummary"* %24, i64 -1
  tail call void @_ZN2v88internal12FrameSummaryD1Ev(%"class.v8::internal::FrameSummary"* %25) #4
  %26 = icmp eq %"class.v8::internal::FrameSummary"* %25, %20
  br i1 %26, label %27, label %23

27:                                               ; preds = %23, %19
  store %"class.v8::internal::FrameSummary"* %20, %"class.v8::internal::FrameSummary"** %7, align 8
  store i32 -1, i32* %2, align 8
  %28 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %3, align 8
  %29 = icmp eq %"class.v8::internal::StackFrame"* %28, null
  br i1 %29, label %89, label %30

30:                                               ; preds = %27
  %31 = bitcast %"class.v8::internal::StackFrame"* %28 to %"class.v8::internal::CommonFrameWithJSLinkage"*
  %32 = bitcast %"class.v8::internal::StackFrame"* %28 to void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1203"*)***
  %33 = load void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1203"*)**, void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1203"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1203"*)*, void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1203"*)** %33, i64 11
  %35 = load void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1203"*)*, void (%"class.v8::internal::CommonFrameWithJSLinkage"*, %"class.std::__1::vector.1203"*)** %34, align 8
  tail call void %35(%"class.v8::internal::CommonFrameWithJSLinkage"* nonnull %31, %"class.std::__1::vector.1203"* %5) #4
  %36 = load i64, i64* %8, align 8
  %37 = load i64, i64* %9, align 8
  %38 = sub i64 %36, %37
  %39 = sdiv exact i64 %38, 56
  %40 = trunc i64 %39 to i32
  store i32 %40, i32* %2, align 8
  br label %41

41:                                               ; preds = %16, %30
  %42 = phi i32 [ %40, %30 ], [ %14, %16 ]
  %43 = icmp eq i32 %42, -1
  br i1 %43, label %89, label %44

44:                                               ; preds = %41, %13
  %45 = phi i32 [ %42, %41 ], [ %14, %13 ]
  %46 = add nsw i32 %45, -1
  store i32 %46, i32* %2, align 8
  %47 = sext i32 %46 to i64
  %48 = load %"class.v8::internal::FrameSummary"*, %"class.v8::internal::FrameSummary"** %10, align 8
  %49 = getelementptr inbounds %"class.v8::internal::FrameSummary", %"class.v8::internal::FrameSummary"* %48, i64 %47, i32 0, i32 0, i32 2, i32 0, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %51, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = load i64, i64* %50, align 8
  %55 = add i64 %54, 15
  %56 = inttoptr i64 %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = and i64 %54, -4294967296
  %59 = zext i32 %57 to i64
  %60 = or i64 %58, %59
  %61 = and i64 %53, -4294967296
  %62 = add i64 %53, -1
  %63 = inttoptr i64 %62 to i32*
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = zext i32 %64 to i64
  %66 = or i64 %61, %65
  %67 = add i64 %66, 19
  %68 = inttoptr i64 %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = zext i32 %69 to i64
  %71 = or i64 %61, %70
  %72 = add i64 %71, 691
  %73 = inttoptr i64 %72 to i32*
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = add i64 %60, -1
  %76 = inttoptr i64 %75 to i32*
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = zext i32 %77 to i64
  %79 = or i64 %58, %78
  %80 = add i64 %79, 19
  %81 = inttoptr i64 %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %58, %83
  %85 = add i64 %84, 691
  %86 = inttoptr i64 %85 to i32*
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = icmp eq i32 %74, %87
  br i1 %88, label %89, label %13

89:                                               ; preds = %44, %27, %41
  %90 = phi i64* [ null, %41 ], [ null, %27 ], [ %50, %44 ]
  ret i64* %90
}

declare zeroext i1 @_ZNK2v88internal6Script16IsUserJavaScriptEv(%"class.v8::internal::Script"*) local_unnamed_addr #2

declare %"class.v8::internal::TranslatedFrame"* @_ZN2v88internal15TranslatedState24GetFrameFromJSFrameIndexEi(%"class.v8::internal::TranslatedState"*, i32) local_unnamed_addr #2

declare i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"*, i1 zeroext) local_unnamed_addr #2

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal18ShouldThrowOnErrorEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 1073205, i32 2146410443}
!5 = !{!"branch_weights", i32 2146410443, i32 1073205}
!6 = !{i8 0, i8 2}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN2v88internal15TranslatedFrame5beginEv: argument 0"}
!9 = distinct !{!9, !"_ZN2v88internal15TranslatedFrame5beginEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN2v88internal15TranslatedFrame8iteratorppEi: argument 0"}
!12 = distinct !{!12, !"_ZN2v88internal15TranslatedFrame8iteratorppEi"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN2v88internal15TranslatedFrame8iteratorppEi: argument 0"}
!15 = distinct !{!15, !"_ZN2v88internal15TranslatedFrame8iteratorppEi"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN2v88internal15TranslatedFrame8iteratorppEi: argument 0"}
!18 = distinct !{!18, !"_ZN2v88internal15TranslatedFrame8iteratorppEi"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN2v88internal15TranslatedFrame5beginEv: argument 0"}
!21 = distinct !{!21, !"_ZN2v88internal15TranslatedFrame5beginEv"}
