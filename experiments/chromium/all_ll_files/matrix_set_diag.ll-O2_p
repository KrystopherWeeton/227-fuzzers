; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/matrix_set_diag.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/matrix_set_diag.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, {}*, {}*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }

@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.3 = private unnamed_addr constant [72 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/matrix_set_diag.cc\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.9 = private unnamed_addr constant [21 x i8] c"input_dims_size >= 2\00", align 1
@_ZZN6tflite3ops7builtin24Register_MATRIX_SET_DIAGEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin15matrix_set_diag7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin15matrix_set_diag4EvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin15matrix_set_diag7PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %10 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %9, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %10(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 34, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i32 %6, i32 2) #4
  br label %185

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %13 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %12, align 8
  %14 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %19 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %18, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %19(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 35, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i32 %15, i32 1) #4
  br label %185

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %20, %24
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %20 ]
  %31 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 2
  %32 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %31, align 8
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp sgt i32 %34, 1
  br i1 %35, label %39, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %38 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %37, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %38(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 39, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0)) #4
  br label %185

39:                                               ; preds = %29
  %40 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 1, i64 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp slt i32 %41, 0
  br i1 %42, label %48, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %45 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %44, align 8
  %46 = sext i32 %41 to i64
  %47 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 %46
  br label %48

48:                                               ; preds = %43, %39
  %49 = phi %struct.TfLiteTensor* [ %47, %43 ], [ null, %39 ]
  %50 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %34) #4
  %51 = zext i32 %34 to i64
  %52 = icmp ult i32 %34, 8
  br i1 %52, label %53, label %71

53:                                               ; preds = %157, %71, %48
  %54 = phi i64 [ 0, %71 ], [ 0, %48 ], [ %81, %157 ]
  %55 = xor i64 %54, -1
  %56 = add nsw i64 %55, %51
  %57 = and i64 %51, 3
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %68, label %59

59:                                               ; preds = %53, %59
  %60 = phi i64 [ %65, %59 ], [ %54, %53 ]
  %61 = phi i64 [ %66, %59 ], [ %57, %53 ]
  %62 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 1, i64 %60
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %50, i64 0, i32 1, i64 %60
  store i32 %63, i32* %64, align 4
  %65 = add nuw nsw i64 %60, 1
  %66 = add i64 %61, -1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %59, !llvm.loop !2

68:                                               ; preds = %59, %53
  %69 = phi i64 [ %54, %53 ], [ %65, %59 ]
  %70 = icmp ult i64 %56, 3
  br i1 %70, label %159, label %166

71:                                               ; preds = %48
  %72 = getelementptr %struct.TfLiteIntArray, %struct.TfLiteIntArray* %50, i64 1
  %73 = add nuw nsw i64 %51, 1
  %74 = getelementptr %struct.TfLiteIntArray, %struct.TfLiteIntArray* %50, i64 %73
  %75 = getelementptr %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 1
  %76 = getelementptr %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 %73
  %77 = icmp ult %struct.TfLiteIntArray* %72, %76
  %78 = icmp ult %struct.TfLiteIntArray* %75, %74
  %79 = and i1 %77, %78
  br i1 %79, label %53, label %80

80:                                               ; preds = %71
  %81 = and i64 %51, 4294967288
  %82 = add nsw i64 %81, -8
  %83 = lshr exact i64 %82, 3
  %84 = add nuw nsw i64 %83, 1
  %85 = and i64 %84, 3
  %86 = icmp ult i64 %82, 24
  br i1 %86, label %138, label %87

87:                                               ; preds = %80
  %88 = sub nsw i64 %84, %85
  br label %89

89:                                               ; preds = %89, %87
  %90 = phi i64 [ 0, %87 ], [ %135, %89 ]
  %91 = phi i64 [ %88, %87 ], [ %136, %89 ]
  %92 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 1, i64 %90
  %93 = bitcast i32* %92 to <4 x i32>*
  %94 = load <4 x i32>, <4 x i32>* %93, align 4, !alias.scope !4
  %95 = getelementptr inbounds i32, i32* %92, i64 4
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !4
  %98 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %50, i64 0, i32 1, i64 %90
  %99 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %94, <4 x i32>* %99, align 4, !alias.scope !7, !noalias !4
  %100 = getelementptr inbounds i32, i32* %98, i64 4
  %101 = bitcast i32* %100 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !7, !noalias !4
  %102 = or i64 %90, 8
  %103 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 1, i64 %102
  %104 = bitcast i32* %103 to <4 x i32>*
  %105 = load <4 x i32>, <4 x i32>* %104, align 4, !alias.scope !4
  %106 = getelementptr inbounds i32, i32* %103, i64 4
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !4
  %109 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %50, i64 0, i32 1, i64 %102
  %110 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %105, <4 x i32>* %110, align 4, !alias.scope !7, !noalias !4
  %111 = getelementptr inbounds i32, i32* %109, i64 4
  %112 = bitcast i32* %111 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !7, !noalias !4
  %113 = or i64 %90, 16
  %114 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 1, i64 %113
  %115 = bitcast i32* %114 to <4 x i32>*
  %116 = load <4 x i32>, <4 x i32>* %115, align 4, !alias.scope !4
  %117 = getelementptr inbounds i32, i32* %114, i64 4
  %118 = bitcast i32* %117 to <4 x i32>*
  %119 = load <4 x i32>, <4 x i32>* %118, align 4, !alias.scope !4
  %120 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %50, i64 0, i32 1, i64 %113
  %121 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %116, <4 x i32>* %121, align 4, !alias.scope !7, !noalias !4
  %122 = getelementptr inbounds i32, i32* %120, i64 4
  %123 = bitcast i32* %122 to <4 x i32>*
  store <4 x i32> %119, <4 x i32>* %123, align 4, !alias.scope !7, !noalias !4
  %124 = or i64 %90, 24
  %125 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 1, i64 %124
  %126 = bitcast i32* %125 to <4 x i32>*
  %127 = load <4 x i32>, <4 x i32>* %126, align 4, !alias.scope !4
  %128 = getelementptr inbounds i32, i32* %125, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !4
  %131 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %50, i64 0, i32 1, i64 %124
  %132 = bitcast i32* %131 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %132, align 4, !alias.scope !7, !noalias !4
  %133 = getelementptr inbounds i32, i32* %131, i64 4
  %134 = bitcast i32* %133 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %134, align 4, !alias.scope !7, !noalias !4
  %135 = add i64 %90, 32
  %136 = add i64 %91, -4
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %89, !llvm.loop !9

138:                                              ; preds = %89, %80
  %139 = phi i64 [ 0, %80 ], [ %135, %89 ]
  %140 = icmp eq i64 %85, 0
  br i1 %140, label %157, label %141

141:                                              ; preds = %138, %141
  %142 = phi i64 [ %154, %141 ], [ %139, %138 ]
  %143 = phi i64 [ %155, %141 ], [ %85, %138 ]
  %144 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 1, i64 %142
  %145 = bitcast i32* %144 to <4 x i32>*
  %146 = load <4 x i32>, <4 x i32>* %145, align 4, !alias.scope !4
  %147 = getelementptr inbounds i32, i32* %144, i64 4
  %148 = bitcast i32* %147 to <4 x i32>*
  %149 = load <4 x i32>, <4 x i32>* %148, align 4, !alias.scope !4
  %150 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %50, i64 0, i32 1, i64 %142
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> %146, <4 x i32>* %151, align 4, !alias.scope !7, !noalias !4
  %152 = getelementptr inbounds i32, i32* %150, i64 4
  %153 = bitcast i32* %152 to <4 x i32>*
  store <4 x i32> %149, <4 x i32>* %153, align 4, !alias.scope !7, !noalias !4
  %154 = add i64 %142, 8
  %155 = add i64 %143, -1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %141, !llvm.loop !11

157:                                              ; preds = %141, %138
  %158 = icmp eq i64 %81, %51
  br i1 %158, label %159, label %53

159:                                              ; preds = %68, %166, %157
  %160 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 0
  %161 = load i32, i32* %160, align 8
  %162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %49, i64 0, i32 0
  store i32 %161, i32* %162, align 8
  %163 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %164 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %163, align 8
  %165 = tail call i32 %164(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %49, %struct.TfLiteIntArray* %50) #4
  br label %185

166:                                              ; preds = %68, %166
  %167 = phi i64 [ %183, %166 ], [ %69, %68 ]
  %168 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 1, i64 %167
  %169 = load i32, i32* %168, align 4
  %170 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %50, i64 0, i32 1, i64 %167
  store i32 %169, i32* %170, align 4
  %171 = add nuw nsw i64 %167, 1
  %172 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 1, i64 %171
  %173 = load i32, i32* %172, align 4
  %174 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %50, i64 0, i32 1, i64 %171
  store i32 %173, i32* %174, align 4
  %175 = add nuw nsw i64 %167, 2
  %176 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 1, i64 %175
  %177 = load i32, i32* %176, align 4
  %178 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %50, i64 0, i32 1, i64 %175
  store i32 %177, i32* %178, align 4
  %179 = add nuw nsw i64 %167, 3
  %180 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 1, i64 %179
  %181 = load i32, i32* %180, align 4
  %182 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %50, i64 0, i32 1, i64 %179
  store i32 %181, i32* %182, align 4
  %183 = add nuw nsw i64 %167, 4
  %184 = icmp eq i64 %183, %51
  br i1 %184, label %159, label %166, !llvm.loop !12

185:                                              ; preds = %36, %159, %17, %8
  %186 = phi i32 [ 1, %8 ], [ 1, %17 ], [ 1, %36 ], [ %165, %159 ]
  ret i32 %186
}

declare %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6tflite3ops7builtin15matrix_set_diag14FillDiagHelperEPK12TfLiteTensorS5_PS3_(%struct.TfLiteTensor* readonly, %struct.TfLiteTensor* readonly, %struct.TfLiteTensor* readonly) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 2
  %5 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, -2
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %101

10:                                               ; preds = %3
  %11 = zext i32 %8 to i64
  %12 = icmp ult i32 %8, 8
  br i1 %12, label %13, label %16

13:                                               ; preds = %91, %10
  %14 = phi i64 [ 0, %10 ], [ %17, %91 ]
  %15 = phi i32 [ 1, %10 ], [ %99, %91 ]
  br label %112

16:                                               ; preds = %10
  %17 = and i64 %11, 4294967288
  %18 = add nsw i64 %17, -8
  %19 = lshr exact i64 %18, 3
  %20 = add nuw nsw i64 %19, 1
  %21 = and i64 %20, 3
  %22 = icmp ult i64 %18, 24
  br i1 %22, label %68, label %23

23:                                               ; preds = %16
  %24 = sub nsw i64 %20, %21
  br label %25

25:                                               ; preds = %25, %23
  %26 = phi i64 [ 0, %23 ], [ %65, %25 ]
  %27 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %23 ], [ %63, %25 ]
  %28 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %23 ], [ %64, %25 ]
  %29 = phi i64 [ %24, %23 ], [ %66, %25 ]
  %30 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 1, i64 %26
  %31 = bitcast i32* %30 to <4 x i32>*
  %32 = load <4 x i32>, <4 x i32>* %31, align 4
  %33 = getelementptr inbounds i32, i32* %30, i64 4
  %34 = bitcast i32* %33 to <4 x i32>*
  %35 = load <4 x i32>, <4 x i32>* %34, align 4
  %36 = mul nsw <4 x i32> %32, %27
  %37 = mul nsw <4 x i32> %35, %28
  %38 = or i64 %26, 8
  %39 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 1, i64 %38
  %40 = bitcast i32* %39 to <4 x i32>*
  %41 = load <4 x i32>, <4 x i32>* %40, align 4
  %42 = getelementptr inbounds i32, i32* %39, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  %44 = load <4 x i32>, <4 x i32>* %43, align 4
  %45 = mul nsw <4 x i32> %41, %36
  %46 = mul nsw <4 x i32> %44, %37
  %47 = or i64 %26, 16
  %48 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 1, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  %50 = load <4 x i32>, <4 x i32>* %49, align 4
  %51 = getelementptr inbounds i32, i32* %48, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  %53 = load <4 x i32>, <4 x i32>* %52, align 4
  %54 = mul nsw <4 x i32> %50, %45
  %55 = mul nsw <4 x i32> %53, %46
  %56 = or i64 %26, 24
  %57 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 1, i64 %56
  %58 = bitcast i32* %57 to <4 x i32>*
  %59 = load <4 x i32>, <4 x i32>* %58, align 4
  %60 = getelementptr inbounds i32, i32* %57, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  %62 = load <4 x i32>, <4 x i32>* %61, align 4
  %63 = mul nsw <4 x i32> %59, %54
  %64 = mul nsw <4 x i32> %62, %55
  %65 = add i64 %26, 32
  %66 = add i64 %29, -4
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %25, !llvm.loop !13

68:                                               ; preds = %25, %16
  %69 = phi <4 x i32> [ undef, %16 ], [ %63, %25 ]
  %70 = phi <4 x i32> [ undef, %16 ], [ %64, %25 ]
  %71 = phi i64 [ 0, %16 ], [ %65, %25 ]
  %72 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %16 ], [ %63, %25 ]
  %73 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %16 ], [ %64, %25 ]
  %74 = icmp eq i64 %21, 0
  br i1 %74, label %91, label %75

75:                                               ; preds = %68, %75
  %76 = phi i64 [ %88, %75 ], [ %71, %68 ]
  %77 = phi <4 x i32> [ %86, %75 ], [ %72, %68 ]
  %78 = phi <4 x i32> [ %87, %75 ], [ %73, %68 ]
  %79 = phi i64 [ %89, %75 ], [ %21, %68 ]
  %80 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 1, i64 %76
  %81 = bitcast i32* %80 to <4 x i32>*
  %82 = load <4 x i32>, <4 x i32>* %81, align 4
  %83 = getelementptr inbounds i32, i32* %80, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  %85 = load <4 x i32>, <4 x i32>* %84, align 4
  %86 = mul nsw <4 x i32> %82, %77
  %87 = mul nsw <4 x i32> %85, %78
  %88 = add i64 %76, 8
  %89 = add i64 %79, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %75, !llvm.loop !14

91:                                               ; preds = %75, %68
  %92 = phi <4 x i32> [ %69, %68 ], [ %86, %75 ]
  %93 = phi <4 x i32> [ %70, %68 ], [ %87, %75 ]
  %94 = mul <4 x i32> %93, %92
  %95 = shufflevector <4 x i32> %94, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %96 = mul <4 x i32> %94, %95
  %97 = shufflevector <4 x i32> %96, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %98 = mul <4 x i32> %96, %97
  %99 = extractelement <4 x i32> %98, i32 0
  %100 = icmp eq i64 %17, %11
  br i1 %100, label %101, label %13

101:                                              ; preds = %112, %91, %3
  %102 = phi i32 [ 1, %3 ], [ %99, %91 ], [ %117, %112 ]
  %103 = sext i32 %8 to i64
  %104 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 1, i64 %103
  %105 = load i32, i32* %104, align 4
  %106 = add nsw i32 %7, -1
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 1, i64 %107
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 0
  %111 = load i32, i32* %110, align 8
  switch i32 %111, label %472 [
    i32 4, label %120
    i32 2, label %191
    i32 7, label %259
    i32 9, label %330
    i32 3, label %401
  ]

112:                                              ; preds = %13, %112
  %113 = phi i64 [ %118, %112 ], [ %14, %13 ]
  %114 = phi i32 [ %117, %112 ], [ %15, %13 ]
  %115 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 1, i64 %113
  %116 = load i32, i32* %115, align 4
  %117 = mul nsw i32 %116, %114
  %118 = add nuw nsw i64 %113, 1
  %119 = icmp eq i64 %118, %11
  br i1 %119, label %101, label %112, !llvm.loop !15

120:                                              ; preds = %101
  %121 = icmp eq %struct.TfLiteTensor* %0, null
  br i1 %121, label %126, label %122

122:                                              ; preds = %120
  %123 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 1
  %124 = bitcast %union.TfLitePtrUnion* %123 to i64**
  %125 = load i64*, i64** %124, align 8
  br label %126

126:                                              ; preds = %122, %120
  %127 = phi i64* [ %125, %122 ], [ null, %120 ]
  %128 = icmp eq %struct.TfLiteTensor* %1, null
  br i1 %128, label %133, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1
  %131 = bitcast %union.TfLitePtrUnion* %130 to i64**
  %132 = load i64*, i64** %131, align 8
  br label %133

133:                                              ; preds = %129, %126
  %134 = phi i64* [ %132, %129 ], [ null, %126 ]
  %135 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %135, label %140, label %136

136:                                              ; preds = %133
  %137 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1
  %138 = bitcast %union.TfLitePtrUnion* %137 to i64**
  %139 = load i64*, i64** %138, align 8
  br label %140

140:                                              ; preds = %136, %133
  %141 = phi i64* [ %139, %136 ], [ null, %133 ]
  %142 = icmp sgt i32 %102, 0
  br i1 %142, label %143, label %571

143:                                              ; preds = %140
  %144 = icmp sgt i32 %105, 0
  %145 = icmp sgt i32 %109, 0
  %146 = mul nsw i32 %109, %105
  %147 = sext i32 %146 to i64
  %148 = sext i32 %109 to i64
  %149 = zext i32 %105 to i64
  %150 = zext i32 %109 to i64
  br label %151

151:                                              ; preds = %163, %143
  %152 = phi i32 [ 0, %143 ], [ %167, %163 ]
  %153 = phi i32 [ 0, %143 ], [ %164, %163 ]
  %154 = phi i64* [ %127, %143 ], [ %166, %163 ]
  %155 = phi i64* [ %141, %143 ], [ %165, %163 ]
  br i1 %144, label %156, label %163

156:                                              ; preds = %151, %169
  %157 = phi i64 [ %171, %169 ], [ 0, %151 ]
  %158 = phi i32 [ %170, %169 ], [ %153, %151 ]
  br i1 %145, label %159, label %169

159:                                              ; preds = %156
  %160 = mul nsw i64 %157, %148
  %161 = add nsw i64 %160, %157
  %162 = getelementptr inbounds i64, i64* %155, i64 %161
  br label %173

163:                                              ; preds = %169, %151
  %164 = phi i32 [ %153, %151 ], [ %170, %169 ]
  %165 = getelementptr inbounds i64, i64* %155, i64 %147
  %166 = getelementptr inbounds i64, i64* %154, i64 %147
  %167 = add nuw nsw i32 %152, 1
  %168 = icmp eq i32 %167, %102
  br i1 %168, label %571, label %151

169:                                              ; preds = %187, %156
  %170 = phi i32 [ %158, %156 ], [ %188, %187 ]
  %171 = add nuw nsw i64 %157, 1
  %172 = icmp eq i64 %171, %149
  br i1 %172, label %163, label %156

173:                                              ; preds = %187, %159
  %174 = phi i64 [ 0, %159 ], [ %189, %187 ]
  %175 = phi i32 [ %158, %159 ], [ %188, %187 ]
  %176 = icmp eq i64 %157, %174
  br i1 %176, label %177, label %182

177:                                              ; preds = %173
  %178 = sext i32 %175 to i64
  %179 = getelementptr inbounds i64, i64* %134, i64 %178
  %180 = load i64, i64* %179, align 8
  store i64 %180, i64* %162, align 8
  %181 = add nsw i32 %175, 1
  br label %187

182:                                              ; preds = %173
  %183 = add nsw i64 %174, %160
  %184 = getelementptr inbounds i64, i64* %154, i64 %183
  %185 = load i64, i64* %184, align 8
  %186 = getelementptr inbounds i64, i64* %155, i64 %183
  store i64 %185, i64* %186, align 8
  br label %187

187:                                              ; preds = %182, %177
  %188 = phi i32 [ %181, %177 ], [ %175, %182 ]
  %189 = add nuw nsw i64 %174, 1
  %190 = icmp eq i64 %189, %150
  br i1 %190, label %169, label %173

191:                                              ; preds = %101
  %192 = icmp eq %struct.TfLiteTensor* %0, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %191
  %194 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 1, i32 0
  %195 = load i32*, i32** %194, align 8
  br label %196

196:                                              ; preds = %193, %191
  %197 = phi i32* [ %195, %193 ], [ null, %191 ]
  %198 = icmp eq %struct.TfLiteTensor* %1, null
  br i1 %198, label %202, label %199

199:                                              ; preds = %196
  %200 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1, i32 0
  %201 = load i32*, i32** %200, align 8
  br label %202

202:                                              ; preds = %199, %196
  %203 = phi i32* [ %201, %199 ], [ null, %196 ]
  %204 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %204, label %208, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1, i32 0
  %207 = load i32*, i32** %206, align 8
  br label %208

208:                                              ; preds = %205, %202
  %209 = phi i32* [ %207, %205 ], [ null, %202 ]
  %210 = icmp sgt i32 %102, 0
  br i1 %210, label %211, label %571

211:                                              ; preds = %208
  %212 = icmp sgt i32 %105, 0
  %213 = icmp sgt i32 %109, 0
  %214 = mul nsw i32 %109, %105
  %215 = sext i32 %214 to i64
  %216 = sext i32 %109 to i64
  %217 = zext i32 %105 to i64
  %218 = zext i32 %109 to i64
  br label %219

219:                                              ; preds = %231, %211
  %220 = phi i32 [ 0, %211 ], [ %235, %231 ]
  %221 = phi i32 [ 0, %211 ], [ %232, %231 ]
  %222 = phi i32* [ %197, %211 ], [ %234, %231 ]
  %223 = phi i32* [ %209, %211 ], [ %233, %231 ]
  br i1 %212, label %224, label %231

224:                                              ; preds = %219, %237
  %225 = phi i64 [ %239, %237 ], [ 0, %219 ]
  %226 = phi i32 [ %238, %237 ], [ %221, %219 ]
  br i1 %213, label %227, label %237

227:                                              ; preds = %224
  %228 = mul nsw i64 %225, %216
  %229 = add nsw i64 %228, %225
  %230 = getelementptr inbounds i32, i32* %223, i64 %229
  br label %241

231:                                              ; preds = %237, %219
  %232 = phi i32 [ %221, %219 ], [ %238, %237 ]
  %233 = getelementptr inbounds i32, i32* %223, i64 %215
  %234 = getelementptr inbounds i32, i32* %222, i64 %215
  %235 = add nuw nsw i32 %220, 1
  %236 = icmp eq i32 %235, %102
  br i1 %236, label %571, label %219

237:                                              ; preds = %255, %224
  %238 = phi i32 [ %226, %224 ], [ %256, %255 ]
  %239 = add nuw nsw i64 %225, 1
  %240 = icmp eq i64 %239, %217
  br i1 %240, label %231, label %224

241:                                              ; preds = %255, %227
  %242 = phi i64 [ 0, %227 ], [ %257, %255 ]
  %243 = phi i32 [ %226, %227 ], [ %256, %255 ]
  %244 = icmp eq i64 %225, %242
  br i1 %244, label %245, label %250

245:                                              ; preds = %241
  %246 = sext i32 %243 to i64
  %247 = getelementptr inbounds i32, i32* %203, i64 %246
  %248 = load i32, i32* %247, align 4
  store i32 %248, i32* %230, align 4
  %249 = add nsw i32 %243, 1
  br label %255

250:                                              ; preds = %241
  %251 = add nsw i64 %242, %228
  %252 = getelementptr inbounds i32, i32* %222, i64 %251
  %253 = load i32, i32* %252, align 4
  %254 = getelementptr inbounds i32, i32* %223, i64 %251
  store i32 %253, i32* %254, align 4
  br label %255

255:                                              ; preds = %250, %245
  %256 = phi i32 [ %249, %245 ], [ %243, %250 ]
  %257 = add nuw nsw i64 %242, 1
  %258 = icmp eq i64 %257, %218
  br i1 %258, label %237, label %241

259:                                              ; preds = %101
  %260 = icmp eq %struct.TfLiteTensor* %0, null
  br i1 %260, label %265, label %261

261:                                              ; preds = %259
  %262 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 1
  %263 = bitcast %union.TfLitePtrUnion* %262 to i16**
  %264 = load i16*, i16** %263, align 8
  br label %265

265:                                              ; preds = %261, %259
  %266 = phi i16* [ %264, %261 ], [ null, %259 ]
  %267 = icmp eq %struct.TfLiteTensor* %1, null
  br i1 %267, label %272, label %268

268:                                              ; preds = %265
  %269 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1
  %270 = bitcast %union.TfLitePtrUnion* %269 to i16**
  %271 = load i16*, i16** %270, align 8
  br label %272

272:                                              ; preds = %268, %265
  %273 = phi i16* [ %271, %268 ], [ null, %265 ]
  %274 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %274, label %279, label %275

275:                                              ; preds = %272
  %276 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1
  %277 = bitcast %union.TfLitePtrUnion* %276 to i16**
  %278 = load i16*, i16** %277, align 8
  br label %279

279:                                              ; preds = %275, %272
  %280 = phi i16* [ %278, %275 ], [ null, %272 ]
  %281 = icmp sgt i32 %102, 0
  br i1 %281, label %282, label %571

282:                                              ; preds = %279
  %283 = icmp sgt i32 %105, 0
  %284 = icmp sgt i32 %109, 0
  %285 = mul nsw i32 %109, %105
  %286 = sext i32 %285 to i64
  %287 = sext i32 %109 to i64
  %288 = zext i32 %105 to i64
  %289 = zext i32 %109 to i64
  br label %290

290:                                              ; preds = %302, %282
  %291 = phi i32 [ 0, %282 ], [ %306, %302 ]
  %292 = phi i32 [ 0, %282 ], [ %303, %302 ]
  %293 = phi i16* [ %266, %282 ], [ %305, %302 ]
  %294 = phi i16* [ %280, %282 ], [ %304, %302 ]
  br i1 %283, label %295, label %302

295:                                              ; preds = %290, %308
  %296 = phi i64 [ %310, %308 ], [ 0, %290 ]
  %297 = phi i32 [ %309, %308 ], [ %292, %290 ]
  br i1 %284, label %298, label %308

298:                                              ; preds = %295
  %299 = mul nsw i64 %296, %287
  %300 = add nsw i64 %299, %296
  %301 = getelementptr inbounds i16, i16* %294, i64 %300
  br label %312

302:                                              ; preds = %308, %290
  %303 = phi i32 [ %292, %290 ], [ %309, %308 ]
  %304 = getelementptr inbounds i16, i16* %294, i64 %286
  %305 = getelementptr inbounds i16, i16* %293, i64 %286
  %306 = add nuw nsw i32 %291, 1
  %307 = icmp eq i32 %306, %102
  br i1 %307, label %571, label %290

308:                                              ; preds = %326, %295
  %309 = phi i32 [ %297, %295 ], [ %327, %326 ]
  %310 = add nuw nsw i64 %296, 1
  %311 = icmp eq i64 %310, %288
  br i1 %311, label %302, label %295

312:                                              ; preds = %326, %298
  %313 = phi i64 [ 0, %298 ], [ %328, %326 ]
  %314 = phi i32 [ %297, %298 ], [ %327, %326 ]
  %315 = icmp eq i64 %296, %313
  br i1 %315, label %316, label %321

316:                                              ; preds = %312
  %317 = sext i32 %314 to i64
  %318 = getelementptr inbounds i16, i16* %273, i64 %317
  %319 = load i16, i16* %318, align 2
  store i16 %319, i16* %301, align 2
  %320 = add nsw i32 %314, 1
  br label %326

321:                                              ; preds = %312
  %322 = add nsw i64 %313, %299
  %323 = getelementptr inbounds i16, i16* %293, i64 %322
  %324 = load i16, i16* %323, align 2
  %325 = getelementptr inbounds i16, i16* %294, i64 %322
  store i16 %324, i16* %325, align 2
  br label %326

326:                                              ; preds = %321, %316
  %327 = phi i32 [ %320, %316 ], [ %314, %321 ]
  %328 = add nuw nsw i64 %313, 1
  %329 = icmp eq i64 %328, %289
  br i1 %329, label %308, label %312

330:                                              ; preds = %101
  %331 = icmp eq %struct.TfLiteTensor* %0, null
  br i1 %331, label %336, label %332

332:                                              ; preds = %330
  %333 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 1
  %334 = bitcast %union.TfLitePtrUnion* %333 to i8**
  %335 = load i8*, i8** %334, align 8
  br label %336

336:                                              ; preds = %332, %330
  %337 = phi i8* [ %335, %332 ], [ null, %330 ]
  %338 = icmp eq %struct.TfLiteTensor* %1, null
  br i1 %338, label %343, label %339

339:                                              ; preds = %336
  %340 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1
  %341 = bitcast %union.TfLitePtrUnion* %340 to i8**
  %342 = load i8*, i8** %341, align 8
  br label %343

343:                                              ; preds = %339, %336
  %344 = phi i8* [ %342, %339 ], [ null, %336 ]
  %345 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %345, label %350, label %346

346:                                              ; preds = %343
  %347 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1
  %348 = bitcast %union.TfLitePtrUnion* %347 to i8**
  %349 = load i8*, i8** %348, align 8
  br label %350

350:                                              ; preds = %346, %343
  %351 = phi i8* [ %349, %346 ], [ null, %343 ]
  %352 = icmp sgt i32 %102, 0
  br i1 %352, label %353, label %571

353:                                              ; preds = %350
  %354 = icmp sgt i32 %105, 0
  %355 = icmp sgt i32 %109, 0
  %356 = mul nsw i32 %109, %105
  %357 = sext i32 %356 to i64
  %358 = sext i32 %109 to i64
  %359 = zext i32 %105 to i64
  %360 = zext i32 %109 to i64
  br label %361

361:                                              ; preds = %373, %353
  %362 = phi i32 [ 0, %353 ], [ %377, %373 ]
  %363 = phi i32 [ 0, %353 ], [ %374, %373 ]
  %364 = phi i8* [ %337, %353 ], [ %376, %373 ]
  %365 = phi i8* [ %351, %353 ], [ %375, %373 ]
  br i1 %354, label %366, label %373

366:                                              ; preds = %361, %379
  %367 = phi i64 [ %381, %379 ], [ 0, %361 ]
  %368 = phi i32 [ %380, %379 ], [ %363, %361 ]
  br i1 %355, label %369, label %379

369:                                              ; preds = %366
  %370 = mul nsw i64 %367, %358
  %371 = add nsw i64 %370, %367
  %372 = getelementptr inbounds i8, i8* %365, i64 %371
  br label %383

373:                                              ; preds = %379, %361
  %374 = phi i32 [ %363, %361 ], [ %380, %379 ]
  %375 = getelementptr inbounds i8, i8* %365, i64 %357
  %376 = getelementptr inbounds i8, i8* %364, i64 %357
  %377 = add nuw nsw i32 %362, 1
  %378 = icmp eq i32 %377, %102
  br i1 %378, label %571, label %361

379:                                              ; preds = %397, %366
  %380 = phi i32 [ %368, %366 ], [ %398, %397 ]
  %381 = add nuw nsw i64 %367, 1
  %382 = icmp eq i64 %381, %359
  br i1 %382, label %373, label %366

383:                                              ; preds = %397, %369
  %384 = phi i64 [ 0, %369 ], [ %399, %397 ]
  %385 = phi i32 [ %368, %369 ], [ %398, %397 ]
  %386 = icmp eq i64 %367, %384
  br i1 %386, label %387, label %392

387:                                              ; preds = %383
  %388 = sext i32 %385 to i64
  %389 = getelementptr inbounds i8, i8* %344, i64 %388
  %390 = load i8, i8* %389, align 1
  store i8 %390, i8* %372, align 1
  %391 = add nsw i32 %385, 1
  br label %397

392:                                              ; preds = %383
  %393 = add nsw i64 %384, %370
  %394 = getelementptr inbounds i8, i8* %364, i64 %393
  %395 = load i8, i8* %394, align 1
  %396 = getelementptr inbounds i8, i8* %365, i64 %393
  store i8 %395, i8* %396, align 1
  br label %397

397:                                              ; preds = %392, %387
  %398 = phi i32 [ %391, %387 ], [ %385, %392 ]
  %399 = add nuw nsw i64 %384, 1
  %400 = icmp eq i64 %399, %360
  br i1 %400, label %379, label %383

401:                                              ; preds = %101
  %402 = icmp eq %struct.TfLiteTensor* %0, null
  br i1 %402, label %407, label %403

403:                                              ; preds = %401
  %404 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 1
  %405 = bitcast %union.TfLitePtrUnion* %404 to i8**
  %406 = load i8*, i8** %405, align 8
  br label %407

407:                                              ; preds = %403, %401
  %408 = phi i8* [ %406, %403 ], [ null, %401 ]
  %409 = icmp eq %struct.TfLiteTensor* %1, null
  br i1 %409, label %414, label %410

410:                                              ; preds = %407
  %411 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1
  %412 = bitcast %union.TfLitePtrUnion* %411 to i8**
  %413 = load i8*, i8** %412, align 8
  br label %414

414:                                              ; preds = %410, %407
  %415 = phi i8* [ %413, %410 ], [ null, %407 ]
  %416 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %416, label %421, label %417

417:                                              ; preds = %414
  %418 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1
  %419 = bitcast %union.TfLitePtrUnion* %418 to i8**
  %420 = load i8*, i8** %419, align 8
  br label %421

421:                                              ; preds = %417, %414
  %422 = phi i8* [ %420, %417 ], [ null, %414 ]
  %423 = icmp sgt i32 %102, 0
  br i1 %423, label %424, label %571

424:                                              ; preds = %421
  %425 = icmp sgt i32 %105, 0
  %426 = icmp sgt i32 %109, 0
  %427 = mul nsw i32 %109, %105
  %428 = sext i32 %427 to i64
  %429 = sext i32 %109 to i64
  %430 = zext i32 %105 to i64
  %431 = zext i32 %109 to i64
  br label %432

432:                                              ; preds = %444, %424
  %433 = phi i32 [ 0, %424 ], [ %448, %444 ]
  %434 = phi i32 [ 0, %424 ], [ %445, %444 ]
  %435 = phi i8* [ %408, %424 ], [ %447, %444 ]
  %436 = phi i8* [ %422, %424 ], [ %446, %444 ]
  br i1 %425, label %437, label %444

437:                                              ; preds = %432, %450
  %438 = phi i64 [ %452, %450 ], [ 0, %432 ]
  %439 = phi i32 [ %451, %450 ], [ %434, %432 ]
  br i1 %426, label %440, label %450

440:                                              ; preds = %437
  %441 = mul nsw i64 %438, %429
  %442 = add nsw i64 %441, %438
  %443 = getelementptr inbounds i8, i8* %436, i64 %442
  br label %454

444:                                              ; preds = %450, %432
  %445 = phi i32 [ %434, %432 ], [ %451, %450 ]
  %446 = getelementptr inbounds i8, i8* %436, i64 %428
  %447 = getelementptr inbounds i8, i8* %435, i64 %428
  %448 = add nuw nsw i32 %433, 1
  %449 = icmp eq i32 %448, %102
  br i1 %449, label %571, label %432

450:                                              ; preds = %468, %437
  %451 = phi i32 [ %439, %437 ], [ %469, %468 ]
  %452 = add nuw nsw i64 %438, 1
  %453 = icmp eq i64 %452, %430
  br i1 %453, label %444, label %437

454:                                              ; preds = %468, %440
  %455 = phi i64 [ 0, %440 ], [ %470, %468 ]
  %456 = phi i32 [ %439, %440 ], [ %469, %468 ]
  %457 = icmp eq i64 %438, %455
  br i1 %457, label %458, label %463

458:                                              ; preds = %454
  %459 = sext i32 %456 to i64
  %460 = getelementptr inbounds i8, i8* %415, i64 %459
  %461 = load i8, i8* %460, align 1
  store i8 %461, i8* %443, align 1
  %462 = add nsw i32 %456, 1
  br label %468

463:                                              ; preds = %454
  %464 = add nsw i64 %455, %441
  %465 = getelementptr inbounds i8, i8* %435, i64 %464
  %466 = load i8, i8* %465, align 1
  %467 = getelementptr inbounds i8, i8* %436, i64 %464
  store i8 %466, i8* %467, align 1
  br label %468

468:                                              ; preds = %463, %458
  %469 = phi i32 [ %462, %458 ], [ %456, %463 ]
  %470 = add nuw nsw i64 %455, 1
  %471 = icmp eq i64 %470, %431
  br i1 %471, label %450, label %454

472:                                              ; preds = %101
  %473 = icmp eq %struct.TfLiteTensor* %0, null
  br i1 %473, label %478, label %474

474:                                              ; preds = %472
  %475 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 1
  %476 = bitcast %union.TfLitePtrUnion* %475 to float**
  %477 = load float*, float** %476, align 8
  br label %478

478:                                              ; preds = %474, %472
  %479 = phi float* [ %477, %474 ], [ null, %472 ]
  %480 = icmp eq %struct.TfLiteTensor* %1, null
  br i1 %480, label %485, label %481

481:                                              ; preds = %478
  %482 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1
  %483 = bitcast %union.TfLitePtrUnion* %482 to float**
  %484 = load float*, float** %483, align 8
  br label %485

485:                                              ; preds = %481, %478
  %486 = phi float* [ %484, %481 ], [ null, %478 ]
  %487 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %487, label %492, label %488

488:                                              ; preds = %485
  %489 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1
  %490 = bitcast %union.TfLitePtrUnion* %489 to float**
  %491 = load float*, float** %490, align 8
  br label %492

492:                                              ; preds = %488, %485
  %493 = phi float* [ %491, %488 ], [ null, %485 ]
  %494 = icmp sgt i32 %102, 0
  br i1 %494, label %495, label %571

495:                                              ; preds = %492
  %496 = icmp sgt i32 %105, 0
  %497 = icmp sgt i32 %109, 0
  %498 = mul nsw i32 %109, %105
  %499 = sext i32 %498 to i64
  %500 = sext i32 %109 to i64
  %501 = zext i32 %105 to i64
  %502 = zext i32 %109 to i64
  %503 = and i64 %502, 1
  %504 = icmp eq i32 %109, 1
  %505 = sub nsw i64 %502, %503
  %506 = icmp eq i64 %503, 0
  br label %507

507:                                              ; preds = %520, %495
  %508 = phi i32 [ 0, %495 ], [ %524, %520 ]
  %509 = phi i32 [ 0, %495 ], [ %521, %520 ]
  %510 = phi float* [ %479, %495 ], [ %523, %520 ]
  %511 = phi float* [ %493, %495 ], [ %522, %520 ]
  br i1 %496, label %512, label %520

512:                                              ; preds = %507, %545
  %513 = phi i64 [ %547, %545 ], [ 0, %507 ]
  %514 = phi i32 [ %546, %545 ], [ %509, %507 ]
  br i1 %497, label %515, label %545

515:                                              ; preds = %512
  %516 = mul nsw i64 %513, %500
  %517 = add nsw i64 %516, %513
  %518 = getelementptr inbounds float, float* %511, i64 %517
  %519 = bitcast float* %518 to i32*
  br i1 %504, label %526, label %549

520:                                              ; preds = %545, %507
  %521 = phi i32 [ %509, %507 ], [ %546, %545 ]
  %522 = getelementptr inbounds float, float* %511, i64 %499
  %523 = getelementptr inbounds float, float* %510, i64 %499
  %524 = add nuw nsw i32 %508, 1
  %525 = icmp eq i32 %524, %102
  br i1 %525, label %571, label %507

526:                                              ; preds = %585, %515
  %527 = phi i32 [ undef, %515 ], [ %586, %585 ]
  %528 = phi i64 [ 0, %515 ], [ %587, %585 ]
  %529 = phi i32 [ %514, %515 ], [ %586, %585 ]
  br i1 %506, label %545, label %530

530:                                              ; preds = %526
  %531 = icmp eq i64 %513, %528
  br i1 %531, label %539, label %532

532:                                              ; preds = %530
  %533 = add nsw i64 %528, %516
  %534 = getelementptr inbounds float, float* %510, i64 %533
  %535 = bitcast float* %534 to i32*
  %536 = load i32, i32* %535, align 4
  %537 = getelementptr inbounds float, float* %511, i64 %533
  %538 = bitcast float* %537 to i32*
  store i32 %536, i32* %538, align 4
  br label %545

539:                                              ; preds = %530
  %540 = sext i32 %529 to i64
  %541 = getelementptr inbounds float, float* %486, i64 %540
  %542 = bitcast float* %541 to i32*
  %543 = load i32, i32* %542, align 4
  store i32 %543, i32* %519, align 4
  %544 = add nsw i32 %529, 1
  br label %545

545:                                              ; preds = %526, %532, %539, %512
  %546 = phi i32 [ %514, %512 ], [ %527, %526 ], [ %544, %539 ], [ %529, %532 ]
  %547 = add nuw nsw i64 %513, 1
  %548 = icmp eq i64 %547, %501
  br i1 %548, label %520, label %512

549:                                              ; preds = %515, %585
  %550 = phi i64 [ %587, %585 ], [ 0, %515 ]
  %551 = phi i32 [ %586, %585 ], [ %514, %515 ]
  %552 = phi i64 [ %588, %585 ], [ %505, %515 ]
  %553 = icmp eq i64 %513, %550
  br i1 %553, label %554, label %560

554:                                              ; preds = %549
  %555 = sext i32 %551 to i64
  %556 = getelementptr inbounds float, float* %486, i64 %555
  %557 = bitcast float* %556 to i32*
  %558 = load i32, i32* %557, align 4
  store i32 %558, i32* %519, align 4
  %559 = add nsw i32 %551, 1
  br label %567

560:                                              ; preds = %549
  %561 = add nsw i64 %550, %516
  %562 = getelementptr inbounds float, float* %510, i64 %561
  %563 = bitcast float* %562 to i32*
  %564 = load i32, i32* %563, align 4
  %565 = getelementptr inbounds float, float* %511, i64 %561
  %566 = bitcast float* %565 to i32*
  store i32 %564, i32* %566, align 4
  br label %567

567:                                              ; preds = %560, %554
  %568 = phi i32 [ %559, %554 ], [ %551, %560 ]
  %569 = or i64 %550, 1
  %570 = icmp eq i64 %513, %569
  br i1 %570, label %579, label %572

571:                                              ; preds = %444, %373, %302, %231, %163, %520, %492, %421, %350, %279, %208, %140
  ret void

572:                                              ; preds = %567
  %573 = add nsw i64 %569, %516
  %574 = getelementptr inbounds float, float* %510, i64 %573
  %575 = bitcast float* %574 to i32*
  %576 = load i32, i32* %575, align 4
  %577 = getelementptr inbounds float, float* %511, i64 %573
  %578 = bitcast float* %577 to i32*
  store i32 %576, i32* %578, align 4
  br label %585

579:                                              ; preds = %567
  %580 = sext i32 %568 to i64
  %581 = getelementptr inbounds float, float* %486, i64 %580
  %582 = bitcast float* %581 to i32*
  %583 = load i32, i32* %582, align 4
  store i32 %583, i32* %519, align 4
  %584 = add nsw i32 %568, 1
  br label %585

585:                                              ; preds = %579, %572
  %586 = phi i32 [ %584, %579 ], [ %568, %572 ]
  %587 = add nuw nsw i64 %550, 2
  %588 = add i64 %552, -2
  %589 = icmp eq i64 %588, 0
  br i1 %589, label %526, label %549
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin15matrix_set_diag4EvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext* nocapture readonly, %struct.TfLiteNode* nocapture readonly) #2 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %10 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %9, align 8
  %11 = sext i32 %6 to i64
  %12 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %10, i64 %11
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi %struct.TfLiteTensor* [ %12, %8 ], [ null, %2 ]
  %15 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %16 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %15, align 8
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %16, i64 0, i32 1, i64 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %22 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %21, align 8
  %23 = sext i32 %18 to i64
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 %23
  br label %25

25:                                               ; preds = %13, %20
  %26 = phi %struct.TfLiteTensor* [ %24, %20 ], [ null, %13 ]
  %27 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %16, i64 0, i32 1, i64 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %32 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %33 = sext i32 %28 to i64
  %34 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 %33
  br label %35

35:                                               ; preds = %25, %30
  %36 = phi %struct.TfLiteTensor* [ %34, %30 ], [ null, %25 ]
  tail call void @_ZN6tflite3ops7builtin15matrix_set_diag14FillDiagHelperEPK12TfLiteTensorS5_PS3_(%struct.TfLiteTensor* %26, %struct.TfLiteTensor* %36, %struct.TfLiteTensor* %14)
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin24Register_MATRIX_SET_DIAGEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin24Register_MATRIX_SET_DIAGEvE1r to %struct.TfLiteRegistration*)
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{!5}
!5 = distinct !{!5, !6}
!6 = distinct !{!6, !"LVerDomain"}
!7 = !{!8}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !3}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !10}
!14 = distinct !{!14, !3}
!15 = distinct !{!15, !16, !10}
!16 = !{!"llvm.loop.unroll.runtime.disable"}
