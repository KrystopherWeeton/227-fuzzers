; ModuleID = '../../net/quic/quic_connection_logger.cc'
source_filename = "../../net/quic/quic_connection_logger.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::QuicConnectionLogger" = type { %"class.quic::QuicConnectionDebugVisitor", %"class.quic::QuicPacketCreator::DebugDelegate", %"class.quic::QuicSession"*, %"class.quic::QuicPacketNumber", i64, i8, i64, %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber", i64, i64, i64, %"class.net::IPEndPoint", %"class.net::IPEndPoint", i32, i32, i32, i32, i32, i32, i32, %"class.std::__1::bitset", %"class.std::__1::bitset", i8*, %"class.std::__1::unique_ptr.421", %"class.net::QuicEventLogger" }
%"class.quic::QuicConnectionDebugVisitor" = type { %"class.quic::QuicSentPacketManager::DebugDelegate" }
%"class.quic::QuicSentPacketManager::DebugDelegate" = type { i32 (...)** }
%"class.quic::QuicPacketCreator::DebugDelegate" = type { i32 (...)** }
%"class.quic::QuicPacketNumber" = type { i64 }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.420", i8 }
%"struct.std::__1::array.420" = type { [16 x i8] }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [3 x i64] }
%"class.std::__1::unique_ptr.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.net::SocketPerformanceWatcher"* }
%"class.net::QuicEventLogger" = type <{ %"class.quic::QuicConnectionDebugVisitor", %"class.quic::QuicPacketCreator::DebugDelegate", %"class.quic::QuicSession"*, %"class.net::NetLogWithSource", %"class.net::IPEndPoint", [4 x i8] }>
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.427", %"class.std::__1::vector.434" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.427" = type { %"class.std::__1::__vector_base.428" }
%"class.std::__1::__vector_base.428" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.429" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.434" = type { %"class.std::__1::__vector_base.435" }
%"class.std::__1::__vector_base.435" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.436" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.quic::QuicSession" = type <{ %"class.quic::QuicConnectionVisitorInterface", %"class.quic::SessionNotifierInterface", %"class.quic::QuicStreamFrameDataProducer", %"class.quic::QuicStreamIdManager::DelegateInterface", %"class.quic::HandshakerDelegateInterface", %"class.quic::StreamDelegateInterface", %"class.quic::QuicControlFrameManager::DelegateInterface", %"class.absl::flat_hash_map", %"class.quic::QuicConnection"*, i8, [7 x i8], %"class.quic::QuicSession::Visitor"*, %"class.quic::QuicWriteBlockedList", %"class.std::__1::vector.296", %"class.quic::QuicConfig", %"class.absl::flat_hash_map.359", %"class.absl::flat_hash_map.368", %"class.quic::LegacyQuicStreamIdManager", %"class.quic::UberQuicStreamIdManager", i64, i64, i64, i64, %"struct.quic::QuicConnectionCloseFrame", %"class.quic::QuicFlowController", i32, i8, i8, [2 x i8], %"class.quic::QuicControlFrameManager", i32, [4 x i8], %"class.quic::QuicDatagramQueue", %"class.quiche::QuicheLinkedHashMap", %"class.std::__1::unique_ptr.155", %"class.std::__1::vector", %"class.absl::optional.415", i8, i8, i8, i8, [4 x i8] }>
%"class.quic::QuicConnectionVisitorInterface" = type { i32 (...)** }
%"class.quic::SessionNotifierInterface" = type { i32 (...)** }
%"class.quic::QuicStreamFrameDataProducer" = type { i32 (...)** }
%"class.quic::QuicStreamIdManager::DelegateInterface" = type { i32 (...)** }
%"class.quic::HandshakerDelegateInterface" = type { i32 (...)** }
%"class.quic::StreamDelegateInterface" = type { i32 (...)** }
%"class.quic::QuicControlFrameManager::DelegateInterface" = type { i32 (...)** }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type opaque
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.quic::QuicConnection" = type <{ %"class.quic::QuicFramerVisitorInterface", %"class.quic::QuicBlockedWriterInterface", %"class.quic::QuicPacketCreator::DelegateInterface", %"class.quic::QuicSentPacketManager::NetworkChangeVisitor", %"class.quic::QuicNetworkBlackholeDetector::Delegate", %"class.quic::QuicIdleNetworkDetector::Delegate", %"class.quic::QuicPathValidator::SendDelegate", %"class.quic::QuicConnectionIdManagerVisitorInterface", %"class.quic::QuicFramer", i8, i8, i8, i8, [4 x i8], %"class.quic::QuicConnectionHelperInterface"*, %"class.quic::QuicAlarmFactory"*, %"struct.quic::PerPacketOptions"*, %"class.quic::QuicPacketWriter"*, i8, i8, [6 x i8], %"class.quic::QuicClock"*, %"class.quic::QuicRandom"*, %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", i8, i8, [2 x i8], %"class.quic::QuicSocketAddress", [4 x i8], %"struct.quic::QuicConnection::PathState", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8], i64, i8*, i8, [7 x i8], %"struct.quic::QuicPacketHeader", i8, [7 x i8], %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicPacketNumber", %"class.std::__1::deque", %"class.quiche::QuicheCircularDeque", i64, i64, %"class.std::__1::unique_ptr.52", i32, [4 x i8], i64, %"struct.quic::QuicConnectionStats", %"class.quic::UberReceivedPacketManager", i32, i8, i8, [2 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i32, i32, %"class.quic::QuicOneBlockArena", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicConnectionVisitorInterface"*, %"class.quic::QuicConnectionDebugVisitor"*, %"class.quic::QuicPacketCreator", %"class.quic::QuicTime", %"class.quic::QuicSentPacketManager", i8, i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", [4 x i8], %"class.quic::QuicConnectionId", i8, [7 x i8], %"class.std::__1::vector", i64, i16, [6 x i8], i64, i64, i64, i8, i8, [6 x i8], i64, i64, i8, i8, i8, i8, %"struct.std::__1::array.26", i32, i8, i8, i8, [5 x i8], %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.186", %"class.quic::QuicTime::Delta", %"class.std::__1::unique_ptr.208", %"class.quiche::QuicheCircularDeque.214", %"class.quiche::QuicheCircularDeque.217", %"class.std::__1::vector.220", %"class.absl::optional.227", %"class.quic::QuicConnectionId", %"class.absl::optional.227", %"class.std::__1::list", %"class.quic::QuicCoalescedPacket", %"class.quic::QuicConnectionMtuDiscoverer", %"class.quic::QuicNetworkBlackholeDetector", %"class.quic::QuicIdleNetworkDetector", i8, i8, i8, i8, [4 x i8], %"class.std::__1::basic_string", i8, [7 x i8], i64, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicPathValidator", %"struct.quic::QuicConnection::PathState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8] }>
%"class.quic::QuicFramerVisitorInterface" = type { i32 (...)** }
%"class.quic::QuicBlockedWriterInterface" = type { i32 (...)** }
%"class.quic::QuicPacketCreator::DelegateInterface" = type { i32 (...)** }
%"class.quic::QuicSentPacketManager::NetworkChangeVisitor" = type { i32 (...)** }
%"class.quic::QuicNetworkBlackholeDetector::Delegate" = type { i32 (...)** }
%"class.quic::QuicIdleNetworkDetector::Delegate" = type { i32 (...)** }
%"class.quic::QuicPathValidator::SendDelegate" = type { i32 (...)** }
%"class.quic::QuicConnectionIdManagerVisitorInterface" = type { i32 (...)** }
%"class.quic::QuicFramer" = type { i32 (...)**, %"class.std::__1::basic_string", %"class.quic::QuicFramerVisitorInterface"*, i32, %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.quic::ParsedQuicVersion", %"class.std::__1::vector", [4 x %"class.std::__1::unique_ptr"], i8, i8, i8, [4 x %"class.std::__1::unique_ptr.18"], i8, i8, %"struct.std::__1::array", i8, %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", i8, i8, i8, %"class.quic::QuicPacketNumber", i64, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.quic::QuicPacketNumber", %"class.quic::QuicStreamFrameDataProducer"*, i8, i8, i8, i8, i8, i8, i64, i32, i32, i64 }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.quic::QuicEncrypter"* }
%"class.quic::QuicEncrypter" = type { %"class.quic::QuicCrypter" }
%"class.quic::QuicCrypter" = type { i32 (...)** }
%"struct.std::__1::array" = type { [32 x i8] }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.quic::QuicDecrypter"* }
%"class.quic::QuicDecrypter" = type { %"class.quic::QuicCrypter" }
%"class.quic::QuicConnectionHelperInterface" = type { i32 (...)** }
%"class.quic::QuicAlarmFactory" = type { i32 (...)** }
%"struct.quic::PerPacketOptions" = type <{ i32 (...)**, %"class.quic::QuicTime::Delta", i8, [7 x i8] }>
%"class.quic::QuicPacketWriter" = type { i32 (...)** }
%"class.quic::QuicClock" = type { i32 (...)**, i8, %"class.quic::QuicTime::Delta" }
%"class.quic::QuicRandom" = type { i32 (...)** }
%"struct.quic::QuicPacketHeader" = type { %"class.quic::QuicConnectionId", i8, %"class.quic::QuicConnectionId", i8, i8, i8, i8, i8, i8, %"struct.quic::ParsedQuicVersion", %"struct.std::__1::array"*, %"class.quic::QuicPacketNumber", i8, i8, %"struct.std::__1::array.26", i8, %"class.absl::string_view", i8, i64 }
%"class.absl::string_view" = type { i8*, i64 }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.45" }
%"struct.std::__1::__split_buffer" = type { %"struct.quic::QuicConnection::UndecryptablePacket"**, %"struct.quic::QuicConnection::UndecryptablePacket"**, %"struct.quic::QuicConnection::UndecryptablePacket"**, %"class.std::__1::__compressed_pair.40" }
%"struct.quic::QuicConnection::UndecryptablePacket" = type <{ %"class.std::__1::unique_ptr.34", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.quic::QuicEncryptedPacket"* }
%"class.quic::QuicEncryptedPacket" = type { %"class.quic::QuicData.base", [7 x i8] }
%"class.quic::QuicData.base" = type <{ i32 (...)**, i8*, i64, i8 }>
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.quic::QuicConnection::UndecryptablePacket"** }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { i64 }
%"class.quiche::QuicheCircularDeque" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> >, 3, std::__1::allocator<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> > > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> >, 3, std::__1::allocator<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> > > >::AllocatorAndData" = type { %"class.std::__1::unique_ptr.34"*, i64 }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.std::__1::vector.55"* }
%"class.std::__1::vector.55" = type opaque
%"struct.quic::QuicConnectionStats" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, float, i32, i32, i64, i64, i64, i64, %"class.quic::QuicTimeAccumulator", i32, i32, i8, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.quic::QuicBandwidth", i64, i64, i64, i64, i64, i32, %"class.quic::QuicTime", %"class.quic::QuicTime", i64, i64, i64, i8, i64, i64, i64, i8, i8, %"class.quic::QuicPacketNumber", i64, i64, i64, i32, i64, i64, i8, i8, i64, i64, i64, i64, i64, i64, i64, i64, %"class.absl::optional.59", %"class.absl::optional.59", %"class.absl::optional.59" }
%"class.quic::QuicTimeAccumulator" = type { %"class.quic::QuicTime::Delta", %"class.quic::QuicTime" }
%"class.quic::QuicBandwidth" = type { i64 }
%"class.absl::optional.59" = type { %"class.absl::optional_internal::optional_data.60" }
%"class.absl::optional_internal::optional_data.60" = type { %"class.absl::optional_internal::optional_data_base.61" }
%"class.absl::optional_internal::optional_data_base.61" = type { %"class.absl::optional_internal::optional_data_dtor_base.62" }
%"class.absl::optional_internal::optional_data_dtor_base.62" = type { i8, %union.anon.63 }
%union.anon.63 = type { %"struct.quic::QuicConnectionStats::TlsServerOperationStats" }
%"struct.quic::QuicConnectionStats::TlsServerOperationStats" = type { i8, %"class.quic::QuicTime::Delta" }
%"class.quic::UberReceivedPacketManager" = type <{ i32 (...)**, [3 x %"class.quic::QuicReceivedPacketManager"], i8, [7 x i8] }>
%"class.quic::QuicReceivedPacketManager" = type { i32 (...)**, %"class.quic::QuicPacketNumber", %"struct.quic::QuicAckFrame", i8, i64, %"class.quic::QuicTime", i8, %"class.quic::QuicPacketNumber", %"struct.quic::QuicConnectionStats"*, i64, i64, i64, float, i8, i8, i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %"class.quic::QuicTime", i8, %"class.quic::QuicPacketNumber", i64 }
%"struct.quic::QuicAckFrame" = type { %"class.quic::QuicPacketNumber", %"class.quic::QuicTime::Delta", %"class.std::__1::vector.68", %"class.quic::PacketNumberQueue", i8, i64, i64, i64 }
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.70" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.std::__1::pair"* }
%"class.quic::PacketNumberQueue" = type { %"class.quic::QuicIntervalSet" }
%"class.quic::QuicIntervalSet" = type { %"class.absl::btree_set" }
%"class.absl::btree_set" = type { %"class.absl::container_internal::btree_set_container" }
%"class.absl::container_internal::btree_set_container" = type { %"class.absl::container_internal::btree_container" }
%"class.absl::container_internal::btree_container" = type { %"class.absl::container_internal::btree" }
%"class.absl::container_internal::btree" = type { %"class.absl::container_internal::CompressedTuple.75", %"class.absl::container_internal::btree_node"*, i64 }
%"class.absl::container_internal::CompressedTuple.75" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.76" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.76" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.81" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.81" = type { %"class.absl::container_internal::btree_node"* }
%"class.absl::container_internal::btree_node" = type { i8 }
%"class.quic::QuicOneBlockArena" = type { [1056 x i8], i32, [4 x i8] }
%"class.quic::QuicArenaScopedPtr" = type { i8* }
%"class.quic::QuicPacketCreator" = type <{ %"class.quic::QuicPacketCreator::DelegateInterface"*, %"class.quic::QuicPacketCreator::DebugDelegate"*, %"class.quic::QuicFramer"*, %"class.quic::QuicRandom"*, i8, i8, %"struct.std::__1::array", [6 x i8], i64, i64, i8, [7 x i8], %"class.std::__1::vector.82", i64, %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.quic::SerializedPacket", %"class.std::__1::basic_string", i64, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicPacketNumber", i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"*, %"class.std::__1::__compressed_pair.110" }
%"struct.quic::QuicFrame" = type { %union.anon.84 }
%union.anon.84 = type { %"struct.quic::QuicStreamFrame" }
%"struct.quic::QuicStreamFrame" = type { i8, i8, i16, i32, i8*, i64 }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.quic::QuicFrame"* }
%"struct.quic::SerializedPacket" = type <{ i8*, i16, [6 x i8], %"class.std::__1::function", %"class.std::__1::vector.82", %"class.std::__1::vector.82", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, i8, i8, i8, i8, [3 x i8], %"class.quic::QuicPacketNumber", i8, i8, i8, i8, %"class.quic::QuicSocketAddress", [4 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i8*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.quic::QuicTime" = type { i64 }
%"class.quic::QuicSentPacketManager" = type <{ i32 (...)**, %"class.quic::QuicUnackedPacketMap", %"class.quic::QuicClock"*, %"class.quic::QuicRandom"*, %"struct.quic::QuicConnectionStats"*, %"class.quic::QuicSentPacketManager::DebugDelegate"*, %"class.quic::QuicSentPacketManager::NetworkChangeVisitor"*, i64, %"class.quic::RttStats", %"class.std::__1::unique_ptr.27", %"class.quic::LossDetectionInterface"*, %"class.quic::UberLossAlgorithm", %"class.quic::QuicPacketNumber", i64, i64, i64, i64, i64, i64, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.std::__1::vector.134", %"class.std::__1::vector.141", %"class.quic::QuicPacketNumber", i16, [6 x i8], %"class.quic::PacingSender", i8, [7 x i8], %"class.quic::QuicSustainedBandwidthRecorder", %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i8, [7 x i8], %"class.quiche::QuicheCircularDeque.148", %"struct.quic::QuicAckFrame", i8, [7 x i8], %"class.std::__1::reverse_iterator", i8, [7 x i8], i64, i64, i8, i8, i8, [5 x i8], i64, i32, [4 x i8], i64, i8, i8, i8, i8, float, i8, [3 x i8], float, i32, i8, [3 x i8] }>
%"class.quic::QuicUnackedPacketMap" = type <{ i8, [7 x i8], %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quiche::QuicheCircularDeque.115", %"class.quic::QuicPacketNumber", i64, [3 x i64], i64, %"class.quic::QuicTime", [3 x %"class.quic::QuicTime"], %"class.quic::QuicTime", %"struct.quic::QuicStreamFrame", %"class.quic::SessionNotifierInterface"*, i8, i8, [6 x i8] }>
%"class.quiche::QuicheCircularDeque.115" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" = type { %"struct.quic::QuicTransmissionInfo"*, i64 }
%"struct.quic::QuicTransmissionInfo" = type { %"class.std::__1::vector.82", %"class.quic::QuicTime", i16, i8, i8, i8, i8, i8, i8, %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber" }
%"class.quic::RttStats" = type <{ %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"struct.quic::RttStats::StandardDeviationCaculator", i8, [7 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", i8, [7 x i8] }>
%"struct.quic::RttStats::StandardDeviationCaculator" = type { i8, double }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.quic::SendAlgorithmInterface"* }
%"class.quic::SendAlgorithmInterface" = type { i32 (...)** }
%"class.quic::LossDetectionInterface" = type { i32 (...)** }
%"class.quic::UberLossAlgorithm" = type <{ %"class.quic::LossDetectionInterface", [3 x %"class.quic::GeneralLossAlgorithm"], %"class.std::__1::unique_ptr.118", %"struct.quic::LossDetectionParameters", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.quic::GeneralLossAlgorithm" = type <{ %"class.quic::LossDetectionInterface", %"class.quic::LossDetectionInterface"*, %"class.quic::QuicTime", i32, [4 x i8], i64, i8, i8, i8, [5 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.quic::LossDetectionTunerInterface"* }
%"class.quic::LossDetectionTunerInterface" = type { i32 (...)** }
%"struct.quic::LossDetectionParameters" = type { %"class.absl::optional.124", %"class.absl::optional.129" }
%"class.absl::optional.124" = type { %"class.absl::optional_internal::optional_data.125" }
%"class.absl::optional_internal::optional_data.125" = type { %"class.absl::optional_internal::optional_data_base.126" }
%"class.absl::optional_internal::optional_data_base.126" = type { %"class.absl::optional_internal::optional_data_dtor_base.127" }
%"class.absl::optional_internal::optional_data_dtor_base.127" = type { i8, %union.anon.128 }
%union.anon.128 = type { i32 }
%"class.absl::optional.129" = type { %"class.absl::optional_internal::optional_data.130" }
%"class.absl::optional_internal::optional_data.130" = type { %"class.absl::optional_internal::optional_data_base.131" }
%"class.absl::optional_internal::optional_data_base.131" = type { %"class.absl::optional_internal::optional_data_dtor_base.132" }
%"class.absl::optional_internal::optional_data_dtor_base.132" = type { i8, %union.anon.133 }
%union.anon.133 = type { i64 }
%"class.std::__1::vector.134" = type { %"class.std::__1::__vector_base.135" }
%"class.std::__1::__vector_base.135" = type { %"struct.quic::AckedPacket"*, %"struct.quic::AckedPacket"*, %"class.std::__1::__compressed_pair.136" }
%"struct.quic::AckedPacket" = type { %"class.quic::QuicPacketNumber", i16, %"class.quic::QuicTime" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"struct.quic::AckedPacket"* }
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { %"struct.quic::LostPacket"*, %"struct.quic::LostPacket"*, %"class.std::__1::__compressed_pair.143" }
%"struct.quic::LostPacket" = type <{ %"class.quic::QuicPacketNumber", i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"struct.quic::LostPacket"* }
%"class.quic::PacingSender" = type <{ %"class.quic::SendAlgorithmInterface"*, %"class.quic::QuicBandwidth", i32, [4 x i8], %"class.quic::QuicTime", i32, i32, %"class.quic::QuicTime::Delta", i8, [7 x i8] }>
%"class.quic::QuicSustainedBandwidthRecorder" = type { i8, i8, i8, %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth", i64, %"class.quic::QuicTime" }
%"class.quiche::QuicheCircularDeque.148" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::pair<quic::QuicTime::Delta, unsigned long>, 3, std::__1::allocator<std::__1::pair<quic::QuicTime::Delta, unsigned long> > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::pair<quic::QuicTime::Delta, unsigned long>, 3, std::__1::allocator<std::__1::pair<quic::QuicTime::Delta, unsigned long> > >::AllocatorAndData" = type { %"struct.std::__1::pair.151"*, i64 }
%"struct.std::__1::pair.151" = type opaque
%"class.std::__1::reverse_iterator" = type { %"struct.absl::container_internal::btree_iterator", %"struct.absl::container_internal::btree_iterator" }
%"struct.absl::container_internal::btree_iterator" = type <{ %"class.absl::container_internal::btree_node"*, i32, [4 x i8] }>
%"class.quic::QuicSocketAddress" = type <{ %"class.quic::QuicIpAddress", i16, [2 x i8] }>
%"class.quic::QuicIpAddress" = type { %union.anon.24, i32 }
%union.anon.24 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.25 }
%union.anon.25 = type { [4 x i32] }
%"struct.std::__1::array.26" = type { [16 x i8] }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.quic::QuicPeerIssuedConnectionIdManager"* }
%"class.quic::QuicPeerIssuedConnectionIdManager" = type { i64, %"class.quic::QuicClock"*, %"class.std::__1::unique_ptr.155", %"class.std::__1::vector.162", %"class.std::__1::vector.162", %"class.std::__1::vector.162", %"class.quic::QuicIntervalSet.169", i64 }
%"class.std::__1::vector.162" = type { %"class.std::__1::__vector_base.163" }
%"class.std::__1::__vector_base.163" = type { %"struct.quic::QuicConnectionIdData"*, %"struct.quic::QuicConnectionIdData"*, %"class.std::__1::__compressed_pair.164" }
%"struct.quic::QuicConnectionIdData" = type { %"class.quic::QuicConnectionId", i64, %"struct.std::__1::array.26" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.quic::QuicConnectionIdData"* }
%"class.quic::QuicIntervalSet.169" = type { %"class.absl::btree_set.170" }
%"class.absl::btree_set.170" = type { %"class.absl::container_internal::btree_set_container.171" }
%"class.absl::container_internal::btree_set_container.171" = type { %"class.absl::container_internal::btree_container.172" }
%"class.absl::container_internal::btree_container.172" = type { %"class.absl::container_internal::btree.173" }
%"class.absl::container_internal::btree.173" = type { %"class.absl::container_internal::CompressedTuple.174", %"class.absl::container_internal::btree_node.181"*, i64 }
%"class.absl::container_internal::CompressedTuple.174" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.175" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.175" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.180" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.180" = type { %"class.absl::container_internal::btree_node.181"* }
%"class.absl::container_internal::btree_node.181" = type { i8 }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.quic::QuicSelfIssuedConnectionIdManager"* }
%"class.quic::QuicSelfIssuedConnectionIdManager" = type { i32 (...)**, i64, %"class.quic::QuicClock"*, %"class.quic::QuicConnectionIdManagerVisitorInterface"*, %"class.std::__1::vector.189", %"class.std::__1::vector.197", %"class.std::__1::unique_ptr.155", %"class.quic::QuicConnectionId", i64, i64 }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"struct.std::__1::pair.191"*, %"struct.std::__1::pair.191"*, %"class.std::__1::__compressed_pair.192" }
%"struct.std::__1::pair.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"struct.std::__1::pair.191"* }
%"class.std::__1::vector.197" = type { %"class.std::__1::__vector_base.198" }
%"class.std::__1::__vector_base.198" = type { %"struct.std::__1::pair.199"*, %"struct.std::__1::pair.199"*, %"class.std::__1::__compressed_pair.200" }
%"struct.std::__1::pair.199" = type opaque
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"struct.std::__1::pair.199"* }
%"class.quic::QuicTime::Delta" = type { i64 }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"struct.std::__1::array.101"* }
%"struct.std::__1::array.101" = type { [8 x i8] }
%"class.quiche::QuicheCircularDeque.214" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::array<unsigned char, 8>, 3, std::__1::allocator<std::__1::array<unsigned char, 8> > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::array<unsigned char, 8>, 3, std::__1::allocator<std::__1::array<unsigned char, 8> > >::AllocatorAndData" = type { %"struct.std::__1::array.101"*, i64 }
%"class.quiche::QuicheCircularDeque.217" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicConnection::PendingPathChallenge, 3, std::__1::allocator<quic::QuicConnection::PendingPathChallenge> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicConnection::PendingPathChallenge, 3, std::__1::allocator<quic::QuicConnection::PendingPathChallenge> >::AllocatorAndData" = type { %"struct.quic::QuicConnection::PendingPathChallenge"*, i64 }
%"struct.quic::QuicConnection::PendingPathChallenge" = type { %"struct.std::__1::array.101", %"class.quic::QuicSocketAddress" }
%"class.std::__1::vector.220" = type { %"class.std::__1::__vector_base.221" }
%"class.std::__1::__vector_base.221" = type { %"class.quic::QuicConnectionId"*, %"class.quic::QuicConnectionId"*, %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.quic::QuicConnectionId"* }
%"class.quic::QuicConnectionId" = type { %union.anon.7 }
%union.anon.7 = type { %struct.anon.9 }
%struct.anon.9 = type { i8, i8* }
%"class.absl::optional.227" = type { %"class.absl::optional_internal::optional_data.228" }
%"class.absl::optional_internal::optional_data.228" = type { %"class.absl::optional_internal::optional_data_base.229" }
%"class.absl::optional_internal::optional_data_base.229" = type { %"class.absl::optional_internal::optional_data_dtor_base.230" }
%"class.absl::optional_internal::optional_data_dtor_base.230" = type { i8, %union.anon.231 }
%union.anon.231 = type { %"class.quic::QuicConnectionId" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.232" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.quic::QuicCoalescedPacket" = type { %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", i16, i16, [4 x %"class.std::__1::basic_string"], [4 x i8], %"class.std::__1::unique_ptr.236" }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.quic::SerializedPacket"* }
%"class.quic::QuicConnectionMtuDiscoverer" = type { i16, i16, i16, i16, i64, %"class.quic::QuicPacketNumber" }
%"class.quic::QuicNetworkBlackholeDetector" = type { %"class.quic::QuicNetworkBlackholeDetector::Delegate"*, %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicArenaScopedPtr" }
%"class.quic::QuicIdleNetworkDetector" = type <{ %"class.quic::QuicIdleNetworkDetector::Delegate"*, %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", %"class.quic::QuicArenaScopedPtr", i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.quic::QuicPathValidator" = type { %"class.std::__1::vector.242", %"class.quic::QuicPathValidator::SendDelegate"*, %"class.quic::QuicRandom"*, %"class.std::__1::unique_ptr.246", %"class.std::__1::unique_ptr.252", %"class.quic::QuicArenaScopedPtr", i64 }
%"class.std::__1::vector.242" = type { %"class.std::__1::__vector_base.243" }
%"class.std::__1::__vector_base.243" = type { %"struct.std::__1::array.101"*, %"struct.std::__1::array.101"*, %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.quic::QuicPathValidationContext"* }
%"class.quic::QuicPathValidationContext" = type { i32 (...)**, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.quic::QuicPathValidator::ResultDelegate"* }
%"class.quic::QuicPathValidator::ResultDelegate" = type { i32 (...)** }
%"struct.quic::QuicConnection::PathState" = type { %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.std::__1::array.26", i8, i8, i64, i64, %"class.std::__1::unique_ptr.27", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon.33 }
%union.anon.33 = type { %"class.quic::RttStats" }
%"class.quic::QuicSession::Visitor" = type { i32 (...)** }
%"class.quic::QuicWriteBlockedList" = type { %"class.http2::PriorityWriteScheduler", [8 x i32], [8 x i64], i8, %"class.quic::QuicWriteBlockedList::StaticStreamCollection" }
%"class.http2::PriorityWriteScheduler" = type <{ %"class.http2::WriteScheduler", i64, [8 x %"struct.http2::PriorityWriteScheduler<unsigned int>::PriorityInfo"], %"class.std::__1::unordered_map", i32, [4 x i8] }>
%"class.http2::WriteScheduler" = type { i32 (...)** }
%"struct.http2::PriorityWriteScheduler<unsigned int>::PriorityInfo" = type { %"class.std::__1::deque.258", i64 }
%"class.std::__1::deque.258" = type { %"class.std::__1::__deque_base.259" }
%"class.std::__1::__deque_base.259" = type { %"struct.std::__1::__split_buffer.260", i64, %"class.std::__1::__compressed_pair.266" }
%"struct.std::__1::__split_buffer.260" = type { %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"class.std::__1::__compressed_pair.261" }
%"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo" = type { i8, i32, i8 }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"*** }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.270", %"class.std::__1::__compressed_pair.278", %"class.std::__1::__compressed_pair.283", %"class.std::__1::__compressed_pair.286", [4 x i8] }>
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272", %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { float }
%"class.quic::QuicWriteBlockedList::StaticStreamCollection" = type { i64, %"class.std::__1::vector.289" }
%"class.std::__1::vector.289" = type { %"class.std::__1::__vector_base.290" }
%"class.std::__1::__vector_base.290" = type { %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"*, %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"*, %"class.std::__1::__compressed_pair.291" }
%"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair" = type { i32, i8 }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"* }
%"class.std::__1::vector.296" = type { %"class.std::__1::__vector_base.297" }
%"class.std::__1::__vector_base.297" = type { %"class.std::__1::unique_ptr.298"*, %"class.std::__1::unique_ptr.298"*, %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.quic::QuicStream"* }
%"class.quic::QuicStream" = type <{ %"class.quic::QuicStreamSequencer::StreamInterface", %"class.quic::QuicStreamSequencer", i32, [4 x i8], %"class.quic::QuicSession"*, %"class.quic::StreamDelegateInterface"*, %"class.spdy::StreamPrecedence", i64, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.absl::optional.308", %"class.quic::QuicFlowController"*, i8, [7 x i8], i64, i8, [7 x i8], %"class.quic::QuicStreamSendBuffer", i64, i8, [7 x i8], %"class.quic::QuicTime", i8, [3 x i8], i32, %"class.quic::QuicTime", i8, [7 x i8] }>
%"class.quic::QuicStreamSequencer::StreamInterface" = type { i32 (...)** }
%"class.quic::QuicStreamSequencer" = type <{ i32 (...)**, %"class.quic::QuicStreamSequencer::StreamInterface"*, %"class.quic::QuicStreamSequencerBuffer", i64, i64, i8, [3 x i8], i32, i32, i8, i8, [2 x i8] }>
%"class.quic::QuicStreamSequencerBuffer" = type { i64, i64, i64, i64, i8, %"class.std::__1::unique_ptr.301", i64, %"class.quic::QuicIntervalSet.169" }
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"struct.quic::QuicStreamSequencerBuffer::BufferBlock"** }
%"struct.quic::QuicStreamSequencerBuffer::BufferBlock" = type { [8192 x i8] }
%"class.spdy::StreamPrecedence" = type { i8, %union.anon.307 }
%union.anon.307 = type { %"struct.spdy::StreamPrecedence<unsigned int>::Http2StreamDependency" }
%"struct.spdy::StreamPrecedence<unsigned int>::Http2StreamDependency" = type { i32, i32, i8 }
%"class.absl::optional.308" = type { %"class.absl::optional_internal::optional_data.309" }
%"class.absl::optional_internal::optional_data.309" = type { %"class.absl::optional_internal::optional_data_base.310" }
%"class.absl::optional_internal::optional_data_base.310" = type { %"class.absl::optional_internal::optional_data_dtor_base.311" }
%"class.absl::optional_internal::optional_data_dtor_base.311" = type { i8, %union.anon.312 }
%union.anon.312 = type { %"class.quic::QuicFlowController" }
%"class.quic::QuicStreamSendBuffer" = type <{ i64, %"class.quic::QuicIntervalDeque", i64, %"class.quic::QuicBufferAllocator"*, i64, i64, %"class.quic::QuicIntervalSet.169", %"class.quic::QuicIntervalSet.169", i32, [4 x i8] }>
%"class.quic::QuicIntervalDeque" = type { %"class.quiche::QuicheCircularDeque.315", %"class.absl::optional.129" }
%"class.quiche::QuicheCircularDeque.315" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::BufferedSlice, 3, std::__1::allocator<quic::BufferedSlice> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::BufferedSlice, 3, std::__1::allocator<quic::BufferedSlice> >::AllocatorAndData" = type { %"struct.quic::BufferedSlice"*, i64 }
%"struct.quic::BufferedSlice" = type { %"class.quic::QuicMemSlice", i64 }
%"class.quic::QuicMemSlice" = type { %"class.quic::QuicMemSliceImpl" }
%"class.quic::QuicMemSliceImpl" = type { %class.scoped_refptr, i64 }
%class.scoped_refptr = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i8* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.104" }
%"struct.std::__1::__atomic_base.104" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.quic::QuicBufferAllocator" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.std::__1::unique_ptr.298"* }
%"class.quic::QuicConfig" = type { i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i64, %"class.quic::QuicFixedTagVector", %"class.quic::QuicFixedTagVector", %"class.quic::QuicTime::Delta", %"class.absl::optional.333", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint32", i8, i8, [6 x i8], %"class.quic::QuicFixedSocketAddress", %"class.quic::QuicFixedSocketAddress", %"class.absl::optional.338", %"class.quic::QuicFixedStatelessResetToken", %"class.std::__1::vector.326", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.absl::optional.227", %"class.absl::optional.227", %"class.absl::optional.227", %"class.absl::optional.227", %"class.absl::optional.227", %"class.absl::optional.227", %"class.absl::flat_hash_map.344", %"class.absl::flat_hash_map.344" }
%"class.quic::QuicFixedTagVector" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"class.std::__1::vector.326", %"class.std::__1::vector.326" }
%"class.quic::QuicConfigValue.base" = type <{ i32 (...)**, i32, i8 }>
%"class.absl::optional.333" = type { %"class.absl::optional_internal::optional_data.334" }
%"class.absl::optional_internal::optional_data.334" = type { %"class.absl::optional_internal::optional_data_base.335" }
%"class.absl::optional_internal::optional_data_base.335" = type { %"class.absl::optional_internal::optional_data_dtor_base.336" }
%"class.absl::optional_internal::optional_data_dtor_base.336" = type { i8, %union.anon.337 }
%union.anon.337 = type { %"class.quic::QuicTime::Delta" }
%"class.quic::QuicFixedSocketAddress" = type { %"class.quic::QuicConfigValue.base", i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.absl::optional.338" = type { %"class.absl::optional_internal::optional_data.339" }
%"class.absl::optional_internal::optional_data.339" = type { %"class.absl::optional_internal::optional_data_base.340" }
%"class.absl::optional_internal::optional_data_base.340" = type { %"class.absl::optional_internal::optional_data_dtor_base.341" }
%"class.absl::optional_internal::optional_data_dtor_base.341" = type { i8, %union.anon.342 }
%union.anon.342 = type { %"struct.std::__1::pair.343" }
%"struct.std::__1::pair.343" = type { %"class.quic::QuicConnectionId", %"struct.std::__1::array.26" }
%"class.quic::QuicFixedStatelessResetToken" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"struct.std::__1::array.26", %"struct.std::__1::array.26", i8 }
%"class.std::__1::vector.326" = type { %"class.std::__1::__vector_base.327" }
%"class.std::__1::__vector_base.327" = type { i32*, i32*, %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { i32* }
%"class.quic::QuicFixedUint32" = type { %"class.quic::QuicConfigValue.base", i8, i8, i32, i32 }
%"class.quic::QuicFixedUint62" = type { %"class.quic::QuicConfigValue.base", i8, i8, i64, i64 }
%"class.absl::flat_hash_map.344" = type { %"class.absl::container_internal::raw_hash_map.345" }
%"class.absl::container_internal::raw_hash_map.345" = type { %"class.absl::container_internal::raw_hash_set.346" }
%"class.absl::container_internal::raw_hash_set.346" = type { i8*, %"union.absl::container_internal::map_slot_type.347"*, i64, i64, %"class.absl::container_internal::CompressedTuple.348" }
%"union.absl::container_internal::map_slot_type.347" = type opaque
%"class.absl::container_internal::CompressedTuple.348" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::flat_hash_map.359" = type { %"class.absl::container_internal::raw_hash_map.360" }
%"class.absl::container_internal::raw_hash_map.360" = type { %"class.absl::container_internal::raw_hash_set.361" }
%"class.absl::container_internal::raw_hash_set.361" = type { i8*, %"union.absl::container_internal::map_slot_type.362"*, i64, i64, %"class.absl::container_internal::CompressedTuple.363" }
%"union.absl::container_internal::map_slot_type.362" = type opaque
%"class.absl::container_internal::CompressedTuple.363" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.364" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.364" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::flat_hash_map.368" = type { %"class.absl::container_internal::raw_hash_map.369" }
%"class.absl::container_internal::raw_hash_map.369" = type { %"class.absl::container_internal::raw_hash_set.370" }
%"class.absl::container_internal::raw_hash_set.370" = type { i8*, %"union.absl::container_internal::map_slot_type.371"*, i64, i64, %"class.absl::container_internal::CompressedTuple.372" }
%"union.absl::container_internal::map_slot_type.371" = type opaque
%"class.absl::container_internal::CompressedTuple.372" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.373" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.373" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.quic::LegacyQuicStreamIdManager" = type { i8, i32, i64, i64, i32, %"class.absl::flat_hash_set", i32, i64, i64 }
%"class.absl::flat_hash_set" = type { %"class.absl::container_internal::raw_hash_set.377" }
%"class.absl::container_internal::raw_hash_set.377" = type { i8*, i32*, i64, i64, %"class.absl::container_internal::CompressedTuple.378" }
%"class.absl::container_internal::CompressedTuple.378" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.379" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.379" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.quic::UberQuicStreamIdManager" = type { %"struct.quic::ParsedQuicVersion", %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager" }
%"class.quic::QuicStreamIdManager" = type <{ %"class.quic::QuicStreamIdManager::DelegateInterface"*, i8, i8, [2 x i8], %"struct.quic::ParsedQuicVersion", i32, i32, i32, i32, i32, i32, i32, %"class.absl::flat_hash_set", i32, [4 x i8] }>
%"struct.quic::QuicConnectionCloseFrame" = type { i32, i64, i32, %"class.std::__1::basic_string", i64 }
%"class.quic::QuicFlowController" = type { %"class.quic::QuicFlowControllerInterface", %"class.quic::QuicSession"*, %"class.quic::QuicConnection"*, i32, i8, i8, i64, i64, i64, i64, i64, i64, i64, i8, %"class.quic::QuicFlowControllerInterface"*, i64, %"class.quic::QuicTime" }
%"class.quic::QuicFlowControllerInterface" = type { i32 (...)** }
%"class.quic::QuicControlFrameManager" = type { %"class.quiche::QuicheCircularDeque.381", i32, i32, i32, %"class.quiche::QuicheLinkedHashMap", %"class.quic::QuicControlFrameManager::DelegateInterface"*, %"class.absl::flat_hash_map.397" }
%"class.quiche::QuicheCircularDeque.381" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicFrame, 3, std::__1::allocator<quic::QuicFrame> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicFrame, 3, std::__1::allocator<quic::QuicFrame> >::AllocatorAndData" = type { %"struct.quic::QuicFrame"*, i64 }
%"class.absl::flat_hash_map.397" = type { %"class.absl::container_internal::raw_hash_map.398" }
%"class.absl::container_internal::raw_hash_map.398" = type { %"class.absl::container_internal::raw_hash_set.399" }
%"class.absl::container_internal::raw_hash_set.399" = type { i8*, %"union.absl::container_internal::map_slot_type.400"*, i64, i64, %"class.absl::container_internal::CompressedTuple.401" }
%"union.absl::container_internal::map_slot_type.400" = type opaque
%"class.absl::container_internal::CompressedTuple.401" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.402" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.402" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.quic::QuicDatagramQueue" = type { %"class.quic::QuicSession"*, %"class.quic::QuicClock"*, %"class.quic::QuicTime::Delta", %"class.quiche::QuicheCircularDeque.406", %"class.std::__1::unique_ptr.409" }
%"class.quiche::QuicheCircularDeque.406" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicDatagramQueue::Datagram, 3, std::__1::allocator<quic::QuicDatagramQueue::Datagram> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicDatagramQueue::Datagram, 3, std::__1::allocator<quic::QuicDatagramQueue::Datagram> >::AllocatorAndData" = type { %"struct.quic::QuicDatagramQueue::Datagram"*, i64 }
%"struct.quic::QuicDatagramQueue::Datagram" = type { %"class.quic::QuicMemSlice", %"class.quic::QuicTime" }
%"class.std::__1::unique_ptr.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.quic::QuicDatagramQueue::Observer"* }
%"class.quic::QuicDatagramQueue::Observer" = type { i32 (...)** }
%"class.quiche::QuicheLinkedHashMap" = type { %"class.absl::node_hash_map", %"class.std::__1::list.390" }
%"class.absl::node_hash_map" = type { %"class.absl::container_internal::raw_hash_map.382" }
%"class.absl::container_internal::raw_hash_map.382" = type { %"class.absl::container_internal::raw_hash_set.383" }
%"class.absl::container_internal::raw_hash_set.383" = type { i8*, %"struct.std::__1::pair.384"**, i64, i64, %"class.absl::container_internal::CompressedTuple.385" }
%"struct.std::__1::pair.384" = type opaque
%"class.absl::container_internal::CompressedTuple.385" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.386" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.386" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::list.390" = type { %"class.std::__1::__list_imp.391" }
%"class.std::__1::__list_imp.391" = type { %"struct.std::__1::__list_node_base.392", %"class.std::__1::__compressed_pair.393" }
%"struct.std::__1::__list_node_base.392" = type { %"struct.std::__1::__list_node_base.392"*, %"struct.std::__1::__list_node_base.392"* }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.quic::QuicAlarm"* }
%"class.quic::QuicAlarm" = type { i32 (...)**, %"class.quic::QuicArenaScopedPtr.158", %"class.quic::QuicTime" }
%"class.quic::QuicArenaScopedPtr.158" = type { i8* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.quic::ParsedQuicVersion"* }
%"class.absl::optional.415" = type { %"class.absl::optional_internal::optional_data.416" }
%"class.absl::optional_internal::optional_data.416" = type { %"class.absl::optional_internal::optional_data_base.417" }
%"class.absl::optional_internal::optional_data_base.417" = type { %"class.absl::optional_internal::optional_data_dtor_base.418" }
%"class.absl::optional_internal::optional_data_dtor_base.418" = type { i8, %union.anon.419 }
%union.anon.419 = type { %"class.std::__1::basic_string" }
%"class.net::SocketPerformanceWatcher" = type { i32 (...)** }
%"class.base::TimeDelta" = type { i64 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.446", [4 x i8] }>
%"struct.std::__1::atomic.446" = type { %"struct.std::__1::__atomic_base.447" }
%"struct.std::__1::__atomic_base.447" = type { %"struct.std::__1::__atomic_base.448" }
%"struct.std::__1::__atomic_base.448" = type { %"struct.std::__1::__cxx_atomic_impl.449" }
%"struct.std::__1::__cxx_atomic_impl.449" = type { %"struct.std::__1::__cxx_atomic_base_impl.450" }
%"struct.std::__1::__cxx_atomic_base_impl.450" = type { i32 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.quic::QuicRstStreamFrame" = type { i32, i32, i32, i64, i64 }
%"struct.quic::QuicStopSendingFrame" = type { i32, i32, i32, i64 }
%struct.sockaddr_storage = type { i16, [118 x i8], i64 }
%struct.sockaddr = type { i16, [14 x i8] }
%"struct.quic::QuicPathChallengeFrame" = type { i32, %"struct.std::__1::array.101" }
%"struct.quic::QuicPathResponseFrame" = type { i32, %"struct.std::__1::array.101" }
%"struct.quic::QuicCryptoFrame" = type { i8, i16, i8*, i64 }
%"struct.quic::QuicStreamsBlockedFrame" = type <{ i8, [3 x i8], i32, i32, i8, [3 x i8] }>
%"struct.quic::QuicMaxStreamsFrame" = type <{ i8, [3 x i8], i32, i32, i8, [3 x i8] }>
%"struct.quic::QuicStopWaitingFrame" = type { i8, %"class.quic::QuicPacketNumber" }
%"struct.quic::QuicWindowUpdateFrame" = type { i32, i32, i64 }
%"struct.quic::QuicBlockedFrame" = type { i32, i32, i64 }
%"struct.quic::QuicGoAwayFrame" = type { i32, i32, i32, %"class.std::__1::basic_string" }
%"struct.quic::QuicPingFrame" = type { i8, i32 }
%"struct.quic::QuicPaddingFrame" = type { i8, i32 }
%"struct.quic::QuicNewConnectionIdFrame" = type { i32, %"class.quic::QuicConnectionId", i64, %"struct.std::__1::array.26", i64 }
%"struct.quic::QuicNewTokenFrame" = type { i32, %"class.std::__1::basic_string" }
%"struct.quic::QuicRetireConnectionIdFrame" = type { i32, i64 }
%"struct.quic::QuicMessageFrame" = type { i32, i8*, i16, %"class.std::__1::vector.102" }
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.103" }
%"class.std::__1::__vector_base.103" = type { %"class.quic::QuicMemSlice"*, %"class.quic::QuicMemSlice"*, %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.quic::QuicMemSlice"* }
%"struct.quic::QuicHandshakeDoneFrame" = type { i8, i32 }
%"struct.quic::QuicPublicResetPacket" = type { %"class.quic::QuicConnectionId", i64, %"class.quic::QuicSocketAddress", %"class.std::__1::basic_string" }
%"struct.quic::QuicVersionNegotiationPacket" = type { %"class.quic::QuicConnectionId", %"class.std::__1::vector" }
%"class.quic::CryptoHandshakeMessage" = type { i32, %"class.std::__1::map", i64, %"class.std::__1::unique_ptr.458" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.451", %"class.std::__1::__compressed_pair.456" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.quic::QuicData"* }
%"class.quic::QuicData" = type <{ i32 (...)**, i8*, i64, i8, [7 x i8] }>
%struct.in_addr = type { i32 }
%"class.quic::QuicSocketAddressCoder" = type { %"class.quic::QuicSocketAddress" }
%"class.net::CertVerifyResult" = type <{ %"class.base::SupportsUserData.base", [7 x i8], %class.scoped_refptr.475, i32, i8, i8, i8, i8, i8, [7 x i8], %"class.std::__1::vector.496", i8, i8, [2 x i8], %"struct.net::OCSPVerifyResult", [4 x i8], %"class.std::__1::vector.504", i32, [4 x i8] }>
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.464", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.464" = type { %"class.std::__1::__tree.465" }
%"class.std::__1::__tree.465" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.466", %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%class.scoped_refptr.475 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.476", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.485", %"class.std::__1::vector.489" }
%"class.base::RefCountedThreadSafe.476" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.477", %"class.std::__1::vector.477", %"class.std::__1::vector.477", %"class.std::__1::vector.477" }
%"class.std::__1::vector.477" = type { %"class.std::__1::__vector_base.478" }
%"class.std::__1::__vector_base.478" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"class.std::__1::basic_string"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.484" }
%"class.base::time_internal::TimeBase.484" = type { i64 }
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.489" = type { %"class.std::__1::__vector_base.490" }
%"class.std::__1::__vector_base.490" = type { %"class.std::__1::unique_ptr.485"*, %"class.std::__1::unique_ptr.485"*, %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"class.std::__1::unique_ptr.485"* }
%"class.std::__1::vector.496" = type { %"class.std::__1::__vector_base.497" }
%"class.std::__1::__vector_base.497" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.499" }
%"class.net::HashValue" = type { i32, %union.anon.498 }
%union.anon.498 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.500" }
%"struct.std::__1::__compressed_pair_elem.500" = type { %"class.net::HashValue"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.std::__1::vector.504" = type { %"class.std::__1::__vector_base.505" }
%"class.std::__1::__vector_base.505" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.508" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.506, i32, [4 x i8] }>
%class.scoped_refptr.506 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.507", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.507" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.quic::TransportParameters" = type { i8, i32, %"class.std::__1::vector.326", %"class.absl::optional.227", %"class.quic::TransportParameters::IntegerParameter", %"class.std::__1::vector.513", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", i8, %"class.std::__1::unique_ptr.520", %"class.quic::TransportParameters::IntegerParameter", %"class.absl::optional.227", %"class.absl::optional.227", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", %"class.absl::optional.526", %"class.absl::optional.415", i8, %"class.absl::flat_hash_map.344" }
%"class.std::__1::vector.513" = type { %"class.std::__1::__vector_base.514" }
%"class.std::__1::__vector_base.514" = type { i8*, i8*, %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { i8* }
%"class.std::__1::unique_ptr.520" = type { %"class.std::__1::__compressed_pair.521" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.522" }
%"struct.std::__1::__compressed_pair_elem.522" = type { %"struct.quic::TransportParameters::PreferredAddress"* }
%"struct.quic::TransportParameters::PreferredAddress" = type { %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", %"class.quic::QuicConnectionId", %"class.std::__1::vector.513" }
%"class.quic::TransportParameters::IntegerParameter" = type <{ i64, i64, i64, i64, i64, i8, [7 x i8] }>
%"class.absl::optional.526" = type { %"class.absl::optional_internal::optional_data.527" }
%"class.absl::optional_internal::optional_data.527" = type { %"class.absl::optional_internal::optional_data_base.528" }
%"class.absl::optional_internal::optional_data_base.528" = type { %"class.absl::optional_internal::optional_data_dtor_base.529" }
%"class.absl::optional_internal::optional_data_dtor_base.529" = type { i8, %union.anon.530 }
%union.anon.530 = type { %"class.std::__1::vector.326" }
%"class.quic::CachedNetworkParameters" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"struct.google::protobuf::internal::ArenaStringPtr", i32, i32, i32, i32, i64, i64 }
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic" }
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string"* }
%"struct.quic::QuicAckFrequencyFrame" = type { i32, i8, i64, i64, %"class.quic::QuicTime::Delta" }

$_ZN4quic21QuicSentPacketManager13DebugDelegate30OnSpuriousPacketRetransmissionENS_16TransmissionTypeEm = comdat any

$_ZN4quic21QuicSentPacketManager13DebugDelegate20OnApplicationLimitedEv = comdat any

$_ZN4quic21QuicSentPacketManager13DebugDelegate25OnAdjustNetworkParametersENS_13QuicBandwidthENS_8QuicTime5DeltaEmm = comdat any

$_ZN4quic21QuicSentPacketManager13DebugDelegate22OnOvershootingDetectedEv = comdat any

$_ZN4quic26QuicConnectionDebugVisitor21OnSendConnectionStateERKNS_23CachedNetworkParametersE = comdat any

$_ZN4quic26QuicConnectionDebugVisitor24OnReceiveConnectionStateERKNS_23CachedNetworkParametersE = comdat any

$_ZN4quic26QuicConnectionDebugVisitor15OnSetFromConfigERKNS_10QuicConfigE = comdat any

$_ZN4quic26QuicConnectionDebugVisitor19OnAckFrequencyFrameERKNS_21QuicAckFrequencyFrameE = comdat any

$_ZN4quic26QuicConnectionDebugVisitor23OnNPacketNumbersSkippedEmNS_8QuicTimeE = comdat any

$_ZN4quic26QuicConnectionDebugVisitor20OnZeroRttPacketAckedEv = comdat any

$_ZN4quic26QuicConnectionDebugVisitor19OnPeerAddressChangeENS_17AddressChangeTypeENS_8QuicTime5DeltaE = comdat any

$_ZN4quic26QuicConnectionDebugVisitor24OnPeerMigrationValidatedENS_8QuicTime5DeltaE = comdat any

@_ZTVN3net20QuicConnectionLoggerE = hidden unnamed_addr constant { [60 x i8*], [6 x i8*] } { [60 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::QuicConnectionLogger"*)* @_ZN3net20QuicConnectionLoggerD2Ev to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*)* @_ZN3net20QuicConnectionLoggerD0Ev to i8*), i8* bitcast (void (%"class.quic::QuicSentPacketManager::DebugDelegate"*, i8, i64)* @_ZN4quic21QuicSentPacketManager13DebugDelegate30OnSpuriousPacketRetransmissionENS_16TransmissionTypeEm to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, i64, i8, %"struct.quic::QuicAckFrame"*, i64, i64, i1, i64)* @_ZN3net20QuicConnectionLogger13OnIncomingAckEN4quic16QuicPacketNumberENS1_15EncryptionLevelERKNS1_12QuicAckFrameENS1_8QuicTimeES2_bS2_ to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, i64, i8, i8, i64)* @_ZN3net20QuicConnectionLogger12OnPacketLossEN4quic16QuicPacketNumberENS1_15EncryptionLevelENS1_16TransmissionTypeENS1_8QuicTimeE to i8*), i8* bitcast (void (%"class.quic::QuicSentPacketManager::DebugDelegate"*)* @_ZN4quic21QuicSentPacketManager13DebugDelegate20OnApplicationLimitedEv to i8*), i8* bitcast (void (%"class.quic::QuicSentPacketManager::DebugDelegate"*, i64, i64, i64, i64)* @_ZN4quic21QuicSentPacketManager13DebugDelegate25OnAdjustNetworkParametersENS_13QuicBandwidthENS_8QuicTime5DeltaEmm to i8*), i8* bitcast (void (%"class.quic::QuicSentPacketManager::DebugDelegate"*)* @_ZN4quic21QuicSentPacketManager13DebugDelegate22OnOvershootingDetectedEv to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, i64, i16, i1, i8, i8, %"class.std::__1::vector.82"*, %"class.std::__1::vector.82"*, i64)* @_ZN3net20QuicConnectionLogger12OnPacketSentEN4quic16QuicPacketNumberEtbNS1_16TransmissionTypeENS1_15EncryptionLevelERKNSt3__16vectorINS1_9QuicFrameENS5_9allocatorIS7_EEEESC_NS1_8QuicTimeE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"class.quic::QuicCoalescedPacket"*, i64)* @_ZN3net20QuicConnectionLogger21OnCoalescedPacketSentERKN4quic19QuicCoalescedPacketEm to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*)* @_ZN3net20QuicConnectionLogger10OnPingSentEv to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicEncryptedPacket"*)* @_ZN3net20QuicConnectionLogger16OnPacketReceivedERKN4quic17QuicSocketAddressES4_RKNS1_19QuicEncryptedPacketE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicPacketHeader"*)* @_ZN3net20QuicConnectionLogger23OnUnauthenticatedHeaderERKN4quic16QuicPacketHeaderE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"class.quic::QuicConnectionId"*)* @_ZN3net20QuicConnectionLogger23OnIncorrectConnectionIdEN4quic16QuicConnectionIdE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, i8, i1)* @_ZN3net20QuicConnectionLogger21OnUndecryptablePacketEN4quic15EncryptionLevelEb to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, i8)* @_ZN3net20QuicConnectionLogger40OnAttemptingToProcessUndecryptablePacketEN4quic15EncryptionLevelE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, i64)* @_ZN3net20QuicConnectionLogger17OnDuplicatePacketEN4quic16QuicPacketNumberE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::ParsedQuicVersion"*)* @_ZN3net20QuicConnectionLogger25OnProtocolVersionMismatchEN4quic17ParsedQuicVersionE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicPacketHeader"*, i64, i8)* @_ZN3net20QuicConnectionLogger14OnPacketHeaderERKN4quic16QuicPacketHeaderENS1_8QuicTimeENS1_15EncryptionLevelE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicStreamFrame"*)* @_ZN3net20QuicConnectionLogger13OnStreamFrameERKN4quic15QuicStreamFrameE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicCryptoFrame"*)* @_ZN3net20QuicConnectionLogger13OnCryptoFrameERKN4quic15QuicCryptoFrameE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicStopWaitingFrame"*)* @_ZN3net20QuicConnectionLogger18OnStopWaitingFrameERKN4quic20QuicStopWaitingFrameE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicPaddingFrame"*)* @_ZN3net20QuicConnectionLogger14OnPaddingFrameERKN4quic16QuicPaddingFrameE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicPingFrame"*, i64)* @_ZN3net20QuicConnectionLogger11OnPingFrameERKN4quic13QuicPingFrameENS1_8QuicTime5DeltaE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicGoAwayFrame"*)* @_ZN3net20QuicConnectionLogger13OnGoAwayFrameERKN4quic15QuicGoAwayFrameE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicRstStreamFrame"*)* @_ZN3net20QuicConnectionLogger16OnRstStreamFrameERKN4quic18QuicRstStreamFrameE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicConnectionCloseFrame"*)* @_ZN3net20QuicConnectionLogger22OnConnectionCloseFrameERKN4quic24QuicConnectionCloseFrameE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicWindowUpdateFrame"*, %"class.quic::QuicTime"*)* @_ZN3net20QuicConnectionLogger19OnWindowUpdateFrameERKN4quic21QuicWindowUpdateFrameERKNS1_8QuicTimeE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicBlockedFrame"*)* @_ZN3net20QuicConnectionLogger14OnBlockedFrameERKN4quic16QuicBlockedFrameE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicNewConnectionIdFrame"*)* @_ZN3net20QuicConnectionLogger22OnNewConnectionIdFrameERKN4quic24QuicNewConnectionIdFrameE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicRetireConnectionIdFrame"*)* @_ZN3net20QuicConnectionLogger25OnRetireConnectionIdFrameERKN4quic27QuicRetireConnectionIdFrameE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicNewTokenFrame"*)* @_ZN3net20QuicConnectionLogger15OnNewTokenFrameERKN4quic17QuicNewTokenFrameE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicMessageFrame"*)* @_ZN3net20QuicConnectionLogger14OnMessageFrameERKN4quic16QuicMessageFrameE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicHandshakeDoneFrame"*)* @_ZN3net20QuicConnectionLogger20OnHandshakeDoneFrameERKN4quic22QuicHandshakeDoneFrameE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicPublicResetPacket"*)* @_ZN3net20QuicConnectionLogger19OnPublicResetPacketERKN4quic21QuicPublicResetPacketE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicVersionNegotiationPacket"*)* @_ZN3net20QuicConnectionLogger26OnVersionNegotiationPacketERKN4quic28QuicVersionNegotiationPacketE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicConnectionCloseFrame"*, i32)* @_ZN3net20QuicConnectionLogger18OnConnectionClosedERKN4quic24QuicConnectionCloseFrameENS1_21ConnectionCloseSourceE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::ParsedQuicVersion"*)* @_ZN3net20QuicConnectionLogger30OnSuccessfulVersionNegotiationERKN4quic17ParsedQuicVersionE to i8*), i8* bitcast (void (%"class.quic::QuicConnectionDebugVisitor"*, %"class.quic::CachedNetworkParameters"*)* @_ZN4quic26QuicConnectionDebugVisitor21OnSendConnectionStateERKNS_23CachedNetworkParametersE to i8*), i8* bitcast (void (%"class.quic::QuicConnectionDebugVisitor"*, %"class.quic::CachedNetworkParameters"*)* @_ZN4quic26QuicConnectionDebugVisitor24OnReceiveConnectionStateERKNS_23CachedNetworkParametersE to i8*), i8* bitcast (void (%"class.quic::QuicConnectionDebugVisitor"*, %"class.quic::QuicConfig"*)* @_ZN4quic26QuicConnectionDebugVisitor15OnSetFromConfigERKNS_10QuicConfigE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, i64)* @_ZNK3net20QuicConnectionLogger12OnRttChangedEN4quic8QuicTime5DeltaE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicStopSendingFrame"*)* @_ZN3net20QuicConnectionLogger18OnStopSendingFrameERKN4quic20QuicStopSendingFrameE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicPathChallengeFrame"*)* @_ZN3net20QuicConnectionLogger20OnPathChallengeFrameERKN4quic22QuicPathChallengeFrameE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicPathResponseFrame"*)* @_ZN3net20QuicConnectionLogger19OnPathResponseFrameERKN4quic21QuicPathResponseFrameE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicStreamsBlockedFrame"*)* @_ZN3net20QuicConnectionLogger21OnStreamsBlockedFrameERKN4quic23QuicStreamsBlockedFrameE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicMaxStreamsFrame"*)* @_ZN3net20QuicConnectionLogger17OnMaxStreamsFrameERKN4quic19QuicMaxStreamsFrameE to i8*), i8* bitcast (void (%"class.quic::QuicConnectionDebugVisitor"*, %"struct.quic::QuicAckFrequencyFrame"*)* @_ZN4quic26QuicConnectionDebugVisitor19OnAckFrequencyFrameERKNS_21QuicAckFrequencyFrameE to i8*), i8* bitcast (void (%"class.quic::QuicConnectionDebugVisitor"*, i64, i64)* @_ZN4quic26QuicConnectionDebugVisitor23OnNPacketNumbersSkippedEmNS_8QuicTimeE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::TransportParameters"*)* @_ZN3net20QuicConnectionLogger25OnTransportParametersSentERKN4quic19TransportParametersE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::TransportParameters"*)* @_ZN3net20QuicConnectionLogger29OnTransportParametersReceivedERKN4quic19TransportParametersE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::TransportParameters"*)* @_ZN3net20QuicConnectionLogger28OnTransportParametersResumedERKN4quic19TransportParametersE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, i32)* @_ZN3net20QuicConnectionLogger17OnZeroRttRejectedEi to i8*), i8* bitcast (void (%"class.quic::QuicConnectionDebugVisitor"*)* @_ZN4quic26QuicConnectionDebugVisitor20OnZeroRttPacketAckedEv to i8*), i8* bitcast (void (%"class.quic::QuicConnectionDebugVisitor"*, i8, i64)* @_ZN4quic26QuicConnectionDebugVisitor19OnPeerAddressChangeENS_17AddressChangeTypeENS_8QuicTime5DeltaE to i8*), i8* bitcast (void (%"class.quic::QuicConnectionDebugVisitor"*, i64)* @_ZN4quic26QuicConnectionDebugVisitor24OnPeerMigrationValidatedENS_8QuicTime5DeltaE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicFrame"*)* @_ZN3net20QuicConnectionLogger20OnFrameAddedToPacketERKN4quic9QuicFrameE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicStreamFrame"*)* @_ZN3net20QuicConnectionLogger22OnStreamFrameCoalescedERKN4quic15QuicStreamFrameE to i8*)], [6 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.net::QuicConnectionLogger"*)* @_ZThn8_N3net20QuicConnectionLoggerD1Ev to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*)* @_ZThn8_N3net20QuicConnectionLoggerD0Ev to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicFrame"*)* @_ZThn8_N3net20QuicConnectionLogger20OnFrameAddedToPacketERKN4quic9QuicFrameE to i8*), i8* bitcast (void (%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicStreamFrame"*)* @_ZThn8_N3net20QuicConnectionLogger22OnStreamFrameCoalescedERKN4quic15QuicStreamFrameE to i8*)] }, align 8
@.str = private unnamed_addr constant [42 x i8] c"Net.QuicSession.OutOfOrderPacketsReceived\00", align 1
@.str.1 = private unnamed_addr constant [47 x i8] c"Net.QuicSession.OutOfOrderLargePacketsReceived\00", align 1
@.str.2 = private unnamed_addr constant [47 x i8] c"Net.QuicSession.IncorrectConnectionIDsReceived\00", align 1
@.str.3 = private unnamed_addr constant [45 x i8] c"Net.QuicSession.UndecryptablePacketsReceived\00", align 1
@.str.4 = private unnamed_addr constant [41 x i8] c"Net.QuicSession.DuplicatePacketsReceived\00", align 1
@.str.5 = private unnamed_addr constant [39 x i8] c"Net.QuicSession.BlockedFrames.Received\00", align 1
@.str.6 = private unnamed_addr constant [35 x i8] c"Net.QuicSession.BlockedFrames.Sent\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"Net.QuicSession.MinRTT\00", align 1
@.str.8 = private unnamed_addr constant [28 x i8] c"Net.QuicSession.SmoothedRTT\00", align 1
@.str.9 = private unnamed_addr constant [53 x i8] c"Net.QuicSession.StreamFrameDuplicatedShortConnection\00", align 1
@.str.10 = private unnamed_addr constant [52 x i8] c"Net.QuicSession.StreamFrameDuplicatedLongConnection\00", align 1
@.str.11 = private unnamed_addr constant [41 x i8] c"Net.QuicSession.RstStreamErrorCodeClient\00", align 1
@.str.12 = private unnamed_addr constant [45 x i8] c"Net.QuicSession.ConnectionFlowControlBlocked\00", align 1
@.str.13 = private unnamed_addr constant [41 x i8] c"Net.QuicSession.StreamFlowControlBlocked\00", align 1
@.str.14 = private unnamed_addr constant [43 x i8] c"Net.QuicSession.StopSendingErrorCodeClient\00", align 1
@.str.15 = private unnamed_addr constant [39 x i8] c"Net.QuicSession.SendPacketSize.Initial\00", align 1
@.str.16 = private unnamed_addr constant [42 x i8] c"Net.QuicSession.TooSmallInitialSentPacket\00", align 1
@.str.17 = private unnamed_addr constant [40 x i8] c"Net.QuicSession.SendPacketSize.Hanshake\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"Net.QuicSession.SendPacketSize.0RTT\00", align 1
@.str.19 = private unnamed_addr constant [45 x i8] c"Net.QuicSession.SendPacketSize.ForwardSecure\00", align 1
@.str.20 = private unnamed_addr constant [39 x i8] c"Net.QuicSession.ConnectionTypeFromSelf\00", align 1
@.str.21 = private unnamed_addr constant [34 x i8] c"Net.QuicSession.PacketGapReceived\00", align 1
@.str.22 = private unnamed_addr constant [38 x i8] c"Net.QuicSession.OutOfOrderGapReceived\00", align 1
@.str.23 = private unnamed_addr constant [42 x i8] c"Net.QuicSession.PacketGapReceivedNearPing\00", align 1
@.str.24 = private unnamed_addr constant [43 x i8] c"Net.QuicSession.StopSendingErrorCodeServer\00", align 1
@.str.25 = private unnamed_addr constant [41 x i8] c"Net.QuicSession.RstStreamErrorCodeServer\00", align 1
@.str.26 = private unnamed_addr constant [53 x i8] c"Net.QuicSession.GoAwayReceivedForConnectionMigration\00", align 1
@.str.27 = private unnamed_addr constant [39 x i8] c"Net.QuicSession.ConnectionTypeFromPeer\00", align 1
@.str.28 = private unnamed_addr constant [40 x i8] c"Net.QuicSession.SelfShloAddressMismatch\00", align 1
@.str.29 = private unnamed_addr constant [42 x i8] c"Net.QuicSession.6PacketsPatternsReceived_\00", align 1
@.str.30 = private unnamed_addr constant [32 x i8] c"Net.QuicSession.PacketLossRate_\00", align 1
@_ZTVN3net15QuicEventLoggerE = external unnamed_addr constant { [60 x i8*], [6 x i8*] }, align 8
@.str.31 = private unnamed_addr constant [44 x i8] c"Net.QuicSession.PublicResetAddressMismatch2\00", align 1
@_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_1.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_2.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_3.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_4.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_5.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_6.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_7.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_8.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_9.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net20QuicConnectionLogger20OnFrameAddedToPacketERKN4quic9QuicFrameEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net20QuicConnectionLogger20OnFrameAddedToPacketERKN4quic9QuicFrameEE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net20QuicConnectionLogger12OnPacketSentEN4quic16QuicPacketNumberEtbNS1_16TransmissionTypeENS1_15EncryptionLevelERKNSt3__16vectorINS1_9QuicFrameENS5_9allocatorIS7_EEEESC_NS1_8QuicTimeEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net20QuicConnectionLogger12OnPacketSentEN4quic16QuicPacketNumberEtbNS1_16TransmissionTypeENS1_15EncryptionLevelERKNSt3__16vectorINS1_9QuicFrameENS5_9allocatorIS7_EEEESC_NS1_8QuicTimeEE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net20QuicConnectionLogger12OnPacketSentEN4quic16QuicPacketNumberEtbNS1_16TransmissionTypeENS1_15EncryptionLevelERKNSt3__16vectorINS1_9QuicFrameENS5_9allocatorIS7_EEEESC_NS1_8QuicTimeEE24atomic_histogram_pointer_1.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net20QuicConnectionLogger12OnPacketSentEN4quic16QuicPacketNumberEtbNS1_16TransmissionTypeENS1_15EncryptionLevelERKNSt3__16vectorINS1_9QuicFrameENS5_9allocatorIS7_EEEESC_NS1_8QuicTimeEE24atomic_histogram_pointer_2.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net20QuicConnectionLogger12OnPacketSentEN4quic16QuicPacketNumberEtbNS1_16TransmissionTypeENS1_15EncryptionLevelERKNSt3__16vectorINS1_9QuicFrameENS5_9allocatorIS7_EEEESC_NS1_8QuicTimeEE24atomic_histogram_pointer_3.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net20QuicConnectionLogger16OnPacketReceivedERKN4quic17QuicSocketAddressES4_RKNS1_19QuicEncryptedPacketEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net20QuicConnectionLogger14OnPacketHeaderERKN4quic16QuicPacketHeaderENS1_8QuicTimeENS1_15EncryptionLevelEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net20QuicConnectionLogger14OnPacketHeaderERKN4quic16QuicPacketHeaderENS1_8QuicTimeENS1_15EncryptionLevelEE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net20QuicConnectionLogger14OnPacketHeaderERKN4quic16QuicPacketHeaderENS1_8QuicTimeENS1_15EncryptionLevelEE24atomic_histogram_pointer_1.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net20QuicConnectionLogger13OnGoAwayFrameERKN4quic15QuicGoAwayFrameEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net20QuicConnectionLogger32OnCryptoHandshakeMessageReceivedERKN4quic22CryptoHandshakeMessageEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net20QuicConnectionLogger32OnCryptoHandshakeMessageReceivedERKN4quic22CryptoHandshakeMessageEE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net12_GLOBAL__N_141UpdatePublicResetAddressMismatchHistogramERKNS_10IPEndPointES3_E24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN3net20QuicConnectionLoggerC1EPN4quic11QuicSessionEPKcNSt3__110unique_ptrINS_24SocketPerformanceWatcherENS6_14default_deleteIS8_EEEERKNS_16NetLogWithSourceE = hidden unnamed_addr alias void (%"class.net::QuicConnectionLogger"*, %"class.quic::QuicSession"*, i8*, %"class.net::SocketPerformanceWatcher"*, %"class.net::NetLogWithSource"*), void (%"class.net::QuicConnectionLogger"*, %"class.quic::QuicSession"*, i8*, %"class.net::SocketPerformanceWatcher"*, %"class.net::NetLogWithSource"*)* @_ZN3net20QuicConnectionLoggerC2EPN4quic11QuicSessionEPKcNSt3__110unique_ptrINS_24SocketPerformanceWatcherENS6_14default_deleteIS8_EEEERKNS_16NetLogWithSourceE
@_ZN3net20QuicConnectionLoggerD1Ev = hidden unnamed_addr alias void (%"class.net::QuicConnectionLogger"*), void (%"class.net::QuicConnectionLogger"*)* @_ZN3net20QuicConnectionLoggerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLoggerC2EPN4quic11QuicSessionEPKcNSt3__110unique_ptrINS_24SocketPerformanceWatcherENS6_14default_deleteIS8_EEEERKNS_16NetLogWithSourceE(%"class.net::QuicConnectionLogger"*, %"class.quic::QuicSession"*, i8*, %"class.net::SocketPerformanceWatcher"*, %"class.net::NetLogWithSource"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %6 = ptrtoint %"class.net::SocketPerformanceWatcher"* %3 to i64
  %7 = bitcast %"class.net::QuicConnectionLogger"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [60 x i8*], [6 x i8*] }, { [60 x i8*], [6 x i8*] }* @_ZTVN3net20QuicConnectionLoggerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [60 x i8*], [6 x i8*] }, { [60 x i8*], [6 x i8*] }* @_ZTVN3net20QuicConnectionLoggerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 8
  %8 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 2
  store %"class.quic::QuicSession"* %1, %"class.quic::QuicSession"** %8, align 8
  %9 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 3, i32 0
  %10 = bitcast i64* %9 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %10, align 8
  %11 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 5
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 6
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 7, i32 0
  %14 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 9
  %15 = bitcast i64* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 -1, i64 16, i1 false)
  %16 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 12
  %17 = bitcast i64* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false)
  tail call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* %16) #11
  %18 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 13
  tail call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* %18) #11
  %19 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 14
  %20 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 21
  %21 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 23
  %22 = bitcast i32* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 28, i1 false)
  %23 = bitcast %"class.std::__1::bitset"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 48, i1 false)
  store i8* %2, i8** %21, align 8
  %24 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 24
  %25 = bitcast %"class.std::__1::unique_ptr.421"* %24 to i64*
  store i64 %6, i64* %25, align 8
  %26 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLoggerC1EPN4quic11QuicSessionERKNS_16NetLogWithSourceE(%"class.net::QuicEventLogger"* %26, %"class.quic::QuicSession"* %1, %"class.net::NetLogWithSource"* dereferenceable(24) %4) #11
  ret void
}

declare void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"*) unnamed_addr #1

declare void @_ZN3net15QuicEventLoggerC1EPN4quic11QuicSessionERKNS_16NetLogWithSourceE(%"class.net::QuicEventLogger"*, %"class.quic::QuicSession"*, %"class.net::NetLogWithSource"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLoggerD2Ev(%"class.net::QuicConnectionLogger"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeDelta", align 8
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = bitcast %"class.net::QuicConnectionLogger"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [60 x i8*], [6 x i8*] }, { [60 x i8*], [6 x i8*] }* @_ZTVN3net20QuicConnectionLoggerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [60 x i8*], [6 x i8*] }, { [60 x i8*], [6 x i8*] }* @_ZTVN3net20QuicConnectionLoggerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = load atomic i64, i64* @_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %6 = inttoptr i64 %5 to %"class.base::HistogramBase"*
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 1, i32 1000000, i32 50, i32 1) #11
  %10 = ptrtoint %"class.base::HistogramBase"* %9 to i64
  store atomic i64 %10, i64* @_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %11

11:                                               ; preds = %1, %8
  %12 = phi %"class.base::HistogramBase"* [ %6, %1 ], [ %9, %8 ]
  %13 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 9
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i32
  %16 = bitcast %"class.base::HistogramBase"* %12 to void (%"class.base::HistogramBase"*, i32)***
  %17 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %17, i64 6
  %19 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %18, align 8
  tail call void %19(%"class.base::HistogramBase"* %12, i32 %15) #11
  %20 = load atomic i64, i64* @_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %21 = inttoptr i64 %20 to %"class.base::HistogramBase"*
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %11
  %24 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 1, i32 1000000, i32 50, i32 1) #11
  %25 = ptrtoint %"class.base::HistogramBase"* %24 to i64
  store atomic i64 %25, i64* @_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %26

26:                                               ; preds = %11, %23
  %27 = phi %"class.base::HistogramBase"* [ %21, %11 ], [ %24, %23 ]
  %28 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 10
  %29 = load i64, i64* %28, align 8
  %30 = trunc i64 %29 to i32
  %31 = bitcast %"class.base::HistogramBase"* %27 to void (%"class.base::HistogramBase"*, i32)***
  %32 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %32, i64 6
  %34 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %33, align 8
  tail call void %34(%"class.base::HistogramBase"* %27, i32 %30) #11
  %35 = load atomic i64, i64* @_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_1.0.0.0.0.0 acquire, align 8
  %36 = inttoptr i64 %35 to %"class.base::HistogramBase"*
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %26
  %39 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 1000000, i32 50, i32 1) #11
  %40 = ptrtoint %"class.base::HistogramBase"* %39 to i64
  store atomic i64 %40, i64* @_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_1.0.0.0.0.0 release, align 8
  br label %41

41:                                               ; preds = %26, %38
  %42 = phi %"class.base::HistogramBase"* [ %36, %26 ], [ %39, %38 ]
  %43 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 16
  %44 = load i32, i32* %43, align 8
  %45 = bitcast %"class.base::HistogramBase"* %42 to void (%"class.base::HistogramBase"*, i32)***
  %46 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %46, i64 6
  %48 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %47, align 8
  tail call void %48(%"class.base::HistogramBase"* %42, i32 %44) #11
  %49 = load atomic i64, i64* @_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_2.0.0.0.0.0 acquire, align 8
  %50 = inttoptr i64 %49 to %"class.base::HistogramBase"*
  %51 = icmp eq i64 %49, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %41
  %53 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0), i32 1, i32 1000000, i32 50, i32 1) #11
  %54 = ptrtoint %"class.base::HistogramBase"* %53 to i64
  store atomic i64 %54, i64* @_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_2.0.0.0.0.0 release, align 8
  br label %55

55:                                               ; preds = %41, %52
  %56 = phi %"class.base::HistogramBase"* [ %50, %41 ], [ %53, %52 ]
  %57 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 17
  %58 = load i32, i32* %57, align 4
  %59 = bitcast %"class.base::HistogramBase"* %56 to void (%"class.base::HistogramBase"*, i32)***
  %60 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %60, i64 6
  %62 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %61, align 8
  tail call void %62(%"class.base::HistogramBase"* %56, i32 %58) #11
  %63 = load atomic i64, i64* @_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_3.0.0.0.0.0 acquire, align 8
  %64 = inttoptr i64 %63 to %"class.base::HistogramBase"*
  %65 = icmp eq i64 %63, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %55
  %67 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4, i64 0, i64 0), i32 1, i32 1000000, i32 50, i32 1) #11
  %68 = ptrtoint %"class.base::HistogramBase"* %67 to i64
  store atomic i64 %68, i64* @_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_3.0.0.0.0.0 release, align 8
  br label %69

69:                                               ; preds = %55, %66
  %70 = phi %"class.base::HistogramBase"* [ %64, %55 ], [ %67, %66 ]
  %71 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 18
  %72 = load i32, i32* %71, align 8
  %73 = bitcast %"class.base::HistogramBase"* %70 to void (%"class.base::HistogramBase"*, i32)***
  %74 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %74, i64 6
  %76 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %75, align 8
  tail call void %76(%"class.base::HistogramBase"* %70, i32 %72) #11
  %77 = load atomic i64, i64* @_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_4.0.0.0.0.0 acquire, align 8
  %78 = inttoptr i64 %77 to %"class.base::HistogramBase"*
  %79 = icmp eq i64 %77, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %69
  %81 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5, i64 0, i64 0), i32 1, i32 1000000, i32 50, i32 1) #11
  %82 = ptrtoint %"class.base::HistogramBase"* %81 to i64
  store atomic i64 %82, i64* @_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_4.0.0.0.0.0 release, align 8
  br label %83

83:                                               ; preds = %69, %80
  %84 = phi %"class.base::HistogramBase"* [ %78, %69 ], [ %81, %80 ]
  %85 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 19
  %86 = load i32, i32* %85, align 4
  %87 = bitcast %"class.base::HistogramBase"* %84 to void (%"class.base::HistogramBase"*, i32)***
  %88 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %88, i64 6
  %90 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %89, align 8
  tail call void %90(%"class.base::HistogramBase"* %84, i32 %86) #11
  %91 = load atomic i64, i64* @_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_5.0.0.0.0.0 acquire, align 8
  %92 = inttoptr i64 %91 to %"class.base::HistogramBase"*
  %93 = icmp eq i64 %91, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %83
  %95 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6, i64 0, i64 0), i32 1, i32 1000000, i32 50, i32 1) #11
  %96 = ptrtoint %"class.base::HistogramBase"* %95 to i64
  store atomic i64 %96, i64* @_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_5.0.0.0.0.0 release, align 8
  br label %97

97:                                               ; preds = %83, %94
  %98 = phi %"class.base::HistogramBase"* [ %92, %83 ], [ %95, %94 ]
  %99 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 20
  %100 = load i32, i32* %99, align 8
  %101 = bitcast %"class.base::HistogramBase"* %98 to void (%"class.base::HistogramBase"*, i32)***
  %102 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %102, i64 6
  %104 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %103, align 8
  tail call void %104(%"class.base::HistogramBase"* %98, i32 %100) #11
  %105 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 2
  %106 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %105, align 8
  %107 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %106, i64 0, i32 8
  %108 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %107, align 8
  %109 = tail call dereferenceable(632) %"struct.quic::QuicConnectionStats"* @_ZN4quic14QuicConnection8GetStatsEv(%"class.quic::QuicConnection"* %108) #11
  %110 = load atomic i64, i64* @_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_6.0.0.0.0.0 acquire, align 8
  %111 = inttoptr i64 %110 to %"class.base::HistogramBase"*
  %112 = icmp eq i64 %110, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %97
  %114 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #11
  %115 = ptrtoint %"class.base::HistogramBase"* %114 to i64
  store atomic i64 %115, i64* @_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_6.0.0.0.0.0 release, align 8
  br label %116

116:                                              ; preds = %97, %113
  %117 = phi %"class.base::HistogramBase"* [ %111, %97 ], [ %114, %113 ]
  %118 = bitcast %"class.base::TimeDelta"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #11
  %119 = getelementptr inbounds %"struct.quic::QuicConnectionStats", %"struct.quic::QuicConnectionStats"* %109, i64 0, i32 32
  %120 = load i64, i64* %119, align 8
  %121 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  store i64 %120, i64* %121, align 8
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %117, %"class.base::TimeDelta"* nonnull dereferenceable(8) %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #11
  %122 = load atomic i64, i64* @_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_7.0.0.0.0.0 acquire, align 8
  %123 = inttoptr i64 %122 to %"class.base::HistogramBase"*
  %124 = icmp eq i64 %122, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %116
  %126 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #11
  %127 = ptrtoint %"class.base::HistogramBase"* %126 to i64
  store atomic i64 %127, i64* @_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_7.0.0.0.0.0 release, align 8
  br label %128

128:                                              ; preds = %116, %125
  %129 = phi %"class.base::HistogramBase"* [ %123, %116 ], [ %126, %125 ]
  %130 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #11
  %131 = getelementptr inbounds %"struct.quic::QuicConnectionStats", %"struct.quic::QuicConnectionStats"* %109, i64 0, i32 33
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %132, i64* %133, align 8
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %129, %"class.base::TimeDelta"* nonnull dereferenceable(8) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #11
  %134 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 14
  %135 = load i32, i32* %134, align 8
  %136 = icmp sgt i32 %135, 0
  br i1 %136, label %137, label %171

137:                                              ; preds = %128
  %138 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 15
  %139 = load i32, i32* %138, align 4
  %140 = mul nsw i32 %139, 1000
  %141 = sdiv i32 %140, %135
  %142 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 11
  %143 = load i64, i64* %142, align 8
  %144 = icmp ult i64 %143, 100
  br i1 %144, label %145, label %158

145:                                              ; preds = %137
  %146 = load atomic i64, i64* @_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_8.0.0.0.0.0 acquire, align 8
  %147 = inttoptr i64 %146 to %"class.base::HistogramBase"*
  %148 = icmp eq i64 %146, 0
  br i1 %148, label %149, label %152

149:                                              ; preds = %145
  %150 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i64 0, i64 0), i32 1, i32 1000, i32 75, i32 1) #11
  %151 = ptrtoint %"class.base::HistogramBase"* %150 to i64
  store atomic i64 %151, i64* @_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_8.0.0.0.0.0 release, align 8
  br label %152

152:                                              ; preds = %145, %149
  %153 = phi %"class.base::HistogramBase"* [ %147, %145 ], [ %150, %149 ]
  %154 = bitcast %"class.base::HistogramBase"* %153 to void (%"class.base::HistogramBase"*, i32)***
  %155 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %154, align 8
  %156 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %155, i64 6
  %157 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %156, align 8
  call void %157(%"class.base::HistogramBase"* %153, i32 %141) #11
  br label %171

158:                                              ; preds = %137
  %159 = load atomic i64, i64* @_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_9.0.0.0.0.0 acquire, align 8
  %160 = inttoptr i64 %159 to %"class.base::HistogramBase"*
  %161 = icmp eq i64 %159, 0
  br i1 %161, label %162, label %165

162:                                              ; preds = %158
  %163 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.10, i64 0, i64 0), i32 1, i32 1000, i32 75, i32 1) #11
  %164 = ptrtoint %"class.base::HistogramBase"* %163 to i64
  store atomic i64 %164, i64* @_ZZN3net20QuicConnectionLoggerD1EvE24atomic_histogram_pointer_9.0.0.0.0.0 release, align 8
  br label %165

165:                                              ; preds = %158, %162
  %166 = phi %"class.base::HistogramBase"* [ %160, %158 ], [ %163, %162 ]
  %167 = bitcast %"class.base::HistogramBase"* %166 to void (%"class.base::HistogramBase"*, i32)***
  %168 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %167, align 8
  %169 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %168, i64 6
  %170 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %169, align 8
  call void %170(%"class.base::HistogramBase"* %166, i32 %141) #11
  br label %171

171:                                              ; preds = %152, %165, %128
  call void @_ZNK3net20QuicConnectionLogger29RecordAggregatePacketLossRateEv(%"class.net::QuicConnectionLogger"* %0)
  %172 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %173 = bitcast i32 (...)*** %172 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [60 x i8*], [6 x i8*] }, { [60 x i8*], [6 x i8*] }* @_ZTVN3net15QuicEventLoggerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [60 x i8*], [6 x i8*] }, { [60 x i8*], [6 x i8*] }* @_ZTVN3net15QuicEventLoggerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %173, align 8
  %174 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25, i32 4
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %174) #11
  %175 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25, i32 3
  call void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"* %175) #11
  %176 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 24, i32 0, i32 0, i32 0
  %177 = load %"class.net::SocketPerformanceWatcher"*, %"class.net::SocketPerformanceWatcher"** %176, align 8
  store %"class.net::SocketPerformanceWatcher"* null, %"class.net::SocketPerformanceWatcher"** %176, align 8
  %178 = icmp eq %"class.net::SocketPerformanceWatcher"* %177, null
  br i1 %178, label %184, label %179

179:                                              ; preds = %171
  %180 = bitcast %"class.net::SocketPerformanceWatcher"* %177 to void (%"class.net::SocketPerformanceWatcher"*)***
  %181 = load void (%"class.net::SocketPerformanceWatcher"*)**, void (%"class.net::SocketPerformanceWatcher"*)*** %180, align 8
  %182 = getelementptr inbounds void (%"class.net::SocketPerformanceWatcher"*)*, void (%"class.net::SocketPerformanceWatcher"*)** %181, i64 1
  %183 = load void (%"class.net::SocketPerformanceWatcher"*)*, void (%"class.net::SocketPerformanceWatcher"*)** %182, align 8
  call void %183(%"class.net::SocketPerformanceWatcher"* nonnull %177) #11
  br label %184

184:                                              ; preds = %171, %179
  %185 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 13
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %185) #11
  %186 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 12
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %186) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare dereferenceable(632) %"struct.quic::QuicConnectionStats"* @_ZN4quic14QuicConnection8GetStatsEv(%"class.quic::QuicConnection"*) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net20QuicConnectionLogger29RecordAggregatePacketLossRateEv(%"class.net::QuicConnectionLogger"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 8
  %4 = tail call zeroext i1 @_ZNK4quic16QuicPacketNumber13IsInitializedEv(%"class.quic::QuicPacketNumber"* %3) #11
  br i1 %4, label %5, label %68

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 8, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 7, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = icmp ult i64 %10, 22
  br i1 %11, label %68, label %12

12:                                               ; preds = %5
  %13 = tail call i8* @_Znwm(i64 32) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %13, i8* align 1 getelementptr inbounds ([32 x i8], [32 x i8]* @.str.30, i64 0, i64 0), i64 31, i1 false) #11
  %14 = getelementptr inbounds i8, i8* %13, i64 31
  store i8 0, i8* %14, align 1
  %15 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 23
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #11, !alias.scope !2
  %21 = tail call i64 @strlen(i8* %17) #11, !noalias !2
  %22 = add i64 %21, 31
  %23 = icmp ugt i64 %22, -17
  br i1 %23, label %24, label %26

24:                                               ; preds = %12
  %25 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %25) #13
  unreachable

26:                                               ; preds = %12
  %27 = icmp ult i64 %22, 23
  br i1 %27, label %28, label %31

28:                                               ; preds = %26
  %29 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  store i8 31, i8* %30, align 1, !alias.scope !2
  br label %36

31:                                               ; preds = %26
  %32 = add i64 %21, 47
  %33 = and i64 %32, -16
  %34 = tail call i8* @_Znwm(i64 %33) #12
  store i8* %34, i8** %18, align 8, !alias.scope !2
  %35 = or i64 %33, -9223372036854775808
  store i64 %35, i64* %20, align 8, !alias.scope !2
  store i64 31, i64* %19, align 8, !alias.scope !2
  br label %36

36:                                               ; preds = %31, %28
  %37 = phi i8* [ %15, %28 ], [ %34, %31 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %37, i8* nonnull align 1 %13, i64 31, i1 false) #11
  %38 = getelementptr inbounds i8, i8* %37, i64 31
  store i8 0, i8* %38, align 1
  %39 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %2, i8* %17, i64 %21) #11
  %40 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiiji(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i32 1, i32 1000, i32 75, i32 1) #11
  %41 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %36
  %46 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %46) #12
  br label %47

47:                                               ; preds = %36, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  %48 = call zeroext i1 @_ZNK4quic16QuicPacketNumber13IsInitializedEv(%"class.quic::QuicPacketNumber"* %3) #11
  br i1 %48, label %49, label %62

49:                                               ; preds = %47
  %50 = load i64, i64* %6, align 8
  %51 = load i64, i64* %8, align 8
  %52 = add i64 %50, 1
  %53 = sub i64 %52, %51
  %54 = uitofp i64 %53 to float
  %55 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 11
  %56 = load i64, i64* %55, align 8
  %57 = uitofp i64 %56 to float
  %58 = fsub float %54, %57
  %59 = fdiv float %58, %54
  %60 = fmul float %59, 1.000000e+03
  %61 = fptosi float %60 to i32
  br label %62

62:                                               ; preds = %47, %49
  %63 = phi i32 [ %61, %49 ], [ 0, %47 ]
  %64 = bitcast %"class.base::HistogramBase"* %40 to void (%"class.base::HistogramBase"*, i32)***
  %65 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %65, i64 6
  %67 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %66, align 8
  call void %67(%"class.base::HistogramBase"* %40, i32 %63) #11
  call void @_ZdlPv(i8* nonnull %13) #12
  br label %68

68:                                               ; preds = %1, %5, %62
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N3net20QuicConnectionLoggerD1Ev(%"class.net::QuicConnectionLogger"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 -1, i32 25, i32 4, i32 0, i32 0, i32 1
  %3 = bitcast i8* %2 to %"class.net::QuicConnectionLogger"*
  tail call void @_ZN3net20QuicConnectionLoggerD2Ev(%"class.net::QuicConnectionLogger"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLoggerD0Ev(%"class.net::QuicConnectionLogger"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net20QuicConnectionLoggerD2Ev(%"class.net::QuicConnectionLogger"* %0) #11
  %2 = bitcast %"class.net::QuicConnectionLogger"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N3net20QuicConnectionLoggerD0Ev(%"class.net::QuicConnectionLogger"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 -1, i32 25, i32 4, i32 0, i32 0, i32 1
  %3 = bitcast i8* %2 to %"class.net::QuicConnectionLogger"*
  tail call void @_ZN3net20QuicConnectionLoggerD2Ev(%"class.net::QuicConnectionLogger"* %3) #11
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger20OnFrameAddedToPacketERKN4quic9QuicFrameE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicFrame"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8
  switch i8 %4, label %43 [
    i8 18, label %37
    i8 7, label %15
    i8 5, label %11
    i8 1, label %5
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %1, i64 0, i32 0, i32 0, i32 4
  %7 = bitcast i8** %6 to %"struct.quic::QuicRstStreamFrame"**
  %8 = load %"struct.quic::QuicRstStreamFrame"*, %"struct.quic::QuicRstStreamFrame"** %7, align 8
  %9 = getelementptr inbounds %"struct.quic::QuicRstStreamFrame", %"struct.quic::QuicRstStreamFrame"* %8, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  tail call void @_ZN4base18UmaHistogramSparseEPKci(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.11, i64 0, i64 0), i32 %10) #11
  br label %43

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 20
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %12, align 8
  br label %43

15:                                               ; preds = %2
  %16 = load atomic i64, i64* @_ZZN3net20QuicConnectionLogger20OnFrameAddedToPacketERKN4quic9QuicFrameEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %17 = inttoptr i64 %16 to %"class.base::HistogramBase"*
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %15
  %20 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.12, i64 0, i64 0), i32 1) #11
  %21 = ptrtoint %"class.base::HistogramBase"* %20 to i64
  store atomic i64 %21, i64* @_ZZN3net20QuicConnectionLogger20OnFrameAddedToPacketERKN4quic9QuicFrameEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi %"class.base::HistogramBase"* [ %17, %15 ], [ %20, %19 ]
  %24 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 2
  %25 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %24, align 8
  %26 = tail call zeroext i1 @_ZNK4quic11QuicSession30IsConnectionFlowControlBlockedEv(%"class.quic::QuicSession"* %25) #11
  tail call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %23, i1 zeroext %26) #11
  %27 = load atomic i64, i64* @_ZZN3net20QuicConnectionLogger20OnFrameAddedToPacketERKN4quic9QuicFrameEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %28 = inttoptr i64 %27 to %"class.base::HistogramBase"*
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %22
  %31 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.13, i64 0, i64 0), i32 1) #11
  %32 = ptrtoint %"class.base::HistogramBase"* %31 to i64
  store atomic i64 %32, i64* @_ZZN3net20QuicConnectionLogger20OnFrameAddedToPacketERKN4quic9QuicFrameEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %33

33:                                               ; preds = %22, %30
  %34 = phi %"class.base::HistogramBase"* [ %28, %22 ], [ %31, %30 ]
  %35 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %24, align 8
  %36 = tail call zeroext i1 @_ZN4quic11QuicSession26IsStreamFlowControlBlockedEv(%"class.quic::QuicSession"* %35) #11
  tail call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %34, i1 zeroext %36) #11
  br label %43

37:                                               ; preds = %2
  %38 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %1, i64 0, i32 0, i32 0, i32 4
  %39 = bitcast i8** %38 to %"struct.quic::QuicStopSendingFrame"**
  %40 = load %"struct.quic::QuicStopSendingFrame"*, %"struct.quic::QuicStopSendingFrame"** %39, align 8
  %41 = getelementptr inbounds %"struct.quic::QuicStopSendingFrame", %"struct.quic::QuicStopSendingFrame"* %40, i64 0, i32 2
  %42 = load i32, i32* %41, align 8
  tail call void @_ZN4base18UmaHistogramSparseEPKci(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.14, i64 0, i64 0), i32 %42) #11
  br label %43

43:                                               ; preds = %2, %37, %33, %11, %5
  %44 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger20OnFrameAddedToPacketERKN4quic9QuicFrameE(%"class.net::QuicEventLogger"* %44, %"struct.quic::QuicFrame"* dereferenceable(24) %1) #11
  ret void
}

declare void @_ZN4base18UmaHistogramSparseEPKci(i8*, i32) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8*, i32) local_unnamed_addr #1

declare void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"*, i1 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZNK4quic11QuicSession30IsConnectionFlowControlBlockedEv(%"class.quic::QuicSession"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4quic11QuicSession26IsStreamFlowControlBlockedEv(%"class.quic::QuicSession"*) local_unnamed_addr #1

declare void @_ZN3net15QuicEventLogger20OnFrameAddedToPacketERKN4quic9QuicFrameE(%"class.net::QuicEventLogger"*, %"struct.quic::QuicFrame"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N3net20QuicConnectionLogger20OnFrameAddedToPacketERKN4quic9QuicFrameE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicFrame"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 -1, i32 25, i32 4, i32 0, i32 0, i32 1
  %4 = bitcast i8* %3 to %"class.net::QuicConnectionLogger"*
  tail call void @_ZN3net20QuicConnectionLogger20OnFrameAddedToPacketERKN4quic9QuicFrameE(%"class.net::QuicConnectionLogger"* %4, %"struct.quic::QuicFrame"* dereferenceable(24) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger22OnStreamFrameCoalescedERKN4quic15QuicStreamFrameE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicStreamFrame"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger22OnStreamFrameCoalescedERKN4quic15QuicStreamFrameE(%"class.net::QuicEventLogger"* %3, %"struct.quic::QuicStreamFrame"* dereferenceable(24) %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger22OnStreamFrameCoalescedERKN4quic15QuicStreamFrameE(%"class.net::QuicEventLogger"*, %"struct.quic::QuicStreamFrame"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N3net20QuicConnectionLogger22OnStreamFrameCoalescedERKN4quic15QuicStreamFrameE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicStreamFrame"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 -1, i32 25, i32 4, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds i8, i8* %3, i64 232
  %5 = bitcast i8* %4 to %"class.net::QuicEventLogger"*
  tail call void @_ZN3net15QuicEventLogger22OnStreamFrameCoalescedERKN4quic15QuicStreamFrameE(%"class.net::QuicEventLogger"* %5, %"struct.quic::QuicStreamFrame"* dereferenceable(24) %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger12OnPacketSentEN4quic16QuicPacketNumberEtbNS1_16TransmissionTypeENS1_15EncryptionLevelERKNSt3__16vectorINS1_9QuicFrameENS5_9allocatorIS7_EEEESC_NS1_8QuicTimeE(%"class.net::QuicConnectionLogger"*, i64, i16 zeroext, i1 zeroext, i8 signext, i8 signext, %"class.std::__1::vector.82"* dereferenceable(24), %"class.std::__1::vector.82"* dereferenceable(24), i64) unnamed_addr #0 align 2 {
  %10 = sext i8 %5 to i32
  switch i32 %10, label %82 [
    i32 0, label %11
    i32 1, label %40
    i32 2, label %54
    i32 3, label %68
  ]

11:                                               ; preds = %9
  %12 = load atomic i64, i64* @_ZZN3net20QuicConnectionLogger12OnPacketSentEN4quic16QuicPacketNumberEtbNS1_16TransmissionTypeENS1_15EncryptionLevelERKNSt3__16vectorINS1_9QuicFrameENS5_9allocatorIS7_EEEESC_NS1_8QuicTimeEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %13 = inttoptr i64 %12 to %"class.base::HistogramBase"*
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %11
  %16 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.15, i64 0, i64 0), i32 1, i32 1452, i32 50, i32 1) #11
  %17 = ptrtoint %"class.base::HistogramBase"* %16 to i64
  store atomic i64 %17, i64* @_ZZN3net20QuicConnectionLogger12OnPacketSentEN4quic16QuicPacketNumberEtbNS1_16TransmissionTypeENS1_15EncryptionLevelERKNSt3__16vectorINS1_9QuicFrameENS5_9allocatorIS7_EEEESC_NS1_8QuicTimeEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %18

18:                                               ; preds = %11, %15
  %19 = phi %"class.base::HistogramBase"* [ %13, %11 ], [ %16, %15 ]
  %20 = zext i16 %2 to i32
  %21 = bitcast %"class.base::HistogramBase"* %19 to void (%"class.base::HistogramBase"*, i32)***
  %22 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %22, i64 6
  %24 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %23, align 8
  tail call void %24(%"class.base::HistogramBase"* %19, i32 %20) #11
  %25 = icmp ult i16 %2, 1200
  br i1 %25, label %26, label %82

26:                                               ; preds = %18
  %27 = load atomic i64, i64* @_ZZN3net20QuicConnectionLogger12OnPacketSentEN4quic16QuicPacketNumberEtbNS1_16TransmissionTypeENS1_15EncryptionLevelERKNSt3__16vectorINS1_9QuicFrameENS5_9allocatorIS7_EEEESC_NS1_8QuicTimeEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %28 = inttoptr i64 %27 to %"class.base::HistogramBase"*
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %26
  %31 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.16, i64 0, i64 0), i32 1, i32 1200, i32 50, i32 1) #11
  %32 = ptrtoint %"class.base::HistogramBase"* %31 to i64
  store atomic i64 %32, i64* @_ZZN3net20QuicConnectionLogger12OnPacketSentEN4quic16QuicPacketNumberEtbNS1_16TransmissionTypeENS1_15EncryptionLevelERKNSt3__16vectorINS1_9QuicFrameENS5_9allocatorIS7_EEEESC_NS1_8QuicTimeEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %33

33:                                               ; preds = %26, %30
  %34 = phi %"class.base::HistogramBase"* [ %28, %26 ], [ %31, %30 ]
  %35 = sub nsw i32 1200, %20
  %36 = bitcast %"class.base::HistogramBase"* %34 to void (%"class.base::HistogramBase"*, i32)***
  %37 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %37, i64 6
  %39 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %38, align 8
  tail call void %39(%"class.base::HistogramBase"* %34, i32 %35) #11
  br label %82

40:                                               ; preds = %9
  %41 = load atomic i64, i64* @_ZZN3net20QuicConnectionLogger12OnPacketSentEN4quic16QuicPacketNumberEtbNS1_16TransmissionTypeENS1_15EncryptionLevelERKNSt3__16vectorINS1_9QuicFrameENS5_9allocatorIS7_EEEESC_NS1_8QuicTimeEE24atomic_histogram_pointer_1.0.0.0.0.0 acquire, align 8
  %42 = inttoptr i64 %41 to %"class.base::HistogramBase"*
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %40
  %45 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.17, i64 0, i64 0), i32 1, i32 1452, i32 50, i32 1) #11
  %46 = ptrtoint %"class.base::HistogramBase"* %45 to i64
  store atomic i64 %46, i64* @_ZZN3net20QuicConnectionLogger12OnPacketSentEN4quic16QuicPacketNumberEtbNS1_16TransmissionTypeENS1_15EncryptionLevelERKNSt3__16vectorINS1_9QuicFrameENS5_9allocatorIS7_EEEESC_NS1_8QuicTimeEE24atomic_histogram_pointer_1.0.0.0.0.0 release, align 8
  br label %47

47:                                               ; preds = %40, %44
  %48 = phi %"class.base::HistogramBase"* [ %42, %40 ], [ %45, %44 ]
  %49 = zext i16 %2 to i32
  %50 = bitcast %"class.base::HistogramBase"* %48 to void (%"class.base::HistogramBase"*, i32)***
  %51 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %51, i64 6
  %53 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %52, align 8
  tail call void %53(%"class.base::HistogramBase"* %48, i32 %49) #11
  br label %82

54:                                               ; preds = %9
  %55 = load atomic i64, i64* @_ZZN3net20QuicConnectionLogger12OnPacketSentEN4quic16QuicPacketNumberEtbNS1_16TransmissionTypeENS1_15EncryptionLevelERKNSt3__16vectorINS1_9QuicFrameENS5_9allocatorIS7_EEEESC_NS1_8QuicTimeEE24atomic_histogram_pointer_2.0.0.0.0.0 acquire, align 8
  %56 = inttoptr i64 %55 to %"class.base::HistogramBase"*
  %57 = icmp eq i64 %55, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %54
  %59 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i64 0, i64 0), i32 1, i32 1452, i32 50, i32 1) #11
  %60 = ptrtoint %"class.base::HistogramBase"* %59 to i64
  store atomic i64 %60, i64* @_ZZN3net20QuicConnectionLogger12OnPacketSentEN4quic16QuicPacketNumberEtbNS1_16TransmissionTypeENS1_15EncryptionLevelERKNSt3__16vectorINS1_9QuicFrameENS5_9allocatorIS7_EEEESC_NS1_8QuicTimeEE24atomic_histogram_pointer_2.0.0.0.0.0 release, align 8
  br label %61

61:                                               ; preds = %54, %58
  %62 = phi %"class.base::HistogramBase"* [ %56, %54 ], [ %59, %58 ]
  %63 = zext i16 %2 to i32
  %64 = bitcast %"class.base::HistogramBase"* %62 to void (%"class.base::HistogramBase"*, i32)***
  %65 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %65, i64 6
  %67 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %66, align 8
  tail call void %67(%"class.base::HistogramBase"* %62, i32 %63) #11
  br label %82

68:                                               ; preds = %9
  %69 = load atomic i64, i64* @_ZZN3net20QuicConnectionLogger12OnPacketSentEN4quic16QuicPacketNumberEtbNS1_16TransmissionTypeENS1_15EncryptionLevelERKNSt3__16vectorINS1_9QuicFrameENS5_9allocatorIS7_EEEESC_NS1_8QuicTimeEE24atomic_histogram_pointer_3.0.0.0.0.0 acquire, align 8
  %70 = inttoptr i64 %69 to %"class.base::HistogramBase"*
  %71 = icmp eq i64 %69, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %68
  %73 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.19, i64 0, i64 0), i32 1, i32 1452, i32 50, i32 1) #11
  %74 = ptrtoint %"class.base::HistogramBase"* %73 to i64
  store atomic i64 %74, i64* @_ZZN3net20QuicConnectionLogger12OnPacketSentEN4quic16QuicPacketNumberEtbNS1_16TransmissionTypeENS1_15EncryptionLevelERKNSt3__16vectorINS1_9QuicFrameENS5_9allocatorIS7_EEEESC_NS1_8QuicTimeEE24atomic_histogram_pointer_3.0.0.0.0.0 release, align 8
  br label %75

75:                                               ; preds = %68, %72
  %76 = phi %"class.base::HistogramBase"* [ %70, %68 ], [ %73, %72 ]
  %77 = zext i16 %2 to i32
  %78 = bitcast %"class.base::HistogramBase"* %76 to void (%"class.base::HistogramBase"*, i32)***
  %79 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %79, i64 6
  %81 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %80, align 8
  tail call void %81(%"class.base::HistogramBase"* %76, i32 %77) #11
  br label %82

82:                                               ; preds = %18, %33, %9, %75, %61, %47
  %83 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger12OnPacketSentEN4quic16QuicPacketNumberEtbNS1_16TransmissionTypeENS1_15EncryptionLevelERKNSt3__16vectorINS1_9QuicFrameENS5_9allocatorIS7_EEEESC_NS1_8QuicTimeE(%"class.net::QuicEventLogger"* %83, i64 %1, i16 zeroext %2, i1 zeroext %3, i8 signext %4, i8 signext %5, %"class.std::__1::vector.82"* dereferenceable(24) %6, %"class.std::__1::vector.82"* dereferenceable(24) %7, i64 %8) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger12OnPacketSentEN4quic16QuicPacketNumberEtbNS1_16TransmissionTypeENS1_15EncryptionLevelERKNSt3__16vectorINS1_9QuicFrameENS5_9allocatorIS7_EEEESC_NS1_8QuicTimeE(%"class.net::QuicEventLogger"*, i64, i16 zeroext, i1 zeroext, i8 signext, i8 signext, %"class.std::__1::vector.82"* dereferenceable(24), %"class.std::__1::vector.82"* dereferenceable(24), i64) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger12OnPacketLossEN4quic16QuicPacketNumberENS1_15EncryptionLevelENS1_16TransmissionTypeENS1_8QuicTimeE(%"class.net::QuicConnectionLogger"*, i64, i8 signext, i8 signext, i64) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger12OnPacketLossEN4quic16QuicPacketNumberENS1_15EncryptionLevelENS1_16TransmissionTypeENS1_8QuicTimeE(%"class.net::QuicEventLogger"* %6, i64 %1, i8 signext %2, i8 signext %3, i64 %4) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger12OnPacketLossEN4quic16QuicPacketNumberENS1_15EncryptionLevelENS1_16TransmissionTypeENS1_8QuicTimeE(%"class.net::QuicEventLogger"*, i64, i8 signext, i8 signext, i64) unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net20QuicConnectionLogger10OnPingSentEv(%"class.net::QuicConnectionLogger"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 5
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger16OnPacketReceivedERKN4quic17QuicSocketAddressES4_RKNS1_19QuicEncryptedPacketE(%"class.net::QuicConnectionLogger"*, %"class.quic::QuicSocketAddress"* dereferenceable(24), %"class.quic::QuicSocketAddress"* dereferenceable(24), %"class.quic::QuicEncryptedPacket"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.net::IPEndPoint", align 2
  %6 = alloca %struct.sockaddr_storage, align 8
  %7 = alloca %"class.quic::QuicSocketAddress", align 8
  %8 = alloca %"class.net::IPEndPoint", align 2
  %9 = alloca %struct.sockaddr_storage, align 8
  %10 = alloca %"class.quic::QuicSocketAddress", align 8
  %11 = alloca %"class.net::IPEndPoint", align 2
  %12 = alloca %"class.net::IPEndPoint", align 2
  %13 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 13
  %14 = tail call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %13) #11
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %57

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %17) #11
  %18 = bitcast %"class.quic::QuicSocketAddress"* %1 to i8*
  %19 = bitcast %"class.quic::QuicSocketAddress"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 4 %18, i64 24, i1 false)
  %20 = call zeroext i1 @_ZNK4quic17QuicSocketAddress13IsInitializedEv(%"class.quic::QuicSocketAddress"* nonnull %10) #11, !noalias !5
  br i1 %20, label %22, label %21

21:                                               ; preds = %16
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* nonnull %11) #11
  br label %27

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %23) #11, !noalias !5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %23, i8 -86, i64 20, i1 false) #11, !noalias !5
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* nonnull %8) #11
  %24 = bitcast %struct.sockaddr_storage* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %24) #11, !noalias !5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 128, i1 false) #11, !noalias !5
  call void @_ZNK4quic17QuicSocketAddress15generic_addressEv(%struct.sockaddr_storage* nonnull sret %9, %"class.quic::QuicSocketAddress"* nonnull %10) #11
  %25 = bitcast %struct.sockaddr_storage* %9 to %struct.sockaddr*
  %26 = call zeroext i1 @_ZN3net10IPEndPoint12FromSockAddrEPK8sockaddrj(%"class.net::IPEndPoint"* nonnull %8, %struct.sockaddr* nonnull %25, i32 128) #11
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %11, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %24) #11, !noalias !5
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %23) #11, !noalias !5
  br label %27

27:                                               ; preds = %21, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19)
  %28 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* nonnull align 2 %17, i64 20, i1 false)
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %17) #11
  %29 = load atomic i64, i64* @_ZZN3net20QuicConnectionLogger16OnPacketReceivedERKN4quic17QuicSocketAddressES4_RKNS1_19QuicEncryptedPacketEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %30 = inttoptr i64 %29 to %"class.base::HistogramBase"*
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.20, i64 0, i64 0), i32 1, i32 2, i32 3, i32 1) #11
  %34 = ptrtoint %"class.base::HistogramBase"* %33 to i64
  store atomic i64 %34, i64* @_ZZN3net20QuicConnectionLogger16OnPacketReceivedERKN4quic17QuicSocketAddressES4_RKNS1_19QuicEncryptedPacketEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %35

35:                                               ; preds = %27, %32
  %36 = phi %"class.base::HistogramBase"* [ %30, %27 ], [ %33, %32 ]
  %37 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %37) #11
  %38 = bitcast %"class.quic::QuicSocketAddress"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 4 %18, i64 24, i1 false)
  %39 = call zeroext i1 @_ZNK4quic17QuicSocketAddress13IsInitializedEv(%"class.quic::QuicSocketAddress"* nonnull %7) #11, !noalias !8
  br i1 %39, label %41, label %40

40:                                               ; preds = %35
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* nonnull %12) #11
  br label %46

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %42) #11, !noalias !8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %42, i8 -86, i64 20, i1 false) #11, !noalias !8
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* nonnull %5) #11
  %43 = bitcast %struct.sockaddr_storage* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %43) #11, !noalias !8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 128, i1 false) #11, !noalias !8
  call void @_ZNK4quic17QuicSocketAddress15generic_addressEv(%struct.sockaddr_storage* nonnull sret %6, %"class.quic::QuicSocketAddress"* nonnull %7) #11
  %44 = bitcast %struct.sockaddr_storage* %6 to %struct.sockaddr*
  %45 = call zeroext i1 @_ZN3net10IPEndPoint12FromSockAddrEPK8sockaddrj(%"class.net::IPEndPoint"* nonnull %5, %struct.sockaddr* nonnull %44, i32 128) #11
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %12, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %43) #11, !noalias !8
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %42) #11, !noalias !8
  br label %46

46:                                               ; preds = %40, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38)
  %47 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %12, i64 0, i32 0
  %48 = call zeroext i1 @_ZNK3net9IPAddress16IsIPv4MappedIPv6Ev(%"class.net::IPAddress"* nonnull %47) #11
  br i1 %48, label %51, label %49

49:                                               ; preds = %46
  %50 = call i32 @_ZN3net16GetAddressFamilyERKNS_9IPAddressE(%"class.net::IPAddress"* nonnull dereferenceable(17) %47) #11
  br label %51

51:                                               ; preds = %46, %49
  %52 = phi i32 [ %50, %49 ], [ 1, %46 ]
  %53 = bitcast %"class.base::HistogramBase"* %36 to void (%"class.base::HistogramBase"*, i32)***
  %54 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %54, i64 6
  %56 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %55, align 8
  call void %56(%"class.base::HistogramBase"* %36, i32 %52) #11
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %37) #11
  br label %57

57:                                               ; preds = %51, %4
  %58 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 4
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 6
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"class.quic::QuicEncryptedPacket", %"class.quic::QuicEncryptedPacket"* %3, i64 0, i32 0, i32 2
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %58, align 8
  %63 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  call void @_ZN3net15QuicEventLogger16OnPacketReceivedERKN4quic17QuicSocketAddressES4_RKNS1_19QuicEncryptedPacketE(%"class.net::QuicEventLogger"* %63, %"class.quic::QuicSocketAddress"* dereferenceable(24) %1, %"class.quic::QuicSocketAddress"* dereferenceable(24) %2, %"class.quic::QuicEncryptedPacket"* dereferenceable(32) %3) #11
  ret void
}

declare i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"*) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN3net15QuicEventLogger16OnPacketReceivedERKN4quic17QuicSocketAddressES4_RKNS1_19QuicEncryptedPacketE(%"class.net::QuicEventLogger"*, %"class.quic::QuicSocketAddress"* dereferenceable(24), %"class.quic::QuicSocketAddress"* dereferenceable(24), %"class.quic::QuicEncryptedPacket"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger23OnUnauthenticatedHeaderERKN4quic16QuicPacketHeaderE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicPacketHeader"* dereferenceable(128)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger23OnUnauthenticatedHeaderERKN4quic16QuicPacketHeaderE(%"class.net::QuicEventLogger"* %3, %"struct.quic::QuicPacketHeader"* dereferenceable(128) %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger23OnUnauthenticatedHeaderERKN4quic16QuicPacketHeaderE(%"class.net::QuicEventLogger"*, %"struct.quic::QuicPacketHeader"* dereferenceable(128)) unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger23OnIncorrectConnectionIdEN4quic16QuicConnectionIdE(%"class.net::QuicConnectionLogger"* nocapture, %"class.quic::QuicConnectionId"* nocapture readnone) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 16
  %4 = load i32, i32* %3, align 8
  %5 = add nsw i32 %4, 1
  store i32 %5, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger21OnUndecryptablePacketEN4quic15EncryptionLevelEb(%"class.net::QuicConnectionLogger"*, i8 signext, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 17
  %5 = load i32, i32* %4, align 4
  %6 = add nsw i32 %5, 1
  store i32 %6, i32* %4, align 4
  %7 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger21OnUndecryptablePacketEN4quic15EncryptionLevelEb(%"class.net::QuicEventLogger"* %7, i8 signext %1, i1 zeroext %2) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger21OnUndecryptablePacketEN4quic15EncryptionLevelEb(%"class.net::QuicEventLogger"*, i8 signext, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger40OnAttemptingToProcessUndecryptablePacketEN4quic15EncryptionLevelE(%"class.net::QuicConnectionLogger"*, i8 signext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger40OnAttemptingToProcessUndecryptablePacketEN4quic15EncryptionLevelE(%"class.net::QuicEventLogger"* %3, i8 signext %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger40OnAttemptingToProcessUndecryptablePacketEN4quic15EncryptionLevelE(%"class.net::QuicEventLogger"*, i8 signext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger17OnDuplicatePacketEN4quic16QuicPacketNumberE(%"class.net::QuicConnectionLogger"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 18
  %4 = load i32, i32* %3, align 8
  %5 = add nsw i32 %4, 1
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger17OnDuplicatePacketEN4quic16QuicPacketNumberE(%"class.net::QuicEventLogger"* %6, i64 %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger17OnDuplicatePacketEN4quic16QuicPacketNumberE(%"class.net::QuicEventLogger"*, i64) unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger25OnProtocolVersionMismatchEN4quic17ParsedQuicVersionE(%"class.net::QuicConnectionLogger"* nocapture, %"struct.quic::ParsedQuicVersion"* nocapture) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger14OnPacketHeaderERKN4quic16QuicPacketHeaderENS1_8QuicTimeENS1_15EncryptionLevelE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicPacketHeader"* dereferenceable(128), i64, i8 signext) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 7
  %6 = tail call zeroext i1 @_ZNK4quic16QuicPacketNumber13IsInitializedEv(%"class.quic::QuicPacketNumber"* %5) #11
  %7 = getelementptr inbounds %"struct.quic::QuicPacketHeader", %"struct.quic::QuicPacketHeader"* %1, i64 0, i32 11
  br i1 %6, label %12, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber"* %7, i64 0, i32 0
  %10 = getelementptr inbounds %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber"* %5, i64 0, i32 0
  %11 = load i64, i64* %9, align 8
  store i64 %11, i64* %10, align 8
  br label %18

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"struct.quic::QuicPacketHeader", %"struct.quic::QuicPacketHeader"* %1, i64 0, i32 11, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 7, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp ult i64 %14, %16
  br i1 %17, label %139, label %18

18:                                               ; preds = %12, %8
  %19 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 11
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 8
  %23 = tail call zeroext i1 @_ZNK4quic16QuicPacketNumber13IsInitializedEv(%"class.quic::QuicPacketNumber"* %22) #11
  br i1 %23, label %28, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber"* %7, i64 0, i32 0
  %26 = getelementptr inbounds %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber"* %22, i64 0, i32 0
  %27 = load i64, i64* %25, align 8
  store i64 %27, i64* %26, align 8
  br label %57

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 8, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"struct.quic::QuicPacketHeader", %"struct.quic::QuicPacketHeader"* %1, i64 0, i32 11, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = icmp ugt i64 %32, %30
  br i1 %33, label %34, label %57

34:                                               ; preds = %28
  %35 = sub i64 %32, %30
  %36 = icmp ugt i64 %35, 1
  br i1 %36, label %37, label %54

37:                                               ; preds = %34
  %38 = load atomic i64, i64* @_ZZN3net20QuicConnectionLogger14OnPacketHeaderERKN4quic16QuicPacketHeaderENS1_8QuicTimeENS1_15EncryptionLevelEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %39 = inttoptr i64 %38 to %"class.base::HistogramBase"*
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %37
  %42 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.21, i64 0, i64 0), i32 1, i32 1000000, i32 50, i32 1) #11
  %43 = ptrtoint %"class.base::HistogramBase"* %42 to i64
  store atomic i64 %43, i64* @_ZZN3net20QuicConnectionLogger14OnPacketHeaderERKN4quic16QuicPacketHeaderENS1_8QuicTimeENS1_15EncryptionLevelEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %44

44:                                               ; preds = %37, %41
  %45 = phi %"class.base::HistogramBase"* [ %39, %37 ], [ %42, %41 ]
  %46 = trunc i64 %35 to i32
  %47 = add i32 %46, -1
  %48 = bitcast %"class.base::HistogramBase"* %45 to void (%"class.base::HistogramBase"*, i32)***
  %49 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %49, i64 6
  %51 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %50, align 8
  tail call void %51(%"class.base::HistogramBase"* %45, i32 %47) #11
  %52 = getelementptr inbounds %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber"* %7, i64 0, i32 0
  %53 = load i64, i64* %52, align 8
  br label %54

54:                                               ; preds = %44, %34
  %55 = phi i64 [ %53, %44 ], [ %32, %34 ]
  %56 = getelementptr inbounds %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber"* %22, i64 0, i32 0
  store i64 %55, i64* %56, align 8
  br label %57

57:                                               ; preds = %28, %54, %24
  %58 = getelementptr inbounds %"struct.quic::QuicPacketHeader", %"struct.quic::QuicPacketHeader"* %1, i64 0, i32 11, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 7, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = sub i64 %59, %61
  %63 = icmp ult i64 %62, 150
  br i1 %63, label %64, label %71

64:                                               ; preds = %57
  %65 = lshr i64 %62, 6
  %66 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 21, i32 0, i32 0, i64 %65
  %67 = and i64 %62, 63
  %68 = shl i64 1, %67
  %69 = load i64, i64* %66, align 8
  %70 = or i64 %69, %68
  store i64 %70, i64* %66, align 8
  br label %71

71:                                               ; preds = %64, %57
  %72 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 3
  %73 = tail call zeroext i1 @_ZNK4quic16QuicPacketNumber13IsInitializedEv(%"class.quic::QuicPacketNumber"* %72) #11
  br i1 %73, label %74, label %109

74:                                               ; preds = %71
  %75 = load i64, i64* %58, align 8
  %76 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 3, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = icmp ult i64 %75, %77
  br i1 %78, label %79, label %109

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 9
  %81 = load i64, i64* %80, align 8
  %82 = add i64 %81, 1
  store i64 %82, i64* %80, align 8
  %83 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 6
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 4
  %86 = load i64, i64* %85, align 8
  %87 = icmp ult i64 %84, %86
  br i1 %87, label %88, label %92

88:                                               ; preds = %79
  %89 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 10
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, 1
  store i64 %91, i64* %89, align 8
  br label %92

92:                                               ; preds = %88, %79
  %93 = load atomic i64, i64* @_ZZN3net20QuicConnectionLogger14OnPacketHeaderERKN4quic16QuicPacketHeaderENS1_8QuicTimeENS1_15EncryptionLevelEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %94 = inttoptr i64 %93 to %"class.base::HistogramBase"*
  %95 = icmp eq i64 %93, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %92
  %97 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.22, i64 0, i64 0), i32 1, i32 1000000, i32 50, i32 1) #11
  %98 = ptrtoint %"class.base::HistogramBase"* %97 to i64
  store atomic i64 %98, i64* @_ZZN3net20QuicConnectionLogger14OnPacketHeaderERKN4quic16QuicPacketHeaderENS1_8QuicTimeENS1_15EncryptionLevelEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %99

99:                                               ; preds = %92, %96
  %100 = phi %"class.base::HistogramBase"* [ %94, %92 ], [ %97, %96 ]
  %101 = load i64, i64* %76, align 8
  %102 = load i64, i64* %58, align 8
  %103 = sub i64 %101, %102
  %104 = trunc i64 %103 to i32
  %105 = bitcast %"class.base::HistogramBase"* %100 to void (%"class.base::HistogramBase"*, i32)***
  %106 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %106, i64 6
  %108 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %107, align 8
  tail call void %108(%"class.base::HistogramBase"* %100, i32 %104) #11
  br label %134

109:                                              ; preds = %74, %71
  %110 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 5
  %111 = load i8, i8* %110, align 8, !range !11
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %134, label %113

113:                                              ; preds = %109
  %114 = tail call zeroext i1 @_ZNK4quic16QuicPacketNumber13IsInitializedEv(%"class.quic::QuicPacketNumber"* %72) #11
  br i1 %114, label %115, label %133

115:                                              ; preds = %113
  %116 = load atomic i64, i64* @_ZZN3net20QuicConnectionLogger14OnPacketHeaderERKN4quic16QuicPacketHeaderENS1_8QuicTimeENS1_15EncryptionLevelEE24atomic_histogram_pointer_1.0.0.0.0.0 acquire, align 8
  %117 = inttoptr i64 %116 to %"class.base::HistogramBase"*
  %118 = icmp eq i64 %116, 0
  br i1 %118, label %119, label %122

119:                                              ; preds = %115
  %120 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23, i64 0, i64 0), i32 1, i32 1000000, i32 50, i32 1) #11
  %121 = ptrtoint %"class.base::HistogramBase"* %120 to i64
  store atomic i64 %121, i64* @_ZZN3net20QuicConnectionLogger14OnPacketHeaderERKN4quic16QuicPacketHeaderENS1_8QuicTimeENS1_15EncryptionLevelEE24atomic_histogram_pointer_1.0.0.0.0.0 release, align 8
  br label %122

122:                                              ; preds = %115, %119
  %123 = phi %"class.base::HistogramBase"* [ %117, %115 ], [ %120, %119 ]
  %124 = load i64, i64* %58, align 8
  %125 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 3, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = sub i64 %124, %126
  %128 = trunc i64 %127 to i32
  %129 = bitcast %"class.base::HistogramBase"* %123 to void (%"class.base::HistogramBase"*, i32)***
  %130 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %129, align 8
  %131 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %130, i64 6
  %132 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %131, align 8
  tail call void %132(%"class.base::HistogramBase"* %123, i32 %128) #11
  br label %133

133:                                              ; preds = %122, %113
  store i8 0, i8* %110, align 8
  br label %134

134:                                              ; preds = %109, %133, %99
  %135 = getelementptr inbounds %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber"* %7, i64 0, i32 0
  %136 = getelementptr inbounds %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber"* %72, i64 0, i32 0
  %137 = load i64, i64* %135, align 8
  store i64 %137, i64* %136, align 8
  %138 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger14OnPacketHeaderERKN4quic16QuicPacketHeaderENS1_8QuicTimeENS1_15EncryptionLevelE(%"class.net::QuicEventLogger"* %138, %"struct.quic::QuicPacketHeader"* dereferenceable(128) %1, i64 %2, i8 signext %3) #11
  br label %139

139:                                              ; preds = %12, %134
  ret void
}

declare zeroext i1 @_ZNK4quic16QuicPacketNumber13IsInitializedEv(%"class.quic::QuicPacketNumber"*) local_unnamed_addr #1

declare void @_ZN3net15QuicEventLogger14OnPacketHeaderERKN4quic16QuicPacketHeaderENS1_8QuicTimeENS1_15EncryptionLevelE(%"class.net::QuicEventLogger"*, %"struct.quic::QuicPacketHeader"* dereferenceable(128), i64, i8 signext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger13OnStreamFrameERKN4quic15QuicStreamFrameE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicStreamFrame"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger13OnStreamFrameERKN4quic15QuicStreamFrameE(%"class.net::QuicEventLogger"* %3, %"struct.quic::QuicStreamFrame"* dereferenceable(24) %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger13OnStreamFrameERKN4quic15QuicStreamFrameE(%"class.net::QuicEventLogger"*, %"struct.quic::QuicStreamFrame"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger20OnPathChallengeFrameERKN4quic22QuicPathChallengeFrameE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicPathChallengeFrame"* dereferenceable(12)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger20OnPathChallengeFrameERKN4quic22QuicPathChallengeFrameE(%"class.net::QuicEventLogger"* %3, %"struct.quic::QuicPathChallengeFrame"* dereferenceable(12) %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger20OnPathChallengeFrameERKN4quic22QuicPathChallengeFrameE(%"class.net::QuicEventLogger"*, %"struct.quic::QuicPathChallengeFrame"* dereferenceable(12)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger19OnPathResponseFrameERKN4quic21QuicPathResponseFrameE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicPathResponseFrame"* dereferenceable(12)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger19OnPathResponseFrameERKN4quic21QuicPathResponseFrameE(%"class.net::QuicEventLogger"* %3, %"struct.quic::QuicPathResponseFrame"* dereferenceable(12) %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger19OnPathResponseFrameERKN4quic21QuicPathResponseFrameE(%"class.net::QuicEventLogger"*, %"struct.quic::QuicPathResponseFrame"* dereferenceable(12)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger13OnCryptoFrameERKN4quic15QuicCryptoFrameE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicCryptoFrame"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger13OnCryptoFrameERKN4quic15QuicCryptoFrameE(%"class.net::QuicEventLogger"* %3, %"struct.quic::QuicCryptoFrame"* dereferenceable(24) %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger13OnCryptoFrameERKN4quic15QuicCryptoFrameE(%"class.net::QuicEventLogger"*, %"struct.quic::QuicCryptoFrame"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger18OnStopSendingFrameERKN4quic20QuicStopSendingFrameE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicStopSendingFrame"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.quic::QuicStopSendingFrame", %"struct.quic::QuicStopSendingFrame"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  tail call void @_ZN4base18UmaHistogramSparseEPKci(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.24, i64 0, i64 0), i32 %4) #11
  %5 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger18OnStopSendingFrameERKN4quic20QuicStopSendingFrameE(%"class.net::QuicEventLogger"* %5, %"struct.quic::QuicStopSendingFrame"* dereferenceable(24) %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger18OnStopSendingFrameERKN4quic20QuicStopSendingFrameE(%"class.net::QuicEventLogger"*, %"struct.quic::QuicStopSendingFrame"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger21OnStreamsBlockedFrameERKN4quic23QuicStreamsBlockedFrameE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicStreamsBlockedFrame"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger21OnStreamsBlockedFrameERKN4quic23QuicStreamsBlockedFrameE(%"class.net::QuicEventLogger"* %3, %"struct.quic::QuicStreamsBlockedFrame"* dereferenceable(16) %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger21OnStreamsBlockedFrameERKN4quic23QuicStreamsBlockedFrameE(%"class.net::QuicEventLogger"*, %"struct.quic::QuicStreamsBlockedFrame"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger17OnMaxStreamsFrameERKN4quic19QuicMaxStreamsFrameE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicMaxStreamsFrame"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger17OnMaxStreamsFrameERKN4quic19QuicMaxStreamsFrameE(%"class.net::QuicEventLogger"* %3, %"struct.quic::QuicMaxStreamsFrame"* dereferenceable(16) %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger17OnMaxStreamsFrameERKN4quic19QuicMaxStreamsFrameE(%"class.net::QuicEventLogger"*, %"struct.quic::QuicMaxStreamsFrame"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger13OnIncomingAckEN4quic16QuicPacketNumberENS1_15EncryptionLevelERKNS1_12QuicAckFrameENS1_8QuicTimeES2_bS2_(%"class.net::QuicConnectionLogger"*, i64, i8 signext, %"struct.quic::QuicAckFrame"* dereferenceable(96), i64, i64, i1 zeroext, i64) unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 3, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 7, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = icmp ult i64 %13, 150
  br i1 %14, label %15, label %26

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, 100
  br i1 %18, label %19, label %26

19:                                               ; preds = %15
  %20 = lshr i64 %13, 6
  %21 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 22, i32 0, i32 0, i64 %20
  %22 = and i64 %13, 63
  %23 = shl i64 1, %22
  %24 = load i64, i64* %21, align 8
  %25 = or i64 %24, %23
  store i64 %25, i64* %21, align 8
  br label %26

26:                                               ; preds = %19, %15, %8
  %27 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger13OnIncomingAckEN4quic16QuicPacketNumberENS1_15EncryptionLevelERKNS1_12QuicAckFrameENS1_8QuicTimeES2_bS2_(%"class.net::QuicEventLogger"* %27, i64 %1, i8 signext %2, %"struct.quic::QuicAckFrame"* dereferenceable(96) %3, i64 %4, i64 %5, i1 zeroext %6, i64 %7) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger13OnIncomingAckEN4quic16QuicPacketNumberENS1_15EncryptionLevelERKNS1_12QuicAckFrameENS1_8QuicTimeES2_bS2_(%"class.net::QuicEventLogger"*, i64, i8 signext, %"struct.quic::QuicAckFrame"* dereferenceable(96), i64, i64, i1 zeroext, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger18OnStopWaitingFrameERKN4quic20QuicStopWaitingFrameE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicStopWaitingFrame"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger18OnStopWaitingFrameERKN4quic20QuicStopWaitingFrameE(%"class.net::QuicEventLogger"* %3, %"struct.quic::QuicStopWaitingFrame"* dereferenceable(16) %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger18OnStopWaitingFrameERKN4quic20QuicStopWaitingFrameE(%"class.net::QuicEventLogger"*, %"struct.quic::QuicStopWaitingFrame"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger16OnRstStreamFrameERKN4quic18QuicRstStreamFrameE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicRstStreamFrame"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.quic::QuicRstStreamFrame", %"struct.quic::QuicRstStreamFrame"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  tail call void @_ZN4base18UmaHistogramSparseEPKci(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.25, i64 0, i64 0), i32 %4) #11
  %5 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger16OnRstStreamFrameERKN4quic18QuicRstStreamFrameE(%"class.net::QuicEventLogger"* %5, %"struct.quic::QuicRstStreamFrame"* dereferenceable(32) %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger16OnRstStreamFrameERKN4quic18QuicRstStreamFrameE(%"class.net::QuicEventLogger"*, %"struct.quic::QuicRstStreamFrame"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger22OnConnectionCloseFrameERKN4quic24QuicConnectionCloseFrameE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicConnectionCloseFrame"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger22OnConnectionCloseFrameERKN4quic24QuicConnectionCloseFrameE(%"class.net::QuicEventLogger"* %3, %"struct.quic::QuicConnectionCloseFrame"* dereferenceable(56) %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger22OnConnectionCloseFrameERKN4quic24QuicConnectionCloseFrameE(%"class.net::QuicEventLogger"*, %"struct.quic::QuicConnectionCloseFrame"* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger19OnWindowUpdateFrameERKN4quic21QuicWindowUpdateFrameERKNS1_8QuicTimeE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicWindowUpdateFrame"* dereferenceable(16), %"class.quic::QuicTime"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger19OnWindowUpdateFrameERKN4quic21QuicWindowUpdateFrameERKNS1_8QuicTimeE(%"class.net::QuicEventLogger"* %4, %"struct.quic::QuicWindowUpdateFrame"* dereferenceable(16) %1, %"class.quic::QuicTime"* dereferenceable(8) %2) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger19OnWindowUpdateFrameERKN4quic21QuicWindowUpdateFrameERKNS1_8QuicTimeE(%"class.net::QuicEventLogger"*, %"struct.quic::QuicWindowUpdateFrame"* dereferenceable(16), %"class.quic::QuicTime"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger14OnBlockedFrameERKN4quic16QuicBlockedFrameE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicBlockedFrame"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 19
  %4 = load i32, i32* %3, align 4
  %5 = add nsw i32 %4, 1
  store i32 %5, i32* %3, align 4
  %6 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger14OnBlockedFrameERKN4quic16QuicBlockedFrameE(%"class.net::QuicEventLogger"* %6, %"struct.quic::QuicBlockedFrame"* dereferenceable(16) %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger14OnBlockedFrameERKN4quic16QuicBlockedFrameE(%"class.net::QuicEventLogger"*, %"struct.quic::QuicBlockedFrame"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger13OnGoAwayFrameERKN4quic15QuicGoAwayFrameE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicGoAwayFrame"* dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = load atomic i64, i64* @_ZZN3net20QuicConnectionLogger13OnGoAwayFrameERKN4quic15QuicGoAwayFrameEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %4 = inttoptr i64 %3 to %"class.base::HistogramBase"*
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.26, i64 0, i64 0), i32 1) #11
  %8 = ptrtoint %"class.base::HistogramBase"* %7 to i64
  store atomic i64 %8, i64* @_ZZN3net20QuicConnectionLogger13OnGoAwayFrameERKN4quic15QuicGoAwayFrameEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.base::HistogramBase"* [ %4, %2 ], [ %7, %6 ]
  %11 = getelementptr inbounds %"struct.quic::QuicGoAwayFrame", %"struct.quic::QuicGoAwayFrame"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 86
  tail call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %10, i1 zeroext %13) #11
  %14 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger13OnGoAwayFrameERKN4quic15QuicGoAwayFrameE(%"class.net::QuicEventLogger"* %14, %"struct.quic::QuicGoAwayFrame"* dereferenceable(40) %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger13OnGoAwayFrameERKN4quic15QuicGoAwayFrameE(%"class.net::QuicEventLogger"*, %"struct.quic::QuicGoAwayFrame"* dereferenceable(40)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger11OnPingFrameERKN4quic13QuicPingFrameENS1_8QuicTime5DeltaE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicPingFrame"* dereferenceable(8), i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger11OnPingFrameERKN4quic13QuicPingFrameENS1_8QuicTime5DeltaE(%"class.net::QuicEventLogger"* %4, %"struct.quic::QuicPingFrame"* dereferenceable(8) %1, i64 %2) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger11OnPingFrameERKN4quic13QuicPingFrameENS1_8QuicTime5DeltaE(%"class.net::QuicEventLogger"*, %"struct.quic::QuicPingFrame"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger14OnPaddingFrameERKN4quic16QuicPaddingFrameE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicPaddingFrame"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger14OnPaddingFrameERKN4quic16QuicPaddingFrameE(%"class.net::QuicEventLogger"* %3, %"struct.quic::QuicPaddingFrame"* dereferenceable(8) %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger14OnPaddingFrameERKN4quic16QuicPaddingFrameE(%"class.net::QuicEventLogger"*, %"struct.quic::QuicPaddingFrame"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger22OnNewConnectionIdFrameERKN4quic24QuicNewConnectionIdFrameE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicNewConnectionIdFrame"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger22OnNewConnectionIdFrameERKN4quic24QuicNewConnectionIdFrameE(%"class.net::QuicEventLogger"* %3, %"struct.quic::QuicNewConnectionIdFrame"* dereferenceable(56) %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger22OnNewConnectionIdFrameERKN4quic24QuicNewConnectionIdFrameE(%"class.net::QuicEventLogger"*, %"struct.quic::QuicNewConnectionIdFrame"* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger15OnNewTokenFrameERKN4quic17QuicNewTokenFrameE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicNewTokenFrame"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger15OnNewTokenFrameERKN4quic17QuicNewTokenFrameE(%"class.net::QuicEventLogger"* %3, %"struct.quic::QuicNewTokenFrame"* dereferenceable(32) %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger15OnNewTokenFrameERKN4quic17QuicNewTokenFrameE(%"class.net::QuicEventLogger"*, %"struct.quic::QuicNewTokenFrame"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger25OnRetireConnectionIdFrameERKN4quic27QuicRetireConnectionIdFrameE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicRetireConnectionIdFrame"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger25OnRetireConnectionIdFrameERKN4quic27QuicRetireConnectionIdFrameE(%"class.net::QuicEventLogger"* %3, %"struct.quic::QuicRetireConnectionIdFrame"* dereferenceable(16) %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger25OnRetireConnectionIdFrameERKN4quic27QuicRetireConnectionIdFrameE(%"class.net::QuicEventLogger"*, %"struct.quic::QuicRetireConnectionIdFrame"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger14OnMessageFrameERKN4quic16QuicMessageFrameE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicMessageFrame"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger14OnMessageFrameERKN4quic16QuicMessageFrameE(%"class.net::QuicEventLogger"* %3, %"struct.quic::QuicMessageFrame"* dereferenceable(48) %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger14OnMessageFrameERKN4quic16QuicMessageFrameE(%"class.net::QuicEventLogger"*, %"struct.quic::QuicMessageFrame"* dereferenceable(48)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger20OnHandshakeDoneFrameERKN4quic22QuicHandshakeDoneFrameE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicHandshakeDoneFrame"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger20OnHandshakeDoneFrameERKN4quic22QuicHandshakeDoneFrameE(%"class.net::QuicEventLogger"* %3, %"struct.quic::QuicHandshakeDoneFrame"* dereferenceable(8) %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger20OnHandshakeDoneFrameERKN4quic22QuicHandshakeDoneFrameE(%"class.net::QuicEventLogger"*, %"struct.quic::QuicHandshakeDoneFrame"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger21OnCoalescedPacketSentERKN4quic19QuicCoalescedPacketEm(%"class.net::QuicConnectionLogger"*, %"class.quic::QuicCoalescedPacket"* dereferenceable(168), i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger21OnCoalescedPacketSentERKN4quic19QuicCoalescedPacketEm(%"class.net::QuicEventLogger"* %4, %"class.quic::QuicCoalescedPacket"* dereferenceable(168) %1, i64 %2) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger21OnCoalescedPacketSentERKN4quic19QuicCoalescedPacketEm(%"class.net::QuicEventLogger"*, %"class.quic::QuicCoalescedPacket"* dereferenceable(168), i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger19OnPublicResetPacketERKN4quic21QuicPublicResetPacketE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicPublicResetPacket"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.net::IPEndPoint", align 2
  %4 = alloca %struct.sockaddr_storage, align 8
  %5 = alloca %"class.quic::QuicSocketAddress", align 8
  %6 = alloca %"class.net::IPEndPoint", align 2
  %7 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 12
  %8 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"struct.quic::QuicPublicResetPacket", %"struct.quic::QuicPublicResetPacket"* %1, i64 0, i32 2
  %10 = bitcast %"class.quic::QuicSocketAddress"* %9 to i8*
  %11 = bitcast %"class.quic::QuicSocketAddress"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %10, i64 24, i1 false)
  %12 = call zeroext i1 @_ZNK4quic17QuicSocketAddress13IsInitializedEv(%"class.quic::QuicSocketAddress"* nonnull %5) #11, !noalias !12
  br i1 %12, label %14, label %13

13:                                               ; preds = %2
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* nonnull %6) #11
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %15) #11, !noalias !12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %15, i8 -86, i64 20, i1 false) #11, !noalias !12
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* nonnull %3) #11
  %16 = bitcast %struct.sockaddr_storage* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %16) #11, !noalias !12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 128, i1 false) #11, !noalias !12
  call void @_ZNK4quic17QuicSocketAddress15generic_addressEv(%struct.sockaddr_storage* nonnull sret %4, %"class.quic::QuicSocketAddress"* nonnull %5) #11
  %17 = bitcast %struct.sockaddr_storage* %4 to %struct.sockaddr*
  %18 = call zeroext i1 @_ZN3net10IPEndPoint12FromSockAddrEPK8sockaddrj(%"class.net::IPEndPoint"* nonnull %3, %struct.sockaddr* nonnull %17, i32 128) #11
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %6, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %16) #11, !noalias !12
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %15) #11, !noalias !12
  br label %19

19:                                               ; preds = %13, %14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11)
  %20 = call i32 @_ZN3net18GetAddressMismatchERKNS_10IPEndPointES2_(%"class.net::IPEndPoint"* dereferenceable(20) %7, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %6) #11
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %19
  %23 = load atomic i64, i64* @_ZZN3net12_GLOBAL__N_141UpdatePublicResetAddressMismatchHistogramERKNS_10IPEndPointES3_E24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %24 = inttoptr i64 %23 to %"class.base::HistogramBase"*
  %25 = icmp eq i64 %23, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %22
  %27 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.31, i64 0, i64 0), i32 1, i32 8, i32 9, i32 1) #11
  %28 = ptrtoint %"class.base::HistogramBase"* %27 to i64
  store atomic i64 %28, i64* @_ZZN3net12_GLOBAL__N_141UpdatePublicResetAddressMismatchHistogramERKNS_10IPEndPointES3_E24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %29

29:                                               ; preds = %26, %22
  %30 = phi %"class.base::HistogramBase"* [ %24, %22 ], [ %27, %26 ]
  %31 = bitcast %"class.base::HistogramBase"* %30 to void (%"class.base::HistogramBase"*, i32)***
  %32 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %32, i64 6
  %34 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %33, align 8
  call void %34(%"class.base::HistogramBase"* %30, i32 %20) #11
  br label %35

35:                                               ; preds = %19, %29
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %8) #11
  %36 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  call void @_ZN3net15QuicEventLogger19OnPublicResetPacketERKN4quic21QuicPublicResetPacketE(%"class.net::QuicEventLogger"* %36, %"struct.quic::QuicPublicResetPacket"* dereferenceable(72) %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger19OnPublicResetPacketERKN4quic21QuicPublicResetPacketE(%"class.net::QuicEventLogger"*, %"struct.quic::QuicPublicResetPacket"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger26OnVersionNegotiationPacketERKN4quic28QuicVersionNegotiationPacketE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicVersionNegotiationPacket"* dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger26OnVersionNegotiationPacketERKN4quic28QuicVersionNegotiationPacketE(%"class.net::QuicEventLogger"* %3, %"struct.quic::QuicVersionNegotiationPacket"* dereferenceable(40) %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger26OnVersionNegotiationPacketERKN4quic28QuicVersionNegotiationPacketE(%"class.net::QuicEventLogger"*, %"struct.quic::QuicVersionNegotiationPacket"* dereferenceable(40)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger32OnCryptoHandshakeMessageReceivedERKN4quic22CryptoHandshakeMessageE(%"class.net::QuicConnectionLogger"*, %"class.quic::CryptoHandshakeMessage"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.in_addr, align 4
  %4 = alloca { i64, i64 }, align 8
  %5 = alloca %"class.quic::QuicIpAddress", align 8
  %6 = alloca %"class.absl::string_view", align 8
  %7 = alloca %"class.quic::QuicSocketAddressCoder", align 4
  %8 = alloca %"class.net::IPEndPoint", align 2
  %9 = alloca %"class.net::IPAddress", align 1
  %10 = alloca %"class.quic::QuicIpAddress", align 8
  %11 = getelementptr inbounds %"class.quic::CryptoHandshakeMessage", %"class.quic::CryptoHandshakeMessage"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 1330399315
  br i1 %13, label %14, label %86

14:                                               ; preds = %2
  %15 = bitcast %"class.absl::string_view"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 16, i1 false) #11
  %16 = bitcast %"class.quic::QuicSocketAddressCoder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #11
  %17 = bitcast %"class.quic::QuicSocketAddressCoder"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %17, i8 -86, i64 24, i1 false)
  call void @_ZN4quic22QuicSocketAddressCoderC1Ev(%"class.quic::QuicSocketAddressCoder"* nonnull %7) #11
  %18 = call zeroext i1 @_ZNK4quic22CryptoHandshakeMessage14GetStringPieceEjPN4absl11string_viewE(%"class.quic::CryptoHandshakeMessage"* %1, i32 1380204867, %"class.absl::string_view"* nonnull %6) #11
  br i1 %18, label %19, label %85

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %6, i64 0, i32 0
  %21 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %6, i64 0, i32 1
  %22 = load i8*, i8** %20, align 8
  %23 = load i64, i64* %21, align 8
  %24 = call zeroext i1 @_ZN4quic22QuicSocketAddressCoder6DecodeEPKcm(%"class.quic::QuicSocketAddressCoder"* nonnull %7, i8* %22, i64 %23) #11
  br i1 %24, label %25, label %85

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %26) #11
  %27 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %9, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"class.quic::QuicSocketAddressCoder", %"class.quic::QuicSocketAddressCoder"* %7, i64 0, i32 0
  call void @_ZNK4quic17QuicSocketAddress4hostEv(%"class.quic::QuicIpAddress"* nonnull sret %10, %"class.quic::QuicSocketAddress"* nonnull %28) #11
  %29 = bitcast %"class.quic::QuicIpAddress"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %29)
  %30 = bitcast %"class.quic::QuicIpAddress"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* nonnull align 8 %30, i64 20, i1 false) #11
  %31 = call zeroext i1 @_ZNK4quic13QuicIpAddress13IsInitializedEv(%"class.quic::QuicIpAddress"* nonnull %5) #11, !noalias !15
  br i1 %31, label %33, label %32

32:                                               ; preds = %25
  call void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"* nonnull %9) #11
  br label %47

33:                                               ; preds = %25
  %34 = call i32 @_ZNK4quic13QuicIpAddress14address_familyEv(%"class.quic::QuicIpAddress"* nonnull %5) #11
  switch i32 %34, label %46 [
    i32 0, label %35
    i32 1, label %39
  ]

35:                                               ; preds = %33
  %36 = bitcast %struct.in_addr* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #11, !noalias !15
  %37 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %3, i64 0, i32 0
  %38 = call i32 @_ZNK4quic13QuicIpAddress7GetIPv4Ev(%"class.quic::QuicIpAddress"* nonnull %5) #11
  store i32 %38, i32* %37, align 4, !noalias !15
  call void @_ZN3net9IPAddressC1EPKhm(%"class.net::IPAddress"* nonnull %9, i8* nonnull %36, i64 4) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #11, !noalias !15
  br label %47

39:                                               ; preds = %33
  %40 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #11, !noalias !15
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %42 = call { i64, i64 } @_ZNK4quic13QuicIpAddress7GetIPv6Ev(%"class.quic::QuicIpAddress"* nonnull %5) #11
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %44 = extractvalue { i64, i64 } %42, 0
  store i64 %44, i64* %43, align 8, !noalias !15
  %45 = extractvalue { i64, i64 } %42, 1
  store i64 %45, i64* %41, align 8, !noalias !15
  call void @_ZN3net9IPAddressC1EPKhm(%"class.net::IPAddress"* nonnull %9, i8* nonnull %40, i64 16) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #11, !noalias !15
  br label %47

46:                                               ; preds = %33
  call void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"* nonnull %9) #11
  br label %47

47:                                               ; preds = %32, %35, %39, %46
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %29)
  %48 = call zeroext i16 @_ZNK4quic17QuicSocketAddress4portEv(%"class.quic::QuicSocketAddress"* nonnull %28) #11
  call void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"* nonnull %8, %"class.net::IPAddress"* nonnull dereferenceable(17) %9, i16 zeroext %48) #11
  %49 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 12
  %50 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* nonnull align 2 %26, i64 20, i1 false)
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %8) #11
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %27) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %26) #11
  %51 = load atomic i64, i64* @_ZZN3net20QuicConnectionLogger32OnCryptoHandshakeMessageReceivedERKN4quic22CryptoHandshakeMessageEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %52 = inttoptr i64 %51 to %"class.base::HistogramBase"*
  %53 = icmp eq i64 %51, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %47
  %55 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.27, i64 0, i64 0), i32 1, i32 2, i32 3, i32 1) #11
  %56 = ptrtoint %"class.base::HistogramBase"* %55 to i64
  store atomic i64 %56, i64* @_ZZN3net20QuicConnectionLogger32OnCryptoHandshakeMessageReceivedERKN4quic22CryptoHandshakeMessageEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %57

57:                                               ; preds = %47, %54
  %58 = phi %"class.base::HistogramBase"* [ %52, %47 ], [ %55, %54 ]
  %59 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %49, i64 0, i32 0
  %60 = call zeroext i1 @_ZNK3net9IPAddress16IsIPv4MappedIPv6Ev(%"class.net::IPAddress"* %59) #11
  br i1 %60, label %63, label %61

61:                                               ; preds = %57
  %62 = call i32 @_ZN3net16GetAddressFamilyERKNS_9IPAddressE(%"class.net::IPAddress"* dereferenceable(17) %59) #11
  br label %63

63:                                               ; preds = %57, %61
  %64 = phi i32 [ %62, %61 ], [ 1, %57 ]
  %65 = bitcast %"class.base::HistogramBase"* %58 to void (%"class.base::HistogramBase"*, i32)***
  %66 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %66, i64 6
  %68 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %67, align 8
  call void %68(%"class.base::HistogramBase"* %58, i32 %64) #11
  %69 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 13
  %70 = call i32 @_ZN3net18GetAddressMismatchERKNS_10IPEndPointES2_(%"class.net::IPEndPoint"* dereferenceable(20) %49, %"class.net::IPEndPoint"* dereferenceable(20) %69) #11
  %71 = icmp sgt i32 %70, -1
  br i1 %71, label %72, label %85

72:                                               ; preds = %63
  %73 = load atomic i64, i64* @_ZZN3net20QuicConnectionLogger32OnCryptoHandshakeMessageReceivedERKN4quic22CryptoHandshakeMessageEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %74 = inttoptr i64 %73 to %"class.base::HistogramBase"*
  %75 = icmp eq i64 %73, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %72
  %77 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.28, i64 0, i64 0), i32 1, i32 8, i32 9, i32 1) #11
  %78 = ptrtoint %"class.base::HistogramBase"* %77 to i64
  store atomic i64 %78, i64* @_ZZN3net20QuicConnectionLogger32OnCryptoHandshakeMessageReceivedERKN4quic22CryptoHandshakeMessageEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %79

79:                                               ; preds = %72, %76
  %80 = phi %"class.base::HistogramBase"* [ %74, %72 ], [ %77, %76 ]
  %81 = bitcast %"class.base::HistogramBase"* %80 to void (%"class.base::HistogramBase"*, i32)***
  %82 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %82, i64 6
  %84 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %83, align 8
  call void %84(%"class.base::HistogramBase"* %80, i32 %70) #11
  br label %85

85:                                               ; preds = %63, %79, %19, %14
  call void @_ZN4quic22QuicSocketAddressCoderD1Ev(%"class.quic::QuicSocketAddressCoder"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #11
  br label %86

86:                                               ; preds = %85, %2
  %87 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  call void @_ZN3net15QuicEventLogger32OnCryptoHandshakeMessageReceivedERKN4quic22CryptoHandshakeMessageE(%"class.net::QuicEventLogger"* %87, %"class.quic::CryptoHandshakeMessage"* dereferenceable(48) %1) #11
  ret void
}

declare void @_ZN4quic22QuicSocketAddressCoderC1Ev(%"class.quic::QuicSocketAddressCoder"*) unnamed_addr #1

declare zeroext i1 @_ZNK4quic22CryptoHandshakeMessage14GetStringPieceEjPN4absl11string_viewE(%"class.quic::CryptoHandshakeMessage"*, i32, %"class.absl::string_view"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4quic22QuicSocketAddressCoder6DecodeEPKcm(%"class.quic::QuicSocketAddressCoder"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"*, %"class.net::IPAddress"* dereferenceable(17), i16 zeroext) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"*) unnamed_addr #3

declare i32 @_ZN3net18GetAddressMismatchERKNS_10IPEndPointES2_(%"class.net::IPEndPoint"* dereferenceable(20), %"class.net::IPEndPoint"* dereferenceable(20)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4quic22QuicSocketAddressCoderD1Ev(%"class.quic::QuicSocketAddressCoder"*) unnamed_addr #3

declare void @_ZN3net15QuicEventLogger32OnCryptoHandshakeMessageReceivedERKN4quic22CryptoHandshakeMessageE(%"class.net::QuicEventLogger"*, %"class.quic::CryptoHandshakeMessage"* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger28OnCryptoHandshakeMessageSentERKN4quic22CryptoHandshakeMessageE(%"class.net::QuicConnectionLogger"*, %"class.quic::CryptoHandshakeMessage"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger28OnCryptoHandshakeMessageSentERKN4quic22CryptoHandshakeMessageE(%"class.net::QuicEventLogger"* %3, %"class.quic::CryptoHandshakeMessage"* dereferenceable(48) %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger28OnCryptoHandshakeMessageSentERKN4quic22CryptoHandshakeMessageE(%"class.net::QuicEventLogger"*, %"class.quic::CryptoHandshakeMessage"* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger18OnConnectionClosedERKN4quic24QuicConnectionCloseFrameENS1_21ConnectionCloseSourceE(%"class.net::QuicConnectionLogger"*, %"struct.quic::QuicConnectionCloseFrame"* dereferenceable(56), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger18OnConnectionClosedERKN4quic24QuicConnectionCloseFrameENS1_21ConnectionCloseSourceE(%"class.net::QuicEventLogger"* %4, %"struct.quic::QuicConnectionCloseFrame"* dereferenceable(56) %1, i32 %2) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger18OnConnectionClosedERKN4quic24QuicConnectionCloseFrameENS1_21ConnectionCloseSourceE(%"class.net::QuicEventLogger"*, %"struct.quic::QuicConnectionCloseFrame"* dereferenceable(56), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger30OnSuccessfulVersionNegotiationERKN4quic17ParsedQuicVersionE(%"class.net::QuicConnectionLogger"*, %"struct.quic::ParsedQuicVersion"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger30OnSuccessfulVersionNegotiationERKN4quic17ParsedQuicVersionE(%"class.net::QuicEventLogger"* %3, %"struct.quic::ParsedQuicVersion"* dereferenceable(8) %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger30OnSuccessfulVersionNegotiationERKN4quic17ParsedQuicVersionE(%"class.net::QuicEventLogger"*, %"struct.quic::ParsedQuicVersion"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger25UpdateReceivedFrameCountsEjii(%"class.net::QuicConnectionLogger"* nocapture, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 2
  %6 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %5, align 8
  %7 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %6, i64 0, i32 8
  %8 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %7, align 8
  %9 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %8, i64 0, i32 8, i32 8, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = tail call zeroext i1 @_ZN4quic9QuicUtils16IsCryptoStreamIdENS_20QuicTransportVersionEj(i32 %10, i32 %1) #11
  br i1 %11, label %19, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 14
  %14 = load i32, i32* %13, align 8
  %15 = add nsw i32 %14, %2
  store i32 %15, i32* %13, align 8
  %16 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 15
  %17 = load i32, i32* %16, align 4
  %18 = add nsw i32 %17, %3
  store i32 %18, i32* %16, align 4
  br label %19

19:                                               ; preds = %12, %4
  ret void
}

declare zeroext i1 @_ZN4quic9QuicUtils16IsCryptoStreamIdENS_20QuicTransportVersionEj(i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger21OnCertificateVerifiedERKNS_16CertVerifyResultE(%"class.net::QuicConnectionLogger"*, %"class.net::CertVerifyResult"* dereferenceable(136)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger21OnCertificateVerifiedERKNS_16CertVerifyResultE(%"class.net::QuicEventLogger"* %3, %"class.net::CertVerifyResult"* dereferenceable(136) %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger21OnCertificateVerifiedERKNS_16CertVerifyResultE(%"class.net::QuicEventLogger"*, %"class.net::CertVerifyResult"* dereferenceable(136)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZNK3net20QuicConnectionLogger19Get6PacketHistogramEPKc(%"class.net::QuicConnectionLogger"* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = tail call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %5, i8* align 1 getelementptr inbounds ([42 x i8], [42 x i8]* @.str.29, i64 0, i64 0), i64 41, i1 false) #11
  %6 = getelementptr inbounds i8, i8* %5, i64 41
  store i8 0, i8* %6, align 1
  %7 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #11, !alias.scope !18
  %12 = tail call i64 @strlen(i8* %1) #11, !noalias !18
  %13 = add i64 %12, 41
  %14 = icmp ugt i64 %13, -17
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %16) #13
  unreachable

17:                                               ; preds = %2
  %18 = icmp ult i64 %13, 23
  br i1 %18, label %19, label %22

19:                                               ; preds = %17
  %20 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  store i8 41, i8* %21, align 1, !alias.scope !18
  br label %27

22:                                               ; preds = %17
  %23 = add i64 %12, 57
  %24 = and i64 %23, -16
  %25 = tail call i8* @_Znwm(i64 %24) #12
  store i8* %25, i8** %9, align 8, !alias.scope !18
  %26 = or i64 %24, -9223372036854775808
  store i64 %26, i64* %11, align 8, !alias.scope !18
  store i64 41, i64* %10, align 8, !alias.scope !18
  br label %27

27:                                               ; preds = %22, %19
  %28 = phi i8* [ %8, %19 ], [ %25, %22 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* nonnull align 1 %5, i64 41, i1 false) #11
  %29 = getelementptr inbounds i8, i8* %28, i64 41
  store i8 0, i8* %29, align 1
  %30 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %1, i64 %12) #11
  %31 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 23
  %32 = load i8*, i8** %31, align 8
  %33 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %4, i8* %32) #11, !noalias !21
  %34 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %34, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #11, !noalias !21
  %35 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiiji(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i32 1, i32 64, i32 65, i32 1) #11
  %36 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %27
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #12
  br label %43

43:                                               ; preds = %27, %40
  %44 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %43
  %49 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %43, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  call void @_ZdlPv(i8* nonnull %5) #12
  ret %"class.base::HistogramBase"* %35
}

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiiji(%"class.std::__1::basic_string"* dereferenceable(24), i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK3net20QuicConnectionLogger22ReceivedPacketLossRateEv(%"class.net::QuicConnectionLogger"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 8
  %3 = tail call zeroext i1 @_ZNK4quic16QuicPacketNumber13IsInitializedEv(%"class.quic::QuicPacketNumber"* %2) #11
  br i1 %3, label %4, label %17

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 8, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 7, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %6, 1
  %10 = sub i64 %9, %8
  %11 = uitofp i64 %10 to float
  %12 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 11
  %13 = load i64, i64* %12, align 8
  %14 = uitofp i64 %13 to float
  %15 = fsub float %11, %14
  %16 = fdiv float %15, %11
  br label %17

17:                                               ; preds = %1, %4
  %18 = phi float [ %16, %4 ], [ 0.000000e+00, %1 ]
  ret float %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net20QuicConnectionLogger12OnRttChangedEN4quic8QuicTime5DeltaE(%"class.net::QuicConnectionLogger"* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 24, i32 0, i32 0, i32 0
  %5 = load %"class.net::SocketPerformanceWatcher"*, %"class.net::SocketPerformanceWatcher"** %4, align 8
  %6 = icmp eq %"class.net::SocketPerformanceWatcher"* %5, null
  %7 = icmp eq i64 %1, 0
  %8 = or i1 %7, %6
  br i1 %8, label %23, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.net::SocketPerformanceWatcher"* %5 to i1 (%"class.net::SocketPerformanceWatcher"*)***
  %11 = load i1 (%"class.net::SocketPerformanceWatcher"*)**, i1 (%"class.net::SocketPerformanceWatcher"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.net::SocketPerformanceWatcher"*)*, i1 (%"class.net::SocketPerformanceWatcher"*)** %11, i64 2
  %13 = load i1 (%"class.net::SocketPerformanceWatcher"*)*, i1 (%"class.net::SocketPerformanceWatcher"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.net::SocketPerformanceWatcher"* nonnull %5) #11
  br i1 %14, label %15, label %23

15:                                               ; preds = %9
  %16 = load %"class.net::SocketPerformanceWatcher"*, %"class.net::SocketPerformanceWatcher"** %4, align 8
  %17 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = bitcast %"class.net::SocketPerformanceWatcher"* %16 to void (%"class.net::SocketPerformanceWatcher"*, %"class.base::TimeDelta"*)***
  %20 = load void (%"class.net::SocketPerformanceWatcher"*, %"class.base::TimeDelta"*)**, void (%"class.net::SocketPerformanceWatcher"*, %"class.base::TimeDelta"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.net::SocketPerformanceWatcher"*, %"class.base::TimeDelta"*)*, void (%"class.net::SocketPerformanceWatcher"*, %"class.base::TimeDelta"*)** %20, i64 3
  %22 = load void (%"class.net::SocketPerformanceWatcher"*, %"class.base::TimeDelta"*)*, void (%"class.net::SocketPerformanceWatcher"*, %"class.base::TimeDelta"*)** %21, align 8
  call void %22(%"class.net::SocketPerformanceWatcher"* %16, %"class.base::TimeDelta"* nonnull dereferenceable(8) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %23

23:                                               ; preds = %2, %9, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger25OnTransportParametersSentERKN4quic19TransportParametersE(%"class.net::QuicConnectionLogger"*, %"struct.quic::TransportParameters"* dereferenceable(928)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger25OnTransportParametersSentERKN4quic19TransportParametersE(%"class.net::QuicEventLogger"* %3, %"struct.quic::TransportParameters"* dereferenceable(928) %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger25OnTransportParametersSentERKN4quic19TransportParametersE(%"class.net::QuicEventLogger"*, %"struct.quic::TransportParameters"* dereferenceable(928)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger29OnTransportParametersReceivedERKN4quic19TransportParametersE(%"class.net::QuicConnectionLogger"*, %"struct.quic::TransportParameters"* dereferenceable(928)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger29OnTransportParametersReceivedERKN4quic19TransportParametersE(%"class.net::QuicEventLogger"* %3, %"struct.quic::TransportParameters"* dereferenceable(928) %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger29OnTransportParametersReceivedERKN4quic19TransportParametersE(%"class.net::QuicEventLogger"*, %"struct.quic::TransportParameters"* dereferenceable(928)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger28OnTransportParametersResumedERKN4quic19TransportParametersE(%"class.net::QuicConnectionLogger"*, %"struct.quic::TransportParameters"* dereferenceable(928)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger28OnTransportParametersResumedERKN4quic19TransportParametersE(%"class.net::QuicEventLogger"* %3, %"struct.quic::TransportParameters"* dereferenceable(928) %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger28OnTransportParametersResumedERKN4quic19TransportParametersE(%"class.net::QuicEventLogger"*, %"struct.quic::TransportParameters"* dereferenceable(928)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20QuicConnectionLogger17OnZeroRttRejectedEi(%"class.net::QuicConnectionLogger"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectionLogger", %"class.net::QuicConnectionLogger"* %0, i64 0, i32 25
  tail call void @_ZN3net15QuicEventLogger17OnZeroRttRejectedEi(%"class.net::QuicEventLogger"* %3, i32 %1) #11
  ret void
}

declare void @_ZN3net15QuicEventLogger17OnZeroRttRejectedEi(%"class.net::QuicEventLogger"*, i32) unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiiji(%"class.std::__1::basic_string"* dereferenceable(24), i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic21QuicSentPacketManager13DebugDelegate30OnSpuriousPacketRetransmissionENS_16TransmissionTypeEm(%"class.quic::QuicSentPacketManager::DebugDelegate"*, i8 signext, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic21QuicSentPacketManager13DebugDelegate20OnApplicationLimitedEv(%"class.quic::QuicSentPacketManager::DebugDelegate"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic21QuicSentPacketManager13DebugDelegate25OnAdjustNetworkParametersENS_13QuicBandwidthENS_8QuicTime5DeltaEmm(%"class.quic::QuicSentPacketManager::DebugDelegate"*, i64, i64, i64, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic21QuicSentPacketManager13DebugDelegate22OnOvershootingDetectedEv(%"class.quic::QuicSentPacketManager::DebugDelegate"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic26QuicConnectionDebugVisitor21OnSendConnectionStateERKNS_23CachedNetworkParametersE(%"class.quic::QuicConnectionDebugVisitor"*, %"class.quic::CachedNetworkParameters"* dereferenceable(64)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic26QuicConnectionDebugVisitor24OnReceiveConnectionStateERKNS_23CachedNetworkParametersE(%"class.quic::QuicConnectionDebugVisitor"*, %"class.quic::CachedNetworkParameters"* dereferenceable(64)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic26QuicConnectionDebugVisitor15OnSetFromConfigERKNS_10QuicConfigE(%"class.quic::QuicConnectionDebugVisitor"*, %"class.quic::QuicConfig"* dereferenceable(1112)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic26QuicConnectionDebugVisitor19OnAckFrequencyFrameERKNS_21QuicAckFrequencyFrameE(%"class.quic::QuicConnectionDebugVisitor"*, %"struct.quic::QuicAckFrequencyFrame"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic26QuicConnectionDebugVisitor23OnNPacketNumbersSkippedEmNS_8QuicTimeE(%"class.quic::QuicConnectionDebugVisitor"*, i64, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic26QuicConnectionDebugVisitor20OnZeroRttPacketAckedEv(%"class.quic::QuicConnectionDebugVisitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic26QuicConnectionDebugVisitor19OnPeerAddressChangeENS_17AddressChangeTypeENS_8QuicTime5DeltaE(%"class.quic::QuicConnectionDebugVisitor"*, i8 zeroext, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic26QuicConnectionDebugVisitor24OnPeerMigrationValidatedENS_8QuicTime5DeltaE(%"class.quic::QuicConnectionDebugVisitor"*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"*) unnamed_addr #3

declare zeroext i1 @_ZNK4quic17QuicSocketAddress13IsInitializedEv(%"class.quic::QuicSocketAddress"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNK4quic17QuicSocketAddress15generic_addressEv(%struct.sockaddr_storage* sret, %"class.quic::QuicSocketAddress"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3net10IPEndPoint12FromSockAddrEPK8sockaddrj(%"class.net::IPEndPoint"*, %struct.sockaddr*, i32) local_unnamed_addr #1

declare void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #1

declare zeroext i1 @_ZNK3net9IPAddress16IsIPv4MappedIPv6Ev(%"class.net::IPAddress"*) local_unnamed_addr #1

declare i32 @_ZN3net16GetAddressFamilyERKNS_9IPAddressE(%"class.net::IPAddress"* dereferenceable(17)) local_unnamed_addr #1

declare zeroext i1 @_ZNK4quic13QuicIpAddress13IsInitializedEv(%"class.quic::QuicIpAddress"*) local_unnamed_addr #1

declare void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"*) unnamed_addr #1

declare i32 @_ZNK4quic13QuicIpAddress14address_familyEv(%"class.quic::QuicIpAddress"*) local_unnamed_addr #1

declare i32 @_ZNK4quic13QuicIpAddress7GetIPv4Ev(%"class.quic::QuicIpAddress"*) local_unnamed_addr #1

declare void @_ZN3net9IPAddressC1EPKhm(%"class.net::IPAddress"*, i8*, i64) unnamed_addr #1

declare { i64, i64 } @_ZNK4quic13QuicIpAddress7GetIPv6Ev(%"class.quic::QuicIpAddress"*) local_unnamed_addr #1

declare void @_ZNK4quic17QuicSocketAddress4hostEv(%"class.quic::QuicIpAddress"* sret, %"class.quic::QuicSocketAddress"*) local_unnamed_addr #1

declare zeroext i16 @_ZNK4quic17QuicSocketAddress4portEv(%"class.quic::QuicSocketAddress"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN3net12ToIPEndPointEN4quic17QuicSocketAddressE: argument 0"}
!7 = distinct !{!7, !"_ZN3net12ToIPEndPointEN4quic17QuicSocketAddressE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN3net12ToIPEndPointEN4quic17QuicSocketAddressE: argument 0"}
!10 = distinct !{!10, !"_ZN3net12ToIPEndPointEN4quic17QuicSocketAddressE"}
!11 = !{i8 0, i8 2}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN3net12ToIPEndPointEN4quic17QuicSocketAddressE: argument 0"}
!14 = distinct !{!14, !"_ZN3net12ToIPEndPointEN4quic17QuicSocketAddressE"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN3net11ToIPAddressEN4quic13QuicIpAddressE: argument 0"}
!17 = distinct !{!17, !"_ZN3net11ToIPAddressEN4quic13QuicIpAddressE"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
