; ModuleID = 'gen/third_party/blink/renderer/bindings/core/v8/v8_message_event.cc'
source_filename = "gen/third_party/blink/renderer/bindings/core/v8/v8_message_event.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.167", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.111", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist.42"* }
%"class.blink::Worklist.42" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.114", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.42"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.171" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8::MemorySpan" = type { %"class.v8::CFunction"*, i64 }
%"class.v8::CFunction" = type { i8*, %"class.v8::CFunctionInfo"* }
%"class.v8::CFunctionInfo" = type { %"class.v8::CTypeInfo", i32, %"class.v8::CTypeInfo"* }
%"class.v8::CTypeInfo" = type { i8, i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::V8PrivateProperty::SymbolKey" = type { i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.238" }
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__atomic_base.240" }
%"struct.std::__1::__atomic_base.240" = type { %"struct.std::__1::__cxx_atomic_impl.241" }
%"struct.std::__1::__cxx_atomic_impl.241" = type { %"struct.std::__1::__cxx_atomic_base_impl.242" }
%"struct.std::__1::__cxx_atomic_base_impl.242" = type { i32 }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"struct.blink::bindings::IDLMemberInstaller::AttributeConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i16, [6 x i8] }>
%"class.base::span.182" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* }
%"struct.blink::bindings::IDLMemberInstaller::OperationConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, [3 x i8], [5 x i8] }>
%"class.v8::FunctionTemplate" = type { i8 }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.v8::Signature" = type { i8 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.189" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::String" = type { %class.scoped_refptr.183 }
%class.scoped_refptr.183 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.184" }
%"struct.std::__1::atomic.184" = type { %"struct.std::__1::__atomic_base.185" }
%"struct.std::__1::__atomic_base.185" = type { %"struct.std::__1::__atomic_base.186" }
%"struct.std::__1::__atomic_base.186" = type { %"struct.std::__1::__cxx_atomic_impl.187" }
%"struct.std::__1::__cxx_atomic_impl.187" = type { %"struct.std::__1::__cxx_atomic_base_impl.188" }
%"struct.std::__1::__cxx_atomic_base_impl.188" = type { i32 }
%"class.blink::TraceWrapperV8Reference.189" = type { %"class.v8::TracedReference.190" }
%"class.v8::TracedReference.190" = type { %"class.v8::BasicTracedReference.191" }
%"class.v8::BasicTracedReference.191" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::bindings::NativeValueTraitsStringAdapter" = type { %"class.v8::Local.192", %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local.192" = type { %"class.v8::String"* }
%"class.v8::String" = type { i8 }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.193" }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { i8* }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.463", %"class.WTF::HashMap.463", %"class.WTF::HashMap.468", %"class.std::__1::unique_ptr.473", %"class.std::__1::unique_ptr.520", %"class.blink::Persistent.531", i8, i8, i8, %"class.WTF::Vector.533", %"class.std::__1::unique_ptr.538", %"class.blink::Persistent.544", %"class.blink::Persistent.548", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.445", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.457", i32, i32 }
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.463" = type { %"class.WTF::HashTable.464" }
%"class.WTF::HashTable.464" = type <{ %"struct.WTF::KeyValuePair.467"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.467" = type opaque
%"class.WTF::HashMap.468" = type { %"class.WTF::HashTable.469" }
%"class.WTF::HashTable.469" = type <{ %"struct.WTF::KeyValuePair.472"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.472" = type opaque
%"class.std::__1::unique_ptr.473" = type { %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.481", %class.scoped_refptr.183 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.476", i8* }
%"class.WTF::HashMap.476" = type { %"class.WTF::HashTable.477" }
%"class.WTF::HashTable.477" = type <{ %"struct.WTF::KeyValuePair.480"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.480" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.481" = type { %"class.v8::PersistentValueMapBase.482" }
%"class.v8::PersistentValueMapBase.482" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.483", i8* }
%"class.WTF::HashMap.483" = type { %"class.WTF::HashTable.484" }
%"class.WTF::HashTable.484" = type <{ %"struct.WTF::KeyValuePair.487"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.487" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.488", %"class.WTF::String", %"class.std::__1::unique_ptr.490" }
%"class.WTF::RefCounted.488" = type { %"class.base::RefCounted.489" }
%"class.base::RefCounted.489" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.493", %"class.std::__1::unique_ptr.504", %"class.WTF::Vector.510", i8, i32 }
%"class.std::__1::unique_ptr.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"class.WTF::Vector.496"* }
%"class.WTF::Vector.496" = type { %"class.WTF::VectorBuffer.497" }
%"class.WTF::VectorBuffer.497" = type { %"class.WTF::VectorBufferBase.498" }
%"class.WTF::VectorBufferBase.498" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.504" = type { %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.510" = type { %"class.WTF::VectorBuffer.511" }
%"class.WTF::VectorBuffer.511" = type { %"class.WTF::VectorBufferBase.498", [32 x i8] }
%"class.std::__1::unique_ptr.520" = type { %"class.std::__1::__compressed_pair.521" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.522" }
%"struct.std::__1::__compressed_pair_elem.522" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type { %"class.blink::ScopedPersistent", %"class.WTF::HashMap.523" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.WTF::HashMap.523" = type { %"class.WTF::HashTable.524" }
%"class.WTF::HashTable.524" = type <{ %"struct.WTF::KeyValuePair.527"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.527" = type opaque
%"class.blink::Persistent.531" = type { %"class.blink::PersistentBase.532" }
%"class.blink::PersistentBase.532" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent.565", %class.scoped_refptr.568, %"class.blink::Member.569", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent.565" = type { %"class.v8::Persistent.566" }
%"class.v8::Persistent.566" = type { %"class.v8::PersistentBase.567" }
%"class.v8::PersistentBase.567" = type { %"class.v8::Context"* }
%class.scoped_refptr.568 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.569" = type { %"class.blink::MemberBase.570" }
%"class.blink::MemberBase.570" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.531" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::Vector.533" = type { %"class.WTF::VectorBuffer.534" }
%"class.WTF::VectorBuffer.534" = type { %"class.WTF::VectorBufferBase.535" }
%"class.WTF::VectorBufferBase.535" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.238" }
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.544" = type { %"class.blink::PersistentBase.545" }
%"class.blink::PersistentBase.545" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.548" = type { %"class.blink::PersistentBase.549" }
%"class.blink::PersistentBase.549" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.552", i64 }
%"class.blink::HeapVector.552" = type { %"class.WTF::Vector.555" }
%"class.WTF::Vector.555" = type { %"class.WTF::VectorBuffer.556" }
%"class.WTF::VectorBuffer.556" = type { %"class.WTF::VectorBufferBase.557" }
%"class.WTF::VectorBufferBase.557" = type { %"struct.std::__1::pair.558"*, i32, i32 }
%"struct.std::__1::pair.558" = type { %"class.blink::UntracedMember", %"class.blink::Member.560" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.559" }
%"class.blink::MemberBase.559" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.560" = type { %"class.blink::MemberBase.561" }
%"class.blink::MemberBase.561" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.blink::MessageEventInit" = type { %"class.blink::EventInit.base", i8, i8, i8, %"class.blink::ScriptValue", %"class.WTF::String", %"class.WTF::String", %"class.blink::HeapVector", %"class.blink::Member.305", %"class.blink::Member.307" }
%"class.blink::EventInit.base" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8 }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.189", %class.scoped_refptr.199 }
%class.scoped_refptr.199 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.202" }
%"class.WTF::Vector.202" = type { %"class.WTF::VectorBuffer.203" }
%"class.WTF::VectorBuffer.203" = type { %"class.WTF::VectorBufferBase.204" }
%"class.WTF::VectorBufferBase.204" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase.205" }
%"class.blink::MemberBase.205" = type { %"class.blink::MessagePort"* }
%"class.blink::MessagePort" = type { %"class.blink::EventTargetWithInlineData", %"class.mojo::MessageReceiver", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.std::__1::unique_ptr.234", i8, i8, %class.scoped_refptr.303, %"class.blink::MessagePortDescriptor" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.220" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.208" }
%"class.blink::HeapVector.208" = type { %"class.WTF::Vector.211" }
%"class.WTF::Vector.211" = type { %"class.WTF::VectorBuffer.212" }
%"class.WTF::VectorBuffer.212" = type { %"class.WTF::VectorBufferBase.213", [32 x i8] }
%"class.WTF::VectorBufferBase.213" = type { %"struct.std::__1::pair.214"*, i32, i32 }
%"struct.std::__1::pair.214" = type { %"class.WTF::AtomicString", %"class.blink::Member.215" }
%"class.blink::Member.215" = type { %"class.blink::MemberBase.216" }
%"class.blink::MemberBase.216" = type { %"class.blink::HeapVector.217"* }
%"class.blink::HeapVector.217" = type opaque
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.WTF::Vector.223"* }
%"class.WTF::Vector.223" = type opaque
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.227" }
%"class.blink::WeakMember.227" = type { %"class.blink::MemberBase.228" }
%"class.blink::MemberBase.228" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.231" }
%"class.WTF::HashTable.231" = type <{ %"class.blink::WeakMember.233"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.233" = type opaque
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.mojo::Connector"* }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.243, %"class.std::__1::unique_ptr.245", %"class.absl::optional", %"struct.std::__1::atomic.167", i8, i8, i8, i8, i32, i32, %"class.absl::optional.261", %"class.std::__1::unique_ptr.266", i8, i64, %class.scoped_refptr.296, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.299" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.243 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.244" }>
%"class.base::RefCountedThreadSafe.244" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.243, i8, %"class.mojo::ScopedHandleBase.248", %class.scoped_refptr.249, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory" }
%"class.mojo::ScopedHandleBase.248" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.249 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.250 }
%class.scoped_refptr.250 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.251", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.251" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.252" }
%"struct.std::__1::atomic.252" = type { %"struct.std::__1::__atomic_base.253" }
%"struct.std::__1::__atomic_base.253" = type { %"struct.std::__1::__atomic_base.254" }
%"struct.std::__1::__atomic_base.254" = type { %"struct.std::__1::__cxx_atomic_impl.255" }
%"struct.std::__1::__cxx_atomic_impl.255" = type { %"struct.std::__1::__cxx_atomic_base_impl.256" }
%"struct.std::__1::__cxx_atomic_base_impl.256" = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.260", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.260" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.absl::optional.261" = type { %"class.absl::optional_internal::optional_data.262" }
%"class.absl::optional_internal::optional_data.262" = type { %"class.absl::optional_internal::optional_data_base.263" }
%"class.absl::optional_internal::optional_data_base.263" = type { %"class.absl::optional_internal::optional_data_dtor_base.264" }
%"class.absl::optional_internal::optional_data_dtor_base.264" = type { i8, %union.anon.265 }
%union.anon.265 = type { %"class.base::Lock" }
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.269", i8, i64, %class.scoped_refptr.270, %class.scoped_refptr.292 }
%"class.base::RepeatingCallback.269" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.270 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.271", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.281", i8, [7 x i8] }>
%"class.base::RefCounted.271" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.272 }
%class.scoped_refptr.272 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map.281" = type { %"class.std::__1::__tree.282" }
%"class.std::__1::__tree.282" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.283", %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%class.scoped_refptr.292 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.296 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.297 }
%class.scoped_refptr.297 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.311", [4 x i8], %"class.base::RepeatingCallback.312", %class.scoped_refptr.243, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.184", [4 x i8] }>
%"class.base::RefCountedThreadSafe.311" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.312" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.298 }
%class.scoped_refptr.298 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.299" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.303 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::MessagePortDescriptor" = type { %"class.mojo::ScopedHandleBase", %"class.base::UnguessableToken", i64 }
%"class.blink::Member.305" = type { %"class.blink::MemberBase.306" }
%"class.blink::MemberBase.306" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.307" = type { %"class.blink::MemberBase.308" }
%"class.blink::MemberBase.308" = type { %"class.blink::UserActivation"* }
%"class.blink::UserActivation" = type <{ %"class.blink::ScriptWrappable", %"class.blink::Member.309", i8, i8, [6 x i8] }>
%"class.blink::Member.309" = type { %"class.blink::MemberBase.310" }
%"class.blink::MemberBase.310" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::MessageEvent" = type <{ %"class.blink::Event", i32, [4 x i8], %"class.blink::WorldSafeV8Reference", %"class.blink::Member.326", %"class.WTF::String", %"class.blink::Member.430", %"class.blink::Member.436", i8, [7 x i8], %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.305", %"class.blink::Member.438", i8, [7 x i8], %"class.WTF::Vector.440", %"class.blink::Member.307", i8, [7 x i8], i64, i8, [7 x i8] }>
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.305", %"class.blink::Member.305", %"class.blink::Member.322", %"class.blink::Member.324", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.313" }
%"class.absl::optional.313" = type { %"class.absl::optional_internal::optional_data.314" }
%"class.absl::optional_internal::optional_data.314" = type { %"class.absl::optional_internal::optional_data_base.315" }
%"class.absl::optional_internal::optional_data_base.315" = type { %"class.absl::optional_internal::optional_data_dtor_base.316" }
%"class.absl::optional_internal::optional_data_dtor_base.316" = type { i8, %union.anon.317 }
%union.anon.317 = type { i64 }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::Event"* }
%"class.blink::Member.324" = type { %"class.blink::MemberBase.325" }
%"class.blink::MemberBase.325" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::UnpackedSerializedScriptValue"* }
%"class.blink::UnpackedSerializedScriptValue" = type { %class.scoped_refptr.330, %"class.blink::HeapVector.413", %"class.blink::HeapVector.422" }
%class.scoped_refptr.330 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.332", i64, %"class.WTF::Vector.336", %"class.WTF::Vector.341", %"class.WTF::Vector.347", %"class.WTF::Vector.365", %class.scoped_refptr.377, %"class.WTF::HashMap.386", %"class.WTF::Vector.391", %"class.WTF::Vector.336", %"class.WTF::Vector.397", %"class.WTF::HashMap.402", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.331" }
%"class.base::RefCountedThreadSafe.331" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { i8* }
%"class.WTF::Vector.341" = type { %"class.WTF::VectorBuffer.342" }
%"class.WTF::VectorBuffer.342" = type { %"class.WTF::VectorBufferBase.343", [8 x i8] }
%"class.WTF::VectorBufferBase.343" = type { %class.scoped_refptr.344*, i32, i32 }
%class.scoped_refptr.344 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.347" = type { %"class.WTF::VectorBuffer.348" }
%"class.WTF::VectorBuffer.348" = type { %"class.WTF::VectorBufferBase.349" }
%"class.WTF::VectorBufferBase.349" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.351", %"class.std::__1::unique_ptr.357" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.350 }
%class.scoped_refptr.350 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.365" = type { %"class.WTF::VectorBuffer.366" }
%"class.WTF::VectorBuffer.366" = type { %"class.WTF::VectorBufferBase.367" }
%"class.WTF::VectorBufferBase.367" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.368", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.368" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.371 }
%union.anon.371 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.scoped_refptr.377 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.378", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.380", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.385 }
%"class.WTF::RefCounted.378" = type { %"class.base::RefCounted.379" }
%"class.base::RefCounted.379" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.380" = type { %"class.absl::optional_internal::optional_data.381" }
%"class.absl::optional_internal::optional_data.381" = type { %"class.absl::optional_internal::optional_data_base.382" }
%"class.absl::optional_internal::optional_data_base.382" = type { %"class.absl::optional_internal::optional_data_dtor_base.383" }
%"class.absl::optional_internal::optional_data_dtor_base.383" = type { i8, %union.anon.384 }
%union.anon.384 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.385 = type { %"class.blink::SecurityOrigin"* }
%"class.WTF::HashMap.386" = type { %"class.WTF::HashTable.387" }
%"class.WTF::HashTable.387" = type <{ %"struct.WTF::KeyValuePair.390"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.390" = type opaque
%"class.WTF::Vector.391" = type { %"class.WTF::VectorBuffer.392" }
%"class.WTF::VectorBuffer.392" = type { %"class.WTF::VectorBufferBase.393" }
%"class.WTF::VectorBufferBase.393" = type { %"class.mojo::ScopedHandleBase.394"*, i32, i32 }
%"class.mojo::ScopedHandleBase.394" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.336" = type { %"class.WTF::VectorBuffer.337" }
%"class.WTF::VectorBuffer.337" = type { %"class.WTF::VectorBufferBase.338", [16 x i8] }
%"class.WTF::VectorBufferBase.338" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.397" = type { %"class.WTF::VectorBuffer.398" }
%"class.WTF::VectorBuffer.398" = type { %"class.WTF::VectorBufferBase.399" }
%"class.WTF::VectorBufferBase.399" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.402" = type { %"class.WTF::HashTable.403" }
%"class.WTF::HashTable.403" = type <{ %"struct.WTF::KeyValuePair.406"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.406" = type { i8**, %"class.std::__1::unique_ptr.407" }
%"class.std::__1::unique_ptr.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapVector.413" = type { %"class.WTF::Vector.416" }
%"class.WTF::Vector.416" = type { %"class.WTF::VectorBuffer.417" }
%"class.WTF::VectorBuffer.417" = type { %"class.WTF::VectorBufferBase.418" }
%"class.WTF::VectorBufferBase.418" = type { %"class.blink::Member.419"*, i32, i32 }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::HeapVector.422" = type { %"class.WTF::Vector.425" }
%"class.WTF::Vector.425" = type { %"class.WTF::VectorBuffer.426" }
%"class.WTF::VectorBuffer.426" = type { %"class.WTF::VectorBufferBase.427" }
%"class.WTF::VectorBufferBase.427" = type { %"class.blink::Member.428"*, i32, i32 }
%"class.blink::Member.428" = type opaque
%"class.blink::Member.430" = type { %"class.blink::MemberBase.431" }
%"class.blink::MemberBase.431" = type { %"class.blink::Blob"* }
%"class.blink::Blob" = type { %"class.blink::ScriptWrappable", %"class.blink::URLRegistrable", %"class.blink::ImageBitmapSource", %class.scoped_refptr.432 }
%"class.blink::URLRegistrable" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%class.scoped_refptr.432 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted.433", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote.435", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted.433" = type { %"class.base::RefCountedThreadSafe.434" }
%"class.base::RefCountedThreadSafe.434" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote.435" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.blink::Member.436" = type { %"class.blink::MemberBase.437" }
%"class.blink::MemberBase.437" = type { %"class.blink::DOMArrayBuffer"* }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::HeapVector"* }
%"class.WTF::Vector.440" = type { %"class.WTF::VectorBuffer.441" }
%"class.WTF::VectorBuffer.441" = type { %"class.WTF::VectorBufferBase.442" }
%"class.WTF::VectorBufferBase.442" = type { %"class.blink::MessagePortChannel"*, i32, i32 }
%"class.v8::internal::Isolate" = type opaque
%"class.blink::HeapVector.590" = type { %"class.WTF::Vector.593" }
%"class.WTF::Vector.593" = type { %"class.WTF::VectorBuffer.594" }
%"class.WTF::VectorBuffer.594" = type { %"class.WTF::VectorBufferBase.595" }
%"class.WTF::VectorBufferBase.595" = type { %"class.blink::Member.596"*, i32, i32 }
%"class.blink::Member.596" = type { %"class.blink::MemberBase.597" }
%"class.blink::MemberBase.597" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.637", i32, i8, [3 x i8], %"class.blink::HeapVector.639", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.647", %"class.blink::Member.649", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.658", %"class.blink::Member.664", %"class.blink::Member.666", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.600" }
%"class.blink::HeapHashMap.600" = type { %"class.WTF::HashMap.603" }
%"class.WTF::HashMap.603" = type { %"class.WTF::HashTable.604" }
%"class.WTF::HashTable.604" = type <{ %"struct.WTF::KeyValuePair.606"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.606" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.607" }
%"class.blink::Supplementable.607" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.608" }
%"class.blink::HeapHashMap.608" = type { %"class.WTF::HashMap.611" }
%"class.WTF::HashMap.611" = type { %"class.WTF::HashTable.612" }
%"class.WTF::HashTable.612" = type <{ %"struct.WTF::KeyValuePair.614"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.614" = type { i8*, %"class.blink::Member.615" }
%"class.blink::Member.615" = type { %"class.blink::MemberBase.616" }
%"class.blink::MemberBase.616" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.617" }
%"class.blink::Member.617" = type { %"class.blink::MemberBase.618" }
%"class.blink::MemberBase.618" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.377, %"class.std::__1::unique_ptr.619", %"class.std::__1::unique_ptr.619", %"class.std::__1::unique_ptr.625", %"class.std::__1::unique_ptr.625", %"class.blink::Member.631", i32, [4 x i8], %"class.WTF::HashSet.633", i32, i32 }
%"class.std::__1::unique_ptr.619" = type { %"class.std::__1::__compressed_pair.620" }
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.621" }
%"struct.std::__1::__compressed_pair_elem.621" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.631" = type { %"class.blink::MemberBase.632" }
%"class.blink::MemberBase.632" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.633" = type { %"class.WTF::HashTable.634" }
%"class.WTF::HashTable.634" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.637" = type { %"class.blink::MemberBase.638" }
%"class.blink::MemberBase.638" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.639" = type { %"class.WTF::Vector.642" }
%"class.WTF::Vector.642" = type { %"class.WTF::VectorBuffer.643" }
%"class.WTF::VectorBuffer.643" = type { %"class.WTF::VectorBufferBase.644" }
%"class.WTF::VectorBufferBase.644" = type { %"class.blink::Member.645"*, i32, i32 }
%"class.blink::Member.645" = type opaque
%"class.blink::Member.647" = type { %"class.blink::MemberBase.648" }
%"class.blink::MemberBase.648" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.649" = type { %"class.blink::MemberBase.650" }
%"class.blink::MemberBase.650" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.651", i32, i32 }
%"class.blink::HeapHashMap.651" = type { %"class.WTF::HashMap.654" }
%"class.WTF::HashMap.654" = type { %"class.WTF::HashTable.655" }
%"class.WTF::HashTable.655" = type <{ %"struct.WTF::KeyValuePair.657"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.657" = type opaque
%"class.std::__1::unique_ptr.658" = type { %"class.std::__1::__compressed_pair.659" }
%"class.std::__1::__compressed_pair.659" = type { %"struct.std::__1::__compressed_pair_elem.660" }
%"struct.std::__1::__compressed_pair_elem.660" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.664" = type { %"class.blink::MemberBase.665" }
%"class.blink::MemberBase.665" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.666" = type { %"class.blink::MemberBase.667" }
%"class.blink::MemberBase.667" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.v8::Boolean" = type { i8 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::Int32" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.v8::Array" = type { i8 }
%"class.blink::ScriptIterator" = type { %"class.v8::Isolate"*, %"class.v8::Local.177", %"class.v8::Local.180", %"class.v8::Local.192", %"class.v8::Local.192", i8, %"class.v8::MaybeLocal.589" }
%"class.v8::Local.177" = type { %"class.v8::Object"* }
%"class.v8::Local.180" = type { %"class.v8::Value"* }
%"class.v8::MaybeLocal.589" = type { %"class.v8::Value"* }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN5blink8bindings18ToV8HelperSequenceINS_15ScriptWrappableENS_10HeapVectorINS_6MemberIS2_EELj0EEEEEN2v810MaybeLocalINS7_5ValueEEEPNS_11ScriptStateERKT0_ = comdat any

$_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_ = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE = comdat any

$_ZN5blink17NativeValueTraitsINS_18IDLUSVStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_11MessagePortEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_11MessagePortEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_11MessagePortEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11MessagePortEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_11MessagePortEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11MessagePortEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11MessagePortEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11MessagePortEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [13 x i8] c"MessageEvent\00", align 1
@_ZN5blink7V8Event18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink14V8MessageEvent18wrapper_type_info_E = hidden constant %"struct.blink::WrapperTypeInfo" { i16 1, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)* @_ZN5blink14V8MessageEvent24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)* null, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), %"struct.blink::WrapperTypeInfo"* @_ZN5blink7V8Event18wrapper_type_info_E, i8 8 }, align 8
@_ZN5blink12MessageEvent18wrapper_type_info_E = hidden local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"* @_ZN5blink14V8MessageEvent18wrapper_type_info_E, align 8
@.ref.tmp = private constant %"class.v8::MemorySpan" zeroinitializer, align 8
@_ZZN5blink14V8MessageEvent30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable = internal constant [7 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_116v8_message_event24DataAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_116v8_message_event26OriginAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_116v8_message_event31LastEventIdAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_116v8_message_event26SourceAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_116v8_message_event25PortsAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_116v8_message_event34UserActivationAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_116v8_message_event29IsTrustedAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 100, i8 0 }], align 16
@.str.1 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"origin\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"lastEventId\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"source\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"ports\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"userActivation\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"isTrusted\00", align 1
@_ZZN5blink14V8MessageEvent30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable = internal constant [1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_116v8_message_event33InitMessageEventOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }], align 16
@.str.8 = private unnamed_addr constant [17 x i8] c"initMessageEvent\00", align 1
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.10 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.11 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZZN5blink12_GLOBAL__N_116v8_message_event24DataAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEEE31kPrivatePropertyCachedAttribute = internal constant %"class.blink::V8PrivateProperty::SymbolKey" zeroinitializer, align 1
@.str.12 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.14 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@_ZZN5blink12_GLOBAL__N_116v8_message_event25PortsAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEEE31kPrivatePropertyCachedAttribute = internal constant %"class.blink::V8PrivateProperty::SymbolKey" zeroinitializer, align 1
@.str.15 = private unnamed_addr constant [65 x i8] c"../../third_party/blink/renderer/bindings/core/v8/to_v8_traits.h\00", align 1
@.str.16 = private unnamed_addr constant [17 x i8] c"script_wrappable\00", align 1
@.str.17 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN5blink11EventTarget18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.18 = private unnamed_addr constant [54 x i8] c"The provided value cannot be converted to a sequence.\00", align 1
@.str.19 = private unnamed_addr constant [53 x i8] c"The object must have a callable @@iterator property.\00", align 1
@.str.20 = private unnamed_addr constant [38 x i8] c"Array length exceeds supported limit.\00", align 1
@.str.21 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.22 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.23 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.24 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_11MessagePortEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [163 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::MessagePort>, WTF::VectorTraits<blink::Member<blink::MessagePort> > >]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11MessagePort18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.25 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.26 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14V8MessageEvent24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*) #0 align 2 {
  %4 = alloca %"class.base::span", align 8
  %5 = alloca %"class.base::span.182", align 8
  %6 = bitcast %"class.v8::Template"* %2 to %"class.v8::FunctionTemplate"*
  %7 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"* %6) #8
  %8 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"* %6) #8
  %9 = tail call %"class.v8::Template"* @_ZNK5blink15WrapperTypeInfo18GetV8ClassTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldE(%"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink7V8Event18wrapper_type_info_E, %"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1) #8
  %10 = bitcast %"class.v8::Template"* %9 to %"class.v8::FunctionTemplate"*
  tail call void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"* %0, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink14V8MessageEvent18wrapper_type_info_E, %"class.v8::ObjectTemplate"* %7, %"class.v8::ObjectTemplate"* %8, %"class.v8::FunctionTemplate"* %6, %"class.v8::FunctionTemplate"* %10) #8
  tail call void @_ZN2v816FunctionTemplate14SetCallHandlerEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS2_EENS_14SideEffectTypeERKNS_10MemorySpanIKNS_9CFunctionEEE(%"class.v8::FunctionTemplate"* %6, void (%"class.v8::FunctionCallbackInfo"*)* nonnull @_ZN5blink12_GLOBAL__N_116v8_message_event19ConstructorCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, %"class.v8::Value"* null, i32 0, %"class.v8::MemorySpan"* nonnull dereferenceable(16) @.ref.tmp) #8
  tail call void @_ZN2v816FunctionTemplate9SetLengthEi(%"class.v8::FunctionTemplate"* %6, i32 1) #8
  %11 = bitcast %"class.v8::ObjectTemplate"* %7 to %"class.v8::Template"*
  %12 = bitcast %"class.v8::ObjectTemplate"* %8 to %"class.v8::Template"*
  %13 = bitcast %"class.base::span"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13)
  %14 = bitcast %"class.base::span.182"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14)
  %15 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %6) #8
  %16 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 0, i32 0
  store i64 7, i64* %16, align 8
  %17 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([7 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink14V8MessageEvent30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %17, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %11, %"class.v8::Template"* %12, %"class.v8::Template"* %2, %"class.v8::Signature"* %15, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %4) #8
  %18 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %5, i64 0, i32 0, i32 0
  store i64 1, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %5, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink14V8MessageEvent30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %19, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %11, %"class.v8::Template"* %12, %"class.v8::Template"* %2, %"class.v8::Signature"* %15, %"class.base::span.182"* nonnull byval(%"class.base::span.182") align 8 %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::Template"* @_ZNK5blink15WrapperTypeInfo18GetV8ClassTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldE(%"struct.blink::WrapperTypeInfo"*, %"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::ObjectTemplate"*, %"class.v8::ObjectTemplate"*, %"class.v8::FunctionTemplate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare void @_ZN2v816FunctionTemplate14SetCallHandlerEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS2_EENS_14SideEffectTypeERKNS_10MemorySpanIKNS_9CFunctionEEE(%"class.v8::FunctionTemplate"*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::Value"*, i32, %"class.v8::MemorySpan"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_116v8_message_event19ConstructorCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds i64, i64* %8, i64 1
  %10 = bitcast i64* %9 to %"class.v8::Isolate"**
  %11 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %10, align 8
  %12 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %12) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 56, i1 false)
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 5, i16* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %15, align 2
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 3
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  %19 = bitcast i8** %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #8
  store %"class.v8::Isolate"* %11, %"class.v8::Isolate"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %22 = bitcast %"class.WTF::StringImpl"** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #8
  %23 = getelementptr inbounds i64, i64* %8, i64 5
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, 3
  %26 = icmp eq i64 %25, 1
  br i1 %26, label %27, label %64

27:                                               ; preds = %1
  %28 = add i64 %24, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = and i64 %24, -4294967296
  %32 = zext i32 %30 to i64
  %33 = or i64 %31, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 67
  br i1 %37, label %38, label %64

38:                                               ; preds = %27
  %39 = add i64 %24, 23
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = and i32 %41, -2
  %43 = icmp eq i32 %42, 10
  br i1 %43, label %44, label %64

44:                                               ; preds = %38
  %45 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #8
  %46 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages27ConstructorCalledAsFunctionEv() #8
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %46, %"class.WTF::StringImpl"** %47, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #8
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #8
  br label %63

63:                                               ; preds = %44, %59, %62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #8
  br label %259

64:                                               ; preds = %38, %27, %1
  %65 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %66 = load i64*, i64** %65, align 8
  %67 = getelementptr inbounds i64, i64* %66, i64 -1
  %68 = bitcast i64* %67 to %"class.v8::Object"*
  %69 = ptrtoint %"class.v8::Isolate"* %11 to i64
  %70 = add i64 %69, 8
  %71 = inttoptr i64 %70 to %"class.blink::V8PerIsolateData"**
  %72 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %72, i64 0, i32 8
  %74 = load i8, i8* %73, align 8, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %82

76:                                               ; preds = %64
  %77 = getelementptr inbounds i64, i64* %8, i64 3
  %78 = icmp eq i64* %67, null
  %79 = getelementptr inbounds i64, i64* %8, i64 2
  %80 = select i1 %78, i64* %79, i64* %67, !prof !3
  %81 = load i64, i64* %80, align 8
  store i64 %81, i64* %77, align 8
  br label %259

82:                                               ; preds = %64
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %84 = load i32, i32* %83, align 8
  %85 = icmp slt i32 %84, 1
  br i1 %85, label %86, label %106, !prof !3

86:                                               ; preds = %82
  %87 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #8
  %88 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %84) #8
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %88, %"class.WTF::StringImpl"** %89, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #8
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %101

99:                                               ; preds = %92
  %100 = add i32 %98, -1
  store i32 %100, i32* %97, align 4
  br label %101

101:                                              ; preds = %99, %92
  %102 = phi i32 [ %100, %99 ], [ %98, %92 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #8
  br label %105

105:                                              ; preds = %86, %101, %104
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #8
  br label %259

106:                                              ; preds = %82
  %107 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %107) #8
  %108 = bitcast i64* %66 to %"class.v8::Value"*
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %5, %"class.v8::Isolate"* %11, %"class.v8::Value"* %108, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #8
  %109 = load i32, i32* %20, align 8
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %236

111:                                              ; preds = %106
  %112 = load i32, i32* %83, align 8
  %113 = icmp sgt i32 %112, 1
  br i1 %113, label %120, label %114

114:                                              ; preds = %111
  %115 = load i64*, i64** %7, align 8
  %116 = getelementptr inbounds i64, i64* %115, i64 1
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %117, 160
  %119 = inttoptr i64 %118 to %"class.v8::Value"*
  br label %124

120:                                              ; preds = %111
  %121 = load i64*, i64** %65, align 8
  %122 = getelementptr inbounds i64, i64* %121, i64 1
  %123 = bitcast i64* %122 to %"class.v8::Value"*
  br label %124

124:                                              ; preds = %114, %120
  %125 = phi %"class.v8::Value"* [ %119, %114 ], [ %123, %120 ]
  %126 = bitcast %"class.v8::Value"* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = and i64 %127, 3
  %129 = icmp eq i64 %128, 1
  br i1 %129, label %130, label %154

130:                                              ; preds = %124
  %131 = add i64 %127, -1
  %132 = inttoptr i64 %131 to i32*
  %133 = load i32, i32* %132, align 4
  %134 = and i64 %127, -4294967296
  %135 = zext i32 %133 to i64
  %136 = or i64 %134, %135
  %137 = add i64 %136, 7
  %138 = inttoptr i64 %137 to i16*
  %139 = load i16, i16* %138, align 2
  %140 = icmp eq i16 %139, 67
  br i1 %140, label %141, label %154

141:                                              ; preds = %130
  %142 = add i64 %127, 23
  %143 = inttoptr i64 %142 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = and i32 %144, -2
  %146 = icmp eq i32 %145, 10
  br i1 %146, label %147, label %154

147:                                              ; preds = %141
  %148 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 96) #8
  %149 = bitcast i8* %148 to %"class.blink::MessageEventInit"*
  call void @_ZN5blink16MessageEventInitC1Ev(%"class.blink::MessageEventInit"* %149) #8
  %150 = getelementptr inbounds i8, i8* %148, i64 -4
  %151 = bitcast i8* %150 to i16*
  %152 = load atomic i16, i16* %151 monotonic, align 2
  %153 = or i16 %152, 1
  store atomic i16 %153, i16* %151 release, align 2
  br label %170

154:                                              ; preds = %130, %124, %141
  br i1 %113, label %161, label %155

155:                                              ; preds = %154
  %156 = load i64*, i64** %7, align 8
  %157 = getelementptr inbounds i64, i64* %156, i64 1
  %158 = load i64, i64* %157, align 8
  %159 = add i64 %158, 160
  %160 = inttoptr i64 %159 to %"class.v8::Value"*
  br label %165

161:                                              ; preds = %154
  %162 = load i64*, i64** %65, align 8
  %163 = getelementptr inbounds i64, i64* %162, i64 1
  %164 = bitcast i64* %163 to %"class.v8::Value"*
  br label %165

165:                                              ; preds = %155, %161
  %166 = phi %"class.v8::Value"* [ %160, %155 ], [ %164, %161 ]
  %167 = call %"class.blink::MessageEventInit"* @_ZN5blink17NativeValueTraitsINS_16MessageEventInitEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %166, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #8
  %168 = load i32, i32* %20, align 8
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %236

170:                                              ; preds = %165, %147
  %171 = phi %"class.blink::MessageEventInit"* [ %149, %147 ], [ %167, %165 ]
  %172 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172) #8
  %173 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 0, i32 0
  %174 = load %"class.v8::String"*, %"class.v8::String"** %173, align 8
  %175 = icmp eq %"class.v8::String"* %174, null
  br i1 %175, label %178, label %176, !prof !3

176:                                              ; preds = %170
  %177 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %174, i32 0) #8
  br label %205

178:                                              ; preds = %170
  %179 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %179, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %205, label %182

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 acquire, align 4
  %185 = and i32 %184, 4
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %203, label %187

187:                                              ; preds = %182
  %188 = load atomic i32, i32* %183 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %205

191:                                              ; preds = %187
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %193 = load i32, i32* %192, align 4
  %194 = zext i32 %193 to i33
  %195 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %194, i33 1) #8
  %196 = extractvalue { i33, i1 } %195, 1
  %197 = extractvalue { i33, i1 } %195, 0
  %198 = icmp slt i33 %197, 0
  %199 = or i1 %196, %198
  br i1 %199, label %200, label %201, !prof !3

200:                                              ; preds = %191
  call void @llvm.trap() #8
  unreachable

201:                                              ; preds = %191
  %202 = trunc i33 %197 to i32
  store i32 %202, i32* %192, align 4
  br label %205

203:                                              ; preds = %182
  %204 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %180) #8
  br label %205

205:                                              ; preds = %176, %178, %187, %201, %203
  %206 = phi %"class.WTF::StringImpl"* [ %177, %176 ], [ %204, %203 ], [ %180, %187 ], [ %180, %201 ], [ null, %178 ]
  %207 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %206, %"class.WTF::StringImpl"** %207, align 8
  %208 = call %"class.blink::MessageEvent"* @_ZN5blink12MessageEvent6CreateERKN3WTF12AtomicStringEPKNS_16MessageEventInitERNS_14ExceptionStateE(%"class.WTF::AtomicString"* nonnull dereferenceable(8) %6, %"class.blink::MessageEventInit"* %171, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #8
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %209, null
  br i1 %210, label %224, label %211

211:                                              ; preds = %205
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load atomic i32, i32* %212 monotonic, align 4
  %214 = and i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  br i1 %215, label %218, label %220

218:                                              ; preds = %211
  %219 = add i32 %217, -1
  store i32 %219, i32* %216, align 4
  br label %220

220:                                              ; preds = %218, %211
  %221 = phi i32 [ %219, %218 ], [ %217, %211 ]
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %220
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %209) #8
  br label %224

224:                                              ; preds = %205, %220, %223
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172) #8
  %225 = load i32, i32* %20, align 8
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %236

227:                                              ; preds = %224
  %228 = call %"class.v8::Object"* @_ZN5blink12MessageEvent20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::MessageEvent"* %208, %"class.v8::Isolate"* %11, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink14V8MessageEvent18wrapper_type_info_E, %"class.v8::Object"* %68) #8
  %229 = load i64*, i64** %7, align 8
  %230 = getelementptr inbounds i64, i64* %229, i64 3
  %231 = icmp eq %"class.v8::Object"* %228, null
  %232 = bitcast %"class.v8::Object"* %228 to i64*
  %233 = getelementptr inbounds i64, i64* %229, i64 2
  %234 = select i1 %231, i64* %233, i64* %232, !prof !3
  %235 = load i64, i64* %234, align 8
  store i64 %235, i64* %230, align 8
  br label %236

236:                                              ; preds = %224, %165, %106, %227
  %237 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %238 = load i8*, i8** %237, align 8
  store i8* null, i8** %237, align 8
  %239 = icmp eq i8* %238, null
  br i1 %239, label %241, label %240

240:                                              ; preds = %236
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %238) #8
  br label %241

241:                                              ; preds = %240, %236
  %242 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %243 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %242, align 8
  %244 = icmp eq %"class.WTF::StringImpl"* %243, null
  br i1 %244, label %258, label %245

245:                                              ; preds = %241
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = load atomic i32, i32* %246 monotonic, align 4
  %248 = and i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 0
  %251 = load i32, i32* %250, align 4
  br i1 %249, label %252, label %254

252:                                              ; preds = %245
  %253 = add i32 %251, -1
  store i32 %253, i32* %250, align 4
  br label %254

254:                                              ; preds = %252, %245
  %255 = phi i32 [ %253, %252 ], [ %251, %245 ]
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %258

257:                                              ; preds = %254
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %243) #8
  br label %258

258:                                              ; preds = %241, %254, %257
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %107) #8
  br label %259

259:                                              ; preds = %76, %105, %258, %63
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %260 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %261 = load i64*, i64** %260, align 8
  %262 = icmp eq i64* %261, null
  br i1 %262, label %272, label %263

263:                                              ; preds = %259
  %264 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %265 = bitcast %"class.v8::Isolate"* %264 to %"class.v8::internal::Isolate"*
  %266 = load i64, i64* %261, align 8
  %267 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %265, i64 %266) #8
  %268 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %264) #8
  br i1 %268, label %272, label %269

269:                                              ; preds = %263
  %270 = bitcast i64* %267 to %"class.v8::Value"*
  %271 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %264, %"class.v8::Value"* %270) #8
  br label %272

272:                                              ; preds = %269, %263, %259
  %273 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %274 = icmp eq %"class.WTF::StringImpl"* %273, null
  br i1 %274, label %288, label %275

275:                                              ; preds = %272
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %273, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %277 = load atomic i32, i32* %276 monotonic, align 4
  %278 = and i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %273, i64 0, i32 0
  %281 = load i32, i32* %280, align 4
  br i1 %279, label %282, label %284

282:                                              ; preds = %275
  %283 = add i32 %281, -1
  store i32 %283, i32* %280, align 4
  br label %284

284:                                              ; preds = %282, %275
  %285 = phi i32 [ %283, %282 ], [ %281, %275 ]
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %288

287:                                              ; preds = %284
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %273) #8
  br label %288

288:                                              ; preds = %272, %284, %287
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %12) #8
  ret void
}

declare void @_ZN2v816FunctionTemplate9SetLengthEi(%"class.v8::FunctionTemplate"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14V8MessageEvent30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::span", align 8
  %7 = alloca %"class.base::span.182", align 8
  %8 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %9 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %8) #8
  %10 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  store i64 7, i64* %10, align 8
  %11 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([7 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink14V8MessageEvent30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %11, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %9, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %6) #8
  %12 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %7, i64 0, i32 0, i32 0
  store i64 1, i64* %12, align 8
  %13 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %7, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink14V8MessageEvent30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %13, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %9, %"class.base::span.182"* nonnull byval(%"class.base::span.182") align 8 %7) #8
  ret void
}

declare %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_116v8_message_event24DataAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ScriptValue", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = bitcast i64* %5 to %"class.v8::Isolate"**
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 -1
  %11 = bitcast i64* %10 to %"class.v8::Object"*
  %12 = load i64, i64* %10, align 8
  %13 = add i64 %12, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i64 %12, -4294967296
  %17 = zext i32 %15 to i64
  %18 = or i64 %16, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load i16, i16* %20, align 2
  switch i16 %21, label %26 [
    i16 1057, label %22
    i16 1056, label %22
    i16 1040, label %22
  ]

22:                                               ; preds = %1, %1, %1
  %23 = add i64 %12, 19
  %24 = inttoptr i64 %23 to i8**
  %25 = load i8*, i8** %24, align 1
  br label %28

26:                                               ; preds = %1
  %27 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %11, i32 1) #8
  br label %28

28:                                               ; preds = %22, %26
  %29 = phi i8* [ %25, %22 ], [ %27, %26 ]
  %30 = bitcast i8* %29 to %"class.blink::MessageEvent"*
  %31 = tail call { %"class.v8::Private"*, %"class.v8::Isolate"* } @_ZN5blink17V8PrivateProperty9GetSymbolEPN2v87IsolateERKNS0_9SymbolKeyE(%"class.v8::Isolate"* %7, %"class.blink::V8PrivateProperty::SymbolKey"* nonnull dereferenceable(1) @_ZZN5blink12_GLOBAL__N_116v8_message_event24DataAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEEE31kPrivatePropertyCachedAttribute) #8
  %32 = extractvalue { %"class.v8::Private"*, %"class.v8::Isolate"* } %31, 0
  %33 = extractvalue { %"class.v8::Private"*, %"class.v8::Isolate"* } %31, 1
  %34 = getelementptr inbounds i8, i8* %29, i64 160
  %35 = load i8, i8* %34, align 8, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %66

37:                                               ; preds = %28
  %38 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %33) #8
  %39 = tail call %"class.v8::Value"* @_ZN2v86Object10GetPrivateENS_5LocalINS_7ContextEEENS1_INS_7PrivateEEE(%"class.v8::Object"* %11, %"class.v8::Context"* %38, %"class.v8::Private"* %32) #8
  %40 = icmp eq %"class.v8::Value"* %39, null
  br i1 %40, label %117, label %41

41:                                               ; preds = %37
  %42 = bitcast %"class.v8::Value"* %39 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = and i64 %43, 3
  %45 = icmp eq i64 %44, 1
  br i1 %45, label %46, label %63

46:                                               ; preds = %41
  %47 = add i64 %43, -1
  %48 = inttoptr i64 %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = and i64 %43, -4294967296
  %51 = zext i32 %49 to i64
  %52 = or i64 %50, %51
  %53 = add i64 %52, 7
  %54 = inttoptr i64 %53 to i16*
  %55 = load i16, i16* %54, align 2
  %56 = icmp eq i16 %55, 67
  br i1 %56, label %57, label %63

57:                                               ; preds = %46
  %58 = add i64 %43, 23
  %59 = inttoptr i64 %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = and i32 %60, -2
  %62 = icmp eq i32 %61, 10
  br i1 %62, label %66, label %63

63:                                               ; preds = %46, %41, %57
  %64 = load i64*, i64** %3, align 8
  %65 = getelementptr inbounds i64, i64* %64, i64 3
  store i64 %43, i64* %65, align 8
  br label %117

66:                                               ; preds = %28, %57
  %67 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %11) #8
  %68 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %67)
  %69 = bitcast %"class.blink::ScriptValue"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #8
  call void @_ZN5blink12MessageEvent4dataEPNS_11ScriptStateE(%"class.blink::ScriptValue"* nonnull sret %2, %"class.blink::MessageEvent"* %30, %"class.blink::ScriptState"* %68) #8
  %70 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %2) #8
  %71 = load i64*, i64** %3, align 8
  %72 = getelementptr inbounds i64, i64* %71, i64 3
  %73 = icmp eq %"class.v8::Value"* %70, null
  %74 = bitcast %"class.v8::Value"* %70 to i64*
  %75 = getelementptr inbounds i64, i64* %71, i64 2
  %76 = select i1 %73, i64* %75, i64* %74, !prof !3
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %72, align 8
  %78 = load i64*, i64** %3, align 8
  %79 = getelementptr inbounds i64, i64* %78, i64 3
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds i64, i64* %78, i64 1
  %82 = bitcast i64* %81 to %"class.v8::Isolate"**
  %83 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %82, align 8
  %84 = ptrtoint %"class.v8::Isolate"* %83 to i64
  %85 = add i64 %84, 168
  %86 = inttoptr i64 %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = icmp eq i64 %80, %87
  br i1 %88, label %89, label %92

89:                                               ; preds = %66
  %90 = add i64 %84, 160
  %91 = inttoptr i64 %90 to %"class.v8::Value"*
  br label %98

92:                                               ; preds = %66
  %93 = icmp eq i64* %79, null
  br i1 %93, label %98, label %94

94:                                               ; preds = %92
  %95 = bitcast %"class.v8::Isolate"* %83 to %"class.v8::internal::Isolate"*
  %96 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %95, i64 %80) #8
  %97 = bitcast i64* %96 to %"class.v8::Value"*
  br label %98

98:                                               ; preds = %89, %92, %94
  %99 = phi %"class.v8::Value"* [ %91, %89 ], [ %97, %94 ], [ null, %92 ]
  %100 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %33) #8
  %101 = call i16 @_ZN2v86Object10SetPrivateENS_5LocalINS_7ContextEEENS1_INS_7PrivateEEENS1_INS_5ValueEEE(%"class.v8::Object"* %11, %"class.v8::Context"* %100, %"class.v8::Private"* %32, %"class.v8::Value"* %99) #8
  %102 = trunc i16 %101 to i8
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %104, label %105, !prof !3

104:                                              ; preds = %98
  call void @_ZN2v82V817FromJustIsNothingEv() #8
  br label %105

105:                                              ; preds = %98, %104
  %106 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %2, i64 0, i32 1, i32 1, i32 0
  %107 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %106, align 8
  %108 = icmp eq %"class.blink::DOMWrapperWorld"* %107, null
  br i1 %108, label %116, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %107, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %110) #8
  %111 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %107, i64 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %116

114:                                              ; preds = %109
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %107) #8
  %115 = bitcast %"class.blink::DOMWrapperWorld"* %107 to i8*
  call void @free(i8* %115) #8
  br label %116

116:                                              ; preds = %105, %109, %114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #8
  br label %117

117:                                              ; preds = %37, %63, %116
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_116v8_message_event26OriginAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #8
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 168
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 1
  %28 = bitcast i8* %24 to %"class.WTF::StringImpl"**
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %37

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %26, i64 3
  %33 = load i64, i64* %27, align 8
  %34 = add i64 %33, 200
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %32, align 8
  br label %56

37:                                               ; preds = %22
  %38 = load i64, i64* %27, align 8
  %39 = add i64 %38, 8
  %40 = inttoptr i64 %39 to %"class.blink::V8PerIsolateData"**
  %41 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %41, i64 0, i32 5, i32 0, i32 0, i32 0
  %43 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %42, align 8
  %44 = getelementptr inbounds i64, i64* %26, i64 3
  %45 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %43, i64 0, i32 3, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, %29
  br i1 %47, label %48, label %55

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %43, i64 0, i32 1, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %48
  %53 = inttoptr i64 %50 to i64*
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %44, align 8
  br label %56

55:                                               ; preds = %37
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %43, i64* %44, %"class.WTF::StringImpl"* nonnull %29) #8
  br label %56

56:                                               ; preds = %31, %48, %52, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_116v8_message_event31LastEventIdAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #8
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 176
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 1
  %28 = bitcast i8* %24 to %"class.WTF::StringImpl"**
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %37

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %26, i64 3
  %33 = load i64, i64* %27, align 8
  %34 = add i64 %33, 200
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %32, align 8
  br label %56

37:                                               ; preds = %22
  %38 = load i64, i64* %27, align 8
  %39 = add i64 %38, 8
  %40 = inttoptr i64 %39 to %"class.blink::V8PerIsolateData"**
  %41 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %41, i64 0, i32 5, i32 0, i32 0, i32 0
  %43 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %42, align 8
  %44 = getelementptr inbounds i64, i64* %26, i64 3
  %45 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %43, i64 0, i32 3, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, %29
  br i1 %47, label %48, label %55

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %43, i64 0, i32 1, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %48
  %53 = inttoptr i64 %50 to i64*
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %44, align 8
  br label %56

55:                                               ; preds = %37
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %43, i64* %44, %"class.WTF::StringImpl"* nonnull %29) #8
  br label %56

56:                                               ; preds = %31, %48, %52, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_116v8_message_event26SourceAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #8
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 184
  %25 = bitcast i8* %24 to %"class.blink::EventTarget"**
  %26 = load %"class.blink::EventTarget"*, %"class.blink::EventTarget"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::EventTarget", %"class.blink::EventTarget"* %26, i64 0, i32 0
  %28 = icmp eq %"class.blink::EventTarget"* %26, null
  %29 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds i64, i64* %30, i64 3
  br i1 %28, label %32, label %38, !prof !3

32:                                               ; preds = %22
  %33 = getelementptr inbounds i64, i64* %30, i64 1
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, 176
  %36 = inttoptr i64 %35 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %31, align 8
  br label %61

38:                                               ; preds = %22
  %39 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %40 = load i64*, i64** %2, align 8
  %41 = getelementptr inbounds i64, i64* %40, i64 -1
  %42 = bitcast i64* %41 to %"class.v8::Object"*
  %43 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %31, %"class.blink::ScriptWrappable"* nonnull %27, %"class.v8::Object"* %42, %"class.blink::ScriptWrappable"* %39) #8
  br i1 %43, label %61, label %44

44:                                               ; preds = %38
  %45 = load i64*, i64** %2, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = bitcast i64* %46 to %"class.v8::Object"*
  %48 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %47) #8
  %49 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %48) #8
  %50 = bitcast %"class.blink::EventTarget"* %26 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %51 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %50, align 8
  %52 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %51, i64 7
  %53 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %52, align 8
  %54 = tail call %"class.v8::Value"* %53(%"class.blink::ScriptWrappable"* nonnull %27, %"class.blink::ScriptState"* %49) #8
  %55 = icmp eq %"class.v8::Value"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %44
  %57 = load i64*, i64** %29, align 8
  %58 = getelementptr inbounds i64, i64* %57, i64 3
  %59 = bitcast %"class.v8::Value"* %54 to i64*
  %60 = load i64, i64* %59, align 8
  store i64 %60, i64* %58, align 8
  br label %61

61:                                               ; preds = %32, %38, %44, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_116v8_message_event25PortsAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::HeapVector", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = bitcast i64* %5 to %"class.v8::Isolate"**
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 -1
  %11 = bitcast i64* %10 to %"class.v8::Object"*
  %12 = load i64, i64* %10, align 8
  %13 = add i64 %12, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i64 %12, -4294967296
  %17 = zext i32 %15 to i64
  %18 = or i64 %16, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load i16, i16* %20, align 2
  switch i16 %21, label %26 [
    i16 1057, label %22
    i16 1056, label %22
    i16 1040, label %22
  ]

22:                                               ; preds = %1, %1, %1
  %23 = add i64 %12, 19
  %24 = inttoptr i64 %23 to i8**
  %25 = load i8*, i8** %24, align 1
  br label %28

26:                                               ; preds = %1
  %27 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %11, i32 1) #8
  br label %28

28:                                               ; preds = %22, %26
  %29 = phi i8* [ %25, %22 ], [ %27, %26 ]
  %30 = bitcast i8* %29 to %"class.blink::MessageEvent"*
  %31 = tail call { %"class.v8::Private"*, %"class.v8::Isolate"* } @_ZN5blink17V8PrivateProperty9GetSymbolEPN2v87IsolateERKNS0_9SymbolKeyE(%"class.v8::Isolate"* %7, %"class.blink::V8PrivateProperty::SymbolKey"* nonnull dereferenceable(1) @_ZZN5blink12_GLOBAL__N_116v8_message_event25PortsAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEEE31kPrivatePropertyCachedAttribute) #8
  %32 = extractvalue { %"class.v8::Private"*, %"class.v8::Isolate"* } %31, 0
  %33 = extractvalue { %"class.v8::Private"*, %"class.v8::Isolate"* } %31, 1
  %34 = getelementptr inbounds i8, i8* %29, i64 200
  %35 = load i8, i8* %34, align 8, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %66

37:                                               ; preds = %28
  %38 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %33) #8
  %39 = tail call %"class.v8::Value"* @_ZN2v86Object10GetPrivateENS_5LocalINS_7ContextEEENS1_INS_7PrivateEEE(%"class.v8::Object"* %11, %"class.v8::Context"* %38, %"class.v8::Private"* %32) #8
  %40 = icmp eq %"class.v8::Value"* %39, null
  br i1 %40, label %120, label %41

41:                                               ; preds = %37
  %42 = bitcast %"class.v8::Value"* %39 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = and i64 %43, 3
  %45 = icmp eq i64 %44, 1
  br i1 %45, label %46, label %63

46:                                               ; preds = %41
  %47 = add i64 %43, -1
  %48 = inttoptr i64 %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = and i64 %43, -4294967296
  %51 = zext i32 %49 to i64
  %52 = or i64 %50, %51
  %53 = add i64 %52, 7
  %54 = inttoptr i64 %53 to i16*
  %55 = load i16, i16* %54, align 2
  %56 = icmp eq i16 %55, 67
  br i1 %56, label %57, label %63

57:                                               ; preds = %46
  %58 = add i64 %43, 23
  %59 = inttoptr i64 %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = and i32 %60, -2
  %62 = icmp eq i32 %61, 10
  br i1 %62, label %66, label %63

63:                                               ; preds = %46, %41, %57
  %64 = load i64*, i64** %3, align 8
  %65 = getelementptr inbounds i64, i64* %64, i64 3
  store i64 %43, i64* %65, align 8
  br label %120

66:                                               ; preds = %28, %57
  %67 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %11) #8
  %68 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %67)
  %69 = bitcast %"class.blink::HeapVector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #8
  call void @_ZN5blink12MessageEvent5portsEv(%"class.blink::HeapVector"* nonnull sret %2, %"class.blink::MessageEvent"* %30) #8
  %70 = bitcast %"class.blink::HeapVector"* %2 to %"class.blink::HeapVector.590"*
  %71 = call %"class.v8::Value"* @_ZN5blink8bindings18ToV8HelperSequenceINS_15ScriptWrappableENS_10HeapVectorINS_6MemberIS2_EELj0EEEEEN2v810MaybeLocalINS7_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"* %68, %"class.blink::HeapVector.590"* nonnull dereferenceable(16) %70) #8
  %72 = icmp eq %"class.v8::Value"* %71, null
  br i1 %72, label %119, label %73

73:                                               ; preds = %66
  %74 = bitcast %"class.v8::Value"* %71 to %"class.v8::Object"*
  %75 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %68, i64 0, i32 1, i32 0, i32 0, i32 0
  %76 = load %"class.v8::Context"*, %"class.v8::Context"** %75, align 8
  %77 = icmp eq %"class.v8::Context"* %76, null
  br i1 %77, label %85, label %78

78:                                               ; preds = %73
  %79 = bitcast %"class.blink::ScriptState"* %68 to %"class.v8::internal::Isolate"**
  %80 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %79, align 8
  %81 = bitcast %"class.v8::Context"* %76 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %80, i64 %82) #8
  %84 = bitcast i64* %83 to %"class.v8::Context"*
  br label %85

85:                                               ; preds = %73, %78
  %86 = phi %"class.v8::Context"* [ %84, %78 ], [ null, %73 ]
  %87 = call i16 @_ZN2v86Object17SetIntegrityLevelENS_5LocalINS_7ContextEEENS_14IntegrityLevelE(%"class.v8::Object"* nonnull %74, %"class.v8::Context"* %86, i32 0) #8
  %88 = load i64*, i64** %3, align 8
  %89 = getelementptr inbounds i64, i64* %88, i64 3
  %90 = bitcast %"class.v8::Value"* %71 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %89, align 8
  %92 = load i64*, i64** %3, align 8
  %93 = getelementptr inbounds i64, i64* %92, i64 3
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds i64, i64* %92, i64 1
  %96 = bitcast i64* %95 to %"class.v8::Isolate"**
  %97 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %96, align 8
  %98 = ptrtoint %"class.v8::Isolate"* %97 to i64
  %99 = add i64 %98, 168
  %100 = inttoptr i64 %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = icmp eq i64 %94, %101
  br i1 %102, label %103, label %106

103:                                              ; preds = %85
  %104 = add i64 %98, 160
  %105 = inttoptr i64 %104 to %"class.v8::Value"*
  br label %112

106:                                              ; preds = %85
  %107 = icmp eq i64* %93, null
  br i1 %107, label %112, label %108

108:                                              ; preds = %106
  %109 = bitcast %"class.v8::Isolate"* %97 to %"class.v8::internal::Isolate"*
  %110 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %109, i64 %94) #8
  %111 = bitcast i64* %110 to %"class.v8::Value"*
  br label %112

112:                                              ; preds = %103, %106, %108
  %113 = phi %"class.v8::Value"* [ %105, %103 ], [ %111, %108 ], [ null, %106 ]
  %114 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %33) #8
  %115 = call i16 @_ZN2v86Object10SetPrivateENS_5LocalINS_7ContextEEENS1_INS_7PrivateEEENS1_INS_5ValueEEE(%"class.v8::Object"* %11, %"class.v8::Context"* %114, %"class.v8::Private"* %32, %"class.v8::Value"* %113) #8
  %116 = trunc i16 %115 to i8
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %118, label %119, !prof !3

118:                                              ; preds = %112
  call void @_ZN2v82V817FromJustIsNothingEv() #8
  br label %119

119:                                              ; preds = %66, %118, %112
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #8
  br label %120

120:                                              ; preds = %37, %63, %119
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_116v8_message_event34UserActivationAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #8
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 224
  %25 = bitcast i8* %24 to %"class.blink::UserActivation"**
  %26 = load %"class.blink::UserActivation"*, %"class.blink::UserActivation"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::UserActivation", %"class.blink::UserActivation"* %26, i64 0, i32 0
  %28 = icmp eq %"class.blink::UserActivation"* %26, null
  %29 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds i64, i64* %30, i64 3
  br i1 %28, label %32, label %38, !prof !3

32:                                               ; preds = %22
  %33 = getelementptr inbounds i64, i64* %30, i64 1
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, 176
  %36 = inttoptr i64 %35 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %31, align 8
  br label %61

38:                                               ; preds = %22
  %39 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %40 = load i64*, i64** %2, align 8
  %41 = getelementptr inbounds i64, i64* %40, i64 -1
  %42 = bitcast i64* %41 to %"class.v8::Object"*
  %43 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %31, %"class.blink::ScriptWrappable"* nonnull %27, %"class.v8::Object"* %42, %"class.blink::ScriptWrappable"* %39) #8
  br i1 %43, label %61, label %44

44:                                               ; preds = %38
  %45 = load i64*, i64** %2, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = bitcast i64* %46 to %"class.v8::Object"*
  %48 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %47) #8
  %49 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %48) #8
  %50 = bitcast %"class.blink::UserActivation"* %26 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %51 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %50, align 8
  %52 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %51, i64 7
  %53 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %52, align 8
  %54 = tail call %"class.v8::Value"* %53(%"class.blink::ScriptWrappable"* nonnull %27, %"class.blink::ScriptState"* %49) #8
  %55 = icmp eq %"class.v8::Value"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %44
  %57 = load i64*, i64** %29, align 8
  %58 = getelementptr inbounds i64, i64* %57, i64 3
  %59 = bitcast %"class.v8::Value"* %54 to i64*
  %60 = load i64, i64* %59, align 8
  store i64 %60, i64* %58, align 8
  br label %61

61:                                               ; preds = %32, %38, %44, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_116v8_message_event29IsTrustedAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #8
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 24
  %25 = bitcast i8* %24 to i16*
  %26 = load i16, i16* %25, align 8
  %27 = and i16 %26, 256
  %28 = icmp eq i16 %27, 0
  %29 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds i64, i64* %30, i64 3
  %32 = getelementptr inbounds i64, i64* %30, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = select i1 %28, i64 192, i64 184
  %35 = add i64 %34, %33
  %36 = inttoptr i64 %35 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %31, align 8
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_116v8_message_event33InitMessageEventOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.blink::ScriptValue", align 8
  %6 = alloca %"class.blink::ScriptValue", align 8
  %7 = alloca %"class.blink::ScriptValue", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %12 = alloca %"class.blink::HeapVector", align 8
  %13 = alloca %"class.blink::HeapVector", align 8
  %14 = alloca %"class.WTF::AtomicString", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds i64, i64* %18, i64 1
  %20 = bitcast i64* %19 to %"class.v8::Isolate"**
  %21 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %20, align 8
  %22 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %21) #8
  %23 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %22) #8
  %24 = icmp eq %"class.blink::ExecutionContext"* %23, null
  %25 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %23, i64 0, i32 3
  %26 = icmp eq %"class.blink::UseCounter"* %25, null
  %27 = or i1 %24, %26
  br i1 %27, label %33, label %28

28:                                               ; preds = %1
  %29 = bitcast %"class.blink::UseCounter"* %25 to void (%"class.blink::UseCounter"*, i32)***
  %30 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %30, i64 3
  %32 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %31, align 8
  tail call void %32(%"class.blink::UseCounter"* nonnull %25, i32 222) #8
  br label %33

33:                                               ; preds = %1, %28
  %34 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %34) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 56, i1 false)
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %37, align 2
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %39 = bitcast i8** %38 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0)>, <2 x i8*>* %39, align 8
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %21, %"class.v8::Isolate"** %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %42, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %44 = bitcast %"class.WTF::StringImpl"** %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false) #8
  %45 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %46 = load i32, i32* %45, align 8
  %47 = icmp slt i32 %46, 1
  br i1 %47, label %48, label %68, !prof !3

48:                                               ; preds = %33
  %49 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #8
  %50 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %46) #8
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %51, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #8
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #8
  br label %67

67:                                               ; preds = %48, %63, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #8
  br label %944

68:                                               ; preds = %33
  %69 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %70 = load i64*, i64** %69, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 -1
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, -1
  %74 = inttoptr i64 %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = and i64 %72, -4294967296
  %77 = zext i32 %75 to i64
  %78 = or i64 %76, %77
  %79 = add i64 %78, 7
  %80 = inttoptr i64 %79 to i16*
  %81 = load i16, i16* %80, align 2
  switch i16 %81, label %87 [
    i16 1057, label %82
    i16 1056, label %82
    i16 1040, label %82
  ]

82:                                               ; preds = %68, %68, %68
  %83 = add i64 %72, 19
  %84 = inttoptr i64 %83 to %"class.blink::MessageEvent"**
  %85 = load %"class.blink::MessageEvent"*, %"class.blink::MessageEvent"** %84, align 1
  %86 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %86) #8
  br label %100

87:                                               ; preds = %68
  %88 = bitcast i64* %71 to %"class.v8::Object"*
  %89 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %88, i32 1) #8
  %90 = load i32, i32* %45, align 8
  %91 = bitcast i8* %89 to %"class.blink::MessageEvent"*
  %92 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %92) #8
  %93 = icmp sgt i32 %90, 0
  br i1 %93, label %100, label %94

94:                                               ; preds = %87
  %95 = load i64*, i64** %17, align 8
  %96 = getelementptr inbounds i64, i64* %95, i64 1
  %97 = load i64, i64* %96, align 8
  %98 = add i64 %97, 160
  %99 = inttoptr i64 %98 to %"class.v8::Value"*
  br label %105

100:                                              ; preds = %82, %87
  %101 = phi i8* [ %86, %82 ], [ %92, %87 ]
  %102 = phi %"class.blink::MessageEvent"* [ %85, %82 ], [ %91, %87 ]
  %103 = bitcast i64** %69 to %"class.v8::Value"**
  %104 = load %"class.v8::Value"*, %"class.v8::Value"** %103, align 8
  br label %105

105:                                              ; preds = %94, %100
  %106 = phi i8* [ %92, %94 ], [ %101, %100 ]
  %107 = phi %"class.blink::MessageEvent"* [ %91, %94 ], [ %102, %100 ]
  %108 = phi %"class.v8::Value"* [ %99, %94 ], [ %104, %100 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %21, %"class.v8::Value"* %108, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #8
  %109 = load i32, i32* %42, align 8
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %921

111:                                              ; preds = %105
  %112 = load i32, i32* %45, align 8
  %113 = icmp sgt i32 %112, 1
  br i1 %113, label %120, label %114

114:                                              ; preds = %111
  %115 = load i64*, i64** %17, align 8
  %116 = getelementptr inbounds i64, i64* %115, i64 1
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %117, 160
  %119 = inttoptr i64 %118 to %"class.v8::Value"*
  br label %124

120:                                              ; preds = %111
  %121 = load i64*, i64** %69, align 8
  %122 = getelementptr inbounds i64, i64* %121, i64 1
  %123 = bitcast i64* %122 to %"class.v8::Value"*
  br label %124

124:                                              ; preds = %114, %120
  %125 = phi %"class.v8::Value"* [ %119, %114 ], [ %123, %120 ]
  %126 = bitcast %"class.v8::Value"* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = and i64 %127, 3
  %129 = icmp eq i64 %128, 1
  br i1 %129, label %130, label %147

130:                                              ; preds = %124
  %131 = add i64 %127, -1
  %132 = inttoptr i64 %131 to i32*
  %133 = load i32, i32* %132, align 4
  %134 = and i64 %127, -4294967296
  %135 = zext i32 %133 to i64
  %136 = or i64 %134, %135
  %137 = add i64 %136, 7
  %138 = inttoptr i64 %137 to i16*
  %139 = load i16, i16* %138, align 2
  %140 = icmp eq i16 %139, 67
  br i1 %140, label %141, label %147

141:                                              ; preds = %130
  %142 = add i64 %127, 23
  %143 = inttoptr i64 %142 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = and i32 %144, -2
  %146 = icmp eq i32 %145, 10
  br i1 %146, label %172, label %147

147:                                              ; preds = %130, %124, %141
  br i1 %113, label %154, label %148

148:                                              ; preds = %147
  %149 = load i64*, i64** %17, align 8
  %150 = getelementptr inbounds i64, i64* %149, i64 1
  %151 = load i64, i64* %150, align 8
  %152 = add i64 %151, 160
  %153 = inttoptr i64 %152 to %"class.v8::Value"*
  br label %158

154:                                              ; preds = %147
  %155 = load i64*, i64** %69, align 8
  %156 = getelementptr inbounds i64, i64* %155, i64 1
  %157 = bitcast i64* %156 to %"class.v8::Value"*
  br label %158

158:                                              ; preds = %148, %154
  %159 = phi %"class.v8::Value"* [ %153, %148 ], [ %157, %154 ]
  %160 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %159) #8
  br i1 %160, label %161, label %164, !prof !4

161:                                              ; preds = %158
  %162 = bitcast %"class.v8::Value"* %159 to %"class.v8::Boolean"*
  %163 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %162) #8
  br label %166

164:                                              ; preds = %158
  %165 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %159, %"class.v8::Isolate"* %21) #8
  br label %166

166:                                              ; preds = %161, %164
  %167 = phi i1 [ %163, %161 ], [ %165, %164 ]
  %168 = load i32, i32* %42, align 8
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %921

170:                                              ; preds = %166
  %171 = load i32, i32* %45, align 8
  br label %172

172:                                              ; preds = %170, %141
  %173 = phi i32 [ %171, %170 ], [ %112, %141 ]
  %174 = phi i1 [ %167, %170 ], [ false, %141 ]
  %175 = icmp sgt i32 %173, 2
  br i1 %175, label %182, label %176

176:                                              ; preds = %172
  %177 = load i64*, i64** %17, align 8
  %178 = getelementptr inbounds i64, i64* %177, i64 1
  %179 = load i64, i64* %178, align 8
  %180 = add i64 %179, 160
  %181 = inttoptr i64 %180 to %"class.v8::Value"*
  br label %186

182:                                              ; preds = %172
  %183 = load i64*, i64** %69, align 8
  %184 = getelementptr inbounds i64, i64* %183, i64 2
  %185 = bitcast i64* %184 to %"class.v8::Value"*
  br label %186

186:                                              ; preds = %176, %182
  %187 = phi %"class.v8::Value"* [ %181, %176 ], [ %185, %182 ]
  %188 = bitcast %"class.v8::Value"* %187 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = and i64 %189, 3
  %191 = icmp eq i64 %190, 1
  br i1 %191, label %192, label %209

192:                                              ; preds = %186
  %193 = add i64 %189, -1
  %194 = inttoptr i64 %193 to i32*
  %195 = load i32, i32* %194, align 4
  %196 = and i64 %189, -4294967296
  %197 = zext i32 %195 to i64
  %198 = or i64 %196, %197
  %199 = add i64 %198, 7
  %200 = inttoptr i64 %199 to i16*
  %201 = load i16, i16* %200, align 2
  %202 = icmp eq i16 %201, 67
  br i1 %202, label %203, label %209

203:                                              ; preds = %192
  %204 = add i64 %189, 23
  %205 = inttoptr i64 %204 to i32*
  %206 = load i32, i32* %205, align 4
  %207 = and i32 %206, -2
  %208 = icmp eq i32 %207, 10
  br i1 %208, label %234, label %209

209:                                              ; preds = %192, %186, %203
  br i1 %175, label %216, label %210

210:                                              ; preds = %209
  %211 = load i64*, i64** %17, align 8
  %212 = getelementptr inbounds i64, i64* %211, i64 1
  %213 = load i64, i64* %212, align 8
  %214 = add i64 %213, 160
  %215 = inttoptr i64 %214 to %"class.v8::Value"*
  br label %220

216:                                              ; preds = %209
  %217 = load i64*, i64** %69, align 8
  %218 = getelementptr inbounds i64, i64* %217, i64 2
  %219 = bitcast i64* %218 to %"class.v8::Value"*
  br label %220

220:                                              ; preds = %210, %216
  %221 = phi %"class.v8::Value"* [ %215, %210 ], [ %219, %216 ]
  %222 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %221) #8
  br i1 %222, label %223, label %226, !prof !4

223:                                              ; preds = %220
  %224 = bitcast %"class.v8::Value"* %221 to %"class.v8::Boolean"*
  %225 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %224) #8
  br label %228

226:                                              ; preds = %220
  %227 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %221, %"class.v8::Isolate"* %21) #8
  br label %228

228:                                              ; preds = %223, %226
  %229 = phi i1 [ %225, %223 ], [ %227, %226 ]
  %230 = load i32, i32* %42, align 8
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %921

232:                                              ; preds = %228
  %233 = load i32, i32* %45, align 8
  br label %234

234:                                              ; preds = %232, %203
  %235 = phi i32 [ %233, %232 ], [ %173, %203 ]
  %236 = phi i1 [ %229, %232 ], [ false, %203 ]
  %237 = bitcast %"class.blink::ScriptValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %237) #8
  %238 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %5, i64 0, i32 1, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %237, i8 0, i64 24, i1 false) #8
  %239 = icmp sgt i32 %235, 3
  br i1 %239, label %246, label %240

240:                                              ; preds = %234
  %241 = load i64*, i64** %17, align 8
  %242 = getelementptr inbounds i64, i64* %241, i64 1
  %243 = load i64, i64* %242, align 8
  %244 = add i64 %243, 160
  %245 = inttoptr i64 %244 to %"class.v8::Value"*
  br label %250

246:                                              ; preds = %234
  %247 = load i64*, i64** %69, align 8
  %248 = getelementptr inbounds i64, i64* %247, i64 3
  %249 = bitcast i64* %248 to %"class.v8::Value"*
  br label %250

250:                                              ; preds = %240, %246
  %251 = phi %"class.v8::Value"* [ %245, %240 ], [ %249, %246 ]
  %252 = bitcast %"class.v8::Value"* %251 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = and i64 %253, 3
  %255 = icmp eq i64 %254, 1
  br i1 %255, label %256, label %292

256:                                              ; preds = %250
  %257 = add i64 %253, -1
  %258 = inttoptr i64 %257 to i32*
  %259 = load i32, i32* %258, align 4
  %260 = and i64 %253, -4294967296
  %261 = zext i32 %259 to i64
  %262 = or i64 %260, %261
  %263 = add i64 %262, 7
  %264 = inttoptr i64 %263 to i16*
  %265 = load i16, i16* %264, align 2
  %266 = icmp eq i16 %265, 67
  br i1 %266, label %267, label %292

267:                                              ; preds = %256
  %268 = add i64 %253, 23
  %269 = inttoptr i64 %268 to i32*
  %270 = load i32, i32* %269, align 4
  %271 = and i32 %270, -2
  %272 = icmp eq i32 %271, 10
  br i1 %272, label %273, label %292

273:                                              ; preds = %267
  %274 = bitcast %"class.blink::ScriptValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %274) #8
  call void @_ZN5blink11ScriptValue10CreateNullEPN2v87IsolateE(%"class.blink::ScriptValue"* nonnull sret %6, %"class.v8::Isolate"* %21) #8
  %275 = bitcast %"class.blink::ScriptValue"* %6 to i64*
  %276 = load i64, i64* %275, align 8
  %277 = bitcast %"class.blink::ScriptValue"* %5 to i64*
  store i64 %276, i64* %277, align 8
  %278 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %5, i64 0, i32 1
  %279 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 0, i32 1
  %280 = call dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"* %278, %"class.blink::WorldSafeV8Reference"* dereferenceable(16) %279) #8
  %281 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 0, i32 1, i32 1, i32 0
  %282 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %281, align 8
  %283 = icmp eq %"class.blink::DOMWrapperWorld"* %282, null
  br i1 %283, label %291, label %284

284:                                              ; preds = %273
  %285 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %282, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %285) #8
  %286 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %282, i64 0, i32 0, i32 0, i32 0, i32 0
  %287 = load i32, i32* %286, align 4
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %291

289:                                              ; preds = %284
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %282) #8
  %290 = bitcast %"class.blink::DOMWrapperWorld"* %282 to i8*
  call void @free(i8* %290) #8
  br label %291

291:                                              ; preds = %273, %284, %289
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %274) #8
  br label %326

292:                                              ; preds = %256, %250, %267
  %293 = bitcast %"class.blink::ScriptValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %293) #8
  br i1 %239, label %300, label %294

294:                                              ; preds = %292
  %295 = load i64*, i64** %17, align 8
  %296 = getelementptr inbounds i64, i64* %295, i64 1
  %297 = load i64, i64* %296, align 8
  %298 = add i64 %297, 160
  %299 = inttoptr i64 %298 to %"class.v8::Value"*
  br label %304

300:                                              ; preds = %292
  %301 = load i64*, i64** %69, align 8
  %302 = getelementptr inbounds i64, i64* %301, i64 3
  %303 = bitcast i64* %302 to %"class.v8::Value"*
  br label %304

304:                                              ; preds = %294, %300
  %305 = phi %"class.v8::Value"* [ %299, %294 ], [ %303, %300 ]
  %306 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 0, i32 0
  store %"class.v8::Isolate"* %21, %"class.v8::Isolate"** %306, align 8, !alias.scope !5
  %307 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %307, %"class.v8::Isolate"* %21, %"class.v8::Value"* %305) #8
  %308 = bitcast %"class.blink::ScriptValue"* %7 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = bitcast %"class.blink::ScriptValue"* %5 to i64*
  store i64 %309, i64* %310, align 8
  %311 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %5, i64 0, i32 1
  %312 = call dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"* %311, %"class.blink::WorldSafeV8Reference"* dereferenceable(16) %307) #8
  %313 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 0, i32 1, i32 1, i32 0
  %314 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %313, align 8
  %315 = icmp eq %"class.blink::DOMWrapperWorld"* %314, null
  br i1 %315, label %323, label %316

316:                                              ; preds = %304
  %317 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %314, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %317) #8
  %318 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %314, i64 0, i32 0, i32 0, i32 0, i32 0
  %319 = load i32, i32* %318, align 4
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %321, label %323

321:                                              ; preds = %316
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %314) #8
  %322 = bitcast %"class.blink::DOMWrapperWorld"* %314 to i8*
  call void @free(i8* %322) #8
  br label %323

323:                                              ; preds = %304, %316, %321
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %293) #8
  %324 = load i32, i32* %42, align 8
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %326, label %910

326:                                              ; preds = %323, %291
  %327 = load i32, i32* %45, align 8
  %328 = icmp sgt i32 %327, 4
  br i1 %328, label %335, label %329

329:                                              ; preds = %326
  %330 = load i64*, i64** %17, align 8
  %331 = getelementptr inbounds i64, i64* %330, i64 1
  %332 = load i64, i64* %331, align 8
  %333 = add i64 %332, 160
  %334 = inttoptr i64 %333 to %"class.v8::Value"*
  br label %339

335:                                              ; preds = %326
  %336 = load i64*, i64** %69, align 8
  %337 = getelementptr inbounds i64, i64* %336, i64 4
  %338 = bitcast i64* %337 to %"class.v8::Value"*
  br label %339

339:                                              ; preds = %329, %335
  %340 = phi %"class.v8::Value"* [ %334, %329 ], [ %338, %335 ]
  %341 = bitcast %"class.v8::Value"* %340 to i64*
  %342 = load i64, i64* %341, align 8
  %343 = and i64 %342, 3
  %344 = icmp eq i64 %343, 1
  br i1 %344, label %345, label %406

345:                                              ; preds = %339
  %346 = add i64 %342, -1
  %347 = inttoptr i64 %346 to i32*
  %348 = load i32, i32* %347, align 4
  %349 = and i64 %342, -4294967296
  %350 = zext i32 %348 to i64
  %351 = or i64 %349, %350
  %352 = add i64 %351, 7
  %353 = inttoptr i64 %352 to i16*
  %354 = load i16, i16* %353, align 2
  %355 = icmp eq i16 %354, 67
  br i1 %355, label %356, label %406

356:                                              ; preds = %345
  %357 = add i64 %342, 23
  %358 = inttoptr i64 %357 to i32*
  %359 = load i32, i32* %358, align 4
  %360 = and i32 %359, -2
  %361 = icmp eq i32 %360, 10
  br i1 %361, label %362, label %406

362:                                              ; preds = %356
  %363 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %363) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), i64 0) #8
  %364 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %365 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %364, align 8
  %366 = icmp eq %"class.WTF::StringImpl"* %365, null
  br i1 %366, label %404, label %367

367:                                              ; preds = %362
  %368 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %365, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %369 = load atomic i32, i32* %368 monotonic, align 4
  %370 = and i32 %369, 2
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %374, label %372

372:                                              ; preds = %367
  %373 = ptrtoint %"class.WTF::StringImpl"* %365 to i64
  br label %389

374:                                              ; preds = %367
  %375 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %365, i64 0, i32 0
  %376 = load i32, i32* %375, align 4
  %377 = zext i32 %376 to i33
  %378 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %377, i33 1) #8
  %379 = extractvalue { i33, i1 } %378, 1
  %380 = extractvalue { i33, i1 } %378, 0
  %381 = icmp slt i33 %380, 0
  %382 = or i1 %379, %381
  br i1 %382, label %383, label %384, !prof !3

383:                                              ; preds = %374
  call void @llvm.trap() #8
  unreachable

384:                                              ; preds = %374
  %385 = trunc i33 %380 to i32
  store i32 %385, i32* %375, align 4
  %386 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %364, align 8
  %387 = ptrtoint %"class.WTF::StringImpl"* %365 to i64
  %388 = icmp eq %"class.WTF::StringImpl"* %386, null
  br i1 %388, label %404, label %389

389:                                              ; preds = %372, %384
  %390 = phi i64 [ %373, %372 ], [ %387, %384 ]
  %391 = phi %"class.WTF::StringImpl"* [ %365, %372 ], [ %386, %384 ]
  %392 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %391, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %393 = load atomic i32, i32* %392 monotonic, align 4
  %394 = and i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %391, i64 0, i32 0
  %397 = load i32, i32* %396, align 4
  br i1 %395, label %398, label %400

398:                                              ; preds = %389
  %399 = add i32 %397, -1
  store i32 %399, i32* %396, align 4
  br label %400

400:                                              ; preds = %398, %389
  %401 = phi i32 [ %399, %398 ], [ %397, %389 ]
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %403, label %404

403:                                              ; preds = %400
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %391) #8
  br label %404

404:                                              ; preds = %362, %384, %400, %403
  %405 = phi i64 [ %387, %384 ], [ %390, %400 ], [ %390, %403 ], [ 0, %362 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %363) #8
  br label %431

406:                                              ; preds = %345, %339, %356
  %407 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %407) #8
  br i1 %328, label %414, label %408

408:                                              ; preds = %406
  %409 = load i64*, i64** %17, align 8
  %410 = getelementptr inbounds i64, i64* %409, i64 1
  %411 = load i64, i64* %410, align 8
  %412 = add i64 %411, 160
  %413 = inttoptr i64 %412 to %"class.v8::Value"*
  br label %418

414:                                              ; preds = %406
  %415 = load i64*, i64** %69, align 8
  %416 = getelementptr inbounds i64, i64* %415, i64 4
  %417 = bitcast i64* %416 to %"class.v8::Value"*
  br label %418

418:                                              ; preds = %408, %414
  %419 = phi %"class.v8::Value"* [ %413, %408 ], [ %417, %414 ]
  call void @_ZN5blink17NativeValueTraitsINS_18IDLUSVStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %9, %"class.v8::Isolate"* %21, %"class.v8::Value"* %419, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #8
  %420 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %9 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %9, i64 0, i32 1
  %423 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %422, i64 0, i32 0, i32 0
  %424 = bitcast %"class.WTF::String"* %422 to i64*
  %425 = load i64, i64* %424, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %423, align 8
  %426 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %9, i64 0, i32 2, i32 1
  %427 = bitcast %"class.std::__1::unique_ptr.193"* %426 to i64*
  %428 = load i64, i64* %427, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %407) #8
  %429 = load i32, i32* %42, align 8
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %431, label %888

431:                                              ; preds = %418, %404
  %432 = phi i64 [ 0, %404 ], [ %428, %418 ]
  %433 = phi i64 [ %405, %404 ], [ %425, %418 ]
  %434 = phi i64 [ 0, %404 ], [ %421, %418 ]
  %435 = load i32, i32* %45, align 8
  %436 = icmp sgt i32 %435, 5
  br i1 %436, label %443, label %437

437:                                              ; preds = %431
  %438 = load i64*, i64** %17, align 8
  %439 = getelementptr inbounds i64, i64* %438, i64 1
  %440 = load i64, i64* %439, align 8
  %441 = add i64 %440, 160
  %442 = inttoptr i64 %441 to %"class.v8::Value"*
  br label %447

443:                                              ; preds = %431
  %444 = load i64*, i64** %69, align 8
  %445 = getelementptr inbounds i64, i64* %444, i64 5
  %446 = bitcast i64* %445 to %"class.v8::Value"*
  br label %447

447:                                              ; preds = %437, %443
  %448 = phi %"class.v8::Value"* [ %442, %437 ], [ %446, %443 ]
  %449 = bitcast %"class.v8::Value"* %448 to i64*
  %450 = load i64, i64* %449, align 8
  %451 = and i64 %450, 3
  %452 = icmp eq i64 %451, 1
  br i1 %452, label %453, label %514

453:                                              ; preds = %447
  %454 = add i64 %450, -1
  %455 = inttoptr i64 %454 to i32*
  %456 = load i32, i32* %455, align 4
  %457 = and i64 %450, -4294967296
  %458 = zext i32 %456 to i64
  %459 = or i64 %457, %458
  %460 = add i64 %459, 7
  %461 = inttoptr i64 %460 to i16*
  %462 = load i16, i16* %461, align 2
  %463 = icmp eq i16 %462, 67
  br i1 %463, label %464, label %514

464:                                              ; preds = %453
  %465 = add i64 %450, 23
  %466 = inttoptr i64 %465 to i32*
  %467 = load i32, i32* %466, align 4
  %468 = and i32 %467, -2
  %469 = icmp eq i32 %468, 10
  br i1 %469, label %470, label %514

470:                                              ; preds = %464
  %471 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %471) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), i64 0) #8
  %472 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %473 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %472, align 8
  %474 = icmp eq %"class.WTF::StringImpl"* %473, null
  br i1 %474, label %512, label %475

475:                                              ; preds = %470
  %476 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %473, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %477 = load atomic i32, i32* %476 monotonic, align 4
  %478 = and i32 %477, 2
  %479 = icmp eq i32 %478, 0
  br i1 %479, label %482, label %480

480:                                              ; preds = %475
  %481 = ptrtoint %"class.WTF::StringImpl"* %473 to i64
  br label %497

482:                                              ; preds = %475
  %483 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %473, i64 0, i32 0
  %484 = load i32, i32* %483, align 4
  %485 = zext i32 %484 to i33
  %486 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %485, i33 1) #8
  %487 = extractvalue { i33, i1 } %486, 1
  %488 = extractvalue { i33, i1 } %486, 0
  %489 = icmp slt i33 %488, 0
  %490 = or i1 %487, %489
  br i1 %490, label %491, label %492, !prof !3

491:                                              ; preds = %482
  call void @llvm.trap() #8
  unreachable

492:                                              ; preds = %482
  %493 = trunc i33 %488 to i32
  store i32 %493, i32* %483, align 4
  %494 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %472, align 8
  %495 = ptrtoint %"class.WTF::StringImpl"* %473 to i64
  %496 = icmp eq %"class.WTF::StringImpl"* %494, null
  br i1 %496, label %512, label %497

497:                                              ; preds = %480, %492
  %498 = phi i64 [ %481, %480 ], [ %495, %492 ]
  %499 = phi %"class.WTF::StringImpl"* [ %473, %480 ], [ %494, %492 ]
  %500 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %499, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %501 = load atomic i32, i32* %500 monotonic, align 4
  %502 = and i32 %501, 2
  %503 = icmp eq i32 %502, 0
  %504 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %499, i64 0, i32 0
  %505 = load i32, i32* %504, align 4
  br i1 %503, label %506, label %508

506:                                              ; preds = %497
  %507 = add i32 %505, -1
  store i32 %507, i32* %504, align 4
  br label %508

508:                                              ; preds = %506, %497
  %509 = phi i32 [ %507, %506 ], [ %505, %497 ]
  %510 = icmp eq i32 %509, 0
  br i1 %510, label %511, label %512

511:                                              ; preds = %508
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %499) #8
  br label %512

512:                                              ; preds = %470, %492, %508, %511
  %513 = phi i64 [ %495, %492 ], [ %498, %508 ], [ %498, %511 ], [ 0, %470 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %471) #8
  br label %539

514:                                              ; preds = %453, %447, %464
  %515 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %515) #8
  br i1 %436, label %522, label %516

516:                                              ; preds = %514
  %517 = load i64*, i64** %17, align 8
  %518 = getelementptr inbounds i64, i64* %517, i64 1
  %519 = load i64, i64* %518, align 8
  %520 = add i64 %519, 160
  %521 = inttoptr i64 %520 to %"class.v8::Value"*
  br label %526

522:                                              ; preds = %514
  %523 = load i64*, i64** %69, align 8
  %524 = getelementptr inbounds i64, i64* %523, i64 5
  %525 = bitcast i64* %524 to %"class.v8::Value"*
  br label %526

526:                                              ; preds = %516, %522
  %527 = phi %"class.v8::Value"* [ %521, %516 ], [ %525, %522 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %11, %"class.v8::Isolate"* %21, %"class.v8::Value"* %527, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #8
  %528 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %11 to i64*
  %529 = load i64, i64* %528, align 8
  %530 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %11, i64 0, i32 1
  %531 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %530, i64 0, i32 0, i32 0
  %532 = bitcast %"class.WTF::String"* %530 to i64*
  %533 = load i64, i64* %532, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %531, align 8
  %534 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %11, i64 0, i32 2, i32 1
  %535 = bitcast %"class.std::__1::unique_ptr.193"* %534 to i64*
  %536 = load i64, i64* %535, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %515) #8
  %537 = load i32, i32* %42, align 8
  %538 = icmp eq i32 %537, 0
  br i1 %538, label %539, label %866

539:                                              ; preds = %526, %512
  %540 = phi i64 [ 0, %512 ], [ %529, %526 ]
  %541 = phi i64 [ %513, %512 ], [ %533, %526 ]
  %542 = phi i64 [ 0, %512 ], [ %536, %526 ]
  %543 = load i32, i32* %45, align 8
  %544 = icmp sgt i32 %543, 6
  br i1 %544, label %551, label %545

545:                                              ; preds = %539
  %546 = load i64*, i64** %17, align 8
  %547 = getelementptr inbounds i64, i64* %546, i64 1
  %548 = load i64, i64* %547, align 8
  %549 = add i64 %548, 160
  %550 = inttoptr i64 %549 to %"class.v8::Value"*
  br label %555

551:                                              ; preds = %539
  %552 = load i64*, i64** %69, align 8
  %553 = getelementptr inbounds i64, i64* %552, i64 6
  %554 = bitcast i64* %553 to %"class.v8::Value"*
  br label %555

555:                                              ; preds = %545, %551
  %556 = phi %"class.v8::Value"* [ %550, %545 ], [ %554, %551 ]
  %557 = bitcast %"class.v8::Value"* %556 to i64*
  %558 = load i64, i64* %557, align 8
  %559 = and i64 %558, 3
  %560 = icmp eq i64 %559, 1
  br i1 %560, label %561, label %578

561:                                              ; preds = %555
  %562 = add i64 %558, -1
  %563 = inttoptr i64 %562 to i32*
  %564 = load i32, i32* %563, align 4
  %565 = and i64 %558, -4294967296
  %566 = zext i32 %564 to i64
  %567 = or i64 %565, %566
  %568 = add i64 %567, 7
  %569 = inttoptr i64 %568 to i16*
  %570 = load i16, i16* %569, align 2
  %571 = icmp eq i16 %570, 67
  br i1 %571, label %572, label %578

572:                                              ; preds = %561
  %573 = add i64 %558, 23
  %574 = inttoptr i64 %573 to i32*
  %575 = load i32, i32* %574, align 4
  %576 = and i32 %575, -2
  %577 = icmp eq i32 %576, 10
  br i1 %577, label %645, label %578

578:                                              ; preds = %561, %555, %572
  br i1 %544, label %585, label %579

579:                                              ; preds = %578
  %580 = load i64*, i64** %17, align 8
  %581 = getelementptr inbounds i64, i64* %580, i64 1
  %582 = load i64, i64* %581, align 8
  %583 = add i64 %582, 160
  %584 = inttoptr i64 %583 to %"class.v8::Value"*
  br label %589

585:                                              ; preds = %578
  %586 = load i64*, i64** %69, align 8
  %587 = getelementptr inbounds i64, i64* %586, i64 6
  %588 = bitcast i64* %587 to %"class.v8::Value"*
  br label %589

589:                                              ; preds = %579, %585
  %590 = phi %"class.v8::Value"* [ %584, %579 ], [ %588, %585 ]
  %591 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11EventTarget18wrapper_type_info_E, align 8
  %592 = ptrtoint %"class.v8::Isolate"* %21 to i64
  %593 = add i64 %592, 8
  %594 = inttoptr i64 %593 to %"class.blink::V8PerIsolateData"**
  %595 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %594, align 8
  %596 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %595, %"struct.blink::WrapperTypeInfo"* %591, %"class.v8::Value"* %590) #8
  %597 = bitcast %"class.v8::Value"* %590 to i64*
  %598 = load i64, i64* %597, align 8
  br i1 %596, label %599, label %619

599:                                              ; preds = %589
  %600 = add i64 %598, -1
  %601 = inttoptr i64 %600 to i32*
  %602 = load i32, i32* %601, align 4
  %603 = and i64 %598, -4294967296
  %604 = zext i32 %602 to i64
  %605 = or i64 %603, %604
  %606 = add i64 %605, 7
  %607 = inttoptr i64 %606 to i16*
  %608 = load i16, i16* %607, align 2
  switch i16 %608, label %613 [
    i16 1057, label %609
    i16 1056, label %609
    i16 1040, label %609
  ]

609:                                              ; preds = %599, %599, %599
  %610 = add i64 %598, 19
  %611 = inttoptr i64 %610 to i8**
  %612 = load i8*, i8** %611, align 1
  br label %616

613:                                              ; preds = %599
  %614 = bitcast %"class.v8::Value"* %590 to %"class.v8::Object"*
  %615 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %614, i32 1) #8
  br label %616

616:                                              ; preds = %613, %609
  %617 = phi i8* [ %612, %609 ], [ %615, %613 ]
  %618 = bitcast i8* %617 to %"class.blink::EventTarget"*
  br label %639

619:                                              ; preds = %589
  %620 = and i64 %598, 3
  %621 = icmp eq i64 %620, 1
  br i1 %621, label %622, label %638

622:                                              ; preds = %619
  %623 = add i64 %598, -1
  %624 = inttoptr i64 %623 to i32*
  %625 = load i32, i32* %624, align 4
  %626 = and i64 %598, -4294967296
  %627 = zext i32 %625 to i64
  %628 = or i64 %626, %627
  %629 = add i64 %628, 7
  %630 = inttoptr i64 %629 to i16*
  %631 = load i16, i16* %630, align 2
  %632 = icmp eq i16 %631, 67
  br i1 %632, label %633, label %638

633:                                              ; preds = %622
  %634 = add i64 %598, 23
  %635 = inttoptr i64 %634 to i32*
  %636 = load i32, i32* %635, align 4
  %637 = ashr i32 %636, 1
  switch i32 %637, label %638 [
    i32 5, label %639
    i32 3, label %639
  ]

638:                                              ; preds = %633, %622, %619
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %591, i32 6, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #8
  br label %639

639:                                              ; preds = %616, %633, %633, %638
  %640 = phi %"class.blink::EventTarget"* [ %618, %616 ], [ null, %638 ], [ null, %633 ], [ null, %633 ]
  %641 = load i32, i32* %42, align 8
  %642 = icmp eq i32 %641, 0
  br i1 %642, label %643, label %866

643:                                              ; preds = %639
  %644 = load i32, i32* %45, align 8
  br label %645

645:                                              ; preds = %643, %572
  %646 = phi i32 [ %644, %643 ], [ %543, %572 ]
  %647 = phi %"class.blink::EventTarget"* [ %640, %643 ], [ null, %572 ]
  %648 = bitcast %"class.blink::HeapVector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %648) #8
  %649 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %12, i64 0, i32 0, i32 0, i32 0, i32 1
  %650 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %12, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %648, i8 0, i64 16, i1 false) #8
  %651 = icmp sgt i32 %646, 7
  br i1 %651, label %658, label %652

652:                                              ; preds = %645
  %653 = load i64*, i64** %17, align 8
  %654 = getelementptr inbounds i64, i64* %653, i64 1
  %655 = load i64, i64* %654, align 8
  %656 = add i64 %655, 160
  %657 = inttoptr i64 %656 to %"class.v8::Value"*
  br label %662

658:                                              ; preds = %645
  %659 = load i64*, i64** %69, align 8
  %660 = getelementptr inbounds i64, i64* %659, i64 7
  %661 = bitcast i64* %660 to %"class.v8::Value"*
  br label %662

662:                                              ; preds = %652, %658
  %663 = phi %"class.v8::Value"* [ %657, %652 ], [ %661, %658 ]
  %664 = bitcast %"class.v8::Value"* %663 to i64*
  %665 = load i64, i64* %664, align 8
  %666 = and i64 %665, 3
  %667 = icmp eq i64 %666, 1
  br i1 %667, label %668, label %685

668:                                              ; preds = %662
  %669 = add i64 %665, -1
  %670 = inttoptr i64 %669 to i32*
  %671 = load i32, i32* %670, align 4
  %672 = and i64 %665, -4294967296
  %673 = zext i32 %671 to i64
  %674 = or i64 %672, %673
  %675 = add i64 %674, 7
  %676 = inttoptr i64 %675 to i16*
  %677 = load i16, i16* %676, align 2
  %678 = icmp eq i16 %677, 67
  br i1 %678, label %679, label %685

679:                                              ; preds = %668
  %680 = add i64 %665, 23
  %681 = inttoptr i64 %680 to i32*
  %682 = load i32, i32* %681, align 4
  %683 = and i32 %682, -2
  %684 = icmp eq i32 %683, 10
  br i1 %684, label %724, label %685

685:                                              ; preds = %668, %662, %679
  %686 = bitcast %"class.blink::HeapVector"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %686) #8
  br i1 %651, label %693, label %687

687:                                              ; preds = %685
  %688 = load i64*, i64** %17, align 8
  %689 = getelementptr inbounds i64, i64* %688, i64 1
  %690 = load i64, i64* %689, align 8
  %691 = add i64 %690, 160
  %692 = inttoptr i64 %691 to %"class.v8::Value"*
  br label %697

693:                                              ; preds = %685
  %694 = load i64*, i64** %69, align 8
  %695 = getelementptr inbounds i64, i64* %694, i64 7
  %696 = bitcast i64* %695 to %"class.v8::Value"*
  br label %697

697:                                              ; preds = %687, %693
  %698 = phi %"class.v8::Value"* [ %692, %687 ], [ %696, %693 ]
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_11MessagePortEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::HeapVector"* nonnull sret %13, %"class.v8::Isolate"* %21, %"class.v8::Value"* %698, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #8
  %699 = bitcast %"class.blink::HeapVector"* %13 to i64*
  %700 = load i64, i64* %699, align 8
  %701 = bitcast %"class.blink::HeapVector"* %12 to i64*
  %702 = load i64, i64* %701, align 8
  store atomic i64 %702, i64* %699 monotonic, align 8
  store atomic i64 %700, i64* %701 monotonic, align 8
  %703 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %13, i64 0, i32 0, i32 0, i32 0, i32 1
  %704 = load i32, i32* %649, align 8
  %705 = load i32, i32* %703, align 8
  store i32 %705, i32* %649, align 8
  store i32 %704, i32* %703, align 8
  %706 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %13, i64 0, i32 0, i32 0, i32 0, i32 2
  %707 = load i32, i32* %650, align 4
  %708 = load i32, i32* %706, align 4
  store i32 %708, i32* %650, align 4
  store i32 %707, i32* %706, align 4
  %709 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %710 = icmp eq i32 %709, 0
  br i1 %710, label %714, label %711

711:                                              ; preds = %697
  %712 = inttoptr i64 %700 to i8*
  %713 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %712) #8
  br label %714

714:                                              ; preds = %711, %697
  %715 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %716 = icmp eq i32 %715, 0
  br i1 %716, label %721, label %717

717:                                              ; preds = %714
  %718 = bitcast %"class.blink::HeapVector"* %13 to i8**
  %719 = load i8*, i8** %718, align 8
  %720 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %719) #8
  br label %721

721:                                              ; preds = %714, %717
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %686) #8
  %722 = load i32, i32* %42, align 8
  %723 = icmp eq i32 %722, 0
  br i1 %723, label %724, label %865

724:                                              ; preds = %721, %679
  %725 = bitcast %"class.WTF::AtomicString"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %725) #8
  %726 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %727 = load %"class.v8::String"*, %"class.v8::String"** %726, align 8
  %728 = icmp eq %"class.v8::String"* %727, null
  br i1 %728, label %731, label %729, !prof !3

729:                                              ; preds = %724
  %730 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %727, i32 0) #8
  br label %758

731:                                              ; preds = %724
  %732 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %733 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %732, align 8
  %734 = icmp eq %"class.WTF::StringImpl"* %733, null
  br i1 %734, label %758, label %735

735:                                              ; preds = %731
  %736 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %733, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %737 = load atomic i32, i32* %736 acquire, align 4
  %738 = and i32 %737, 4
  %739 = icmp eq i32 %738, 0
  br i1 %739, label %756, label %740

740:                                              ; preds = %735
  %741 = load atomic i32, i32* %736 monotonic, align 4
  %742 = and i32 %741, 2
  %743 = icmp eq i32 %742, 0
  br i1 %743, label %744, label %758

744:                                              ; preds = %740
  %745 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %733, i64 0, i32 0
  %746 = load i32, i32* %745, align 4
  %747 = zext i32 %746 to i33
  %748 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %747, i33 1) #8
  %749 = extractvalue { i33, i1 } %748, 1
  %750 = extractvalue { i33, i1 } %748, 0
  %751 = icmp slt i33 %750, 0
  %752 = or i1 %749, %751
  br i1 %752, label %753, label %754, !prof !3

753:                                              ; preds = %744
  call void @llvm.trap() #8
  unreachable

754:                                              ; preds = %744
  %755 = trunc i33 %750 to i32
  store i32 %755, i32* %745, align 4
  br label %758

756:                                              ; preds = %735
  %757 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %733) #8
  br label %758

758:                                              ; preds = %729, %731, %740, %754, %756
  %759 = phi %"class.WTF::StringImpl"* [ %730, %729 ], [ %757, %756 ], [ %733, %740 ], [ %733, %754 ], [ null, %731 ]
  %760 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %14, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %759, %"class.WTF::StringImpl"** %760, align 8
  %761 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %761) #8
  %762 = icmp eq i64 %434, 0
  br i1 %762, label %766, label %763, !prof !3

763:                                              ; preds = %758
  %764 = inttoptr i64 %434 to %"class.v8::String"*
  %765 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %764, i32 0) #8
  br label %786

766:                                              ; preds = %758
  %767 = inttoptr i64 %433 to %"class.WTF::StringImpl"*
  %768 = icmp eq i64 %433, 0
  br i1 %768, label %786, label %769

769:                                              ; preds = %766
  %770 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %767, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %771 = load atomic i32, i32* %770 monotonic, align 4
  %772 = and i32 %771, 2
  %773 = icmp eq i32 %772, 0
  br i1 %773, label %774, label %786

774:                                              ; preds = %769
  %775 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %767, i64 0, i32 0
  %776 = load i32, i32* %775, align 4
  %777 = zext i32 %776 to i33
  %778 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %777, i33 1) #8
  %779 = extractvalue { i33, i1 } %778, 1
  %780 = extractvalue { i33, i1 } %778, 0
  %781 = icmp slt i33 %780, 0
  %782 = or i1 %779, %781
  br i1 %782, label %783, label %784, !prof !3

783:                                              ; preds = %774
  call void @llvm.trap() #8
  unreachable

784:                                              ; preds = %774
  %785 = trunc i33 %780 to i32
  store i32 %785, i32* %775, align 4
  br label %786

786:                                              ; preds = %763, %766, %769, %784
  %787 = phi %"class.WTF::StringImpl"* [ %765, %763 ], [ null, %766 ], [ %767, %769 ], [ %767, %784 ]
  %788 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %787, %"class.WTF::StringImpl"** %788, align 8
  %789 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %789) #8
  %790 = icmp eq i64 %540, 0
  br i1 %790, label %794, label %791, !prof !3

791:                                              ; preds = %786
  %792 = inttoptr i64 %540 to %"class.v8::String"*
  %793 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %792, i32 0) #8
  br label %814

794:                                              ; preds = %786
  %795 = inttoptr i64 %541 to %"class.WTF::StringImpl"*
  %796 = icmp eq i64 %541, 0
  br i1 %796, label %814, label %797

797:                                              ; preds = %794
  %798 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %795, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %799 = load atomic i32, i32* %798 monotonic, align 4
  %800 = and i32 %799, 2
  %801 = icmp eq i32 %800, 0
  br i1 %801, label %802, label %814

802:                                              ; preds = %797
  %803 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %795, i64 0, i32 0
  %804 = load i32, i32* %803, align 4
  %805 = zext i32 %804 to i33
  %806 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %805, i33 1) #8
  %807 = extractvalue { i33, i1 } %806, 1
  %808 = extractvalue { i33, i1 } %806, 0
  %809 = icmp slt i33 %808, 0
  %810 = or i1 %807, %809
  br i1 %810, label %811, label %812, !prof !3

811:                                              ; preds = %802
  call void @llvm.trap() #8
  unreachable

812:                                              ; preds = %802
  %813 = trunc i33 %808 to i32
  store i32 %813, i32* %803, align 4
  br label %814

814:                                              ; preds = %791, %794, %797, %812
  %815 = phi %"class.WTF::StringImpl"* [ %793, %791 ], [ null, %794 ], [ %795, %797 ], [ %795, %812 ]
  %816 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %815, %"class.WTF::StringImpl"** %816, align 8
  call void @_ZN5blink12MessageEvent16initMessageEventERKN3WTF12AtomicStringEbbRKNS_11ScriptValueERKNS1_6StringESA_PNS_11EventTargetERNS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEE(%"class.blink::MessageEvent"* %107, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %14, i1 zeroext %174, i1 zeroext %236, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %5, %"class.WTF::String"* nonnull dereferenceable(8) %15, %"class.WTF::String"* nonnull dereferenceable(8) %16, %"class.blink::EventTarget"* %647, %"class.blink::HeapVector"* nonnull dereferenceable(16) %12) #8
  %817 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %816, align 8
  %818 = icmp eq %"class.WTF::StringImpl"* %817, null
  br i1 %818, label %832, label %819

819:                                              ; preds = %814
  %820 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %817, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %821 = load atomic i32, i32* %820 monotonic, align 4
  %822 = and i32 %821, 2
  %823 = icmp eq i32 %822, 0
  %824 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %817, i64 0, i32 0
  %825 = load i32, i32* %824, align 4
  br i1 %823, label %826, label %828

826:                                              ; preds = %819
  %827 = add i32 %825, -1
  store i32 %827, i32* %824, align 4
  br label %828

828:                                              ; preds = %826, %819
  %829 = phi i32 [ %827, %826 ], [ %825, %819 ]
  %830 = icmp eq i32 %829, 0
  br i1 %830, label %831, label %832

831:                                              ; preds = %828
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %817) #8
  br label %832

832:                                              ; preds = %814, %828, %831
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %789) #8
  %833 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %788, align 8
  %834 = icmp eq %"class.WTF::StringImpl"* %833, null
  br i1 %834, label %848, label %835

835:                                              ; preds = %832
  %836 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %833, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %837 = load atomic i32, i32* %836 monotonic, align 4
  %838 = and i32 %837, 2
  %839 = icmp eq i32 %838, 0
  %840 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %833, i64 0, i32 0
  %841 = load i32, i32* %840, align 4
  br i1 %839, label %842, label %844

842:                                              ; preds = %835
  %843 = add i32 %841, -1
  store i32 %843, i32* %840, align 4
  br label %844

844:                                              ; preds = %842, %835
  %845 = phi i32 [ %843, %842 ], [ %841, %835 ]
  %846 = icmp eq i32 %845, 0
  br i1 %846, label %847, label %848

847:                                              ; preds = %844
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %833) #8
  br label %848

848:                                              ; preds = %832, %844, %847
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %761) #8
  %849 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %760, align 8
  %850 = icmp eq %"class.WTF::StringImpl"* %849, null
  br i1 %850, label %864, label %851

851:                                              ; preds = %848
  %852 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %849, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %853 = load atomic i32, i32* %852 monotonic, align 4
  %854 = and i32 %853, 2
  %855 = icmp eq i32 %854, 0
  %856 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %849, i64 0, i32 0
  %857 = load i32, i32* %856, align 4
  br i1 %855, label %858, label %860

858:                                              ; preds = %851
  %859 = add i32 %857, -1
  store i32 %859, i32* %856, align 4
  br label %860

860:                                              ; preds = %858, %851
  %861 = phi i32 [ %859, %858 ], [ %857, %851 ]
  %862 = icmp eq i32 %861, 0
  br i1 %862, label %863, label %864

863:                                              ; preds = %860
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %849) #8
  br label %864

864:                                              ; preds = %848, %860, %863
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %725) #8
  br label %865

865:                                              ; preds = %721, %864
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %648) #8
  br label %866

866:                                              ; preds = %639, %526, %865
  %867 = phi i64 [ %541, %865 ], [ %541, %639 ], [ %533, %526 ]
  %868 = phi i64 [ %542, %865 ], [ %542, %639 ], [ %536, %526 ]
  %869 = icmp eq i64 %868, 0
  br i1 %869, label %872, label %870

870:                                              ; preds = %866
  %871 = inttoptr i64 %868 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %871) #8
  br label %872

872:                                              ; preds = %870, %866
  %873 = inttoptr i64 %867 to %"class.WTF::StringImpl"*
  %874 = icmp eq i64 %867, 0
  br i1 %874, label %888, label %875

875:                                              ; preds = %872
  %876 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %873, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %877 = load atomic i32, i32* %876 monotonic, align 4
  %878 = and i32 %877, 2
  %879 = icmp eq i32 %878, 0
  %880 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %873, i64 0, i32 0
  %881 = load i32, i32* %880, align 4
  br i1 %879, label %882, label %884

882:                                              ; preds = %875
  %883 = add i32 %881, -1
  store i32 %883, i32* %880, align 4
  br label %884

884:                                              ; preds = %882, %875
  %885 = phi i32 [ %883, %882 ], [ %881, %875 ]
  %886 = icmp eq i32 %885, 0
  br i1 %886, label %887, label %888

887:                                              ; preds = %884
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %873) #8
  br label %888

888:                                              ; preds = %887, %884, %872, %418
  %889 = phi i64 [ %428, %418 ], [ %432, %872 ], [ %432, %884 ], [ %432, %887 ]
  %890 = phi i64 [ %425, %418 ], [ %433, %872 ], [ %433, %884 ], [ %433, %887 ]
  %891 = icmp eq i64 %889, 0
  br i1 %891, label %894, label %892

892:                                              ; preds = %888
  %893 = inttoptr i64 %889 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %893) #8
  br label %894

894:                                              ; preds = %892, %888
  %895 = inttoptr i64 %890 to %"class.WTF::StringImpl"*
  %896 = icmp eq i64 %890, 0
  br i1 %896, label %910, label %897

897:                                              ; preds = %894
  %898 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %895, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %899 = load atomic i32, i32* %898 monotonic, align 4
  %900 = and i32 %899, 2
  %901 = icmp eq i32 %900, 0
  %902 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %895, i64 0, i32 0
  %903 = load i32, i32* %902, align 4
  br i1 %901, label %904, label %906

904:                                              ; preds = %897
  %905 = add i32 %903, -1
  store i32 %905, i32* %902, align 4
  br label %906

906:                                              ; preds = %904, %897
  %907 = phi i32 [ %905, %904 ], [ %903, %897 ]
  %908 = icmp eq i32 %907, 0
  br i1 %908, label %909, label %910

909:                                              ; preds = %906
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %895) #8
  br label %910

910:                                              ; preds = %909, %906, %894, %323
  %911 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %238, align 8
  %912 = icmp eq %"class.blink::DOMWrapperWorld"* %911, null
  br i1 %912, label %920, label %913

913:                                              ; preds = %910
  %914 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %911, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %914) #8
  %915 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %911, i64 0, i32 0, i32 0, i32 0, i32 0
  %916 = load i32, i32* %915, align 4
  %917 = icmp eq i32 %916, 0
  br i1 %917, label %918, label %920

918:                                              ; preds = %913
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %911) #8
  %919 = bitcast %"class.blink::DOMWrapperWorld"* %911 to i8*
  call void @free(i8* %919) #8
  br label %920

920:                                              ; preds = %910, %913, %918
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %237) #8
  br label %921

921:                                              ; preds = %228, %166, %105, %920
  %922 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %923 = load i8*, i8** %922, align 8
  store i8* null, i8** %922, align 8
  %924 = icmp eq i8* %923, null
  br i1 %924, label %926, label %925

925:                                              ; preds = %921
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %923) #8
  br label %926

926:                                              ; preds = %925, %921
  %927 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %928 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %927, align 8
  %929 = icmp eq %"class.WTF::StringImpl"* %928, null
  br i1 %929, label %943, label %930

930:                                              ; preds = %926
  %931 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %928, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %932 = load atomic i32, i32* %931 monotonic, align 4
  %933 = and i32 %932, 2
  %934 = icmp eq i32 %933, 0
  %935 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %928, i64 0, i32 0
  %936 = load i32, i32* %935, align 4
  br i1 %934, label %937, label %939

937:                                              ; preds = %930
  %938 = add i32 %936, -1
  store i32 %938, i32* %935, align 4
  br label %939

939:                                              ; preds = %937, %930
  %940 = phi i32 [ %938, %937 ], [ %936, %930 ]
  %941 = icmp eq i32 %940, 0
  br i1 %941, label %942, label %943

942:                                              ; preds = %939
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %928) #8
  br label %943

943:                                              ; preds = %926, %939, %942
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %106) #8
  br label %944

944:                                              ; preds = %943, %67
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %945 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %946 = load i64*, i64** %945, align 8
  %947 = icmp eq i64* %946, null
  br i1 %947, label %957, label %948

948:                                              ; preds = %944
  %949 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %41, align 8
  %950 = bitcast %"class.v8::Isolate"* %949 to %"class.v8::internal::Isolate"*
  %951 = load i64, i64* %946, align 8
  %952 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %950, i64 %951) #8
  %953 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %949) #8
  br i1 %953, label %957, label %954

954:                                              ; preds = %948
  %955 = bitcast i64* %952 to %"class.v8::Value"*
  %956 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %949, %"class.v8::Value"* %955) #8
  br label %957

957:                                              ; preds = %954, %948, %944
  %958 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %959 = icmp eq %"class.WTF::StringImpl"* %958, null
  br i1 %959, label %973, label %960

960:                                              ; preds = %957
  %961 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %958, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %962 = load atomic i32, i32* %961 monotonic, align 4
  %963 = and i32 %962, 2
  %964 = icmp eq i32 %963, 0
  %965 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %958, i64 0, i32 0
  %966 = load i32, i32* %965, align 4
  br i1 %964, label %967, label %969

967:                                              ; preds = %960
  %968 = add i32 %966, -1
  store i32 %968, i32* %965, align 4
  br label %969

969:                                              ; preds = %967, %960
  %970 = phi i32 [ %968, %967 ], [ %966, %960 ]
  %971 = icmp eq i32 %970, 0
  br i1 %971, label %972, label %973

972:                                              ; preds = %969
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %958) #8
  br label %973

973:                                              ; preds = %957, %969, %972
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %34) #8
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span.182"* byval(%"class.base::span.182") align 8) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages27ConstructorCalledAsFunctionEv() local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32, i32) local_unnamed_addr #2

declare %"class.blink::MessageEvent"* @_ZN5blink12MessageEvent6CreateERKN3WTF12AtomicStringEPKNS_16MessageEventInitERNS_14ExceptionStateE(%"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MessageEventInit"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink12MessageEvent20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::MessageEvent"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %4
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.193"* %24 to i64*
  store i64 0, i64* %25, align 8
  br label %54

26:                                               ; preds = %4, %10
  %27 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2) #8
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::Value"* %2 to %"class.v8::Int32"*
  %30 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %29) #8
  %31 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %31, align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %30) #8
  %33 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.193"* %34 to i64*
  store i64 0, i64* %35, align 8
  br label %54

36:                                               ; preds = %26
  %37 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #8
  %38 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %39 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %2, %"class.v8::Context"* %38) #8
  %40 = icmp eq %"class.v8::String"* %39, null
  br i1 %40, label %41, label %48

41:                                               ; preds = %36
  %42 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %43 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %44 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %44, i64 5
  %46 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %45, align 8
  call void %46(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %42) #8
  %47 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 152, i1 false)
  br label %53

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* %39, %"class.v8::String"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %52 = bitcast %"class.std::__1::unique_ptr.193"* %51 to i64*
  store i64 0, i64* %52, align 8
  br label %53

53:                                               ; preds = %48, %41
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #8
  br label %54

54:                                               ; preds = %53, %28, %21
  ret void
}

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #2

declare void @_ZN5blink16MessageEventInitC1Ev(%"class.blink::MessageEventInit"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.184"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.184"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #8
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %21, i8* %22) #8
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #8
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #8
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.184"*) local_unnamed_addr #2

declare %"class.blink::MessageEventInit"* @_ZN5blink17NativeValueTraitsINS_16MessageEventInitEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare { %"class.v8::Private"*, %"class.v8::Isolate"* } @_ZN5blink17V8PrivateProperty9GetSymbolEPN2v87IsolateERKNS0_9SymbolKeyE(%"class.v8::Isolate"*, %"class.blink::V8PrivateProperty::SymbolKey"* dereferenceable(1)) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.12, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0)) #8
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.12, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.14, i64 0, i64 0)) #8
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #8
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare void @_ZN5blink12MessageEvent4dataEPNS_11ScriptStateE(%"class.blink::ScriptValue"* sret, %"class.blink::MessageEvent"*, %"class.blink::ScriptState"*) local_unnamed_addr #2

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v86Object10GetPrivateENS_5LocalINS_7ContextEEENS1_INS_7PrivateEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Private"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #2

declare i16 @_ZN2v86Object10SetPrivateENS_5LocalINS_7ContextEEENS1_INS_7PrivateEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Private"*, %"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN2v82V817FromJustIsNothingEv() local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"*, i64*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64*, %"class.blink::ScriptWrappable"*, %"class.v8::Object"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %8 = ptrtoint i64* %5 to i64
  %9 = sub i64 %7, %8
  %10 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %11 = icmp ult i64 %9, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %12 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %13 = icmp eq i32 %12, 0
  %14 = and i1 %11, %13
  br i1 %14, label %28, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = icmp eq i64* %17, null
  %19 = icmp eq %"class.v8::Object"* %2, null
  %20 = or i1 %19, %18
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.v8::Object"* %2 to i64*
  %23 = load i64, i64* %17, align 8
  %24 = load i64, i64* %22, align 8
  %25 = icmp eq i64 %23, %24
  br i1 %25, label %28, label %37

26:                                               ; preds = %15
  %27 = and i1 %19, %18
  br i1 %27, label %28, label %37

28:                                               ; preds = %21, %26, %4
  %29 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = icmp eq i64* %30, null
  %32 = getelementptr inbounds i64, i64* %0, i64 -1
  %33 = select i1 %31, i64* %32, i64* %30, !prof !3
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %0, align 8
  %35 = load i64*, i64** %29, align 8
  %36 = icmp ne i64* %35, null
  br label %80

37:                                               ; preds = %21, %26
  %38 = getelementptr inbounds i64, i64* %0, i64 -2
  %39 = bitcast i64* %38 to %"class.v8::Isolate"**
  %40 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %39, align 8
  %41 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %40) #8
  %42 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %41) #8
  %43 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %42, i64 0, i32 2, i32 0
  %44 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %44, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 1
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = icmp eq i64* %52, null
  %54 = getelementptr inbounds i64, i64* %0, i64 -1
  %55 = select i1 %53, i64* %54, i64* %52, !prof !3
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %0, align 8
  %57 = load i64*, i64** %51, align 8
  %58 = icmp ne i64* %57, null
  br label %80

59:                                               ; preds = %37
  %60 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0
  %61 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0
  %62 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %61, %"class.blink::ScriptWrappable"* %1) #8
  %63 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %62, 0
  %64 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0, i32 0
  %65 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %68
  %70 = icmp eq %"struct.WTF::KeyValuePair"* %63, %69
  br i1 %70, label %80, label %71

71:                                               ; preds = %59
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = icmp eq i64* %73, null
  br i1 %74, label %75, label %78, !prof !3

75:                                               ; preds = %71
  %76 = getelementptr inbounds i64, i64* %0, i64 -1
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %0, align 8
  br label %80

78:                                               ; preds = %71
  %79 = load i64, i64* %73, align 8
  store i64 %79, i64* %0, align 8
  br label %80

80:                                               ; preds = %78, %75, %59, %50, %28
  %81 = phi i1 [ %36, %28 ], [ %58, %50 ], [ false, %59 ], [ true, %75 ], [ true, %78 ]
  ret i1 %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

declare void @_ZN5blink12MessageEvent5portsEv(%"class.blink::HeapVector"* sret, %"class.blink::MessageEvent"*) local_unnamed_addr #2

declare i16 @_ZN2v86Object17SetIntegrityLevelENS_5LocalINS_7ContextEEENS_14IntegrityLevelE(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Value"* @_ZN5blink8bindings18ToV8HelperSequenceINS_15ScriptWrappableENS_10HeapVectorINS_6MemberIS2_EELj0EEEEEN2v810MaybeLocalINS7_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"*, %"class.blink::HeapVector.590"* dereferenceable(16)) local_unnamed_addr #4 comdat {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %5 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  %8 = icmp eq %"class.v8::Context"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.v8::Isolate"* %5 to %"class.v8::internal::Isolate"*
  %11 = bitcast %"class.v8::Context"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %10, i64 %12) #8
  %14 = bitcast i64* %13 to %"class.v8::Context"*
  br label %15

15:                                               ; preds = %2, %9
  %16 = phi %"class.v8::Context"* [ %14, %9 ], [ null, %2 ]
  tail call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %16) #8
  %17 = getelementptr inbounds %"class.blink::HeapVector.590", %"class.blink::HeapVector.590"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, -1
  br i1 %19, label %21, label %20, !prof !4

20:                                               ; preds = %15
  tail call void @llvm.trap() #8
  unreachable

21:                                               ; preds = %15
  %22 = tail call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %5, i32 %18) #8
  tail call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %16) #8
  %23 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  %24 = icmp eq %"class.v8::Context"* %23, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.blink::ScriptState"* %0 to %"class.v8::internal::Isolate"**
  %27 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %26, align 8
  %28 = bitcast %"class.v8::Context"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %27, i64 %29) #8
  %31 = bitcast i64* %30 to %"class.v8::Context"*
  br label %32

32:                                               ; preds = %21, %25
  %33 = phi %"class.v8::Context"* [ %31, %25 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.blink::HeapVector.590", %"class.blink::HeapVector.590"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Member.596"*, %"class.blink::Member.596"** %34, align 8
  %36 = load i32, i32* %17, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::Member.596", %"class.blink::Member.596"* %35, i64 %37
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %75, label %40

40:                                               ; preds = %32
  %41 = bitcast %"class.logging::CheckError"* %3 to i8*
  %42 = bitcast %"class.v8::Array"* %22 to %"class.v8::Object"*
  br label %43

43:                                               ; preds = %40, %71
  %44 = phi i32 [ 0, %40 ], [ %72, %71 ]
  %45 = phi %"class.blink::Member.596"* [ %35, %40 ], [ %73, %71 ]
  %46 = getelementptr inbounds %"class.blink::Member.596", %"class.blink::Member.596"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %46, align 8
  %48 = icmp eq %"class.blink::ScriptWrappable"* %47, null
  br i1 %48, label %49, label %51

49:                                               ; preds = %43
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.15, i64 0, i64 0), i32 209, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i64 0, i64 0)) #8
  %50 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #8
  br label %51

51:                                               ; preds = %49, %43
  %52 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  %53 = call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* %47, %"class.v8::Isolate"* %52) #8
  %54 = bitcast %"class.v8::Object"* %53 to %"class.v8::Value"*
  %55 = icmp eq %"class.v8::Object"* %53, null
  br i1 %55, label %56, label %62

56:                                               ; preds = %51
  %57 = bitcast %"class.blink::ScriptWrappable"* %47 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %58 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %57, align 8
  %59 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %58, i64 7
  %60 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %59, align 8
  %61 = call %"class.v8::Value"* %60(%"class.blink::ScriptWrappable"* %47, %"class.blink::ScriptState"* %0) #8
  br label %62

62:                                               ; preds = %51, %56
  %63 = phi %"class.v8::Value"* [ %61, %56 ], [ %54, %51 ]
  %64 = icmp eq %"class.v8::Value"* %63, null
  br i1 %64, label %77, label %65

65:                                               ; preds = %62
  %66 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %42, %"class.v8::Context"* %33, i32 %44, %"class.v8::Value"* nonnull %63) #8
  %67 = trunc i16 %66 to i8
  %68 = icmp eq i8 %67, 0
  %69 = icmp ult i16 %66, 256
  %70 = or i1 %69, %68
  br i1 %70, label %77, label %71, !prof !10

71:                                               ; preds = %65
  %72 = add i32 %44, 1
  %73 = getelementptr inbounds %"class.blink::Member.596", %"class.blink::Member.596"* %45, i64 1
  %74 = icmp eq %"class.blink::Member.596"* %73, %38
  br i1 %74, label %75, label %43

75:                                               ; preds = %71, %32
  %76 = bitcast %"class.v8::Array"* %22 to %"class.v8::Value"*
  br label %77

77:                                               ; preds = %62, %65, %75
  %78 = phi %"class.v8::Value"* [ %76, %75 ], [ null, %65 ], [ null, %62 ]
  ret %"class.v8::Value"* %78
}

declare %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, i32, %"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8
  %5 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %6 = ptrtoint i64* %3 to i64
  %7 = sub i64 %5, %6
  %8 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %9 = icmp ult i64 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8
  %10 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference"* %14 to %"class.v8::Object"**
  %16 = load %"class.v8::Object"*, %"class.v8::Object"** %15, align 8
  %17 = icmp eq %"class.v8::Object"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::Object"* %16 to i64*
  %20 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %21 = load i64, i64* %19, align 8
  %22 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %21) #8
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  br label %68

24:                                               ; preds = %2
  %25 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %26 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25) #8
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 2, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference"* %35 to %"class.v8::Object"**
  %37 = load %"class.v8::Object"*, %"class.v8::Object"** %36, align 8
  %38 = icmp eq %"class.v8::Object"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::Object"* %37 to i64*
  %41 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %42 = load i64, i64* %40, align 8
  %43 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %42) #8
  %44 = bitcast i64* %43 to %"class.v8::Object"*
  br label %68

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0
  %47 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0
  %48 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %47, %"class.blink::ScriptWrappable"* %0) #8
  %49 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %48, 0
  %50 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 %54
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %49, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference"* %58 to %"class.v8::Object"**
  %60 = load %"class.v8::Object"*, %"class.v8::Object"** %59, align 8
  %61 = icmp eq %"class.v8::Object"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::Object"* %60 to i64*
  %64 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %63, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #8
  %67 = bitcast i64* %66 to %"class.v8::Object"*
  br label %68

68:                                               ; preds = %62, %57, %45, %39, %34, %18, %13
  %69 = phi %"class.v8::Object"* [ %23, %18 ], [ null, %13 ], [ %44, %39 ], [ null, %34 ], [ %67, %62 ], [ null, %57 ], [ null, %45 ]
  ret %"class.v8::Object"* %69
}

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN5blink11ScriptValue10CreateNullEPN2v87IsolateE(%"class.blink::ScriptValue"* sret, %"class.v8::Isolate"*) local_unnamed_addr #2

declare void @_ZN5blink12MessageEvent16initMessageEventERKN3WTF12AtomicStringEbbRKNS_11ScriptValueERKNS1_6StringESA_PNS_11EventTargetERNS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEE(%"class.blink::MessageEvent"*, %"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext, i1 zeroext, %"class.blink::ScriptValue"* dereferenceable(24), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::EventTarget"*, %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"*, %"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"*, %"class.blink::WorldSafeV8Reference"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %4 = icmp eq %"class.blink::WorldSafeV8Reference"* %0, %1
  br i1 %4, label %16, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = icmp eq i64* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  tail call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %7) #8
  %10 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  br label %11

11:                                               ; preds = %9, %5
  %12 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = icmp eq i64* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %12, i64** %6) #8
  br label %16

16:                                               ; preds = %2, %11, %15
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.189"* dereferenceable(8) %3) #8
  %17 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %1, i64 0, i32 1, i32 0
  %19 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %18, align 8
  %20 = icmp eq %"class.blink::DOMWrapperWorld"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %19, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %22) #8
  br label %23

23:                                               ; preds = %16, %21
  %24 = ptrtoint %"class.blink::DOMWrapperWorld"* %19 to i64
  %25 = bitcast %class.scoped_refptr.199* %17 to i64*
  %26 = getelementptr inbounds %class.scoped_refptr.199, %class.scoped_refptr.199* %17, i64 0, i32 0
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #8
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #8
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #8
  br label %36

36:                                               ; preds = %23, %29, %34
  ret %"class.blink::WorldSafeV8Reference"* %0
}

declare void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64**, i64**) local_unnamed_addr #2

declare void @_ZN2v82V819DisposeTracedGlobalEPm(i64*) local_unnamed_addr #2

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.189"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"*, %"class.v8::Isolate"*, %"class.v8::Value"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.scoped_refptr.199, %class.scoped_refptr.199* %4, i64 0, i32 0
  %6 = icmp eq %"class.v8::Value"* %2, null
  %7 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  br i1 %6, label %61, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %10 = bitcast %"class.v8::Value"* %2 to i64*
  %11 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %12 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  %13 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %11, i64* nonnull %10, i64* %12, i1 zeroext false) #8
  %14 = ptrtoint i64* %13 to i64
  store atomic i64 %14, i64* %12 monotonic, align 8
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.189"* dereferenceable(8) %9) #8
  %15 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %1) #8
  br i1 %15, label %16, label %38

16:                                               ; preds = %8
  %17 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %18 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %17) #8
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %18, i64 0, i32 2, i32 0
  %20 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %19, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #8
  br label %24

24:                                               ; preds = %22, %16
  %25 = ptrtoint %"class.blink::DOMWrapperWorld"* %20 to i64
  %26 = bitcast %class.scoped_refptr.199* %4 to i64*
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %25, i64* %26, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #8
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #8
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #8
  br label %36

36:                                               ; preds = %24, %29, %34
  %37 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  tail call void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32) %37, %"class.v8::Value"* nonnull %2) #8
  br label %61

38:                                               ; preds = %8
  %39 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %2) #8
  br i1 %39, label %40, label %61

40:                                               ; preds = %38
  %41 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %42 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* nonnull %41) #8
  %43 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %42)
  %44 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %43, i64 0, i32 2, i32 0
  %45 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %44, align 8
  %46 = icmp eq %"class.blink::DOMWrapperWorld"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #8
  br label %49

49:                                               ; preds = %47, %40
  %50 = ptrtoint %"class.blink::DOMWrapperWorld"* %45 to i64
  %51 = bitcast %class.scoped_refptr.199* %4 to i64*
  %52 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %50, i64* %51, align 8
  %53 = icmp eq %"class.blink::DOMWrapperWorld"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #8
  %56 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %52) #8
  %60 = bitcast %"class.blink::DOMWrapperWorld"* %52 to i8*
  tail call void @free(i8* %60) #8
  br label %61

61:                                               ; preds = %59, %54, %49, %38, %3, %36
  ret void
}

declare zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_18IDLUSVStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %6 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %6) #8
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %7 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 0, i32 0
  %8 = load %"class.v8::String"*, %"class.v8::String"** %7, align 8
  %9 = icmp eq %"class.v8::String"* %8, null
  br i1 %9, label %12, label %10, !prof !3

10:                                               ; preds = %4
  %11 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %8, i32 0) #8
  br label %33

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #8
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !3

30:                                               ; preds = %21
  call void @llvm.trap() #8
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %33

33:                                               ; preds = %10, %12, %16, %31
  %34 = phi %"class.WTF::StringImpl"* [ %11, %10 ], [ null, %12 ], [ %14, %16 ], [ %14, %31 ]
  %35 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  store i8* null, i8** %35, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %33
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %36) #8
  br label %39

39:                                               ; preds = %38, %33
  %40 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #8
  br label %56

56:                                               ; preds = %39, %52, %55
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %6) #8
  %57 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  %61 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 152, i1 false)
  br label %120

62:                                               ; preds = %56
  %63 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %63, label %81, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %81

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i33
  %73 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %72, i33 1) #8
  %74 = extractvalue { i33, i1 } %73, 1
  %75 = extractvalue { i33, i1 } %73, 0
  %76 = icmp slt i33 %75, 0
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %79, !prof !3

78:                                               ; preds = %69
  call void @llvm.trap() #8
  unreachable

79:                                               ; preds = %69
  %80 = trunc i33 %75 to i32
  store i32 %80, i32* %70, align 4
  br label %81

81:                                               ; preds = %62, %64, %79
  %82 = call %"class.WTF::StringImpl"* @_ZN5blink26ReplaceUnmatchedSurrogatesEN3WTF6StringE(%"class.WTF::StringImpl"* %34) #8
  %83 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %83, align 8
  %84 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %82, %"class.WTF::StringImpl"** %84, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %85, label %103, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %106

93:                                               ; preds = %86
  %94 = zext i32 %92 to i33
  %95 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %94, i33 1) #8
  %96 = extractvalue { i33, i1 } %95, 1
  %97 = extractvalue { i33, i1 } %95, 0
  %98 = icmp slt i33 %97, 0
  %99 = or i1 %96, %98
  br i1 %99, label %100, label %101, !prof !3

100:                                              ; preds = %93
  call void @llvm.trap() #8
  unreachable

101:                                              ; preds = %93
  %102 = trunc i33 %97 to i32
  store i32 %102, i32* %91, align 4
  br label %106

103:                                              ; preds = %81
  %104 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %105 = bitcast %"class.std::__1::unique_ptr.193"* %104 to i64*
  store i64 0, i64* %105, align 8
  br label %120

106:                                              ; preds = %86, %101
  %107 = phi i32 [ %102, %101 ], [ %92, %86 ]
  %108 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %109 = bitcast %"class.std::__1::unique_ptr.193"* %108 to i64*
  store i64 0, i64* %109, align 8
  %110 = load atomic i32, i32* %87 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %106
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %115 = add i32 %107, -1
  store i32 %115, i32* %114, align 4
  br label %116

116:                                              ; preds = %113, %106
  %117 = phi i32 [ %115, %113 ], [ %107, %106 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #8
  br label %120

120:                                              ; preds = %119, %116, %103, %60
  %121 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %121, label %135, label %122

122:                                              ; preds = %120
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  br i1 %126, label %129, label %131

129:                                              ; preds = %122
  %130 = add i32 %128, -1
  store i32 %130, i32* %127, align 4
  br label %131

131:                                              ; preds = %129, %122
  %132 = phi i32 [ %130, %129 ], [ %128, %122 ]
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #8
  br label %135

135:                                              ; preds = %120, %131, %134
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink26ReplaceUnmatchedSurrogatesEN3WTF6StringE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_11MessagePortEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::HeapVector"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #8
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_11MessagePortEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE(%"class.blink::HeapVector"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #8
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.18, i64 0, i64 0)) #8
  %12 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.19, i64 0, i64 0)) #8
  %26 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false)
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_11MessagePortEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.blink::HeapVector"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #8
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

declare zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_11MessagePortEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE(%"class.blink::HeapVector"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.blink::HeapVector", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.blink::MessagePort"*, align 8
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 16777216
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i64 0, i64 0)) #8
  %12 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  br label %143

13:                                               ; preds = %4
  %14 = bitcast %"class.blink::HeapVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #8
  %18 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0
  %19 = icmp eq i32 %8, 0
  br i1 %19, label %32, label %20

20:                                               ; preds = %13
  %21 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11MessagePortEEEEEmm(i64 %9) #8
  %22 = lshr i64 %21, 3
  %23 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %22) #8
  %24 = ptrtoint %"class.blink::HeapVectorBacking"* %23 to i64
  %25 = bitcast %"class.blink::HeapVector"* %5 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  %26 = trunc i64 %22 to i32
  store i32 %26, i32* %16, align 8
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %23, i64 0, i32 0
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #8
  br label %32

32:                                               ; preds = %13, %20, %29
  %33 = phi i32 [ 0, %13 ], [ %26, %20 ], [ %26, %29 ]
  %34 = phi i64 [ 0, %13 ], [ %24, %20 ], [ %24, %29 ]
  %35 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %36 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %36) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #8
  %37 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %32
  %40 = bitcast %"class.blink::HeapVector"* %5 to i64*
  br label %121

41:                                               ; preds = %32
  %42 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %43 = bitcast %"class.blink::MessagePort"** %7 to i8*
  %44 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11MessagePort18wrapper_type_info_E, align 8
  %45 = ptrtoint %"class.v8::Isolate"* %1 to i64
  %46 = add i64 %45, 8
  %47 = inttoptr i64 %46 to %"class.blink::V8PerIsolateData"**
  %48 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %49 = bitcast %"class.blink::MessagePort"** %7 to i8**
  br label %50

50:                                               ; preds = %41, %112
  %51 = phi i32 [ 0, %41 ], [ %113, %112 ]
  %52 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %42, %"class.v8::Context"* %35, i32 %51) #8
  %53 = icmp eq %"class.v8::Value"* %52, null
  br i1 %53, label %54, label %61

54:                                               ; preds = %50
  %55 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %56 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %57 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %57, i64 5
  %59 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %58, align 8
  call void %59(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %55) #8
  %60 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false)
  br label %142

61:                                               ; preds = %50
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #8
  %62 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %47, align 8
  %63 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %62, %"struct.blink::WrapperTypeInfo"* %44, %"class.v8::Value"* nonnull %52) #8
  br i1 %63, label %64, label %86

64:                                               ; preds = %61
  %65 = bitcast %"class.v8::Value"* %52 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, -1
  %68 = inttoptr i64 %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = and i64 %66, -4294967296
  %71 = zext i32 %69 to i64
  %72 = or i64 %70, %71
  %73 = add i64 %72, 7
  %74 = inttoptr i64 %73 to i16*
  %75 = load i16, i16* %74, align 2
  switch i16 %75, label %80 [
    i16 1057, label %76
    i16 1056, label %76
    i16 1040, label %76
  ]

76:                                               ; preds = %64, %64, %64
  %77 = add i64 %66, 19
  %78 = inttoptr i64 %77 to i8**
  %79 = load i8*, i8** %78, align 1
  br label %83

80:                                               ; preds = %64
  %81 = bitcast %"class.v8::Value"* %52 to %"class.v8::Object"*
  %82 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* nonnull %81, i32 1) #8
  br label %83

83:                                               ; preds = %80, %76
  %84 = phi i8* [ %79, %76 ], [ %82, %80 ]
  %85 = bitcast i8* %84 to %"class.blink::MessagePort"*
  br label %87

86:                                               ; preds = %61
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoERNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %44, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  br label %87

87:                                               ; preds = %83, %86
  %88 = phi i8* [ %84, %83 ], [ null, %86 ]
  %89 = phi %"class.blink::MessagePort"* [ %85, %83 ], [ null, %86 ]
  store i8* %88, i8** %49, align 8
  %90 = load i32, i32* %48, align 8
  %91 = icmp eq i32 %90, 0
  %92 = ptrtoint %"class.blink::MessagePort"* %89 to i64
  br i1 %91, label %93, label %110

93:                                               ; preds = %87
  %94 = load i32, i32* %17, align 4
  %95 = load i32, i32* %16, align 8
  %96 = icmp eq i32 %94, %95
  br i1 %96, label %109, label %97, !prof !3

97:                                               ; preds = %93
  %98 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %99 = zext i32 %94 to i64
  %100 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %98, i64 %99
  %101 = bitcast %"class.blink::Member"* %100 to i64*
  store atomic i64 %92, i64* %101 monotonic, align 8
  %102 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %97
  %105 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %88) #8
  br label %106

106:                                              ; preds = %104, %97
  %107 = load i32, i32* %17, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %17, align 4
  br label %112

109:                                              ; preds = %93
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_11MessagePortEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.202"* nonnull %18, %"class.blink::MessagePort"** nonnull dereferenceable(8) %7) #8
  br label %112

110:                                              ; preds = %87
  %111 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  br label %142

112:                                              ; preds = %106, %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  %113 = add nuw i32 %51, 1
  %114 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %115 = icmp ult i32 %113, %114
  br i1 %115, label %50, label %116

116:                                              ; preds = %112
  %117 = bitcast %"class.blink::HeapVector"* %5 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = load i32, i32* %16, align 8
  %120 = load i32, i32* %17, align 4
  br label %121

121:                                              ; preds = %39, %116
  %122 = phi i64* [ %40, %39 ], [ %117, %116 ]
  %123 = phi i32 [ 0, %39 ], [ %120, %116 ]
  %124 = phi i32 [ %33, %39 ], [ %119, %116 ]
  %125 = phi i64 [ %34, %39 ], [ %118, %116 ]
  %126 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %127 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %128 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store i64 0, i64* %128, align 8
  %129 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store atomic i64 0, i64* %122 monotonic, align 8
  store atomic i64 %125, i64* %129 monotonic, align 8
  store i32 %124, i32* %126, align 8
  store i32 0, i32* %16, align 8
  store i32 %123, i32* %127, align 4
  store i32 0, i32* %17, align 4
  %130 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %135, label %132

132:                                              ; preds = %121
  %133 = inttoptr i64 %125 to i8*
  %134 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %133) #8
  br label %135

135:                                              ; preds = %132, %121
  %136 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %142, label %138

138:                                              ; preds = %135
  %139 = bitcast %"class.blink::HeapVector"* %5 to i8**
  %140 = load i8*, i8** %139, align 8
  %141 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %140) #8
  br label %142

142:                                              ; preds = %54, %110, %138, %135
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %36) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8
  br label %143

143:                                              ; preds = %142, %11
  ret void
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

declare void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* sret, %"class.v8::Isolate"*, %"class.v8::Object"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_11MessagePortEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.blink::HeapVector"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.blink::HeapVector", align 8
  %6 = alloca %"class.blink::MessagePort"*, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #8
  %9 = bitcast %"class.blink::HeapVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #8
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #8
  br i1 %13, label %14, label %81

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast %"class.blink::MessagePort"** %6 to i8*
  %17 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11MessagePort18wrapper_type_info_E, align 8
  %18 = ptrtoint %"class.v8::Isolate"* %1 to i64
  %19 = add i64 %18, 8
  %20 = inttoptr i64 %19 to %"class.blink::V8PerIsolateData"**
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %22 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0
  %23 = bitcast %"class.blink::MessagePort"** %6 to i8**
  br label %24

24:                                               ; preds = %14, %79
  %25 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %26 = icmp eq %"class.v8::Value"* %25, null
  br i1 %26, label %27, label %28, !prof !3

27:                                               ; preds = %24
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %28

28:                                               ; preds = %24, %27
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %20, align 8
  %30 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %29, %"struct.blink::WrapperTypeInfo"* %17, %"class.v8::Value"* %25) #8
  br i1 %30, label %31, label %53

31:                                               ; preds = %28
  %32 = bitcast %"class.v8::Value"* %25 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, -1
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = and i64 %33, -4294967296
  %38 = zext i32 %36 to i64
  %39 = or i64 %37, %38
  %40 = add i64 %39, 7
  %41 = inttoptr i64 %40 to i16*
  %42 = load i16, i16* %41, align 2
  switch i16 %42, label %47 [
    i16 1057, label %43
    i16 1056, label %43
    i16 1040, label %43
  ]

43:                                               ; preds = %31, %31, %31
  %44 = add i64 %33, 19
  %45 = inttoptr i64 %44 to i8**
  %46 = load i8*, i8** %45, align 1
  br label %50

47:                                               ; preds = %31
  %48 = bitcast %"class.v8::Value"* %25 to %"class.v8::Object"*
  %49 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %48, i32 1) #8
  br label %50

50:                                               ; preds = %47, %43
  %51 = phi i8* [ %46, %43 ], [ %49, %47 ]
  %52 = bitcast i8* %51 to %"class.blink::MessagePort"*
  br label %54

53:                                               ; preds = %28
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoERNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %17, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  br label %54

54:                                               ; preds = %50, %53
  %55 = phi i8* [ %51, %50 ], [ null, %53 ]
  %56 = phi %"class.blink::MessagePort"* [ %52, %50 ], [ null, %53 ]
  store i8* %55, i8** %23, align 8
  %57 = load i32, i32* %21, align 8
  %58 = icmp eq i32 %57, 0
  %59 = ptrtoint %"class.blink::MessagePort"* %56 to i64
  br i1 %58, label %62, label %60

60:                                               ; preds = %54
  %61 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %108

62:                                               ; preds = %54
  %63 = load i32, i32* %12, align 4
  %64 = load i32, i32* %11, align 8
  %65 = icmp eq i32 %63, %64
  br i1 %65, label %78, label %66, !prof !3

66:                                               ; preds = %62
  %67 = load %"class.blink::Member"*, %"class.blink::Member"** %10, align 8
  %68 = zext i32 %63 to i64
  %69 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %67, i64 %68
  %70 = bitcast %"class.blink::Member"* %69 to i64*
  store atomic i64 %59, i64* %70 monotonic, align 8
  %71 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %66
  %74 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %55) #8
  br label %75

75:                                               ; preds = %73, %66
  %76 = load i32, i32* %12, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %12, align 4
  br label %79

78:                                               ; preds = %62
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_11MessagePortEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.202"* nonnull %22, %"class.blink::MessagePort"** nonnull dereferenceable(8) %6) #8
  br label %79

79:                                               ; preds = %75, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  %80 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #8
  br i1 %80, label %24, label %81

81:                                               ; preds = %79, %4
  %82 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 16, i1 false)
  br label %108

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %89 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %90 = bitcast %"class.blink::HeapVector"* %5 to i64*
  %91 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store i64 0, i64* %91, align 8
  %92 = load i64, i64* %90, align 8
  %93 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store atomic i64 0, i64* %90 monotonic, align 8
  store atomic i64 %92, i64* %93 monotonic, align 8
  %94 = load i32, i32* %11, align 8
  store i32 %94, i32* %88, align 8
  store i32 0, i32* %11, align 8
  %95 = load i32, i32* %12, align 4
  store i32 %95, i32* %89, align 4
  store i32 0, i32* %12, align 4
  %96 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %101, label %98

98:                                               ; preds = %87
  %99 = inttoptr i64 %92 to i8*
  %100 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %99) #8
  br label %101

101:                                              ; preds = %98, %87
  %102 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %108, label %104

104:                                              ; preds = %101
  %105 = bitcast %"class.blink::HeapVector"* %5 to i8**
  %106 = load i8*, i8** %105, align 8
  %107 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %106) #8
  br label %108

108:                                              ; preds = %104, %101, %60, %85
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  ret void
}

declare i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11MessagePortEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.21, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.22, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.23, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.24, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.184"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.184"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([163 x i8], [163 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_11MessagePortEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11MessagePortEE5TraceEPNS_7VisitorEPKv) #8
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11MessagePortEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::MessagePort"*
  %4 = bitcast i8* %1 to void (%"class.blink::MessagePort"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::MessagePort"*, %"class.blink::Visitor"*)**, void (%"class.blink::MessagePort"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::MessagePort"*, %"class.blink::Visitor"*)*, void (%"class.blink::MessagePort"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::MessagePort"*, %"class.blink::Visitor"*)*, void (%"class.blink::MessagePort"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::MessagePort"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoERNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_11MessagePortEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.202"*, %"class.blink::MessagePort"** dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_11MessagePortEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.202"* %0, i32 %14) #8
  %15 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::MessagePort"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #8
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_11MessagePortEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.202"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11MessagePortEEEEEmm(i64 %11) #8
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #8
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.202"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #8
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #8
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #8
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.26, i64 0, i64 0)) #8
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #8
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_11MessagePortEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.202"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_11MessagePortEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.202"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.202"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.202"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #8
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11MessagePortEEEEEmm(i64 %14) #8
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #8
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.202"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #8
  %33 = bitcast %"class.WTF::Vector.202"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #8
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #8
  %42 = bitcast %"class.WTF::Vector.202"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #8
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"*, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72), %"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN5blink17NativeValueTraitsINS_6IDLAnyEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!7 = distinct !{!7, !"_ZN5blink17NativeValueTraitsINS_6IDLAnyEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!8 = distinct !{!8, !9, !"_ZN5blink21NativeValueTraitsBaseINS_6IDLAnyEvE13ArgumentValueIJEEEDcPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateEDpT_: argument 0"}
!9 = distinct !{!9, !"_ZN5blink21NativeValueTraitsBaseINS_6IDLAnyEvE13ArgumentValueIJEEEDcPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateEDpT_"}
!10 = !{!"branch_weights", i32 2002, i32 2000}
