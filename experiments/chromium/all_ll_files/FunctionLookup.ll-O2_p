; ModuleID = '../../third_party/angle/src/compiler/translator/FunctionLookup.cpp'
source_filename = "../../third_party/angle/src/compiler/translator/FunctionLookup.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sh::ImmutableString" = type { i8*, i64 }
%"class.sh::TFunctionLookup" = type { %"class.sh::ImmutableString", %"class.sh::TType"*, %"class.sh::TIntermTyped"*, %"class.sh::TVector.0", %"class.sh::TSymbol"* }
%"class.sh::TIntermTyped" = type { %"class.sh::TIntermNode" }
%"class.sh::TIntermNode" = type { i32 (...)**, %"struct.sh::TSourceLoc" }
%"struct.sh::TSourceLoc" = type { i32, i32, i32, i32 }
%"class.sh::TVector.0" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.sh::TIntermNode"** }
%"class.sh::TType" = type { i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", i8, %"struct.sh::TLayoutQualifier", i8, i8, %"class.sh::TSpan", %"class.sh::TVector"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }
%"struct.sh::TMemoryQualifier" = type { i8, i8, i8, i8, i8 }
%"struct.sh::TLayoutQualifier" = type <{ i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8] }>
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.sh::TSpan" = type { i32*, i64 }
%"class.sh::TVector" = type opaque
%"class.sh::TInterfaceBlock" = type opaque
%"class.sh::TStructure" = type opaque
%"class.sh::TSymbol" = type opaque
%"class.angle::PoolAllocator" = type <{ i64, i64, i64, i64, i64, %"struct.angle::PoolAllocator::Header"*, %"struct.angle::PoolAllocator::Header"*, %"class.std::__1::vector.27", i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.angle::PoolAllocator::Header" = type { %"struct.angle::PoolAllocator::Header"*, i64 }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { %"struct.angle::PoolAllocator::AllocState"*, %"struct.angle::PoolAllocator::AllocState"*, %"class.std::__1::__compressed_pair.29" }
%"struct.angle::PoolAllocator::AllocState" = type { i64, %"struct.angle::PoolAllocator::Header"* }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.angle::PoolAllocator::AllocState"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::vector.5" = type { %"class.std::__1::__vector_base.6" }
%"class.std::__1::__vector_base.6" = type { %"class.sh::ImmutableString"*, %"class.sh::ImmutableString"*, %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.sh::ImmutableString"* }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { i32*, i32*, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i32* }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"class.std::__1::vector.12"*, %"class.std::__1::vector.12"*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::vector.12"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ = comdat any

@_ZN2sh12_GLOBAL__N_110kEmptyNameE = internal unnamed_addr constant %"class.sh::ImmutableString" { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i64 0 }, align 8
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

@_ZN2sh15TFunctionLookupC1ERKNS_15ImmutableStringEPKNS_5TTypeEPKNS_7TSymbolE = hidden unnamed_addr alias void (%"class.sh::TFunctionLookup"*, %"class.sh::ImmutableString"*, %"class.sh::TType"*, %"class.sh::TSymbol"*), void (%"class.sh::TFunctionLookup"*, %"class.sh::ImmutableString"*, %"class.sh::TType"*, %"class.sh::TSymbol"*)* @_ZN2sh15TFunctionLookupC2ERKNS_15ImmutableStringEPKNS_5TTypeEPKNS_7TSymbolE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh15TFunctionLookupC2ERKNS_15ImmutableStringEPKNS_5TTypeEPKNS_7TSymbolE(%"class.sh::TFunctionLookup"* nocapture, %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16), %"class.sh::TType"*, %"class.sh::TSymbol"*) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.sh::TFunctionLookup"* %0 to i8*
  %6 = bitcast %"class.sh::ImmutableString"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false)
  %7 = getelementptr inbounds %"class.sh::TFunctionLookup", %"class.sh::TFunctionLookup"* %0, i64 0, i32 1
  store %"class.sh::TType"* %2, %"class.sh::TType"** %7, align 8
  %8 = getelementptr inbounds %"class.sh::TFunctionLookup", %"class.sh::TFunctionLookup"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.sh::TFunctionLookup", %"class.sh::TFunctionLookup"* %0, i64 0, i32 4
  %10 = bitcast %"class.sh::TIntermTyped"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false)
  store %"class.sh::TSymbol"* %3, %"class.sh::TSymbol"** %9, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TFunctionLookup"* @_ZN2sh15TFunctionLookup17CreateConstructorEPKNS_5TTypeE(%"class.sh::TType"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #12
  %3 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %2, i64 64) #12
  %4 = bitcast i8* %3 to %"class.sh::TFunctionLookup"*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 bitcast (%"class.sh::ImmutableString"* @_ZN2sh12_GLOBAL__N_110kEmptyNameE to i8*), i64 16, i1 false) #12
  %5 = getelementptr inbounds i8, i8* %3, i64 16
  %6 = bitcast i8* %5 to %"class.sh::TType"**
  store %"class.sh::TType"* %0, %"class.sh::TType"** %6, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 40, i1 false)
  ret %"class.sh::TFunctionLookup"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TFunctionLookup"* @_ZN2sh15TFunctionLookup18CreateFunctionCallERKNS_15ImmutableStringEPKNS_7TSymbolE(%"class.sh::ImmutableString"* nocapture readonly dereferenceable(16), %"class.sh::TSymbol"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #12
  %4 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %3, i64 64) #12
  %5 = bitcast i8* %4 to %"class.sh::TFunctionLookup"*
  %6 = bitcast %"class.sh::ImmutableString"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %6, i64 16, i1 false) #12
  %7 = getelementptr inbounds i8, i8* %4, i64 16
  %8 = getelementptr inbounds i8, i8* %4, i64 56
  %9 = bitcast i8* %8 to %"class.sh::TSymbol"**
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 40, i1 false)
  store %"class.sh::TSymbol"* %1, %"class.sh::TSymbol"** %9, align 8
  ret %"class.sh::TFunctionLookup"* %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(16) %"class.sh::ImmutableString"* @_ZNK2sh15TFunctionLookup4nameEv(%"class.sh::TFunctionLookup"* readnone) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.sh::TFunctionLookup", %"class.sh::TFunctionLookup"* %0, i64 0, i32 0
  ret %"class.sh::ImmutableString"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZNK2sh15TFunctionLookup14getMangledNameEv(%"class.sh::TFunctionLookup"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sh::TFunctionLookup", %"class.sh::TFunctionLookup"* %0, i64 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  %5 = select i1 %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %3
  %6 = getelementptr inbounds %"class.sh::TFunctionLookup", %"class.sh::TFunctionLookup"* %0, i64 0, i32 3
  %7 = tail call { i8*, i64 } @_ZN2sh15TFunctionLookup14GetMangledNameEPKcRKNS_7TVectorIPNS_11TIntermNodeEEE(i8* %5, %"class.sh::TVector.0"* dereferenceable(24) %6)
  ret { i8*, i64 } %7
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZN2sh15TFunctionLookup14GetMangledNameEPKcRKNS_7TVectorIPNS_11TIntermNodeEEE(i8* nocapture readonly, %"class.sh::TVector.0"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %8 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  %9 = tail call i64 @strlen(i8* %0) #12
  %10 = icmp ugt i64 %9, -17
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %12) #13
  unreachable

13:                                               ; preds = %2
  %14 = icmp ult i64 %9, 23
  br i1 %14, label %20, label %15

15:                                               ; preds = %13
  %16 = add nuw i64 %9, 16
  %17 = and i64 %16, -16
  %18 = tail call i8* @_Znwm(i64 %17) #14
  store i8* %18, i8** %5, align 8
  %19 = or i64 %17, -9223372036854775808
  store i64 %19, i64* %7, align 8
  store i64 %9, i64* %6, align 8
  br label %25

20:                                               ; preds = %13
  %21 = trunc i64 %9 to i8
  %22 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = icmp eq i64 %9, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20, %15
  %26 = phi i8* [ %18, %15 ], [ %4, %20 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 %0, i64 %9, i1 false) #12
  br label %27

27:                                               ; preds = %20, %25
  %28 = phi i8* [ %4, %20 ], [ %26, %25 ]
  %29 = getelementptr inbounds i8, i8* %28, i64 %9
  store i8 0, i8* %29, align 1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %3, i8 signext 40) #12
  %30 = getelementptr inbounds %"class.sh::TVector.0", %"class.sh::TVector.0"* %1, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %30, align 8
  %32 = getelementptr inbounds %"class.sh::TVector.0", %"class.sh::TVector.0"* %1, i64 0, i32 0, i32 0, i32 1
  %33 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %32, align 8
  %34 = icmp eq %"class.sh::TIntermNode"** %31, %33
  br i1 %34, label %35, label %58

35:                                               ; preds = %58, %27
  %36 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  %40 = load i8*, i8** %5, align 8
  %41 = load i64, i64* %6, align 8
  %42 = zext i8 %38 to i64
  %43 = select i1 %39, i8* %40, i8* %4
  %44 = select i1 %39, i64 %41, i64 %42
  %45 = add i64 %44, 1
  %46 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #12
  %47 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %46, i64 %45) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %47, i8* align 1 %43, i64 %45, i1 false) #12
  %48 = load i8, i8* %37, align 1
  %49 = icmp slt i8 %48, 0
  %50 = load i64, i64* %6, align 8
  %51 = zext i8 %48 to i64
  %52 = select i1 %49, i64 %50, i64 %51
  br i1 %49, label %53, label %55

53:                                               ; preds = %35
  %54 = load i8*, i8** %5, align 8
  call void @_ZdlPv(i8* %54) #14
  br label %55

55:                                               ; preds = %35, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  %56 = insertvalue { i8*, i64 } undef, i8* %47, 0
  %57 = insertvalue { i8*, i64 } %56, i64 %52, 1
  ret { i8*, i64 } %57

58:                                               ; preds = %27, %58
  %59 = phi %"class.sh::TIntermNode"** [ %73, %58 ], [ %31, %27 ]
  %60 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %59, align 8
  %61 = bitcast %"class.sh::TIntermNode"* %60 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %62 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %61, align 8
  %63 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %62, i64 4
  %64 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %63, align 8
  %65 = call %"class.sh::TIntermTyped"* %64(%"class.sh::TIntermNode"* %60) #12
  %66 = bitcast %"class.sh::TIntermTyped"* %65 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %67 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %66, align 8
  %68 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %67, i64 31
  %69 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %68, align 8
  %70 = call dereferenceable(184) %"class.sh::TType"* %69(%"class.sh::TIntermTyped"* %65) #12
  %71 = call i8* @_ZNK2sh5TType14getMangledNameEv(%"class.sh::TType"* %70) #12
  %72 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* %71) #12
  %73 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %59, i64 1
  %74 = icmp eq %"class.sh::TIntermNode"** %73, %33
  br i1 %74, label %35, label %58
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i8* @_ZNK2sh5TType14getMangledNameEv(%"class.sh::TType"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh15GetMangledNamesEPKcRKNS_7TVectorIPNS_11TIntermNodeEEE(%"class.std::__1::vector.5"* noalias sret, i8* nocapture readonly, %"class.sh::TVector.0"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::vector.12", align 8
  %5 = alloca %"class.std::__1::vector.12", align 8
  %6 = alloca %"class.std::__1::vector.12", align 8
  %7 = alloca %"class.std::__1::vector.19", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.sh::TType", align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.5", %"class.std::__1::vector.5"* %0, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.5", %"class.std::__1::vector.5"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast %"class.std::__1::vector.5"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #12
  %13 = bitcast %"class.std::__1::vector.12"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %6, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %6, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #12
  %17 = getelementptr inbounds %"class.sh::TVector.0", %"class.sh::TVector.0"* %2, i64 0, i32 0, i32 0, i32 1
  %18 = bitcast %"class.sh::TIntermNode"*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.sh::TVector.0"* %2 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = lshr exact i64 %22, 3
  %24 = trunc i64 %23 to i32
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %3
  %27 = bitcast i32** %15 to i64*
  %28 = bitcast %"class.std::__1::vector.12"* %6 to i64*
  %29 = bitcast i32** %16 to i64*
  br label %249

30:                                               ; preds = %324, %3
  %31 = bitcast %"class.std::__1::vector.19"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %7, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %7, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #12, !alias.scope !2
  %35 = bitcast %"class.std::__1::vector.12"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #12, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 24, i1 false) #12, !noalias !2
  call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.19"* nonnull %7, %"class.std::__1::vector.12"* nonnull dereferenceable(24) %4) #12
  %36 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %4, i64 0, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8, !noalias !2
  %38 = icmp eq i32* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %30
  %40 = bitcast i32* %37 to i8*
  %41 = ptrtoint i32* %37 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %4, i64 0, i32 0, i32 1
  %43 = bitcast i32** %42 to i64*
  store i64 %41, i64* %43, align 8, !noalias !2
  call void @_ZdlPv(i8* %40) #14
  br label %44

44:                                               ; preds = %39, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #12, !noalias !2
  %45 = bitcast i32** %15 to i64*
  %46 = load i64, i64* %45, align 8, !noalias !2
  %47 = bitcast %"class.std::__1::vector.12"* %6 to i64*
  %48 = load i64, i64* %47, align 8, !noalias !2
  %49 = icmp eq i64 %46, %48
  br i1 %49, label %233, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.std::__1::vector.12"** %33 to i64*
  %52 = bitcast %"class.std::__1::vector.19"* %7 to i64*
  %53 = bitcast %"class.std::__1::vector.12"* %5 to i8*
  %54 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %5, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %5, i64 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %57 = bitcast i32** %55 to i8**
  %58 = bitcast %"class.std::__1::vector.12"* %5 to i8**
  %59 = bitcast i32** %55 to i64*
  %60 = bitcast %"class.std::__1::vector.12"* %5 to i64*
  %61 = bitcast i32** %56 to i64*
  br label %62

62:                                               ; preds = %76, %50
  %63 = phi i64 [ %48, %50 ], [ %77, %76 ]
  %64 = phi i64 [ %46, %50 ], [ %78, %76 ]
  %65 = phi i64 [ 0, %50 ], [ %79, %76 ]
  %66 = load i64, i64* %51, align 8, !alias.scope !2
  %67 = load i64, i64* %52, align 8, !alias.scope !2
  %68 = sub i64 %66, %67
  %69 = sdiv exact i64 %68, 24
  %70 = icmp eq i64 %68, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %62
  %72 = inttoptr i64 %67 to %"class.std::__1::vector.12"*
  br label %83

73:                                               ; preds = %228
  %74 = load i64, i64* %45, align 8, !noalias !2
  %75 = load i64, i64* %47, align 8, !noalias !2
  br label %76

76:                                               ; preds = %73, %62
  %77 = phi i64 [ %75, %73 ], [ %63, %62 ]
  %78 = phi i64 [ %74, %73 ], [ %64, %62 ]
  %79 = add nuw i64 %65, 1
  %80 = sub i64 %78, %77
  %81 = ashr exact i64 %80, 2
  %82 = icmp ult i64 %79, %81
  br i1 %82, label %62, label %233

83:                                               ; preds = %231, %71
  %84 = phi %"class.std::__1::vector.12"* [ %232, %231 ], [ %72, %71 ]
  %85 = phi i64 [ %229, %231 ], [ 0, %71 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #12, !noalias !2
  %86 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %84, i64 %85
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 24, i1 false) #12, !noalias !2
  %87 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %84, i64 %85, i32 0, i32 1
  %88 = bitcast i32** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.std::__1::vector.12"* %86 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = sub i64 %89, %91
  %93 = ashr exact i64 %92, 2
  %94 = icmp eq i64 %92, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %83
  %96 = load i32*, i32** %14, align 8, !noalias !2
  %97 = getelementptr inbounds i32, i32* %96, i64 %65
  br label %128

98:                                               ; preds = %83
  %99 = icmp ugt i64 %93, 4611686018427387903
  br i1 %99, label %100, label %102

100:                                              ; preds = %98
  %101 = bitcast %"class.std::__1::vector.12"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %101) #13
  unreachable

102:                                              ; preds = %98
  %103 = call i8* @_Znwm(i64 %92) #14
  %104 = bitcast i8* %103 to i32*
  store i8* %103, i8** %57, align 8, !noalias !2
  store i8* %103, i8** %58, align 8, !noalias !2
  %105 = getelementptr inbounds i32, i32* %104, i64 %93
  store i32* %105, i32** %56, align 8, !noalias !2
  %106 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %86, i64 0, i32 0, i32 0
  %107 = load i32*, i32** %106, align 8
  %108 = load i64, i64* %88, align 8
  %109 = ptrtoint i8* %103 to i64
  %110 = ptrtoint i32* %107 to i64
  %111 = sub i64 %108, %110
  %112 = icmp sgt i64 %111, 0
  br i1 %112, label %113, label %118

113:                                              ; preds = %102
  %114 = lshr exact i64 %111, 2
  %115 = bitcast i32* %107 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %103, i8* align 4 %115, i64 %111, i1 false) #12
  %116 = getelementptr inbounds i32, i32* %104, i64 %114
  %117 = ptrtoint i32* %116 to i64
  br label %118

118:                                              ; preds = %113, %102
  %119 = phi i64 [ %117, %113 ], [ %109, %102 ]
  store i64 %119, i64* %59, align 8, !noalias !2
  %120 = inttoptr i64 %119 to i32*
  %121 = load i32*, i32** %14, align 8, !noalias !2
  %122 = getelementptr inbounds i32, i32* %121, i64 %65
  %123 = icmp eq i32* %105, %120
  br i1 %123, label %128, label %124

124:                                              ; preds = %118
  %125 = load i32, i32* %122, align 4
  store i32 %125, i32* %120, align 4
  %126 = getelementptr inbounds i32, i32* %120, i64 1
  %127 = ptrtoint i32* %126 to i64
  store i64 %127, i64* %59, align 8, !noalias !2
  br label %178

128:                                              ; preds = %118, %95
  %129 = phi i32* [ %97, %95 ], [ %122, %118 ]
  %130 = phi i32* [ null, %95 ], [ %105, %118 ]
  %131 = phi i64 [ 0, %95 ], [ %109, %118 ]
  %132 = phi i32* [ null, %95 ], [ %104, %118 ]
  %133 = phi i8* [ null, %95 ], [ %103, %118 ]
  %134 = phi i64 [ 0, %95 ], [ %119, %118 ]
  %135 = ptrtoint i32* %130 to i64
  %136 = sub i64 %135, %131
  %137 = ashr exact i64 %136, 2
  %138 = add nsw i64 %137, 1
  %139 = icmp ugt i64 %138, 4611686018427387903
  br i1 %139, label %140, label %142

140:                                              ; preds = %128
  %141 = bitcast %"class.std::__1::vector.12"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %141) #13
  unreachable

142:                                              ; preds = %128
  %143 = icmp ult i64 %137, 2305843009213693951
  br i1 %143, label %144, label %152

144:                                              ; preds = %142
  %145 = ashr exact i64 %136, 1
  %146 = icmp ult i64 %145, %138
  %147 = select i1 %146, i64 %138, i64 %145
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %157, label %149

149:                                              ; preds = %144
  %150 = icmp ugt i64 %147, 4611686018427387903
  br i1 %150, label %151, label %152

151:                                              ; preds = %149
  call void @abort() #13
  unreachable

152:                                              ; preds = %149, %142
  %153 = phi i64 [ %147, %149 ], [ 4611686018427387903, %142 ]
  %154 = shl i64 %153, 2
  %155 = call i8* @_Znwm(i64 %154) #14
  %156 = bitcast i8* %155 to i32*
  br label %157

157:                                              ; preds = %152, %144
  %158 = phi i64 [ %153, %152 ], [ 0, %144 ]
  %159 = phi i32* [ %156, %152 ], [ null, %144 ]
  %160 = getelementptr inbounds i32, i32* %159, i64 %137
  %161 = getelementptr inbounds i32, i32* %159, i64 %158
  %162 = ptrtoint i32* %161 to i64
  %163 = load i32, i32* %129, align 4
  store i32 %163, i32* %160, align 4, !noalias !2
  %164 = getelementptr inbounds i32, i32* %160, i64 1
  %165 = ptrtoint i32* %164 to i64
  %166 = ptrtoint i32* %132 to i64
  %167 = sub i64 %134, %166
  %168 = ashr exact i64 %167, 2
  %169 = sub nsw i64 0, %168
  %170 = getelementptr inbounds i32, i32* %160, i64 %169
  %171 = ptrtoint i32* %170 to i64
  %172 = icmp sgt i64 %167, 0
  br i1 %172, label %173, label %175

173:                                              ; preds = %157
  %174 = bitcast i32* %170 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %174, i8* align 4 %133, i64 %167, i1 false) #12, !noalias !2
  br label %175

175:                                              ; preds = %173, %157
  store i64 %171, i64* %60, align 8, !noalias !2
  store i64 %165, i64* %59, align 8, !noalias !2
  store i64 %162, i64* %61, align 8, !noalias !2
  %176 = icmp eq i32* %132, null
  br i1 %176, label %178, label %177

177:                                              ; preds = %175
  call void @_ZdlPv(i8* %133) #14
  br label %178

178:                                              ; preds = %177, %175, %124
  %179 = load %"class.std::__1::vector.12"*, %"class.std::__1::vector.12"** %33, align 8, !alias.scope !2
  %180 = load %"class.std::__1::vector.12"*, %"class.std::__1::vector.12"** %34, align 8, !alias.scope !2
  %181 = icmp eq %"class.std::__1::vector.12"* %179, %180
  br i1 %181, label %220, label %182

182:                                              ; preds = %178
  %183 = bitcast %"class.std::__1::vector.12"* %179 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %183, i8 0, i64 24, i1 false) #12
  %184 = load i64, i64* %59, align 8, !noalias !2
  %185 = load i64, i64* %60, align 8, !noalias !2
  %186 = sub i64 %184, %185
  %187 = ashr exact i64 %186, 2
  %188 = icmp eq i64 %186, 0
  %189 = inttoptr i64 %185 to i32*
  br i1 %188, label %216, label %190

190:                                              ; preds = %182
  %191 = icmp ugt i64 %187, 4611686018427387903
  br i1 %191, label %192, label %194

192:                                              ; preds = %190
  %193 = bitcast %"class.std::__1::vector.12"* %179 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %193) #13
  unreachable

194:                                              ; preds = %190
  %195 = call i8* @_Znwm(i64 %186) #14
  %196 = bitcast i8* %195 to i32*
  %197 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %179, i64 0, i32 0, i32 1
  %198 = bitcast i32** %197 to i8**
  store i8* %195, i8** %198, align 8
  %199 = bitcast %"class.std::__1::vector.12"* %179 to i8**
  store i8* %195, i8** %199, align 8
  %200 = getelementptr inbounds i32, i32* %196, i64 %187
  %201 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %179, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %200, i32** %201, align 8
  %202 = load i32*, i32** %54, align 8, !noalias !2
  %203 = load i64, i64* %59, align 8, !noalias !2
  %204 = bitcast i32** %197 to i64*
  %205 = ptrtoint i8* %195 to i64
  %206 = ptrtoint i32* %202 to i64
  %207 = sub i64 %203, %206
  %208 = icmp sgt i64 %207, 0
  br i1 %208, label %209, label %214

209:                                              ; preds = %194
  %210 = lshr exact i64 %207, 2
  %211 = bitcast i32* %202 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %195, i8* align 4 %211, i64 %207, i1 false) #12
  %212 = getelementptr inbounds i32, i32* %196, i64 %210
  %213 = ptrtoint i32* %212 to i64
  br label %214

214:                                              ; preds = %209, %194
  %215 = phi i64 [ %213, %209 ], [ %205, %194 ]
  store i64 %215, i64* %204, align 8
  br label %216

216:                                              ; preds = %214, %182
  %217 = phi i32* [ %202, %214 ], [ %189, %182 ]
  %218 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %179, i64 1
  %219 = ptrtoint %"class.std::__1::vector.12"* %218 to i64
  store i64 %219, i64* %51, align 8, !alias.scope !2
  br label %222

220:                                              ; preds = %178
  call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.19"* nonnull %7, %"class.std::__1::vector.12"* nonnull dereferenceable(24) %5) #12
  %221 = load i32*, i32** %54, align 8, !noalias !2
  br label %222

222:                                              ; preds = %220, %216
  %223 = phi i32* [ %217, %216 ], [ %221, %220 ]
  %224 = icmp eq i32* %223, null
  br i1 %224, label %228, label %225

225:                                              ; preds = %222
  %226 = ptrtoint i32* %223 to i64
  store i64 %226, i64* %59, align 8, !noalias !2
  %227 = bitcast i32* %223 to i8*
  call void @_ZdlPv(i8* %227) #14
  br label %228

228:                                              ; preds = %225, %222
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #12, !noalias !2
  %229 = add nuw i64 %85, 1
  %230 = icmp ult i64 %229, %69
  br i1 %230, label %231, label %73

231:                                              ; preds = %228
  %232 = load %"class.std::__1::vector.12"*, %"class.std::__1::vector.12"** %32, align 8, !alias.scope !2
  br label %83

233:                                              ; preds = %76, %44
  %234 = load %"class.std::__1::vector.12"*, %"class.std::__1::vector.12"** %32, align 8
  %235 = load %"class.std::__1::vector.12"*, %"class.std::__1::vector.12"** %33, align 8
  %236 = icmp eq %"class.std::__1::vector.12"* %234, %235
  br i1 %236, label %336, label %237

237:                                              ; preds = %233
  %238 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %239 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %240 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %241 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %242 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %243 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %242, i64 0, i32 1, i32 0
  %244 = bitcast %"class.sh::TType"* %9 to i8*
  %245 = bitcast %"class.sh::ImmutableString"** %10 to i64*
  %246 = bitcast %"class.std::__1::vector.5"* %0 to i64*
  %247 = bitcast %"class.sh::ImmutableString"** %11 to i64*
  %248 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  br label %368

249:                                              ; preds = %26, %324
  %250 = phi i64 [ 0, %26 ], [ %325, %324 ]
  %251 = phi i32* [ null, %26 ], [ %326, %324 ]
  %252 = phi i64 [ %21, %26 ], [ %329, %324 ]
  %253 = phi i64 [ 0, %26 ], [ %327, %324 ]
  %254 = inttoptr i64 %252 to %"class.sh::TIntermNode"**
  %255 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %254, i64 %253
  %256 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %255, align 8
  %257 = bitcast %"class.sh::TIntermNode"* %256 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %258 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %257, align 8
  %259 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %258, i64 4
  %260 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %259, align 8
  %261 = tail call %"class.sh::TIntermTyped"* %260(%"class.sh::TIntermNode"* %256) #12
  %262 = bitcast %"class.sh::TIntermTyped"* %261 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %263 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %262, align 8
  %264 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %263, i64 31
  %265 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %264, align 8
  %266 = tail call dereferenceable(184) %"class.sh::TType"* %265(%"class.sh::TIntermTyped"* %261) #12
  %267 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %266, i64 0, i32 0
  %268 = load i32, i32* %267, align 8
  %269 = add i32 %268, -3
  %270 = icmp ult i32 %269, 2
  br i1 %270, label %271, label %324

271:                                              ; preds = %249
  %272 = load i32*, i32** %16, align 8
  %273 = icmp eq i32* %251, %272
  br i1 %273, label %278, label %274

274:                                              ; preds = %271
  %275 = trunc i64 %253 to i32
  store i32 %275, i32* %251, align 4
  %276 = getelementptr inbounds i32, i32* %251, i64 1
  %277 = ptrtoint i32* %276 to i64
  store i64 %277, i64* %27, align 8
  br label %324

278:                                              ; preds = %271
  %279 = ptrtoint i32* %272 to i64
  %280 = load i64, i64* %28, align 8
  %281 = sub i64 %279, %280
  %282 = ashr exact i64 %281, 2
  %283 = add nsw i64 %282, 1
  %284 = icmp ugt i64 %283, 4611686018427387903
  br i1 %284, label %285, label %287

285:                                              ; preds = %278
  %286 = bitcast %"class.std::__1::vector.12"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %286) #13
  unreachable

287:                                              ; preds = %278
  %288 = icmp ult i64 %282, 2305843009213693951
  br i1 %288, label %289, label %297

289:                                              ; preds = %287
  %290 = ashr exact i64 %281, 1
  %291 = icmp ult i64 %290, %283
  %292 = select i1 %291, i64 %283, i64 %290
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %302, label %294

294:                                              ; preds = %289
  %295 = icmp ugt i64 %292, 4611686018427387903
  br i1 %295, label %296, label %297

296:                                              ; preds = %294
  tail call void @abort() #13
  unreachable

297:                                              ; preds = %294, %287
  %298 = phi i64 [ %292, %294 ], [ 4611686018427387903, %287 ]
  %299 = shl i64 %298, 2
  %300 = tail call i8* @_Znwm(i64 %299) #14
  %301 = bitcast i8* %300 to i32*
  br label %302

302:                                              ; preds = %297, %289
  %303 = phi i64 [ %298, %297 ], [ 0, %289 ]
  %304 = phi i32* [ %301, %297 ], [ null, %289 ]
  %305 = getelementptr inbounds i32, i32* %304, i64 %282
  %306 = getelementptr inbounds i32, i32* %304, i64 %303
  %307 = ptrtoint i32* %306 to i64
  %308 = trunc i64 %253 to i32
  store i32 %308, i32* %305, align 4
  %309 = getelementptr inbounds i32, i32* %305, i64 1
  %310 = ptrtoint i32* %309 to i64
  %311 = sub i64 %250, %280
  %312 = ashr exact i64 %311, 2
  %313 = sub nsw i64 0, %312
  %314 = getelementptr inbounds i32, i32* %305, i64 %313
  %315 = ptrtoint i32* %314 to i64
  %316 = icmp sgt i64 %311, 0
  br i1 %316, label %317, label %320

317:                                              ; preds = %302
  %318 = bitcast i32* %314 to i8*
  %319 = inttoptr i64 %280 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %318, i8* align 4 %319, i64 %311, i1 false) #12
  br label %320

320:                                              ; preds = %317, %302
  store i64 %315, i64* %28, align 8
  store i64 %310, i64* %27, align 8
  store i64 %307, i64* %29, align 8
  %321 = icmp eq i64 %280, 0
  br i1 %321, label %324, label %322

322:                                              ; preds = %320
  %323 = inttoptr i64 %280 to i8*
  tail call void @_ZdlPv(i8* %323) #14
  br label %324

324:                                              ; preds = %322, %320, %274, %249
  %325 = phi i64 [ %310, %322 ], [ %310, %320 ], [ %277, %274 ], [ %250, %249 ]
  %326 = phi i32* [ %309, %322 ], [ %309, %320 ], [ %276, %274 ], [ %251, %249 ]
  %327 = add nuw nsw i64 %253, 1
  %328 = load i64, i64* %18, align 8
  %329 = load i64, i64* %20, align 8
  %330 = sub i64 %328, %329
  %331 = shl i64 %330, 29
  %332 = ashr i64 %331, 32
  %333 = icmp slt i64 %327, %332
  br i1 %333, label %249, label %30

334:                                              ; preds = %474
  %335 = load %"class.std::__1::vector.12"*, %"class.std::__1::vector.12"** %32, align 8
  br label %336

336:                                              ; preds = %334, %233
  %337 = phi %"class.std::__1::vector.12"* [ %335, %334 ], [ %234, %233 ]
  %338 = icmp eq %"class.std::__1::vector.12"* %337, null
  br i1 %338, label %361, label %339

339:                                              ; preds = %336
  %340 = bitcast %"class.std::__1::vector.12"* %337 to i8*
  %341 = load %"class.std::__1::vector.12"*, %"class.std::__1::vector.12"** %33, align 8
  %342 = icmp eq %"class.std::__1::vector.12"* %341, %337
  br i1 %342, label %359, label %343

343:                                              ; preds = %339, %354
  %344 = phi %"class.std::__1::vector.12"* [ %345, %354 ], [ %341, %339 ]
  %345 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %344, i64 -1
  %346 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %345, i64 0, i32 0, i32 0
  %347 = load i32*, i32** %346, align 8
  %348 = icmp eq i32* %347, null
  br i1 %348, label %354, label %349

349:                                              ; preds = %343
  %350 = ptrtoint i32* %347 to i64
  %351 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %344, i64 -1, i32 0, i32 1
  %352 = bitcast i32** %351 to i64*
  store i64 %350, i64* %352, align 8
  %353 = bitcast i32* %347 to i8*
  call void @_ZdlPv(i8* %353) #14
  br label %354

354:                                              ; preds = %349, %343
  %355 = icmp eq %"class.std::__1::vector.12"* %345, %337
  br i1 %355, label %356, label %343

356:                                              ; preds = %354
  %357 = bitcast %"class.std::__1::vector.19"* %7 to i8**
  %358 = load i8*, i8** %357, align 8
  br label %359

359:                                              ; preds = %356, %339
  %360 = phi i8* [ %358, %356 ], [ %340, %339 ]
  store %"class.std::__1::vector.12"* %337, %"class.std::__1::vector.12"** %33, align 8
  call void @_ZdlPv(i8* %360) #14
  br label %361

361:                                              ; preds = %336, %359
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  %362 = load i32*, i32** %14, align 8
  %363 = icmp eq i32* %362, null
  br i1 %363, label %367, label %364

364:                                              ; preds = %361
  %365 = ptrtoint i32* %362 to i64
  store i64 %365, i64* %45, align 8
  %366 = bitcast i32* %362 to i8*
  call void @_ZdlPv(i8* %366) #14
  br label %367

367:                                              ; preds = %361, %364
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  ret void

368:                                              ; preds = %237, %474
  %369 = phi %"class.std::__1::vector.12"* [ %234, %237 ], [ %475, %474 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %238) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %248, i8 -86, i64 24, i1 false)
  %370 = call i64 @strlen(i8* %1) #12
  %371 = icmp ugt i64 %370, -17
  br i1 %371, label %372, label %374

372:                                              ; preds = %368
  %373 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %373) #13
  unreachable

374:                                              ; preds = %368
  %375 = icmp ult i64 %370, 23
  br i1 %375, label %381, label %376

376:                                              ; preds = %374
  %377 = add nuw i64 %370, 16
  %378 = and i64 %377, -16
  %379 = call i8* @_Znwm(i64 %378) #14
  store i8* %379, i8** %239, align 8
  %380 = or i64 %378, -9223372036854775808
  store i64 %380, i64* %241, align 8
  store i64 %370, i64* %240, align 8
  br label %384

381:                                              ; preds = %374
  %382 = trunc i64 %370 to i8
  store i8 %382, i8* %243, align 1
  %383 = icmp eq i64 %370, 0
  br i1 %383, label %386, label %384

384:                                              ; preds = %381, %376
  %385 = phi i8* [ %379, %376 ], [ %238, %381 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %385, i8* align 1 %1, i64 %370, i1 false) #12
  br label %386

386:                                              ; preds = %381, %384
  %387 = phi i8* [ %238, %381 ], [ %385, %384 ]
  %388 = getelementptr inbounds i8, i8* %387, i64 %370
  store i8 0, i8* %388, align 1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %8, i8 signext 40) #12
  %389 = load i64, i64* %18, align 8
  %390 = load i64, i64* %20, align 8
  %391 = sub i64 %389, %390
  %392 = lshr exact i64 %391, 3
  %393 = trunc i64 %392 to i32
  %394 = icmp sgt i32 %393, 0
  br i1 %394, label %395, label %399

395:                                              ; preds = %386
  %396 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %369, i64 0, i32 0, i32 1
  %397 = bitcast i32** %396 to i64*
  %398 = bitcast %"class.std::__1::vector.12"* %369 to i64*
  br label %477

399:                                              ; preds = %524, %386
  %400 = load i8, i8* %243, align 1
  %401 = icmp slt i8 %400, 0
  %402 = load i8*, i8** %239, align 8
  %403 = load i64, i64* %240, align 8
  %404 = zext i8 %400 to i64
  %405 = select i1 %401, i8* %402, i8* %238
  %406 = select i1 %401, i64 %403, i64 %404
  %407 = add i64 %406, 1
  %408 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #12
  %409 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %408, i64 %407) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %409, i8* align 1 %405, i64 %407, i1 false) #12
  %410 = load i8, i8* %243, align 1
  %411 = icmp slt i8 %410, 0
  %412 = load i64, i64* %240, align 8
  %413 = zext i8 %410 to i64
  %414 = select i1 %411, i64 %412, i64 %413
  %415 = load %"class.sh::ImmutableString"*, %"class.sh::ImmutableString"** %10, align 8
  %416 = load %"class.sh::ImmutableString"*, %"class.sh::ImmutableString"** %11, align 8
  %417 = icmp ult %"class.sh::ImmutableString"* %415, %416
  %418 = ptrtoint %"class.sh::ImmutableString"* %416 to i64
  br i1 %417, label %419, label %424

419:                                              ; preds = %399
  %420 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %415, i64 0, i32 0
  store i8* %409, i8** %420, align 8
  %421 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %415, i64 0, i32 1
  store i64 %414, i64* %421, align 8
  %422 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %415, i64 1
  %423 = ptrtoint %"class.sh::ImmutableString"* %422 to i64
  store i64 %423, i64* %245, align 8
  br label %469

424:                                              ; preds = %399
  %425 = ptrtoint %"class.sh::ImmutableString"* %415 to i64
  %426 = load i64, i64* %246, align 8
  %427 = sub i64 %425, %426
  %428 = ashr exact i64 %427, 4
  %429 = add nsw i64 %428, 1
  %430 = icmp ugt i64 %429, 1152921504606846975
  br i1 %430, label %431, label %433

431:                                              ; preds = %424
  %432 = bitcast %"class.std::__1::vector.5"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %432) #13
  unreachable

433:                                              ; preds = %424
  %434 = sub i64 %418, %426
  %435 = ashr exact i64 %434, 4
  %436 = icmp ult i64 %435, 576460752303423487
  br i1 %436, label %437, label %445

437:                                              ; preds = %433
  %438 = ashr exact i64 %434, 3
  %439 = icmp ult i64 %438, %429
  %440 = select i1 %439, i64 %429, i64 %438
  %441 = icmp eq i64 %440, 0
  br i1 %441, label %450, label %442

442:                                              ; preds = %437
  %443 = icmp ugt i64 %440, 1152921504606846975
  br i1 %443, label %444, label %445

444:                                              ; preds = %442
  call void @abort() #13
  unreachable

445:                                              ; preds = %442, %433
  %446 = phi i64 [ %440, %442 ], [ 1152921504606846975, %433 ]
  %447 = shl i64 %446, 4
  %448 = call i8* @_Znwm(i64 %447) #14
  %449 = bitcast i8* %448 to %"class.sh::ImmutableString"*
  br label %450

450:                                              ; preds = %445, %437
  %451 = phi i64 [ %446, %445 ], [ 0, %437 ]
  %452 = phi i8* [ %448, %445 ], [ null, %437 ]
  %453 = phi %"class.sh::ImmutableString"* [ %449, %445 ], [ null, %437 ]
  %454 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %453, i64 %428
  %455 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %453, i64 %451
  %456 = ptrtoint %"class.sh::ImmutableString"* %455 to i64
  %457 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %454, i64 0, i32 0
  store i8* %409, i8** %457, align 8
  %458 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %453, i64 %428, i32 1
  store i64 %414, i64* %458, align 8
  %459 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %454, i64 1
  %460 = ptrtoint %"class.sh::ImmutableString"* %459 to i64
  %461 = ptrtoint %"class.sh::ImmutableString"* %453 to i64
  %462 = icmp sgt i64 %427, 0
  br i1 %462, label %463, label %465

463:                                              ; preds = %450
  %464 = inttoptr i64 %426 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %452, i8* align 8 %464, i64 %427, i1 false) #12
  br label %465

465:                                              ; preds = %463, %450
  store i64 %461, i64* %246, align 8
  store i64 %460, i64* %245, align 8
  store i64 %456, i64* %247, align 8
  %466 = icmp eq i64 %426, 0
  br i1 %466, label %469, label %467

467:                                              ; preds = %465
  %468 = inttoptr i64 %426 to i8*
  call void @_ZdlPv(i8* %468) #14
  br label %469

469:                                              ; preds = %419, %465, %467
  %470 = load i8, i8* %243, align 1
  %471 = icmp slt i8 %470, 0
  br i1 %471, label %472, label %474

472:                                              ; preds = %469
  %473 = load i8*, i8** %239, align 8
  call void @_ZdlPv(i8* %473) #14
  br label %474

474:                                              ; preds = %469, %472
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %238) #12
  %475 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %369, i64 1
  %476 = icmp eq %"class.std::__1::vector.12"* %475, %235
  br i1 %476, label %334, label %368

477:                                              ; preds = %395, %524
  %478 = phi i64 [ %390, %395 ], [ %528, %524 ]
  %479 = phi i64 [ 0, %395 ], [ %526, %524 ]
  %480 = phi i32 [ 0, %395 ], [ %525, %524 ]
  %481 = inttoptr i64 %478 to %"class.sh::TIntermNode"**
  %482 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %481, i64 %479
  %483 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %482, align 8
  %484 = load i64, i64* %397, align 8
  %485 = load i64, i64* %398, align 8
  %486 = sub i64 %484, %485
  %487 = lshr exact i64 %486, 2
  %488 = trunc i64 %487 to i32
  %489 = icmp eq i32 %480, %488
  br i1 %489, label %511, label %490

490:                                              ; preds = %477
  %491 = inttoptr i64 %485 to i32*
  %492 = sext i32 %480 to i64
  %493 = getelementptr inbounds i32, i32* %491, i64 %492
  %494 = load i32, i32* %493, align 4
  %495 = zext i32 %494 to i64
  %496 = icmp eq i64 %479, %495
  br i1 %496, label %497, label %511

497:                                              ; preds = %490
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %244) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %244, i8 -86, i64 184, i1 false)
  %498 = bitcast %"class.sh::TIntermNode"* %483 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %499 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %498, align 8
  %500 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %499, i64 4
  %501 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %500, align 8
  %502 = call %"class.sh::TIntermTyped"* %501(%"class.sh::TIntermNode"* %483) #12
  %503 = bitcast %"class.sh::TIntermTyped"* %502 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %504 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %503, align 8
  %505 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %504, i64 31
  %506 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %505, align 8
  %507 = call dereferenceable(184) %"class.sh::TType"* %506(%"class.sh::TIntermTyped"* %502) #12
  call void @_ZN2sh5TTypeC1ERKS0_(%"class.sh::TType"* nonnull %9, %"class.sh::TType"* dereferenceable(184) %507) #12
  call void @_ZN2sh5TType12setBasicTypeENS_10TBasicTypeE(%"class.sh::TType"* nonnull %9, i32 1) #12
  %508 = call i8* @_ZNK2sh5TType14getMangledNameEv(%"class.sh::TType"* nonnull %9) #12
  %509 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %8, i8* %508) #12
  %510 = add nsw i32 %480, 1
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %244) #12
  br label %524

511:                                              ; preds = %477, %490
  %512 = bitcast %"class.sh::TIntermNode"* %483 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %513 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %512, align 8
  %514 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %513, i64 4
  %515 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %514, align 8
  %516 = call %"class.sh::TIntermTyped"* %515(%"class.sh::TIntermNode"* %483) #12
  %517 = bitcast %"class.sh::TIntermTyped"* %516 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %518 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %517, align 8
  %519 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %518, i64 31
  %520 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %519, align 8
  %521 = call dereferenceable(184) %"class.sh::TType"* %520(%"class.sh::TIntermTyped"* %516) #12
  %522 = call i8* @_ZNK2sh5TType14getMangledNameEv(%"class.sh::TType"* %521) #12
  %523 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %8, i8* %522) #12
  br label %524

524:                                              ; preds = %511, %497
  %525 = phi i32 [ %510, %497 ], [ %480, %511 ]
  %526 = add nuw nsw i64 %479, 1
  %527 = load i64, i64* %18, align 8
  %528 = load i64, i64* %20, align 8
  %529 = sub i64 %527, %528
  %530 = shl i64 %529, 29
  %531 = ashr i64 %530, 32
  %532 = icmp slt i64 %526, %531
  br i1 %532, label %477, label %399
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2sh5TTypeC1ERKS0_(%"class.sh::TType"*, %"class.sh::TType"* dereferenceable(184)) unnamed_addr #3

declare void @_ZN2sh5TType12setBasicTypeENS_10TBasicTypeE(%"class.sh::TType"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2sh15TFunctionLookup37getMangledNamesForImplicitConversionsEv(%"class.std::__1::vector.5"* noalias sret, %"class.sh::TFunctionLookup"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sh::TFunctionLookup", %"class.sh::TFunctionLookup"* %1, i64 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = select i1 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %4
  %7 = getelementptr inbounds %"class.sh::TFunctionLookup", %"class.sh::TFunctionLookup"* %1, i64 0, i32 3
  tail call void @_ZN2sh15GetMangledNamesEPKcRKNS_7TVectorIPNS_11TIntermNodeEEE(%"class.std::__1::vector.5"* sret %0, i8* %6, %"class.sh::TVector.0"* dereferenceable(24) %7)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2sh15TFunctionLookup13isConstructorEv(%"class.sh::TFunctionLookup"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.sh::TFunctionLookup", %"class.sh::TFunctionLookup"* %0, i64 0, i32 1
  %3 = load %"class.sh::TType"*, %"class.sh::TType"** %2, align 8
  %4 = icmp ne %"class.sh::TType"* %3, null
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(184) %"class.sh::TType"* @_ZNK2sh15TFunctionLookup15constructorTypeEv(%"class.sh::TFunctionLookup"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.sh::TFunctionLookup", %"class.sh::TFunctionLookup"* %0, i64 0, i32 1
  %3 = load %"class.sh::TType"*, %"class.sh::TType"** %2, align 8
  ret %"class.sh::TType"* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2sh15TFunctionLookup11setThisNodeEPNS_12TIntermTypedE(%"class.sh::TFunctionLookup"* nocapture, %"class.sh::TIntermTyped"*) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.sh::TFunctionLookup", %"class.sh::TFunctionLookup"* %0, i64 0, i32 2
  store %"class.sh::TIntermTyped"* %1, %"class.sh::TIntermTyped"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.sh::TIntermTyped"* @_ZNK2sh15TFunctionLookup8thisNodeEv(%"class.sh::TFunctionLookup"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.sh::TFunctionLookup", %"class.sh::TFunctionLookup"* %0, i64 0, i32 2
  %3 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %2, align 8
  ret %"class.sh::TIntermTyped"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh15TFunctionLookup11addArgumentEPNS_12TIntermTypedE(%"class.sh::TFunctionLookup"*, %"class.sh::TIntermTyped"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sh::TFunctionLookup", %"class.sh::TFunctionLookup"* %0, i64 0, i32 3, i32 0
  %4 = ptrtoint %"class.sh::TIntermTyped"* %1 to i64
  %5 = getelementptr inbounds %"class.sh::TFunctionLookup", %"class.sh::TFunctionLookup"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %6 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %5, align 8
  %7 = getelementptr inbounds %"class.sh::TFunctionLookup", %"class.sh::TFunctionLookup"* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %7, align 8
  %9 = icmp ult %"class.sh::TIntermNode"** %6, %8
  %10 = ptrtoint %"class.sh::TIntermNode"** %8 to i64
  br i1 %9, label %11, label %16

11:                                               ; preds = %2
  %12 = bitcast %"class.sh::TIntermNode"** %6 to i64*
  store i64 %4, i64* %12, align 8
  %13 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %6, i64 1
  %14 = ptrtoint %"class.sh::TIntermNode"** %13 to i64
  %15 = bitcast %"class.sh::TIntermNode"*** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %229

16:                                               ; preds = %2
  %17 = ptrtoint %"class.sh::TIntermNode"** %6 to i64
  %18 = bitcast %"class.sh::TIntermNode"*** %5 to i64*
  %19 = bitcast %"class.std::__1::vector"* %3 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 2305843009213693951
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #13
  unreachable

27:                                               ; preds = %16
  %28 = bitcast %"class.sh::TIntermNode"*** %7 to i64*
  %29 = sub i64 %10, %20
  %30 = ashr exact i64 %29, 3
  %31 = icmp ult i64 %30, 1152921504606846975
  br i1 %31, label %32, label %37

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 2
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %43, label %37

37:                                               ; preds = %32, %27
  %38 = phi i64 [ %35, %32 ], [ 2305843009213693951, %27 ]
  %39 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #12
  %40 = shl i64 %38, 3
  %41 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %39, i64 %40) #12
  %42 = bitcast i8* %41 to %"class.sh::TIntermNode"**
  br label %43

43:                                               ; preds = %37, %32
  %44 = phi i64 [ %38, %37 ], [ 0, %32 ]
  %45 = phi %"class.sh::TIntermNode"** [ %42, %37 ], [ null, %32 ]
  %46 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %45, i64 %22
  %47 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %45, i64 %44
  %48 = ptrtoint %"class.sh::TIntermNode"** %47 to i64
  %49 = bitcast %"class.sh::TIntermNode"** %46 to i64*
  store i64 %4, i64* %49, align 8
  %50 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %46, i64 1
  %51 = ptrtoint %"class.sh::TIntermNode"** %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %53 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %52, align 8
  %54 = ptrtoint %"class.sh::TIntermNode"** %53 to i64
  %55 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %5, align 8
  %56 = icmp eq %"class.sh::TIntermNode"** %55, %53
  br i1 %56, label %226, label %57

57:                                               ; preds = %43
  %58 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %55, i64 -1
  %59 = ptrtoint %"class.sh::TIntermNode"** %58 to i64
  %60 = sub i64 %59, %54
  %61 = lshr i64 %60, 3
  %62 = add nuw nsw i64 %61, 1
  %63 = icmp ult i64 %62, 4
  br i1 %63, label %156, label %64

64:                                               ; preds = %57
  %65 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %55, i64 -1
  %66 = ptrtoint %"class.sh::TIntermNode"** %65 to i64
  %67 = sub i64 %66, %54
  %68 = lshr i64 %67, 3
  %69 = xor i64 %68, -1
  %70 = add nsw i64 %22, %69
  %71 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %45, i64 %70
  %72 = xor i64 %68, -1
  %73 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %55, i64 %72
  %74 = icmp ult %"class.sh::TIntermNode"** %71, %55
  %75 = icmp ult %"class.sh::TIntermNode"** %73, %46
  %76 = and i1 %74, %75
  br i1 %76, label %156, label %77

77:                                               ; preds = %64
  %78 = and i64 %62, 4611686018427387900
  %79 = sub nsw i64 0, %78
  %80 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %46, i64 %79
  %81 = sub nsw i64 0, %78
  %82 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %55, i64 %81
  %83 = add nsw i64 %78, -4
  %84 = lshr exact i64 %83, 2
  %85 = add nuw nsw i64 %84, 1
  %86 = and i64 %85, 1
  %87 = icmp eq i64 %83, 0
  br i1 %87, label %134, label %88

88:                                               ; preds = %77
  %89 = sub nuw nsw i64 %85, %86
  %90 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %46, i64 -1
  %91 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %55, i64 -1
  %92 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %46, i64 -1
  %93 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %55, i64 -1
  br label %94

94:                                               ; preds = %94, %88
  %95 = phi i64 [ 0, %88 ], [ %129, %94 ]
  %96 = phi i64 [ %89, %88 ], [ %130, %94 ]
  %97 = sub i64 0, %95
  %98 = sub i64 0, %95
  %99 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %90, i64 %97
  %100 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %91, i64 %98
  %101 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %100, i64 -1
  %102 = bitcast %"class.sh::TIntermNode"** %101 to <2 x i64>*
  %103 = load <2 x i64>, <2 x i64>* %102, align 8, !alias.scope !5
  %104 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %100, i64 -2
  %105 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %104, i64 -1
  %106 = bitcast %"class.sh::TIntermNode"** %105 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 8, !alias.scope !5
  %108 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %99, i64 -1
  %109 = bitcast %"class.sh::TIntermNode"** %108 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %109, align 8, !alias.scope !8, !noalias !5
  %110 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %99, i64 -2
  %111 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %110, i64 -1
  %112 = bitcast %"class.sh::TIntermNode"** %111 to <2 x i64>*
  store <2 x i64> %107, <2 x i64>* %112, align 8, !alias.scope !8, !noalias !5
  %113 = sub nuw nsw i64 -4, %95
  %114 = sub nuw nsw i64 -4, %95
  %115 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %92, i64 %113
  %116 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %93, i64 %114
  %117 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %116, i64 -1
  %118 = bitcast %"class.sh::TIntermNode"** %117 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 8, !alias.scope !5
  %120 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %116, i64 -2
  %121 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %120, i64 -1
  %122 = bitcast %"class.sh::TIntermNode"** %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8, !alias.scope !5
  %124 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %115, i64 -1
  %125 = bitcast %"class.sh::TIntermNode"** %124 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %125, align 8, !alias.scope !8, !noalias !5
  %126 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %115, i64 -2
  %127 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %126, i64 -1
  %128 = bitcast %"class.sh::TIntermNode"** %127 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %128, align 8, !alias.scope !8, !noalias !5
  %129 = add i64 %95, 8
  %130 = add i64 %96, -2
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %94, !llvm.loop !10

132:                                              ; preds = %94
  %133 = sub nuw nsw i64 -8, %95
  br label %134

134:                                              ; preds = %132, %77
  %135 = phi i64 [ 0, %77 ], [ %133, %132 ]
  %136 = icmp eq i64 %86, 0
  br i1 %136, label %154, label %137

137:                                              ; preds = %134
  %138 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %46, i64 -1
  %139 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %55, i64 -1
  %140 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %138, i64 %135
  %141 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %139, i64 %135
  %142 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %141, i64 -1
  %143 = bitcast %"class.sh::TIntermNode"** %142 to <2 x i64>*
  %144 = load <2 x i64>, <2 x i64>* %143, align 8, !alias.scope !5
  %145 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %141, i64 -2
  %146 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %145, i64 -1
  %147 = bitcast %"class.sh::TIntermNode"** %146 to <2 x i64>*
  %148 = load <2 x i64>, <2 x i64>* %147, align 8, !alias.scope !5
  %149 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %140, i64 -1
  %150 = bitcast %"class.sh::TIntermNode"** %149 to <2 x i64>*
  store <2 x i64> %144, <2 x i64>* %150, align 8, !alias.scope !8, !noalias !5
  %151 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %140, i64 -2
  %152 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %151, i64 -1
  %153 = bitcast %"class.sh::TIntermNode"** %152 to <2 x i64>*
  store <2 x i64> %148, <2 x i64>* %153, align 8, !alias.scope !8, !noalias !5
  br label %154

154:                                              ; preds = %134, %137
  %155 = icmp eq i64 %62, %78
  br i1 %155, label %226, label %156

156:                                              ; preds = %154, %64, %57
  %157 = phi %"class.sh::TIntermNode"** [ %46, %64 ], [ %46, %57 ], [ %80, %154 ]
  %158 = phi %"class.sh::TIntermNode"** [ %55, %64 ], [ %55, %57 ], [ %82, %154 ]
  %159 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %158, i64 -1
  %160 = ptrtoint %"class.sh::TIntermNode"** %159 to i64
  %161 = sub i64 %160, %54
  %162 = lshr i64 %161, 3
  %163 = add nuw nsw i64 %162, 1
  %164 = and i64 %163, 7
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %177, label %166

166:                                              ; preds = %156, %166
  %167 = phi %"class.sh::TIntermNode"** [ %170, %166 ], [ %157, %156 ]
  %168 = phi %"class.sh::TIntermNode"** [ %171, %166 ], [ %158, %156 ]
  %169 = phi i64 [ %175, %166 ], [ %164, %156 ]
  %170 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %167, i64 -1
  %171 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %168, i64 -1
  %172 = bitcast %"class.sh::TIntermNode"** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.sh::TIntermNode"** %170 to i64*
  store i64 %173, i64* %174, align 8
  %175 = add i64 %169, -1
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %177, label %166, !llvm.loop !12

177:                                              ; preds = %166, %156
  %178 = phi %"class.sh::TIntermNode"** [ undef, %156 ], [ %170, %166 ]
  %179 = phi %"class.sh::TIntermNode"** [ %157, %156 ], [ %170, %166 ]
  %180 = phi %"class.sh::TIntermNode"** [ %158, %156 ], [ %171, %166 ]
  %181 = icmp ult i64 %161, 56
  br i1 %181, label %226, label %182

182:                                              ; preds = %177, %182
  %183 = phi %"class.sh::TIntermNode"** [ %220, %182 ], [ %179, %177 ]
  %184 = phi %"class.sh::TIntermNode"** [ %221, %182 ], [ %180, %177 ]
  %185 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %183, i64 -1
  %186 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %184, i64 -1
  %187 = bitcast %"class.sh::TIntermNode"** %186 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = bitcast %"class.sh::TIntermNode"** %185 to i64*
  store i64 %188, i64* %189, align 8
  %190 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %183, i64 -2
  %191 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %184, i64 -2
  %192 = bitcast %"class.sh::TIntermNode"** %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = bitcast %"class.sh::TIntermNode"** %190 to i64*
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %183, i64 -3
  %196 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %184, i64 -3
  %197 = bitcast %"class.sh::TIntermNode"** %196 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"class.sh::TIntermNode"** %195 to i64*
  store i64 %198, i64* %199, align 8
  %200 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %183, i64 -4
  %201 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %184, i64 -4
  %202 = bitcast %"class.sh::TIntermNode"** %201 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = bitcast %"class.sh::TIntermNode"** %200 to i64*
  store i64 %203, i64* %204, align 8
  %205 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %183, i64 -5
  %206 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %184, i64 -5
  %207 = bitcast %"class.sh::TIntermNode"** %206 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = bitcast %"class.sh::TIntermNode"** %205 to i64*
  store i64 %208, i64* %209, align 8
  %210 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %183, i64 -6
  %211 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %184, i64 -6
  %212 = bitcast %"class.sh::TIntermNode"** %211 to i64*
  %213 = load i64, i64* %212, align 8
  %214 = bitcast %"class.sh::TIntermNode"** %210 to i64*
  store i64 %213, i64* %214, align 8
  %215 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %183, i64 -7
  %216 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %184, i64 -7
  %217 = bitcast %"class.sh::TIntermNode"** %216 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = bitcast %"class.sh::TIntermNode"** %215 to i64*
  store i64 %218, i64* %219, align 8
  %220 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %183, i64 -8
  %221 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %184, i64 -8
  %222 = bitcast %"class.sh::TIntermNode"** %221 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = bitcast %"class.sh::TIntermNode"** %220 to i64*
  store i64 %223, i64* %224, align 8
  %225 = icmp eq %"class.sh::TIntermNode"** %221, %53
  br i1 %225, label %226, label %182, !llvm.loop !14

226:                                              ; preds = %177, %182, %154, %43
  %227 = phi %"class.sh::TIntermNode"** [ %46, %43 ], [ %80, %154 ], [ %178, %177 ], [ %220, %182 ]
  %228 = ptrtoint %"class.sh::TIntermNode"** %227 to i64
  store i64 %228, i64* %19, align 8
  store i64 %51, i64* %18, align 8
  store i64 %48, i64* %28, align 8
  br label %229

229:                                              ; preds = %11, %226
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.sh::TVector.0"* @_ZN2sh15TFunctionLookup9argumentsEv(%"class.sh::TFunctionLookup"* readnone) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.sh::TFunctionLookup", %"class.sh::TFunctionLookup"* %0, i64 0, i32 3
  ret %"class.sh::TVector.0"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.sh::TSymbol"* @_ZNK2sh15TFunctionLookup6symbolEv(%"class.sh::TFunctionLookup"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.sh::TFunctionLookup", %"class.sh::TFunctionLookup"* %0, i64 0, i32 4
  %3 = load %"class.sh::TSymbol"*, %"class.sh::TSymbol"** %2, align 8
  ret %"class.sh::TSymbol"* %3
}

declare %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() local_unnamed_addr #3

declare i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"*, i64) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.19"*, %"class.std::__1::vector.12"* dereferenceable(24)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::vector.12"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.19"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.19"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::vector.12"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #14
  %30 = bitcast i8* %29 to %"class.std::__1::vector.12"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::vector.12"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::vector.12"* %35 to i64
  %37 = bitcast %"class.std::__1::vector.12"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #12
  %38 = bitcast %"class.std::__1::vector.12"* %1 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector.12"* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %1, i64 0, i32 0, i32 1
  %42 = bitcast i32** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %33, i64 %9, i32 0, i32 1
  %45 = bitcast i32** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast i32** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %33, i64 %9, i32 0, i32 2, i32 0, i32 0
  %50 = bitcast i32** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = bitcast %"class.std::__1::vector.12"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #12
  %52 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %34, i64 1
  %53 = ptrtoint %"class.std::__1::vector.12"* %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 0
  %55 = load %"class.std::__1::vector.12"*, %"class.std::__1::vector.12"** %54, align 8
  %56 = load %"class.std::__1::vector.12"*, %"class.std::__1::vector.12"** %3, align 8
  %57 = icmp eq %"class.std::__1::vector.12"* %56, %55
  br i1 %57, label %58, label %60

58:                                               ; preds = %31
  %59 = ptrtoint %"class.std::__1::vector.12"* %55 to i64
  br label %84

60:                                               ; preds = %31, %60
  %61 = phi %"class.std::__1::vector.12"* [ %63, %60 ], [ %34, %31 ]
  %62 = phi %"class.std::__1::vector.12"* [ %64, %60 ], [ %56, %31 ]
  %63 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %61, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %62, i64 -1
  %65 = bitcast %"class.std::__1::vector.12"* %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #12
  %66 = bitcast %"class.std::__1::vector.12"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.std::__1::vector.12"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %62, i64 -1, i32 0, i32 1
  %70 = bitcast i32** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %61, i64 -1, i32 0, i32 1
  %73 = bitcast i32** %72 to i64*
  store i64 %71, i64* %73, align 8
  %74 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %62, i64 -1, i32 0, i32 2, i32 0, i32 0
  %75 = bitcast i32** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %61, i64 -1, i32 0, i32 2, i32 0, i32 0
  %78 = bitcast i32** %77 to i64*
  store i64 %76, i64* %78, align 8
  %79 = bitcast %"class.std::__1::vector.12"* %64 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 24, i1 false) #12
  %80 = icmp eq %"class.std::__1::vector.12"* %64, %55
  br i1 %80, label %81, label %60

81:                                               ; preds = %60
  %82 = load i64, i64* %6, align 8
  %83 = load %"class.std::__1::vector.12"*, %"class.std::__1::vector.12"** %3, align 8
  br label %84

84:                                               ; preds = %58, %81
  %85 = phi %"class.std::__1::vector.12"* [ %55, %58 ], [ %83, %81 ]
  %86 = phi %"class.std::__1::vector.12"* [ %34, %58 ], [ %63, %81 ]
  %87 = phi i64 [ %59, %58 ], [ %82, %81 ]
  %88 = ptrtoint %"class.std::__1::vector.12"* %86 to i64
  store i64 %88, i64* %6, align 8
  store i64 %53, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %89 = inttoptr i64 %87 to %"class.std::__1::vector.12"*
  %90 = icmp eq %"class.std::__1::vector.12"* %85, %89
  br i1 %90, label %104, label %91

91:                                               ; preds = %84, %102
  %92 = phi %"class.std::__1::vector.12"* [ %93, %102 ], [ %85, %84 ]
  %93 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %92, i64 -1
  %94 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %93, i64 0, i32 0, i32 0
  %95 = load i32*, i32** %94, align 8
  %96 = icmp eq i32* %95, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %91
  %98 = ptrtoint i32* %95 to i64
  %99 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %92, i64 -1, i32 0, i32 1
  %100 = bitcast i32** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = bitcast i32* %95 to i8*
  tail call void @_ZdlPv(i8* %101) #14
  br label %102

102:                                              ; preds = %97, %91
  %103 = icmp eq %"class.std::__1::vector.12"* %93, %89
  br i1 %103, label %104, label %91

104:                                              ; preds = %102, %84
  %105 = icmp eq i64 %87, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %104
  %107 = inttoptr i64 %87 to i8*
  tail call void @_ZdlPv(i8* %107) #14
  br label %108

108:                                              ; preds = %104, %106
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.19"*, %"class.std::__1::vector.12"* dereferenceable(24)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::vector.12"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.19"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.19"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::vector.12"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #14
  %30 = bitcast i8* %29 to %"class.std::__1::vector.12"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::vector.12"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::vector.12"* %35 to i64
  %37 = bitcast %"class.std::__1::vector.12"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #12
  %38 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %1, i64 0, i32 0, i32 1
  %39 = bitcast i32** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::vector.12"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = ashr exact i64 %43, 2
  %45 = icmp eq i64 %43, 0
  br i1 %45, label %73, label %46

46:                                               ; preds = %31
  %47 = icmp ugt i64 %44, 4611686018427387903
  br i1 %47, label %48, label %50

48:                                               ; preds = %46
  %49 = bitcast %"class.std::__1::vector.12"* %34 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %49) #13
  unreachable

50:                                               ; preds = %46
  %51 = tail call i8* @_Znwm(i64 %43) #14
  %52 = bitcast i8* %51 to i32*
  %53 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %33, i64 %9, i32 0, i32 1
  %54 = bitcast i32** %53 to i8**
  store i8* %51, i8** %54, align 8
  %55 = bitcast %"class.std::__1::vector.12"* %34 to i8**
  store i8* %51, i8** %55, align 8
  %56 = getelementptr inbounds i32, i32* %52, i64 %44
  %57 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %33, i64 %9, i32 0, i32 2, i32 0, i32 0
  store i32* %56, i32** %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %1, i64 0, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = load i64, i64* %39, align 8
  %61 = bitcast i32** %53 to i64*
  %62 = ptrtoint i8* %51 to i64
  %63 = ptrtoint i32* %59 to i64
  %64 = sub i64 %60, %63
  %65 = icmp sgt i64 %64, 0
  br i1 %65, label %66, label %71

66:                                               ; preds = %50
  %67 = lshr exact i64 %64, 2
  %68 = bitcast i32* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %51, i8* align 4 %68, i64 %64, i1 false) #12
  %69 = getelementptr inbounds i32, i32* %52, i64 %67
  %70 = ptrtoint i32* %69 to i64
  br label %71

71:                                               ; preds = %66, %50
  %72 = phi i64 [ %70, %66 ], [ %62, %50 ]
  store i64 %72, i64* %61, align 8
  br label %73

73:                                               ; preds = %31, %71
  %74 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %34, i64 1
  %75 = ptrtoint %"class.std::__1::vector.12"* %74 to i64
  %76 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 0
  %77 = load %"class.std::__1::vector.12"*, %"class.std::__1::vector.12"** %76, align 8
  %78 = load %"class.std::__1::vector.12"*, %"class.std::__1::vector.12"** %3, align 8
  %79 = icmp eq %"class.std::__1::vector.12"* %78, %77
  br i1 %79, label %80, label %82

80:                                               ; preds = %73
  %81 = ptrtoint %"class.std::__1::vector.12"* %77 to i64
  br label %106

82:                                               ; preds = %73, %82
  %83 = phi %"class.std::__1::vector.12"* [ %85, %82 ], [ %34, %73 ]
  %84 = phi %"class.std::__1::vector.12"* [ %86, %82 ], [ %78, %73 ]
  %85 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %83, i64 -1
  %86 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %84, i64 -1
  %87 = bitcast %"class.std::__1::vector.12"* %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 24, i1 false) #12
  %88 = bitcast %"class.std::__1::vector.12"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.std::__1::vector.12"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %84, i64 -1, i32 0, i32 1
  %92 = bitcast i32** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %83, i64 -1, i32 0, i32 1
  %95 = bitcast i32** %94 to i64*
  store i64 %93, i64* %95, align 8
  %96 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %84, i64 -1, i32 0, i32 2, i32 0, i32 0
  %97 = bitcast i32** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %83, i64 -1, i32 0, i32 2, i32 0, i32 0
  %100 = bitcast i32** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = bitcast %"class.std::__1::vector.12"* %86 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 24, i1 false) #12
  %102 = icmp eq %"class.std::__1::vector.12"* %86, %77
  br i1 %102, label %103, label %82

103:                                              ; preds = %82
  %104 = load i64, i64* %6, align 8
  %105 = load %"class.std::__1::vector.12"*, %"class.std::__1::vector.12"** %3, align 8
  br label %106

106:                                              ; preds = %80, %103
  %107 = phi %"class.std::__1::vector.12"* [ %77, %80 ], [ %105, %103 ]
  %108 = phi %"class.std::__1::vector.12"* [ %34, %80 ], [ %85, %103 ]
  %109 = phi i64 [ %81, %80 ], [ %104, %103 ]
  %110 = ptrtoint %"class.std::__1::vector.12"* %108 to i64
  store i64 %110, i64* %6, align 8
  store i64 %75, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %111 = inttoptr i64 %109 to %"class.std::__1::vector.12"*
  %112 = icmp eq %"class.std::__1::vector.12"* %107, %111
  br i1 %112, label %126, label %113

113:                                              ; preds = %106, %124
  %114 = phi %"class.std::__1::vector.12"* [ %115, %124 ], [ %107, %106 ]
  %115 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %114, i64 -1
  %116 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %115, i64 0, i32 0, i32 0
  %117 = load i32*, i32** %116, align 8
  %118 = icmp eq i32* %117, null
  br i1 %118, label %124, label %119

119:                                              ; preds = %113
  %120 = ptrtoint i32* %117 to i64
  %121 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %114, i64 -1, i32 0, i32 1
  %122 = bitcast i32** %121 to i64*
  store i64 %120, i64* %122, align 8
  %123 = bitcast i32* %117 to i8*
  tail call void @_ZdlPv(i8* %123) #14
  br label %124

124:                                              ; preds = %119, %113
  %125 = icmp eq %"class.std::__1::vector.12"* %115, %111
  br i1 %125, label %126, label %113

126:                                              ; preds = %124, %106
  %127 = icmp eq i64 %109, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = inttoptr i64 %109 to i8*
  tail call void @_ZdlPv(i8* %129) #14
  br label %130

130:                                              ; preds = %126, %128
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN2sh12_GLOBAL__N_133GetImplicitConversionCombinationsERKNSt3__16vectorIiNS1_9allocatorIiEEEE: argument 0"}
!4 = distinct !{!4, !"_ZN2sh12_GLOBAL__N_133GetImplicitConversionCombinationsERKNSt3__16vectorIiNS1_9allocatorIiEEEE"}
!5 = !{!6}
!6 = distinct !{!6, !7}
!7 = distinct !{!7, !"LVerDomain"}
!8 = !{!9}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = distinct !{!14, !11}
