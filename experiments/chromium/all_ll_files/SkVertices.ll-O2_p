; ModuleID = '../../third_party/skia/src/core/SkVertices.cpp'
source_filename = "../../third_party/skia/src/core/SkVertices.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.SkVertices::Builder" = type { %class.sk_sp, %"class.std::__1::unique_ptr" }
%class.sk_sp = type { %class.SkVertices* }
%class.SkVertices = type <{ %class.SkNVRefCnt, i32, %struct.SkPoint*, i16*, %struct.SkPoint*, i32*, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkPoint = type { float, float }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"struct.SkVertices::Desc" = type { i32, i32, i32, i8, i8 }
%"struct.SkVertices::Sizes" = type { i64, i64, i64, i64, i64, i64, i64 }
%class.SkVerticesPriv = type { %class.SkVertices* }
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.6*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.6*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.6*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.6 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.7, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.7 = type { %"struct.std::__1::atomic" }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.2", [7 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.8, i32, i32 }
%class.sk_sp.8 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.9, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.9 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.10" }
%"struct.std::__1::atomic.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.21*, i32, [4 x i8], void (%class.sk_sp.22*, %class.SkReadBuffer*)**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.15" }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.22*, %class.SkReadBuffer*)* }
%class.sk_sp.22 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.21 = type { %class.SkTypeface* }
%struct.SkDeserialProcs = type { void (%class.sk_sp.23*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.24*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.21*, i8*, i64, i8*)*, i8* }
%class.sk_sp.23 = type { %class.SkPicture* }
%class.sk_sp.24 = type { %class.SkImage* }

$_ZN10SkVertices5SizesC2ERKNS_4DescE = comdat any

@_ZZL7next_idvE6nextID = internal global { { i32 } } { { i32 } { i32 1 } }, align 4

@_ZN10SkVertices7BuilderC1ENS_10VertexModeEiij = hidden unnamed_addr alias void (%"class.SkVertices::Builder"*, i32, i32, i32, i32), void (%"class.SkVertices::Builder"*, i32, i32, i32, i32)* @_ZN10SkVertices7BuilderC2ENS_10VertexModeEiij
@_ZN10SkVertices7BuilderC1ERKNS_4DescE = hidden unnamed_addr alias void (%"class.SkVertices::Builder"*, %"struct.SkVertices::Desc"*), void (%"class.SkVertices::Builder"*, %"struct.SkVertices::Desc"*)* @_ZN10SkVertices7BuilderC2ERKNS_4DescE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkVertices7BuilderC2ENS_10VertexModeEiij(%"class.SkVertices::Builder"* nocapture, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %6 = alloca %"struct.SkVertices::Desc", align 4
  %7 = trunc i32 %4 to i8
  %8 = and i8 %7, 1
  %9 = lshr i32 %4, 1
  %10 = trunc i32 %9 to i8
  %11 = and i8 %10, 1
  %12 = bitcast %"struct.SkVertices::Desc"* %6 to i8*
  %13 = bitcast %"class.SkVertices::Builder"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #7
  %14 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %6, i64 0, i32 0
  store i32 %1, i32* %14, align 4
  %15 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %6, i64 0, i32 1
  store i32 %2, i32* %15, align 4
  %16 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %6, i64 0, i32 2
  store i32 %3, i32* %16, align 4
  %17 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %6, i64 0, i32 3
  store i8 %8, i8* %17, align 4
  %18 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %6, i64 0, i32 4
  store i8 %11, i8* %18, align 1
  call void @_ZN10SkVertices7Builder4initERKNS_4DescE(%"class.SkVertices::Builder"* %0, %"struct.SkVertices::Desc"* nonnull dereferenceable(16) %6)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkVertices7Builder4initERKNS_4DescE(%"class.SkVertices::Builder"* nocapture, %"struct.SkVertices::Desc"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.SkVertices::Sizes", align 8
  %4 = bitcast %"struct.SkVertices::Sizes"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 56, i1 false)
  call void @_ZN10SkVertices5SizesC2ERKNS_4DescE(%"struct.SkVertices::Sizes"* nonnull %3, %"struct.SkVertices::Desc"* dereferenceable(16) %1)
  %5 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %3, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %76, label %8

8:                                                ; preds = %2
  %9 = call i8* @_Znwm(i64 %6) #7
  %10 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %3, i64 0, i32 6
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %8
  %14 = call i8* @_Znam(i64 %11) #8
  %15 = getelementptr inbounds %"class.SkVertices::Builder", %"class.SkVertices::Builder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  store i8* %14, i8** %15, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %13
  call void @_ZdaPv(i8* nonnull %16) #8
  br label %19

19:                                               ; preds = %18, %13, %8
  %20 = bitcast i8* %9 to i32*
  store i32 1, i32* %20, align 4
  %21 = getelementptr inbounds %"class.SkVertices::Builder", %"class.SkVertices::Builder"* %0, i64 0, i32 0, i32 0
  %22 = load %class.SkVertices*, %class.SkVertices** %21, align 8
  %23 = bitcast %"class.SkVertices::Builder"* %0 to i8**
  store i8* %9, i8** %23, align 8
  %24 = icmp eq %class.SkVertices* %22, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 -1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = bitcast %class.SkVertices* %22 to i8*
  call void @_ZdlPv(i8* nonnull %30) #7
  br label %31

31:                                               ; preds = %19, %25, %29
  %32 = getelementptr inbounds i8, i8* %9, i64 72
  %33 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %3, i64 0, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  %36 = select i1 %35, i8* null, i8* %32
  %37 = getelementptr inbounds i8, i8* %32, i64 %34
  %38 = load %class.SkVertices*, %class.SkVertices** %21, align 8
  %39 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %38, i64 0, i32 2
  %40 = bitcast %struct.SkPoint** %39 to i8**
  store i8* %36, i8** %40, align 8
  %41 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %3, i64 0, i32 3
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, 0
  %44 = select i1 %43, i8* null, i8* %37
  %45 = getelementptr inbounds i8, i8* %37, i64 %42
  %46 = load %class.SkVertices*, %class.SkVertices** %21, align 8
  %47 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %46, i64 0, i32 4
  %48 = bitcast %struct.SkPoint** %47 to i8**
  store i8* %44, i8** %48, align 8
  %49 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %3, i64 0, i32 4
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  %52 = select i1 %51, i8* null, i8* %45
  %53 = getelementptr inbounds i8, i8* %45, i64 %50
  %54 = load %class.SkVertices*, %class.SkVertices** %21, align 8
  %55 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %54, i64 0, i32 5
  %56 = bitcast i32** %55 to i8**
  store i8* %52, i8** %56, align 8
  %57 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %3, i64 0, i32 5
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  %60 = select i1 %59, i8* null, i8* %53
  %61 = load %class.SkVertices*, %class.SkVertices** %21, align 8
  %62 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %61, i64 0, i32 3
  %63 = bitcast i16** %62 to i8**
  store i8* %60, i8** %63, align 8
  %64 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %1, i64 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = load %class.SkVertices*, %class.SkVertices** %21, align 8
  %67 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %66, i64 0, i32 7
  store i32 %65, i32* %67, align 8
  %68 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %1, i64 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = load %class.SkVertices*, %class.SkVertices** %21, align 8
  %71 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %70, i64 0, i32 8
  store i32 %69, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %1, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = load %class.SkVertices*, %class.SkVertices** %21, align 8
  %75 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %74, i64 0, i32 9
  store i32 %73, i32* %75, align 8
  br label %76

76:                                               ; preds = %2, %31
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkVertices7BuilderC2ERKNS_4DescE(%"class.SkVertices::Builder"* nocapture, %"struct.SkVertices::Desc"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.SkVertices::Builder"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false)
  tail call void @_ZN10SkVertices7Builder4initERKNS_4DescE(%"class.SkVertices::Builder"* %0, %"struct.SkVertices::Desc"* dereferenceable(16) %1)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkVertices5SizesC2ERKNS_4DescE(%"struct.SkVertices::Sizes"*, %"struct.SkVertices::Desc"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %0, i64 0, i32 0
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = sext i32 %5 to i64
  %7 = icmp slt i32 %5, 0
  %8 = shl nsw i64 %6, 3
  br i1 %7, label %9, label %14

9:                                                ; preds = %2
  %10 = and i64 %8, 34359738360
  %11 = lshr i64 %6, 32
  %12 = shl i64 %11, 35
  %13 = or i64 %12, %10
  br label %14

14:                                               ; preds = %2, %9
  %15 = phi i8 [ 0, %9 ], [ 1, %2 ]
  %16 = phi i64 [ %13, %9 ], [ %8, %2 ]
  %17 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %0, i64 0, i32 2
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %1, i64 0, i32 3
  %19 = load i8, i8* %18, align 4, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %14
  %22 = load i32, i32* %4, align 4
  %23 = sext i32 %22 to i64
  %24 = icmp slt i32 %22, 0
  %25 = shl nsw i64 %23, 3
  br i1 %24, label %26, label %31

26:                                               ; preds = %21
  %27 = and i64 %25, 34359738360
  %28 = lshr i64 %23, 32
  %29 = shl i64 %28, 35
  %30 = or i64 %29, %27
  br label %31

31:                                               ; preds = %21, %26, %14
  %32 = phi i8 [ %15, %14 ], [ 0, %26 ], [ %15, %21 ]
  %33 = phi i64 [ 0, %14 ], [ %30, %26 ], [ %25, %21 ]
  %34 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %0, i64 0, i32 3
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %1, i64 0, i32 4
  %36 = load i8, i8* %35, align 1, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %48, label %38

38:                                               ; preds = %31
  %39 = load i32, i32* %4, align 4
  %40 = sext i32 %39 to i64
  %41 = icmp slt i32 %39, 0
  %42 = shl nsw i64 %40, 2
  br i1 %41, label %43, label %48

43:                                               ; preds = %38
  %44 = and i64 %42, 17179869180
  %45 = lshr i64 %40, 32
  %46 = shl i64 %45, 34
  %47 = or i64 %46, %44
  br label %48

48:                                               ; preds = %38, %43, %31
  %49 = phi i8 [ %32, %31 ], [ 0, %43 ], [ %32, %38 ]
  %50 = phi i64 [ 0, %31 ], [ %47, %43 ], [ %42, %38 ]
  %51 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %0, i64 0, i32 4
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %0, i64 0, i32 6
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = sext i32 %54 to i64
  %56 = icmp slt i32 %54, 0
  %57 = shl nsw i64 %55, 1
  br i1 %56, label %58, label %63

58:                                               ; preds = %48
  %59 = and i64 %57, 8589934590
  %60 = lshr i64 %55, 32
  %61 = shl i64 %60, 33
  %62 = or i64 %61, %59
  br label %63

63:                                               ; preds = %48, %58
  %64 = phi i8 [ 0, %58 ], [ %49, %48 ]
  %65 = phi i64 [ %62, %58 ], [ %57, %48 ]
  %66 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %0, i64 0, i32 5
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %1, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 2
  br i1 %69, label %70, label %89

70:                                               ; preds = %63
  %71 = load i32, i32* %53, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %70
  store i64 %65, i64* %52, align 8
  %74 = load i32, i32* %53, align 4
  br label %80

75:                                               ; preds = %70
  %76 = load i32, i32* %4, align 4
  %77 = icmp sgt i32 %76, 65536
  br i1 %77, label %78, label %80

78:                                               ; preds = %75
  %79 = bitcast %"struct.SkVertices::Sizes"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %79, i8 0, i64 56, i1 false) #7
  br label %114

80:                                               ; preds = %75, %73
  %81 = phi i32 [ %74, %73 ], [ %76, %75 ]
  %82 = add nsw i32 %81, -2
  %83 = icmp slt i32 %82, 1
  br i1 %83, label %84, label %86

84:                                               ; preds = %80
  %85 = bitcast %"struct.SkVertices::Sizes"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %85, i8 0, i64 56, i1 false) #7
  br label %114

86:                                               ; preds = %80
  %87 = sext i32 %82 to i64
  %88 = mul nsw i64 %87, 6
  store i64 %88, i64* %66, align 8
  br label %89

89:                                               ; preds = %86, %63
  %90 = phi i64 [ %88, %86 ], [ %65, %63 ]
  %91 = add i64 %90, %50
  %92 = icmp uge i64 %91, %50
  %93 = zext i1 %92 to i8
  %94 = and i8 %64, %93
  %95 = add i64 %91, %33
  %96 = icmp uge i64 %95, %33
  %97 = zext i1 %96 to i8
  %98 = and i8 %94, %97
  %99 = add i64 %95, %16
  %100 = icmp uge i64 %99, %16
  %101 = zext i1 %100 to i8
  %102 = and i8 %98, %101
  %103 = add i64 %99, 72
  %104 = icmp ugt i64 %103, 71
  %105 = zext i1 %104 to i8
  %106 = and i8 %102, %105
  store i64 %103, i64* %3, align 8
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %112, label %108

108:                                              ; preds = %89
  %109 = add i64 %91, %16
  %110 = add i64 %109, %33
  %111 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %0, i64 0, i32 1
  store i64 %110, i64* %111, align 8
  br label %114

112:                                              ; preds = %89
  %113 = bitcast %"struct.SkVertices::Sizes"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %113, i8 0, i64 56, i1 false) #7
  br label %114

114:                                              ; preds = %108, %112, %78, %84
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkVertices7Builder6detachEv(%class.sk_sp* noalias nocapture sret, %"class.SkVertices::Builder"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkVertices::Builder", %"class.SkVertices::Builder"* %1, i64 0, i32 0, i32 0
  %4 = load %class.SkVertices*, %class.SkVertices** %3, align 8
  %5 = icmp eq %class.SkVertices* %4, null
  br i1 %5, label %123, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %4, i64 0, i32 6
  %8 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %4, i64 0, i32 2
  %9 = load %struct.SkPoint*, %struct.SkPoint** %8, align 8
  %10 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %4, i64 0, i32 7
  %11 = load i32, i32* %10, align 8
  %12 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %7, %struct.SkPoint* %9, i32 %11) #7
  %13 = load %class.SkVertices*, %class.SkVertices** %3, align 8
  %14 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %13, i64 0, i32 9
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 2
  br i1 %16, label %17, label %113

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"class.SkVertices::Builder", %"class.SkVertices::Builder"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %13, i64 0, i32 7
  %23 = load i32, i32* %22, align 8
  %24 = icmp sgt i32 %23, 2
  br i1 %24, label %79, label %73

25:                                               ; preds = %17
  %26 = icmp eq %class.SkVertices* %13, null
  %27 = bitcast i8* %19 to i16*
  %28 = select i1 %26, i16* null, i16* %27
  %29 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %13, i64 0, i32 8
  %30 = load i32, i32* %29, align 4
  %31 = icmp sgt i32 %30, 2
  br i1 %31, label %39, label %34

32:                                               ; preds = %39
  %33 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %67, i64 0, i32 8
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32* [ %29, %25 ], [ %33, %32 ]
  %36 = phi i32 [ %30, %25 ], [ %69, %32 ]
  %37 = mul i32 %36, 3
  %38 = add i32 %37, -6
  store i32 %38, i32* %35, align 4
  br label %110

39:                                               ; preds = %25, %39
  %40 = phi i64 [ %49, %39 ], [ 0, %25 ]
  %41 = phi %class.SkVertices* [ %67, %39 ], [ %13, %25 ]
  %42 = load i16, i16* %28, align 2
  %43 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %41, i64 0, i32 3
  %44 = load i16*, i16** %43, align 8
  %45 = trunc i64 %40 to i32
  %46 = mul nsw i32 %45, 3
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds i16, i16* %44, i64 %47
  store i16 %42, i16* %48, align 2
  %49 = add nuw nsw i64 %40, 1
  %50 = getelementptr inbounds i16, i16* %28, i64 %49
  %51 = load i16, i16* %50, align 2
  %52 = load %class.SkVertices*, %class.SkVertices** %3, align 8
  %53 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %52, i64 0, i32 3
  %54 = load i16*, i16** %53, align 8
  %55 = add nuw nsw i32 %46, 1
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i16, i16* %54, i64 %56
  store i16 %51, i16* %57, align 2
  %58 = add nuw nsw i64 %40, 2
  %59 = getelementptr inbounds i16, i16* %28, i64 %58
  %60 = load i16, i16* %59, align 2
  %61 = load %class.SkVertices*, %class.SkVertices** %3, align 8
  %62 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %61, i64 0, i32 3
  %63 = load i16*, i16** %62, align 8
  %64 = add nuw nsw i32 %46, 2
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds i16, i16* %63, i64 %65
  store i16 %60, i16* %66, align 2
  %67 = load %class.SkVertices*, %class.SkVertices** %3, align 8
  %68 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %67, i64 0, i32 8
  %69 = load i32, i32* %68, align 4
  %70 = add nsw i32 %69, -2
  %71 = sext i32 %70 to i64
  %72 = icmp slt i64 %49, %71
  br i1 %72, label %39, label %32

73:                                               ; preds = %79, %21
  %74 = phi %class.SkVertices* [ %13, %21 ], [ %104, %79 ]
  %75 = phi i32 [ %23, %21 ], [ %106, %79 ]
  %76 = mul i32 %75, 3
  %77 = add i32 %76, -6
  %78 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %74, i64 0, i32 8
  store i32 %77, i32* %78, align 4
  br label %110

79:                                               ; preds = %21, %79
  %80 = phi i64 [ %88, %79 ], [ 0, %21 ]
  %81 = phi %class.SkVertices* [ %104, %79 ], [ %13, %21 ]
  %82 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %81, i64 0, i32 3
  %83 = load i16*, i16** %82, align 8
  %84 = trunc i64 %80 to i32
  %85 = mul nsw i32 %84, 3
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds i16, i16* %83, i64 %86
  store i16 0, i16* %87, align 2
  %88 = add nuw nsw i64 %80, 1
  %89 = trunc i64 %88 to i16
  %90 = load %class.SkVertices*, %class.SkVertices** %3, align 8
  %91 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %90, i64 0, i32 3
  %92 = load i16*, i16** %91, align 8
  %93 = add nuw nsw i32 %85, 1
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds i16, i16* %92, i64 %94
  store i16 %89, i16* %95, align 2
  %96 = trunc i64 %80 to i16
  %97 = add i16 %96, 2
  %98 = load %class.SkVertices*, %class.SkVertices** %3, align 8
  %99 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %98, i64 0, i32 3
  %100 = load i16*, i16** %99, align 8
  %101 = add nuw nsw i32 %85, 2
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds i16, i16* %100, i64 %102
  store i16 %97, i16* %103, align 2
  %104 = load %class.SkVertices*, %class.SkVertices** %3, align 8
  %105 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %104, i64 0, i32 7
  %106 = load i32, i32* %105, align 8
  %107 = add nsw i32 %106, -2
  %108 = sext i32 %107 to i64
  %109 = icmp slt i64 %88, %108
  br i1 %109, label %79, label %73

110:                                              ; preds = %73, %34
  %111 = load %class.SkVertices*, %class.SkVertices** %3, align 8
  %112 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %111, i64 0, i32 9
  store i32 0, i32* %112, align 8
  br label %113

113:                                              ; preds = %110, %6
  br label %114

114:                                              ; preds = %113, %114
  %115 = atomicrmw add i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZL7next_idvE6nextID, i64 0, i32 0, i32 0), i32 1 monotonic
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %114, label %117

117:                                              ; preds = %114
  %118 = load %class.SkVertices*, %class.SkVertices** %3, align 8
  %119 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %118, i64 0, i32 1
  store i32 %115, i32* %119, align 4
  %120 = bitcast %"class.SkVertices::Builder"* %1 to i64*
  %121 = load i64, i64* %120, align 8
  store %class.SkVertices* null, %class.SkVertices** %3, align 8
  %122 = bitcast %class.sk_sp* %0 to i64*
  store i64 %121, i64* %122, align 8
  br label %125

123:                                              ; preds = %2
  %124 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkVertices* null, %class.SkVertices** %124, align 8
  br label %125

125:                                              ; preds = %123, %117
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i16* @_ZN10SkVertices7Builder7indicesEv(%"class.SkVertices::Builder"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.SkVertices::Builder", %"class.SkVertices::Builder"* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkVertices*, %class.SkVertices** %2, align 8
  %4 = icmp eq %class.SkVertices* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.SkVertices::Builder", %"class.SkVertices::Builder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = bitcast i8* %7 to i16*
  br label %14

11:                                               ; preds = %5
  %12 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %3, i64 0, i32 3
  %13 = load i16*, i16** %12, align 8
  br label %14

14:                                               ; preds = %1, %11, %9
  %15 = phi i16* [ %10, %9 ], [ %13, %11 ], [ null, %1 ]
  ret i16* %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.SkPoint* @_ZN10SkVertices7Builder9positionsEv(%"class.SkVertices::Builder"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.SkVertices::Builder", %"class.SkVertices::Builder"* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkVertices*, %class.SkVertices** %2, align 8
  %4 = icmp eq %class.SkVertices* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %3, i64 0, i32 2
  %7 = load %struct.SkPoint*, %struct.SkPoint** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %struct.SkPoint* [ %7, %5 ], [ null, %1 ]
  ret %struct.SkPoint* %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.SkPoint* @_ZN10SkVertices7Builder9texCoordsEv(%"class.SkVertices::Builder"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.SkVertices::Builder", %"class.SkVertices::Builder"* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkVertices*, %class.SkVertices** %2, align 8
  %4 = icmp eq %class.SkVertices* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %3, i64 0, i32 4
  %7 = load %struct.SkPoint*, %struct.SkPoint** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %struct.SkPoint* [ %7, %5 ], [ null, %1 ]
  ret %struct.SkPoint* %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32* @_ZN10SkVertices7Builder6colorsEv(%"class.SkVertices::Builder"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.SkVertices::Builder", %"class.SkVertices::Builder"* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkVertices*, %class.SkVertices** %2, align 8
  %4 = icmp eq %class.SkVertices* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %3, i64 0, i32 5
  %7 = load i32*, i32** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32* [ %7, %5 ], [ null, %1 ]
  ret i32* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkVertices8MakeCopyENS_10VertexModeEiPK7SkPointS3_PKjiPKt(%class.sk_sp* noalias nocapture sret, i32, i32, %struct.SkPoint* nocapture readonly, %struct.SkPoint* readonly, i32* readonly, i32, i16* nocapture readonly) local_unnamed_addr #0 align 2 {
  %9 = alloca %"struct.SkVertices::Desc", align 4
  %10 = alloca %"class.SkVertices::Builder", align 8
  %11 = alloca %"struct.SkVertices::Sizes", align 8
  %12 = bitcast %"struct.SkVertices::Desc"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %12, i8 -86, i64 16, i1 false)
  %13 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %9, i64 0, i32 0
  store i32 %1, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %9, i64 0, i32 1
  store i32 %2, i32* %14, align 4
  %15 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %9, i64 0, i32 2
  store i32 %6, i32* %15, align 4
  %16 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %9, i64 0, i32 3
  %17 = icmp ne %struct.SkPoint* %4, null
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %16, align 4
  %19 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %9, i64 0, i32 4
  %20 = icmp ne i32* %5, null
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %19, align 1
  %22 = bitcast %"class.SkVertices::Builder"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #7
  %23 = getelementptr inbounds %"class.SkVertices::Builder", %"class.SkVertices::Builder"* %10, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.SkVertices::Builder", %"class.SkVertices::Builder"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 16, i1 false) #7
  call void @_ZN10SkVertices7Builder4initERKNS_4DescE(%"class.SkVertices::Builder"* nonnull %10, %"struct.SkVertices::Desc"* nonnull dereferenceable(16) %9) #7
  %25 = load %class.SkVertices*, %class.SkVertices** %23, align 8
  %26 = icmp eq %class.SkVertices* %25, null
  br i1 %26, label %27, label %29

27:                                               ; preds = %8
  %28 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkVertices* null, %class.SkVertices** %28, align 8
  br label %76

29:                                               ; preds = %8
  %30 = bitcast %"struct.SkVertices::Sizes"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %30) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 56, i1 false)
  call void @_ZN10SkVertices5SizesC2ERKNS_4DescE(%"struct.SkVertices::Sizes"* nonnull %11, %"struct.SkVertices::Desc"* nonnull dereferenceable(16) %9)
  %31 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %11, i64 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %29
  %35 = bitcast %struct.SkPoint* %3 to i8*
  %36 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %25, i64 0, i32 2
  %37 = bitcast %struct.SkPoint** %36 to i8**
  %38 = load i8*, i8** %37, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* align 1 %35, i64 %32, i1 false) #7
  br label %39

39:                                               ; preds = %29, %34
  %40 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %11, i64 0, i32 3
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %48, label %43

43:                                               ; preds = %39
  %44 = bitcast %struct.SkPoint* %4 to i8*
  %45 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %25, i64 0, i32 4
  %46 = bitcast %struct.SkPoint** %45 to i8**
  %47 = load i8*, i8** %46, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %47, i8* align 1 %44, i64 %41, i1 false) #7
  br label %48

48:                                               ; preds = %39, %43
  %49 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %11, i64 0, i32 4
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %48
  %53 = bitcast i32* %5 to i8*
  %54 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %25, i64 0, i32 5
  %55 = bitcast i32** %54 to i8**
  %56 = load i8*, i8** %55, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %56, i8* align 1 %53, i64 %50, i1 false) #7
  br label %57

57:                                               ; preds = %52, %48
  %58 = icmp eq i32 %1, 2
  %59 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %11, i64 0, i32 6
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %11, i64 0, i32 5
  %62 = load i64, i64* %61, align 8
  %63 = select i1 %58, i64 %60, i64 %62
  %64 = load i8*, i8** %24, align 8
  %65 = icmp eq i8* %64, null
  br i1 %65, label %66, label %70

66:                                               ; preds = %57
  %67 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %25, i64 0, i32 3
  %68 = bitcast i16** %67 to i8**
  %69 = load i8*, i8** %68, align 8
  br label %70

70:                                               ; preds = %57, %66
  %71 = phi i8* [ %69, %66 ], [ %64, %57 ]
  %72 = icmp eq i64 %63, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %70
  %74 = bitcast i16* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %71, i8* align 1 %74, i64 %63, i1 false) #7
  br label %75

75:                                               ; preds = %70, %73
  call void @_ZN10SkVertices7Builder6detachEv(%class.sk_sp* sret %0, %"class.SkVertices::Builder"* nonnull %10)
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %30) #7
  br label %76

76:                                               ; preds = %75, %27
  %77 = load i8*, i8** %24, align 8
  store i8* null, i8** %24, align 8
  %78 = icmp eq i8* %77, null
  br i1 %78, label %80, label %79

79:                                               ; preds = %76
  call void @_ZdaPv(i8* nonnull %77) #8
  br label %80

80:                                               ; preds = %79, %76
  %81 = load %class.SkVertices*, %class.SkVertices** %23, align 8
  %82 = icmp eq %class.SkVertices* %81, null
  br i1 %82, label %89, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw add i32* %84, i32 -1 acq_rel
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %87, label %89

87:                                               ; preds = %83
  %88 = bitcast %class.SkVertices* %81 to i8*
  call void @_ZdlPv(i8* nonnull %88) #7
  br label %89

89:                                               ; preds = %80, %83, %87
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK10SkVertices15approximateSizeEv(%class.SkVertices* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.SkVertices::Desc", align 4
  %3 = alloca %"struct.SkVertices::Sizes", align 8
  %4 = bitcast %"struct.SkVertices::Sizes"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 56, i1 false) #7, !alias.scope !3
  %5 = bitcast %"struct.SkVertices::Desc"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #7, !noalias !3
  %6 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %2, i64 0, i32 0
  %7 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %0, i64 0, i32 9
  %8 = load i32, i32* %7, align 8, !noalias !3
  store i32 %8, i32* %6, align 4, !noalias !3
  %9 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %2, i64 0, i32 1
  %10 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %0, i64 0, i32 7
  %11 = load i32, i32* %10, align 8, !noalias !3
  store i32 %11, i32* %9, align 4, !noalias !3
  %12 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %2, i64 0, i32 2
  %13 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %0, i64 0, i32 8
  %14 = load i32, i32* %13, align 4, !noalias !3
  store i32 %14, i32* %12, align 4, !noalias !3
  %15 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %2, i64 0, i32 3
  %16 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %0, i64 0, i32 4
  %17 = load %struct.SkPoint*, %struct.SkPoint** %16, align 8, !noalias !3
  %18 = icmp ne %struct.SkPoint* %17, null
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %15, align 4, !noalias !3
  %20 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %2, i64 0, i32 4
  %21 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %0, i64 0, i32 5
  %22 = load i32*, i32** %21, align 8, !noalias !3
  %23 = icmp ne i32* %22, null
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %20, align 1, !noalias !3
  call void @_ZN10SkVertices5SizesC2ERKNS_4DescE(%"struct.SkVertices::Sizes"* nonnull %3, %"struct.SkVertices::Desc"* nonnull dereferenceable(16) %2) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #7, !noalias !3
  %25 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %3, i64 0, i32 0
  %26 = load i64, i64* %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4) #7
  ret i64 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10SkVertices8getSizesEv(%"struct.SkVertices::Sizes"* noalias sret, %class.SkVertices* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.SkVertices::Desc", align 4
  %4 = bitcast %"struct.SkVertices::Sizes"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 56, i1 false)
  %5 = bitcast %"struct.SkVertices::Desc"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %1, i64 0, i32 9
  %8 = load i32, i32* %7, align 8
  store i32 %8, i32* %6, align 4
  %9 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %3, i64 0, i32 1
  %10 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %1, i64 0, i32 7
  %11 = load i32, i32* %10, align 8
  store i32 %11, i32* %9, align 4
  %12 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %3, i64 0, i32 2
  %13 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %1, i64 0, i32 8
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %12, align 4
  %15 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %3, i64 0, i32 3
  %16 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %1, i64 0, i32 4
  %17 = load %struct.SkPoint*, %struct.SkPoint** %16, align 8
  %18 = icmp ne %struct.SkPoint* %17, null
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %15, align 4
  %20 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %3, i64 0, i32 4
  %21 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %1, i64 0, i32 5
  %22 = load i32*, i32** %21, align 8
  %23 = icmp ne i32* %22, null
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %20, align 1
  call void @_ZN10SkVertices5SizesC2ERKNS_4DescE(%"struct.SkVertices::Sizes"* %0, %"struct.SkVertices::Desc"* nonnull dereferenceable(16) %3)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK14SkVerticesPriv6encodeER13SkWriteBuffer(%class.SkVerticesPriv* nocapture readonly, %class.SkWriteBuffer* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.SkVertices::Desc", align 4
  %4 = alloca %"struct.SkVertices::Sizes", align 8
  %5 = getelementptr inbounds %class.SkVerticesPriv, %class.SkVerticesPriv* %0, i64 0, i32 0
  %6 = load %class.SkVertices*, %class.SkVertices** %5, align 8
  %7 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %6, i64 0, i32 9
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %6, i64 0, i32 4
  %10 = load %struct.SkPoint*, %struct.SkPoint** %9, align 8
  %11 = icmp eq %struct.SkPoint* %10, null
  %12 = or i32 %8, 256
  %13 = select i1 %11, i32 %8, i32 %12
  %14 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %6, i64 0, i32 5
  %15 = load i32*, i32** %14, align 8
  %16 = icmp eq i32* %15, null
  %17 = or i32 %13, 512
  %18 = select i1 %16, i32 %13, i32 %17
  %19 = bitcast %"struct.SkVertices::Sizes"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %19) #7
  %20 = bitcast %"struct.SkVertices::Desc"* %3 to i8*
  %21 = bitcast %"struct.SkVertices::Sizes"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 56, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #7, !noalias !6
  %22 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %3, i64 0, i32 0
  store i32 %8, i32* %22, align 4, !noalias !6
  %23 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %3, i64 0, i32 1
  %24 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %6, i64 0, i32 7
  %25 = load i32, i32* %24, align 8, !noalias !6
  store i32 %25, i32* %23, align 4, !noalias !6
  %26 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %3, i64 0, i32 2
  %27 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %6, i64 0, i32 8
  %28 = load i32, i32* %27, align 4, !noalias !6
  store i32 %28, i32* %26, align 4, !noalias !6
  %29 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %3, i64 0, i32 3
  %30 = load %struct.SkPoint*, %struct.SkPoint** %9, align 8, !noalias !6
  %31 = icmp ne %struct.SkPoint* %30, null
  %32 = zext i1 %31 to i8
  store i8 %32, i8* %29, align 4, !noalias !6
  %33 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %3, i64 0, i32 4
  %34 = load i32*, i32** %14, align 8, !noalias !6
  %35 = icmp ne i32* %34, null
  %36 = zext i1 %35 to i8
  store i8 %36, i8* %33, align 1, !noalias !6
  call void @_ZN10SkVertices5SizesC2ERKNS_4DescE(%"struct.SkVertices::Sizes"* nonnull %4, %"struct.SkVertices::Desc"* nonnull dereferenceable(16) %3) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #7, !noalias !6
  %37 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %38 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %38, i64 9
  %40 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %39, align 8
  call void %40(%class.SkWriteBuffer* %1, i32 %18) #7
  %41 = load %class.SkVertices*, %class.SkVertices** %5, align 8
  %42 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %41, i64 0, i32 7
  %43 = load i32, i32* %42, align 8
  %44 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %37, align 8
  %45 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %44, i64 7
  %46 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %45, align 8
  call void %46(%class.SkWriteBuffer* %1, i32 %43) #7
  %47 = load %class.SkVertices*, %class.SkVertices** %5, align 8
  %48 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %47, i64 0, i32 8
  %49 = load i32, i32* %48, align 4
  %50 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %37, align 8
  %51 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %50, i64 7
  %52 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %51, align 8
  call void %52(%class.SkWriteBuffer* %1, i32 %49) #7
  %53 = load %class.SkVertices*, %class.SkVertices** %5, align 8
  %54 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %53, i64 0, i32 2
  %55 = bitcast %struct.SkPoint** %54 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %4, i64 0, i32 2
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i8*, i64)***
  %60 = load void (%class.SkWriteBuffer*, i8*, i64)**, void (%class.SkWriteBuffer*, i8*, i64)*** %59, align 8
  %61 = getelementptr inbounds void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %60, i64 3
  %62 = load void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %61, align 8
  call void %62(%class.SkWriteBuffer* %1, i8* %56, i64 %58) #7
  %63 = load %class.SkVertices*, %class.SkVertices** %5, align 8
  %64 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %63, i64 0, i32 4
  %65 = bitcast %struct.SkPoint** %64 to i8**
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %4, i64 0, i32 3
  %68 = load i64, i64* %67, align 8
  %69 = load void (%class.SkWriteBuffer*, i8*, i64)**, void (%class.SkWriteBuffer*, i8*, i64)*** %59, align 8
  %70 = getelementptr inbounds void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %69, i64 3
  %71 = load void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %70, align 8
  call void %71(%class.SkWriteBuffer* %1, i8* %66, i64 %68) #7
  %72 = load %class.SkVertices*, %class.SkVertices** %5, align 8
  %73 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %72, i64 0, i32 5
  %74 = bitcast i32** %73 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %4, i64 0, i32 4
  %77 = load i64, i64* %76, align 8
  %78 = load void (%class.SkWriteBuffer*, i8*, i64)**, void (%class.SkWriteBuffer*, i8*, i64)*** %59, align 8
  %79 = getelementptr inbounds void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %78, i64 3
  %80 = load void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %79, align 8
  call void %80(%class.SkWriteBuffer* %1, i8* %75, i64 %77) #7
  %81 = load %class.SkVertices*, %class.SkVertices** %5, align 8
  %82 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %81, i64 0, i32 3
  %83 = bitcast i16** %82 to i8**
  %84 = load i8*, i8** %83, align 8
  %85 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %4, i64 0, i32 5
  %86 = load i64, i64* %85, align 8
  %87 = load void (%class.SkWriteBuffer*, i8*, i64)**, void (%class.SkWriteBuffer*, i8*, i64)*** %59, align 8
  %88 = getelementptr inbounds void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %87, i64 3
  %89 = load void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %88, align 8
  call void %89(%class.SkWriteBuffer* %1, i8* %84, i64 %86) #7
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %19) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkVerticesPriv6DecodeER12SkReadBuffer(%class.sk_sp* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.SkVertices::Desc", align 4
  %4 = alloca %"struct.SkVertices::Sizes", align 8
  %5 = alloca %"class.SkVertices::Builder", align 8
  %6 = alloca i64, align 8
  %7 = alloca %class.sk_sp.6, align 8
  %8 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = icmp ult i32 %10, 74
  br i1 %11, label %12, label %25

12:                                               ; preds = %2
  %13 = bitcast %class.sk_sp.6* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #7
  %14 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %7, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %14, align 8
  call void @_ZN12SkReadBuffer19readByteArrayAsDataEv(%class.sk_sp.6* nonnull sret %7, %class.SkReadBuffer* %1) #7
  %15 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkVertices* null, %class.SkVertices** %15, align 8
  %16 = load %class.SkData*, %class.SkData** %14, align 8
  %17 = icmp eq %class.SkData* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %class.SkData, %class.SkData* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %16) #7
  %23 = bitcast %class.SkData* %16 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %23) #7
  br label %24

24:                                               ; preds = %12, %18, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #7
  br label %168

25:                                               ; preds = %2
  %26 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkVertices* inttoptr (i64 -6148914691236517206 to %class.SkVertices*), %class.SkVertices** %26, align 8
  %27 = icmp ult i32 %10, 85
  %28 = tail call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #7, !noalias !9
  %29 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7, !noalias !9
  %30 = icmp sgt i32 %29, 0
  %31 = select i1 %30, i32 %29, i32 0
  %32 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7, !noalias !9
  %33 = or i32 %32, %29
  %34 = lshr i32 %33, 31
  %35 = trunc i32 %34 to i8
  %36 = xor i8 %35, 1
  %37 = icmp sgt i32 %32, 0
  %38 = select i1 %37, i32 %32, i32 0
  br i1 %27, label %39, label %44

39:                                               ; preds = %25
  %40 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7, !noalias !9
  %41 = icmp slt i32 %40, 0
  %42 = select i1 %41, i8 0, i8 %36
  %43 = select i1 %41, i32 0, i32 %40
  br label %44

44:                                               ; preds = %39, %25
  %45 = phi i8 [ %36, %25 ], [ %42, %39 ]
  %46 = phi i32 [ 0, %25 ], [ %43, %39 ]
  %47 = and i32 %28, 255
  %48 = icmp ugt i32 %47, 2
  %49 = select i1 %48, i32 0, i32 %47
  %50 = lshr i32 %28, 8
  %51 = trunc i32 %50 to i8
  %52 = and i8 %51, 1
  %53 = lshr i32 %28, 9
  %54 = trunc i32 %53 to i8
  %55 = and i8 %54, 1
  %56 = icmp ne i8 %45, 0
  %57 = xor i1 %48, true
  %58 = and i1 %56, %57
  br i1 %58, label %59, label %65

59:                                               ; preds = %44
  %60 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %61 = load i8, i8* %60, align 8, !range !2, !noalias !9
  %62 = icmp ne i8 %61, 0
  %63 = icmp ne i32 %46, 0
  %64 = or i1 %63, %62
  br i1 %64, label %65, label %66

65:                                               ; preds = %44, %59
  store %class.SkVertices* null, %class.SkVertices** %26, align 8, !alias.scope !9
  br label %167

66:                                               ; preds = %59
  %67 = bitcast %"struct.SkVertices::Desc"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #7, !noalias !9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %67, i8 -86, i64 16, i1 false) #7, !noalias !9
  %68 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %3, i64 0, i32 0
  store i32 %49, i32* %68, align 4, !noalias !9
  %69 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %3, i64 0, i32 1
  store i32 %31, i32* %69, align 4, !noalias !9
  %70 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %3, i64 0, i32 2
  store i32 %38, i32* %70, align 4, !noalias !9
  %71 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %3, i64 0, i32 3
  store i8 %52, i8* %71, align 4, !noalias !9
  %72 = getelementptr inbounds %"struct.SkVertices::Desc", %"struct.SkVertices::Desc"* %3, i64 0, i32 4
  store i8 %55, i8* %72, align 1, !noalias !9
  %73 = bitcast %"struct.SkVertices::Sizes"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %73) #7, !noalias !9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 56, i1 false) #7, !noalias !9
  call void @_ZN10SkVertices5SizesC2ERKNS_4DescE(%"struct.SkVertices::Sizes"* nonnull %4, %"struct.SkVertices::Desc"* nonnull dereferenceable(16) %3) #7, !noalias !9
  %74 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %4, i64 0, i32 0
  %75 = load i64, i64* %74, align 8, !noalias !9
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %66
  store %class.SkVertices* null, %class.SkVertices** %26, align 8, !alias.scope !9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %73) #7, !noalias !9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #7, !noalias !9
  br label %167

78:                                               ; preds = %66
  %79 = bitcast %"class.SkVertices::Builder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #7, !noalias !9
  %80 = getelementptr inbounds %"class.SkVertices::Builder", %"class.SkVertices::Builder"* %5, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.SkVertices::Builder", %"class.SkVertices::Builder"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 16, i1 false) #7, !noalias !9
  call void @_ZN10SkVertices7Builder4initERKNS_4DescE(%"class.SkVertices::Builder"* nonnull %5, %"struct.SkVertices::Desc"* nonnull dereferenceable(16) %3) #7, !noalias !9
  %82 = load %class.SkVertices*, %class.SkVertices** %80, align 8, !noalias !9
  %83 = icmp eq %class.SkVertices* %82, null
  br i1 %83, label %84, label %85

84:                                               ; preds = %78
  store %class.SkVertices* null, %class.SkVertices** %26, align 8, !alias.scope !9
  br label %151

85:                                               ; preds = %78
  %86 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %82, i64 0, i32 2
  %87 = bitcast %struct.SkPoint** %86 to i8**
  %88 = load i8*, i8** %87, align 8, !noalias !9
  %89 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %4, i64 0, i32 2
  %90 = load i64, i64* %89, align 8, !noalias !9
  %91 = call zeroext i1 @_ZN12SkReadBuffer13readByteArrayEPvm(%class.SkReadBuffer* %1, i8* %88, i64 %90) #7, !noalias !9
  br i1 %27, label %92, label %99

92:                                               ; preds = %85
  %93 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #7, !noalias !9
  store i64 0, i64* %6, align 8, !noalias !9
  %94 = call i8* @_ZN12SkReadBuffer13skipByteArrayEPm(%class.SkReadBuffer* %1, i64* nonnull %6) #7, !noalias !9
  %95 = load i64, i64* %6, align 8, !noalias !9
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %98, label %97

97:                                               ; preds = %92
  store %class.SkVertices* null, %class.SkVertices** %26, align 8, !alias.scope !9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #7, !noalias !9
  br label %151

98:                                               ; preds = %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #7, !noalias !9
  br label %99

99:                                               ; preds = %98, %85
  %100 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %82, i64 0, i32 4
  %101 = bitcast %struct.SkPoint** %100 to i8**
  %102 = load i8*, i8** %101, align 8, !noalias !9
  %103 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %4, i64 0, i32 3
  %104 = load i64, i64* %103, align 8, !noalias !9
  %105 = call zeroext i1 @_ZN12SkReadBuffer13readByteArrayEPvm(%class.SkReadBuffer* %1, i8* %102, i64 %104) #7, !noalias !9
  %106 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %82, i64 0, i32 5
  %107 = bitcast i32** %106 to i8**
  %108 = load i8*, i8** %107, align 8, !noalias !9
  %109 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %4, i64 0, i32 4
  %110 = load i64, i64* %109, align 8, !noalias !9
  %111 = call zeroext i1 @_ZN12SkReadBuffer13readByteArrayEPvm(%class.SkReadBuffer* %1, i8* %108, i64 %110) #7, !noalias !9
  %112 = icmp eq i32 %49, 2
  %113 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %4, i64 0, i32 6
  %114 = load i64, i64* %113, align 8, !noalias !9
  %115 = getelementptr inbounds %"struct.SkVertices::Sizes", %"struct.SkVertices::Sizes"* %4, i64 0, i32 5
  %116 = load i64, i64* %115, align 8, !noalias !9
  %117 = select i1 %112, i64 %114, i64 %116
  %118 = load i8*, i8** %81, align 8, !noalias !9
  %119 = icmp eq i8* %118, null
  br i1 %119, label %120, label %124

120:                                              ; preds = %99
  %121 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %82, i64 0, i32 3
  %122 = bitcast i16** %121 to i8**
  %123 = load i8*, i8** %122, align 8, !noalias !9
  br label %124

124:                                              ; preds = %120, %99
  %125 = phi i8* [ %123, %120 ], [ %118, %99 ]
  %126 = call zeroext i1 @_ZN12SkReadBuffer13readByteArrayEPvm(%class.SkReadBuffer* %1, i8* %125, i64 %117) #7, !noalias !9
  %127 = load i8, i8* %60, align 8, !range !2, !noalias !9
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %130, label %129

129:                                              ; preds = %124
  store %class.SkVertices* null, %class.SkVertices** %26, align 8, !alias.scope !9
  br label %151

130:                                              ; preds = %124
  br i1 %37, label %131, label %150

131:                                              ; preds = %130
  br i1 %119, label %134, label %132

132:                                              ; preds = %131
  %133 = bitcast i8* %118 to i16*
  br label %137

134:                                              ; preds = %131
  %135 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %82, i64 0, i32 3
  %136 = load i16*, i16** %135, align 8, !noalias !9
  br label %137

137:                                              ; preds = %134, %132
  %138 = phi i16* [ %133, %132 ], [ %136, %134 ]
  %139 = zext i32 %38 to i64
  br label %142

140:                                              ; preds = %142
  %141 = icmp ult i64 %148, %139
  br i1 %141, label %142, label %150

142:                                              ; preds = %140, %137
  %143 = phi i64 [ 0, %137 ], [ %148, %140 ]
  %144 = getelementptr inbounds i16, i16* %138, i64 %143
  %145 = load i16, i16* %144, align 2, !noalias !9
  %146 = zext i16 %145 to i32
  %147 = icmp ugt i32 %31, %146
  %148 = add nuw nsw i64 %143, 1
  br i1 %147, label %140, label %149

149:                                              ; preds = %142
  store %class.SkVertices* null, %class.SkVertices** %26, align 8, !alias.scope !9
  br label %151

150:                                              ; preds = %140, %130
  call void @_ZN10SkVertices7Builder6detachEv(%class.sk_sp* sret %0, %"class.SkVertices::Builder"* nonnull %5) #7
  br label %151

151:                                              ; preds = %150, %149, %129, %97, %84
  %152 = load i8*, i8** %81, align 8, !noalias !9
  store i8* null, i8** %81, align 8, !noalias !9
  %153 = icmp eq i8* %152, null
  br i1 %153, label %155, label %154

154:                                              ; preds = %151
  call void @_ZdaPv(i8* nonnull %152) #8, !noalias !9
  br label %155

155:                                              ; preds = %154, %151
  %156 = load %class.SkVertices*, %class.SkVertices** %80, align 8, !noalias !9
  %157 = icmp eq %class.SkVertices* %156, null
  br i1 %157, label %164, label %158

158:                                              ; preds = %155
  %159 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %156, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = atomicrmw add i32* %159, i32 -1 acq_rel, !noalias !9
  %161 = icmp eq i32 %160, 1
  br i1 %161, label %162, label %164

162:                                              ; preds = %158
  %163 = bitcast %class.SkVertices* %156 to i8*
  call void @_ZdlPv(i8* nonnull %163) #7, !noalias !9
  br label %164

164:                                              ; preds = %155, %158, %162
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #7, !noalias !9
  %165 = load %class.SkVertices*, %class.SkVertices** %26, align 8
  %166 = icmp eq %class.SkVertices* %165, null
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %73) #7, !noalias !9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #7, !noalias !9
  br i1 %166, label %167, label %168

167:                                              ; preds = %77, %65, %164
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  store %class.SkVertices* null, %class.SkVertices** %26, align 8
  br label %168

168:                                              ; preds = %167, %164, %24
  ret void
}

declare void @_ZN12SkReadBuffer19readByteArrayAsDataEv(%class.sk_sp.6* sret, %class.SkReadBuffer*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkVerticesdlEPv(i8*) local_unnamed_addr #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

declare i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer*) local_unnamed_addr #4

declare i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer*) local_unnamed_addr #4

declare zeroext i1 @_ZN12SkReadBuffer13readByteArrayEPvm(%class.SkReadBuffer*, i8*, i64) local_unnamed_addr #4

declare i8* @_ZN12SkReadBuffer13skipByteArrayEPm(%class.SkReadBuffer*, i64*) local_unnamed_addr #4

declare void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK10SkVertices8getSizesEv: argument 0"}
!5 = distinct !{!5, !"_ZNK10SkVertices8getSizesEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK10SkVertices8getSizesEv: argument 0"}
!8 = distinct !{!8, !"_ZNK10SkVertices8getSizesEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZZN14SkVerticesPriv6DecodeER12SkReadBufferENK3$_1clES1_: argument 0"}
!11 = distinct !{!11, !"_ZZN14SkVerticesPriv6DecodeER12SkReadBufferENK3$_1clES1_"}
