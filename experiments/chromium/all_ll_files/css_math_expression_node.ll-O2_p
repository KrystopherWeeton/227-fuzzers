; ModuleID = '../../third_party/blink/renderer/core/css/css_math_expression_node.cc'
source_filename = "../../third_party/blink/renderer/core/css/css_math_expression_node.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%union.anon = type { %"struct.blink::PixelsAndPercent" }
%"struct.blink::PixelsAndPercent" = type { float, float }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.218 }
%union.anon.218 = type { double }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.240" }
%"struct.std::__1::atomic.240" = type { %"struct.std::__1::__atomic_base.241" }
%"struct.std::__1::__atomic_base.241" = type { %"struct.std::__1::__atomic_base.242" }
%"struct.std::__1::__atomic_base.242" = type { %"struct.std::__1::__cxx_atomic_impl.243" }
%"struct.std::__1::__cxx_atomic_impl.243" = type { %"struct.std::__1::__cxx_atomic_base_impl.244" }
%"struct.std::__1::__cxx_atomic_base_impl.244" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.141", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.157", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.175", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.182", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.121", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.41" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i64 }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::Worklist.52"* }
%"class.blink::Worklist.52" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.41" }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::Worklist.59"* }
%"class.blink::Worklist.59" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.41" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::Worklist.66"* }
%"class.blink::Worklist.66" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.41" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::Worklist.73"* }
%"class.blink::Worklist.73" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.41" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::Worklist.80"* }
%"class.blink::Worklist.80" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.41" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::Worklist.87"* }
%"class.blink::Worklist.87" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.41" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::Worklist.94"* }
%"class.blink::Worklist.94" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.41" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.101", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", %"class.std::__1::__compressed_pair.115", [4 x i8] }>
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103", %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { i64 }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { float }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.124", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.133" }
%"class.WTF::Vector.133" = type { %"class.WTF::VectorBuffer.134" }
%"class.WTF::VectorBuffer.134" = type { %"class.WTF::VectorBufferBase.135" }
%"class.WTF::VectorBufferBase.135" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.149" }
%"class.WTF::VectorBuffer.149" = type { %"class.WTF::VectorBufferBase.150" }
%"class.WTF::VectorBufferBase.150" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.163" }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.52"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.59"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.66"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.73"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.80"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.186" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.181 }
%class.scoped_refptr.181 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.182" = type { %"struct.std::__1::__atomic_base.183" }
%"struct.std::__1::__atomic_base.183" = type { %"struct.std::__1::__cxx_atomic_impl.184" }
%"struct.std::__1::__cxx_atomic_impl.184" = type { %"struct.std::__1::__cxx_atomic_base_impl.185" }
%"struct.std::__1::__cxx_atomic_base_impl.185" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::CSSMathExpressionNumericLiteral" = type { %"class.blink::CSSMathExpressionNode.base", %"class.blink::Member" }
%"class.blink::CSSMathExpressionNode.base" = type <{ i32 (...)**, i32, i8, i8, i8 }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSNumericLiteralValue"* }
%"class.blink::CSSNumericLiteralValue" = type { %"class.blink::CSSPrimitiveValue", double }
%"class.blink::CSSPrimitiveValue" = type { %"class.blink::CSSValue" }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::CSSMathExpressionBinaryOperation" = type <{ %"class.blink::CSSMathExpressionNode.base", i8, %"class.blink::Member.191", %"class.blink::Member.191", i32, [4 x i8] }>
%"class.blink::Member.191" = type { %"class.blink::MemberBase.192" }
%"class.blink::MemberBase.192" = type { %"class.blink::CSSMathExpressionNode"* }
%"class.blink::CSSMathExpressionNode" = type <{ i32 (...)**, i32, i8, i8, i8, i8 }>
%"class.blink::CSSMathExpressionVariadicOperation" = type <{ %"class.blink::CSSMathExpressionNode.base", i8, %"class.blink::HeapVector", i32, i8, [3 x i8] }>
%"class.blink::HeapVector" = type { %"class.WTF::Vector.206" }
%"class.WTF::Vector.206" = type { %"class.WTF::VectorBuffer.207" }
%"class.WTF::VectorBuffer.207" = type { %"class.WTF::VectorBufferBase.208" }
%"class.WTF::VectorBufferBase.208" = type { %"class.blink::Member.191"*, i32, i32 }
%"class.blink::CSSToLengthConversionData" = type <{ %"class.blink::ComputedStyle"*, %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::ViewportSize", float, [4 x i8] }>
%"class.blink::ComputedStyle" = type opaque
%"class.blink::CSSToLengthConversionData::FontSizes" = type <{ float, float, %"class.blink::Font"*, float, [4 x i8] }>
%"class.blink::Font" = type opaque
%"class.blink::CSSToLengthConversionData::ViewportSize" = type { %"class.blink::DoubleSize" }
%"class.blink::DoubleSize" = type { double, double }
%"class.blink::CalculationExpressionNode" = type <{ i32 (...)**, %"class.WTF::RefCounted", [4 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"struct.blink::CSSPrimitiveValue::CSSLengthArray" = type { %"class.WTF::Vector", %"class.std::__1::bitset" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [80 x i8] }
%"class.WTF::VectorBufferBase" = type { double*, i32, i32 }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.193, i32, i8, i8, [2 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%union.anon.193 = type { %"class.WTF::Vector.194" }
%"class.WTF::Vector.194" = type { %"class.WTF::VectorBuffer.195" }
%"class.WTF::VectorBuffer.195" = type { %"class.WTF::VectorBufferBase.196", [16 x i8] }
%"class.WTF::VectorBufferBase.196" = type { i8*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.221 }
%union.anon.221 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::CheckedContiguousIterator" = type { %"class.blink::Member.191"*, %"class.blink::Member.191"*, %"class.blink::Member.191"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.WTF::Vector.210" = type { %"class.WTF::VectorBuffer.211" }
%"class.WTF::VectorBuffer.211" = type { %"class.WTF::VectorBufferBase.212" }
%"class.WTF::VectorBufferBase.212" = type { %class.scoped_refptr.3*, i32, i32 }
%class.scoped_refptr.3 = type { %"class.blink::CalculationExpressionNode"* }
%"class.blink::CalculationValue" = type <{ %"class.WTF::RefCounted.216", [4 x i8], %"union.blink::CalculationValue::DataUnion", i8, [7 x i8] }>
%"class.WTF::RefCounted.216" = type { %"class.base::RefCounted.217" }
%"class.base::RefCounted.217" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::CalculationValue::DataUnion" = type { %class.scoped_refptr.3 }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%"class.blink::CSSParserTokenRange" = type { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* }
%"class.blink::CSSMathExpressionNodeParser" = type { i8 }
%"class.WTF::Vector.199" = type { %"class.WTF::VectorBuffer.200" }
%"class.WTF::VectorBuffer.200" = type { %"class.WTF::VectorBufferBase.201", [16 x i8] }
%"class.WTF::VectorBufferBase.201" = type { i16*, i32, i32 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZNK4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEppEv = comdat any

$_ZN5blink27CSSMathExpressionNodeParser13ParseMinOrMaxENS_19CSSParserTokenRangeENS_15CSSMathOperatorEi = comdat any

$_ZN5blink27CSSMathExpressionNodeParser10ParseClampENS_19CSSParserTokenRangeEi = comdat any

$_ZNK5blink31CSSMathExpressionNumericLiteral16IsNumericLiteralEv = comdat any

$_ZNK5blink21CSSMathExpressionNode17IsBinaryOperationEv = comdat any

$_ZNK5blink21CSSMathExpressionNode19IsVariadicOperationEv = comdat any

$_ZNK5blink21CSSMathExpressionNode16IsNumericLiteralEv = comdat any

$_ZNK5blink32CSSMathExpressionBinaryOperation17IsBinaryOperationEv = comdat any

$_ZNK5blink34CSSMathExpressionVariadicOperation19IsVariadicOperationEv = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZZN7logging15CheckOpValueStrIPKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS8_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS8_13basic_ostreamIcNS8_11char_traitsIcEEEEPKvE_8__invokeESN_SP_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEC2EPS6_S8_S8_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEE15CheckComparableERKS7_ = comdat any

$_ZN5blink27CSSMathExpressionNodeParser28ParseAdditiveValueExpressionERNS_19CSSParserTokenRangeEi = comdat any

$_ZN5blink27CSSMathExpressionNodeParser34ParseValueMultiplicativeExpressionERNS_19CSSParserTokenRangeEi = comdat any

$_ZN5blink27CSSMathExpressionNodeParser14ParseValueTermERNS_19CSSParserTokenRangeEi = comdat any

$_ZN5blink27CSSMathExpressionNodeParser10ParseValueERNS_19CSSParserTokenRangeE = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_21CSSMathExpressionNodeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_21CSSMathExpressionNodeEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberIKNS_21CSSMathExpressionNodeEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_21CSSMathExpressionNodeEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_21CSSMathExpressionNodeEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEEC2ESt16initializer_listIS5_E = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_31CSSMathExpressionNumericLiteralEE4CallIJRPKNS_22CSSNumericLiteralValueERbEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_21CSSMathExpressionNodeEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_21CSSMathExpressionNodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_21CSSMathExpressionNodeEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_31CSSMathExpressionNumericLiteralEE4CallIJPNS_22CSSNumericLiteralValueERbEEEPS1_DpOT_ = comdat any

$_ZN5blink10TraceTraitINS_22CSSNumericLiteralValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink25CalculationExpressionNodeEEEEmm = comdat any

$_ZN3WTF6VectorI13scoped_refptrIKN5blink25CalculationExpressionNodeEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_21CSSMathExpressionNodeEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_21CSSMathExpressionNodeEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_21CSSMathExpressionNodeEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_21CSSMathExpressionNodeEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink31CSSMathExpressionNumericLiteralE = hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.blink::CSSMathExpressionNumericLiteral"*)* @_ZNK5blink31CSSMathExpressionNumericLiteral16IsNumericLiteralEv to i8*), i8* bitcast (i1 (%"class.blink::CSSMathExpressionNode"*)* @_ZNK5blink21CSSMathExpressionNode17IsBinaryOperationEv to i8*), i8* bitcast (i1 (%"class.blink::CSSMathExpressionNode"*)* @_ZNK5blink21CSSMathExpressionNode19IsVariadicOperationEv to i8*), i8* bitcast (i1 (%"class.blink::CSSMathExpressionNumericLiteral"*)* @_ZNK5blink31CSSMathExpressionNumericLiteral6IsZeroEv to i8*), i8* bitcast (double (%"class.blink::CSSMathExpressionNumericLiteral"*)* @_ZNK5blink31CSSMathExpressionNumericLiteral11DoubleValueEv to i8*), i8* bitcast (double (%"class.blink::CSSMathExpressionNumericLiteral"*, %"class.blink::CSSToLengthConversionData"*)* @_ZNK5blink31CSSMathExpressionNumericLiteral15ComputeLengthPxERKNS_25CSSToLengthConversionDataE to i8*), i8* bitcast (i1 (%"class.blink::CSSMathExpressionNumericLiteral"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)* @_ZNK5blink31CSSMathExpressionNumericLiteral21AccumulateLengthArrayERNS_17CSSPrimitiveValue14CSSLengthArrayEd to i8*), i8* bitcast (void (%"class.blink::CSSMathExpressionNumericLiteral"*, %"class.std::__1::bitset"*)* @_ZNK5blink31CSSMathExpressionNumericLiteral25AccumulateLengthUnitTypesERNSt3__16bitsetILm10EEE to i8*), i8* bitcast (%"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNumericLiteral"*, %"class.blink::CSSToLengthConversionData"*)* @_ZNK5blink31CSSMathExpressionNumericLiteral23ToCalculationExpressionERKNS_25CSSToLengthConversionDataE to i8*), i8* bitcast ({ i64, float } (%"class.blink::CSSMathExpressionNumericLiteral"*, %"class.blink::CSSToLengthConversionData"*)* @_ZNK5blink31CSSMathExpressionNumericLiteral18ToPixelsAndPercentERKNS_25CSSToLengthConversionDataE to i8*), i8* bitcast ({ i8, double } (%"class.blink::CSSMathExpressionNumericLiteral"*)* @_ZNK5blink31CSSMathExpressionNumericLiteral27ComputeValueInCanonicalUnitEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNumericLiteral"*)* @_ZNK5blink31CSSMathExpressionNumericLiteral13CustomCSSTextEv to i8*), i8* bitcast (i1 (%"class.blink::CSSMathExpressionNumericLiteral"*, %"class.blink::CSSMathExpressionNode"*)* @_ZNK5blink31CSSMathExpressionNumericLiteraleqERKNS_21CSSMathExpressionNodeE to i8*), i8* bitcast (i1 (%"class.blink::CSSMathExpressionNumericLiteral"*)* @_ZNK5blink31CSSMathExpressionNumericLiteral28IsComputationallyIndependentEv to i8*), i8* bitcast (i32 (%"class.blink::CSSMathExpressionNumericLiteral"*)* @_ZNK5blink31CSSMathExpressionNumericLiteral16ResolvedUnitTypeEv to i8*), i8* bitcast (void (%"class.blink::CSSMathExpressionNumericLiteral"*, %"class.blink::Visitor"*)* @_ZNK5blink31CSSMathExpressionNumericLiteral5TraceEPNS_7VisitorE to i8*)] }, align 8
@_ZTVN5blink32CSSMathExpressionBinaryOperationE = hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.blink::CSSMathExpressionNode"*)* @_ZNK5blink21CSSMathExpressionNode16IsNumericLiteralEv to i8*), i8* bitcast (i1 (%"class.blink::CSSMathExpressionBinaryOperation"*)* @_ZNK5blink32CSSMathExpressionBinaryOperation17IsBinaryOperationEv to i8*), i8* bitcast (i1 (%"class.blink::CSSMathExpressionNode"*)* @_ZNK5blink21CSSMathExpressionNode19IsVariadicOperationEv to i8*), i8* bitcast (i1 (%"class.blink::CSSMathExpressionBinaryOperation"*)* @_ZNK5blink32CSSMathExpressionBinaryOperation6IsZeroEv to i8*), i8* bitcast (double (%"class.blink::CSSMathExpressionBinaryOperation"*)* @_ZNK5blink32CSSMathExpressionBinaryOperation11DoubleValueEv to i8*), i8* bitcast (double (%"class.blink::CSSMathExpressionBinaryOperation"*, %"class.blink::CSSToLengthConversionData"*)* @_ZNK5blink32CSSMathExpressionBinaryOperation15ComputeLengthPxERKNS_25CSSToLengthConversionDataE to i8*), i8* bitcast (i1 (%"class.blink::CSSMathExpressionBinaryOperation"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)* @_ZNK5blink32CSSMathExpressionBinaryOperation21AccumulateLengthArrayERNS_17CSSPrimitiveValue14CSSLengthArrayEd to i8*), i8* bitcast (void (%"class.blink::CSSMathExpressionBinaryOperation"*, %"class.std::__1::bitset"*)* @_ZNK5blink32CSSMathExpressionBinaryOperation25AccumulateLengthUnitTypesERNSt3__16bitsetILm10EEE to i8*), i8* bitcast (%"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionBinaryOperation"*, %"class.blink::CSSToLengthConversionData"*)* @_ZNK5blink32CSSMathExpressionBinaryOperation23ToCalculationExpressionERKNS_25CSSToLengthConversionDataE to i8*), i8* bitcast ({ i64, float } (%"class.blink::CSSMathExpressionBinaryOperation"*, %"class.blink::CSSToLengthConversionData"*)* @_ZNK5blink32CSSMathExpressionBinaryOperation18ToPixelsAndPercentERKNS_25CSSToLengthConversionDataE to i8*), i8* bitcast ({ i8, double } (%"class.blink::CSSMathExpressionBinaryOperation"*)* @_ZNK5blink32CSSMathExpressionBinaryOperation27ComputeValueInCanonicalUnitEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionBinaryOperation"*)* @_ZNK5blink32CSSMathExpressionBinaryOperation13CustomCSSTextEv to i8*), i8* bitcast (i1 (%"class.blink::CSSMathExpressionBinaryOperation"*, %"class.blink::CSSMathExpressionNode"*)* @_ZNK5blink32CSSMathExpressionBinaryOperationeqERKNS_21CSSMathExpressionNodeE to i8*), i8* bitcast (i1 (%"class.blink::CSSMathExpressionBinaryOperation"*)* @_ZNK5blink32CSSMathExpressionBinaryOperation28IsComputationallyIndependentEv to i8*), i8* bitcast (i32 (%"class.blink::CSSMathExpressionBinaryOperation"*)* @_ZNK5blink32CSSMathExpressionBinaryOperation16ResolvedUnitTypeEv to i8*), i8* bitcast (void (%"class.blink::CSSMathExpressionBinaryOperation"*, %"class.blink::Visitor"*)* @_ZNK5blink32CSSMathExpressionBinaryOperation5TraceEPNS_7VisitorE to i8*)] }, align 8
@_ZN5blinkL18kAddSubtractResultE = internal unnamed_addr constant [7 x [7 x i32]] [[7 x i32] [i32 0, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7], [7 x i32] [i32 7, i32 1, i32 3, i32 3, i32 7, i32 7, i32 7], [7 x i32] [i32 7, i32 3, i32 2, i32 3, i32 7, i32 7, i32 7], [7 x i32] [i32 7, i32 3, i32 3, i32 3, i32 7, i32 7, i32 7], [7 x i32] [i32 7, i32 7, i32 7, i32 7, i32 4, i32 7, i32 7], [7 x i32] [i32 7, i32 7, i32 7, i32 7, i32 7, i32 5, i32 7], [7 x i32] [i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 6]], align 16
@_ZTVN5blink34CSSMathExpressionVariadicOperationE = hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.blink::CSSMathExpressionNode"*)* @_ZNK5blink21CSSMathExpressionNode16IsNumericLiteralEv to i8*), i8* bitcast (i1 (%"class.blink::CSSMathExpressionNode"*)* @_ZNK5blink21CSSMathExpressionNode17IsBinaryOperationEv to i8*), i8* bitcast (i1 (%"class.blink::CSSMathExpressionVariadicOperation"*)* @_ZNK5blink34CSSMathExpressionVariadicOperation19IsVariadicOperationEv to i8*), i8* bitcast (i1 (%"class.blink::CSSMathExpressionVariadicOperation"*)* @_ZNK5blink34CSSMathExpressionVariadicOperation6IsZeroEv to i8*), i8* bitcast (double (%"class.blink::CSSMathExpressionVariadicOperation"*)* @_ZNK5blink34CSSMathExpressionVariadicOperation11DoubleValueEv to i8*), i8* bitcast (double (%"class.blink::CSSMathExpressionVariadicOperation"*, %"class.blink::CSSToLengthConversionData"*)* @_ZNK5blink34CSSMathExpressionVariadicOperation15ComputeLengthPxERKNS_25CSSToLengthConversionDataE to i8*), i8* bitcast (i1 (%"class.blink::CSSMathExpressionVariadicOperation"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)* @_ZNK5blink34CSSMathExpressionVariadicOperation21AccumulateLengthArrayERNS_17CSSPrimitiveValue14CSSLengthArrayEd to i8*), i8* bitcast (void (%"class.blink::CSSMathExpressionVariadicOperation"*, %"class.std::__1::bitset"*)* @_ZNK5blink34CSSMathExpressionVariadicOperation25AccumulateLengthUnitTypesERNSt3__16bitsetILm10EEE to i8*), i8* bitcast (%"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionVariadicOperation"*, %"class.blink::CSSToLengthConversionData"*)* @_ZNK5blink34CSSMathExpressionVariadicOperation23ToCalculationExpressionERKNS_25CSSToLengthConversionDataE to i8*), i8* bitcast ({ i64, float } (%"class.blink::CSSMathExpressionVariadicOperation"*, %"class.blink::CSSToLengthConversionData"*)* @_ZNK5blink34CSSMathExpressionVariadicOperation18ToPixelsAndPercentERKNS_25CSSToLengthConversionDataE to i8*), i8* bitcast ({ i8, double } (%"class.blink::CSSMathExpressionVariadicOperation"*)* @_ZNK5blink34CSSMathExpressionVariadicOperation27ComputeValueInCanonicalUnitEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionVariadicOperation"*)* @_ZNK5blink34CSSMathExpressionVariadicOperation13CustomCSSTextEv to i8*), i8* bitcast (i1 (%"class.blink::CSSMathExpressionVariadicOperation"*, %"class.blink::CSSMathExpressionNode"*)* @_ZNK5blink34CSSMathExpressionVariadicOperationeqERKNS_21CSSMathExpressionNodeE to i8*), i8* bitcast (i1 (%"class.blink::CSSMathExpressionVariadicOperation"*)* @_ZNK5blink34CSSMathExpressionVariadicOperation28IsComputationallyIndependentEv to i8*), i8* bitcast (i32 (%"class.blink::CSSMathExpressionVariadicOperation"*)* @_ZNK5blink34CSSMathExpressionVariadicOperation16ResolvedUnitTypeEv to i8*), i8* bitcast (void (%"class.blink::CSSMathExpressionVariadicOperation"*, %"class.blink::Visitor"*)* @_ZNK5blink34CSSMathExpressionVariadicOperation5TraceEPNS_7VisitorE to i8*)] }, align 8
@.str = private unnamed_addr constant [7 x i8] c"clamp(\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c")\00", align 1
@__const._ZNK5blink21CSSMathExpressionNode11ToCalcValueERKNS_25CSSToLengthConversionDataENS_10ValueRangeEb.evaluated_value = private unnamed_addr constant { { { { i8, [3 x i8], %union.anon } } } } { { { { i8, [3 x i8], %union.anon } } } { { { i8, [3 x i8], %union.anon } } { { i8, [3 x i8], %union.anon } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon { %"struct.blink::PixelsAndPercent" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } } } } } }, align 4
@_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E = external local_unnamed_addr global i8, align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.7 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.8 = private unnamed_addr constant [29 x i8] c"../../base/containers/span.h\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.11 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.14 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.15 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@_ZN5blink18g_static_eof_tokenE = external local_unnamed_addr constant %"class.blink::CSSParserToken"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.16 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.18 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.19 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.20 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_21CSSMathExpressionNodeEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_21CSSMathExpressionNodeEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_21CSSMathExpressionNodeEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_21CSSMathExpressionNodeEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.21 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberIKNS1_21CSSMathExpressionNodeEEENS_12VectorTraitsIS6_EEEEEEPKcv = private unnamed_addr constant [195 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<const blink::CSSMathExpressionNode>, WTF::VectorTraits<blink::Member<const blink::CSSMathExpressionNode> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21CSSMathExpressionNodeEEEPKcv = private unnamed_addr constant [76 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSMathExpressionNode]\00", align 1
@_ZZN5blink11GCInfoTraitINS_21CSSMathExpressionNodeEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_21CSSMathExpressionNodeEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_21CSSMathExpressionNodeEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_21CSSMathExpressionNodeEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink29CalculationExpressionLeafNodeE = external unnamed_addr constant { [11 x i8*] }, align 8
@.str.22 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink25CalculationExpressionNodeEEEEPKcv = private unnamed_addr constant [101 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<const blink::CalculationExpressionNode>]\00", align 1
@switch.table._ZN5blink25MakeGarbageCollectedTraitINS_31CSSMathExpressionNumericLiteralEE4CallIJPNS_22CSSNumericLiteralValueERbEEEPS1_DpOT_ = private unnamed_addr constant [31 x i32] [i32 0, i32 2, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 4, i32 4, i32 4, i32 4, i32 5, i32 5, i32 6, i32 6, i32 7, i32 7, i32 7, i32 7, i32 0], align 4

@_ZN5blink31CSSMathExpressionNumericLiteralC1EPKNS_22CSSNumericLiteralValueEb = hidden unnamed_addr alias void (%"class.blink::CSSMathExpressionNumericLiteral"*, %"class.blink::CSSNumericLiteralValue"*, i1), void (%"class.blink::CSSMathExpressionNumericLiteral"*, %"class.blink::CSSNumericLiteralValue"*, i1)* @_ZN5blink31CSSMathExpressionNumericLiteralC2EPKNS_22CSSNumericLiteralValueEb
@_ZN5blink32CSSMathExpressionBinaryOperationC1EPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorENS_19CalculationCategoryE = hidden unnamed_addr alias void (%"class.blink::CSSMathExpressionBinaryOperation"*, %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*, i32, i32), void (%"class.blink::CSSMathExpressionBinaryOperation"*, %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*, i32, i32)* @_ZN5blink32CSSMathExpressionBinaryOperationC2EPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorENS_19CalculationCategoryE
@_ZN5blink34CSSMathExpressionVariadicOperationC1ENS_19CalculationCategoryEbONS_10HeapVectorINS_6MemberIKNS_21CSSMathExpressionNodeEEELj0EEENS_15CSSMathOperatorE = hidden unnamed_addr alias void (%"class.blink::CSSMathExpressionVariadicOperation"*, i32, i1, %"class.blink::HeapVector"*, i32), void (%"class.blink::CSSMathExpressionVariadicOperation"*, i32, i1, %"class.blink::HeapVector"*, i32)* @_ZN5blink34CSSMathExpressionVariadicOperationC2ENS_19CalculationCategoryEbONS_10HeapVectorINS_6MemberIKNS_21CSSMathExpressionNodeEEELj0EEENS_15CSSMathOperatorE

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink31CSSMathExpressionNumericLiteral6CreateEPKNS_22CSSNumericLiteralValueEb(%"class.blink::CSSNumericLiteralValue"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSNumericLiteralValue"*, align 8
  %4 = alloca i8, align 1
  store %"class.blink::CSSNumericLiteralValue"* %0, %"class.blink::CSSNumericLiteralValue"** %3, align 8
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  %6 = call %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink25MakeGarbageCollectedTraitINS_31CSSMathExpressionNumericLiteralEE4CallIJRPKNS_22CSSNumericLiteralValueERbEEEPS1_DpOT_(%"class.blink::CSSNumericLiteralValue"** nonnull dereferenceable(8) %3, i8* nonnull dereferenceable(1) %4) #13
  ret %"class.blink::CSSMathExpressionNumericLiteral"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink31CSSMathExpressionNumericLiteral6CreateEdNS_17CSSPrimitiveValue8UnitTypeEb(double, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = alloca %"class.blink::CSSNumericLiteralValue"*, align 8
  %6 = zext i1 %2 to i8
  store i8 %6, i8* %4, align 1
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %3
  %10 = fcmp uno double %0, 0.000000e+00
  %11 = tail call double @llvm.fabs.f64(double %0) #14
  %12 = fcmp oeq double %11, 0x7FF0000000000000
  %13 = or i1 %10, %12
  br i1 %13, label %18, label %14

14:                                               ; preds = %3, %9
  %15 = bitcast %"class.blink::CSSNumericLiteralValue"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #13
  %16 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %0, i32 %1) #13
  store %"class.blink::CSSNumericLiteralValue"* %16, %"class.blink::CSSNumericLiteralValue"** %5, align 8
  %17 = call %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink25MakeGarbageCollectedTraitINS_31CSSMathExpressionNumericLiteralEE4CallIJPNS_22CSSNumericLiteralValueERbEEEPS1_DpOT_(%"class.blink::CSSNumericLiteralValue"** nonnull dereferenceable(8) %5, i8* nonnull dereferenceable(1) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #13
  br label %18

18:                                               ; preds = %9, %14
  %19 = phi %"class.blink::CSSMathExpressionNumericLiteral"* [ %17, %14 ], [ null, %9 ]
  ret %"class.blink::CSSMathExpressionNumericLiteral"* %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink31CSSMathExpressionNumericLiteralC2EPKNS_22CSSNumericLiteralValueEb(%"class.blink::CSSMathExpressionNumericLiteral"* nocapture, %"class.blink::CSSNumericLiteralValue"*, i1 zeroext) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8
  %6 = and i8 %5, 127
  %7 = zext i8 %6 to i32
  %8 = add nsw i32 %7, -1
  %9 = icmp ult i32 %8, 31
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = sext i32 %8 to i64
  %12 = getelementptr inbounds [31 x i32], [31 x i32]* @switch.table._ZN5blink25MakeGarbageCollectedTraitINS_31CSSMathExpressionNumericLiteralEE4CallIJPNS_22CSSNumericLiteralValueERbEEEPS1_DpOT_, i64 0, i64 %11
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %3, %10
  %15 = phi i32 [ %13, %10 ], [ 7, %3 ]
  %16 = zext i1 %2 to i8
  %17 = getelementptr inbounds %"class.blink::CSSMathExpressionNumericLiteral", %"class.blink::CSSMathExpressionNumericLiteral"* %0, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::CSSMathExpressionNumericLiteral", %"class.blink::CSSMathExpressionNumericLiteral"* %0, i64 0, i32 0, i32 1
  store i32 %15, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::CSSMathExpressionNumericLiteral", %"class.blink::CSSMathExpressionNumericLiteral"* %0, i64 0, i32 0, i32 2
  store i8 %16, i8* %19, align 4
  %20 = getelementptr inbounds %"class.blink::CSSMathExpressionNumericLiteral", %"class.blink::CSSMathExpressionNumericLiteral"* %0, i64 0, i32 0, i32 3
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %"class.blink::CSSMathExpressionNumericLiteral", %"class.blink::CSSMathExpressionNumericLiteral"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %21, align 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink31CSSMathExpressionNumericLiteralE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %22 = getelementptr inbounds %"class.blink::CSSMathExpressionNumericLiteral", %"class.blink::CSSMathExpressionNumericLiteral"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::CSSNumericLiteralValue"* %1, %"class.blink::CSSNumericLiteralValue"** %22, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink31CSSMathExpressionNumericLiteral6IsZeroEv(%"class.blink::CSSMathExpressionNumericLiteral"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSMathExpressionNumericLiteral", %"class.blink::CSSMathExpressionNumericLiteral"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %3, i64 0, i32 0
  %5 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %4) #13
  %6 = fcmp oeq double %5, 0.000000e+00
  ret i1 %6
}

declare double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink31CSSMathExpressionNumericLiteral13CustomCSSTextEv(%"class.blink::CSSMathExpressionNumericLiteral"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSMathExpressionNumericLiteral", %"class.blink::CSSMathExpressionNumericLiteral"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %3, i64 0, i32 0, i32 0
  %5 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %4) #13
  ret %"class.WTF::StringImpl"* %5
}

declare %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, float } @_ZNK5blink31CSSMathExpressionNumericLiteral18ToPixelsAndPercentERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSMathExpressionNumericLiteral"* nocapture readonly, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSMathExpressionNumericLiteral", %"class.blink::CSSMathExpressionNumericLiteral"* %0, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %50 [
    i32 1, label %5
    i32 2, label %18
    i32 0, label %34
  ]

5:                                                ; preds = %2
  %6 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"class.blink::CSSMathExpressionNumericLiteral", %"class.blink::CSSMathExpressionNumericLiteral"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %8, align 8
  br i1 %7, label %14, label %10

10:                                               ; preds = %5
  %11 = tail call double @_ZNK5blink22CSSNumericLiteralValue15ComputeLengthPxERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSNumericLiteralValue"* %9, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #13
  %12 = fptrunc double %11 to float
  %13 = bitcast float %12 to i32
  br label %50

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %9, i64 0, i32 0
  %16 = tail call float @_ZNK5blink17CSSPrimitiveValue13ComputeLengthIfEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::CSSPrimitiveValue"* %15, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #13
  %17 = bitcast float %16 to i32
  br label %50

18:                                               ; preds = %2
  %19 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  %21 = getelementptr inbounds %"class.blink::CSSMathExpressionNumericLiteral", %"class.blink::CSSMathExpressionNumericLiteral"* %0, i64 0, i32 1, i32 0, i32 0
  %22 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %22, i64 0, i32 0
  br i1 %20, label %27, label %24

24:                                               ; preds = %18
  %25 = tail call double @_ZNK5blink17CSSPrimitiveValue29GetDoubleValueWithoutClampingEv(%"class.blink::CSSPrimitiveValue"* %23) #13
  %26 = fptrunc double %25 to float
  br label %50

27:                                               ; preds = %18
  %28 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %23) #13
  %29 = fcmp ult double %28, 0x47EFFFFFE0000000
  br i1 %29, label %30, label %50

30:                                               ; preds = %27
  %31 = fcmp ole double %28, 0xC7EFFFFFE0000000
  %32 = select i1 %31, double 0xC7EFFFFFE0000000, double %28
  %33 = fptrunc double %32 to float
  br label %50

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"class.blink::CSSMathExpressionNumericLiteral", %"class.blink::CSSMathExpressionNumericLiteral"* %0, i64 0, i32 1, i32 0, i32 0
  %36 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %36, i64 0, i32 0
  %38 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %37) #13
  %39 = fcmp ult double %38, 0x47EFFFFFE0000000
  br i1 %39, label %40, label %44

40:                                               ; preds = %34
  %41 = fcmp ole double %38, 0xC7EFFFFFE0000000
  %42 = select i1 %41, double 0xC7EFFFFFE0000000, double %38
  %43 = fptrunc double %42 to float
  br label %44

44:                                               ; preds = %34, %40
  %45 = phi float [ %43, %40 ], [ 0x47EFFFFFE0000000, %34 ]
  %46 = getelementptr inbounds %"class.blink::CSSToLengthConversionData", %"class.blink::CSSToLengthConversionData"* %1, i64 0, i32 3
  %47 = load float, float* %46, align 8
  %48 = fmul float %45, %47
  %49 = bitcast float %48 to i32
  br label %50

50:                                               ; preds = %30, %27, %2, %24, %10, %14, %44
  %51 = phi float [ 0.000000e+00, %2 ], [ 0.000000e+00, %44 ], [ %26, %24 ], [ 0.000000e+00, %10 ], [ 0.000000e+00, %14 ], [ %33, %30 ], [ 0x47EFFFFFE0000000, %27 ]
  %52 = phi i32 [ 0, %2 ], [ %49, %44 ], [ 0, %24 ], [ %13, %10 ], [ %17, %14 ], [ 0, %30 ], [ 0, %27 ]
  %53 = zext i32 %52 to i64
  %54 = shl nuw i64 %53, 32
  %55 = or i64 %54, 1
  %56 = insertvalue { i64, float } undef, i64 %55, 0
  %57 = insertvalue { i64, float } %56, float %51, 1
  ret { i64, float } %57
}

declare double @_ZNK5blink22CSSNumericLiteralValue15ComputeLengthPxERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) local_unnamed_addr #2

declare float @_ZNK5blink17CSSPrimitiveValue13ComputeLengthIfEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) local_unnamed_addr #2

declare double @_ZNK5blink17CSSPrimitiveValue29GetDoubleValueWithoutClampingEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CalculationExpressionNode"* @_ZNK5blink31CSSMathExpressionNumericLiteral23ToCalculationExpressionERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSMathExpressionNumericLiteral"* nocapture readonly, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) unnamed_addr #4 align 2 {
  %3 = tail call { i64, float } @_ZNK5blink31CSSMathExpressionNumericLiteral18ToPixelsAndPercentERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSMathExpressionNumericLiteral"* %0, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1)
  %4 = extractvalue { i64, float } %3, 0
  %5 = trunc i64 %4 to i8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %8, !prof !3

7:                                                ; preds = %2
  tail call void @llvm.trap() #13
  unreachable

8:                                                ; preds = %2
  %9 = extractvalue { i64, float } %3, 1
  %10 = lshr i64 %4, 32
  %11 = trunc i64 %10 to i32
  %12 = tail call noalias i8* @malloc(i64 24) #13
  %13 = getelementptr inbounds i8, i8* %12, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 1, i32* %14, align 4
  %15 = bitcast i8* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink29CalculationExpressionLeafNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds i8, i8* %12, i64 12
  %17 = bitcast i8* %16 to i32*
  store i32 %11, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %12, i64 16
  %19 = bitcast i8* %18 to float*
  store float %9, float* %19, align 4
  %20 = bitcast i8* %12 to %"class.blink::CalculationExpressionNode"*
  ret %"class.blink::CalculationExpressionNode"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink31CSSMathExpressionNumericLiteral11DoubleValueEv(%"class.blink::CSSMathExpressionNumericLiteral"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSMathExpressionNumericLiteral", %"class.blink::CSSMathExpressionNumericLiteral"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8
  %6 = and i8 %5, 127
  %7 = zext i8 %6 to i32
  %8 = add nsw i32 %7, -1
  %9 = icmp ult i32 %8, 31
  br i1 %9, label %10, label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %3, i64 0, i32 0
  %12 = tail call double @_ZNK5blink17CSSPrimitiveValue29GetDoubleValueWithoutClampingEv(%"class.blink::CSSPrimitiveValue"* %11) #13
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi double [ %12, %10 ], [ 0.000000e+00, %1 ]
  ret double %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink31CSSMathExpressionNumericLiteral16ResolvedUnitTypeEv(%"class.blink::CSSMathExpressionNumericLiteral"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSMathExpressionNumericLiteral", %"class.blink::CSSMathExpressionNumericLiteral"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8
  %6 = and i8 %5, 127
  %7 = zext i8 %6 to i32
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8, double } @_ZNK5blink31CSSMathExpressionNumericLiteral27ComputeValueInCanonicalUnitEv(%"class.blink::CSSMathExpressionNumericLiteral"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSMathExpressionNumericLiteral", %"class.blink::CSSMathExpressionNumericLiteral"* %0, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %30 [
    i32 0, label %4
    i32 2, label %4
    i32 1, label %9
    i32 4, label %19
    i32 5, label %19
    i32 6, label %19
  ]

4:                                                ; preds = %1, %1
  %5 = getelementptr inbounds %"class.blink::CSSMathExpressionNumericLiteral", %"class.blink::CSSMathExpressionNumericLiteral"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %6, i64 0, i32 1
  %8 = load double, double* %7, align 8
  br label %30

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::CSSMathExpressionNumericLiteral", %"class.blink::CSSMathExpressionNumericLiteral"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8
  %14 = and i8 %13, 127
  %15 = zext i8 %14 to i32
  switch i32 %15, label %16 [
    i32 17, label %30
    i32 16, label %30
    i32 4, label %30
    i32 3, label %30
    i32 2, label %30
  ]

16:                                               ; preds = %9
  %17 = and i32 %15, 124
  %18 = icmp eq i32 %17, 12
  br i1 %18, label %30, label %19

19:                                               ; preds = %16, %1, %1, %1
  %20 = getelementptr inbounds %"class.blink::CSSMathExpressionNumericLiteral", %"class.blink::CSSMathExpressionNumericLiteral"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %21, i64 0, i32 1
  %23 = load double, double* %22, align 8
  %24 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %21, i64 0, i32 0, i32 0, i32 0
  %25 = load i8, i8* %24, align 8
  %26 = and i8 %25, 127
  %27 = zext i8 %26 to i32
  %28 = tail call double @_ZN5blink17CSSPrimitiveValue37ConversionToCanonicalUnitsScaleFactorENS0_8UnitTypeE(i32 %27) #13
  %29 = fmul double %23, %28
  br label %30

30:                                               ; preds = %9, %9, %9, %9, %9, %1, %16, %19, %4
  %31 = phi i8 [ 1, %19 ], [ 1, %4 ], [ 0, %16 ], [ 0, %1 ], [ 0, %9 ], [ 0, %9 ], [ 0, %9 ], [ 0, %9 ], [ 0, %9 ]
  %32 = phi double [ %29, %19 ], [ %8, %4 ], [ undef, %16 ], [ undef, %1 ], [ undef, %9 ], [ undef, %9 ], [ undef, %9 ], [ undef, %9 ], [ undef, %9 ]
  %33 = insertvalue { i8, double } undef, i8 %31, 0
  %34 = insertvalue { i8, double } %33, double %32, 1
  ret { i8, double } %34
}

declare double @_ZN5blink17CSSPrimitiveValue37ConversionToCanonicalUnitsScaleFactorENS0_8UnitTypeE(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink31CSSMathExpressionNumericLiteral15ComputeLengthPxERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSMathExpressionNumericLiteral"* nocapture readonly, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSMathExpressionNumericLiteral", %"class.blink::CSSMathExpressionNumericLiteral"* %0, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %16

6:                                                ; preds = %2
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %"class.blink::CSSMathExpressionNumericLiteral", %"class.blink::CSSMathExpressionNumericLiteral"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %9, align 8
  br i1 %8, label %13, label %11

11:                                               ; preds = %6
  %12 = tail call double @_ZNK5blink22CSSNumericLiteralValue15ComputeLengthPxERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSNumericLiteralValue"* %10, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #13
  br label %16

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %10, i64 0, i32 0
  %15 = tail call double @_ZNK5blink17CSSPrimitiveValue13ComputeLengthIdEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::CSSPrimitiveValue"* %14, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #13
  br label %16

16:                                               ; preds = %2, %13, %11
  %17 = phi double [ %12, %11 ], [ %15, %13 ], [ 0.000000e+00, %2 ]
  ret double %17
}

declare double @_ZNK5blink17CSSPrimitiveValue13ComputeLengthIdEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink31CSSMathExpressionNumericLiteral21AccumulateLengthArrayERNS_17CSSPrimitiveValue14CSSLengthArrayEd(%"class.blink::CSSMathExpressionNumericLiteral"* nocapture readonly, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* dereferenceable(104), double) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSMathExpressionNumericLiteral", %"class.blink::CSSMathExpressionNumericLiteral"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %4, align 8
  %6 = tail call zeroext i1 @_ZNK5blink22CSSNumericLiteralValue21AccumulateLengthArrayERNS_17CSSPrimitiveValue14CSSLengthArrayEd(%"class.blink::CSSNumericLiteralValue"* %5, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* dereferenceable(104) %1, double %2) #13
  ret i1 %6
}

declare zeroext i1 @_ZNK5blink22CSSNumericLiteralValue21AccumulateLengthArrayERNS_17CSSPrimitiveValue14CSSLengthArrayEd(%"class.blink::CSSNumericLiteralValue"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* dereferenceable(104), double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink31CSSMathExpressionNumericLiteral25AccumulateLengthUnitTypesERNSt3__16bitsetILm10EEE(%"class.blink::CSSMathExpressionNumericLiteral"* nocapture readonly, %"class.std::__1::bitset"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSMathExpressionNumericLiteral", %"class.blink::CSSMathExpressionNumericLiteral"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %3, align 8
  tail call void @_ZNK5blink22CSSNumericLiteralValue25AccumulateLengthUnitTypesERNSt3__16bitsetILm10EEE(%"class.blink::CSSNumericLiteralValue"* %4, %"class.std::__1::bitset"* dereferenceable(8) %1) #13
  ret void
}

declare void @_ZNK5blink22CSSNumericLiteralValue25AccumulateLengthUnitTypesERNSt3__16bitsetILm10EEE(%"class.blink::CSSNumericLiteralValue"*, %"class.std::__1::bitset"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink31CSSMathExpressionNumericLiteraleqERKNS_21CSSMathExpressionNodeE(%"class.blink::CSSMathExpressionNumericLiteral"* nocapture readonly, %"class.blink::CSSMathExpressionNode"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::CSSMathExpressionNode"* %1 to i1 (%"class.blink::CSSMathExpressionNode"*)***
  %4 = load i1 (%"class.blink::CSSMathExpressionNode"*)**, i1 (%"class.blink::CSSMathExpressionNode"*)*** %3, align 8
  %5 = load i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::CSSMathExpressionNode"* %1) #13
  br i1 %6, label %7, label %22

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %1, i64 1
  %9 = getelementptr inbounds %"class.blink::CSSMathExpressionNumericLiteral", %"class.blink::CSSMathExpressionNumericLiteral"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %9, align 8
  %11 = bitcast %"class.blink::CSSMathExpressionNode"* %8 to %"class.blink::CSSNumericLiteralValue"**
  %12 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %11, align 8
  %13 = icmp eq %"class.blink::CSSNumericLiteralValue"* %10, %12
  br i1 %13, label %22, label %14

14:                                               ; preds = %7
  %15 = icmp ne %"class.blink::CSSNumericLiteralValue"* %10, null
  %16 = icmp ne %"class.blink::CSSNumericLiteralValue"* %12, null
  %17 = and i1 %15, %16
  br i1 %17, label %18, label %22

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %10, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %12, i64 0, i32 0, i32 0
  %21 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* %19, %"class.blink::CSSValue"* dereferenceable(3) %20) #13
  br label %22

22:                                               ; preds = %18, %14, %7, %2
  %23 = phi i1 [ false, %2 ], [ %21, %18 ], [ true, %7 ], [ false, %14 ]
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink31CSSMathExpressionNumericLiteral28IsComputationallyIndependentEv(%"class.blink::CSSMathExpressionNumericLiteral"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSMathExpressionNumericLiteral", %"class.blink::CSSMathExpressionNumericLiteral"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK5blink22CSSNumericLiteralValue28IsComputationallyIndependentEv(%"class.blink::CSSNumericLiteralValue"* %3) #13
  ret i1 %4
}

declare zeroext i1 @_ZNK5blink22CSSNumericLiteralValue28IsComputationallyIndependentEv(%"class.blink::CSSNumericLiteralValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink31CSSMathExpressionNumericLiteral5TraceEPNS_7VisitorE(%"class.blink::CSSMathExpressionNumericLiteral"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSMathExpressionNumericLiteral", %"class.blink::CSSMathExpressionNumericLiteral"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to %"class.blink::CSSNumericLiteralValue"*
  %9 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_22CSSNumericLiteralValueEE5TraceEPNS_7VisitorEPKv) #13
  br label %14

14:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSMathExpressionNode"* @_ZN5blink32CSSMathExpressionBinaryOperation6CreateEPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorE(%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, 7
  %9 = icmp eq i32 %7, 7
  %10 = or i1 %8, %9
  br i1 %10, label %77, label %11

11:                                               ; preds = %3
  switch i32 %2, label %77 [
    i32 0, label %12
    i32 1, label %12
    i32 2, label %17
    i32 3, label %24
  ]

12:                                               ; preds = %11, %11
  %13 = zext i32 %5 to i64
  %14 = zext i32 %7 to i64
  %15 = getelementptr inbounds [7 x [7 x i32]], [7 x [7 x i32]]* @_ZN5blinkL18kAddSubtractResultE, i64 0, i64 %13, i64 %14
  %16 = load i32, i32* %15, align 4
  br label %35

17:                                               ; preds = %11
  %18 = icmp ne i32 %5, 0
  %19 = icmp ne i32 %7, 0
  %20 = and i1 %18, %19
  br i1 %20, label %77, label %21

21:                                               ; preds = %17
  %22 = icmp eq i32 %5, 0
  %23 = select i1 %22, i32 %7, i32 %5
  br label %35

24:                                               ; preds = %11
  %25 = icmp eq i32 %7, 0
  br i1 %25, label %26, label %77

26:                                               ; preds = %24
  %27 = bitcast %"class.blink::CSSMathExpressionNode"* %1 to i1 (%"class.blink::CSSMathExpressionNode"*)***
  %28 = load i1 (%"class.blink::CSSMathExpressionNode"*)**, i1 (%"class.blink::CSSMathExpressionNode"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %28, i64 3
  %30 = load i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::CSSMathExpressionNode"* %1) #13
  br i1 %31, label %77, label %32

32:                                               ; preds = %26
  %33 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21CSSMathExpressionNodeEEEPhm(i64 40) #13
  %34 = bitcast i8* %33 to %"class.blink::CSSMathExpressionBinaryOperation"*
  br label %47

35:                                               ; preds = %12, %21
  %36 = phi i32 [ %23, %21 ], [ %16, %12 ]
  %37 = icmp eq i32 %36, 7
  br i1 %37, label %77, label %38

38:                                               ; preds = %35
  %39 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21CSSMathExpressionNodeEEEPhm(i64 40) #13
  %40 = bitcast i8* %39 to %"class.blink::CSSMathExpressionBinaryOperation"*
  %41 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %0, i64 0, i32 2
  %42 = load i8, i8* %41, align 4, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %1, i64 0, i32 2
  %46 = load i8, i8* %45, align 4, !range !2
  br label %47

47:                                               ; preds = %32, %44, %38
  %48 = phi %"class.blink::CSSMathExpressionBinaryOperation"* [ %40, %38 ], [ %40, %44 ], [ %34, %32 ]
  %49 = phi i8* [ %39, %38 ], [ %39, %44 ], [ %33, %32 ]
  %50 = phi i32 [ %36, %38 ], [ %36, %44 ], [ %5, %32 ]
  %51 = phi i8 [ 0, %38 ], [ %46, %44 ], [ 0, %32 ]
  %52 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %0, i64 0, i32 4
  %53 = load i8, i8* %52, align 2, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %47
  %56 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %1, i64 0, i32 4
  %57 = load i8, i8* %56, align 2, !range !2
  br label %58

58:                                               ; preds = %47, %55
  %59 = phi i8 [ 1, %47 ], [ %57, %55 ]
  %60 = bitcast i8* %49 to i32 (...)***
  %61 = getelementptr inbounds i8, i8* %49, i64 8
  %62 = bitcast i8* %61 to i32*
  store i32 %50, i32* %62, align 8
  %63 = getelementptr inbounds i8, i8* %49, i64 12
  store i8 %51, i8* %63, align 4
  %64 = getelementptr inbounds i8, i8* %49, i64 13
  store i8 0, i8* %64, align 1
  %65 = getelementptr inbounds i8, i8* %49, i64 14
  store i8 %59, i8* %65, align 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink32CSSMathExpressionBinaryOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %66 = getelementptr inbounds i8, i8* %49, i64 16
  %67 = bitcast i8* %66 to %"class.blink::CSSMathExpressionNode"**
  store %"class.blink::CSSMathExpressionNode"* %0, %"class.blink::CSSMathExpressionNode"** %67, align 8
  %68 = getelementptr inbounds i8, i8* %49, i64 24
  %69 = bitcast i8* %68 to %"class.blink::CSSMathExpressionNode"**
  store %"class.blink::CSSMathExpressionNode"* %1, %"class.blink::CSSMathExpressionNode"** %69, align 8
  %70 = getelementptr inbounds i8, i8* %49, i64 32
  %71 = bitcast i8* %70 to i32*
  store i32 %2, i32* %71, align 8
  %72 = getelementptr inbounds i8, i8* %49, i64 -4
  %73 = bitcast i8* %72 to i16*
  %74 = load atomic i16, i16* %73 monotonic, align 2
  %75 = or i16 %74, 1
  store atomic i16 %75, i16* %73 release, align 2
  %76 = bitcast %"class.blink::CSSMathExpressionBinaryOperation"* %48 to %"class.blink::CSSMathExpressionNode"*
  br label %77

77:                                               ; preds = %26, %11, %24, %17, %3, %35, %58
  %78 = phi %"class.blink::CSSMathExpressionNode"* [ %76, %58 ], [ null, %35 ], [ null, %3 ], [ null, %17 ], [ null, %24 ], [ null, %11 ], [ null, %26 ]
  ret %"class.blink::CSSMathExpressionNode"* %78
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSMathExpressionNode"* @_ZN5blink32CSSMathExpressionBinaryOperation16CreateSimplifiedEPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorE(%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = alloca %"class.blink::CSSNumericLiteralValue"*, align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.blink::CSSNumericLiteralValue"*, align 8
  %8 = alloca i8, align 1
  %9 = alloca %"class.blink::CSSNumericLiteralValue"*, align 8
  %10 = alloca i8, align 1
  %11 = alloca %"class.blink::CSSNumericLiteralValue"*, align 8
  %12 = bitcast %"class.blink::CSSMathExpressionNode"* %0 to i1 (%"class.blink::CSSMathExpressionNode"*)***
  %13 = load i1 (%"class.blink::CSSMathExpressionNode"*)**, i1 (%"class.blink::CSSMathExpressionNode"*)*** %12, align 8
  %14 = load i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.blink::CSSMathExpressionNode"* %0) #13
  br i1 %15, label %21, label %16

16:                                               ; preds = %3
  %17 = load i1 (%"class.blink::CSSMathExpressionNode"*)**, i1 (%"class.blink::CSSMathExpressionNode"*)*** %12, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %17, i64 1
  %19 = load i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.blink::CSSMathExpressionNode"* %0) #13
  br i1 %20, label %21, label %31

21:                                               ; preds = %16, %3
  %22 = bitcast %"class.blink::CSSMathExpressionNode"* %1 to i1 (%"class.blink::CSSMathExpressionNode"*)***
  %23 = load i1 (%"class.blink::CSSMathExpressionNode"*)**, i1 (%"class.blink::CSSMathExpressionNode"*)*** %22, align 8
  %24 = load i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.blink::CSSMathExpressionNode"* %1) #13
  br i1 %25, label %33, label %26

26:                                               ; preds = %21
  %27 = load i1 (%"class.blink::CSSMathExpressionNode"*)**, i1 (%"class.blink::CSSMathExpressionNode"*)*** %22, align 8
  %28 = getelementptr inbounds i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %27, i64 1
  %29 = load i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %28, align 8
  %30 = tail call zeroext i1 %29(%"class.blink::CSSMathExpressionNode"* %1) #13
  br i1 %30, label %33, label %31

31:                                               ; preds = %26, %16
  %32 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink32CSSMathExpressionBinaryOperation6CreateEPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorE(%"class.blink::CSSMathExpressionNode"* %0, %"class.blink::CSSMathExpressionNode"* %1, i32 %2)
  br label %321

33:                                               ; preds = %26, %21
  %34 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %0, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %1, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %2, 3
  br i1 %38, label %46, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %0, i64 0, i32 2
  %41 = load i8, i8* %40, align 4, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %1, i64 0, i32 2
  %45 = load i8, i8* %44, align 4, !range !2
  br label %46

46:                                               ; preds = %33, %39, %43
  %47 = phi i8 [ 0, %39 ], [ 0, %33 ], [ %45, %43 ]
  %48 = or i32 %37, %35
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %108

50:                                               ; preds = %46
  %51 = bitcast %"class.blink::CSSMathExpressionNode"* %0 to double (%"class.blink::CSSMathExpressionNode"*)***
  %52 = load double (%"class.blink::CSSMathExpressionNode"*)**, double (%"class.blink::CSSMathExpressionNode"*)*** %51, align 8
  %53 = getelementptr inbounds double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %52, i64 4
  %54 = load double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %53, align 8
  %55 = tail call double %54(%"class.blink::CSSMathExpressionNode"* %0) #13
  %56 = bitcast %"class.blink::CSSMathExpressionNode"* %1 to double (%"class.blink::CSSMathExpressionNode"*)***
  %57 = load double (%"class.blink::CSSMathExpressionNode"*)**, double (%"class.blink::CSSMathExpressionNode"*)*** %56, align 8
  %58 = getelementptr inbounds double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %57, i64 4
  %59 = load double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %58, align 8
  %60 = tail call double %59(%"class.blink::CSSMathExpressionNode"* %1) #13
  switch i32 %2, label %91 [
    i32 0, label %61
    i32 1, label %65
    i32 2, label %69
    i32 3, label %73
  ]

61:                                               ; preds = %50
  %62 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %63 = icmp eq i8 %62, 0
  %64 = fadd double %55, %60
  br i1 %63, label %85, label %83

65:                                               ; preds = %50
  %66 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %67 = icmp eq i8 %66, 0
  %68 = fsub double %55, %60
  br i1 %67, label %85, label %83

69:                                               ; preds = %50
  %70 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %71 = icmp eq i8 %70, 0
  %72 = fmul double %55, %60
  br i1 %71, label %85, label %83

73:                                               ; preds = %50
  %74 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %78, label %76

76:                                               ; preds = %73
  %77 = fdiv double %55, %60
  br label %83

78:                                               ; preds = %73
  %79 = fcmp une double %60, 0.000000e+00
  br i1 %79, label %81, label %80

80:                                               ; preds = %78
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8)
  store i8 %47, i8* %8, align 1
  br label %106

81:                                               ; preds = %78
  %82 = fdiv double %55, %60
  br label %85

83:                                               ; preds = %61, %65, %69, %76
  %84 = phi double [ %72, %69 ], [ %68, %65 ], [ %64, %61 ], [ %77, %76 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8)
  store i8 %47, i8* %8, align 1
  br label %100

85:                                               ; preds = %69, %65, %61, %81
  %86 = phi double [ %82, %81 ], [ %64, %61 ], [ %68, %65 ], [ %72, %69 ]
  %87 = fcmp ult double %86, 0x7FEFFFFFFFFFFFFF
  %88 = fcmp ole double %86, 0xFFEFFFFFFFFFFFFF
  %89 = select i1 %88, double 0xFFEFFFFFFFFFFFFF, double %86
  %90 = select i1 %87, double %89, double 0x7FEFFFFFFFFFFFFF
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8)
  store i8 %47, i8* %8, align 1
  br label %94

91:                                               ; preds = %50
  %92 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1
  %93 = icmp eq i8 %92, 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8)
  store i8 %47, i8* %8, align 1
  br i1 %93, label %94, label %100

94:                                               ; preds = %85, %91
  %95 = phi double [ %90, %85 ], [ 0.000000e+00, %91 ]
  %96 = fcmp uno double %95, 0.000000e+00
  %97 = tail call double @llvm.fabs.f64(double %95) #14
  %98 = fcmp oeq double %97, 0x7FF0000000000000
  %99 = or i1 %96, %98
  br i1 %99, label %106, label %100

100:                                              ; preds = %83, %94, %91
  %101 = phi double [ %84, %83 ], [ %95, %94 ], [ 0.000000e+00, %91 ]
  %102 = bitcast %"class.blink::CSSNumericLiteralValue"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #13
  %103 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %101, i32 1) #13
  store %"class.blink::CSSNumericLiteralValue"* %103, %"class.blink::CSSNumericLiteralValue"** %9, align 8
  %104 = call %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink25MakeGarbageCollectedTraitINS_31CSSMathExpressionNumericLiteralEE4CallIJPNS_22CSSNumericLiteralValueERbEEEPS1_DpOT_(%"class.blink::CSSNumericLiteralValue"** nonnull dereferenceable(8) %9, i8* nonnull dereferenceable(1) %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #13
  %105 = bitcast %"class.blink::CSSMathExpressionNumericLiteral"* %104 to %"class.blink::CSSMathExpressionNode"*
  br label %106

106:                                              ; preds = %80, %94, %100
  %107 = phi %"class.blink::CSSMathExpressionNode"* [ %105, %100 ], [ null, %94 ], [ null, %80 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8)
  br label %321

108:                                              ; preds = %46
  %109 = icmp ult i32 %2, 2
  br i1 %109, label %110, label %236

110:                                              ; preds = %108
  %111 = icmp eq i32 %35, %37
  br i1 %111, label %112, label %319

112:                                              ; preds = %110
  %113 = bitcast %"class.blink::CSSMathExpressionNode"* %0 to i32 (%"class.blink::CSSMathExpressionNode"*)***
  %114 = load i32 (%"class.blink::CSSMathExpressionNode"*)**, i32 (%"class.blink::CSSMathExpressionNode"*)*** %113, align 8
  %115 = getelementptr inbounds i32 (%"class.blink::CSSMathExpressionNode"*)*, i32 (%"class.blink::CSSMathExpressionNode"*)** %114, i64 14
  %116 = load i32 (%"class.blink::CSSMathExpressionNode"*)*, i32 (%"class.blink::CSSMathExpressionNode"*)** %115, align 8
  %117 = tail call i32 %116(%"class.blink::CSSMathExpressionNode"* %0) #13
  %118 = add i32 %117, -1
  %119 = icmp ult i32 %118, 31
  br i1 %119, label %120, label %319

120:                                              ; preds = %112
  %121 = bitcast %"class.blink::CSSMathExpressionNode"* %1 to i32 (%"class.blink::CSSMathExpressionNode"*)***
  %122 = load i32 (%"class.blink::CSSMathExpressionNode"*)**, i32 (%"class.blink::CSSMathExpressionNode"*)*** %121, align 8
  %123 = getelementptr inbounds i32 (%"class.blink::CSSMathExpressionNode"*)*, i32 (%"class.blink::CSSMathExpressionNode"*)** %122, i64 14
  %124 = load i32 (%"class.blink::CSSMathExpressionNode"*)*, i32 (%"class.blink::CSSMathExpressionNode"*)** %123, align 8
  %125 = tail call i32 %124(%"class.blink::CSSMathExpressionNode"* %1) #13
  %126 = icmp eq i32 %117, %125
  br i1 %126, label %127, label %171

127:                                              ; preds = %120
  %128 = bitcast %"class.blink::CSSMathExpressionNode"* %0 to double (%"class.blink::CSSMathExpressionNode"*)***
  %129 = load double (%"class.blink::CSSMathExpressionNode"*)**, double (%"class.blink::CSSMathExpressionNode"*)*** %128, align 8
  %130 = getelementptr inbounds double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %129, i64 4
  %131 = load double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %130, align 8
  %132 = tail call double %131(%"class.blink::CSSMathExpressionNode"* %0) #13
  %133 = bitcast %"class.blink::CSSMathExpressionNode"* %1 to double (%"class.blink::CSSMathExpressionNode"*)***
  %134 = load double (%"class.blink::CSSMathExpressionNode"*)**, double (%"class.blink::CSSMathExpressionNode"*)*** %133, align 8
  %135 = getelementptr inbounds double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %134, i64 4
  %136 = load double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %135, align 8
  %137 = tail call double %136(%"class.blink::CSSMathExpressionNode"* %1) #13
  switch i32 %2, label %154 [
    i32 0, label %138
    i32 1, label %142
  ]

138:                                              ; preds = %127
  %139 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %140 = icmp eq i8 %139, 0
  %141 = fadd double %132, %137
  br i1 %140, label %148, label %146

142:                                              ; preds = %127
  %143 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %144 = icmp eq i8 %143, 0
  %145 = fsub double %132, %137
  br i1 %144, label %148, label %146

146:                                              ; preds = %138, %142
  %147 = phi double [ %145, %142 ], [ %141, %138 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6)
  store i8 %47, i8* %6, align 1
  br label %163

148:                                              ; preds = %142, %138
  %149 = phi double [ %141, %138 ], [ %145, %142 ]
  %150 = fcmp ult double %149, 0x7FEFFFFFFFFFFFFF
  %151 = fcmp ole double %149, 0xFFEFFFFFFFFFFFFF
  %152 = select i1 %151, double 0xFFEFFFFFFFFFFFFF, double %149
  %153 = select i1 %150, double %152, double 0x7FEFFFFFFFFFFFFF
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6)
  store i8 %47, i8* %6, align 1
  br label %157

154:                                              ; preds = %127
  %155 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1
  %156 = icmp eq i8 %155, 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6)
  store i8 %47, i8* %6, align 1
  br i1 %156, label %157, label %163

157:                                              ; preds = %148, %154
  %158 = phi double [ %153, %148 ], [ 0.000000e+00, %154 ]
  %159 = fcmp uno double %158, 0.000000e+00
  %160 = tail call double @llvm.fabs.f64(double %158) #14
  %161 = fcmp oeq double %160, 0x7FF0000000000000
  %162 = or i1 %159, %161
  br i1 %162, label %169, label %163

163:                                              ; preds = %146, %157, %154
  %164 = phi double [ %147, %146 ], [ %158, %157 ], [ 0.000000e+00, %154 ]
  %165 = bitcast %"class.blink::CSSNumericLiteralValue"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165) #13
  %166 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %164, i32 %117) #13
  store %"class.blink::CSSNumericLiteralValue"* %166, %"class.blink::CSSNumericLiteralValue"** %7, align 8
  %167 = call %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink25MakeGarbageCollectedTraitINS_31CSSMathExpressionNumericLiteralEE4CallIJPNS_22CSSNumericLiteralValueERbEEEPS1_DpOT_(%"class.blink::CSSNumericLiteralValue"** nonnull dereferenceable(8) %7, i8* nonnull dereferenceable(1) %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #13
  %168 = bitcast %"class.blink::CSSMathExpressionNumericLiteral"* %167 to %"class.blink::CSSMathExpressionNode"*
  br label %169

169:                                              ; preds = %157, %163
  %170 = phi %"class.blink::CSSMathExpressionNode"* [ %168, %163 ], [ null, %157 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6)
  br label %321

171:                                              ; preds = %120
  %172 = tail call i32 @_ZN5blink17CSSPrimitiveValue22UnitTypeToUnitCategoryENS0_8UnitTypeE(i32 %117) #13
  %173 = icmp eq i32 %172, 7
  br i1 %173, label %319, label %174

174:                                              ; preds = %171
  %175 = tail call i32 @_ZN5blink17CSSPrimitiveValue22UnitTypeToUnitCategoryENS0_8UnitTypeE(i32 %125) #13
  %176 = icmp eq i32 %172, %175
  br i1 %176, label %177, label %319

177:                                              ; preds = %174
  %178 = tail call i32 @_ZN5blink17CSSPrimitiveValue28CanonicalUnitTypeForCategoryENS0_12UnitCategoryE(i32 %172) #13
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %319, label %180

180:                                              ; preds = %177
  %181 = bitcast %"class.blink::CSSMathExpressionNode"* %0 to double (%"class.blink::CSSMathExpressionNode"*)***
  %182 = load double (%"class.blink::CSSMathExpressionNode"*)**, double (%"class.blink::CSSMathExpressionNode"*)*** %181, align 8
  %183 = getelementptr inbounds double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %182, i64 4
  %184 = load double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %183, align 8
  %185 = tail call double %184(%"class.blink::CSSMathExpressionNode"* %0) #13
  %186 = tail call double @_ZN5blink17CSSPrimitiveValue37ConversionToCanonicalUnitsScaleFactorENS0_8UnitTypeE(i32 %117) #13
  %187 = fmul double %185, %186
  %188 = fcmp ult double %187, 0x7FEFFFFFFFFFFFFF
  %189 = fcmp ole double %187, 0xFFEFFFFFFFFFFFFF
  %190 = select i1 %189, double 0xFFEFFFFFFFFFFFFF, double %187
  %191 = select i1 %188, double %190, double 0x7FEFFFFFFFFFFFFF
  %192 = bitcast %"class.blink::CSSMathExpressionNode"* %1 to double (%"class.blink::CSSMathExpressionNode"*)***
  %193 = load double (%"class.blink::CSSMathExpressionNode"*)**, double (%"class.blink::CSSMathExpressionNode"*)*** %192, align 8
  %194 = getelementptr inbounds double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %193, i64 4
  %195 = load double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %194, align 8
  %196 = tail call double %195(%"class.blink::CSSMathExpressionNode"* %1) #13
  %197 = tail call double @_ZN5blink17CSSPrimitiveValue37ConversionToCanonicalUnitsScaleFactorENS0_8UnitTypeE(i32 %125) #13
  %198 = fmul double %196, %197
  %199 = fcmp ult double %198, 0x7FEFFFFFFFFFFFFF
  %200 = fcmp ole double %198, 0xFFEFFFFFFFFFFFFF
  %201 = select i1 %200, double 0xFFEFFFFFFFFFFFFF, double %198
  %202 = select i1 %199, double %201, double 0x7FEFFFFFFFFFFFFF
  switch i32 %2, label %219 [
    i32 0, label %203
    i32 1, label %207
  ]

203:                                              ; preds = %180
  %204 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %205 = icmp eq i8 %204, 0
  %206 = fadd double %191, %202
  br i1 %205, label %213, label %211

207:                                              ; preds = %180
  %208 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %209 = icmp eq i8 %208, 0
  %210 = fsub double %191, %202
  br i1 %209, label %213, label %211

211:                                              ; preds = %203, %207
  %212 = phi double [ %210, %207 ], [ %206, %203 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4)
  store i8 %47, i8* %4, align 1
  br label %228

213:                                              ; preds = %207, %203
  %214 = phi double [ %206, %203 ], [ %210, %207 ]
  %215 = fcmp ult double %214, 0x7FEFFFFFFFFFFFFF
  %216 = fcmp ole double %214, 0xFFEFFFFFFFFFFFFF
  %217 = select i1 %216, double 0xFFEFFFFFFFFFFFFF, double %214
  %218 = select i1 %215, double %217, double 0x7FEFFFFFFFFFFFFF
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4)
  store i8 %47, i8* %4, align 1
  br label %222

219:                                              ; preds = %180
  %220 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1
  %221 = icmp eq i8 %220, 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4)
  store i8 %47, i8* %4, align 1
  br i1 %221, label %222, label %228

222:                                              ; preds = %213, %219
  %223 = phi double [ %218, %213 ], [ 0.000000e+00, %219 ]
  %224 = fcmp uno double %223, 0.000000e+00
  %225 = tail call double @llvm.fabs.f64(double %223) #14
  %226 = fcmp oeq double %225, 0x7FF0000000000000
  %227 = or i1 %224, %226
  br i1 %227, label %234, label %228

228:                                              ; preds = %211, %222, %219
  %229 = phi double [ %212, %211 ], [ %223, %222 ], [ 0.000000e+00, %219 ]
  %230 = bitcast %"class.blink::CSSNumericLiteralValue"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %230) #13
  %231 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %229, i32 %178) #13
  store %"class.blink::CSSNumericLiteralValue"* %231, %"class.blink::CSSNumericLiteralValue"** %5, align 8
  %232 = call %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink25MakeGarbageCollectedTraitINS_31CSSMathExpressionNumericLiteralEE4CallIJPNS_22CSSNumericLiteralValueERbEEEPS1_DpOT_(%"class.blink::CSSNumericLiteralValue"** nonnull dereferenceable(8) %5, i8* nonnull dereferenceable(1) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %230) #13
  %233 = bitcast %"class.blink::CSSMathExpressionNumericLiteral"* %232 to %"class.blink::CSSMathExpressionNode"*
  br label %234

234:                                              ; preds = %228, %222
  %235 = phi %"class.blink::CSSMathExpressionNode"* [ %233, %228 ], [ null, %222 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4)
  br label %321

236:                                              ; preds = %108
  %237 = icmp eq i32 %35, 0
  br i1 %237, label %240, label %238

238:                                              ; preds = %236
  %239 = icmp eq i32 %37, 0
  br i1 %239, label %240, label %243

240:                                              ; preds = %238, %236
  %241 = phi %"class.blink::CSSMathExpressionNode"* [ %0, %236 ], [ %1, %238 ]
  %242 = icmp eq %"class.blink::CSSMathExpressionNode"* %241, null
  br i1 %242, label %243, label %245

243:                                              ; preds = %238, %240
  %244 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink32CSSMathExpressionBinaryOperation6CreateEPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorE(%"class.blink::CSSMathExpressionNode"* %0, %"class.blink::CSSMathExpressionNode"* %1, i32 %2)
  br label %321

245:                                              ; preds = %240
  %246 = icmp eq %"class.blink::CSSMathExpressionNode"* %241, %0
  %247 = and i1 %38, %246
  br i1 %247, label %321, label %248

248:                                              ; preds = %245
  %249 = select i1 %246, %"class.blink::CSSMathExpressionNode"* %1, %"class.blink::CSSMathExpressionNode"* %0
  %250 = bitcast %"class.blink::CSSMathExpressionNode"* %241 to double (%"class.blink::CSSMathExpressionNode"*)***
  %251 = load double (%"class.blink::CSSMathExpressionNode"*)**, double (%"class.blink::CSSMathExpressionNode"*)*** %250, align 8
  %252 = getelementptr inbounds double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %251, i64 4
  %253 = load double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %252, align 8
  %254 = tail call double %253(%"class.blink::CSSMathExpressionNode"* nonnull %241) #13
  %255 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %256 = icmp eq i8 %255, 0
  br i1 %256, label %257, label %266

257:                                              ; preds = %248
  %258 = fcmp uno double %254, 0.000000e+00
  %259 = tail call double @llvm.fabs.f64(double %254) #14
  %260 = fcmp oeq double %259, 0x7FF0000000000000
  %261 = or i1 %258, %260
  br i1 %261, label %321, label %262

262:                                              ; preds = %257
  %263 = icmp ne i32 %2, 3
  %264 = fcmp une double %254, 0.000000e+00
  %265 = or i1 %263, %264
  br i1 %265, label %266, label %321

266:                                              ; preds = %248, %262
  %267 = bitcast %"class.blink::CSSMathExpressionNode"* %249 to i32 (%"class.blink::CSSMathExpressionNode"*)***
  %268 = load i32 (%"class.blink::CSSMathExpressionNode"*)**, i32 (%"class.blink::CSSMathExpressionNode"*)*** %267, align 8
  %269 = getelementptr inbounds i32 (%"class.blink::CSSMathExpressionNode"*)*, i32 (%"class.blink::CSSMathExpressionNode"*)** %268, i64 14
  %270 = load i32 (%"class.blink::CSSMathExpressionNode"*)*, i32 (%"class.blink::CSSMathExpressionNode"*)** %269, align 8
  %271 = tail call i32 %270(%"class.blink::CSSMathExpressionNode"* %249) #13
  %272 = add i32 %271, -1
  %273 = icmp ult i32 %272, 31
  br i1 %273, label %274, label %319

274:                                              ; preds = %266
  %275 = bitcast %"class.blink::CSSMathExpressionNode"* %249 to double (%"class.blink::CSSMathExpressionNode"*)***
  %276 = load double (%"class.blink::CSSMathExpressionNode"*)**, double (%"class.blink::CSSMathExpressionNode"*)*** %275, align 8
  %277 = getelementptr inbounds double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %276, i64 4
  %278 = load double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %277, align 8
  %279 = tail call double %278(%"class.blink::CSSMathExpressionNode"* %249) #13
  switch i32 %2, label %302 [
    i32 3, label %284
    i32 2, label %280
  ]

280:                                              ; preds = %274
  %281 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %282 = icmp eq i8 %281, 0
  %283 = fmul double %254, %279
  br i1 %282, label %296, label %294

284:                                              ; preds = %274
  %285 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %286 = icmp eq i8 %285, 0
  br i1 %286, label %289, label %287

287:                                              ; preds = %284
  %288 = fdiv double %279, %254
  br label %294

289:                                              ; preds = %284
  %290 = fcmp une double %254, 0.000000e+00
  br i1 %290, label %292, label %291

291:                                              ; preds = %289
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10)
  store i8 %47, i8* %10, align 1
  br label %317

292:                                              ; preds = %289
  %293 = fdiv double %279, %254
  br label %296

294:                                              ; preds = %280, %287
  %295 = phi double [ %283, %280 ], [ %288, %287 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10)
  store i8 %47, i8* %10, align 1
  br label %311

296:                                              ; preds = %280, %292
  %297 = phi double [ %293, %292 ], [ %283, %280 ]
  %298 = fcmp ult double %297, 0x7FEFFFFFFFFFFFFF
  %299 = fcmp ole double %297, 0xFFEFFFFFFFFFFFFF
  %300 = select i1 %299, double 0xFFEFFFFFFFFFFFFF, double %297
  %301 = select i1 %298, double %300, double 0x7FEFFFFFFFFFFFFF
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10)
  store i8 %47, i8* %10, align 1
  br label %305

302:                                              ; preds = %274
  %303 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1
  %304 = icmp eq i8 %303, 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10)
  store i8 %47, i8* %10, align 1
  br i1 %304, label %305, label %311

305:                                              ; preds = %296, %302
  %306 = phi double [ %301, %296 ], [ 0.000000e+00, %302 ]
  %307 = fcmp uno double %306, 0.000000e+00
  %308 = tail call double @llvm.fabs.f64(double %306) #14
  %309 = fcmp oeq double %308, 0x7FF0000000000000
  %310 = or i1 %307, %309
  br i1 %310, label %317, label %311

311:                                              ; preds = %294, %305, %302
  %312 = phi double [ %295, %294 ], [ %306, %305 ], [ 0.000000e+00, %302 ]
  %313 = bitcast %"class.blink::CSSNumericLiteralValue"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %313) #13
  %314 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %312, i32 %271) #13
  store %"class.blink::CSSNumericLiteralValue"* %314, %"class.blink::CSSNumericLiteralValue"** %11, align 8
  %315 = call %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink25MakeGarbageCollectedTraitINS_31CSSMathExpressionNumericLiteralEE4CallIJPNS_22CSSNumericLiteralValueERbEEEPS1_DpOT_(%"class.blink::CSSNumericLiteralValue"** nonnull dereferenceable(8) %11, i8* nonnull dereferenceable(1) %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %313) #13
  %316 = bitcast %"class.blink::CSSMathExpressionNumericLiteral"* %315 to %"class.blink::CSSMathExpressionNode"*
  br label %317

317:                                              ; preds = %291, %305, %311
  %318 = phi %"class.blink::CSSMathExpressionNode"* [ %316, %311 ], [ null, %305 ], [ null, %291 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10)
  br label %321

319:                                              ; preds = %177, %174, %171, %112, %266, %110
  %320 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink32CSSMathExpressionBinaryOperation6CreateEPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorE(%"class.blink::CSSMathExpressionNode"* %0, %"class.blink::CSSMathExpressionNode"* %1, i32 %2)
  br label %321

321:                                              ; preds = %317, %262, %257, %245, %243, %234, %169, %106, %319, %31
  %322 = phi %"class.blink::CSSMathExpressionNode"* [ %32, %31 ], [ %107, %106 ], [ %320, %319 ], [ %170, %169 ], [ %235, %234 ], [ %318, %317 ], [ null, %262 ], [ null, %257 ], [ null, %245 ], [ %244, %243 ]
  ret %"class.blink::CSSMathExpressionNode"* %322
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden double @_ZN5blink32CSSMathExpressionBinaryOperation16EvaluateOperatorEddNS_15CSSMathOperatorE(double, double, i32) local_unnamed_addr #5 align 2 {
  switch i32 %2, label %44 [
    i32 0, label %4
    i32 1, label %13
    i32 2, label %22
    i32 3, label %31
  ]

4:                                                ; preds = %3
  %5 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  %7 = fadd double %0, %1
  br i1 %6, label %8, label %44

8:                                                ; preds = %4
  %9 = fcmp ult double %7, 0x7FEFFFFFFFFFFFFF
  %10 = fcmp ole double %7, 0xFFEFFFFFFFFFFFFF
  %11 = select i1 %10, double 0xFFEFFFFFFFFFFFFF, double %7
  %12 = select i1 %9, double %11, double 0x7FEFFFFFFFFFFFFF
  br label %44

13:                                               ; preds = %3
  %14 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %15 = icmp eq i8 %14, 0
  %16 = fsub double %0, %1
  br i1 %15, label %17, label %44

17:                                               ; preds = %13
  %18 = fcmp ult double %16, 0x7FEFFFFFFFFFFFFF
  %19 = fcmp ole double %16, 0xFFEFFFFFFFFFFFFF
  %20 = select i1 %19, double 0xFFEFFFFFFFFFFFFF, double %16
  %21 = select i1 %18, double %20, double 0x7FEFFFFFFFFFFFFF
  br label %44

22:                                               ; preds = %3
  %23 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %24 = icmp eq i8 %23, 0
  %25 = fmul double %0, %1
  br i1 %24, label %26, label %44

26:                                               ; preds = %22
  %27 = fcmp ult double %25, 0x7FEFFFFFFFFFFFFF
  %28 = fcmp ole double %25, 0xFFEFFFFFFFFFFFFF
  %29 = select i1 %28, double 0xFFEFFFFFFFFFFFFF, double %25
  %30 = select i1 %27, double %29, double 0x7FEFFFFFFFFFFFFF
  br label %44

31:                                               ; preds = %3
  %32 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = fdiv double %0, %1
  br label %44

36:                                               ; preds = %31
  %37 = fcmp une double %1, 0.000000e+00
  br i1 %37, label %38, label %44

38:                                               ; preds = %36
  %39 = fdiv double %0, %1
  %40 = fcmp ult double %39, 0x7FEFFFFFFFFFFFFF
  %41 = fcmp ole double %39, 0xFFEFFFFFFFFFFFFF
  %42 = select i1 %41, double 0xFFEFFFFFFFFFFFFF, double %39
  %43 = select i1 %40, double %42, double 0x7FEFFFFFFFFFFFFF
  br label %44

44:                                               ; preds = %4, %13, %22, %36, %3, %38, %34, %26, %17, %8
  %45 = phi double [ %35, %34 ], [ %43, %38 ], [ %30, %26 ], [ %21, %17 ], [ %12, %8 ], [ %7, %4 ], [ %16, %13 ], [ %25, %22 ], [ 0.000000e+00, %3 ], [ 0x7FF8000000000000, %36 ]
  ret double %45
}

declare i32 @_ZN5blink17CSSPrimitiveValue22UnitTypeToUnitCategoryENS0_8UnitTypeE(i32) local_unnamed_addr #2

declare i32 @_ZN5blink17CSSPrimitiveValue28CanonicalUnitTypeForCategoryENS0_12UnitCategoryE(i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::CSSMathExpressionNode"* @_ZN5blink32CSSMathExpressionBinaryOperation13GetNumberSideEPKNS_21CSSMathExpressionNodeES3_(%"class.blink::CSSMathExpressionNode"* readonly, %"class.blink::CSSMathExpressionNode"* readonly) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  %10 = select i1 %9, %"class.blink::CSSMathExpressionNode"* %1, %"class.blink::CSSMathExpressionNode"* null
  br label %11

11:                                               ; preds = %6, %2
  %12 = phi %"class.blink::CSSMathExpressionNode"* [ %0, %2 ], [ %10, %6 ]
  ret %"class.blink::CSSMathExpressionNode"* %12
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink32CSSMathExpressionBinaryOperationC2EPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorENS_19CalculationCategoryE(%"class.blink::CSSMathExpressionBinaryOperation"* nocapture, %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*, i32, i32) unnamed_addr #3 align 2 {
  %6 = icmp eq i32 %3, 3
  br i1 %6, label %14, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %1, i64 0, i32 2
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %2, i64 0, i32 2
  %13 = load i8, i8* %12, align 4, !range !2
  br label %14

14:                                               ; preds = %5, %7, %11
  %15 = phi i8 [ 0, %7 ], [ 0, %5 ], [ %13, %11 ]
  %16 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %1, i64 0, i32 4
  %17 = load i8, i8* %16, align 2, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %2, i64 0, i32 4
  %21 = load i8, i8* %20, align 2, !range !2
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i8 [ 1, %14 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 0, i32 1
  store i32 %4, i32* %25, align 8
  %26 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 0, i32 2
  store i8 %15, i8* %26, align 4
  %27 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 0, i32 3
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 0, i32 4
  store i8 %23, i8* %28, align 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink32CSSMathExpressionBinaryOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %29 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::CSSMathExpressionNode"* %1, %"class.blink::CSSMathExpressionNode"** %29, align 8
  %30 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::CSSMathExpressionNode"* %2, %"class.blink::CSSMathExpressionNode"** %30, align 8
  %31 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 4
  store i32 %3, i32* %31, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink32CSSMathExpressionBinaryOperation6IsZeroEv(%"class.blink::CSSMathExpressionBinaryOperation"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = tail call double @_ZNK5blink32CSSMathExpressionBinaryOperation11DoubleValueEv(%"class.blink::CSSMathExpressionBinaryOperation"* %0)
  %3 = fcmp oeq double %2, 0.000000e+00
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink32CSSMathExpressionBinaryOperation11DoubleValueEv(%"class.blink::CSSMathExpressionBinaryOperation"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %2, align 8
  %4 = bitcast %"class.blink::CSSMathExpressionNode"* %3 to double (%"class.blink::CSSMathExpressionNode"*)***
  %5 = load double (%"class.blink::CSSMathExpressionNode"*)**, double (%"class.blink::CSSMathExpressionNode"*)*** %4, align 8
  %6 = getelementptr inbounds double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %5, i64 4
  %7 = load double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %6, align 8
  %8 = tail call double %7(%"class.blink::CSSMathExpressionNode"* %3) #13
  %9 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %9, align 8
  %11 = bitcast %"class.blink::CSSMathExpressionNode"* %10 to double (%"class.blink::CSSMathExpressionNode"*)***
  %12 = load double (%"class.blink::CSSMathExpressionNode"*)**, double (%"class.blink::CSSMathExpressionNode"*)*** %11, align 8
  %13 = getelementptr inbounds double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %12, i64 4
  %14 = load double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %13, align 8
  %15 = tail call double %14(%"class.blink::CSSMathExpressionNode"* %10) #13
  %16 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  switch i32 %17, label %58 [
    i32 0, label %18
    i32 1, label %27
    i32 2, label %36
    i32 3, label %45
  ]

18:                                               ; preds = %1
  %19 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  %21 = fadd double %8, %15
  br i1 %20, label %22, label %58

22:                                               ; preds = %18
  %23 = fcmp ult double %21, 0x7FEFFFFFFFFFFFFF
  %24 = fcmp ole double %21, 0xFFEFFFFFFFFFFFFF
  %25 = select i1 %24, double 0xFFEFFFFFFFFFFFFF, double %21
  %26 = select i1 %23, double %25, double 0x7FEFFFFFFFFFFFFF
  br label %58

27:                                               ; preds = %1
  %28 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %29 = icmp eq i8 %28, 0
  %30 = fsub double %8, %15
  br i1 %29, label %31, label %58

31:                                               ; preds = %27
  %32 = fcmp ult double %30, 0x7FEFFFFFFFFFFFFF
  %33 = fcmp ole double %30, 0xFFEFFFFFFFFFFFFF
  %34 = select i1 %33, double 0xFFEFFFFFFFFFFFFF, double %30
  %35 = select i1 %32, double %34, double 0x7FEFFFFFFFFFFFFF
  br label %58

36:                                               ; preds = %1
  %37 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  %39 = fmul double %8, %15
  br i1 %38, label %40, label %58

40:                                               ; preds = %36
  %41 = fcmp ult double %39, 0x7FEFFFFFFFFFFFFF
  %42 = fcmp ole double %39, 0xFFEFFFFFFFFFFFFF
  %43 = select i1 %42, double 0xFFEFFFFFFFFFFFFF, double %39
  %44 = select i1 %41, double %43, double 0x7FEFFFFFFFFFFFFF
  br label %58

45:                                               ; preds = %1
  %46 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %45
  %49 = fdiv double %8, %15
  br label %58

50:                                               ; preds = %45
  %51 = fcmp une double %15, 0.000000e+00
  br i1 %51, label %52, label %58

52:                                               ; preds = %50
  %53 = fdiv double %8, %15
  %54 = fcmp ult double %53, 0x7FEFFFFFFFFFFFFF
  %55 = fcmp ole double %53, 0xFFEFFFFFFFFFFFFF
  %56 = select i1 %55, double 0xFFEFFFFFFFFFFFFF, double %53
  %57 = select i1 %54, double %56, double 0x7FEFFFFFFFFFFFFF
  br label %58

58:                                               ; preds = %1, %18, %22, %27, %31, %36, %40, %48, %50, %52
  %59 = phi double [ %49, %48 ], [ %57, %52 ], [ %44, %40 ], [ %35, %31 ], [ %26, %22 ], [ %21, %18 ], [ %30, %27 ], [ %39, %36 ], [ 0.000000e+00, %1 ], [ 0x7FF8000000000000, %50 ]
  ret double %59
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, float } @_ZNK5blink32CSSMathExpressionBinaryOperation18ToPixelsAndPercentERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSMathExpressionBinaryOperation"* nocapture readonly, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %97 [
    i32 0, label %5
    i32 1, label %5
    i32 2, label %48
    i32 3, label %48
  ]

5:                                                ; preds = %2, %2
  %6 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %6, align 8
  %8 = bitcast %"class.blink::CSSMathExpressionNode"* %7 to { i64, float } (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)***
  %9 = load { i64, float } (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)**, { i64, float } (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*** %8, align 8
  %10 = getelementptr inbounds { i64, float } (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, { i64, float } (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %9, i64 9
  %11 = load { i64, float } (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, { i64, float } (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %10, align 8
  %12 = tail call { i64, float } %11(%"class.blink::CSSMathExpressionNode"* %7, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #13
  %13 = extractvalue { i64, float } %12, 0
  %14 = extractvalue { i64, float } %12, 1
  %15 = trunc i64 %13 to i32
  %16 = trunc i64 %13 to i8
  %17 = lshr i32 %15, 8
  %18 = lshr i64 %13, 32
  %19 = trunc i64 %18 to i32
  %20 = icmp eq i8 %16, 0
  br i1 %20, label %104, label %21

21:                                               ; preds = %5
  %22 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %22, align 8
  %24 = bitcast %"class.blink::CSSMathExpressionNode"* %23 to { i64, float } (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)***
  %25 = load { i64, float } (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)**, { i64, float } (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*** %24, align 8
  %26 = getelementptr inbounds { i64, float } (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, { i64, float } (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %25, i64 9
  %27 = load { i64, float } (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, { i64, float } (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %26, align 8
  %28 = tail call { i64, float } %27(%"class.blink::CSSMathExpressionNode"* %23, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #13
  %29 = extractvalue { i64, float } %28, 0
  %30 = extractvalue { i64, float } %28, 1
  %31 = trunc i64 %29 to i8
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %104, label %33

33:                                               ; preds = %21
  %34 = lshr i64 %29, 32
  %35 = trunc i64 %34 to i32
  %36 = load i32, i32* %3, align 8
  %37 = icmp eq i32 %36, 0
  %38 = bitcast i32 %35 to float
  %39 = bitcast i32 %19 to float
  br i1 %37, label %40, label %44

40:                                               ; preds = %33
  %41 = fadd float %39, %38
  %42 = bitcast float %41 to i32
  %43 = fadd float %14, %30
  br label %97

44:                                               ; preds = %33
  %45 = fsub float %39, %38
  %46 = bitcast float %45 to i32
  %47 = fsub float %14, %30
  br label %97

48:                                               ; preds = %2, %2
  %49 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 2
  %50 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %49, i64 0, i32 0, i32 0
  %51 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 3
  %53 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %52, i64 0, i32 0, i32 0
  %54 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %51, i64 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %63, label %58

58:                                               ; preds = %48
  %59 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %54, i64 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 0
  %62 = select i1 %61, %"class.blink::CSSMathExpressionNode"* %54, %"class.blink::CSSMathExpressionNode"* null
  br label %63

63:                                               ; preds = %48, %58
  %64 = phi %"class.blink::CSSMathExpressionNode"* [ %51, %48 ], [ %62, %58 ]
  %65 = icmp eq %"class.blink::CSSMathExpressionNode"* %51, %64
  %66 = select i1 %65, %"class.blink::Member.191"* %52, %"class.blink::Member.191"* %49
  %67 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %66, i64 0, i32 0, i32 0
  %68 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %67, align 8
  %69 = bitcast %"class.blink::CSSMathExpressionNode"* %68 to { i64, float } (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)***
  %70 = load { i64, float } (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)**, { i64, float } (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*** %69, align 8
  %71 = getelementptr inbounds { i64, float } (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, { i64, float } (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %70, i64 9
  %72 = load { i64, float } (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, { i64, float } (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %71, align 8
  %73 = tail call { i64, float } %72(%"class.blink::CSSMathExpressionNode"* %68, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #13
  %74 = extractvalue { i64, float } %73, 0
  %75 = trunc i64 %74 to i8
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %104, label %77

77:                                               ; preds = %63
  %78 = lshr i64 %74, 32
  %79 = trunc i64 %78 to i32
  %80 = trunc i64 %74 to i32
  %81 = lshr i32 %80, 8
  %82 = extractvalue { i64, float } %73, 1
  %83 = bitcast %"class.blink::CSSMathExpressionNode"* %64 to double (%"class.blink::CSSMathExpressionNode"*)***
  %84 = load double (%"class.blink::CSSMathExpressionNode"*)**, double (%"class.blink::CSSMathExpressionNode"*)*** %83, align 8
  %85 = getelementptr inbounds double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %84, i64 4
  %86 = load double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %85, align 8
  %87 = tail call double %86(%"class.blink::CSSMathExpressionNode"* %64) #13
  %88 = fptrunc double %87 to float
  %89 = load i32, i32* %3, align 8
  %90 = icmp eq i32 %89, 3
  %91 = fdiv float 1.000000e+00, %88
  %92 = select i1 %90, float %91, float %88
  %93 = bitcast i32 %79 to float
  %94 = fmul float %92, %93
  %95 = bitcast float %94 to i32
  %96 = fmul float %82, %92
  br label %97

97:                                               ; preds = %44, %40, %77, %2
  %98 = phi i32 [ 11184810, %2 ], [ %81, %77 ], [ %17, %40 ], [ %17, %44 ]
  %99 = phi i8 [ 0, %2 ], [ %75, %77 ], [ %16, %40 ], [ %16, %44 ]
  %100 = phi i32 [ -1, %2 ], [ %95, %77 ], [ %42, %40 ], [ %46, %44 ]
  %101 = phi float [ 0xFFFFFFFFE0000000, %2 ], [ %96, %77 ], [ %43, %40 ], [ %47, %44 ]
  %102 = shl nuw i32 %98, 8
  %103 = zext i8 %99 to i32
  br label %104

104:                                              ; preds = %21, %5, %63, %97
  %105 = phi i32 [ %103, %97 ], [ 0, %5 ], [ 0, %21 ], [ 0, %63 ]
  %106 = phi float [ %101, %97 ], [ undef, %5 ], [ undef, %21 ], [ undef, %63 ]
  %107 = phi i32 [ %100, %97 ], [ undef, %5 ], [ undef, %21 ], [ undef, %63 ]
  %108 = phi i32 [ %102, %97 ], [ 0, %5 ], [ 0, %21 ], [ 0, %63 ]
  %109 = or i32 %108, %105
  %110 = zext i32 %107 to i64
  %111 = shl nuw i64 %110, 32
  %112 = zext i32 %109 to i64
  %113 = or i64 %111, %112
  %114 = insertvalue { i64, float } undef, i64 %113, 0
  %115 = insertvalue { i64, float } %114, float %106, 1
  ret { i64, float } %115
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CalculationExpressionNode"* @_ZNK5blink32CSSMathExpressionBinaryOperation23ToCalculationExpressionERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSMathExpressionBinaryOperation"* nocapture readonly, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %92 [
    i32 0, label %5
    i32 1, label %21
    i32 2, label %37
    i32 3, label %74
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %6, align 8
  %8 = bitcast %"class.blink::CSSMathExpressionNode"* %7 to %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)***
  %9 = load %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)**, %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %9, i64 8
  %11 = load %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %10, align 8
  %12 = tail call %"class.blink::CalculationExpressionNode"* %11(%"class.blink::CSSMathExpressionNode"* %7, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #13
  %13 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %13, align 8
  %15 = bitcast %"class.blink::CSSMathExpressionNode"* %14 to %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)***
  %16 = load %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)**, %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %16, i64 8
  %18 = load %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %17, align 8
  %19 = tail call %"class.blink::CalculationExpressionNode"* %18(%"class.blink::CSSMathExpressionNode"* %14, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #13
  %20 = tail call %"class.blink::CalculationExpressionNode"* @_ZN5blink33CalculationExpressionAdditiveNode16CreateSimplifiedE13scoped_refptrIKNS_25CalculationExpressionNodeEES4_NS0_4TypeE(%"class.blink::CalculationExpressionNode"* %12, %"class.blink::CalculationExpressionNode"* %19, i32 0) #13
  br label %92

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %22, align 8
  %24 = bitcast %"class.blink::CSSMathExpressionNode"* %23 to %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)***
  %25 = load %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)**, %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %25, i64 8
  %27 = load %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %26, align 8
  %28 = tail call %"class.blink::CalculationExpressionNode"* %27(%"class.blink::CSSMathExpressionNode"* %23, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #13
  %29 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %29, align 8
  %31 = bitcast %"class.blink::CSSMathExpressionNode"* %30 to %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)***
  %32 = load %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)**, %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*** %31, align 8
  %33 = getelementptr inbounds %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %32, i64 8
  %34 = load %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %33, align 8
  %35 = tail call %"class.blink::CalculationExpressionNode"* %34(%"class.blink::CSSMathExpressionNode"* %30, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #13
  %36 = tail call %"class.blink::CalculationExpressionNode"* @_ZN5blink33CalculationExpressionAdditiveNode16CreateSimplifiedE13scoped_refptrIKNS_25CalculationExpressionNodeEES4_NS0_4TypeE(%"class.blink::CalculationExpressionNode"* %28, %"class.blink::CalculationExpressionNode"* %35, i32 1) #13
  br label %92

37:                                               ; preds = %2
  %38 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 2, i32 0, i32 0
  %39 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %39, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %59

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 3, i32 0, i32 0
  %45 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %44, align 8
  %46 = bitcast %"class.blink::CSSMathExpressionNode"* %45 to %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)***
  %47 = load %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)**, %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*** %46, align 8
  %48 = getelementptr inbounds %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %47, i64 8
  %49 = load %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %48, align 8
  %50 = tail call %"class.blink::CalculationExpressionNode"* %49(%"class.blink::CSSMathExpressionNode"* %45, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #13
  %51 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %38, align 8
  %52 = bitcast %"class.blink::CSSMathExpressionNode"* %51 to double (%"class.blink::CSSMathExpressionNode"*)***
  %53 = load double (%"class.blink::CSSMathExpressionNode"*)**, double (%"class.blink::CSSMathExpressionNode"*)*** %52, align 8
  %54 = getelementptr inbounds double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %53, i64 4
  %55 = load double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %54, align 8
  %56 = tail call double %55(%"class.blink::CSSMathExpressionNode"* %51) #13
  %57 = fptrunc double %56 to float
  %58 = tail call %"class.blink::CalculationExpressionNode"* @_ZN5blink39CalculationExpressionMultiplicationNode16CreateSimplifiedE13scoped_refptrIKNS_25CalculationExpressionNodeEEf(%"class.blink::CalculationExpressionNode"* %50, float %57) #13
  br label %92

59:                                               ; preds = %37
  %60 = bitcast %"class.blink::CSSMathExpressionNode"* %39 to %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)***
  %61 = load %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)**, %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*** %60, align 8
  %62 = getelementptr inbounds %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %61, i64 8
  %63 = load %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %62, align 8
  %64 = tail call %"class.blink::CalculationExpressionNode"* %63(%"class.blink::CSSMathExpressionNode"* %39, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #13
  %65 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 3, i32 0, i32 0
  %66 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %65, align 8
  %67 = bitcast %"class.blink::CSSMathExpressionNode"* %66 to double (%"class.blink::CSSMathExpressionNode"*)***
  %68 = load double (%"class.blink::CSSMathExpressionNode"*)**, double (%"class.blink::CSSMathExpressionNode"*)*** %67, align 8
  %69 = getelementptr inbounds double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %68, i64 4
  %70 = load double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %69, align 8
  %71 = tail call double %70(%"class.blink::CSSMathExpressionNode"* %66) #13
  %72 = fptrunc double %71 to float
  %73 = tail call %"class.blink::CalculationExpressionNode"* @_ZN5blink39CalculationExpressionMultiplicationNode16CreateSimplifiedE13scoped_refptrIKNS_25CalculationExpressionNodeEEf(%"class.blink::CalculationExpressionNode"* %64, float %72) #13
  br label %92

74:                                               ; preds = %2
  %75 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 2, i32 0, i32 0
  %76 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %75, align 8
  %77 = bitcast %"class.blink::CSSMathExpressionNode"* %76 to %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)***
  %78 = load %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)**, %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*** %77, align 8
  %79 = getelementptr inbounds %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %78, i64 8
  %80 = load %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %79, align 8
  %81 = tail call %"class.blink::CalculationExpressionNode"* %80(%"class.blink::CSSMathExpressionNode"* %76, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #13
  %82 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 3, i32 0, i32 0
  %83 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %82, align 8
  %84 = bitcast %"class.blink::CSSMathExpressionNode"* %83 to double (%"class.blink::CSSMathExpressionNode"*)***
  %85 = load double (%"class.blink::CSSMathExpressionNode"*)**, double (%"class.blink::CSSMathExpressionNode"*)*** %84, align 8
  %86 = getelementptr inbounds double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %85, i64 4
  %87 = load double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %86, align 8
  %88 = tail call double %87(%"class.blink::CSSMathExpressionNode"* %83) #13
  %89 = fdiv double 1.000000e+00, %88
  %90 = fptrunc double %89 to float
  %91 = tail call %"class.blink::CalculationExpressionNode"* @_ZN5blink39CalculationExpressionMultiplicationNode16CreateSimplifiedE13scoped_refptrIKNS_25CalculationExpressionNodeEEf(%"class.blink::CalculationExpressionNode"* %81, float %90) #13
  br label %92

92:                                               ; preds = %2, %74, %59, %43, %21, %5
  %93 = phi %"class.blink::CalculationExpressionNode"* [ %91, %74 ], [ %58, %43 ], [ %73, %59 ], [ %36, %21 ], [ %20, %5 ], [ null, %2 ]
  ret %"class.blink::CalculationExpressionNode"* %93
}

declare %"class.blink::CalculationExpressionNode"* @_ZN5blink33CalculationExpressionAdditiveNode16CreateSimplifiedE13scoped_refptrIKNS_25CalculationExpressionNodeEES4_NS0_4TypeE(%"class.blink::CalculationExpressionNode"*, %"class.blink::CalculationExpressionNode"*, i32) local_unnamed_addr #2

declare %"class.blink::CalculationExpressionNode"* @_ZN5blink39CalculationExpressionMultiplicationNode16CreateSimplifiedE13scoped_refptrIKNS_25CalculationExpressionNodeEEf(%"class.blink::CalculationExpressionNode"*, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i8, double } @_ZNK5blink32CSSMathExpressionBinaryOperation27ComputeValueInCanonicalUnitEv(%"class.blink::CSSMathExpressionBinaryOperation"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %69 [
    i32 5, label %4
    i32 4, label %4
    i32 2, label %4
    i32 1, label %4
    i32 0, label %4
    i32 6, label %4
  ]

4:                                                ; preds = %1, %1, %1, %1, %1, %1
  %5 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %5, align 8
  %7 = bitcast %"class.blink::CSSMathExpressionNode"* %6 to { i8, double } (%"class.blink::CSSMathExpressionNode"*)***
  %8 = load { i8, double } (%"class.blink::CSSMathExpressionNode"*)**, { i8, double } (%"class.blink::CSSMathExpressionNode"*)*** %7, align 8
  %9 = getelementptr inbounds { i8, double } (%"class.blink::CSSMathExpressionNode"*)*, { i8, double } (%"class.blink::CSSMathExpressionNode"*)** %8, i64 10
  %10 = load { i8, double } (%"class.blink::CSSMathExpressionNode"*)*, { i8, double } (%"class.blink::CSSMathExpressionNode"*)** %9, align 8
  %11 = tail call { i8, double } %10(%"class.blink::CSSMathExpressionNode"* %6) #13
  %12 = extractvalue { i8, double } %11, 0
  %13 = extractvalue { i8, double } %11, 1
  %14 = icmp eq i8 %12, 0
  br i1 %14, label %69, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %16, align 8
  %18 = bitcast %"class.blink::CSSMathExpressionNode"* %17 to { i8, double } (%"class.blink::CSSMathExpressionNode"*)***
  %19 = load { i8, double } (%"class.blink::CSSMathExpressionNode"*)**, { i8, double } (%"class.blink::CSSMathExpressionNode"*)*** %18, align 8
  %20 = getelementptr inbounds { i8, double } (%"class.blink::CSSMathExpressionNode"*)*, { i8, double } (%"class.blink::CSSMathExpressionNode"*)** %19, i64 10
  %21 = load { i8, double } (%"class.blink::CSSMathExpressionNode"*)*, { i8, double } (%"class.blink::CSSMathExpressionNode"*)** %20, align 8
  %22 = tail call { i8, double } %21(%"class.blink::CSSMathExpressionNode"* %17) #13
  %23 = extractvalue { i8, double } %22, 0
  %24 = extractvalue { i8, double } %22, 1
  %25 = icmp eq i8 %23, 0
  br i1 %25, label %69, label %26

26:                                               ; preds = %15
  %27 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  switch i32 %28, label %69 [
    i32 0, label %29
    i32 1, label %38
    i32 2, label %47
    i32 3, label %56
  ]

29:                                               ; preds = %26
  %30 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %31 = icmp eq i8 %30, 0
  %32 = fadd double %13, %24
  br i1 %31, label %33, label %69

33:                                               ; preds = %29
  %34 = fcmp ult double %32, 0x7FEFFFFFFFFFFFFF
  %35 = fcmp ole double %32, 0xFFEFFFFFFFFFFFFF
  %36 = select i1 %35, double 0xFFEFFFFFFFFFFFFF, double %32
  %37 = select i1 %34, double %36, double 0x7FEFFFFFFFFFFFFF
  br label %69

38:                                               ; preds = %26
  %39 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %40 = icmp eq i8 %39, 0
  %41 = fsub double %13, %24
  br i1 %40, label %42, label %69

42:                                               ; preds = %38
  %43 = fcmp ult double %41, 0x7FEFFFFFFFFFFFFF
  %44 = fcmp ole double %41, 0xFFEFFFFFFFFFFFFF
  %45 = select i1 %44, double 0xFFEFFFFFFFFFFFFF, double %41
  %46 = select i1 %43, double %45, double 0x7FEFFFFFFFFFFFFF
  br label %69

47:                                               ; preds = %26
  %48 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %49 = icmp eq i8 %48, 0
  %50 = fmul double %13, %24
  br i1 %49, label %51, label %69

51:                                               ; preds = %47
  %52 = fcmp ult double %50, 0x7FEFFFFFFFFFFFFF
  %53 = fcmp ole double %50, 0xFFEFFFFFFFFFFFFF
  %54 = select i1 %53, double 0xFFEFFFFFFFFFFFFF, double %50
  %55 = select i1 %52, double %54, double 0x7FEFFFFFFFFFFFFF
  br label %69

56:                                               ; preds = %26
  %57 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %56
  %60 = fdiv double %13, %24
  br label %69

61:                                               ; preds = %56
  %62 = fcmp une double %24, 0.000000e+00
  br i1 %62, label %63, label %69

63:                                               ; preds = %61
  %64 = fdiv double %13, %24
  %65 = fcmp ult double %64, 0x7FEFFFFFFFFFFFFF
  %66 = fcmp ole double %64, 0xFFEFFFFFFFFFFFFF
  %67 = select i1 %66, double 0xFFEFFFFFFFFFFFFF, double %64
  %68 = select i1 %65, double %67, double 0x7FEFFFFFFFFFFFFF
  br label %69

69:                                               ; preds = %4, %63, %61, %59, %51, %47, %42, %38, %33, %29, %26, %15, %1
  %70 = phi i8 [ 0, %1 ], [ 0, %4 ], [ 0, %15 ], [ 1, %26 ], [ 1, %29 ], [ 1, %33 ], [ 1, %38 ], [ 1, %42 ], [ 1, %47 ], [ 1, %51 ], [ 1, %59 ], [ 1, %61 ], [ 1, %63 ]
  %71 = phi double [ undef, %1 ], [ undef, %4 ], [ undef, %15 ], [ 0.000000e+00, %26 ], [ %32, %29 ], [ %37, %33 ], [ %41, %38 ], [ %46, %42 ], [ %50, %47 ], [ %55, %51 ], [ %60, %59 ], [ 0x7FF8000000000000, %61 ], [ %68, %63 ]
  %72 = insertvalue { i8, double } undef, i8 %70, 0
  %73 = insertvalue { i8, double } %72, double %71, 1
  ret { i8, double } %73
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink32CSSMathExpressionBinaryOperation15ComputeLengthPxERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSMathExpressionBinaryOperation"* nocapture readonly, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::CSSMathExpressionNode"* %4 to double (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)***
  %10 = load double (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)**, double (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*** %9, align 8
  %11 = getelementptr inbounds double (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, double (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %10, i64 5
  %12 = load double (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, double (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %11, align 8
  %13 = tail call double %12(%"class.blink::CSSMathExpressionNode"* %4, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #13
  br label %20

14:                                               ; preds = %2
  %15 = bitcast %"class.blink::CSSMathExpressionNode"* %4 to double (%"class.blink::CSSMathExpressionNode"*)***
  %16 = load double (%"class.blink::CSSMathExpressionNode"*)**, double (%"class.blink::CSSMathExpressionNode"*)*** %15, align 8
  %17 = getelementptr inbounds double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %16, i64 4
  %18 = load double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %17, align 8
  %19 = tail call double %18(%"class.blink::CSSMathExpressionNode"* %4) #13
  br label %20

20:                                               ; preds = %14, %8
  %21 = phi double [ %13, %8 ], [ %19, %14 ]
  %22 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %23, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %33

27:                                               ; preds = %20
  %28 = bitcast %"class.blink::CSSMathExpressionNode"* %23 to double (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)***
  %29 = load double (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)**, double (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*** %28, align 8
  %30 = getelementptr inbounds double (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, double (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %29, i64 5
  %31 = load double (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, double (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %30, align 8
  %32 = tail call double %31(%"class.blink::CSSMathExpressionNode"* %23, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #13
  br label %39

33:                                               ; preds = %20
  %34 = bitcast %"class.blink::CSSMathExpressionNode"* %23 to double (%"class.blink::CSSMathExpressionNode"*)***
  %35 = load double (%"class.blink::CSSMathExpressionNode"*)**, double (%"class.blink::CSSMathExpressionNode"*)*** %34, align 8
  %36 = getelementptr inbounds double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %35, i64 4
  %37 = load double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %36, align 8
  %38 = tail call double %37(%"class.blink::CSSMathExpressionNode"* %23) #13
  br label %39

39:                                               ; preds = %33, %27
  %40 = phi double [ %32, %27 ], [ %38, %33 ]
  %41 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 4
  %42 = load i32, i32* %41, align 8
  switch i32 %42, label %83 [
    i32 0, label %43
    i32 1, label %52
    i32 2, label %61
    i32 3, label %70
  ]

43:                                               ; preds = %39
  %44 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %45 = icmp eq i8 %44, 0
  %46 = fadd double %21, %40
  br i1 %45, label %47, label %83

47:                                               ; preds = %43
  %48 = fcmp ult double %46, 0x7FEFFFFFFFFFFFFF
  %49 = fcmp ole double %46, 0xFFEFFFFFFFFFFFFF
  %50 = select i1 %49, double 0xFFEFFFFFFFFFFFFF, double %46
  %51 = select i1 %48, double %50, double 0x7FEFFFFFFFFFFFFF
  br label %83

52:                                               ; preds = %39
  %53 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %54 = icmp eq i8 %53, 0
  %55 = fsub double %21, %40
  br i1 %54, label %56, label %83

56:                                               ; preds = %52
  %57 = fcmp ult double %55, 0x7FEFFFFFFFFFFFFF
  %58 = fcmp ole double %55, 0xFFEFFFFFFFFFFFFF
  %59 = select i1 %58, double 0xFFEFFFFFFFFFFFFF, double %55
  %60 = select i1 %57, double %59, double 0x7FEFFFFFFFFFFFFF
  br label %83

61:                                               ; preds = %39
  %62 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %63 = icmp eq i8 %62, 0
  %64 = fmul double %21, %40
  br i1 %63, label %65, label %83

65:                                               ; preds = %61
  %66 = fcmp ult double %64, 0x7FEFFFFFFFFFFFFF
  %67 = fcmp ole double %64, 0xFFEFFFFFFFFFFFFF
  %68 = select i1 %67, double 0xFFEFFFFFFFFFFFFF, double %64
  %69 = select i1 %66, double %68, double 0x7FEFFFFFFFFFFFFF
  br label %83

70:                                               ; preds = %39
  %71 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %70
  %74 = fdiv double %21, %40
  br label %83

75:                                               ; preds = %70
  %76 = fcmp une double %40, 0.000000e+00
  br i1 %76, label %77, label %83

77:                                               ; preds = %75
  %78 = fdiv double %21, %40
  %79 = fcmp ult double %78, 0x7FEFFFFFFFFFFFFF
  %80 = fcmp ole double %78, 0xFFEFFFFFFFFFFFFF
  %81 = select i1 %80, double 0xFFEFFFFFFFFFFFFF, double %78
  %82 = select i1 %79, double %81, double 0x7FEFFFFFFFFFFFFF
  br label %83

83:                                               ; preds = %39, %43, %47, %52, %56, %61, %65, %73, %75, %77
  %84 = phi double [ %74, %73 ], [ %82, %77 ], [ %69, %65 ], [ %60, %56 ], [ %51, %47 ], [ %46, %43 ], [ %55, %52 ], [ %64, %61 ], [ 0.000000e+00, %39 ], [ 0x7FF8000000000000, %75 ]
  ret double %84
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink32CSSMathExpressionBinaryOperation21AccumulateLengthArrayERNS_17CSSPrimitiveValue14CSSLengthArrayEd(%"class.blink::CSSMathExpressionBinaryOperation"* nocapture readonly, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* dereferenceable(104), double) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %87 [
    i32 0, label %6
    i32 1, label %22
    i32 2, label %39
    i32 3, label %71
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %7, align 8
  %9 = bitcast %"class.blink::CSSMathExpressionNode"* %8 to i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)***
  %10 = load i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)**, i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)*, i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)** %10, i64 6
  %12 = load i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)*, i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::CSSMathExpressionNode"* %8, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* dereferenceable(104) %1, double %2) #13
  br i1 %13, label %14, label %87

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %15, align 8
  %17 = bitcast %"class.blink::CSSMathExpressionNode"* %16 to i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)***
  %18 = load i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)**, i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)*, i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)** %18, i64 6
  %20 = load i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)*, i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.blink::CSSMathExpressionNode"* %16, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* dereferenceable(104) %1, double %2) #13
  br label %87

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %23, align 8
  %25 = bitcast %"class.blink::CSSMathExpressionNode"* %24 to i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)***
  %26 = load i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)**, i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)*, i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)** %26, i64 6
  %28 = load i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)*, i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.blink::CSSMathExpressionNode"* %24, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* dereferenceable(104) %1, double %2) #13
  br i1 %29, label %30, label %87

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %31, align 8
  %33 = fsub double -0.000000e+00, %2
  %34 = bitcast %"class.blink::CSSMathExpressionNode"* %32 to i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)***
  %35 = load i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)**, i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)*** %34, align 8
  %36 = getelementptr inbounds i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)*, i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)** %35, i64 6
  %37 = load i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)*, i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)** %36, align 8
  %38 = tail call zeroext i1 %37(%"class.blink::CSSMathExpressionNode"* %32, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* dereferenceable(104) %1, double %33) #13
  br label %87

39:                                               ; preds = %3
  %40 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 2, i32 0, i32 0
  %41 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %41, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %45, align 8
  br i1 %44, label %47, label %59

47:                                               ; preds = %39
  %48 = bitcast %"class.blink::CSSMathExpressionNode"* %41 to double (%"class.blink::CSSMathExpressionNode"*)***
  %49 = load double (%"class.blink::CSSMathExpressionNode"*)**, double (%"class.blink::CSSMathExpressionNode"*)*** %48, align 8
  %50 = getelementptr inbounds double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %49, i64 4
  %51 = load double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %50, align 8
  %52 = tail call double %51(%"class.blink::CSSMathExpressionNode"* %41) #13
  %53 = fmul double %52, %2
  %54 = bitcast %"class.blink::CSSMathExpressionNode"* %46 to i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)***
  %55 = load i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)**, i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)*** %54, align 8
  %56 = getelementptr inbounds i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)*, i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)** %55, i64 6
  %57 = load i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)*, i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.blink::CSSMathExpressionNode"* %46, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* dereferenceable(104) %1, double %53) #13
  br label %87

59:                                               ; preds = %39
  %60 = bitcast %"class.blink::CSSMathExpressionNode"* %46 to double (%"class.blink::CSSMathExpressionNode"*)***
  %61 = load double (%"class.blink::CSSMathExpressionNode"*)**, double (%"class.blink::CSSMathExpressionNode"*)*** %60, align 8
  %62 = getelementptr inbounds double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %61, i64 4
  %63 = load double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %62, align 8
  %64 = tail call double %63(%"class.blink::CSSMathExpressionNode"* %46) #13
  %65 = fmul double %64, %2
  %66 = bitcast %"class.blink::CSSMathExpressionNode"* %41 to i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)***
  %67 = load i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)**, i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)*** %66, align 8
  %68 = getelementptr inbounds i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)*, i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)** %67, i64 6
  %69 = load i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)*, i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)** %68, align 8
  %70 = tail call zeroext i1 %69(%"class.blink::CSSMathExpressionNode"* %41, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* dereferenceable(104) %1, double %65) #13
  br label %87

71:                                               ; preds = %3
  %72 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 2, i32 0, i32 0
  %73 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 3, i32 0, i32 0
  %75 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %74, align 8
  %76 = bitcast %"class.blink::CSSMathExpressionNode"* %75 to double (%"class.blink::CSSMathExpressionNode"*)***
  %77 = load double (%"class.blink::CSSMathExpressionNode"*)**, double (%"class.blink::CSSMathExpressionNode"*)*** %76, align 8
  %78 = getelementptr inbounds double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %77, i64 4
  %79 = load double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %78, align 8
  %80 = tail call double %79(%"class.blink::CSSMathExpressionNode"* %75) #13
  %81 = fdiv double %2, %80
  %82 = bitcast %"class.blink::CSSMathExpressionNode"* %73 to i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)***
  %83 = load i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)**, i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)*** %82, align 8
  %84 = getelementptr inbounds i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)*, i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)** %83, i64 6
  %85 = load i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)*, i1 (%"class.blink::CSSMathExpressionNode"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*, double)** %84, align 8
  %86 = tail call zeroext i1 %85(%"class.blink::CSSMathExpressionNode"* %73, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* dereferenceable(104) %1, double %81) #13
  br label %87

87:                                               ; preds = %3, %30, %22, %14, %6, %71, %59, %47
  %88 = phi i1 [ %86, %71 ], [ %58, %47 ], [ %70, %59 ], [ false, %6 ], [ %21, %14 ], [ false, %22 ], [ %38, %30 ], [ false, %3 ]
  ret i1 %88
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink32CSSMathExpressionBinaryOperation25AccumulateLengthUnitTypesERNSt3__16bitsetILm10EEE(%"class.blink::CSSMathExpressionBinaryOperation"* nocapture readonly, %"class.std::__1::bitset"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %3, align 8
  %5 = bitcast %"class.blink::CSSMathExpressionNode"* %4 to void (%"class.blink::CSSMathExpressionNode"*, %"class.std::__1::bitset"*)***
  %6 = load void (%"class.blink::CSSMathExpressionNode"*, %"class.std::__1::bitset"*)**, void (%"class.blink::CSSMathExpressionNode"*, %"class.std::__1::bitset"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::CSSMathExpressionNode"*, %"class.std::__1::bitset"*)*, void (%"class.blink::CSSMathExpressionNode"*, %"class.std::__1::bitset"*)** %6, i64 7
  %8 = load void (%"class.blink::CSSMathExpressionNode"*, %"class.std::__1::bitset"*)*, void (%"class.blink::CSSMathExpressionNode"*, %"class.std::__1::bitset"*)** %7, align 8
  tail call void %8(%"class.blink::CSSMathExpressionNode"* %4, %"class.std::__1::bitset"* dereferenceable(8) %1) #13
  %9 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %9, align 8
  %11 = bitcast %"class.blink::CSSMathExpressionNode"* %10 to void (%"class.blink::CSSMathExpressionNode"*, %"class.std::__1::bitset"*)***
  %12 = load void (%"class.blink::CSSMathExpressionNode"*, %"class.std::__1::bitset"*)**, void (%"class.blink::CSSMathExpressionNode"*, %"class.std::__1::bitset"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::CSSMathExpressionNode"*, %"class.std::__1::bitset"*)*, void (%"class.blink::CSSMathExpressionNode"*, %"class.std::__1::bitset"*)** %12, i64 7
  %14 = load void (%"class.blink::CSSMathExpressionNode"*, %"class.std::__1::bitset"*)*, void (%"class.blink::CSSMathExpressionNode"*, %"class.std::__1::bitset"*)** %13, align 8
  tail call void %14(%"class.blink::CSSMathExpressionNode"* %10, %"class.std::__1::bitset"* dereferenceable(8) %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink32CSSMathExpressionBinaryOperation28IsComputationallyIndependentEv(%"class.blink::CSSMathExpressionBinaryOperation"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %20 [
    i32 1, label %4
    i32 3, label %4
  ]

4:                                                ; preds = %1, %1
  %5 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %5, align 8
  %7 = bitcast %"class.blink::CSSMathExpressionNode"* %6 to i1 (%"class.blink::CSSMathExpressionNode"*)***
  %8 = load i1 (%"class.blink::CSSMathExpressionNode"*)**, i1 (%"class.blink::CSSMathExpressionNode"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %8, i64 13
  %10 = load i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::CSSMathExpressionNode"* %6) #13
  br i1 %11, label %12, label %20

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %13, align 8
  %15 = bitcast %"class.blink::CSSMathExpressionNode"* %14 to i1 (%"class.blink::CSSMathExpressionNode"*)***
  %16 = load i1 (%"class.blink::CSSMathExpressionNode"*)**, i1 (%"class.blink::CSSMathExpressionNode"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %16, i64 13
  %18 = load i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::CSSMathExpressionNode"* %14) #13
  br label %20

20:                                               ; preds = %1, %4, %12
  %21 = phi i1 [ false, %4 ], [ %19, %12 ], [ true, %1 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink32CSSMathExpressionBinaryOperation13CustomCSSTextEv(%"class.blink::CSSMathExpressionBinaryOperation"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 48, i1 false)
  %7 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %9 = bitcast %union.anon.193* %8 to i8*
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %11, align 4
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %13, align 8
  %15 = bitcast %"class.blink::CSSMathExpressionNode"* %14 to i1 (%"class.blink::CSSMathExpressionNode"*)***
  %16 = load i1 (%"class.blink::CSSMathExpressionNode"*)**, i1 (%"class.blink::CSSMathExpressionNode"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %16, i64 1
  %18 = load i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::CSSMathExpressionNode"* %14) #13
  br i1 %19, label %20, label %25

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 4
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %2, i8 zeroext 40) #13
  br label %25

25:                                               ; preds = %20, %1, %24
  %26 = phi i1 [ true, %24 ], [ false, %20 ], [ false, %1 ]
  %27 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #13
  %28 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %13, align 8
  %29 = bitcast %"class.blink::CSSMathExpressionNode"* %28 to %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)***
  %30 = load %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)** %30, i64 11
  %32 = load %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)** %31, align 8
  %33 = call %"class.WTF::StringImpl"* %32(%"class.blink::CSSMathExpressionNode"* %28) #13
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %35, label %40

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %36, align 8
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %38 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 0, i32* %39, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  br label %60

40:                                               ; preds = %25
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 1
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %46 = bitcast i8** %45 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %46, align 8
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %43, i32* %47, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %40
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %40
  %57 = phi i32 [ %55, %54 ], [ %53, %40 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #13
  br label %60

60:                                               ; preds = %35, %56, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #13
  br i1 %26, label %61, label %62

61:                                               ; preds = %60
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %2, i8 zeroext 41) #13
  br label %62

62:                                               ; preds = %61, %60
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %2, i8 zeroext 32) #13
  %63 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #13
  %64 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 4
  %65 = load i32, i32* %64, align 8
  %66 = call %"class.WTF::StringImpl"* @_ZN5blink8ToStringENS_15CSSMathOperatorE(i32 %65) #13
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %73

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %69, align 8
  %70 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %71 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 0, i32* %72, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  br label %93

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %74, align 8
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 1
  %78 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %79 = bitcast i8** %78 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %79, align 8
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %76, i32* %80, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %73
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %73
  %90 = phi i32 [ %88, %87 ], [ %86, %73 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #13
  br label %93

93:                                               ; preds = %68, %89, %92
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #13
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %2, i8 zeroext 32) #13
  %94 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 3, i32 0, i32 0
  %95 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %94, align 8
  %96 = bitcast %"class.blink::CSSMathExpressionNode"* %95 to i1 (%"class.blink::CSSMathExpressionNode"*)***
  %97 = load i1 (%"class.blink::CSSMathExpressionNode"*)**, i1 (%"class.blink::CSSMathExpressionNode"*)*** %96, align 8
  %98 = getelementptr inbounds i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %97, i64 1
  %99 = load i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %98, align 8
  %100 = call zeroext i1 %99(%"class.blink::CSSMathExpressionNode"* %95) #13
  br i1 %100, label %101, label %105

101:                                              ; preds = %93
  %102 = load i32, i32* %64, align 8
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %105, label %104

104:                                              ; preds = %101
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %2, i8 zeroext 40) #13
  br label %105

105:                                              ; preds = %101, %93, %104
  %106 = phi i1 [ true, %104 ], [ false, %101 ], [ false, %93 ]
  %107 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #13
  %108 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %94, align 8
  %109 = bitcast %"class.blink::CSSMathExpressionNode"* %108 to %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)***
  %110 = load %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)*** %109, align 8
  %111 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)** %110, i64 11
  %112 = load %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)** %111, align 8
  %113 = call %"class.WTF::StringImpl"* %112(%"class.blink::CSSMathExpressionNode"* %108) #13
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %115, label %120

115:                                              ; preds = %105
  %116 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %116, align 8
  %117 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %118 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 0, i32* %119, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  br label %140

120:                                              ; preds = %105
  %121 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %113, %"class.WTF::StringImpl"** %121, align 8
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 1
  %123 = load i32, i32* %122, align 4
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 1
  %125 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %126 = bitcast i8** %125 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %124, %"class.WTF::StringImpl"** %126, align 8
  %127 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %123, i32* %127, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = and i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  br i1 %131, label %134, label %136

134:                                              ; preds = %120
  %135 = add i32 %133, -1
  store i32 %135, i32* %132, align 4
  br label %136

136:                                              ; preds = %134, %120
  %137 = phi i32 [ %135, %134 ], [ %133, %120 ]
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %136
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #13
  br label %140

140:                                              ; preds = %115, %136, %139
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #13
  br i1 %106, label %141, label %142

141:                                              ; preds = %140
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %2, i8 zeroext 41) #13
  br label %142

142:                                              ; preds = %141, %140
  %143 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #13
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #13
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %144, null
  br i1 %145, label %159, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load atomic i32, i32* %147 monotonic, align 4
  %149 = and i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 0
  %152 = load i32, i32* %151, align 4
  br i1 %150, label %153, label %155

153:                                              ; preds = %146
  %154 = add i32 %152, -1
  store i32 %154, i32* %151, align 4
  br label %155

155:                                              ; preds = %153, %146
  %156 = phi i32 [ %154, %153 ], [ %152, %146 ]
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %155
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %144) #13
  br label %159

159:                                              ; preds = %142, %155, %158
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #13
  ret %"class.WTF::StringImpl"* %143
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #13
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #13
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #13
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #13
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #13
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink8ToStringENS_15CSSMathOperatorE(i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink32CSSMathExpressionBinaryOperationeqERKNS_21CSSMathExpressionNodeE(%"class.blink::CSSMathExpressionBinaryOperation"* nocapture readonly, %"class.blink::CSSMathExpressionNode"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::CSSMathExpressionNode"* %1 to i1 (%"class.blink::CSSMathExpressionNode"*)***
  %4 = load i1 (%"class.blink::CSSMathExpressionNode"*)**, i1 (%"class.blink::CSSMathExpressionNode"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %4, i64 1
  %6 = load i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::CSSMathExpressionNode"* %1) #13
  br i1 %7, label %8, label %49

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %1, i64 1
  %10 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %10, align 8
  %12 = bitcast %"class.blink::CSSMathExpressionNode"* %9 to %"class.blink::CSSMathExpressionNode"**
  %13 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %12, align 8
  %14 = icmp eq %"class.blink::CSSMathExpressionNode"* %11, %13
  br i1 %14, label %25, label %15

15:                                               ; preds = %8
  %16 = icmp ne %"class.blink::CSSMathExpressionNode"* %11, null
  %17 = icmp ne %"class.blink::CSSMathExpressionNode"* %13, null
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %49

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::CSSMathExpressionNode"* %11 to i1 (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*)***
  %21 = load i1 (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*)**, i1 (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*)** %21, i64 12
  %23 = load i1 (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.blink::CSSMathExpressionNode"* nonnull %11, %"class.blink::CSSMathExpressionNode"* nonnull dereferenceable(16) %13) #13
  br i1 %24, label %25, label %49

25:                                               ; preds = %8, %19
  %26 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %1, i64 1, i32 1
  %27 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 3, i32 0, i32 0
  %28 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %27, align 8
  %29 = bitcast i32* %26 to %"class.blink::CSSMathExpressionNode"**
  %30 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %29, align 8
  %31 = icmp eq %"class.blink::CSSMathExpressionNode"* %28, %30
  br i1 %31, label %42, label %32

32:                                               ; preds = %25
  %33 = icmp ne %"class.blink::CSSMathExpressionNode"* %28, null
  %34 = icmp ne %"class.blink::CSSMathExpressionNode"* %30, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %49

36:                                               ; preds = %32
  %37 = bitcast %"class.blink::CSSMathExpressionNode"* %28 to i1 (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*)***
  %38 = load i1 (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*)**, i1 (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*)*** %37, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*)** %38, i64 12
  %40 = load i1 (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*)** %39, align 8
  %41 = tail call zeroext i1 %40(%"class.blink::CSSMathExpressionNode"* nonnull %28, %"class.blink::CSSMathExpressionNode"* nonnull dereferenceable(16) %30) #13
  br i1 %41, label %42, label %49

42:                                               ; preds = %25, %36
  %43 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 4
  %44 = load i32, i32* %43, align 8
  %45 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %1, i64 2
  %46 = bitcast %"class.blink::CSSMathExpressionNode"* %45 to i32*
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %44, %47
  br label %49

49:                                               ; preds = %32, %15, %19, %36, %42, %2
  %50 = phi i1 [ false, %2 ], [ false, %36 ], [ false, %19 ], [ %48, %42 ], [ false, %15 ], [ false, %32 ]
  ret i1 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink32CSSMathExpressionBinaryOperation16ResolvedUnitTypeEv(%"class.blink::CSSMathExpressionBinaryOperation"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %40 [
    i32 0, label %41
    i32 1, label %4
    i32 2, label %4
    i32 4, label %36
    i32 5, label %37
    i32 6, label %38
    i32 3, label %39
    i32 7, label %39
  ]

4:                                                ; preds = %1, %1
  %5 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %6, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %10, align 8
  br i1 %9, label %12, label %18

12:                                               ; preds = %4
  %13 = bitcast %"class.blink::CSSMathExpressionNode"* %11 to i32 (%"class.blink::CSSMathExpressionNode"*)***
  %14 = load i32 (%"class.blink::CSSMathExpressionNode"*)**, i32 (%"class.blink::CSSMathExpressionNode"*)*** %13, align 8
  %15 = getelementptr inbounds i32 (%"class.blink::CSSMathExpressionNode"*)*, i32 (%"class.blink::CSSMathExpressionNode"*)** %14, i64 14
  %16 = load i32 (%"class.blink::CSSMathExpressionNode"*)*, i32 (%"class.blink::CSSMathExpressionNode"*)** %15, align 8
  %17 = tail call i32 %16(%"class.blink::CSSMathExpressionNode"* %11) #13
  br label %41

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %11, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 0
  %22 = bitcast %"class.blink::CSSMathExpressionNode"* %6 to i32 (%"class.blink::CSSMathExpressionNode"*)***
  %23 = load i32 (%"class.blink::CSSMathExpressionNode"*)**, i32 (%"class.blink::CSSMathExpressionNode"*)*** %22, align 8
  %24 = getelementptr inbounds i32 (%"class.blink::CSSMathExpressionNode"*)*, i32 (%"class.blink::CSSMathExpressionNode"*)** %23, i64 14
  %25 = load i32 (%"class.blink::CSSMathExpressionNode"*)*, i32 (%"class.blink::CSSMathExpressionNode"*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::CSSMathExpressionNode"* %6) #13
  br i1 %21, label %41, label %27

27:                                               ; preds = %18
  %28 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %10, align 8
  %29 = bitcast %"class.blink::CSSMathExpressionNode"* %28 to i32 (%"class.blink::CSSMathExpressionNode"*)***
  %30 = load i32 (%"class.blink::CSSMathExpressionNode"*)**, i32 (%"class.blink::CSSMathExpressionNode"*)*** %29, align 8
  %31 = getelementptr inbounds i32 (%"class.blink::CSSMathExpressionNode"*)*, i32 (%"class.blink::CSSMathExpressionNode"*)** %30, i64 14
  %32 = load i32 (%"class.blink::CSSMathExpressionNode"*)*, i32 (%"class.blink::CSSMathExpressionNode"*)** %31, align 8
  %33 = tail call i32 %32(%"class.blink::CSSMathExpressionNode"* %28) #13
  %34 = icmp eq i32 %26, %33
  %35 = select i1 %34, i32 %26, i32 0
  br label %41

36:                                               ; preds = %1
  br label %41

37:                                               ; preds = %1
  br label %41

38:                                               ; preds = %1
  br label %41

39:                                               ; preds = %1, %1
  br label %41

40:                                               ; preds = %1
  br label %41

41:                                               ; preds = %18, %1, %40, %39, %38, %37, %36, %27, %12
  %42 = phi i32 [ 0, %40 ], [ 0, %39 ], [ 25, %38 ], [ 23, %37 ], [ 19, %36 ], [ %17, %12 ], [ %35, %27 ], [ 1, %1 ], [ %26, %18 ]
  ret i32 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink32CSSMathExpressionBinaryOperation5TraceEPNS_7VisitorE(%"class.blink::CSSMathExpressionBinaryOperation"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.191"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21CSSMathExpressionNodeEE5TraceEPNS_7VisitorEPKv) #13
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::CSSMathExpressionBinaryOperation", %"class.blink::CSSMathExpressionBinaryOperation"* %0, i64 0, i32 3
  %15 = bitcast %"class.blink::Member.191"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21CSSMathExpressionNodeEE5TraceEPNS_7VisitorEPKv) #13
  br label %24

24:                                               ; preds = %13, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSMathExpressionVariadicOperation"* @_ZN5blink34CSSMathExpressionVariadicOperation6CreateEONS_10HeapVectorINS_6MemberIKNS_21CSSMathExpressionNodeEEELj0EEENS_15CSSMathOperatorE(%"class.blink::HeapVector"* nocapture dereferenceable(16), i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %41, label %12

10:                                               ; preds = %35
  %11 = icmp eq %"class.blink::Member.191"* %40, %8
  br i1 %11, label %41, label %12

12:                                               ; preds = %2, %10
  %13 = phi %"class.blink::Member.191"* [ %40, %10 ], [ %4, %2 ]
  %14 = phi i1 [ false, %10 ], [ true, %2 ]
  %15 = phi i8 [ %37, %10 ], [ -86, %2 ]
  %16 = phi i32 [ %38, %10 ], [ -1431655766, %2 ]
  br i1 %14, label %17, label %23

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %13, i64 0, i32 0, i32 0
  %19 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %19, i64 0, i32 1
  %21 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %19, i64 0, i32 2
  %22 = load i8, i8* %21, align 4, !range !2
  br label %35

23:                                               ; preds = %12
  %24 = zext i32 %16 to i64
  %25 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %13, i64 0, i32 0, i32 0
  %26 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %26, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds [7 x [7 x i32]], [7 x [7 x i32]]* @_ZN5blinkL18kAddSubtractResultE, i64 0, i64 %24, i64 %29
  %31 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %26, i64 0, i32 2
  %32 = load i8, i8* %31, align 4, !range !2
  %33 = icmp eq i8 %32, 0
  %34 = select i1 %33, i8 0, i8 %15
  br label %35

35:                                               ; preds = %23, %17
  %36 = phi i32* [ %20, %17 ], [ %30, %23 ]
  %37 = phi i8 [ %22, %17 ], [ %34, %23 ]
  %38 = load i32, i32* %36, align 4
  %39 = icmp eq i32 %38, 7
  %40 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %13, i64 1
  br i1 %39, label %86, label %10

41:                                               ; preds = %10, %2
  %42 = phi i32 [ -1431655766, %2 ], [ %38, %10 ]
  %43 = phi i8 [ -86, %2 ], [ %37, %10 ]
  %44 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21CSSMathExpressionNodeEEEPhm(i64 40) #13
  %45 = bitcast i8* %44 to %"class.blink::CSSMathExpressionVariadicOperation"*
  %46 = bitcast i8* %44 to i32 (...)***
  %47 = getelementptr inbounds i8, i8* %44, i64 8
  %48 = bitcast i8* %47 to i32*
  store i32 %42, i32* %48, align 8
  %49 = getelementptr inbounds i8, i8* %44, i64 12
  store i8 %43, i8* %49, align 4
  %50 = getelementptr inbounds i8, i8* %44, i64 13
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds i8, i8* %44, i64 14
  store i8 1, i8* %51, align 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink34CSSMathExpressionVariadicOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %52 = getelementptr inbounds i8, i8* %44, i64 16
  %53 = getelementptr inbounds i8, i8* %44, i64 24
  %54 = bitcast i8* %53 to i32*
  %55 = getelementptr inbounds i8, i8* %44, i64 28
  %56 = bitcast i8* %55 to i32*
  %57 = bitcast %"class.blink::HeapVector"* %0 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false) #13
  %58 = load i64, i64* %57, align 8
  %59 = bitcast i8* %52 to i64*
  store atomic i64 0, i64* %57 monotonic, align 8
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i32, i32* %54, align 4
  %62 = load i32, i32* %60, align 4
  store i32 %62, i32* %54, align 4
  store i32 %61, i32* %60, align 4
  %63 = load i32, i32* %56, align 4
  %64 = load i32, i32* %5, align 4
  store i32 %64, i32* %56, align 4
  store i32 %63, i32* %5, align 4
  %65 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %71, label %67

67:                                               ; preds = %41
  %68 = bitcast i8* %52 to i8**
  %69 = load i8*, i8** %68, align 8
  %70 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %69) #13
  br label %71

71:                                               ; preds = %67, %41
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %71
  %75 = bitcast %"class.blink::HeapVector"* %0 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %76) #13
  br label %78

78:                                               ; preds = %71, %74
  %79 = getelementptr inbounds i8, i8* %44, i64 32
  %80 = bitcast i8* %79 to i32*
  store i32 %1, i32* %80, align 8
  %81 = getelementptr inbounds i8, i8* %44, i64 36
  store i8 0, i8* %81, align 4
  %82 = getelementptr inbounds i8, i8* %44, i64 -4
  %83 = bitcast i8* %82 to i16*
  %84 = load atomic i16, i16* %83 monotonic, align 2
  %85 = or i16 %84, 1
  store atomic i16 %85, i16* %83 release, align 2
  br label %86

86:                                               ; preds = %35, %78
  %87 = phi %"class.blink::CSSMathExpressionVariadicOperation"* [ %45, %78 ], [ null, %35 ]
  ret %"class.blink::CSSMathExpressionVariadicOperation"* %87
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink34CSSMathExpressionVariadicOperationC2ENS_19CalculationCategoryEbONS_10HeapVectorINS_6MemberIKNS_21CSSMathExpressionNodeEEELj0EEENS_15CSSMathOperatorE(%"class.blink::CSSMathExpressionVariadicOperation"* nocapture, i32, i1 zeroext, %"class.blink::HeapVector"* nocapture dereferenceable(16), i32) unnamed_addr #0 align 2 {
  %6 = zext i1 %2 to i8
  %7 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 0, i32 1
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 0, i32 2
  store i8 %6, i8* %9, align 4
  %10 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 0, i32 3
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 0, i32 4
  store i8 1, i8* %11, align 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink34CSSMathExpressionVariadicOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %12 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %15 = bitcast %"class.blink::HeapVector"* %3 to i64*
  %16 = bitcast %"class.blink::HeapVector"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #13
  %17 = load i64, i64* %15, align 8
  %18 = bitcast %"class.blink::HeapVector"* %12 to i64*
  store atomic i64 0, i64* %15 monotonic, align 8
  store atomic i64 %17, i64* %18 monotonic, align 8
  %19 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %13, align 4
  %21 = load i32, i32* %19, align 4
  store i32 %21, i32* %13, align 4
  store i32 %20, i32* %19, align 4
  %22 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %14, align 4
  %24 = load i32, i32* %22, align 4
  store i32 %24, i32* %14, align 4
  store i32 %23, i32* %22, align 4
  %25 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %5
  %28 = bitcast %"class.blink::HeapVector"* %12 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %29) #13
  br label %31

31:                                               ; preds = %27, %5
  %32 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %31
  %35 = bitcast %"class.blink::HeapVector"* %3 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %36) #13
  br label %38

38:                                               ; preds = %31, %34
  %39 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 3
  store i32 %4, i32* %39, align 8
  %40 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 4
  store i8 0, i8* %40, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink34CSSMathExpressionVariadicOperation5TraceEPNS_7VisitorE(%"class.blink::CSSMathExpressionVariadicOperation"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::HeapVector"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast %"class.blink::HeapVector"* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #13
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_21CSSMathExpressionNodeEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv) #13
  br label %18

18:                                               ; preds = %2, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink34CSSMathExpressionVariadicOperation6IsZeroEv(%"class.blink::CSSMathExpressionVariadicOperation"*) unnamed_addr #0 align 2 {
  %2 = tail call { i8, double } @_ZNK5blink34CSSMathExpressionVariadicOperation27ComputeValueInCanonicalUnitEv(%"class.blink::CSSMathExpressionVariadicOperation"* %0)
  %3 = extractvalue { i8, double } %2, 0
  %4 = extractvalue { i8, double } %2, 1
  %5 = icmp ne i8 %3, 0
  %6 = fcmp oeq double %4, 0.000000e+00
  %7 = and i1 %6, %5
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8, double } @_ZNK5blink34CSSMathExpressionVariadicOperation27ComputeValueInCanonicalUnitEv(%"class.blink::CSSMathExpressionVariadicOperation"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.base::CheckedContiguousIterator", align 8
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 2, i32 0
  %6 = tail call dereferenceable(8) %"class.blink::Member.191"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.206"* %5, i32 0) #13
  %7 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %7, align 8
  %9 = bitcast %"class.blink::CSSMathExpressionNode"* %8 to { i8, double } (%"class.blink::CSSMathExpressionNode"*)***
  %10 = load { i8, double } (%"class.blink::CSSMathExpressionNode"*)**, { i8, double } (%"class.blink::CSSMathExpressionNode"*)*** %9, align 8
  %11 = getelementptr inbounds { i8, double } (%"class.blink::CSSMathExpressionNode"*)*, { i8, double } (%"class.blink::CSSMathExpressionNode"*)** %10, i64 10
  %12 = load { i8, double } (%"class.blink::CSSMathExpressionNode"*)*, { i8, double } (%"class.blink::CSSMathExpressionNode"*)** %11, align 8
  %13 = tail call { i8, double } %12(%"class.blink::CSSMathExpressionNode"* %8) #13
  %14 = extractvalue { i8, double } %13, 0
  %15 = extractvalue { i8, double } %13, 1
  %16 = icmp eq i8 %14, 0
  br i1 %16, label %76, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %19, i64 1
  %21 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = shl nuw nsw i64 %23, 3
  %25 = add nsw i64 %24, -8
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i32 %22, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %17
  %29 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i64 0, i64 0), i32 297, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0)) #13
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  br label %31

31:                                               ; preds = %17, %28
  %32 = bitcast %"class.base::CheckedContiguousIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #13
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %3, i64 0, i32 1
  %34 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %20, i64 %26
  %35 = bitcast %"class.base::CheckedContiguousIterator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEC2EPS6_S8_S8_(%"class.base::CheckedContiguousIterator"* nonnull %3, %"class.blink::Member.191"* %20, %"class.blink::Member.191"* %20, %"class.blink::Member.191"* %34) #13
  %36 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #13
  %37 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %4, i64 0, i32 1
  %38 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEC2EPS6_S8_S8_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.blink::Member.191"* %20, %"class.blink::Member.191"* %34, %"class.blink::Member.191"* %34) #13
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEE15CheckComparableERKS7_(%"class.base::CheckedContiguousIterator"* nonnull %3, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %4) #13
  %39 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %33, align 8
  %40 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %37, align 8
  %41 = icmp eq %"class.blink::Member.191"* %39, %40
  br i1 %41, label %73, label %42

42:                                               ; preds = %31
  %43 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 3
  br label %44

44:                                               ; preds = %42, %67
  %45 = phi double [ %15, %42 ], [ %68, %67 ]
  %46 = call dereferenceable(8) %"class.blink::Member.191"* @_ZNK4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %3)
  %47 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %47, align 8
  %49 = bitcast %"class.blink::CSSMathExpressionNode"* %48 to { i8, double } (%"class.blink::CSSMathExpressionNode"*)***
  %50 = load { i8, double } (%"class.blink::CSSMathExpressionNode"*)**, { i8, double } (%"class.blink::CSSMathExpressionNode"*)*** %49, align 8
  %51 = getelementptr inbounds { i8, double } (%"class.blink::CSSMathExpressionNode"*)*, { i8, double } (%"class.blink::CSSMathExpressionNode"*)** %50, i64 10
  %52 = load { i8, double } (%"class.blink::CSSMathExpressionNode"*)*, { i8, double } (%"class.blink::CSSMathExpressionNode"*)** %51, align 8
  %53 = call { i8, double } %52(%"class.blink::CSSMathExpressionNode"* %48) #13
  %54 = extractvalue { i8, double } %53, 0
  %55 = extractvalue { i8, double } %53, 1
  %56 = icmp eq i8 %54, 0
  br i1 %56, label %73, label %57

57:                                               ; preds = %44
  %58 = fcmp uno double %45, %55
  br i1 %58, label %67, label %59

59:                                               ; preds = %57
  %60 = load i32, i32* %43, align 8
  switch i32 %60, label %67 [
    i32 4, label %61
    i32 5, label %64
  ]

61:                                               ; preds = %59
  %62 = fcmp olt double %55, %45
  %63 = select i1 %62, double %55, double %45
  br label %67

64:                                               ; preds = %59
  %65 = fcmp olt double %45, %55
  %66 = select i1 %65, double %55, double %45
  br label %67

67:                                               ; preds = %64, %61, %59, %57
  %68 = phi double [ %66, %64 ], [ %63, %61 ], [ 0.000000e+00, %59 ], [ 0x7FF8000000000000, %57 ]
  %69 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %3)
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEE15CheckComparableERKS7_(%"class.base::CheckedContiguousIterator"* nonnull %3, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %4) #13
  %70 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %33, align 8
  %71 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %37, align 8
  %72 = icmp eq %"class.blink::Member.191"* %70, %71
  br i1 %72, label %73, label %44

73:                                               ; preds = %67, %44, %31
  %74 = phi i8 [ 1, %31 ], [ 1, %67 ], [ 0, %44 ]
  %75 = phi double [ %15, %31 ], [ %68, %67 ], [ %45, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #13
  br label %76

76:                                               ; preds = %73, %1
  %77 = phi i8 [ 0, %1 ], [ %74, %73 ]
  %78 = phi double [ undef, %1 ], [ %75, %73 ]
  %79 = insertvalue { i8, double } undef, i8 %77, 0
  %80 = insertvalue { i8, double } %79, double %78, 1
  ret { i8, double } %80
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden double @_ZNK5blink34CSSMathExpressionVariadicOperation14EvaluateBinaryEdd(%"class.blink::CSSMathExpressionVariadicOperation"* nocapture readonly, double, double) local_unnamed_addr #5 align 2 {
  %4 = fcmp uno double %1, %2
  br i1 %4, label %14, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %14 [
    i32 4, label %8
    i32 5, label %11
  ]

8:                                                ; preds = %5
  %9 = fcmp olt double %2, %1
  %10 = select i1 %9, double %2, double %1
  br label %14

11:                                               ; preds = %5
  %12 = fcmp olt double %1, %2
  %13 = select i1 %12, double %2, double %1
  br label %14

14:                                               ; preds = %3, %5, %11, %8
  %15 = phi double [ %13, %11 ], [ %10, %8 ], [ 0.000000e+00, %5 ], [ 0x7FF8000000000000, %3 ]
  ret double %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.191"* @_ZNK4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %7, align 8
  %11 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %8, align 8
  %12 = icmp eq %"class.blink::Member.191"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::Member.191"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS8_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS8_13basic_ostreamIcNS8_11char_traitsIcEEEEPKvE_8__invokeESN_SP_) #13
  %17 = bitcast %"class.blink::Member.191"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS8_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS8_13basic_ostreamIcNS8_11char_traitsIcEEEEPKvE_8__invokeESN_SP_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.11, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %26 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %7, align 8
  ret %"class.blink::Member.191"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %7, align 8
  %11 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %8, align 8
  %12 = icmp eq %"class.blink::Member.191"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::Member.191"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS8_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS8_13basic_ostreamIcNS8_11char_traitsIcEEEEPKvE_8__invokeESN_SP_) #13
  %17 = bitcast %"class.blink::Member.191"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS8_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS8_13basic_ostreamIcNS8_11char_traitsIcEEEEPKvE_8__invokeESN_SP_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.11, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %26 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %7, align 8
  %27 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %26, i64 1
  store %"class.blink::Member.191"* %27, %"class.blink::Member.191"** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink34CSSMathExpressionVariadicOperation11DoubleValueEv(%"class.blink::CSSMathExpressionVariadicOperation"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.base::CheckedContiguousIterator", align 8
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 2, i32 0
  %6 = tail call dereferenceable(8) %"class.blink::Member.191"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.206"* %5, i32 0) #13
  %7 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %7, align 8
  %9 = bitcast %"class.blink::CSSMathExpressionNode"* %8 to double (%"class.blink::CSSMathExpressionNode"*)***
  %10 = load double (%"class.blink::CSSMathExpressionNode"*)**, double (%"class.blink::CSSMathExpressionNode"*)*** %9, align 8
  %11 = getelementptr inbounds double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %10, i64 4
  %12 = load double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %11, align 8
  %13 = tail call double %12(%"class.blink::CSSMathExpressionNode"* %8) #13
  %14 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %15, i64 1
  %17 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = shl nuw nsw i64 %19, 3
  %21 = add nsw i64 %20, -8
  %22 = ashr exact i64 %21, 3
  %23 = icmp eq i32 %18, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %1
  %25 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i64 0, i64 0), i32 297, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0)) #13
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #13
  br label %27

27:                                               ; preds = %1, %24
  %28 = bitcast %"class.base::CheckedContiguousIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #13
  %29 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %3, i64 0, i32 1
  %30 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %16, i64 %22
  %31 = bitcast %"class.base::CheckedContiguousIterator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEC2EPS6_S8_S8_(%"class.base::CheckedContiguousIterator"* nonnull %3, %"class.blink::Member.191"* %16, %"class.blink::Member.191"* %16, %"class.blink::Member.191"* %30) #13
  %32 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #13
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %4, i64 0, i32 1
  %34 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEC2EPS6_S8_S8_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.blink::Member.191"* %16, %"class.blink::Member.191"* %30, %"class.blink::Member.191"* %30) #13
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEE15CheckComparableERKS7_(%"class.base::CheckedContiguousIterator"* nonnull %3, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %4) #13
  %35 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %29, align 8
  %36 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %33, align 8
  %37 = icmp eq %"class.blink::Member.191"* %35, %36
  br i1 %37, label %40, label %38

38:                                               ; preds = %27
  %39 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 3
  br label %42

40:                                               ; preds = %61, %27
  %41 = phi double [ %13, %27 ], [ %62, %61 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #13
  ret double %41

42:                                               ; preds = %38, %61
  %43 = phi double [ %13, %38 ], [ %62, %61 ]
  %44 = call dereferenceable(8) %"class.blink::Member.191"* @_ZNK4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %3)
  %45 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %44, i64 0, i32 0, i32 0
  %46 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %45, align 8
  %47 = bitcast %"class.blink::CSSMathExpressionNode"* %46 to double (%"class.blink::CSSMathExpressionNode"*)***
  %48 = load double (%"class.blink::CSSMathExpressionNode"*)**, double (%"class.blink::CSSMathExpressionNode"*)*** %47, align 8
  %49 = getelementptr inbounds double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %48, i64 4
  %50 = load double (%"class.blink::CSSMathExpressionNode"*)*, double (%"class.blink::CSSMathExpressionNode"*)** %49, align 8
  %51 = call double %50(%"class.blink::CSSMathExpressionNode"* %46) #13
  %52 = fcmp uno double %43, %51
  br i1 %52, label %61, label %53

53:                                               ; preds = %42
  %54 = load i32, i32* %39, align 8
  switch i32 %54, label %61 [
    i32 4, label %55
    i32 5, label %58
  ]

55:                                               ; preds = %53
  %56 = fcmp olt double %51, %43
  %57 = select i1 %56, double %51, double %43
  br label %61

58:                                               ; preds = %53
  %59 = fcmp olt double %43, %51
  %60 = select i1 %59, double %51, double %43
  br label %61

61:                                               ; preds = %42, %53, %55, %58
  %62 = phi double [ %60, %58 ], [ %57, %55 ], [ 0.000000e+00, %53 ], [ 0x7FF8000000000000, %42 ]
  %63 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %3)
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEE15CheckComparableERKS7_(%"class.base::CheckedContiguousIterator"* nonnull %3, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %4) #13
  %64 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %29, align 8
  %65 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %33, align 8
  %66 = icmp eq %"class.blink::Member.191"* %64, %65
  br i1 %66, label %40, label %42
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink34CSSMathExpressionVariadicOperation15ComputeLengthPxERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSMathExpressionVariadicOperation"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 2, i32 0
  %7 = tail call dereferenceable(8) %"class.blink::Member.191"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.206"* %6, i32 0) #13
  %8 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %8, align 8
  %10 = bitcast %"class.blink::CSSMathExpressionNode"* %9 to double (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)***
  %11 = load double (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)**, double (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*** %10, align 8
  %12 = getelementptr inbounds double (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, double (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %11, i64 5
  %13 = load double (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, double (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %12, align 8
  %14 = tail call double %13(%"class.blink::CSSMathExpressionNode"* %9, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #13
  %15 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %16, i64 1
  %18 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  %22 = add nsw i64 %21, -8
  %23 = ashr exact i64 %22, 3
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %2
  %26 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i64 0, i64 0), i32 297, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0)) #13
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #13
  br label %28

28:                                               ; preds = %2, %25
  %29 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #13
  %30 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %17, i64 %23
  %32 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEC2EPS6_S8_S8_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.blink::Member.191"* %17, %"class.blink::Member.191"* %17, %"class.blink::Member.191"* %31) #13
  %33 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #13
  %34 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %5, i64 0, i32 1
  %35 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEC2EPS6_S8_S8_(%"class.base::CheckedContiguousIterator"* nonnull %5, %"class.blink::Member.191"* %17, %"class.blink::Member.191"* %31, %"class.blink::Member.191"* %31) #13
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEE15CheckComparableERKS7_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %5) #13
  %36 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %30, align 8
  %37 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %34, align 8
  %38 = icmp eq %"class.blink::Member.191"* %36, %37
  br i1 %38, label %41, label %39

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 3
  br label %43

41:                                               ; preds = %62, %28
  %42 = phi double [ %14, %28 ], [ %63, %62 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #13
  ret double %42

43:                                               ; preds = %39, %62
  %44 = phi double [ %14, %39 ], [ %63, %62 ]
  %45 = call dereferenceable(8) %"class.blink::Member.191"* @_ZNK4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %4)
  %46 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %46, align 8
  %48 = bitcast %"class.blink::CSSMathExpressionNode"* %47 to double (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)***
  %49 = load double (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)**, double (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*** %48, align 8
  %50 = getelementptr inbounds double (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, double (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %49, i64 5
  %51 = load double (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, double (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %50, align 8
  %52 = call double %51(%"class.blink::CSSMathExpressionNode"* %47, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #13
  %53 = fcmp uno double %44, %52
  br i1 %53, label %62, label %54

54:                                               ; preds = %43
  %55 = load i32, i32* %40, align 8
  switch i32 %55, label %62 [
    i32 4, label %56
    i32 5, label %59
  ]

56:                                               ; preds = %54
  %57 = fcmp olt double %52, %44
  %58 = select i1 %57, double %52, double %44
  br label %62

59:                                               ; preds = %54
  %60 = fcmp olt double %44, %52
  %61 = select i1 %60, double %52, double %44
  br label %62

62:                                               ; preds = %43, %54, %56, %59
  %63 = phi double [ %61, %59 ], [ %58, %56 ], [ 0.000000e+00, %54 ], [ 0x7FF8000000000000, %43 ]
  %64 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %4)
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEE15CheckComparableERKS7_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %5) #13
  %65 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %30, align 8
  %66 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %34, align 8
  %67 = icmp eq %"class.blink::Member.191"* %65, %66
  br i1 %67, label %41, label %43
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink34CSSMathExpressionVariadicOperation14CSSTextAsClampEv(%"class.blink::CSSMathExpressionVariadicOperation"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 2, i32 0
  %11 = tail call dereferenceable(8) %"class.blink::Member.191"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.206"* %10, i32 1) #13
  %12 = bitcast %"class.blink::Member.191"* %11 to %"class.blink::CSSMathExpressionVariadicOperation"**
  %13 = load %"class.blink::CSSMathExpressionVariadicOperation"*, %"class.blink::CSSMathExpressionVariadicOperation"** %12, align 8
  %14 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 48, i1 false)
  %15 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %17 = bitcast %union.anon.193* %16 to i8*
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %19, align 4
  %20 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %20, align 1
  %21 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #13
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %23 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8** %24, align 8
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 6, i32* %25, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #13
  %26 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #13
  %27 = call dereferenceable(8) %"class.blink::Member.191"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.206"* %10, i32 0) #13
  %28 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %28, align 8
  %30 = bitcast %"class.blink::CSSMathExpressionNode"* %29 to %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)***
  %31 = load %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)*** %30, align 8
  %32 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)** %31, i64 11
  %33 = load %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)** %32, align 8
  %34 = call %"class.WTF::StringImpl"* %33(%"class.blink::CSSMathExpressionNode"* %29) #13
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %41

36:                                               ; preds = %1
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %37, align 8
  %38 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %39 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 0, i32* %40, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  br label %61

41:                                               ; preds = %1
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %42, align 8
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %47 = bitcast i8** %46 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %47, align 8
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %44, i32* %48, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %41
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %41
  %58 = phi i32 [ %56, %55 ], [ %54, %41 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #13
  br label %61

61:                                               ; preds = %36, %57, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #13
  %62 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #13
  %63 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %64 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8** %65, align 8
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 2, i32* %66, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #13
  %67 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #13
  %68 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %13, i64 0, i32 2, i32 0
  %69 = call dereferenceable(8) %"class.blink::Member.191"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.206"* %68, i32 0) #13
  %70 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %69, i64 0, i32 0, i32 0
  %71 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %70, align 8
  %72 = bitcast %"class.blink::CSSMathExpressionNode"* %71 to %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)***
  %73 = load %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)*** %72, align 8
  %74 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)** %73, i64 11
  %75 = load %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)** %74, align 8
  %76 = call %"class.WTF::StringImpl"* %75(%"class.blink::CSSMathExpressionNode"* %71) #13
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %78, label %83

78:                                               ; preds = %61
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %79, align 8
  %80 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %81 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 0, i32* %82, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  br label %103

83:                                               ; preds = %61
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"** %84, align 8
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 1
  %88 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %89 = bitcast i8** %88 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %87, %"class.WTF::StringImpl"** %89, align 8
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %86, i32* %90, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %83
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %83
  %100 = phi i32 [ %98, %97 ], [ %96, %83 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #13
  br label %103

103:                                              ; preds = %78, %99, %102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #13
  %104 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #13
  %105 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %106 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8** %107, align 8
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 2, i32* %108, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #13
  %109 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #13
  %110 = call dereferenceable(8) %"class.blink::Member.191"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.206"* %68, i32 1) #13
  %111 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %110, i64 0, i32 0, i32 0
  %112 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %111, align 8
  %113 = bitcast %"class.blink::CSSMathExpressionNode"* %112 to %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)***
  %114 = load %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)*** %113, align 8
  %115 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)** %114, i64 11
  %116 = load %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)** %115, align 8
  %117 = call %"class.WTF::StringImpl"* %116(%"class.blink::CSSMathExpressionNode"* %112) #13
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %119, label %124

119:                                              ; preds = %103
  %120 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %120, align 8
  %121 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %122 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 0, i32* %123, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  br label %144

124:                                              ; preds = %103
  %125 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %117, %"class.WTF::StringImpl"** %125, align 8
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 1
  %129 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %130 = bitcast i8** %129 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %128, %"class.WTF::StringImpl"** %130, align 8
  %131 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %127, i32* %131, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  br i1 %135, label %138, label %140

138:                                              ; preds = %124
  %139 = add i32 %137, -1
  store i32 %139, i32* %136, align 4
  br label %140

140:                                              ; preds = %138, %124
  %141 = phi i32 [ %139, %138 ], [ %137, %124 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #13
  br label %144

144:                                              ; preds = %119, %140, %143
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #13
  %145 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %145) #13
  %146 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %147 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %146, i64* %147, align 8
  %148 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i8** %148, align 8
  %149 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 1, i32* %149, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %145) #13
  %150 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #13
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #13
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %152, label %166, label %153

153:                                              ; preds = %144
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 0
  %159 = load i32, i32* %158, align 4
  br i1 %157, label %160, label %162

160:                                              ; preds = %153
  %161 = add i32 %159, -1
  store i32 %161, i32* %158, align 4
  br label %162

162:                                              ; preds = %160, %153
  %163 = phi i32 [ %161, %160 ], [ %159, %153 ]
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %166

165:                                              ; preds = %162
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %151) #13
  br label %166

166:                                              ; preds = %144, %162, %165
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #13
  ret %"class.WTF::StringImpl"* %150
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink34CSSMathExpressionVariadicOperation13CustomCSSTextEv(%"class.blink::CSSMathExpressionVariadicOperation"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.WTF::StringBuilder", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.base::CheckedContiguousIterator", align 8
  %7 = alloca %"class.base::CheckedContiguousIterator", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 4
  %11 = load i8, i8* %10, align 4, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %1
  %14 = tail call %"class.WTF::StringImpl"* @_ZNK5blink34CSSMathExpressionVariadicOperation14CSSTextAsClampEv(%"class.blink::CSSMathExpressionVariadicOperation"* %0)
  br label %178

15:                                               ; preds = %1
  %16 = bitcast %"class.WTF::StringBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %16) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 48, i1 false)
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %18 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 1
  %19 = bitcast %union.anon.193* %18 to i8*
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 2
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 3
  store i8 1, i8* %21, align 4
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 4
  store i8 0, i8* %22, align 1
  %23 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #13
  %24 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 3
  %25 = load i32, i32* %24, align 8
  %26 = tail call %"class.WTF::StringImpl"* @_ZN5blink8ToStringENS_15CSSMathOperatorE(i32 %25) #13
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %28, label %33

28:                                               ; preds = %15
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %29, align 8
  %30 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %31 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 0, i32* %32, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  br label %53

33:                                               ; preds = %15
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 1
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %39 = bitcast i8** %38 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %39, align 8
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %36, i32* %40, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %33
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %33
  %50 = phi i32 [ %48, %47 ], [ %46, %33 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #13
  br label %53

53:                                               ; preds = %28, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #13
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %3, i8 zeroext 40) #13
  %54 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #13
  %55 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 2, i32 0
  %56 = call dereferenceable(8) %"class.blink::Member.191"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.206"* %55, i32 0) #13
  %57 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %56, i64 0, i32 0, i32 0
  %58 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %57, align 8
  %59 = bitcast %"class.blink::CSSMathExpressionNode"* %58 to %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)***
  %60 = load %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)*** %59, align 8
  %61 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)** %60, i64 11
  %62 = load %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)** %61, align 8
  %63 = call %"class.WTF::StringImpl"* %62(%"class.blink::CSSMathExpressionNode"* %58) #13
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %65, label %70

65:                                               ; preds = %53
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %66, align 8
  %67 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %68 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 0, i32* %69, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  br label %90

70:                                               ; preds = %53
  %71 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %71, align 8
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 1
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %76 = bitcast i8** %75 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %76, align 8
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %73, i32* %77, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %70
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %70
  %87 = phi i32 [ %85, %84 ], [ %83, %70 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #13
  br label %90

90:                                               ; preds = %65, %86, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #13
  %91 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %92 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %92, i64 1
  %94 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = zext i32 %95 to i64
  %97 = shl nuw nsw i64 %96, 3
  %98 = add nsw i64 %97, -8
  %99 = ashr exact i64 %98, 3
  %100 = icmp eq i32 %95, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %90
  %102 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i64 0, i64 0), i32 297, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0)) #13
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #13
  br label %104

104:                                              ; preds = %90, %101
  %105 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #13
  %106 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %6, i64 0, i32 1
  %107 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %93, i64 %99
  %108 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEC2EPS6_S8_S8_(%"class.base::CheckedContiguousIterator"* nonnull %6, %"class.blink::Member.191"* %93, %"class.blink::Member.191"* %93, %"class.blink::Member.191"* %107) #13
  %109 = bitcast %"class.base::CheckedContiguousIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #13
  %110 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %7, i64 0, i32 1
  %111 = bitcast %"class.base::CheckedContiguousIterator"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %111, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEC2EPS6_S8_S8_(%"class.base::CheckedContiguousIterator"* nonnull %7, %"class.blink::Member.191"* %93, %"class.blink::Member.191"* %107, %"class.blink::Member.191"* %107) #13
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEE15CheckComparableERKS7_(%"class.base::CheckedContiguousIterator"* nonnull %6, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %7) #13
  %112 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %106, align 8
  %113 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %110, align 8
  %114 = icmp eq %"class.blink::Member.191"* %112, %113
  br i1 %114, label %126, label %115

115:                                              ; preds = %104
  %116 = bitcast %"class.WTF::StringView"* %8 to i8*
  %117 = bitcast %"class.WTF::StringView"* %8 to i64*
  %118 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %119 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  %120 = bitcast %"class.WTF::StringView"* %9 to i8*
  %121 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  %122 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %123 = bitcast i8** %122 to %"class.WTF::StringImpl"**
  %124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  %125 = bitcast %"class.WTF::StringView"* %9 to i64*
  br label %144

126:                                              ; preds = %173, %104
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #13
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %3, i8 zeroext 41) #13
  %127 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %3) #13
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %3) #13
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #13
  br label %143

143:                                              ; preds = %126, %139, %142
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %16) #13
  br label %178

144:                                              ; preds = %115, %173
  %145 = call dereferenceable(8) %"class.blink::Member.191"* @_ZNK4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %6)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116) #13
  %146 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %146, i64* %117, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8** %118, align 8
  store i32 2, i32* %119, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %116) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #13
  %147 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %145, i64 0, i32 0, i32 0
  %148 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %147, align 8
  %149 = bitcast %"class.blink::CSSMathExpressionNode"* %148 to %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)***
  %150 = load %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)*** %149, align 8
  %151 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)** %150, i64 11
  %152 = load %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSMathExpressionNode"*)** %151, align 8
  %153 = call %"class.WTF::StringImpl"* %152(%"class.blink::CSSMathExpressionNode"* %148) #13
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %155, label %157

155:                                              ; preds = %144
  store i8* null, i8** %122, align 8
  %156 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %156, i64* %125, align 8
  store i32 0, i32* %124, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  br label %173

157:                                              ; preds = %144
  store %"class.WTF::StringImpl"* %153, %"class.WTF::StringImpl"** %121, align 8
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 1
  store %"class.WTF::StringImpl"* %160, %"class.WTF::StringImpl"** %123, align 8
  store i32 %159, i32* %124, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %166 = load i32, i32* %165, align 4
  br i1 %164, label %167, label %169

167:                                              ; preds = %157
  %168 = add i32 %166, -1
  store i32 %168, i32* %165, align 4
  br label %169

169:                                              ; preds = %167, %157
  %170 = phi i32 [ %168, %167 ], [ %166, %157 ]
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %173

172:                                              ; preds = %169
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %153) #13
  br label %173

173:                                              ; preds = %155, %169, %172
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #13
  %174 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %6)
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEE15CheckComparableERKS7_(%"class.base::CheckedContiguousIterator"* nonnull %6, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %7) #13
  %175 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %106, align 8
  %176 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %110, align 8
  %177 = icmp eq %"class.blink::Member.191"* %175, %176
  br i1 %177, label %126, label %144

178:                                              ; preds = %143, %13
  %179 = phi %"class.WTF::StringImpl"* [ %14, %13 ], [ %127, %143 ]
  ret %"class.WTF::StringImpl"* %179
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i64, float } @_ZNK5blink34CSSMathExpressionVariadicOperation18ToPixelsAndPercentERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSMathExpressionVariadicOperation"* nocapture readnone, %"class.blink::CSSToLengthConversionData"* nocapture readnone dereferenceable(56)) unnamed_addr #6 align 2 {
  ret { i64, float } { i64 0, float undef }
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CalculationExpressionNode"* @_ZNK5blink34CSSMathExpressionVariadicOperation23ToCalculationExpressionERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSMathExpressionVariadicOperation"* nocapture readonly, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.210", align 8
  %4 = alloca %class.scoped_refptr.3, align 8
  %5 = bitcast %"class.WTF::Vector.210"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.WTF::Vector.210", %"class.WTF::Vector.210"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.WTF::Vector.210", %"class.WTF::Vector.210"* %3, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.WTF::Vector.210", %"class.WTF::Vector.210"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #13
  %9 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %29, label %12, !prof !3

12:                                               ; preds = %2
  %13 = zext i32 %10 to i64
  %14 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink25CalculationExpressionNodeEEEEmm(i64 %13) #13
  %15 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %14, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink25CalculationExpressionNodeEEEEPKcv, i64 0, i64 0)) #13
  %16 = ptrtoint i8* %15 to i64
  %17 = bitcast %"class.WTF::Vector.210"* %3 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = lshr i64 %14, 3
  %19 = trunc i64 %18 to i32
  store i32 %19, i32* %7, align 8
  %20 = load i32, i32* %9, align 4
  %21 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %21, align 8
  %23 = zext i32 %20 to i64
  %24 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %22, i64 %23
  %25 = icmp eq i32 %20, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %12
  %27 = bitcast %class.scoped_refptr.3* %4 to i8*
  %28 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %4, i64 0, i32 0
  br label %71

29:                                               ; preds = %107, %2, %12
  %30 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = icmp ne i32 %31, 4
  %33 = zext i1 %32 to i32
  %34 = call %"class.blink::CalculationExpressionNode"* @_ZN5blink35CalculationExpressionComparisonNode16CreateSimplifiedEON3WTF6VectorI13scoped_refptrIKNS_25CalculationExpressionNodeEELj0ENS1_18PartitionAllocatorEEENS0_4TypeE(%"class.WTF::Vector.210"* nonnull dereferenceable(16) %3, i32 %33) #13
  %35 = load %class.scoped_refptr.3*, %class.scoped_refptr.3** %6, align 8
  %36 = icmp eq %class.scoped_refptr.3* %35, null
  br i1 %36, label %70, label %37, !prof !4

37:                                               ; preds = %29
  %38 = bitcast %class.scoped_refptr.3* %35 to i8*
  %39 = load i32, i32* %8, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %68, label %41, !prof !3

41:                                               ; preds = %37
  %42 = zext i32 %39 to i64
  %43 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %35, i64 %42
  br label %44

44:                                               ; preds = %62, %41
  %45 = phi %class.scoped_refptr.3* [ %63, %62 ], [ %35, %41 ]
  %46 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %45, i64 0, i32 0
  %47 = load %"class.blink::CalculationExpressionNode"*, %"class.blink::CalculationExpressionNode"** %46, align 8
  %48 = icmp eq %"class.blink::CalculationExpressionNode"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::CalculationExpressionNode", %"class.blink::CalculationExpressionNode"* %47, i64 0, i32 1, i32 0
  %51 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %50, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %51) #13
  %52 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %50, i64 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %62

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %50, i64 -2
  %57 = bitcast %"class.base::RefCounted"* %56 to %"class.blink::CalculationExpressionNode"*
  %58 = bitcast %"class.base::RefCounted"* %56 to void (%"class.blink::CalculationExpressionNode"*)***
  %59 = load void (%"class.blink::CalculationExpressionNode"*)**, void (%"class.blink::CalculationExpressionNode"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::CalculationExpressionNode"*)*, void (%"class.blink::CalculationExpressionNode"*)** %59, i64 8
  %61 = load void (%"class.blink::CalculationExpressionNode"*)*, void (%"class.blink::CalculationExpressionNode"*)** %60, align 8
  call void %61(%"class.blink::CalculationExpressionNode"* nonnull %57) #13
  br label %62

62:                                               ; preds = %55, %49, %44
  %63 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %45, i64 1
  %64 = icmp eq %class.scoped_refptr.3* %63, %43
  br i1 %64, label %65, label %44

65:                                               ; preds = %62
  store i32 0, i32* %8, align 4
  %66 = bitcast %"class.WTF::Vector.210"* %3 to i8**
  %67 = load i8*, i8** %66, align 8
  br label %68

68:                                               ; preds = %65, %37
  %69 = phi i8* [ %67, %65 ], [ %38, %37 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %69) #13
  store %class.scoped_refptr.3* null, %class.scoped_refptr.3** %6, align 8
  br label %70

70:                                               ; preds = %29, %68
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #13
  ret %"class.blink::CalculationExpressionNode"* %34

71:                                               ; preds = %26, %107
  %72 = phi %"class.blink::Member.191"* [ %22, %26 ], [ %108, %107 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  %73 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %73, align 8
  %75 = bitcast %"class.blink::CSSMathExpressionNode"* %74 to %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)***
  %76 = load %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)**, %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*** %75, align 8
  %77 = getelementptr inbounds %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %76, i64 8
  %78 = load %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %77, align 8
  %79 = call %"class.blink::CalculationExpressionNode"* %78(%"class.blink::CSSMathExpressionNode"* %74, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #13
  store %"class.blink::CalculationExpressionNode"* %79, %"class.blink::CalculationExpressionNode"** %28, align 8
  %80 = load i32, i32* %8, align 4
  %81 = load i32, i32* %7, align 8
  %82 = icmp eq i32 %80, %81
  br i1 %82, label %91, label %83, !prof !3

83:                                               ; preds = %71
  %84 = ptrtoint %"class.blink::CalculationExpressionNode"* %79 to i64
  %85 = load %class.scoped_refptr.3*, %class.scoped_refptr.3** %6, align 8
  %86 = zext i32 %80 to i64
  %87 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %85, i64 %86
  %88 = bitcast %class.scoped_refptr.3* %87 to i64*
  store i64 %84, i64* %88, align 8
  store %"class.blink::CalculationExpressionNode"* null, %"class.blink::CalculationExpressionNode"** %28, align 8
  %89 = load i32, i32* %8, align 4
  %90 = add i32 %89, 1
  store i32 %90, i32* %8, align 4
  br label %107

91:                                               ; preds = %71
  call void @_ZN3WTF6VectorI13scoped_refptrIKN5blink25CalculationExpressionNodeEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_(%"class.WTF::Vector.210"* nonnull %3, %class.scoped_refptr.3* nonnull dereferenceable(8) %4) #13
  %92 = load %"class.blink::CalculationExpressionNode"*, %"class.blink::CalculationExpressionNode"** %28, align 8
  %93 = icmp eq %"class.blink::CalculationExpressionNode"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.blink::CalculationExpressionNode", %"class.blink::CalculationExpressionNode"* %92, i64 0, i32 1, i32 0
  %96 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %95, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %96) #13
  %97 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %95, i64 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %107

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %95, i64 -2
  %102 = bitcast %"class.base::RefCounted"* %101 to %"class.blink::CalculationExpressionNode"*
  %103 = bitcast %"class.base::RefCounted"* %101 to void (%"class.blink::CalculationExpressionNode"*)***
  %104 = load void (%"class.blink::CalculationExpressionNode"*)**, void (%"class.blink::CalculationExpressionNode"*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.blink::CalculationExpressionNode"*)*, void (%"class.blink::CalculationExpressionNode"*)** %104, i64 8
  %106 = load void (%"class.blink::CalculationExpressionNode"*)*, void (%"class.blink::CalculationExpressionNode"*)** %105, align 8
  call void %106(%"class.blink::CalculationExpressionNode"* nonnull %102) #13
  br label %107

107:                                              ; preds = %83, %91, %94, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  %108 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %72, i64 1
  %109 = icmp eq %"class.blink::Member.191"* %108, %24
  br i1 %109, label %29, label %71
}

declare %"class.blink::CalculationExpressionNode"* @_ZN5blink35CalculationExpressionComparisonNode16CreateSimplifiedEON3WTF6VectorI13scoped_refptrIKNS_25CalculationExpressionNodeEELj0ENS1_18PartitionAllocatorEEENS0_4TypeE(%"class.WTF::Vector.210"* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink34CSSMathExpressionVariadicOperation21AccumulateLengthArrayERNS_17CSSPrimitiveValue14CSSLengthArrayEd(%"class.blink::CSSMathExpressionVariadicOperation"* nocapture readnone, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* nocapture readnone dereferenceable(104), double) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink34CSSMathExpressionVariadicOperation25AccumulateLengthUnitTypesERNSt3__16bitsetILm10EEE(%"class.blink::CSSMathExpressionVariadicOperation"* nocapture readonly, %"class.std::__1::bitset"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %11, %2
  ret void

11:                                               ; preds = %2, %11
  %12 = phi %"class.blink::Member.191"* [ %19, %11 ], [ %4, %2 ]
  %13 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %13, align 8
  %15 = bitcast %"class.blink::CSSMathExpressionNode"* %14 to void (%"class.blink::CSSMathExpressionNode"*, %"class.std::__1::bitset"*)***
  %16 = load void (%"class.blink::CSSMathExpressionNode"*, %"class.std::__1::bitset"*)**, void (%"class.blink::CSSMathExpressionNode"*, %"class.std::__1::bitset"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::CSSMathExpressionNode"*, %"class.std::__1::bitset"*)*, void (%"class.blink::CSSMathExpressionNode"*, %"class.std::__1::bitset"*)** %16, i64 7
  %18 = load void (%"class.blink::CSSMathExpressionNode"*, %"class.std::__1::bitset"*)*, void (%"class.blink::CSSMathExpressionNode"*, %"class.std::__1::bitset"*)** %17, align 8
  tail call void %18(%"class.blink::CSSMathExpressionNode"* %14, %"class.std::__1::bitset"* dereferenceable(8) %1) #13
  %19 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %12, i64 1
  %20 = icmp eq %"class.blink::Member.191"* %19, %8
  br i1 %20, label %10, label %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink34CSSMathExpressionVariadicOperation28IsComputationallyIndependentEv(%"class.blink::CSSMathExpressionVariadicOperation"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %21, label %11

9:                                                ; preds = %11
  %10 = icmp eq %"class.blink::Member.191"* %20, %7
  br i1 %10, label %21, label %11

11:                                               ; preds = %1, %9
  %12 = phi %"class.blink::Member.191"* [ %20, %9 ], [ %3, %1 ]
  %13 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %13, align 8
  %15 = bitcast %"class.blink::CSSMathExpressionNode"* %14 to i1 (%"class.blink::CSSMathExpressionNode"*)***
  %16 = load i1 (%"class.blink::CSSMathExpressionNode"*)**, i1 (%"class.blink::CSSMathExpressionNode"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %16, i64 13
  %18 = load i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::CSSMathExpressionNode"* %14) #13
  %20 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %12, i64 1
  br i1 %19, label %9, label %21

21:                                               ; preds = %11, %9, %1
  %22 = phi i1 [ true, %1 ], [ true, %9 ], [ false, %11 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink34CSSMathExpressionVariadicOperationeqERKNS_21CSSMathExpressionNodeE(%"class.blink::CSSMathExpressionVariadicOperation"*, %"class.blink::CSSMathExpressionNode"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::CSSMathExpressionNode"* %1 to i1 (%"class.blink::CSSMathExpressionNode"*)***
  %4 = load i1 (%"class.blink::CSSMathExpressionNode"*)**, i1 (%"class.blink::CSSMathExpressionNode"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %4, i64 2
  %6 = load i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::CSSMathExpressionNode"* %1) #13
  br i1 %7, label %8, label %50

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %1, i64 2
  %12 = bitcast %"class.blink::CSSMathExpressionNode"* %11 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %10, %13
  br i1 %14, label %15, label %50

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 2, i32 0
  %17 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %1, i64 1
  %20 = bitcast %"class.blink::CSSMathExpressionNode"* %19 to %"class.WTF::Vector.206"*
  %21 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %1, i64 1, i32 2
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %18, %23
  br i1 %24, label %25, label %50

25:                                               ; preds = %15
  %26 = icmp eq i32 %18, 0
  br i1 %26, label %50, label %27

27:                                               ; preds = %25, %46
  %28 = phi i32 [ %47, %46 ], [ 0, %25 ]
  %29 = tail call dereferenceable(8) %"class.blink::Member.191"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.206"* %16, i32 %28) #13
  %30 = tail call dereferenceable(8) %"class.blink::Member.191"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.206"* %20, i32 %28) #13
  %31 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %29, i64 0, i32 0, i32 0
  %32 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %30, i64 0, i32 0, i32 0
  %34 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %33, align 8
  %35 = icmp eq %"class.blink::CSSMathExpressionNode"* %32, %34
  br i1 %35, label %46, label %36

36:                                               ; preds = %27
  %37 = icmp ne %"class.blink::CSSMathExpressionNode"* %32, null
  %38 = icmp ne %"class.blink::CSSMathExpressionNode"* %34, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %50

40:                                               ; preds = %36
  %41 = bitcast %"class.blink::CSSMathExpressionNode"* %32 to i1 (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*)***
  %42 = load i1 (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*)**, i1 (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*)*** %41, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*)** %42, i64 12
  %44 = load i1 (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.blink::CSSMathExpressionNode"* nonnull %32, %"class.blink::CSSMathExpressionNode"* nonnull dereferenceable(16) %34) #13
  br i1 %45, label %46, label %50

46:                                               ; preds = %27, %40
  %47 = add nuw i32 %28, 1
  %48 = load i32, i32* %17, align 4
  %49 = icmp ult i32 %47, %48
  br i1 %49, label %27, label %50

50:                                               ; preds = %46, %40, %36, %25, %2, %15, %8
  %51 = phi i1 [ false, %8 ], [ false, %15 ], [ false, %2 ], [ true, %25 ], [ true, %46 ], [ false, %40 ], [ false, %36 ]
  ret i1 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink34CSSMathExpressionVariadicOperation16ResolvedUnitTypeEv(%"class.blink::CSSMathExpressionVariadicOperation"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.base::CheckedContiguousIterator", align 8
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %63, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 2, i32 0
  %10 = tail call dereferenceable(8) %"class.blink::Member.191"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.206"* %9, i32 0) #13
  %11 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %11, align 8
  %13 = bitcast %"class.blink::CSSMathExpressionNode"* %12 to i32 (%"class.blink::CSSMathExpressionNode"*)***
  %14 = load i32 (%"class.blink::CSSMathExpressionNode"*)**, i32 (%"class.blink::CSSMathExpressionNode"*)*** %13, align 8
  %15 = getelementptr inbounds i32 (%"class.blink::CSSMathExpressionNode"*)*, i32 (%"class.blink::CSSMathExpressionNode"*)** %14, i64 14
  %16 = load i32 (%"class.blink::CSSMathExpressionNode"*)*, i32 (%"class.blink::CSSMathExpressionNode"*)** %15, align 8
  %17 = tail call i32 %16(%"class.blink::CSSMathExpressionNode"* %12) #13
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %63, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %21, i64 1
  %23 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = shl nuw nsw i64 %25, 3
  %27 = add nsw i64 %26, -8
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i32 %24, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %19
  %31 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i64 0, i64 0), i32 297, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0)) #13
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  br label %33

33:                                               ; preds = %19, %30
  %34 = bitcast %"class.base::CheckedContiguousIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #13
  %35 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %3, i64 0, i32 1
  %36 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %22, i64 %28
  %37 = bitcast %"class.base::CheckedContiguousIterator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEC2EPS6_S8_S8_(%"class.base::CheckedContiguousIterator"* nonnull %3, %"class.blink::Member.191"* %22, %"class.blink::Member.191"* %22, %"class.blink::Member.191"* %36) #13
  %38 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #13
  %39 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %4, i64 0, i32 1
  %40 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEC2EPS6_S8_S8_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.blink::Member.191"* %22, %"class.blink::Member.191"* %36, %"class.blink::Member.191"* %36) #13
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEE15CheckComparableERKS7_(%"class.base::CheckedContiguousIterator"* nonnull %3, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %4) #13
  %41 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %35, align 8
  %42 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %39, align 8
  %43 = icmp eq %"class.blink::Member.191"* %41, %42
  br i1 %43, label %62, label %44

44:                                               ; preds = %33, %56
  %45 = call dereferenceable(8) %"class.blink::Member.191"* @_ZNK4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %3)
  %46 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %46, align 8
  %48 = bitcast %"class.blink::CSSMathExpressionNode"* %47 to i32 (%"class.blink::CSSMathExpressionNode"*)***
  %49 = load i32 (%"class.blink::CSSMathExpressionNode"*)**, i32 (%"class.blink::CSSMathExpressionNode"*)*** %48, align 8
  %50 = getelementptr inbounds i32 (%"class.blink::CSSMathExpressionNode"*)*, i32 (%"class.blink::CSSMathExpressionNode"*)** %49, i64 14
  %51 = load i32 (%"class.blink::CSSMathExpressionNode"*)*, i32 (%"class.blink::CSSMathExpressionNode"*)** %50, align 8
  %52 = call i32 %51(%"class.blink::CSSMathExpressionNode"* %47) #13
  %53 = icmp ne i32 %52, 0
  %54 = icmp eq i32 %52, %17
  %55 = and i1 %53, %54
  br i1 %55, label %56, label %61

56:                                               ; preds = %44
  %57 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %3)
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEE15CheckComparableERKS7_(%"class.base::CheckedContiguousIterator"* nonnull %3, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %4) #13
  %58 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %35, align 8
  %59 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %39, align 8
  %60 = icmp eq %"class.blink::Member.191"* %58, %59
  br i1 %60, label %62, label %44

61:                                               ; preds = %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #13
  br label %63

62:                                               ; preds = %56, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #13
  br label %63

63:                                               ; preds = %1, %8, %61, %62
  %64 = phi i32 [ %17, %62 ], [ 0, %61 ], [ 1, %1 ], [ 0, %8 ]
  ret i32 %64
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CalculationValue"* @_ZNK5blink21CSSMathExpressionNode11ToCalcValueERKNS_25CSSToLengthConversionDataENS_10ValueRangeEb(%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56), i32, i1 zeroext) local_unnamed_addr #4 align 2 {
  %5 = alloca %"class.absl::optional_internal::optional_data_dtor_base", align 8
  %6 = alloca %"class.absl::optional_internal::optional_data_dtor_base", align 8
  %7 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7)
  %8 = bitcast %"class.blink::CSSMathExpressionNode"* %0 to { i64, float } (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)***
  %9 = load { i64, float } (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)**, { i64, float } (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*** %8, align 8
  %10 = getelementptr inbounds { i64, float } (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, { i64, float } (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %9, i64 9
  %11 = load { i64, float } (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, { i64, float } (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %10, align 8
  %12 = tail call { i64, float } %11(%"class.blink::CSSMathExpressionNode"* %0, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #13
  %13 = extractvalue { i64, float } %12, 0
  %14 = extractvalue { i64, float } %12, 1
  %15 = bitcast %"class.absl::optional_internal::optional_data_dtor_base"* %5 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %5, i64 0, i32 1, i32 0, i32 1
  store float %14, float* %16, align 8
  %17 = trunc i64 %13 to i8
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %57, label %19

19:                                               ; preds = %4
  %20 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %44, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %5, i64 0, i32 1
  %24 = bitcast %union.anon* %23 to <2 x float>*
  %25 = load <2 x float>, <2 x float>* %24, align 4
  %26 = extractelement <2 x float> %25, i32 0
  %27 = extractelement <2 x float> %25, i32 1
  %28 = fadd float %26, %27
  %29 = fcmp uno float %28, 0.000000e+00
  %30 = extractelement <2 x float> %25, i32 0
  br i1 %29, label %35, label %31

31:                                               ; preds = %22
  %32 = tail call float @llvm.fabs.f32(float %27) #14
  %33 = fcmp oeq float %32, 0x7FF0000000000000
  %34 = and i1 %33, %3
  br i1 %34, label %35, label %40

35:                                               ; preds = %22, %31
  %36 = tail call float @_ZN5blink21CSSValueClampingUtils11ClampLengthEf(float 0x7FF8000000000000) #13
  %37 = tail call float @_ZN5blink21CSSValueClampingUtils11ClampLengthEf(float 0x7FF8000000000000) #13
  %38 = insertelement <2 x float> undef, float %36, i32 0
  %39 = insertelement <2 x float> %38, float %37, i32 1
  store <2 x float> %39, <2 x float>* %24, align 4
  br label %44

40:                                               ; preds = %31
  %41 = tail call float @_ZN5blink21CSSValueClampingUtils11ClampLengthEf(float %30) #13
  %42 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %5, i64 0, i32 1, i32 0, i32 0
  store float %41, float* %42, align 4
  %43 = tail call float @_ZN5blink21CSSValueClampingUtils11ClampLengthEf(float %14) #13
  store float %43, float* %16, align 8
  br label %44

44:                                               ; preds = %35, %19, %40
  %45 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %5, i64 0, i32 1
  %46 = bitcast %union.anon* %45 to i64*
  %47 = load i64, i64* %46, align 4
  %48 = tail call noalias i8* @malloc(i64 24) #13
  %49 = bitcast i8* %48 to %"class.blink::CalculationValue"*
  %50 = bitcast i8* %48 to i32*
  store i32 1, i32* %50, align 4
  %51 = getelementptr inbounds i8, i8* %48, i64 8
  %52 = bitcast i8* %51 to i64*
  store i64 %47, i64* %52, align 8
  %53 = getelementptr inbounds i8, i8* %48, i64 16
  %54 = icmp eq i32 %2, 1
  %55 = zext i1 %54 to i8
  %56 = shl nuw nsw i8 %55, 1
  store i8 %56, i8* %53, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7)
  br label %159

57:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7)
  %58 = bitcast %"class.blink::CSSMathExpressionNode"* %0 to %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)***
  %59 = load %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)**, %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*** %58, align 8
  %60 = getelementptr inbounds %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %59, i64 8
  %61 = load %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)*, %"class.blink::CalculationExpressionNode"* (%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"*)** %60, align 8
  %62 = tail call %"class.blink::CalculationExpressionNode"* %61(%"class.blink::CSSMathExpressionNode"* %0, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #13
  %63 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %137, label %65

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %66)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %66, i8* align 4 getelementptr inbounds ({ { { { i8, [3 x i8], %union.anon } } } }, { { { { i8, [3 x i8], %union.anon } } } }* @__const._ZNK5blink21CSSMathExpressionNode11ToCalcValueERKNS_25CSSToLengthConversionDataENS_10ValueRangeEb.evaluated_value, i64 0, i32 0, i32 0, i32 0, i32 0), i64 12, i1 false)
  %67 = icmp eq %"class.blink::CalculationExpressionNode"* %62, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.blink::CalculationExpressionNode", %"class.blink::CalculationExpressionNode"* %62, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %69) #13
  br label %70

70:                                               ; preds = %65, %68
  %71 = bitcast %"class.blink::CalculationExpressionNode"* %62 to float (%"class.blink::CalculationExpressionNode"*, float)***
  %72 = load float (%"class.blink::CalculationExpressionNode"*, float)**, float (%"class.blink::CalculationExpressionNode"*, float)*** %71, align 8
  %73 = load float (%"class.blink::CalculationExpressionNode"*, float)*, float (%"class.blink::CalculationExpressionNode"*, float)** %72, align 8
  %74 = tail call float %73(%"class.blink::CalculationExpressionNode"* %62, float 1.000000e+00) #13
  %75 = fcmp uno float %74, 0.000000e+00
  %76 = tail call float @llvm.fabs.f32(float %74) #14
  %77 = fcmp oeq float %76, 0x7FF0000000000000
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %85

79:                                               ; preds = %70
  %80 = tail call float @_ZN5blink21CSSValueClampingUtils11ClampLengthEf(float %74) #13
  %81 = tail call float @_ZN5blink21CSSValueClampingUtils11ClampLengthEf(float %74) #13
  %82 = insertelement <2 x float> undef, float %80, i32 0
  %83 = insertelement <2 x float> %82, float %81, i32 1
  %84 = bitcast <2 x float> %83 to i64
  br label %100

85:                                               ; preds = %70
  br i1 %3, label %86, label %100

86:                                               ; preds = %85
  %87 = load float (%"class.blink::CalculationExpressionNode"*, float)**, float (%"class.blink::CalculationExpressionNode"*, float)*** %71, align 8
  %88 = load float (%"class.blink::CalculationExpressionNode"*, float)*, float (%"class.blink::CalculationExpressionNode"*, float)** %87, align 8
  %89 = tail call float %88(%"class.blink::CalculationExpressionNode"* %62, float -1.000000e+00) #13
  %90 = fcmp uno float %89, 0.000000e+00
  %91 = tail call float @llvm.fabs.f32(float %89) #14
  %92 = fcmp oeq float %91, 0x7FF0000000000000
  %93 = or i1 %90, %92
  br i1 %93, label %94, label %100

94:                                               ; preds = %86
  %95 = tail call float @_ZN5blink21CSSValueClampingUtils11ClampLengthEf(float %89) #13
  %96 = tail call float @_ZN5blink21CSSValueClampingUtils11ClampLengthEf(float %89) #13
  %97 = insertelement <2 x float> undef, float %95, i32 0
  %98 = insertelement <2 x float> %97, float %96, i32 1
  %99 = bitcast <2 x float> %98 to i64
  br label %100

100:                                              ; preds = %94, %86, %85, %79
  %101 = phi i64 [ %84, %79 ], [ %99, %94 ], [ 0, %85 ], [ 0, %86 ]
  %102 = phi i64 [ 1, %79 ], [ 1, %94 ], [ 0, %85 ], [ 0, %86 ]
  %103 = phi float [ %81, %79 ], [ %96, %94 ], [ undef, %85 ], [ undef, %86 ]
  br i1 %67, label %117, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::CalculationExpressionNode", %"class.blink::CalculationExpressionNode"* %62, i64 0, i32 1, i32 0
  %106 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %105, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %106) #13
  %107 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %105, i64 0, i32 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %117

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %105, i64 -2
  %112 = bitcast %"class.base::RefCounted"* %111 to %"class.blink::CalculationExpressionNode"*
  %113 = bitcast %"class.base::RefCounted"* %111 to void (%"class.blink::CalculationExpressionNode"*)***
  %114 = load void (%"class.blink::CalculationExpressionNode"*)**, void (%"class.blink::CalculationExpressionNode"*)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.blink::CalculationExpressionNode"*)*, void (%"class.blink::CalculationExpressionNode"*)** %114, i64 8
  %116 = load void (%"class.blink::CalculationExpressionNode"*)*, void (%"class.blink::CalculationExpressionNode"*)** %115, align 8
  tail call void %116(%"class.blink::CalculationExpressionNode"* nonnull %112) #13
  br label %117

117:                                              ; preds = %100, %104, %110
  %118 = shl i64 %101, 32
  %119 = or i64 %118, %102
  %120 = bitcast %"class.absl::optional_internal::optional_data_dtor_base"* %6 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %6, i64 0, i32 1, i32 0, i32 1
  store float %103, float* %121, align 8
  %122 = icmp eq i64 %102, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %117
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %66)
  br label %137

124:                                              ; preds = %117
  %125 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %6, i64 0, i32 1
  %126 = bitcast %union.anon* %125 to i64*
  %127 = load i64, i64* %126, align 4
  %128 = tail call noalias i8* @malloc(i64 24) #13
  %129 = bitcast i8* %128 to %"class.blink::CalculationValue"*
  %130 = bitcast i8* %128 to i32*
  store i32 1, i32* %130, align 4
  %131 = getelementptr inbounds i8, i8* %128, i64 8
  %132 = bitcast i8* %131 to i64*
  store i64 %127, i64* %132, align 8
  %133 = getelementptr inbounds i8, i8* %128, i64 16
  %134 = icmp eq i32 %2, 1
  %135 = zext i1 %134 to i8
  %136 = shl nuw nsw i8 %135, 1
  store i8 %136, i8* %133, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %66)
  br label %143

137:                                              ; preds = %57, %123
  %138 = icmp eq %"class.blink::CalculationExpressionNode"* %62, null
  br i1 %138, label %141, label %139

139:                                              ; preds = %137
  %140 = getelementptr inbounds %"class.blink::CalculationExpressionNode", %"class.blink::CalculationExpressionNode"* %62, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %140) #13
  br label %141

141:                                              ; preds = %137, %139
  %142 = tail call %"class.blink::CalculationValue"* @_ZN5blink16CalculationValue16CreateSimplifiedE13scoped_refptrIKNS_25CalculationExpressionNodeEENS_10ValueRangeE(%"class.blink::CalculationExpressionNode"* %62, i32 %2) #13
  br label %143

143:                                              ; preds = %124, %141
  %144 = phi %"class.blink::CalculationValue"* [ %142, %141 ], [ %129, %124 ]
  %145 = icmp eq %"class.blink::CalculationExpressionNode"* %62, null
  br i1 %145, label %159, label %146

146:                                              ; preds = %143
  %147 = getelementptr inbounds %"class.blink::CalculationExpressionNode", %"class.blink::CalculationExpressionNode"* %62, i64 0, i32 1, i32 0
  %148 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %147, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %148) #13
  %149 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %147, i64 0, i32 0, i32 0
  %150 = load i32, i32* %149, align 4
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %159

152:                                              ; preds = %146
  %153 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %147, i64 -2
  %154 = bitcast %"class.base::RefCounted"* %153 to %"class.blink::CalculationExpressionNode"*
  %155 = bitcast %"class.base::RefCounted"* %153 to void (%"class.blink::CalculationExpressionNode"*)***
  %156 = load void (%"class.blink::CalculationExpressionNode"*)**, void (%"class.blink::CalculationExpressionNode"*)*** %155, align 8
  %157 = getelementptr inbounds void (%"class.blink::CalculationExpressionNode"*)*, void (%"class.blink::CalculationExpressionNode"*)** %156, i64 8
  %158 = load void (%"class.blink::CalculationExpressionNode"*)*, void (%"class.blink::CalculationExpressionNode"*)** %157, align 8
  tail call void %158(%"class.blink::CalculationExpressionNode"* nonnull %154) #13
  br label %159

159:                                              ; preds = %152, %146, %143, %44
  %160 = phi %"class.blink::CalculationValue"* [ %49, %44 ], [ %144, %143 ], [ %144, %146 ], [ %144, %152 ]
  ret %"class.blink::CalculationValue"* %160
}

declare float @_ZN5blink21CSSValueClampingUtils11ClampLengthEf(float) local_unnamed_addr #2

declare %"class.blink::CalculationValue"* @_ZN5blink16CalculationValue16CreateSimplifiedE13scoped_refptrIKNS_25CalculationExpressionNodeEENS_10ValueRangeE(%"class.blink::CalculationExpressionNode"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSMathExpressionNode"* @_ZN5blink21CSSMathExpressionNode6CreateERKNS_16CalculationValueE(%"class.blink::CalculationValue"* dereferenceable(24)) local_unnamed_addr #4 align 2 {
  %2 = alloca %"class.blink::CSSNumericLiteralValue"*, align 8
  %3 = alloca i8, align 1
  %4 = alloca %"class.blink::CSSNumericLiteralValue"*, align 8
  %5 = alloca i8, align 1
  %6 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %0, i64 0, i32 3
  %7 = load i8, i8* %6, align 8
  %8 = and i8 %7, 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %27, label %10

10:                                               ; preds = %1
  %11 = tail call %"class.blink::CalculationExpressionNode"* @_ZNK5blink16CalculationValue21GetOrCreateExpressionEv(%"class.blink::CalculationValue"* %0) #13
  %12 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink21CSSMathExpressionNode6CreateERKNS_25CalculationExpressionNodeE(%"class.blink::CalculationExpressionNode"* dereferenceable(16) %11)
  %13 = icmp eq %"class.blink::CalculationExpressionNode"* %11, null
  br i1 %13, label %54, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::CalculationExpressionNode", %"class.blink::CalculationExpressionNode"* %11, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %15, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %16) #13
  %17 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %15, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %54

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %15, i64 -2
  %22 = bitcast %"class.base::RefCounted"* %21 to %"class.blink::CalculationExpressionNode"*
  %23 = bitcast %"class.base::RefCounted"* %21 to void (%"class.blink::CalculationExpressionNode"*)***
  %24 = load void (%"class.blink::CalculationExpressionNode"*)**, void (%"class.blink::CalculationExpressionNode"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::CalculationExpressionNode"*)*, void (%"class.blink::CalculationExpressionNode"*)** %24, i64 8
  %26 = load void (%"class.blink::CalculationExpressionNode"*)*, void (%"class.blink::CalculationExpressionNode"*)** %25, align 8
  tail call void %26(%"class.blink::CalculationExpressionNode"* nonnull %22) #13
  br label %54

27:                                               ; preds = %1
  %28 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %0, i64 0, i32 2
  %29 = bitcast %"union.blink::CalculationValue::DataUnion"* %28 to <2 x float>*
  %30 = load <2 x float>, <2 x float>* %29, align 8
  %31 = extractelement <2 x float> %30, i32 1
  %32 = fpext float %31 to double
  %33 = extractelement <2 x float> %30, i32 0
  %34 = fpext float %33 to double
  %35 = fcmp olt float %33, 0.000000e+00
  %36 = fsub double -0.000000e+00, %34
  %37 = select i1 %35, double %36, double %34
  %38 = zext i1 %35 to i32
  %39 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %32, i32 2) #13
  %40 = tail call double @llvm.trunc.f64(double %32) #13
  %41 = fcmp oeq double %40, %32
  %42 = bitcast %"class.blink::CSSNumericLiteralValue"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #13
  store %"class.blink::CSSNumericLiteralValue"* %39, %"class.blink::CSSNumericLiteralValue"** %4, align 8
  %43 = zext i1 %41 to i8
  store i8 %43, i8* %5, align 1
  %44 = call %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink25MakeGarbageCollectedTraitINS_31CSSMathExpressionNumericLiteralEE4CallIJRPKNS_22CSSNumericLiteralValueERbEEEPS1_DpOT_(%"class.blink::CSSNumericLiteralValue"** nonnull dereferenceable(8) %4, i8* nonnull dereferenceable(1) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #13
  %45 = bitcast %"class.blink::CSSMathExpressionNumericLiteral"* %44 to %"class.blink::CSSMathExpressionNode"*
  %46 = call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %37, i32 5) #13
  %47 = call double @llvm.trunc.f64(double %37) #13
  %48 = fcmp oeq double %37, %47
  %49 = bitcast %"class.blink::CSSNumericLiteralValue"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #13
  store %"class.blink::CSSNumericLiteralValue"* %46, %"class.blink::CSSNumericLiteralValue"** %2, align 8
  %50 = zext i1 %48 to i8
  store i8 %50, i8* %3, align 1
  %51 = call %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink25MakeGarbageCollectedTraitINS_31CSSMathExpressionNumericLiteralEE4CallIJRPKNS_22CSSNumericLiteralValueERbEEEPS1_DpOT_(%"class.blink::CSSNumericLiteralValue"** nonnull dereferenceable(8) %2, i8* nonnull dereferenceable(1) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #13
  %52 = bitcast %"class.blink::CSSMathExpressionNumericLiteral"* %51 to %"class.blink::CSSMathExpressionNode"*
  %53 = call %"class.blink::CSSMathExpressionNode"* @_ZN5blink32CSSMathExpressionBinaryOperation6CreateEPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorE(%"class.blink::CSSMathExpressionNode"* %45, %"class.blink::CSSMathExpressionNode"* %52, i32 %38) #13
  br label %54

54:                                               ; preds = %20, %14, %10, %27
  %55 = phi %"class.blink::CSSMathExpressionNode"* [ %53, %27 ], [ %12, %10 ], [ %12, %14 ], [ %12, %20 ]
  ret %"class.blink::CSSMathExpressionNode"* %55
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSMathExpressionNode"* @_ZN5blink21CSSMathExpressionNode6CreateERKNS_25CalculationExpressionNodeE(%"class.blink::CalculationExpressionNode"* dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %2 = alloca %"class.blink::CSSNumericLiteralValue"*, align 8
  %3 = alloca i8, align 1
  %4 = alloca %"class.blink::CSSNumericLiteralValue"*, align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.blink::CSSNumericLiteralValue"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.blink::HeapVector", align 8
  %9 = alloca %"class.blink::CSSMathExpressionNode"*, align 8
  %10 = bitcast %"class.blink::CalculationExpressionNode"* %0 to i1 (%"class.blink::CalculationExpressionNode"*)***
  %11 = load i1 (%"class.blink::CalculationExpressionNode"*)**, i1 (%"class.blink::CalculationExpressionNode"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::CalculationExpressionNode"*)*, i1 (%"class.blink::CalculationExpressionNode"*)** %11, i64 2
  %13 = load i1 (%"class.blink::CalculationExpressionNode"*)*, i1 (%"class.blink::CalculationExpressionNode"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::CalculationExpressionNode"* %0) #13
  br i1 %14, label %15, label %42

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::CalculationExpressionNode", %"class.blink::CalculationExpressionNode"* %0, i64 0, i32 2
  %17 = bitcast [4 x i8]* %16 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 4
  %19 = extractelement <2 x float> %18, i32 1
  %20 = fpext float %19 to double
  %21 = extractelement <2 x float> %18, i32 0
  %22 = fpext float %21 to double
  %23 = fcmp olt float %21, 0.000000e+00
  %24 = fsub double -0.000000e+00, %22
  %25 = select i1 %23, double %24, double %22
  %26 = zext i1 %23 to i32
  %27 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %20, i32 2) #13
  %28 = tail call double @llvm.trunc.f64(double %20) #13
  %29 = fcmp oeq double %28, %20
  %30 = bitcast %"class.blink::CSSNumericLiteralValue"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #13
  store %"class.blink::CSSNumericLiteralValue"* %27, %"class.blink::CSSNumericLiteralValue"** %6, align 8
  %31 = zext i1 %29 to i8
  store i8 %31, i8* %7, align 1
  %32 = call %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink25MakeGarbageCollectedTraitINS_31CSSMathExpressionNumericLiteralEE4CallIJRPKNS_22CSSNumericLiteralValueERbEEEPS1_DpOT_(%"class.blink::CSSNumericLiteralValue"** nonnull dereferenceable(8) %6, i8* nonnull dereferenceable(1) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #13
  %33 = bitcast %"class.blink::CSSMathExpressionNumericLiteral"* %32 to %"class.blink::CSSMathExpressionNode"*
  %34 = call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %25, i32 5) #13
  %35 = call double @llvm.trunc.f64(double %25) #13
  %36 = fcmp oeq double %25, %35
  %37 = bitcast %"class.blink::CSSNumericLiteralValue"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #13
  store %"class.blink::CSSNumericLiteralValue"* %34, %"class.blink::CSSNumericLiteralValue"** %4, align 8
  %38 = zext i1 %36 to i8
  store i8 %38, i8* %5, align 1
  %39 = call %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink25MakeGarbageCollectedTraitINS_31CSSMathExpressionNumericLiteralEE4CallIJRPKNS_22CSSNumericLiteralValueERbEEEPS1_DpOT_(%"class.blink::CSSNumericLiteralValue"** nonnull dereferenceable(8) %4, i8* nonnull dereferenceable(1) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #13
  %40 = bitcast %"class.blink::CSSMathExpressionNumericLiteral"* %39 to %"class.blink::CSSMathExpressionNode"*
  %41 = call %"class.blink::CSSMathExpressionNode"* @_ZN5blink32CSSMathExpressionBinaryOperation6CreateEPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorE(%"class.blink::CSSMathExpressionNode"* %33, %"class.blink::CSSMathExpressionNode"* %40, i32 %26) #13
  br label %183

42:                                               ; preds = %1
  %43 = load i1 (%"class.blink::CalculationExpressionNode"*)**, i1 (%"class.blink::CalculationExpressionNode"*)*** %10, align 8
  %44 = getelementptr inbounds i1 (%"class.blink::CalculationExpressionNode"*)*, i1 (%"class.blink::CalculationExpressionNode"*)** %43, i64 3
  %45 = load i1 (%"class.blink::CalculationExpressionNode"*)*, i1 (%"class.blink::CalculationExpressionNode"*)** %44, align 8
  %46 = tail call zeroext i1 %45(%"class.blink::CalculationExpressionNode"* %0) #13
  br i1 %46, label %47, label %112

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::CalculationExpressionNode", %"class.blink::CalculationExpressionNode"* %0, i64 1, i32 1
  %49 = bitcast %"class.WTF::RefCounted"* %48 to float*
  %50 = load float, float* %49, align 8
  %51 = fpext float %50 to double
  %52 = getelementptr inbounds %"class.blink::CalculationExpressionNode", %"class.blink::CalculationExpressionNode"* %0, i64 1
  %53 = bitcast %"class.blink::CalculationExpressionNode"* %52 to %"class.blink::CalculationExpressionNode"**
  %54 = load %"class.blink::CalculationExpressionNode"*, %"class.blink::CalculationExpressionNode"** %53, align 8
  %55 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink21CSSMathExpressionNode6CreateERKNS_25CalculationExpressionNodeE(%"class.blink::CalculationExpressionNode"* dereferenceable(16) %54)
  %56 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %51, i32 1) #13
  %57 = tail call double @llvm.trunc.f64(double %51)
  %58 = fcmp oeq double %57, %51
  %59 = bitcast %"class.blink::CSSNumericLiteralValue"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3)
  store %"class.blink::CSSNumericLiteralValue"* %56, %"class.blink::CSSNumericLiteralValue"** %2, align 8
  %60 = zext i1 %58 to i8
  store i8 %60, i8* %3, align 1
  %61 = call %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink25MakeGarbageCollectedTraitINS_31CSSMathExpressionNumericLiteralEE4CallIJRPKNS_22CSSNumericLiteralValueERbEEEPS1_DpOT_(%"class.blink::CSSNumericLiteralValue"** nonnull dereferenceable(8) %2, i8* nonnull dereferenceable(1) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3)
  %62 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %55, i64 0, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = getelementptr inbounds %"class.blink::CSSMathExpressionNumericLiteral", %"class.blink::CSSMathExpressionNumericLiteral"* %61, i64 0, i32 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %63, 7
  %67 = icmp eq i32 %65, 7
  %68 = or i1 %66, %67
  br i1 %68, label %183, label %69

69:                                               ; preds = %47
  %70 = icmp ne i32 %63, 0
  %71 = icmp ne i32 %65, 0
  %72 = and i1 %70, %71
  br i1 %72, label %183, label %73

73:                                               ; preds = %69
  %74 = icmp eq i32 %63, 0
  %75 = select i1 %74, i32 %65, i32 %63
  %76 = icmp eq i32 %75, 7
  br i1 %76, label %183, label %77

77:                                               ; preds = %73
  %78 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_21CSSMathExpressionNodeEEEPhm(i64 40) #13
  %79 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %55, i64 0, i32 2
  %80 = load i8, i8* %79, align 4, !range !2
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.blink::CSSMathExpressionNumericLiteral", %"class.blink::CSSMathExpressionNumericLiteral"* %61, i64 0, i32 0, i32 2
  %84 = load i8, i8* %83, align 4, !range !2
  br label %85

85:                                               ; preds = %82, %77
  %86 = phi i8 [ 0, %77 ], [ %84, %82 ]
  %87 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %55, i64 0, i32 4
  %88 = load i8, i8* %87, align 2, !range !2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %93

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.blink::CSSMathExpressionNumericLiteral", %"class.blink::CSSMathExpressionNumericLiteral"* %61, i64 0, i32 0, i32 4
  %92 = load i8, i8* %91, align 2, !range !2
  br label %93

93:                                               ; preds = %90, %85
  %94 = phi i8 [ 1, %85 ], [ %92, %90 ]
  %95 = bitcast i8* %78 to i32 (...)***
  %96 = getelementptr inbounds i8, i8* %78, i64 8
  %97 = bitcast i8* %96 to i32*
  store i32 %75, i32* %97, align 8
  %98 = getelementptr inbounds i8, i8* %78, i64 12
  store i8 %86, i8* %98, align 4
  %99 = getelementptr inbounds i8, i8* %78, i64 13
  store i8 0, i8* %99, align 1
  %100 = getelementptr inbounds i8, i8* %78, i64 14
  store i8 %94, i8* %100, align 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink32CSSMathExpressionBinaryOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %95, align 8
  %101 = getelementptr inbounds i8, i8* %78, i64 16
  %102 = bitcast i8* %101 to %"class.blink::CSSMathExpressionNode"**
  store %"class.blink::CSSMathExpressionNode"* %55, %"class.blink::CSSMathExpressionNode"** %102, align 8
  %103 = getelementptr inbounds i8, i8* %78, i64 24
  %104 = bitcast i8* %103 to %"class.blink::CSSMathExpressionNumericLiteral"**
  store %"class.blink::CSSMathExpressionNumericLiteral"* %61, %"class.blink::CSSMathExpressionNumericLiteral"** %104, align 8
  %105 = getelementptr inbounds i8, i8* %78, i64 32
  %106 = bitcast i8* %105 to i32*
  store i32 2, i32* %106, align 8
  %107 = getelementptr inbounds i8, i8* %78, i64 -4
  %108 = bitcast i8* %107 to i16*
  %109 = load atomic i16, i16* %108 monotonic, align 2
  %110 = or i16 %109, 1
  store atomic i16 %110, i16* %108 release, align 2
  %111 = bitcast i8* %78 to %"class.blink::CSSMathExpressionNode"*
  br label %183

112:                                              ; preds = %42
  %113 = load i1 (%"class.blink::CalculationExpressionNode"*)**, i1 (%"class.blink::CalculationExpressionNode"*)*** %10, align 8
  %114 = getelementptr inbounds i1 (%"class.blink::CalculationExpressionNode"*)*, i1 (%"class.blink::CalculationExpressionNode"*)** %113, i64 4
  %115 = load i1 (%"class.blink::CalculationExpressionNode"*)*, i1 (%"class.blink::CalculationExpressionNode"*)** %114, align 8
  %116 = tail call zeroext i1 %115(%"class.blink::CalculationExpressionNode"* %0) #13
  br i1 %116, label %117, label %132

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.blink::CalculationExpressionNode", %"class.blink::CalculationExpressionNode"* %0, i64 1
  %119 = bitcast %"class.blink::CalculationExpressionNode"* %118 to %"class.blink::CalculationExpressionNode"**
  %120 = load %"class.blink::CalculationExpressionNode"*, %"class.blink::CalculationExpressionNode"** %119, align 8
  %121 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink21CSSMathExpressionNode6CreateERKNS_25CalculationExpressionNodeE(%"class.blink::CalculationExpressionNode"* dereferenceable(16) %120)
  %122 = getelementptr inbounds %"class.blink::CalculationExpressionNode", %"class.blink::CalculationExpressionNode"* %0, i64 1, i32 1
  %123 = bitcast %"class.WTF::RefCounted"* %122 to %"class.blink::CalculationExpressionNode"**
  %124 = load %"class.blink::CalculationExpressionNode"*, %"class.blink::CalculationExpressionNode"** %123, align 8
  %125 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink21CSSMathExpressionNode6CreateERKNS_25CalculationExpressionNodeE(%"class.blink::CalculationExpressionNode"* dereferenceable(16) %124)
  %126 = getelementptr inbounds %"class.blink::CalculationExpressionNode", %"class.blink::CalculationExpressionNode"* %0, i64 2
  %127 = bitcast %"class.blink::CalculationExpressionNode"* %126 to i32*
  %128 = load i32, i32* %127, align 8
  %129 = icmp ne i32 %128, 0
  %130 = zext i1 %129 to i32
  %131 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink32CSSMathExpressionBinaryOperation6CreateEPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorE(%"class.blink::CSSMathExpressionNode"* %121, %"class.blink::CSSMathExpressionNode"* %125, i32 %130)
  br label %183

132:                                              ; preds = %112
  %133 = bitcast %"class.blink::HeapVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %133) #13
  %134 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %135 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %136 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %8, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 0, i64 16, i1 false) #13
  %137 = getelementptr inbounds %"class.blink::CalculationExpressionNode", %"class.blink::CalculationExpressionNode"* %0, i64 1
  %138 = bitcast %"class.blink::CalculationExpressionNode"* %137 to %class.scoped_refptr.3**
  %139 = load %class.scoped_refptr.3*, %class.scoped_refptr.3** %138, align 8
  %140 = getelementptr inbounds %"class.blink::CalculationExpressionNode", %"class.blink::CalculationExpressionNode"* %0, i64 1, i32 2
  %141 = bitcast [4 x i8]* %140 to i32*
  %142 = load i32, i32* %141, align 4
  %143 = zext i32 %142 to i64
  %144 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %139, i64 %143
  %145 = icmp eq i32 %142, 0
  br i1 %145, label %149, label %146

146:                                              ; preds = %132
  %147 = bitcast %"class.blink::CSSMathExpressionNode"** %9 to i8*
  %148 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %8, i64 0, i32 0
  br label %157

149:                                              ; preds = %180, %132
  %150 = getelementptr inbounds %"class.blink::CalculationExpressionNode", %"class.blink::CalculationExpressionNode"* %0, i64 2
  %151 = bitcast %"class.blink::CalculationExpressionNode"* %150 to i32*
  %152 = load i32, i32* %151, align 8
  %153 = icmp eq i32 %152, 0
  %154 = select i1 %153, i32 4, i32 5
  %155 = call %"class.blink::CSSMathExpressionVariadicOperation"* @_ZN5blink34CSSMathExpressionVariadicOperation6CreateEONS_10HeapVectorINS_6MemberIKNS_21CSSMathExpressionNodeEEELj0EEENS_15CSSMathOperatorE(%"class.blink::HeapVector"* nonnull dereferenceable(16) %8, i32 %154)
  %156 = bitcast %"class.blink::CSSMathExpressionVariadicOperation"* %155 to %"class.blink::CSSMathExpressionNode"*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %133) #13
  br label %183

157:                                              ; preds = %146, %180
  %158 = phi %class.scoped_refptr.3* [ %139, %146 ], [ %181, %180 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147) #13
  %159 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %158, i64 0, i32 0
  %160 = load %"class.blink::CalculationExpressionNode"*, %"class.blink::CalculationExpressionNode"** %159, align 8
  %161 = call %"class.blink::CSSMathExpressionNode"* @_ZN5blink21CSSMathExpressionNode6CreateERKNS_25CalculationExpressionNodeE(%"class.blink::CalculationExpressionNode"* dereferenceable(16) %160)
  store %"class.blink::CSSMathExpressionNode"* %161, %"class.blink::CSSMathExpressionNode"** %9, align 8
  %162 = load i32, i32* %136, align 4
  %163 = load i32, i32* %135, align 8
  %164 = icmp eq i32 %162, %163
  br i1 %164, label %179, label %165, !prof !3

165:                                              ; preds = %157
  %166 = ptrtoint %"class.blink::CSSMathExpressionNode"* %161 to i64
  %167 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %134, align 8
  %168 = zext i32 %162 to i64
  %169 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %167, i64 %168
  %170 = bitcast %"class.blink::Member.191"* %169 to i64*
  store atomic i64 %166, i64* %170 monotonic, align 8
  %171 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %176, label %173

173:                                              ; preds = %165
  %174 = bitcast %"class.blink::CSSMathExpressionNode"* %161 to i8*
  %175 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %174) #13
  br label %176

176:                                              ; preds = %173, %165
  %177 = load i32, i32* %136, align 4
  %178 = add i32 %177, 1
  store i32 %178, i32* %136, align 4
  br label %180

179:                                              ; preds = %157
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.206"* nonnull %148, %"class.blink::CSSMathExpressionNode"** nonnull dereferenceable(8) %9) #13
  br label %180

180:                                              ; preds = %176, %179
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #13
  %181 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %158, i64 1
  %182 = icmp eq %class.scoped_refptr.3* %181, %144
  br i1 %182, label %149, label %157

183:                                              ; preds = %93, %73, %69, %47, %149, %117, %15
  %184 = phi %"class.blink::CSSMathExpressionNode"* [ %41, %15 ], [ %131, %117 ], [ %156, %149 ], [ %111, %93 ], [ null, %73 ], [ null, %47 ], [ null, %69 ]
  ret %"class.blink::CSSMathExpressionNode"* %184
}

declare %"class.blink::CalculationExpressionNode"* @_ZNK5blink16CalculationValue21GetOrCreateExpressionEv(%"class.blink::CalculationValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSMathExpressionNode"* @_ZN5blink21CSSMathExpressionNode6CreateENS_16PixelsAndPercentE(<2 x float>) local_unnamed_addr #4 align 2 {
  %2 = alloca %"class.blink::CSSNumericLiteralValue"*, align 8
  %3 = alloca i8, align 1
  %4 = alloca %"class.blink::CSSNumericLiteralValue"*, align 8
  %5 = alloca i8, align 1
  %6 = extractelement <2 x float> %0, i32 1
  %7 = fpext float %6 to double
  %8 = extractelement <2 x float> %0, i32 0
  %9 = fpext float %8 to double
  %10 = fcmp olt float %8, 0.000000e+00
  %11 = fsub double -0.000000e+00, %9
  %12 = select i1 %10, double %11, double %9
  %13 = zext i1 %10 to i32
  %14 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %7, i32 2) #13
  %15 = tail call double @llvm.trunc.f64(double %7)
  %16 = fcmp oeq double %15, %7
  %17 = bitcast %"class.blink::CSSNumericLiteralValue"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5)
  store %"class.blink::CSSNumericLiteralValue"* %14, %"class.blink::CSSNumericLiteralValue"** %4, align 8
  %18 = zext i1 %16 to i8
  store i8 %18, i8* %5, align 1
  %19 = call %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink25MakeGarbageCollectedTraitINS_31CSSMathExpressionNumericLiteralEE4CallIJRPKNS_22CSSNumericLiteralValueERbEEEPS1_DpOT_(%"class.blink::CSSNumericLiteralValue"** nonnull dereferenceable(8) %4, i8* nonnull dereferenceable(1) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5)
  %20 = bitcast %"class.blink::CSSMathExpressionNumericLiteral"* %19 to %"class.blink::CSSMathExpressionNode"*
  %21 = call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %12, i32 5) #13
  %22 = call double @llvm.trunc.f64(double %12)
  %23 = fcmp oeq double %12, %22
  %24 = bitcast %"class.blink::CSSNumericLiteralValue"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3)
  store %"class.blink::CSSNumericLiteralValue"* %21, %"class.blink::CSSNumericLiteralValue"** %2, align 8
  %25 = zext i1 %23 to i8
  store i8 %25, i8* %3, align 1
  %26 = call %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink25MakeGarbageCollectedTraitINS_31CSSMathExpressionNumericLiteralEE4CallIJRPKNS_22CSSNumericLiteralValueERbEEEPS1_DpOT_(%"class.blink::CSSNumericLiteralValue"** nonnull dereferenceable(8) %2, i8* nonnull dereferenceable(1) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3)
  %27 = bitcast %"class.blink::CSSMathExpressionNumericLiteral"* %26 to %"class.blink::CSSMathExpressionNode"*
  %28 = call %"class.blink::CSSMathExpressionNode"* @_ZN5blink32CSSMathExpressionBinaryOperation6CreateEPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorE(%"class.blink::CSSMathExpressionNode"* %20, %"class.blink::CSSMathExpressionNode"* %27, i32 %13)
  ret %"class.blink::CSSMathExpressionNode"* %28
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.trunc.f64(double) #7

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSMathExpressionNode"* @_ZN5blink21CSSMathExpressionNode9ParseCalcERKNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::CSSParserTokenRange", align 8
  %3 = alloca %"class.blink::CSSMathExpressionNodeParser", align 1
  %4 = getelementptr inbounds %"class.blink::CSSMathExpressionNodeParser", %"class.blink::CSSMathExpressionNodeParser"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #13
  store i8 -86, i8* %4, align 1
  %5 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %0, i64 0, i32 0
  %6 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %0, i64 0, i32 1
  %8 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %7, align 8
  %9 = bitcast %"class.blink::CSSParserTokenRange"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9)
  %10 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %2, i64 0, i32 0
  store %"class.blink::CSSParserToken"* %6, %"class.blink::CSSParserToken"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %2, i64 0, i32 1
  store %"class.blink::CSSParserToken"* %8, %"class.blink::CSSParserToken"** %11, align 8
  %12 = icmp ult %"class.blink::CSSParserToken"* %6, %8
  %13 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %14 = select i1 %12, %"class.blink::CSSParserToken"* %6, %"class.blink::CSSParserToken"* %13
  %15 = bitcast %"class.blink::CSSParserToken"* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 63
  %18 = icmp eq i32 %17, 17
  br i1 %18, label %19, label %28

19:                                               ; preds = %1, %19
  %20 = phi %"class.blink::CSSParserToken"* [ %21, %19 ], [ %6, %1 ]
  %21 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %20, i64 1
  store %"class.blink::CSSParserToken"* %21, %"class.blink::CSSParserToken"** %10, align 8
  %22 = icmp ult %"class.blink::CSSParserToken"* %21, %8
  %23 = select i1 %22, %"class.blink::CSSParserToken"* %21, %"class.blink::CSSParserToken"* %13
  %24 = bitcast %"class.blink::CSSParserToken"* %23 to i32*
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 63
  %27 = icmp eq i32 %26, 17
  br i1 %27, label %19, label %28

28:                                               ; preds = %19, %1
  %29 = call %"class.blink::CSSMathExpressionNode"* @_ZN5blink27CSSMathExpressionNodeParser28ParseAdditiveValueExpressionERNS_19CSSParserTokenRangeEi(%"class.blink::CSSMathExpressionNodeParser"* nonnull %3, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %2, i32 0) #13
  %30 = icmp eq %"class.blink::CSSMathExpressionNode"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %10, align 8
  %33 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %11, align 8
  %34 = icmp eq %"class.blink::CSSParserToken"* %32, %33
  %35 = select i1 %34, %"class.blink::CSSMathExpressionNode"* %29, %"class.blink::CSSMathExpressionNode"* null
  br label %36

36:                                               ; preds = %28, %31
  %37 = phi %"class.blink::CSSMathExpressionNode"* [ %35, %31 ], [ null, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #13
  ret %"class.blink::CSSMathExpressionNode"* %37
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSMathExpressionNode"* @_ZN5blink21CSSMathExpressionNode8ParseMinERKNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::CSSMathExpressionNodeParser", align 1
  %3 = getelementptr inbounds %"class.blink::CSSMathExpressionNodeParser", %"class.blink::CSSMathExpressionNodeParser"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #13
  store i8 -86, i8* %3, align 1
  %4 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %0, i64 0, i32 0
  %5 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %0, i64 0, i32 1
  %7 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %8 = call %"class.blink::CSSMathExpressionNode"* @_ZN5blink27CSSMathExpressionNodeParser13ParseMinOrMaxENS_19CSSParserTokenRangeENS_15CSSMathOperatorEi(%"class.blink::CSSMathExpressionNodeParser"* nonnull %2, %"class.blink::CSSParserToken"* %5, %"class.blink::CSSParserToken"* %7, i32 4, i32 0)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #13
  ret %"class.blink::CSSMathExpressionNode"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSMathExpressionNode"* @_ZN5blink27CSSMathExpressionNodeParser13ParseMinOrMaxENS_19CSSParserTokenRangeENS_15CSSMathOperatorEi(%"class.blink::CSSMathExpressionNodeParser"*, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.blink::CSSParserTokenRange", align 8
  %7 = alloca %"class.blink::HeapVector", align 8
  %8 = alloca %"class.blink::CSSMathExpressionNode"*, align 8
  %9 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %6, i64 0, i32 0
  store %"class.blink::CSSParserToken"* %1, %"class.blink::CSSParserToken"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %6, i64 0, i32 1
  store %"class.blink::CSSParserToken"* %2, %"class.blink::CSSParserToken"** %10, align 8
  %11 = add nsw i32 %4, 1
  %12 = icmp ne %"class.blink::CSSParserToken"* %1, %2
  %13 = icmp slt i32 %4, 100
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %85

15:                                               ; preds = %5
  %16 = bitcast %"class.blink::HeapVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 16, i1 false) #13
  %20 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %21 = bitcast %"class.blink::CSSMathExpressionNode"** %8 to i8*
  %22 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0
  br label %27

23:                                               ; preds = %68
  %24 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %9, align 8
  %25 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %10, align 8
  %26 = icmp eq %"class.blink::CSSParserToken"* %24, %25
  br i1 %26, label %70, label %27

27:                                               ; preds = %15, %23
  %28 = phi %"class.blink::CSSParserToken"* [ %2, %15 ], [ %25, %23 ]
  %29 = phi %"class.blink::CSSParserToken"* [ %1, %15 ], [ %24, %23 ]
  %30 = icmp ult %"class.blink::CSSParserToken"* %29, %28
  %31 = select i1 %30, %"class.blink::CSSParserToken"* %29, %"class.blink::CSSParserToken"* %20
  %32 = bitcast %"class.blink::CSSParserToken"* %31 to i32*
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, 63
  %35 = icmp eq i32 %34, 17
  br i1 %35, label %36, label %45

36:                                               ; preds = %27, %36
  %37 = phi %"class.blink::CSSParserToken"* [ %38, %36 ], [ %29, %27 ]
  %38 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %37, i64 1
  store %"class.blink::CSSParserToken"* %38, %"class.blink::CSSParserToken"** %9, align 8
  %39 = icmp ult %"class.blink::CSSParserToken"* %38, %28
  %40 = select i1 %39, %"class.blink::CSSParserToken"* %38, %"class.blink::CSSParserToken"* %20
  %41 = bitcast %"class.blink::CSSParserToken"* %40 to i32*
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 63
  %44 = icmp eq i32 %43, 17
  br i1 %44, label %36, label %45

45:                                               ; preds = %36, %27
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  store %"class.blink::CSSMathExpressionNode"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSMathExpressionNode"*), %"class.blink::CSSMathExpressionNode"** %8, align 8
  %46 = call %"class.blink::CSSMathExpressionNode"* @_ZN5blink27CSSMathExpressionNodeParser28ParseAdditiveValueExpressionERNS_19CSSParserTokenRangeEi(%"class.blink::CSSMathExpressionNodeParser"* %0, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %6, i32 %11) #13
  store %"class.blink::CSSMathExpressionNode"* %46, %"class.blink::CSSMathExpressionNode"** %8, align 8
  %47 = icmp eq %"class.blink::CSSMathExpressionNode"* %46, null
  %48 = ptrtoint %"class.blink::CSSMathExpressionNode"* %46 to i64
  br i1 %47, label %49, label %50

49:                                               ; preds = %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %83

50:                                               ; preds = %45
  %51 = load i32, i32* %19, align 4
  %52 = load i32, i32* %18, align 8
  %53 = icmp eq i32 %51, %52
  br i1 %53, label %67, label %54, !prof !3

54:                                               ; preds = %50
  %55 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %17, align 8
  %56 = zext i32 %51 to i64
  %57 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %55, i64 %56
  %58 = bitcast %"class.blink::Member.191"* %57 to i64*
  store atomic i64 %48, i64* %58 monotonic, align 8
  %59 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %54
  %62 = bitcast %"class.blink::CSSMathExpressionNode"* %46 to i8*
  %63 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %62) #13
  br label %64

64:                                               ; preds = %61, %54
  %65 = load i32, i32* %19, align 4
  %66 = add i32 %65, 1
  store i32 %66, i32* %19, align 4
  br label %68

67:                                               ; preds = %50
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.206"* nonnull %22, %"class.blink::CSSMathExpressionNode"** nonnull dereferenceable(8) %8) #13
  br label %68

68:                                               ; preds = %64, %67
  %69 = call zeroext i1 @_ZN5blink17css_parsing_utils31ConsumeCommaIncludingWhitespaceERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br i1 %69, label %23, label %70

70:                                               ; preds = %23, %68
  %71 = phi i8 [ 1, %23 ], [ 0, %68 ]
  %72 = load i32, i32* %19, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %83, label %74

74:                                               ; preds = %70
  %75 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %9, align 8
  %76 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %10, align 8
  %77 = icmp eq %"class.blink::CSSParserToken"* %75, %76
  %78 = icmp eq i8 %71, 0
  %79 = and i1 %78, %77
  br i1 %79, label %80, label %83

80:                                               ; preds = %74
  %81 = call %"class.blink::CSSMathExpressionVariadicOperation"* @_ZN5blink34CSSMathExpressionVariadicOperation6CreateEONS_10HeapVectorINS_6MemberIKNS_21CSSMathExpressionNodeEEELj0EEENS_15CSSMathOperatorE(%"class.blink::HeapVector"* nonnull dereferenceable(16) %7, i32 %3)
  %82 = bitcast %"class.blink::CSSMathExpressionVariadicOperation"* %81 to %"class.blink::CSSMathExpressionNode"*
  br label %83

83:                                               ; preds = %49, %70, %74, %80
  %84 = phi %"class.blink::CSSMathExpressionNode"* [ %82, %80 ], [ null, %74 ], [ null, %70 ], [ null, %49 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #13
  br label %85

85:                                               ; preds = %5, %83
  %86 = phi %"class.blink::CSSMathExpressionNode"* [ %84, %83 ], [ null, %5 ]
  ret %"class.blink::CSSMathExpressionNode"* %86
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSMathExpressionNode"* @_ZN5blink21CSSMathExpressionNode8ParseMaxERKNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::CSSMathExpressionNodeParser", align 1
  %3 = getelementptr inbounds %"class.blink::CSSMathExpressionNodeParser", %"class.blink::CSSMathExpressionNodeParser"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #13
  store i8 -86, i8* %3, align 1
  %4 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %0, i64 0, i32 0
  %5 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %0, i64 0, i32 1
  %7 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %8 = call %"class.blink::CSSMathExpressionNode"* @_ZN5blink27CSSMathExpressionNodeParser13ParseMinOrMaxENS_19CSSParserTokenRangeENS_15CSSMathOperatorEi(%"class.blink::CSSMathExpressionNodeParser"* nonnull %2, %"class.blink::CSSParserToken"* %5, %"class.blink::CSSParserToken"* %7, i32 5, i32 0)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #13
  ret %"class.blink::CSSMathExpressionNode"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSMathExpressionNode"* @_ZN5blink21CSSMathExpressionNode10ParseClampERKNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::CSSMathExpressionNodeParser", align 1
  %3 = getelementptr inbounds %"class.blink::CSSMathExpressionNodeParser", %"class.blink::CSSMathExpressionNodeParser"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #13
  store i8 -86, i8* %3, align 1
  %4 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %0, i64 0, i32 0
  %5 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %0, i64 0, i32 1
  %7 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %8 = call %"class.blink::CSSMathExpressionNode"* @_ZN5blink27CSSMathExpressionNodeParser10ParseClampENS_19CSSParserTokenRangeEi(%"class.blink::CSSMathExpressionNodeParser"* nonnull %2, %"class.blink::CSSParserToken"* %5, %"class.blink::CSSParserToken"* %7, i32 0)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #13
  ret %"class.blink::CSSMathExpressionNode"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSMathExpressionNode"* @_ZN5blink27CSSMathExpressionNodeParser10ParseClampENS_19CSSParserTokenRangeEi(%"class.blink::CSSMathExpressionNodeParser"*, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::CSSParserTokenRange", align 8
  %6 = alloca %"class.blink::HeapVector", align 8
  %7 = alloca [2 x %"class.blink::Member.191"], align 8
  %8 = alloca %"class.blink::HeapVector", align 8
  %9 = alloca [2 x %"class.blink::Member.191"], align 8
  %10 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %5, i64 0, i32 0
  store %"class.blink::CSSParserToken"* %1, %"class.blink::CSSParserToken"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %5, i64 0, i32 1
  store %"class.blink::CSSParserToken"* %2, %"class.blink::CSSParserToken"** %11, align 8
  %12 = add nsw i32 %3, 1
  %13 = icmp ne %"class.blink::CSSParserToken"* %1, %2
  %14 = icmp slt i32 %3, 100
  %15 = and i1 %13, %14
  br i1 %15, label %16, label %55

16:                                               ; preds = %4
  %17 = call %"class.blink::CSSMathExpressionNode"* @_ZN5blink27CSSMathExpressionNodeParser28ParseAdditiveValueExpressionERNS_19CSSParserTokenRangeEi(%"class.blink::CSSMathExpressionNodeParser"* %0, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %5, i32 %12) #13
  %18 = icmp eq %"class.blink::CSSMathExpressionNode"* %17, null
  br i1 %18, label %55, label %19

19:                                               ; preds = %16
  %20 = call zeroext i1 @_ZN5blink17css_parsing_utils31ConsumeCommaIncludingWhitespaceERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %5) #13
  br i1 %20, label %21, label %55

21:                                               ; preds = %19
  %22 = call %"class.blink::CSSMathExpressionNode"* @_ZN5blink27CSSMathExpressionNodeParser28ParseAdditiveValueExpressionERNS_19CSSParserTokenRangeEi(%"class.blink::CSSMathExpressionNodeParser"* %0, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %5, i32 %12) #13
  %23 = icmp eq %"class.blink::CSSMathExpressionNode"* %22, null
  br i1 %23, label %55, label %24

24:                                               ; preds = %21
  %25 = call zeroext i1 @_ZN5blink17css_parsing_utils31ConsumeCommaIncludingWhitespaceERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %5) #13
  br i1 %25, label %26, label %55

26:                                               ; preds = %24
  %27 = call %"class.blink::CSSMathExpressionNode"* @_ZN5blink27CSSMathExpressionNodeParser28ParseAdditiveValueExpressionERNS_19CSSParserTokenRangeEi(%"class.blink::CSSMathExpressionNodeParser"* %0, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %5, i32 %12) #13
  %28 = icmp eq %"class.blink::CSSMathExpressionNode"* %27, null
  br i1 %28, label %55, label %29

29:                                               ; preds = %26
  %30 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %10, align 8
  %31 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %11, align 8
  %32 = icmp eq %"class.blink::CSSParserToken"* %30, %31
  br i1 %32, label %33, label %55

33:                                               ; preds = %29
  %34 = bitcast %"class.blink::HeapVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #13
  %35 = bitcast [2 x %"class.blink::Member.191"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #13
  %36 = getelementptr inbounds [2 x %"class.blink::Member.191"], [2 x %"class.blink::Member.191"]* %7, i64 0, i64 0
  %37 = getelementptr inbounds [2 x %"class.blink::Member.191"], [2 x %"class.blink::Member.191"]* %7, i64 0, i64 0, i32 0, i32 0
  store %"class.blink::CSSMathExpressionNode"* %22, %"class.blink::CSSMathExpressionNode"** %37, align 8
  %38 = getelementptr inbounds [2 x %"class.blink::Member.191"], [2 x %"class.blink::Member.191"]* %7, i64 0, i64 1, i32 0, i32 0
  store %"class.blink::CSSMathExpressionNode"* %27, %"class.blink::CSSMathExpressionNode"** %38, align 8
  %39 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEEC2ESt16initializer_listIS5_E(%"class.WTF::Vector.206"* nonnull %39, %"class.blink::Member.191"* nonnull %36, i64 2) #13
  %40 = call %"class.blink::CSSMathExpressionVariadicOperation"* @_ZN5blink34CSSMathExpressionVariadicOperation6CreateEONS_10HeapVectorINS_6MemberIKNS_21CSSMathExpressionNodeEEELj0EEENS_15CSSMathOperatorE(%"class.blink::HeapVector"* nonnull dereferenceable(16) %6, i32 4)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #13
  %41 = icmp eq %"class.blink::CSSMathExpressionVariadicOperation"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %33
  %43 = bitcast %"class.blink::HeapVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #13
  %44 = bitcast [2 x %"class.blink::Member.191"]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #13
  %45 = getelementptr inbounds [2 x %"class.blink::Member.191"], [2 x %"class.blink::Member.191"]* %9, i64 0, i64 0
  %46 = getelementptr inbounds [2 x %"class.blink::Member.191"], [2 x %"class.blink::Member.191"]* %9, i64 0, i64 0, i32 0, i32 0
  store %"class.blink::CSSMathExpressionNode"* %17, %"class.blink::CSSMathExpressionNode"** %46, align 8
  %47 = getelementptr inbounds [2 x %"class.blink::Member.191"], [2 x %"class.blink::Member.191"]* %9, i64 0, i64 1, i32 0, i32 0
  %48 = bitcast %"class.blink::CSSMathExpressionNode"** %47 to %"class.blink::CSSMathExpressionVariadicOperation"**
  store %"class.blink::CSSMathExpressionVariadicOperation"* %40, %"class.blink::CSSMathExpressionVariadicOperation"** %48, align 8
  %49 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %8, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEEC2ESt16initializer_listIS5_E(%"class.WTF::Vector.206"* nonnull %49, %"class.blink::Member.191"* nonnull %45, i64 2) #13
  %50 = call %"class.blink::CSSMathExpressionVariadicOperation"* @_ZN5blink34CSSMathExpressionVariadicOperation6CreateEONS_10HeapVectorINS_6MemberIKNS_21CSSMathExpressionNodeEEELj0EEENS_15CSSMathOperatorE(%"class.blink::HeapVector"* nonnull dereferenceable(16) %8, i32 5)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #13
  %51 = icmp eq %"class.blink::CSSMathExpressionVariadicOperation"* %50, null
  br i1 %51, label %55, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.blink::CSSMathExpressionVariadicOperation", %"class.blink::CSSMathExpressionVariadicOperation"* %50, i64 0, i32 4
  store i8 1, i8* %53, align 4
  %54 = bitcast %"class.blink::CSSMathExpressionVariadicOperation"* %50 to %"class.blink::CSSMathExpressionNode"*
  br label %55

55:                                               ; preds = %16, %19, %26, %29, %52, %42, %33, %24, %21, %4
  %56 = phi %"class.blink::CSSMathExpressionNode"* [ null, %4 ], [ null, %16 ], [ null, %19 ], [ null, %21 ], [ null, %24 ], [ null, %26 ], [ null, %29 ], [ null, %33 ], [ %54, %52 ], [ null, %42 ]
  ret %"class.blink::CSSMathExpressionNode"* %56
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink31CSSMathExpressionNumericLiteral16IsNumericLiteralEv(%"class.blink::CSSMathExpressionNumericLiteral"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21CSSMathExpressionNode17IsBinaryOperationEv(%"class.blink::CSSMathExpressionNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21CSSMathExpressionNode19IsVariadicOperationEv(%"class.blink::CSSMathExpressionNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21CSSMathExpressionNode16IsNumericLiteralEv(%"class.blink::CSSMathExpressionNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink32CSSMathExpressionBinaryOperation17IsBinaryOperationEv(%"class.blink::CSSMathExpressionBinaryOperation"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink34CSSMathExpressionVariadicOperation19IsVariadicOperationEv(%"class.blink::CSSMathExpressionVariadicOperation"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #13
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !3

22:                                               ; preds = %15
  %23 = bitcast %union.anon.193* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.193* %16 to %"class.WTF::Vector.199"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.199"* %30, i16* nonnull dereferenceable(2) %3) #13
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #13
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !3

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.194", %"class.WTF::Vector.194"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.194"* %41, i8* nonnull dereferenceable(1) %4) #13
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.199"*, i16* dereferenceable(2)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.199", %"class.WTF::Vector.199"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.199", %"class.WTF::Vector.199"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.199"* %0, i32 %5) #13
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.199"* %0, i32 %5) #13
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.199"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.199", %"class.WTF::Vector.199"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i8* %15, i8* %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.199", %"class.WTF::Vector.199"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #13
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #13
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.199"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.199", %"class.WTF::Vector.199"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.199"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.199"* %0, i32 %27) #13
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #9

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.199"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.199", %"class.WTF::Vector.199"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.199", %"class.WTF::Vector.199"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.199"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.199", %"class.WTF::Vector.199"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.199", %"class.WTF::Vector.199"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.199", %"class.WTF::Vector.199"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.199"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.199", %"class.WTF::Vector.199"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #13
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.200"* %19, i16* nonnull %6) #13
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #13
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #13
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.199", %"class.WTF::Vector.199"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !4

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.199", %"class.WTF::Vector.199"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #13
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.199", %"class.WTF::Vector.199"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.199", %"class.WTF::Vector.199"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.200"* %53, i16* %48) #13
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.199"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.199", %"class.WTF::Vector.199"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.200"*, i16*) local_unnamed_addr #8 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.194"*, i8* dereferenceable(1)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.194", %"class.WTF::Vector.194"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.194", %"class.WTF::Vector.194"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.194"* %0, i32 %5) #13
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.194"* %0, i32 %5) #13
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.194"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.194", %"class.WTF::Vector.194"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i8* %15, i8* %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.194", %"class.WTF::Vector.194"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #13
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #13
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.194"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.194", %"class.WTF::Vector.194"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.194"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.194"* %0, i32 %27) #13
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.194"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.194", %"class.WTF::Vector.194"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.194", %"class.WTF::Vector.194"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.194"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.194", %"class.WTF::Vector.194"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.194", %"class.WTF::Vector.194"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.194", %"class.WTF::Vector.194"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.194"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.194", %"class.WTF::Vector.194"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #13
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.195"* %18, i8* nonnull %6) #13
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #13
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #13
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.194", %"class.WTF::Vector.194"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !4

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.194", %"class.WTF::Vector.194"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #13
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.194", %"class.WTF::Vector.194"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !4

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.194", %"class.WTF::Vector.194"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.195"* %46, i8* %42) #13
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.194"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.194", %"class.WTF::Vector.194"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #13
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.195"*, i8*) local_unnamed_addr #8 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #13
  ret void
}

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS8_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS8_13basic_ostreamIcNS8_11char_traitsIcEEEEPKvE_8__invokeESN_SP_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #11 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #13
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEC2EPS6_S8_S8_(%"class.base::CheckedContiguousIterator"*, %"class.blink::Member.191"*, %"class.blink::Member.191"*, %"class.blink::Member.191"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.blink::Member.191"*, align 8
  %8 = alloca %"class.blink::Member.191"*, align 8
  %9 = alloca %"class.blink::Member.191"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"class.blink::Member.191"* %1, %"class.blink::Member.191"** %7, align 8
  store %"class.blink::Member.191"* %2, %"class.blink::Member.191"** %8, align 8
  store %"class.blink::Member.191"* %3, %"class.blink::Member.191"** %9, align 8
  %14 = ptrtoint %"class.blink::Member.191"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint %"class.blink::Member.191"* %2 to i64
  %18 = bitcast %"class.blink::Member.191"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint %"class.blink::Member.191"* %3 to i64
  %21 = bitcast %"class.blink::Member.191"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"class.blink::Member.191"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"class.blink::Member.191"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS8_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS8_13basic_ostreamIcNS8_11char_traitsIcEEEEPKvE_8__invokeESN_SP_) #13
  %30 = bitcast %"class.blink::Member.191"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS8_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS8_13basic_ostreamIcNS8_11char_traitsIcEEEEPKvE_8__invokeESN_SP_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* %29, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.11, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %8, align 8
  %43 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %9, align 8
  %44 = icmp ugt %"class.blink::Member.191"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"class.blink::Member.191"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS8_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS8_13basic_ostreamIcNS8_11char_traitsIcEEEEPKvE_8__invokeESN_SP_) #13
  %49 = bitcast %"class.blink::Member.191"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS8_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS8_13basic_ostreamIcNS8_11char_traitsIcEEEEPKvE_8__invokeESN_SP_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0), i8* %48, i8* %50) #13
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.11, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #13
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #13
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEE15CheckComparableERKS7_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %11, align 8
  %15 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %12, align 8
  %16 = icmp eq %"class.blink::Member.191"* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS8_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS8_13basic_ostreamIcNS8_11char_traitsIcEEEEPKvE_8__invokeESN_SP_) #13
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS8_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS8_13basic_ostreamIcNS8_11char_traitsIcEEEEPKvE_8__invokeESN_SP_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i8* %20, i8* %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.11, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #13
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %32, align 8
  %36 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %33, align 8
  %37 = icmp eq %"class.blink::Member.191"* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast %"class.blink::Member.191"** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS8_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS8_13basic_ostreamIcNS8_11char_traitsIcEEEEPKvE_8__invokeESN_SP_) #13
  %42 = bitcast %"class.blink::Member.191"** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6MemberIKNS1_21CSSMathExpressionNodeEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS8_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS8_13basic_ostreamIcNS8_11char_traitsIcEEEEPKvE_8__invokeESN_SP_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i64 0, i64 0), i8* %41, i8* %43) #13
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.11, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #13
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #13
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #13
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #7

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #12

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSMathExpressionNode"* @_ZN5blink27CSSMathExpressionNodeParser28ParseAdditiveValueExpressionERNS_19CSSParserTokenRangeEi(%"class.blink::CSSMathExpressionNodeParser"*, %"class.blink::CSSParserTokenRange"* dereferenceable(16), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 0
  %5 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 1
  %7 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %8 = add nsw i32 %2, 1
  %9 = icmp ne %"class.blink::CSSParserToken"* %5, %7
  %10 = icmp slt i32 %2, 100
  %11 = and i1 %10, %9
  br i1 %11, label %12, label %76

12:                                               ; preds = %3
  %13 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink27CSSMathExpressionNodeParser34ParseValueMultiplicativeExpressionERNS_19CSSParserTokenRangeEi(%"class.blink::CSSMathExpressionNodeParser"* %0, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %1, i32 %8)
  %14 = icmp eq %"class.blink::CSSMathExpressionNode"* %13, null
  br i1 %14, label %76, label %15

15:                                               ; preds = %12
  %16 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  br label %17

17:                                               ; preds = %15, %73
  %18 = phi %"class.blink::CSSMathExpressionNode"* [ %74, %73 ], [ %13, %15 ]
  %19 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %4, align 8
  %20 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %21 = icmp eq %"class.blink::CSSParserToken"* %19, %20
  br i1 %21, label %76, label %22

22:                                               ; preds = %17
  %23 = icmp ult %"class.blink::CSSParserToken"* %19, %20
  %24 = select i1 %23, %"class.blink::CSSParserToken"* %19, %"class.blink::CSSParserToken"* %16
  %25 = tail call i32 @_ZN5blink26ParseCSSArithmeticOperatorERKNS_14CSSParserTokenE(%"class.blink::CSSParserToken"* dereferenceable(24) %24) #13
  %26 = icmp ugt i32 %25, 1
  br i1 %26, label %76, label %27

27:                                               ; preds = %22
  %28 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %4, align 8
  %29 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %30 = icmp ult %"class.blink::CSSParserToken"* %28, %29
  %31 = select i1 %30, %"class.blink::CSSParserToken"* %28, %"class.blink::CSSParserToken"* %16
  %32 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %31, i64 -1
  %33 = bitcast %"class.blink::CSSParserToken"* %32 to i32*
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 63
  %36 = icmp eq i32 %35, 17
  br i1 %36, label %37, label %76

37:                                               ; preds = %27
  %38 = icmp eq %"class.blink::CSSParserToken"* %28, %29
  br i1 %38, label %41, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %28, i64 1
  store %"class.blink::CSSParserToken"* %40, %"class.blink::CSSParserToken"** %4, align 8
  br label %41

41:                                               ; preds = %37, %39
  %42 = phi %"class.blink::CSSParserToken"* [ %28, %37 ], [ %40, %39 ]
  %43 = icmp ult %"class.blink::CSSParserToken"* %42, %29
  %44 = select i1 %43, %"class.blink::CSSParserToken"* %42, %"class.blink::CSSParserToken"* %16
  %45 = bitcast %"class.blink::CSSParserToken"* %44 to i32*
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 63
  %48 = icmp eq i32 %47, 17
  br i1 %48, label %49, label %76

49:                                               ; preds = %41
  %50 = icmp eq %"class.blink::CSSParserToken"* %42, %29
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %42, i64 1
  store %"class.blink::CSSParserToken"* %52, %"class.blink::CSSParserToken"** %4, align 8
  br label %53

53:                                               ; preds = %49, %51
  %54 = phi %"class.blink::CSSParserToken"* [ %52, %51 ], [ %29, %49 ]
  %55 = icmp ult %"class.blink::CSSParserToken"* %54, %29
  %56 = select i1 %55, %"class.blink::CSSParserToken"* %54, %"class.blink::CSSParserToken"* %16
  %57 = bitcast %"class.blink::CSSParserToken"* %56 to i32*
  %58 = load i32, i32* %57, align 8
  %59 = and i32 %58, 63
  %60 = icmp eq i32 %59, 17
  br i1 %60, label %61, label %70

61:                                               ; preds = %53, %61
  %62 = phi %"class.blink::CSSParserToken"* [ %63, %61 ], [ %54, %53 ]
  %63 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %62, i64 1
  store %"class.blink::CSSParserToken"* %63, %"class.blink::CSSParserToken"** %4, align 8
  %64 = icmp ult %"class.blink::CSSParserToken"* %63, %29
  %65 = select i1 %64, %"class.blink::CSSParserToken"* %63, %"class.blink::CSSParserToken"* %16
  %66 = bitcast %"class.blink::CSSParserToken"* %65 to i32*
  %67 = load i32, i32* %66, align 8
  %68 = and i32 %67, 63
  %69 = icmp eq i32 %68, 17
  br i1 %69, label %61, label %70

70:                                               ; preds = %61, %53
  %71 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink27CSSMathExpressionNodeParser34ParseValueMultiplicativeExpressionERNS_19CSSParserTokenRangeEi(%"class.blink::CSSMathExpressionNodeParser"* %0, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %1, i32 %8)
  %72 = icmp eq %"class.blink::CSSMathExpressionNode"* %71, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %70
  %74 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink32CSSMathExpressionBinaryOperation16CreateSimplifiedEPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorE(%"class.blink::CSSMathExpressionNode"* %18, %"class.blink::CSSMathExpressionNode"* nonnull %71, i32 %25)
  %75 = icmp eq %"class.blink::CSSMathExpressionNode"* %74, null
  br i1 %75, label %76, label %17

76:                                               ; preds = %73, %70, %41, %27, %22, %17, %12, %3
  %77 = phi %"class.blink::CSSMathExpressionNode"* [ null, %3 ], [ null, %12 ], [ null, %73 ], [ null, %70 ], [ null, %41 ], [ null, %27 ], [ %18, %22 ], [ %18, %17 ]
  ret %"class.blink::CSSMathExpressionNode"* %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSMathExpressionNode"* @_ZN5blink27CSSMathExpressionNodeParser34ParseValueMultiplicativeExpressionERNS_19CSSParserTokenRangeEi(%"class.blink::CSSMathExpressionNodeParser"*, %"class.blink::CSSParserTokenRange"* dereferenceable(16), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 0
  %5 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 1
  %7 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %8 = add nsw i32 %2, 1
  %9 = icmp ne %"class.blink::CSSParserToken"* %5, %7
  %10 = icmp slt i32 %2, 100
  %11 = and i1 %10, %9
  br i1 %11, label %12, label %57

12:                                               ; preds = %3
  %13 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink27CSSMathExpressionNodeParser14ParseValueTermERNS_19CSSParserTokenRangeEi(%"class.blink::CSSMathExpressionNodeParser"* %0, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %1, i32 %8)
  %14 = icmp eq %"class.blink::CSSMathExpressionNode"* %13, null
  br i1 %14, label %57, label %15

15:                                               ; preds = %12
  %16 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  br label %17

17:                                               ; preds = %15, %54
  %18 = phi %"class.blink::CSSMathExpressionNode"* [ %55, %54 ], [ %13, %15 ]
  %19 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %4, align 8
  %20 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %21 = icmp eq %"class.blink::CSSParserToken"* %19, %20
  br i1 %21, label %57, label %22

22:                                               ; preds = %17
  %23 = icmp ult %"class.blink::CSSParserToken"* %19, %20
  %24 = select i1 %23, %"class.blink::CSSParserToken"* %19, %"class.blink::CSSParserToken"* %16
  %25 = tail call i32 @_ZN5blink26ParseCSSArithmeticOperatorERKNS_14CSSParserTokenE(%"class.blink::CSSParserToken"* dereferenceable(24) %24) #13
  %26 = or i32 %25, 1
  %27 = icmp eq i32 %26, 3
  br i1 %27, label %28, label %57

28:                                               ; preds = %22
  %29 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %4, align 8
  %30 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %31 = icmp eq %"class.blink::CSSParserToken"* %29, %30
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %29, i64 1
  store %"class.blink::CSSParserToken"* %33, %"class.blink::CSSParserToken"** %4, align 8
  br label %34

34:                                               ; preds = %28, %32
  %35 = phi %"class.blink::CSSParserToken"* [ %33, %32 ], [ %29, %28 ]
  %36 = icmp ult %"class.blink::CSSParserToken"* %35, %30
  %37 = select i1 %36, %"class.blink::CSSParserToken"* %35, %"class.blink::CSSParserToken"* %16
  %38 = bitcast %"class.blink::CSSParserToken"* %37 to i32*
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 63
  %41 = icmp eq i32 %40, 17
  br i1 %41, label %42, label %51

42:                                               ; preds = %34, %42
  %43 = phi %"class.blink::CSSParserToken"* [ %44, %42 ], [ %35, %34 ]
  %44 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %43, i64 1
  store %"class.blink::CSSParserToken"* %44, %"class.blink::CSSParserToken"** %4, align 8
  %45 = icmp ult %"class.blink::CSSParserToken"* %44, %30
  %46 = select i1 %45, %"class.blink::CSSParserToken"* %44, %"class.blink::CSSParserToken"* %16
  %47 = bitcast %"class.blink::CSSParserToken"* %46 to i32*
  %48 = load i32, i32* %47, align 8
  %49 = and i32 %48, 63
  %50 = icmp eq i32 %49, 17
  br i1 %50, label %42, label %51

51:                                               ; preds = %42, %34
  %52 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink27CSSMathExpressionNodeParser14ParseValueTermERNS_19CSSParserTokenRangeEi(%"class.blink::CSSMathExpressionNodeParser"* %0, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %1, i32 %8)
  %53 = icmp eq %"class.blink::CSSMathExpressionNode"* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %51
  %55 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink32CSSMathExpressionBinaryOperation16CreateSimplifiedEPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorE(%"class.blink::CSSMathExpressionNode"* %18, %"class.blink::CSSMathExpressionNode"* nonnull %52, i32 %25)
  %56 = icmp eq %"class.blink::CSSMathExpressionNode"* %55, null
  br i1 %56, label %57, label %17

57:                                               ; preds = %54, %51, %22, %17, %12, %3
  %58 = phi %"class.blink::CSSMathExpressionNode"* [ null, %3 ], [ null, %12 ], [ null, %54 ], [ null, %51 ], [ %18, %22 ], [ %18, %17 ]
  ret %"class.blink::CSSMathExpressionNode"* %58
}

declare i32 @_ZN5blink26ParseCSSArithmeticOperatorERKNS_14CSSParserTokenE(%"class.blink::CSSParserToken"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSMathExpressionNode"* @_ZN5blink27CSSMathExpressionNodeParser14ParseValueTermERNS_19CSSParserTokenRangeEi(%"class.blink::CSSMathExpressionNodeParser"*, %"class.blink::CSSParserTokenRange"* dereferenceable(16), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::CSSParserTokenRange", align 8
  %5 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 0
  %6 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 1
  %8 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %7, align 8
  %9 = add nsw i32 %2, 1
  %10 = icmp ne %"class.blink::CSSParserToken"* %6, %8
  %11 = icmp slt i32 %2, 100
  %12 = and i1 %11, %10
  br i1 %12, label %13, label %127

13:                                               ; preds = %3
  %14 = icmp ult %"class.blink::CSSParserToken"* %6, %8
  %15 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %16 = select i1 %14, %"class.blink::CSSParserToken"* %6, %"class.blink::CSSParserToken"* %15
  %17 = bitcast %"class.blink::CSSParserToken"* %16 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 63
  %20 = icmp eq i32 %19, 23
  br i1 %20, label %24, label %21

21:                                               ; preds = %13
  %22 = tail call i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"* %16) #13
  %23 = icmp eq i32 %22, 817
  br i1 %23, label %24, label %70

24:                                               ; preds = %21, %13
  %25 = bitcast %"class.blink::CSSParserTokenRange"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #13
  %26 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %4, i64 0, i32 0
  %27 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %4, i64 0, i32 1
  %28 = tail call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink19CSSParserTokenRange12ConsumeBlockEv(%"class.blink::CSSParserTokenRange"* %1) #13
  %29 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %28, 0
  store %"class.blink::CSSParserToken"* %29, %"class.blink::CSSParserToken"** %26, align 8
  %30 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %28, 1
  store %"class.blink::CSSParserToken"* %30, %"class.blink::CSSParserToken"** %27, align 8
  %31 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %5, align 8
  %32 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %7, align 8
  %33 = icmp ult %"class.blink::CSSParserToken"* %31, %32
  %34 = select i1 %33, %"class.blink::CSSParserToken"* %31, %"class.blink::CSSParserToken"* %15
  %35 = bitcast %"class.blink::CSSParserToken"* %34 to i32*
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 63
  %38 = icmp eq i32 %37, 17
  br i1 %38, label %39, label %48

39:                                               ; preds = %24, %39
  %40 = phi %"class.blink::CSSParserToken"* [ %41, %39 ], [ %31, %24 ]
  %41 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %40, i64 1
  store %"class.blink::CSSParserToken"* %41, %"class.blink::CSSParserToken"** %5, align 8
  %42 = icmp ult %"class.blink::CSSParserToken"* %41, %32
  %43 = select i1 %42, %"class.blink::CSSParserToken"* %41, %"class.blink::CSSParserToken"* %15
  %44 = bitcast %"class.blink::CSSParserToken"* %43 to i32*
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 63
  %47 = icmp eq i32 %46, 17
  br i1 %47, label %39, label %48

48:                                               ; preds = %39, %24
  %49 = icmp ult %"class.blink::CSSParserToken"* %29, %30
  %50 = select i1 %49, %"class.blink::CSSParserToken"* %29, %"class.blink::CSSParserToken"* %15
  %51 = bitcast %"class.blink::CSSParserToken"* %50 to i32*
  %52 = load i32, i32* %51, align 8
  %53 = and i32 %52, 63
  %54 = icmp eq i32 %53, 17
  br i1 %54, label %55, label %64

55:                                               ; preds = %48, %55
  %56 = phi %"class.blink::CSSParserToken"* [ %57, %55 ], [ %29, %48 ]
  %57 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %56, i64 1
  store %"class.blink::CSSParserToken"* %57, %"class.blink::CSSParserToken"** %26, align 8
  %58 = icmp ult %"class.blink::CSSParserToken"* %57, %30
  %59 = select i1 %58, %"class.blink::CSSParserToken"* %57, %"class.blink::CSSParserToken"* %15
  %60 = bitcast %"class.blink::CSSParserToken"* %59 to i32*
  %61 = load i32, i32* %60, align 8
  %62 = and i32 %61, 63
  %63 = icmp eq i32 %62, 17
  br i1 %63, label %55, label %64

64:                                               ; preds = %55, %48
  %65 = call %"class.blink::CSSMathExpressionNode"* @_ZN5blink27CSSMathExpressionNodeParser28ParseAdditiveValueExpressionERNS_19CSSParserTokenRangeEi(%"class.blink::CSSMathExpressionNodeParser"* %0, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %4, i32 %9) #13
  %66 = icmp eq %"class.blink::CSSMathExpressionNode"* %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %65, i64 0, i32 3
  store i8 1, i8* %68, align 1
  br label %69

69:                                               ; preds = %64, %67
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #13
  br label %127

70:                                               ; preds = %21
  %71 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %5, align 8
  %72 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %7, align 8
  %73 = icmp ult %"class.blink::CSSParserToken"* %71, %72
  %74 = select i1 %73, %"class.blink::CSSParserToken"* %71, %"class.blink::CSSParserToken"* %15
  %75 = bitcast %"class.blink::CSSParserToken"* %74 to i32*
  %76 = load i32, i32* %75, align 8
  %77 = and i32 %76, 63
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %125

79:                                               ; preds = %70
  %80 = tail call i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"* %74) #13
  %81 = tail call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink19CSSParserTokenRange12ConsumeBlockEv(%"class.blink::CSSParserTokenRange"* %1) #13
  %82 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %81, 0
  %83 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %81, 1
  %84 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %5, align 8
  %85 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %7, align 8
  %86 = icmp ult %"class.blink::CSSParserToken"* %84, %85
  %87 = select i1 %86, %"class.blink::CSSParserToken"* %84, %"class.blink::CSSParserToken"* %15
  %88 = bitcast %"class.blink::CSSParserToken"* %87 to i32*
  %89 = load i32, i32* %88, align 8
  %90 = and i32 %89, 63
  %91 = icmp eq i32 %90, 17
  br i1 %91, label %92, label %101

92:                                               ; preds = %79, %92
  %93 = phi %"class.blink::CSSParserToken"* [ %94, %92 ], [ %84, %79 ]
  %94 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %93, i64 1
  store %"class.blink::CSSParserToken"* %94, %"class.blink::CSSParserToken"** %5, align 8
  %95 = icmp ult %"class.blink::CSSParserToken"* %94, %85
  %96 = select i1 %95, %"class.blink::CSSParserToken"* %94, %"class.blink::CSSParserToken"* %15
  %97 = bitcast %"class.blink::CSSParserToken"* %96 to i32*
  %98 = load i32, i32* %97, align 8
  %99 = and i32 %98, 63
  %100 = icmp eq i32 %99, 17
  br i1 %100, label %92, label %101

101:                                              ; preds = %92, %79
  %102 = icmp ult %"class.blink::CSSParserToken"* %82, %83
  %103 = select i1 %102, %"class.blink::CSSParserToken"* %82, %"class.blink::CSSParserToken"* %15
  %104 = bitcast %"class.blink::CSSParserToken"* %103 to i32*
  %105 = load i32, i32* %104, align 8
  %106 = and i32 %105, 63
  %107 = icmp eq i32 %106, 17
  br i1 %107, label %108, label %117

108:                                              ; preds = %101, %108
  %109 = phi %"class.blink::CSSParserToken"* [ %110, %108 ], [ %82, %101 ]
  %110 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %109, i64 1
  %111 = icmp ult %"class.blink::CSSParserToken"* %110, %83
  %112 = select i1 %111, %"class.blink::CSSParserToken"* %110, %"class.blink::CSSParserToken"* %15
  %113 = bitcast %"class.blink::CSSParserToken"* %112 to i32*
  %114 = load i32, i32* %113, align 8
  %115 = and i32 %114, 63
  %116 = icmp eq i32 %115, 17
  br i1 %116, label %108, label %117

117:                                              ; preds = %108, %101
  %118 = phi %"class.blink::CSSParserToken"* [ %82, %101 ], [ %110, %108 ]
  switch i32 %80, label %125 [
    i32 819, label %119
    i32 820, label %121
    i32 821, label %123
  ]

119:                                              ; preds = %117
  %120 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink27CSSMathExpressionNodeParser13ParseMinOrMaxENS_19CSSParserTokenRangeENS_15CSSMathOperatorEi(%"class.blink::CSSMathExpressionNodeParser"* %0, %"class.blink::CSSParserToken"* %118, %"class.blink::CSSParserToken"* %83, i32 4, i32 %9)
  br label %127

121:                                              ; preds = %117
  %122 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink27CSSMathExpressionNodeParser13ParseMinOrMaxENS_19CSSParserTokenRangeENS_15CSSMathOperatorEi(%"class.blink::CSSMathExpressionNodeParser"* %0, %"class.blink::CSSParserToken"* %118, %"class.blink::CSSParserToken"* %83, i32 5, i32 %9)
  br label %127

123:                                              ; preds = %117
  %124 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink27CSSMathExpressionNodeParser10ParseClampENS_19CSSParserTokenRangeEi(%"class.blink::CSSMathExpressionNodeParser"* %0, %"class.blink::CSSParserToken"* %118, %"class.blink::CSSParserToken"* %83, i32 %9)
  br label %127

125:                                              ; preds = %117, %70
  %126 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink27CSSMathExpressionNodeParser10ParseValueERNS_19CSSParserTokenRangeE(%"class.blink::CSSMathExpressionNodeParser"* %0, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %1)
  br label %127

127:                                              ; preds = %119, %121, %123, %3, %125, %69
  %128 = phi %"class.blink::CSSMathExpressionNode"* [ %65, %69 ], [ %126, %125 ], [ null, %3 ], [ %120, %119 ], [ %122, %121 ], [ %124, %123 ]
  ret %"class.blink::CSSMathExpressionNode"* %128
}

declare i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"*) local_unnamed_addr #2

declare { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink19CSSParserTokenRange12ConsumeBlockEv(%"class.blink::CSSParserTokenRange"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSMathExpressionNode"* @_ZN5blink27CSSMathExpressionNodeParser10ParseValueERNS_19CSSParserTokenRangeE(%"class.blink::CSSMathExpressionNodeParser"*, %"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca %"class.blink::CSSNumericLiteralValue"*, align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.blink::CSSNumericLiteralValue"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.blink::CSSNumericLiteralValue"*, align 8
  %9 = alloca %"class.blink::CSSNumericLiteralValue"*, align 8
  %10 = alloca i8, align 1
  %11 = alloca %"class.blink::CSSParserToken", align 8
  %12 = bitcast %"class.blink::CSSParserToken"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #13
  %13 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %11, i64 0, i32 0
  store i24 -5592406, i24* %13, align 8
  %14 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %11, i64 0, i32 1
  store i32 -1431655766, i32* %14, align 4
  %15 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %11, i64 0, i32 2
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %11, i64 0, i32 3, i32 0
  store double 0xFFFFFFFFFFFFFFFF, double* %16, align 8
  %17 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 0
  %18 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 1
  %20 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %19, align 8
  %21 = icmp eq %"class.blink::CSSParserToken"* %18, %20
  br i1 %21, label %22, label %24

22:                                               ; preds = %2
  %23 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  br label %27

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %18, i64 1
  store %"class.blink::CSSParserToken"* %25, %"class.blink::CSSParserToken"** %17, align 8
  %26 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  br label %27

27:                                               ; preds = %24, %22
  %28 = phi %"class.blink::CSSParserToken"* [ %23, %22 ], [ %26, %24 ]
  %29 = phi %"class.blink::CSSParserToken"* [ %18, %22 ], [ %25, %24 ]
  %30 = phi %"class.blink::CSSParserToken"* [ %23, %22 ], [ %18, %24 ]
  %31 = icmp ult %"class.blink::CSSParserToken"* %29, %20
  %32 = select i1 %31, %"class.blink::CSSParserToken"* %29, %"class.blink::CSSParserToken"* %28
  %33 = bitcast %"class.blink::CSSParserToken"* %32 to i32*
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 63
  %36 = icmp eq i32 %35, 17
  br i1 %36, label %37, label %46

37:                                               ; preds = %27, %37
  %38 = phi %"class.blink::CSSParserToken"* [ %39, %37 ], [ %29, %27 ]
  %39 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %38, i64 1
  store %"class.blink::CSSParserToken"* %39, %"class.blink::CSSParserToken"** %17, align 8
  %40 = icmp ult %"class.blink::CSSParserToken"* %39, %20
  %41 = select i1 %40, %"class.blink::CSSParserToken"* %39, %"class.blink::CSSParserToken"* %28
  %42 = bitcast %"class.blink::CSSParserToken"* %41 to i32*
  %43 = load i32, i32* %42, align 8
  %44 = and i32 %43, 63
  %45 = icmp eq i32 %44, 17
  br i1 %45, label %37, label %46

46:                                               ; preds = %37, %27
  %47 = bitcast %"class.blink::CSSParserToken"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %47, i64 24, i1 false)
  %48 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %92, label %50

50:                                               ; preds = %46
  %51 = call i32 @_ZNK5blink14CSSParserToken2IdEv(%"class.blink::CSSParserToken"* nonnull %11) #13
  %52 = icmp eq i32 %51, 822
  br i1 %52, label %53, label %63

53:                                               ; preds = %50
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5)
  store i8 0, i8* %5, align 1
  %54 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %53
  %57 = bitcast %"class.blink::CSSNumericLiteralValue"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #13
  %58 = call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double 0x7FF0000000000000, i32 1) #13
  store %"class.blink::CSSNumericLiteralValue"* %58, %"class.blink::CSSNumericLiteralValue"** %6, align 8
  %59 = call %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink25MakeGarbageCollectedTraitINS_31CSSMathExpressionNumericLiteralEE4CallIJPNS_22CSSNumericLiteralValueERbEEEPS1_DpOT_(%"class.blink::CSSNumericLiteralValue"** nonnull dereferenceable(8) %6, i8* nonnull dereferenceable(1) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #13
  %60 = bitcast %"class.blink::CSSMathExpressionNumericLiteral"* %59 to %"class.blink::CSSMathExpressionNode"*
  br label %61

61:                                               ; preds = %53, %56
  %62 = phi %"class.blink::CSSMathExpressionNode"* [ %60, %56 ], [ null, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5)
  br label %110

63:                                               ; preds = %50
  %64 = call i32 @_ZNK5blink14CSSParserToken2IdEv(%"class.blink::CSSParserToken"* nonnull %11) #13
  %65 = icmp eq i32 %64, 823
  br i1 %65, label %66, label %79

66:                                               ; preds = %63
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3)
  store i8 0, i8* %3, align 1
  %67 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %68 = icmp eq i8 %67, 0
  %69 = call double @llvm.fabs.f64(double 0xFFF0000000000000) #14
  %70 = fcmp oeq double %69, 0x7FF0000000000000
  %71 = and i1 %70, %68
  br i1 %71, label %77, label %72

72:                                               ; preds = %66
  %73 = bitcast %"class.blink::CSSNumericLiteralValue"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #13
  %74 = call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double 0xFFF0000000000000, i32 1) #13
  store %"class.blink::CSSNumericLiteralValue"* %74, %"class.blink::CSSNumericLiteralValue"** %4, align 8
  %75 = call %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink25MakeGarbageCollectedTraitINS_31CSSMathExpressionNumericLiteralEE4CallIJPNS_22CSSNumericLiteralValueERbEEEPS1_DpOT_(%"class.blink::CSSNumericLiteralValue"** nonnull dereferenceable(8) %4, i8* nonnull dereferenceable(1) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #13
  %76 = bitcast %"class.blink::CSSMathExpressionNumericLiteral"* %75 to %"class.blink::CSSMathExpressionNode"*
  br label %77

77:                                               ; preds = %66, %72
  %78 = phi %"class.blink::CSSMathExpressionNode"* [ %76, %72 ], [ null, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3)
  br label %110

79:                                               ; preds = %63
  %80 = call i32 @_ZNK5blink14CSSParserToken2IdEv(%"class.blink::CSSParserToken"* nonnull %11) #13
  %81 = icmp eq i32 %80, 824
  br i1 %81, label %82, label %92

82:                                               ; preds = %79
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7)
  store i8 0, i8* %7, align 1
  %83 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_css_calc_infinity_and_na_n_enabled_E, align 1, !range !2
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = bitcast %"class.blink::CSSNumericLiteralValue"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #13
  %87 = call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double 0x7FF8000000000000, i32 1) #13
  store %"class.blink::CSSNumericLiteralValue"* %87, %"class.blink::CSSNumericLiteralValue"** %8, align 8
  %88 = call %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink25MakeGarbageCollectedTraitINS_31CSSMathExpressionNumericLiteralEE4CallIJPNS_22CSSNumericLiteralValueERbEEEPS1_DpOT_(%"class.blink::CSSNumericLiteralValue"** nonnull dereferenceable(8) %8, i8* nonnull dereferenceable(1) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #13
  %89 = bitcast %"class.blink::CSSMathExpressionNumericLiteral"* %88 to %"class.blink::CSSMathExpressionNode"*
  br label %90

90:                                               ; preds = %82, %85
  %91 = phi %"class.blink::CSSMathExpressionNode"* [ %89, %85 ], [ null, %82 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7)
  br label %110

92:                                               ; preds = %46, %79
  %93 = bitcast %"class.blink::CSSParserToken"* %11 to i32*
  %94 = load i32, i32* %93, align 8
  %95 = and i32 %94, 63
  %96 = add nsw i32 %95, -7
  %97 = icmp ult i32 %96, 3
  br i1 %97, label %98, label %110

98:                                               ; preds = %92
  %99 = lshr i32 %94, 11
  %100 = and i32 %99, 127
  switch i32 %100, label %110 [
    i32 1, label %101
    i32 31, label %101
    i32 2, label %101
    i32 3, label %101
    i32 4, label %101
    i32 5, label %101
    i32 6, label %101
    i32 7, label %101
    i32 11, label %101
    i32 8, label %101
    i32 9, label %101
    i32 10, label %101
    i32 18, label %101
    i32 16, label %101
    i32 17, label %101
    i32 12, label %101
    i32 13, label %101
    i32 14, label %101
    i32 15, label %101
    i32 19, label %101
    i32 21, label %101
    i32 20, label %101
    i32 22, label %101
    i32 23, label %101
    i32 24, label %101
    i32 25, label %101
    i32 26, label %101
  ]

101:                                              ; preds = %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98
  %102 = call double @_ZNK5blink14CSSParserToken12NumericValueEv(%"class.blink::CSSParserToken"* nonnull %11) #13
  %103 = call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %102, i32 %100) #13
  %104 = call i32 @_ZNK5blink14CSSParserToken19GetNumericValueTypeEv(%"class.blink::CSSParserToken"* nonnull %11) #13
  %105 = icmp eq i32 %104, 0
  %106 = bitcast %"class.blink::CSSNumericLiteralValue"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10)
  store %"class.blink::CSSNumericLiteralValue"* %103, %"class.blink::CSSNumericLiteralValue"** %9, align 8
  %107 = zext i1 %105 to i8
  store i8 %107, i8* %10, align 1
  %108 = call %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink25MakeGarbageCollectedTraitINS_31CSSMathExpressionNumericLiteralEE4CallIJRPKNS_22CSSNumericLiteralValueERbEEEPS1_DpOT_(%"class.blink::CSSNumericLiteralValue"** nonnull dereferenceable(8) %9, i8* nonnull dereferenceable(1) %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10)
  %109 = bitcast %"class.blink::CSSMathExpressionNumericLiteral"* %108 to %"class.blink::CSSMathExpressionNode"*
  br label %110

110:                                              ; preds = %92, %98, %101, %90, %77, %61
  %111 = phi %"class.blink::CSSMathExpressionNode"* [ %62, %61 ], [ %78, %77 ], [ %91, %90 ], [ %109, %101 ], [ null, %98 ], [ null, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #13
  ret %"class.blink::CSSMathExpressionNode"* %111
}

declare i32 @_ZNK5blink14CSSParserToken2IdEv(%"class.blink::CSSParserToken"*) local_unnamed_addr #2

declare double @_ZNK5blink14CSSParserToken12NumericValueEv(%"class.blink::CSSParserToken"*) local_unnamed_addr #2

declare i32 @_ZNK5blink14CSSParserToken19GetNumericValueTypeEv(%"class.blink::CSSParserToken"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink17css_parsing_utils31ConsumeCommaIncludingWhitespaceERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.206"*, %"class.blink::CSSMathExpressionNode"** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.206"* %0, i32 %14) #13
  %15 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %16, i64 %18
  %20 = bitcast %"class.blink::CSSMathExpressionNode"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.191"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #13
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.206"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %8, align 8
  %10 = icmp eq %"class.blink::Member.191"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_21CSSMathExpressionNodeEEEEEmm(i64 %11) #13
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_21CSSMathExpressionNodeEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %14) #13
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.206"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #13
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %8, align 8
  %26 = icmp eq %"class.blink::Member.191"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.191"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #13
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #13
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #13
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0)) #13
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #13
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.206"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.206"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.206"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.206"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #13
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #13
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_21CSSMathExpressionNodeEEEEEmm(i64 %14) #13
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_21CSSMathExpressionNodeEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #13
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.191"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.191"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.206"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #13
  %33 = bitcast %"class.WTF::Vector.206"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #13
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #13
  %42 = bitcast %"class.WTF::Vector.206"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #13
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_21CSSMathExpressionNodeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.16, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_21CSSMathExpressionNodeEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.18, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_21CSSMathExpressionNodeEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_21CSSMathExpressionNodeEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_21CSSMathExpressionNodeEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_21CSSMathExpressionNodeEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_21CSSMathExpressionNodeEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([195 x i8], [195 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberIKNS1_21CSSMathExpressionNodeEEENS_12VectorTraitsIS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #11 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #13
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i64 0, i64 0), i8* %21, i8* %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #13
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_21CSSMathExpressionNodeEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.191"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.191"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21CSSMathExpressionNodeEE5TraceEPNS_7VisitorEPKv) #13
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_21CSSMathExpressionNodeEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEEC2ESt16initializer_listIS5_E(%"class.WTF::Vector.206"*, %"class.blink::Member.191"*, i64) unnamed_addr #0 comdat align 2 {
  %4 = icmp ult i64 %2, 4294967296
  br i1 %4, label %6, label %5, !prof !4

5:                                                ; preds = %3
  tail call void @llvm.trap() #13
  unreachable

6:                                                ; preds = %3
  %7 = trunc i64 %2 to i32
  %8 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Member.191"* null, %"class.blink::Member.191"** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %9, align 8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %7, i32* %12, align 4
  br label %52

13:                                               ; preds = %6
  %14 = and i64 %2, 4294967295
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_21CSSMathExpressionNodeEEEEEmm(i64 %14) #13
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_21CSSMathExpressionNodeEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #13
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = bitcast %"class.WTF::Vector.206"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = trunc i64 %16 to i32
  store i32 %20, i32* %9, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  %23 = bitcast %"class.blink::HeapVectorBacking"* %17 to %"class.blink::Member.191"*
  br i1 %22, label %28, label %24

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %26 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %25) #13
  %27 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %8, align 8
  br label %28

28:                                               ; preds = %13, %24
  %29 = phi %"class.blink::Member.191"* [ %23, %13 ], [ %27, %24 ]
  %30 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %7, i32* %30, align 4
  %31 = icmp ne %"class.blink::Member.191"* %29, null
  %32 = icmp ne %"class.blink::Member.191"* %1, null
  %33 = and i1 %32, %31
  br i1 %33, label %34, label %52, !prof !4

34:                                               ; preds = %28
  %35 = bitcast %"class.blink::Member.191"* %29 to i8*
  %36 = bitcast %"class.blink::Member.191"* %1 to i8*
  %37 = shl nuw i64 %2, 3
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %35, i8* nonnull %36, i64 %37) #13
  %38 = icmp eq i64 %2, 0
  br i1 %38, label %52, label %39

39:                                               ; preds = %34, %49
  %40 = phi i64 [ %42, %49 ], [ %2, %34 ]
  %41 = phi %"class.blink::Member.191"* [ %50, %49 ], [ %29, %34 ]
  %42 = add i64 %40, -1
  %43 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %39
  %46 = bitcast %"class.blink::Member.191"* %41 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #13
  br label %49

49:                                               ; preds = %45, %39
  %50 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %41, i64 1
  %51 = icmp eq i64 %42, 0
  br i1 %51, label %52, label %39

52:                                               ; preds = %49, %11, %28, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink25MakeGarbageCollectedTraitINS_31CSSMathExpressionNumericLiteralEE4CallIJRPKNS_22CSSNumericLiteralValueERbEEEPS1_DpOT_(%"class.blink::CSSNumericLiteralValue"** dereferenceable(8), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21CSSMathExpressionNodeEEEPhm(i64 24) #13
  %4 = bitcast i8* %3 to %"class.blink::CSSMathExpressionNumericLiteral"*
  %5 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %0, align 8
  %6 = load i8, i8* %1, align 1, !range !2
  %7 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %5, i64 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8
  %9 = and i8 %8, 127
  %10 = zext i8 %9 to i32
  %11 = add nsw i32 %10, -1
  %12 = icmp ult i32 %11, 31
  br i1 %12, label %13, label %17

13:                                               ; preds = %2
  %14 = sext i32 %11 to i64
  %15 = getelementptr inbounds [31 x i32], [31 x i32]* @switch.table._ZN5blink25MakeGarbageCollectedTraitINS_31CSSMathExpressionNumericLiteralEE4CallIJPNS_22CSSNumericLiteralValueERbEEEPS1_DpOT_, i64 0, i64 %14
  %16 = load i32, i32* %15, align 4
  br label %17

17:                                               ; preds = %2, %13
  %18 = phi i32 [ %16, %13 ], [ 7, %2 ]
  %19 = bitcast i8* %3 to i32 (...)***
  %20 = getelementptr inbounds i8, i8* %3, i64 8
  %21 = bitcast i8* %20 to i32*
  store i32 %18, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %3, i64 12
  store i8 %6, i8* %22, align 4
  %23 = getelementptr inbounds i8, i8* %3, i64 13
  store i8 0, i8* %23, align 1
  %24 = getelementptr inbounds i8, i8* %3, i64 14
  store i8 0, i8* %24, align 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink31CSSMathExpressionNumericLiteralE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %25 = getelementptr inbounds i8, i8* %3, i64 16
  %26 = bitcast i8* %25 to %"class.blink::CSSNumericLiteralValue"**
  store %"class.blink::CSSNumericLiteralValue"* %5, %"class.blink::CSSNumericLiteralValue"** %26, align 8
  %27 = getelementptr inbounds i8, i8* %3, i64 -4
  %28 = bitcast i8* %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = or i16 %29, 1
  store atomic i16 %30, i16* %28 release, align 2
  ret %"class.blink::CSSMathExpressionNumericLiteral"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_21CSSMathExpressionNodeEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_21CSSMathExpressionNodeEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_21CSSMathExpressionNodeEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_21CSSMathExpressionNodeEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21CSSMathExpressionNodeEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21CSSMathExpressionNodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSMathExpressionNode"*
  %4 = bitcast i8* %1 to void (%"class.blink::CSSMathExpressionNode"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CSSMathExpressionNode"*, %"class.blink::Visitor"*)**, void (%"class.blink::CSSMathExpressionNode"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CSSMathExpressionNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSMathExpressionNode"*, %"class.blink::Visitor"*)** %5, i64 15
  %7 = load void (%"class.blink::CSSMathExpressionNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSMathExpressionNode"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CSSMathExpressionNode"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_21CSSMathExpressionNodeEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink25MakeGarbageCollectedTraitINS_31CSSMathExpressionNumericLiteralEE4CallIJPNS_22CSSNumericLiteralValueERbEEEPS1_DpOT_(%"class.blink::CSSNumericLiteralValue"** dereferenceable(8), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21CSSMathExpressionNodeEEEPhm(i64 24) #13
  %4 = bitcast i8* %3 to %"class.blink::CSSMathExpressionNumericLiteral"*
  %5 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %0, align 8
  %6 = load i8, i8* %1, align 1, !range !2
  %7 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %5, i64 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8
  %9 = and i8 %8, 127
  %10 = zext i8 %9 to i32
  %11 = add nsw i32 %10, -1
  %12 = icmp ult i32 %11, 31
  br i1 %12, label %13, label %17

13:                                               ; preds = %2
  %14 = sext i32 %11 to i64
  %15 = getelementptr inbounds [31 x i32], [31 x i32]* @switch.table._ZN5blink25MakeGarbageCollectedTraitINS_31CSSMathExpressionNumericLiteralEE4CallIJPNS_22CSSNumericLiteralValueERbEEEPS1_DpOT_, i64 0, i64 %14
  %16 = load i32, i32* %15, align 4
  br label %17

17:                                               ; preds = %2, %13
  %18 = phi i32 [ %16, %13 ], [ 7, %2 ]
  %19 = bitcast i8* %3 to i32 (...)***
  %20 = getelementptr inbounds i8, i8* %3, i64 8
  %21 = bitcast i8* %20 to i32*
  store i32 %18, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %3, i64 12
  store i8 %6, i8* %22, align 4
  %23 = getelementptr inbounds i8, i8* %3, i64 13
  store i8 0, i8* %23, align 1
  %24 = getelementptr inbounds i8, i8* %3, i64 14
  store i8 0, i8* %24, align 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink31CSSMathExpressionNumericLiteralE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %25 = getelementptr inbounds i8, i8* %3, i64 16
  %26 = bitcast i8* %25 to %"class.blink::CSSNumericLiteralValue"**
  store %"class.blink::CSSNumericLiteralValue"* %5, %"class.blink::CSSNumericLiteralValue"** %26, align 8
  %27 = getelementptr inbounds i8, i8* %3, i64 -4
  %28 = bitcast i8* %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = or i16 %29, 1
  store atomic i16 %30, i16* %28 release, align 2
  ret %"class.blink::CSSMathExpressionNumericLiteral"* %4
}

declare zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"*, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_22CSSNumericLiteralValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.191"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.206"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %24, i64 %25
  ret %"class.blink::Member.191"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink25CalculationExpressionNodeEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIKN5blink25CalculationExpressionNodeEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_(%"class.WTF::Vector.210"*, %class.scoped_refptr.3* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.210", %"class.WTF::Vector.210"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.210", %"class.WTF::Vector.210"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %class.scoped_refptr.3*, %class.scoped_refptr.3** %6, align 8
  %8 = icmp ugt %class.scoped_refptr.3* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %7, i64 %10
  %12 = icmp ugt %class.scoped_refptr.3* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.210", %"class.WTF::Vector.210"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %class.scoped_refptr.3* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink25CalculationExpressionNodeEEEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink25CalculationExpressionNodeEEEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.210"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %class.scoped_refptr.3*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %class.scoped_refptr.3*, %class.scoped_refptr.3** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %class.scoped_refptr.3* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %class.scoped_refptr.3* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.210"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.210"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %class.scoped_refptr.3*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %class.scoped_refptr.3* %1 to i64
  %56 = ptrtoint %class.scoped_refptr.3* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.210", %"class.WTF::Vector.210"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq %class.scoped_refptr.3* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink25CalculationExpressionNodeEEEEmm(i64 %71) #13
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink25CalculationExpressionNodeEEEEPKcv, i64 0, i64 0)) #13
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.210"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %class.scoped_refptr.3*, %class.scoped_refptr.3** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %class.scoped_refptr.3* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %class.scoped_refptr.3* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #13
  %87 = bitcast %"class.WTF::Vector.210"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #13
  %91 = bitcast %"class.WTF::Vector.210"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %class.scoped_refptr.3*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %class.scoped_refptr.3* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %class.scoped_refptr.3* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %class.scoped_refptr.3* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %100, i64 %103
  %105 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %101, i64 0, i32 0
  %106 = bitcast %class.scoped_refptr.3* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %class.scoped_refptr.3* %104 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.blink::CalculationExpressionNode"* null, %"class.blink::CalculationExpressionNode"** %105, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.206"*, %"class.blink::CSSMathExpressionNode"** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_21CSSMathExpressionNodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.206"* %0, i32 %14) #13
  %15 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.191"*, %"class.blink::Member.191"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.191", %"class.blink::Member.191"* %16, i64 %18
  %20 = bitcast %"class.blink::CSSMathExpressionNode"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.191"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #13
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
