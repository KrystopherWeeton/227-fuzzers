; ModuleID = '../../third_party/icu/source/common/utrace.cpp'
source_filename = "../../third_party/icu/source/common/utrace.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@_ZL15pTraceEntryFunc = internal unnamed_addr global void (i8*, i32)* null, align 8
@_ZL13gTraceContext = internal unnamed_addr global i8* null, align 8
@_ZL14pTraceExitFunc = internal unnamed_addr global void (i8*, i32, i8*, %struct.__va_list_tag*)* null, align 8
@_ZL8gExitFmt = internal constant [9 x i8] c"Returns.\00", align 1
@_ZL13gExitFmtValue = internal constant [12 x i8] c"Returns %d.\00", align 1
@_ZL14gExitFmtStatus = internal constant [23 x i8] c"Returns.  Status = %d.\00", align 16
@_ZL19gExitFmtValueStatus = internal constant [26 x i8] c"Returns %d.  Status = %d.\00", align 16
@_ZL17gExitFmtPtrStatus = internal constant [26 x i8] c"Returns %d.  Status = %p.\00", align 16
@_ZL14pTraceDataFunc = internal unnamed_addr global void (i8*, i32, i32, i8*, %struct.__va_list_tag*)* null, align 8
@.str = private unnamed_addr constant [8 x i8] c"*NULL* \00", align 1
@_ZL12utrace_level = internal unnamed_addr global i32 0, align 4
@_ZL8trFnName = internal unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i32 0, i32 0), i8* null], align 16
@_ZL11trConvNames = internal unnamed_addr constant [9 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i32 0, i32 0), i8* null], align 16
@_ZL11trCollNames = internal unnamed_addr constant [10 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21, i32 0, i32 0), i8* null], align 16
@_ZL14trResDataNames = internal unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i32 0, i32 0), i8* null], align 16
@.str.1 = private unnamed_addr constant [30 x i8] c"[BOGUS Trace Function Number]\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"*NULL*\00", align 1
@_ZZL14outputHexBytesliPcPiiE9gHexChars = internal unnamed_addr constant [17 x i8] c"0123456789abcdef\00", align 16
@.str.3 = private unnamed_addr constant [7 x i8] c"u_init\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"u_cleanup\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"ucnv_open\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"ucnv_openPackage\00", align 1
@.str.7 = private unnamed_addr constant [21 x i8] c"ucnv_openAlgorithmic\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"ucnv_clone\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"ucnv_close\00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"ucnv_flushCache\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"ucnv_load\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"ucnv_unload\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"ucol_open\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"ucol_close\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"ucol_strcoll\00", align 1
@.str.16 = private unnamed_addr constant [16 x i8] c"ucol_getSortKey\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"ucol_getLocale\00", align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"ucol_nextSortKeyPart\00", align 1
@.str.19 = private unnamed_addr constant [17 x i8] c"ucol_strcollIter\00", align 1
@.str.20 = private unnamed_addr constant [25 x i8] c"ucol_openFromShortString\00", align 1
@.str.21 = private unnamed_addr constant [17 x i8] c"ucol_strcollUTF8\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"resc\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"bundle-open\00", align 1
@.str.24 = private unnamed_addr constant [10 x i8] c"file-open\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"res-open\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @utrace_entry_69(i32) local_unnamed_addr #0 {
  %2 = load void (i8*, i32)*, void (i8*, i32)** @_ZL15pTraceEntryFunc, align 8
  %3 = icmp eq void (i8*, i32)* %2, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = load i8*, i8** @_ZL13gTraceContext, align 8
  tail call void %2(i8* %5, i32 %0) #3
  br label %6

6:                                                ; preds = %1, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @utrace_exit_69(i32, i32, ...) local_unnamed_addr #0 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = load void (i8*, i32, i8*, %struct.__va_list_tag*)*, void (i8*, i32, i8*, %struct.__va_list_tag*)** @_ZL14pTraceExitFunc, align 8
  %5 = icmp eq void (i8*, i32, i8*, %struct.__va_list_tag*)* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %2
  %7 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #3
  %8 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %9 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 24, i1 false)
  switch i32 %1, label %14 [
    i32 0, label %15
    i32 1, label %10
    i32 16, label %11
    i32 17, label %12
    i32 18, label %13
  ]

10:                                               ; preds = %6
  br label %15

11:                                               ; preds = %6
  br label %15

12:                                               ; preds = %6
  br label %15

13:                                               ; preds = %6
  br label %15

14:                                               ; preds = %6
  tail call void @abort() #8
  unreachable

15:                                               ; preds = %6, %13, %12, %11, %10
  %16 = phi i8* [ getelementptr inbounds ([26 x i8], [26 x i8]* @_ZL17gExitFmtPtrStatus, i64 0, i64 0), %13 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @_ZL19gExitFmtValueStatus, i64 0, i64 0), %12 ], [ getelementptr inbounds ([23 x i8], [23 x i8]* @_ZL14gExitFmtStatus, i64 0, i64 0), %11 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @_ZL13gExitFmtValue, i64 0, i64 0), %10 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @_ZL8gExitFmt, i64 0, i64 0), %6 ]
  call void @llvm.va_start(i8* nonnull %7)
  %17 = load i8*, i8** @_ZL13gTraceContext, align 8
  call void %4(i8* %17, i32 %0, i8* nonnull %16, %struct.__va_list_tag* nonnull %8) #3
  call void @llvm.va_end(i8* nonnull %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #3
  br label %18

18:                                               ; preds = %2, %15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #3

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @utrace_data_69(i32, i32, i8*, ...) local_unnamed_addr #0 {
  %4 = alloca [1 x %struct.__va_list_tag], align 16
  %5 = load void (i8*, i32, i32, i8*, %struct.__va_list_tag*)*, void (i8*, i32, i32, i8*, %struct.__va_list_tag*)** @_ZL14pTraceDataFunc, align 8
  %6 = icmp eq void (i8*, i32, i32, i8*, %struct.__va_list_tag*)* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #3
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %4, i64 0, i64 0
  %10 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %8)
  %11 = load i8*, i8** @_ZL13gTraceContext, align 8
  call void %5(i8* %11, i32 %0, i32 %1, i8* %2, %struct.__va_list_tag* nonnull %9) #3
  call void @llvm.va_end(i8* nonnull %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #3
  br label %12

12:                                               ; preds = %3, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @utrace_vformat_69(i8*, i32, i32, i8* nocapture readonly, %struct.__va_list_tag*) local_unnamed_addr #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #3
  store i32 0, i32* %8, align 4
  %10 = icmp sgt i32 %2, 0
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %4, i64 0, i32 0
  %12 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %4, i64 0, i32 2
  %13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %4, i64 0, i32 3
  %14 = bitcast i8** %7 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 7
  %16 = xor i1 %10, true
  %17 = bitcast i8** %6 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 7
  %19 = icmp sgt i32 %2, 1
  %20 = select i1 %19, i32 %2, i32 1
  %21 = icmp sgt i32 %2, 1
  %22 = select i1 %21, i32 %2, i32 1
  %23 = icmp sgt i32 %2, 1
  %24 = select i1 %23, i32 %2, i32 1
  %25 = icmp sgt i32 %2, 1
  %26 = select i1 %25, i32 %2, i32 1
  %27 = icmp sgt i32 %2, 1
  %28 = select i1 %27, i32 %2, i32 1
  %29 = icmp sgt i32 %2, 1
  %30 = select i1 %29, i32 %2, i32 1
  %31 = icmp sgt i32 %2, 1
  %32 = select i1 %31, i32 %2, i32 1
  %33 = icmp sgt i32 %2, 1
  %34 = select i1 %33, i32 %2, i32 1
  %35 = icmp sgt i32 %2, 1
  %36 = select i1 %35, i32 %2, i32 1
  %37 = icmp sgt i32 %2, 1
  %38 = select i1 %37, i32 %2, i32 1
  %39 = icmp sgt i32 %2, 1
  %40 = select i1 %39, i32 %2, i32 1
  %41 = icmp sgt i32 %2, 1
  %42 = select i1 %41, i32 %2, i32 1
  %43 = icmp sgt i32 %2, 1
  %44 = select i1 %43, i32 %2, i32 1
  %45 = icmp ult i32 %44, 16
  %46 = and i32 %44, 2147483632
  %47 = insertelement <16 x i32> undef, i32 %1, i32 0
  %48 = shufflevector <16 x i32> %47, <16 x i32> undef, <16 x i32> zeroinitializer
  %49 = icmp eq i32 %44, %46
  %50 = icmp ult i32 %42, 16
  %51 = and i32 %42, 2147483632
  %52 = insertelement <16 x i32> undef, i32 %1, i32 0
  %53 = shufflevector <16 x i32> %52, <16 x i32> undef, <16 x i32> zeroinitializer
  %54 = icmp eq i32 %42, %51
  %55 = icmp ult i32 %40, 16
  %56 = and i32 %40, 2147483632
  %57 = insertelement <16 x i32> undef, i32 %1, i32 0
  %58 = shufflevector <16 x i32> %57, <16 x i32> undef, <16 x i32> zeroinitializer
  %59 = icmp eq i32 %40, %56
  %60 = icmp ult i32 %38, 16
  %61 = and i32 %38, 2147483632
  %62 = insertelement <16 x i32> undef, i32 %1, i32 0
  %63 = shufflevector <16 x i32> %62, <16 x i32> undef, <16 x i32> zeroinitializer
  %64 = icmp eq i32 %38, %61
  %65 = icmp ult i32 %36, 16
  %66 = and i32 %36, 2147483632
  %67 = insertelement <16 x i32> undef, i32 %1, i32 0
  %68 = shufflevector <16 x i32> %67, <16 x i32> undef, <16 x i32> zeroinitializer
  %69 = icmp eq i32 %36, %66
  %70 = icmp ult i32 %34, 16
  %71 = and i32 %34, 2147483632
  %72 = insertelement <16 x i32> undef, i32 %1, i32 0
  %73 = shufflevector <16 x i32> %72, <16 x i32> undef, <16 x i32> zeroinitializer
  %74 = icmp eq i32 %34, %71
  %75 = icmp ult i32 %32, 16
  %76 = and i32 %32, 2147483632
  %77 = insertelement <16 x i32> undef, i32 %1, i32 0
  %78 = shufflevector <16 x i32> %77, <16 x i32> undef, <16 x i32> zeroinitializer
  %79 = icmp eq i32 %32, %76
  %80 = icmp ult i32 %30, 16
  %81 = and i32 %30, 2147483632
  %82 = insertelement <16 x i32> undef, i32 %1, i32 0
  %83 = shufflevector <16 x i32> %82, <16 x i32> undef, <16 x i32> zeroinitializer
  %84 = icmp eq i32 %30, %81
  %85 = icmp ult i32 %28, 16
  %86 = and i32 %28, 2147483632
  %87 = insertelement <16 x i32> undef, i32 %1, i32 0
  %88 = shufflevector <16 x i32> %87, <16 x i32> undef, <16 x i32> zeroinitializer
  %89 = icmp eq i32 %28, %86
  %90 = icmp ult i32 %26, 16
  %91 = and i32 %26, 2147483632
  %92 = insertelement <16 x i32> undef, i32 %1, i32 0
  %93 = shufflevector <16 x i32> %92, <16 x i32> undef, <16 x i32> zeroinitializer
  %94 = icmp eq i32 %26, %91
  %95 = icmp ult i32 %24, 16
  %96 = and i32 %24, 2147483632
  %97 = insertelement <16 x i32> undef, i32 %1, i32 0
  %98 = shufflevector <16 x i32> %97, <16 x i32> undef, <16 x i32> zeroinitializer
  %99 = icmp eq i32 %24, %96
  %100 = icmp ult i32 %22, 16
  %101 = and i32 %22, 2147483632
  %102 = insertelement <16 x i32> undef, i32 %1, i32 0
  %103 = shufflevector <16 x i32> %102, <16 x i32> undef, <16 x i32> zeroinitializer
  %104 = icmp eq i32 %22, %101
  %105 = icmp ult i32 %20, 16
  %106 = and i32 %20, 2147483632
  %107 = insertelement <16 x i32> undef, i32 %1, i32 0
  %108 = shufflevector <16 x i32> %107, <16 x i32> undef, <16 x i32> zeroinitializer
  %109 = icmp eq i32 %20, %106
  br label %110

110:                                              ; preds = %2366, %5
  %111 = phi i32 [ 0, %5 ], [ %2367, %2366 ]
  %112 = phi i64 [ 0, %5 ], [ %2368, %2366 ]
  %113 = add i32 %111, 1
  %114 = sext i32 %111 to i64
  %115 = getelementptr inbounds i8, i8* %3, i64 %114
  %116 = load i8, i8* %115, align 1
  %117 = icmp eq i8 %116, 37
  br i1 %117, label %272, label %118

118:                                              ; preds = %110
  %119 = sext i32 %113 to i64
  %120 = load i32, i32* %8, align 4
  br label %121

121:                                              ; preds = %118, %263
  %122 = phi i32 [ %120, %118 ], [ %264, %263 ]
  %123 = phi i64 [ %119, %118 ], [ %265, %263 ]
  %124 = phi i8 [ %116, %118 ], [ %267, %263 ]
  %125 = icmp eq i32 %122, 0
  br i1 %125, label %143, label %126

126:                                              ; preds = %121
  switch i8 %124, label %127 [
    i8 10, label %140
    i8 0, label %255
  ]

127:                                              ; preds = %126
  %128 = icmp slt i32 %122, %1
  br i1 %128, label %129, label %135

129:                                              ; preds = %127
  %130 = add nsw i32 %122, -1
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i8, i8* %0, i64 %131
  %133 = load i8, i8* %132, align 1
  %134 = icmp eq i8 %133, 10
  br i1 %134, label %143, label %135

135:                                              ; preds = %129, %127
  %136 = icmp eq i8 %124, 10
  %137 = icmp sge i32 %122, %1
  %138 = and i1 %136, %137
  %139 = and i1 %10, %138
  br i1 %139, label %144, label %255

140:                                              ; preds = %126
  %141 = icmp sge i32 %122, %1
  %142 = and i1 %10, %141
  br i1 %142, label %144, label %255

143:                                              ; preds = %129, %121
  br i1 %10, label %144, label %255

144:                                              ; preds = %143, %140, %135
  br i1 %45, label %239, label %145

145:                                              ; preds = %144
  %146 = add i32 %122, %46
  %147 = insertelement <16 x i32> undef, i32 %122, i32 0
  %148 = shufflevector <16 x i32> %147, <16 x i32> undef, <16 x i32> zeroinitializer
  %149 = add <16 x i32> %148, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  br label %150

150:                                              ; preds = %234, %145
  %151 = phi i32 [ 0, %145 ], [ %235, %234 ]
  %152 = phi <16 x i32> [ %149, %145 ], [ %236, %234 ]
  %153 = icmp slt <16 x i32> %152, %48
  %154 = sext <16 x i32> %152 to <16 x i64>
  %155 = extractelement <16 x i1> %153, i32 0
  br i1 %155, label %156, label %159

156:                                              ; preds = %150
  %157 = extractelement <16 x i64> %154, i32 0
  %158 = getelementptr inbounds i8, i8* %0, i64 %157
  store i8 32, i8* %158, align 1
  br label %159

159:                                              ; preds = %156, %150
  %160 = extractelement <16 x i1> %153, i32 1
  br i1 %160, label %161, label %164

161:                                              ; preds = %159
  %162 = extractelement <16 x i64> %154, i32 1
  %163 = getelementptr inbounds i8, i8* %0, i64 %162
  store i8 32, i8* %163, align 1
  br label %164

164:                                              ; preds = %161, %159
  %165 = extractelement <16 x i1> %153, i32 2
  br i1 %165, label %166, label %169

166:                                              ; preds = %164
  %167 = extractelement <16 x i64> %154, i32 2
  %168 = getelementptr inbounds i8, i8* %0, i64 %167
  store i8 32, i8* %168, align 1
  br label %169

169:                                              ; preds = %166, %164
  %170 = extractelement <16 x i1> %153, i32 3
  br i1 %170, label %171, label %174

171:                                              ; preds = %169
  %172 = extractelement <16 x i64> %154, i32 3
  %173 = getelementptr inbounds i8, i8* %0, i64 %172
  store i8 32, i8* %173, align 1
  br label %174

174:                                              ; preds = %171, %169
  %175 = extractelement <16 x i1> %153, i32 4
  br i1 %175, label %176, label %179

176:                                              ; preds = %174
  %177 = extractelement <16 x i64> %154, i32 4
  %178 = getelementptr inbounds i8, i8* %0, i64 %177
  store i8 32, i8* %178, align 1
  br label %179

179:                                              ; preds = %176, %174
  %180 = extractelement <16 x i1> %153, i32 5
  br i1 %180, label %181, label %184

181:                                              ; preds = %179
  %182 = extractelement <16 x i64> %154, i32 5
  %183 = getelementptr inbounds i8, i8* %0, i64 %182
  store i8 32, i8* %183, align 1
  br label %184

184:                                              ; preds = %181, %179
  %185 = extractelement <16 x i1> %153, i32 6
  br i1 %185, label %186, label %189

186:                                              ; preds = %184
  %187 = extractelement <16 x i64> %154, i32 6
  %188 = getelementptr inbounds i8, i8* %0, i64 %187
  store i8 32, i8* %188, align 1
  br label %189

189:                                              ; preds = %186, %184
  %190 = extractelement <16 x i1> %153, i32 7
  br i1 %190, label %191, label %194

191:                                              ; preds = %189
  %192 = extractelement <16 x i64> %154, i32 7
  %193 = getelementptr inbounds i8, i8* %0, i64 %192
  store i8 32, i8* %193, align 1
  br label %194

194:                                              ; preds = %191, %189
  %195 = extractelement <16 x i1> %153, i32 8
  br i1 %195, label %196, label %199

196:                                              ; preds = %194
  %197 = extractelement <16 x i64> %154, i32 8
  %198 = getelementptr inbounds i8, i8* %0, i64 %197
  store i8 32, i8* %198, align 1
  br label %199

199:                                              ; preds = %196, %194
  %200 = extractelement <16 x i1> %153, i32 9
  br i1 %200, label %201, label %204

201:                                              ; preds = %199
  %202 = extractelement <16 x i64> %154, i32 9
  %203 = getelementptr inbounds i8, i8* %0, i64 %202
  store i8 32, i8* %203, align 1
  br label %204

204:                                              ; preds = %201, %199
  %205 = extractelement <16 x i1> %153, i32 10
  br i1 %205, label %206, label %209

206:                                              ; preds = %204
  %207 = extractelement <16 x i64> %154, i32 10
  %208 = getelementptr inbounds i8, i8* %0, i64 %207
  store i8 32, i8* %208, align 1
  br label %209

209:                                              ; preds = %206, %204
  %210 = extractelement <16 x i1> %153, i32 11
  br i1 %210, label %211, label %214

211:                                              ; preds = %209
  %212 = extractelement <16 x i64> %154, i32 11
  %213 = getelementptr inbounds i8, i8* %0, i64 %212
  store i8 32, i8* %213, align 1
  br label %214

214:                                              ; preds = %211, %209
  %215 = extractelement <16 x i1> %153, i32 12
  br i1 %215, label %216, label %219

216:                                              ; preds = %214
  %217 = extractelement <16 x i64> %154, i32 12
  %218 = getelementptr inbounds i8, i8* %0, i64 %217
  store i8 32, i8* %218, align 1
  br label %219

219:                                              ; preds = %216, %214
  %220 = extractelement <16 x i1> %153, i32 13
  br i1 %220, label %221, label %224

221:                                              ; preds = %219
  %222 = extractelement <16 x i64> %154, i32 13
  %223 = getelementptr inbounds i8, i8* %0, i64 %222
  store i8 32, i8* %223, align 1
  br label %224

224:                                              ; preds = %221, %219
  %225 = extractelement <16 x i1> %153, i32 14
  br i1 %225, label %226, label %229

226:                                              ; preds = %224
  %227 = extractelement <16 x i64> %154, i32 14
  %228 = getelementptr inbounds i8, i8* %0, i64 %227
  store i8 32, i8* %228, align 1
  br label %229

229:                                              ; preds = %226, %224
  %230 = extractelement <16 x i1> %153, i32 15
  br i1 %230, label %231, label %234

231:                                              ; preds = %229
  %232 = extractelement <16 x i64> %154, i32 15
  %233 = getelementptr inbounds i8, i8* %0, i64 %232
  store i8 32, i8* %233, align 1
  br label %234

234:                                              ; preds = %231, %229
  %235 = add i32 %151, 16
  %236 = add <16 x i32> %152, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %237 = icmp eq i32 %235, %46
  br i1 %237, label %238, label %150, !llvm.loop !2

238:                                              ; preds = %234
  br i1 %49, label %253, label %239

239:                                              ; preds = %238, %144
  %240 = phi i32 [ %122, %144 ], [ %146, %238 ]
  %241 = phi i32 [ 0, %144 ], [ %46, %238 ]
  br label %242

242:                                              ; preds = %239, %249
  %243 = phi i32 [ %250, %249 ], [ %240, %239 ]
  %244 = phi i32 [ %251, %249 ], [ %241, %239 ]
  %245 = icmp slt i32 %243, %1
  br i1 %245, label %246, label %249

246:                                              ; preds = %242
  %247 = sext i32 %243 to i64
  %248 = getelementptr inbounds i8, i8* %0, i64 %247
  store i8 32, i8* %248, align 1
  br label %249

249:                                              ; preds = %246, %242
  %250 = add nsw i32 %243, 1
  %251 = add nuw nsw i32 %244, 1
  %252 = icmp slt i32 %251, %2
  br i1 %252, label %242, label %253, !llvm.loop !4

253:                                              ; preds = %249, %238
  %254 = phi i32 [ %146, %238 ], [ %250, %249 ]
  store i32 %254, i32* %8, align 4
  br label %255

255:                                              ; preds = %253, %143, %140, %135, %126
  %256 = phi i32 [ %122, %140 ], [ %122, %135 ], [ %122, %143 ], [ %122, %126 ], [ %254, %253 ]
  %257 = icmp slt i32 %256, %1
  br i1 %257, label %258, label %261

258:                                              ; preds = %255
  %259 = sext i32 %256 to i64
  %260 = getelementptr inbounds i8, i8* %0, i64 %259
  store i8 %124, i8* %260, align 1
  br label %261

261:                                              ; preds = %258, %255
  %262 = icmp eq i8 %124, 0
  br i1 %262, label %2369, label %263

263:                                              ; preds = %261
  %264 = add nsw i32 %256, 1
  store i32 %264, i32* %8, align 4
  %265 = add i64 %123, 1
  %266 = getelementptr inbounds i8, i8* %3, i64 %123
  %267 = load i8, i8* %266, align 1
  %268 = icmp eq i8 %267, 37
  br i1 %268, label %269, label %121

269:                                              ; preds = %263
  %270 = trunc i64 %123 to i32
  %271 = trunc i64 %265 to i32
  br label %272

272:                                              ; preds = %269, %110
  %273 = phi i32 [ %111, %110 ], [ %270, %269 ]
  %274 = phi i32 [ %113, %110 ], [ %271, %269 ]
  %275 = add nsw i32 %273, 2
  %276 = sext i32 %274 to i64
  %277 = getelementptr inbounds i8, i8* %3, i64 %276
  %278 = load i8, i8* %277, align 1
  %279 = sext i8 %278 to i32
  switch i32 %279, label %2223 [
    i32 99, label %280
    i32 115, label %437
    i32 83, label %601
    i32 98, label %631
    i32 104, label %659
    i32 100, label %687
    i32 108, label %715
    i32 112, label %745
    i32 0, label %795
    i32 118, label %927
  ]

280:                                              ; preds = %272
  %281 = load i32, i32* %11, align 8
  %282 = icmp ult i32 %281, 41
  br i1 %282, label %283, label %288

283:                                              ; preds = %280
  %284 = load i8*, i8** %13, align 8
  %285 = sext i32 %281 to i64
  %286 = getelementptr i8, i8* %284, i64 %285
  %287 = add nuw nsw i32 %281, 8
  store i32 %287, i32* %11, align 8
  br label %291

288:                                              ; preds = %280
  %289 = load i8*, i8** %12, align 8
  %290 = getelementptr i8, i8* %289, i64 8
  store i8* %290, i8** %12, align 8
  br label %291

291:                                              ; preds = %288, %283
  %292 = phi i8* [ %286, %283 ], [ %289, %288 ]
  %293 = bitcast i8* %292 to i32*
  %294 = load i32, i32* %293, align 4
  %295 = trunc i32 %294 to i8
  %296 = load i32, i32* %8, align 4
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %315, label %298

298:                                              ; preds = %291
  switch i8 %295, label %299 [
    i8 10, label %312
    i8 0, label %427
  ]

299:                                              ; preds = %298
  %300 = icmp slt i32 %296, %1
  br i1 %300, label %301, label %307

301:                                              ; preds = %299
  %302 = add nsw i32 %296, -1
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds i8, i8* %0, i64 %303
  %305 = load i8, i8* %304, align 1
  %306 = icmp eq i8 %305, 10
  br i1 %306, label %315, label %307

307:                                              ; preds = %301, %299
  %308 = icmp eq i8 %295, 10
  %309 = icmp sge i32 %296, %1
  %310 = and i1 %309, %308
  %311 = and i1 %10, %310
  br i1 %311, label %316, label %427

312:                                              ; preds = %298
  %313 = icmp sge i32 %296, %1
  %314 = and i1 %10, %313
  br i1 %314, label %316, label %427

315:                                              ; preds = %301, %291
  br i1 %10, label %316, label %427

316:                                              ; preds = %315, %312, %307
  br i1 %100, label %411, label %317

317:                                              ; preds = %316
  %318 = add i32 %296, %101
  %319 = insertelement <16 x i32> undef, i32 %296, i32 0
  %320 = shufflevector <16 x i32> %319, <16 x i32> undef, <16 x i32> zeroinitializer
  %321 = add <16 x i32> %320, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  br label %322

322:                                              ; preds = %406, %317
  %323 = phi i32 [ 0, %317 ], [ %407, %406 ]
  %324 = phi <16 x i32> [ %321, %317 ], [ %408, %406 ]
  %325 = icmp slt <16 x i32> %324, %103
  %326 = sext <16 x i32> %324 to <16 x i64>
  %327 = extractelement <16 x i1> %325, i32 0
  br i1 %327, label %328, label %331

328:                                              ; preds = %322
  %329 = extractelement <16 x i64> %326, i32 0
  %330 = getelementptr inbounds i8, i8* %0, i64 %329
  store i8 32, i8* %330, align 1
  br label %331

331:                                              ; preds = %328, %322
  %332 = extractelement <16 x i1> %325, i32 1
  br i1 %332, label %333, label %336

333:                                              ; preds = %331
  %334 = extractelement <16 x i64> %326, i32 1
  %335 = getelementptr inbounds i8, i8* %0, i64 %334
  store i8 32, i8* %335, align 1
  br label %336

336:                                              ; preds = %333, %331
  %337 = extractelement <16 x i1> %325, i32 2
  br i1 %337, label %338, label %341

338:                                              ; preds = %336
  %339 = extractelement <16 x i64> %326, i32 2
  %340 = getelementptr inbounds i8, i8* %0, i64 %339
  store i8 32, i8* %340, align 1
  br label %341

341:                                              ; preds = %338, %336
  %342 = extractelement <16 x i1> %325, i32 3
  br i1 %342, label %343, label %346

343:                                              ; preds = %341
  %344 = extractelement <16 x i64> %326, i32 3
  %345 = getelementptr inbounds i8, i8* %0, i64 %344
  store i8 32, i8* %345, align 1
  br label %346

346:                                              ; preds = %343, %341
  %347 = extractelement <16 x i1> %325, i32 4
  br i1 %347, label %348, label %351

348:                                              ; preds = %346
  %349 = extractelement <16 x i64> %326, i32 4
  %350 = getelementptr inbounds i8, i8* %0, i64 %349
  store i8 32, i8* %350, align 1
  br label %351

351:                                              ; preds = %348, %346
  %352 = extractelement <16 x i1> %325, i32 5
  br i1 %352, label %353, label %356

353:                                              ; preds = %351
  %354 = extractelement <16 x i64> %326, i32 5
  %355 = getelementptr inbounds i8, i8* %0, i64 %354
  store i8 32, i8* %355, align 1
  br label %356

356:                                              ; preds = %353, %351
  %357 = extractelement <16 x i1> %325, i32 6
  br i1 %357, label %358, label %361

358:                                              ; preds = %356
  %359 = extractelement <16 x i64> %326, i32 6
  %360 = getelementptr inbounds i8, i8* %0, i64 %359
  store i8 32, i8* %360, align 1
  br label %361

361:                                              ; preds = %358, %356
  %362 = extractelement <16 x i1> %325, i32 7
  br i1 %362, label %363, label %366

363:                                              ; preds = %361
  %364 = extractelement <16 x i64> %326, i32 7
  %365 = getelementptr inbounds i8, i8* %0, i64 %364
  store i8 32, i8* %365, align 1
  br label %366

366:                                              ; preds = %363, %361
  %367 = extractelement <16 x i1> %325, i32 8
  br i1 %367, label %368, label %371

368:                                              ; preds = %366
  %369 = extractelement <16 x i64> %326, i32 8
  %370 = getelementptr inbounds i8, i8* %0, i64 %369
  store i8 32, i8* %370, align 1
  br label %371

371:                                              ; preds = %368, %366
  %372 = extractelement <16 x i1> %325, i32 9
  br i1 %372, label %373, label %376

373:                                              ; preds = %371
  %374 = extractelement <16 x i64> %326, i32 9
  %375 = getelementptr inbounds i8, i8* %0, i64 %374
  store i8 32, i8* %375, align 1
  br label %376

376:                                              ; preds = %373, %371
  %377 = extractelement <16 x i1> %325, i32 10
  br i1 %377, label %378, label %381

378:                                              ; preds = %376
  %379 = extractelement <16 x i64> %326, i32 10
  %380 = getelementptr inbounds i8, i8* %0, i64 %379
  store i8 32, i8* %380, align 1
  br label %381

381:                                              ; preds = %378, %376
  %382 = extractelement <16 x i1> %325, i32 11
  br i1 %382, label %383, label %386

383:                                              ; preds = %381
  %384 = extractelement <16 x i64> %326, i32 11
  %385 = getelementptr inbounds i8, i8* %0, i64 %384
  store i8 32, i8* %385, align 1
  br label %386

386:                                              ; preds = %383, %381
  %387 = extractelement <16 x i1> %325, i32 12
  br i1 %387, label %388, label %391

388:                                              ; preds = %386
  %389 = extractelement <16 x i64> %326, i32 12
  %390 = getelementptr inbounds i8, i8* %0, i64 %389
  store i8 32, i8* %390, align 1
  br label %391

391:                                              ; preds = %388, %386
  %392 = extractelement <16 x i1> %325, i32 13
  br i1 %392, label %393, label %396

393:                                              ; preds = %391
  %394 = extractelement <16 x i64> %326, i32 13
  %395 = getelementptr inbounds i8, i8* %0, i64 %394
  store i8 32, i8* %395, align 1
  br label %396

396:                                              ; preds = %393, %391
  %397 = extractelement <16 x i1> %325, i32 14
  br i1 %397, label %398, label %401

398:                                              ; preds = %396
  %399 = extractelement <16 x i64> %326, i32 14
  %400 = getelementptr inbounds i8, i8* %0, i64 %399
  store i8 32, i8* %400, align 1
  br label %401

401:                                              ; preds = %398, %396
  %402 = extractelement <16 x i1> %325, i32 15
  br i1 %402, label %403, label %406

403:                                              ; preds = %401
  %404 = extractelement <16 x i64> %326, i32 15
  %405 = getelementptr inbounds i8, i8* %0, i64 %404
  store i8 32, i8* %405, align 1
  br label %406

406:                                              ; preds = %403, %401
  %407 = add i32 %323, 16
  %408 = add <16 x i32> %324, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %409 = icmp eq i32 %407, %101
  br i1 %409, label %410, label %322, !llvm.loop !6

410:                                              ; preds = %406
  br i1 %104, label %425, label %411

411:                                              ; preds = %410, %316
  %412 = phi i32 [ %296, %316 ], [ %318, %410 ]
  %413 = phi i32 [ 0, %316 ], [ %101, %410 ]
  br label %414

414:                                              ; preds = %411, %421
  %415 = phi i32 [ %422, %421 ], [ %412, %411 ]
  %416 = phi i32 [ %423, %421 ], [ %413, %411 ]
  %417 = icmp slt i32 %415, %1
  br i1 %417, label %418, label %421

418:                                              ; preds = %414
  %419 = sext i32 %415 to i64
  %420 = getelementptr inbounds i8, i8* %0, i64 %419
  store i8 32, i8* %420, align 1
  br label %421

421:                                              ; preds = %418, %414
  %422 = add nsw i32 %415, 1
  %423 = add nuw nsw i32 %416, 1
  %424 = icmp slt i32 %423, %2
  br i1 %424, label %414, label %425, !llvm.loop !7

425:                                              ; preds = %421, %410
  %426 = phi i32 [ %318, %410 ], [ %422, %421 ]
  store i32 %426, i32* %8, align 4
  br label %427

427:                                              ; preds = %425, %315, %312, %307, %298
  %428 = phi i32 [ %296, %312 ], [ %296, %307 ], [ %296, %315 ], [ %296, %298 ], [ %426, %425 ]
  %429 = icmp slt i32 %428, %1
  br i1 %429, label %430, label %433

430:                                              ; preds = %427
  %431 = sext i32 %428 to i64
  %432 = getelementptr inbounds i8, i8* %0, i64 %431
  store i8 %295, i8* %432, align 1
  br label %433

433:                                              ; preds = %430, %427
  %434 = icmp eq i8 %295, 0
  br i1 %434, label %2366, label %435

435:                                              ; preds = %433
  %436 = add nsw i32 %428, 1
  store i32 %436, i32* %8, align 4
  br label %2366

437:                                              ; preds = %272
  %438 = load i32, i32* %11, align 8
  %439 = icmp ult i32 %438, 41
  br i1 %439, label %440, label %445

440:                                              ; preds = %437
  %441 = load i8*, i8** %13, align 8
  %442 = sext i32 %438 to i64
  %443 = getelementptr i8, i8* %441, i64 %442
  %444 = add nuw nsw i32 %438, 8
  store i32 %444, i32* %11, align 8
  br label %448

445:                                              ; preds = %437
  %446 = load i8*, i8** %12, align 8
  %447 = getelementptr i8, i8* %446, i64 8
  store i8* %447, i8** %12, align 8
  br label %448

448:                                              ; preds = %445, %440
  %449 = phi i8* [ %443, %440 ], [ %446, %445 ]
  %450 = bitcast i8* %449 to i8**
  %451 = load i8*, i8** %450, align 8
  %452 = icmp eq i8* %451, null
  %453 = select i1 %452, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i8* %451
  %454 = load i32, i32* %8, align 4
  br label %455

455:                                              ; preds = %599, %448
  %456 = phi i64 [ %458, %599 ], [ 0, %448 ]
  %457 = phi i32 [ %600, %599 ], [ %454, %448 ]
  %458 = add nuw i64 %456, 1
  %459 = getelementptr inbounds i8, i8* %453, i64 %456
  %460 = load i8, i8* %459, align 1
  %461 = icmp eq i32 %457, 0
  br i1 %461, label %479, label %462

462:                                              ; preds = %455
  switch i8 %460, label %463 [
    i8 10, label %476
    i8 0, label %591
  ]

463:                                              ; preds = %462
  %464 = icmp slt i32 %457, %1
  br i1 %464, label %465, label %471

465:                                              ; preds = %463
  %466 = add nsw i32 %457, -1
  %467 = sext i32 %466 to i64
  %468 = getelementptr inbounds i8, i8* %0, i64 %467
  %469 = load i8, i8* %468, align 1
  %470 = icmp eq i8 %469, 10
  br i1 %470, label %479, label %471

471:                                              ; preds = %465, %463
  %472 = icmp eq i8 %460, 10
  %473 = icmp sge i32 %457, %1
  %474 = and i1 %473, %472
  %475 = and i1 %10, %474
  br i1 %475, label %480, label %591

476:                                              ; preds = %462
  %477 = icmp sge i32 %457, %1
  %478 = and i1 %10, %477
  br i1 %478, label %480, label %591

479:                                              ; preds = %465, %455
  br i1 %10, label %480, label %591

480:                                              ; preds = %479, %476, %471
  br i1 %95, label %575, label %481

481:                                              ; preds = %480
  %482 = add i32 %457, %96
  %483 = insertelement <16 x i32> undef, i32 %457, i32 0
  %484 = shufflevector <16 x i32> %483, <16 x i32> undef, <16 x i32> zeroinitializer
  %485 = add <16 x i32> %484, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  br label %486

486:                                              ; preds = %570, %481
  %487 = phi i32 [ 0, %481 ], [ %571, %570 ]
  %488 = phi <16 x i32> [ %485, %481 ], [ %572, %570 ]
  %489 = icmp slt <16 x i32> %488, %98
  %490 = sext <16 x i32> %488 to <16 x i64>
  %491 = extractelement <16 x i1> %489, i32 0
  br i1 %491, label %492, label %495

492:                                              ; preds = %486
  %493 = extractelement <16 x i64> %490, i32 0
  %494 = getelementptr inbounds i8, i8* %0, i64 %493
  store i8 32, i8* %494, align 1
  br label %495

495:                                              ; preds = %492, %486
  %496 = extractelement <16 x i1> %489, i32 1
  br i1 %496, label %497, label %500

497:                                              ; preds = %495
  %498 = extractelement <16 x i64> %490, i32 1
  %499 = getelementptr inbounds i8, i8* %0, i64 %498
  store i8 32, i8* %499, align 1
  br label %500

500:                                              ; preds = %497, %495
  %501 = extractelement <16 x i1> %489, i32 2
  br i1 %501, label %502, label %505

502:                                              ; preds = %500
  %503 = extractelement <16 x i64> %490, i32 2
  %504 = getelementptr inbounds i8, i8* %0, i64 %503
  store i8 32, i8* %504, align 1
  br label %505

505:                                              ; preds = %502, %500
  %506 = extractelement <16 x i1> %489, i32 3
  br i1 %506, label %507, label %510

507:                                              ; preds = %505
  %508 = extractelement <16 x i64> %490, i32 3
  %509 = getelementptr inbounds i8, i8* %0, i64 %508
  store i8 32, i8* %509, align 1
  br label %510

510:                                              ; preds = %507, %505
  %511 = extractelement <16 x i1> %489, i32 4
  br i1 %511, label %512, label %515

512:                                              ; preds = %510
  %513 = extractelement <16 x i64> %490, i32 4
  %514 = getelementptr inbounds i8, i8* %0, i64 %513
  store i8 32, i8* %514, align 1
  br label %515

515:                                              ; preds = %512, %510
  %516 = extractelement <16 x i1> %489, i32 5
  br i1 %516, label %517, label %520

517:                                              ; preds = %515
  %518 = extractelement <16 x i64> %490, i32 5
  %519 = getelementptr inbounds i8, i8* %0, i64 %518
  store i8 32, i8* %519, align 1
  br label %520

520:                                              ; preds = %517, %515
  %521 = extractelement <16 x i1> %489, i32 6
  br i1 %521, label %522, label %525

522:                                              ; preds = %520
  %523 = extractelement <16 x i64> %490, i32 6
  %524 = getelementptr inbounds i8, i8* %0, i64 %523
  store i8 32, i8* %524, align 1
  br label %525

525:                                              ; preds = %522, %520
  %526 = extractelement <16 x i1> %489, i32 7
  br i1 %526, label %527, label %530

527:                                              ; preds = %525
  %528 = extractelement <16 x i64> %490, i32 7
  %529 = getelementptr inbounds i8, i8* %0, i64 %528
  store i8 32, i8* %529, align 1
  br label %530

530:                                              ; preds = %527, %525
  %531 = extractelement <16 x i1> %489, i32 8
  br i1 %531, label %532, label %535

532:                                              ; preds = %530
  %533 = extractelement <16 x i64> %490, i32 8
  %534 = getelementptr inbounds i8, i8* %0, i64 %533
  store i8 32, i8* %534, align 1
  br label %535

535:                                              ; preds = %532, %530
  %536 = extractelement <16 x i1> %489, i32 9
  br i1 %536, label %537, label %540

537:                                              ; preds = %535
  %538 = extractelement <16 x i64> %490, i32 9
  %539 = getelementptr inbounds i8, i8* %0, i64 %538
  store i8 32, i8* %539, align 1
  br label %540

540:                                              ; preds = %537, %535
  %541 = extractelement <16 x i1> %489, i32 10
  br i1 %541, label %542, label %545

542:                                              ; preds = %540
  %543 = extractelement <16 x i64> %490, i32 10
  %544 = getelementptr inbounds i8, i8* %0, i64 %543
  store i8 32, i8* %544, align 1
  br label %545

545:                                              ; preds = %542, %540
  %546 = extractelement <16 x i1> %489, i32 11
  br i1 %546, label %547, label %550

547:                                              ; preds = %545
  %548 = extractelement <16 x i64> %490, i32 11
  %549 = getelementptr inbounds i8, i8* %0, i64 %548
  store i8 32, i8* %549, align 1
  br label %550

550:                                              ; preds = %547, %545
  %551 = extractelement <16 x i1> %489, i32 12
  br i1 %551, label %552, label %555

552:                                              ; preds = %550
  %553 = extractelement <16 x i64> %490, i32 12
  %554 = getelementptr inbounds i8, i8* %0, i64 %553
  store i8 32, i8* %554, align 1
  br label %555

555:                                              ; preds = %552, %550
  %556 = extractelement <16 x i1> %489, i32 13
  br i1 %556, label %557, label %560

557:                                              ; preds = %555
  %558 = extractelement <16 x i64> %490, i32 13
  %559 = getelementptr inbounds i8, i8* %0, i64 %558
  store i8 32, i8* %559, align 1
  br label %560

560:                                              ; preds = %557, %555
  %561 = extractelement <16 x i1> %489, i32 14
  br i1 %561, label %562, label %565

562:                                              ; preds = %560
  %563 = extractelement <16 x i64> %490, i32 14
  %564 = getelementptr inbounds i8, i8* %0, i64 %563
  store i8 32, i8* %564, align 1
  br label %565

565:                                              ; preds = %562, %560
  %566 = extractelement <16 x i1> %489, i32 15
  br i1 %566, label %567, label %570

567:                                              ; preds = %565
  %568 = extractelement <16 x i64> %490, i32 15
  %569 = getelementptr inbounds i8, i8* %0, i64 %568
  store i8 32, i8* %569, align 1
  br label %570

570:                                              ; preds = %567, %565
  %571 = add i32 %487, 16
  %572 = add <16 x i32> %488, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %573 = icmp eq i32 %571, %96
  br i1 %573, label %574, label %486, !llvm.loop !8

574:                                              ; preds = %570
  br i1 %99, label %589, label %575

575:                                              ; preds = %574, %480
  %576 = phi i32 [ %457, %480 ], [ %482, %574 ]
  %577 = phi i32 [ 0, %480 ], [ %96, %574 ]
  br label %578

578:                                              ; preds = %575, %585
  %579 = phi i32 [ %586, %585 ], [ %576, %575 ]
  %580 = phi i32 [ %587, %585 ], [ %577, %575 ]
  %581 = icmp slt i32 %579, %1
  br i1 %581, label %582, label %585

582:                                              ; preds = %578
  %583 = sext i32 %579 to i64
  %584 = getelementptr inbounds i8, i8* %0, i64 %583
  store i8 32, i8* %584, align 1
  br label %585

585:                                              ; preds = %582, %578
  %586 = add nsw i32 %579, 1
  %587 = add nuw nsw i32 %580, 1
  %588 = icmp slt i32 %587, %2
  br i1 %588, label %578, label %589, !llvm.loop !9

589:                                              ; preds = %585, %574
  %590 = phi i32 [ %482, %574 ], [ %586, %585 ]
  store i32 %590, i32* %8, align 4
  br label %591

591:                                              ; preds = %589, %479, %476, %471, %462
  %592 = phi i32 [ %457, %476 ], [ %457, %471 ], [ %457, %479 ], [ %457, %462 ], [ %590, %589 ]
  %593 = icmp slt i32 %592, %1
  br i1 %593, label %594, label %597

594:                                              ; preds = %591
  %595 = sext i32 %592 to i64
  %596 = getelementptr inbounds i8, i8* %0, i64 %595
  store i8 %460, i8* %596, align 1
  br label %597

597:                                              ; preds = %594, %591
  %598 = icmp eq i8 %460, 0
  br i1 %598, label %2366, label %599

599:                                              ; preds = %597
  %600 = add nsw i32 %592, 1
  store i32 %600, i32* %8, align 4
  br label %455

601:                                              ; preds = %272
  %602 = load i32, i32* %11, align 8
  %603 = icmp ult i32 %602, 41
  br i1 %603, label %609, label %604

604:                                              ; preds = %601
  %605 = load i8*, i8** %12, align 8
  %606 = getelementptr i8, i8* %605, i64 8
  store i8* %606, i8** %12, align 8
  %607 = bitcast i8* %605 to i16**
  %608 = load i16*, i16** %607, align 8
  br label %622

609:                                              ; preds = %601
  %610 = load i8*, i8** %13, align 8
  %611 = sext i32 %602 to i64
  %612 = getelementptr i8, i8* %610, i64 %611
  %613 = add nuw nsw i32 %602, 8
  store i32 %613, i32* %11, align 8
  %614 = bitcast i8* %612 to i16**
  %615 = load i16*, i16** %614, align 8
  %616 = icmp ult i32 %613, 41
  br i1 %616, label %617, label %622

617:                                              ; preds = %609
  %618 = load i8*, i8** %13, align 8
  %619 = sext i32 %613 to i64
  %620 = getelementptr i8, i8* %618, i64 %619
  %621 = add nuw nsw i32 %602, 16
  store i32 %621, i32* %11, align 8
  br label %626

622:                                              ; preds = %604, %609
  %623 = phi i16* [ %608, %604 ], [ %615, %609 ]
  %624 = load i8*, i8** %12, align 8
  %625 = getelementptr i8, i8* %624, i64 8
  store i8* %625, i8** %12, align 8
  br label %626

626:                                              ; preds = %622, %617
  %627 = phi i16* [ %615, %617 ], [ %623, %622 ]
  %628 = phi i8* [ %620, %617 ], [ %624, %622 ]
  %629 = bitcast i8* %628 to i32*
  %630 = load i32, i32* %629, align 4
  call fastcc void @_ZL13outputUStringPKDsiPcPiii(i16* %627, i32 %630, i8* %0, i32* nonnull %8, i32 %1, i32 %2)
  br label %2366

631:                                              ; preds = %272
  %632 = load i32, i32* %11, align 8
  %633 = icmp ult i32 %632, 41
  br i1 %633, label %634, label %639

634:                                              ; preds = %631
  %635 = load i8*, i8** %13, align 8
  %636 = sext i32 %632 to i64
  %637 = getelementptr i8, i8* %635, i64 %636
  %638 = add nuw nsw i32 %632, 8
  store i32 %638, i32* %11, align 8
  br label %642

639:                                              ; preds = %631
  %640 = load i8*, i8** %12, align 8
  %641 = getelementptr i8, i8* %640, i64 8
  store i8* %641, i8** %12, align 8
  br label %642

642:                                              ; preds = %639, %634
  %643 = phi i8* [ %637, %634 ], [ %640, %639 ]
  %644 = bitcast i8* %643 to i32*
  %645 = load i32, i32* %644, align 4
  %646 = sext i32 %645 to i64
  %647 = load i32, i32* %8, align 4
  %648 = icmp slt i32 %647, %1
  br i1 %648, label %649, label %656

649:                                              ; preds = %642
  %650 = lshr i64 %646, 4
  %651 = and i64 %650, 15
  %652 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %651
  %653 = load i8, i8* %652, align 1
  %654 = sext i32 %647 to i64
  %655 = getelementptr inbounds i8, i8* %0, i64 %654
  store i8 %653, i8* %655, align 1
  br label %656

656:                                              ; preds = %649, %642
  %657 = add nsw i32 %647, 1
  %658 = icmp slt i32 %657, %1
  br i1 %658, label %2657, label %2663

659:                                              ; preds = %272
  %660 = load i32, i32* %11, align 8
  %661 = icmp ult i32 %660, 41
  br i1 %661, label %662, label %667

662:                                              ; preds = %659
  %663 = load i8*, i8** %13, align 8
  %664 = sext i32 %660 to i64
  %665 = getelementptr i8, i8* %663, i64 %664
  %666 = add nuw nsw i32 %660, 8
  store i32 %666, i32* %11, align 8
  br label %670

667:                                              ; preds = %659
  %668 = load i8*, i8** %12, align 8
  %669 = getelementptr i8, i8* %668, i64 8
  store i8* %669, i8** %12, align 8
  br label %670

670:                                              ; preds = %667, %662
  %671 = phi i8* [ %665, %662 ], [ %668, %667 ]
  %672 = bitcast i8* %671 to i32*
  %673 = load i32, i32* %672, align 4
  %674 = sext i32 %673 to i64
  %675 = load i32, i32* %8, align 4
  %676 = icmp slt i32 %675, %1
  br i1 %676, label %677, label %684

677:                                              ; preds = %670
  %678 = lshr i64 %674, 12
  %679 = and i64 %678, 15
  %680 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %679
  %681 = load i8, i8* %680, align 1
  %682 = sext i32 %675 to i64
  %683 = getelementptr inbounds i8, i8* %0, i64 %682
  store i8 %681, i8* %683, align 1
  br label %684

684:                                              ; preds = %677, %670
  %685 = add nsw i32 %675, 1
  %686 = icmp slt i32 %685, %1
  br i1 %686, label %2629, label %2636

687:                                              ; preds = %272
  %688 = load i32, i32* %11, align 8
  %689 = icmp ult i32 %688, 41
  br i1 %689, label %690, label %695

690:                                              ; preds = %687
  %691 = load i8*, i8** %13, align 8
  %692 = sext i32 %688 to i64
  %693 = getelementptr i8, i8* %691, i64 %692
  %694 = add nuw nsw i32 %688, 8
  store i32 %694, i32* %11, align 8
  br label %698

695:                                              ; preds = %687
  %696 = load i8*, i8** %12, align 8
  %697 = getelementptr i8, i8* %696, i64 8
  store i8* %697, i8** %12, align 8
  br label %698

698:                                              ; preds = %695, %690
  %699 = phi i8* [ %693, %690 ], [ %696, %695 ]
  %700 = bitcast i8* %699 to i32*
  %701 = load i32, i32* %700, align 4
  %702 = sext i32 %701 to i64
  %703 = load i32, i32* %8, align 4
  %704 = icmp slt i32 %703, %1
  br i1 %704, label %705, label %712

705:                                              ; preds = %698
  %706 = lshr i64 %702, 28
  %707 = and i64 %706, 15
  %708 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %707
  %709 = load i8, i8* %708, align 1
  %710 = sext i32 %703 to i64
  %711 = getelementptr inbounds i8, i8* %0, i64 %710
  store i8 %709, i8* %711, align 1
  br label %712

712:                                              ; preds = %705, %698
  %713 = add nsw i32 %703, 1
  %714 = icmp slt i32 %713, %1
  br i1 %714, label %2561, label %2568

715:                                              ; preds = %272
  %716 = load i32, i32* %11, align 8
  %717 = icmp ult i32 %716, 41
  br i1 %717, label %718, label %723

718:                                              ; preds = %715
  %719 = load i8*, i8** %13, align 8
  %720 = sext i32 %716 to i64
  %721 = getelementptr i8, i8* %719, i64 %720
  %722 = add nuw nsw i32 %716, 8
  store i32 %722, i32* %11, align 8
  br label %726

723:                                              ; preds = %715
  %724 = load i8*, i8** %12, align 8
  %725 = getelementptr i8, i8* %724, i64 8
  store i8* %725, i8** %12, align 8
  br label %726

726:                                              ; preds = %723, %718
  %727 = phi i8* [ %721, %718 ], [ %724, %723 ]
  %728 = bitcast i8* %727 to i64*
  %729 = load i64, i64* %728, align 8
  %730 = load i32, i32* %8, align 4
  br label %731

731:                                              ; preds = %2673, %726
  %732 = phi i64 [ 60, %726 ], [ %2675, %2673 ]
  %733 = phi i32 [ %730, %726 ], [ %2674, %2673 ]
  %734 = icmp slt i32 %733, %1
  br i1 %734, label %735, label %742

735:                                              ; preds = %731
  %736 = ashr i64 %729, %732
  %737 = and i64 %736, 15
  %738 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %737
  %739 = load i8, i8* %738, align 1
  %740 = sext i32 %733 to i64
  %741 = getelementptr inbounds i8, i8* %0, i64 %740
  store i8 %739, i8* %741, align 1
  br label %742

742:                                              ; preds = %735, %731
  %743 = add nsw i32 %733, 1
  %744 = icmp slt i32 %743, %1
  br i1 %744, label %2665, label %2673

745:                                              ; preds = %272
  %746 = load i32, i32* %11, align 8
  %747 = icmp ult i32 %746, 41
  br i1 %747, label %748, label %753

748:                                              ; preds = %745
  %749 = load i8*, i8** %13, align 8
  %750 = sext i32 %746 to i64
  %751 = getelementptr i8, i8* %749, i64 %750
  %752 = add nuw nsw i32 %746, 8
  store i32 %752, i32* %11, align 8
  br label %756

753:                                              ; preds = %745
  %754 = load i8*, i8** %12, align 8
  %755 = getelementptr i8, i8* %754, i64 8
  store i8* %755, i8** %12, align 8
  br label %756

756:                                              ; preds = %753, %748
  %757 = phi i8* [ %751, %748 ], [ %754, %753 ]
  %758 = bitcast i8* %757 to i8**
  %759 = load i8*, i8** %758, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  store i8* %759, i8** %6, align 8
  %760 = ptrtoint i8* %759 to i64
  %761 = lshr i64 %760, 56
  %762 = trunc i64 %761 to i8
  %763 = load i32, i32* %8, align 4
  br label %764

764:                                              ; preds = %792, %756
  %765 = phi i32 [ %763, %756 ], [ %788, %792 ]
  %766 = phi i8 [ %762, %756 ], [ %793, %792 ]
  %767 = phi i8* [ %18, %756 ], [ %789, %792 ]
  %768 = phi i32 [ 0, %756 ], [ %790, %792 ]
  %769 = sext i8 %766 to i64
  %770 = icmp slt i32 %765, %1
  br i1 %770, label %771, label %778

771:                                              ; preds = %764
  %772 = lshr i64 %769, 4
  %773 = and i64 %772, 15
  %774 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %773
  %775 = load i8, i8* %774, align 1
  %776 = sext i32 %765 to i64
  %777 = getelementptr inbounds i8, i8* %0, i64 %776
  store i8 %775, i8* %777, align 1
  br label %778

778:                                              ; preds = %771, %764
  %779 = add nsw i32 %765, 1
  store i32 %779, i32* %8, align 4
  %780 = icmp slt i32 %779, %1
  br i1 %780, label %781, label %787

781:                                              ; preds = %778
  %782 = and i64 %769, 15
  %783 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %782
  %784 = load i8, i8* %783, align 1
  %785 = sext i32 %779 to i64
  %786 = getelementptr inbounds i8, i8* %0, i64 %785
  store i8 %784, i8* %786, align 1
  br label %787

787:                                              ; preds = %781, %778
  %788 = add nsw i32 %765, 2
  store i32 %788, i32* %8, align 4
  %789 = getelementptr inbounds i8, i8* %767, i64 -1
  %790 = add nuw nsw i32 %768, 1
  %791 = icmp eq i32 %790, 8
  br i1 %791, label %794, label %792

792:                                              ; preds = %787
  %793 = load i8, i8* %789, align 1
  br label %764

794:                                              ; preds = %787
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  br label %2366

795:                                              ; preds = %272
  %796 = load i32, i32* %8, align 4
  %797 = icmp eq i32 %796, 0
  br i1 %797, label %807, label %798

798:                                              ; preds = %795
  %799 = icmp slt i32 %796, %1
  br i1 %799, label %800, label %919

800:                                              ; preds = %798
  %801 = add nsw i32 %796, -1
  %802 = sext i32 %801 to i64
  %803 = getelementptr inbounds i8, i8* %0, i64 %802
  %804 = load i8, i8* %803, align 1
  %805 = icmp eq i8 %804, 10
  %806 = and i1 %10, %805
  br i1 %806, label %808, label %919

807:                                              ; preds = %795
  br i1 %10, label %808, label %919

808:                                              ; preds = %800, %807
  br i1 %90, label %903, label %809

809:                                              ; preds = %808
  %810 = add i32 %796, %91
  %811 = insertelement <16 x i32> undef, i32 %796, i32 0
  %812 = shufflevector <16 x i32> %811, <16 x i32> undef, <16 x i32> zeroinitializer
  %813 = add <16 x i32> %812, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  br label %814

814:                                              ; preds = %898, %809
  %815 = phi i32 [ 0, %809 ], [ %899, %898 ]
  %816 = phi <16 x i32> [ %813, %809 ], [ %900, %898 ]
  %817 = icmp slt <16 x i32> %816, %93
  %818 = sext <16 x i32> %816 to <16 x i64>
  %819 = extractelement <16 x i1> %817, i32 0
  br i1 %819, label %820, label %823

820:                                              ; preds = %814
  %821 = extractelement <16 x i64> %818, i32 0
  %822 = getelementptr inbounds i8, i8* %0, i64 %821
  store i8 32, i8* %822, align 1
  br label %823

823:                                              ; preds = %820, %814
  %824 = extractelement <16 x i1> %817, i32 1
  br i1 %824, label %825, label %828

825:                                              ; preds = %823
  %826 = extractelement <16 x i64> %818, i32 1
  %827 = getelementptr inbounds i8, i8* %0, i64 %826
  store i8 32, i8* %827, align 1
  br label %828

828:                                              ; preds = %825, %823
  %829 = extractelement <16 x i1> %817, i32 2
  br i1 %829, label %830, label %833

830:                                              ; preds = %828
  %831 = extractelement <16 x i64> %818, i32 2
  %832 = getelementptr inbounds i8, i8* %0, i64 %831
  store i8 32, i8* %832, align 1
  br label %833

833:                                              ; preds = %830, %828
  %834 = extractelement <16 x i1> %817, i32 3
  br i1 %834, label %835, label %838

835:                                              ; preds = %833
  %836 = extractelement <16 x i64> %818, i32 3
  %837 = getelementptr inbounds i8, i8* %0, i64 %836
  store i8 32, i8* %837, align 1
  br label %838

838:                                              ; preds = %835, %833
  %839 = extractelement <16 x i1> %817, i32 4
  br i1 %839, label %840, label %843

840:                                              ; preds = %838
  %841 = extractelement <16 x i64> %818, i32 4
  %842 = getelementptr inbounds i8, i8* %0, i64 %841
  store i8 32, i8* %842, align 1
  br label %843

843:                                              ; preds = %840, %838
  %844 = extractelement <16 x i1> %817, i32 5
  br i1 %844, label %845, label %848

845:                                              ; preds = %843
  %846 = extractelement <16 x i64> %818, i32 5
  %847 = getelementptr inbounds i8, i8* %0, i64 %846
  store i8 32, i8* %847, align 1
  br label %848

848:                                              ; preds = %845, %843
  %849 = extractelement <16 x i1> %817, i32 6
  br i1 %849, label %850, label %853

850:                                              ; preds = %848
  %851 = extractelement <16 x i64> %818, i32 6
  %852 = getelementptr inbounds i8, i8* %0, i64 %851
  store i8 32, i8* %852, align 1
  br label %853

853:                                              ; preds = %850, %848
  %854 = extractelement <16 x i1> %817, i32 7
  br i1 %854, label %855, label %858

855:                                              ; preds = %853
  %856 = extractelement <16 x i64> %818, i32 7
  %857 = getelementptr inbounds i8, i8* %0, i64 %856
  store i8 32, i8* %857, align 1
  br label %858

858:                                              ; preds = %855, %853
  %859 = extractelement <16 x i1> %817, i32 8
  br i1 %859, label %860, label %863

860:                                              ; preds = %858
  %861 = extractelement <16 x i64> %818, i32 8
  %862 = getelementptr inbounds i8, i8* %0, i64 %861
  store i8 32, i8* %862, align 1
  br label %863

863:                                              ; preds = %860, %858
  %864 = extractelement <16 x i1> %817, i32 9
  br i1 %864, label %865, label %868

865:                                              ; preds = %863
  %866 = extractelement <16 x i64> %818, i32 9
  %867 = getelementptr inbounds i8, i8* %0, i64 %866
  store i8 32, i8* %867, align 1
  br label %868

868:                                              ; preds = %865, %863
  %869 = extractelement <16 x i1> %817, i32 10
  br i1 %869, label %870, label %873

870:                                              ; preds = %868
  %871 = extractelement <16 x i64> %818, i32 10
  %872 = getelementptr inbounds i8, i8* %0, i64 %871
  store i8 32, i8* %872, align 1
  br label %873

873:                                              ; preds = %870, %868
  %874 = extractelement <16 x i1> %817, i32 11
  br i1 %874, label %875, label %878

875:                                              ; preds = %873
  %876 = extractelement <16 x i64> %818, i32 11
  %877 = getelementptr inbounds i8, i8* %0, i64 %876
  store i8 32, i8* %877, align 1
  br label %878

878:                                              ; preds = %875, %873
  %879 = extractelement <16 x i1> %817, i32 12
  br i1 %879, label %880, label %883

880:                                              ; preds = %878
  %881 = extractelement <16 x i64> %818, i32 12
  %882 = getelementptr inbounds i8, i8* %0, i64 %881
  store i8 32, i8* %882, align 1
  br label %883

883:                                              ; preds = %880, %878
  %884 = extractelement <16 x i1> %817, i32 13
  br i1 %884, label %885, label %888

885:                                              ; preds = %883
  %886 = extractelement <16 x i64> %818, i32 13
  %887 = getelementptr inbounds i8, i8* %0, i64 %886
  store i8 32, i8* %887, align 1
  br label %888

888:                                              ; preds = %885, %883
  %889 = extractelement <16 x i1> %817, i32 14
  br i1 %889, label %890, label %893

890:                                              ; preds = %888
  %891 = extractelement <16 x i64> %818, i32 14
  %892 = getelementptr inbounds i8, i8* %0, i64 %891
  store i8 32, i8* %892, align 1
  br label %893

893:                                              ; preds = %890, %888
  %894 = extractelement <16 x i1> %817, i32 15
  br i1 %894, label %895, label %898

895:                                              ; preds = %893
  %896 = extractelement <16 x i64> %818, i32 15
  %897 = getelementptr inbounds i8, i8* %0, i64 %896
  store i8 32, i8* %897, align 1
  br label %898

898:                                              ; preds = %895, %893
  %899 = add i32 %815, 16
  %900 = add <16 x i32> %816, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %901 = icmp eq i32 %899, %91
  br i1 %901, label %902, label %814, !llvm.loop !10

902:                                              ; preds = %898
  br i1 %94, label %917, label %903

903:                                              ; preds = %902, %808
  %904 = phi i32 [ %796, %808 ], [ %810, %902 ]
  %905 = phi i32 [ 0, %808 ], [ %91, %902 ]
  br label %906

906:                                              ; preds = %903, %913
  %907 = phi i32 [ %914, %913 ], [ %904, %903 ]
  %908 = phi i32 [ %915, %913 ], [ %905, %903 ]
  %909 = icmp slt i32 %907, %1
  br i1 %909, label %910, label %913

910:                                              ; preds = %906
  %911 = sext i32 %907 to i64
  %912 = getelementptr inbounds i8, i8* %0, i64 %911
  store i8 32, i8* %912, align 1
  br label %913

913:                                              ; preds = %910, %906
  %914 = add nsw i32 %907, 1
  %915 = add nuw nsw i32 %908, 1
  %916 = icmp slt i32 %915, %2
  br i1 %916, label %906, label %917, !llvm.loop !11

917:                                              ; preds = %913, %902
  %918 = phi i32 [ %810, %902 ], [ %914, %913 ]
  store i32 %918, i32* %8, align 4
  br label %919

919:                                              ; preds = %917, %798, %800, %807
  %920 = phi i32 [ 0, %807 ], [ %796, %800 ], [ %796, %798 ], [ %918, %917 ]
  %921 = icmp slt i32 %920, %1
  br i1 %921, label %922, label %925

922:                                              ; preds = %919
  %923 = sext i32 %920 to i64
  %924 = getelementptr inbounds i8, i8* %0, i64 %923
  store i8 37, i8* %924, align 1
  br label %925

925:                                              ; preds = %919, %922
  %926 = add nsw i32 %920, 1
  store i32 %926, i32* %8, align 4
  br label %2366

927:                                              ; preds = %272
  %928 = sext i32 %275 to i64
  %929 = getelementptr inbounds i8, i8* %3, i64 %928
  %930 = load i8, i8* %929, align 1
  %931 = sext i8 %930 to i32
  %932 = icmp eq i8 %930, 0
  %933 = add nsw i32 %273, 3
  %934 = select i1 %932, i32 %275, i32 %933
  %935 = load i32, i32* %11, align 8
  %936 = icmp ult i32 %935, 41
  br i1 %936, label %946, label %937

937:                                              ; preds = %927
  %938 = load i8*, i8** %12, align 8
  %939 = getelementptr i8, i8* %938, i64 8
  store i8* %939, i8** %12, align 8
  %940 = bitcast i8* %938 to i8**
  %941 = load i8*, i8** %940, align 8
  %942 = bitcast i8* %941 to i16*
  %943 = bitcast i8* %941 to i32*
  %944 = bitcast i8* %941 to i64*
  %945 = bitcast i8* %941 to i8**
  br label %963

946:                                              ; preds = %927
  %947 = load i8*, i8** %13, align 8
  %948 = sext i32 %935 to i64
  %949 = getelementptr i8, i8* %947, i64 %948
  %950 = add nuw nsw i32 %935, 8
  store i32 %950, i32* %11, align 8
  %951 = bitcast i8* %949 to i8**
  %952 = load i8*, i8** %951, align 8
  %953 = bitcast i8* %952 to i16*
  %954 = bitcast i8* %952 to i32*
  %955 = bitcast i8* %952 to i64*
  %956 = bitcast i8* %952 to i8**
  %957 = icmp ult i32 %950, 41
  br i1 %957, label %958, label %963

958:                                              ; preds = %946
  %959 = load i8*, i8** %13, align 8
  %960 = sext i32 %950 to i64
  %961 = getelementptr i8, i8* %959, i64 %960
  %962 = add nuw nsw i32 %935, 16
  store i32 %962, i32* %11, align 8
  br label %971

963:                                              ; preds = %937, %946
  %964 = phi i8** [ %945, %937 ], [ %956, %946 ]
  %965 = phi i64* [ %944, %937 ], [ %955, %946 ]
  %966 = phi i32* [ %943, %937 ], [ %954, %946 ]
  %967 = phi i16* [ %942, %937 ], [ %953, %946 ]
  %968 = phi i8* [ %941, %937 ], [ %952, %946 ]
  %969 = load i8*, i8** %12, align 8
  %970 = getelementptr i8, i8* %969, i64 8
  store i8* %970, i8** %12, align 8
  br label %971

971:                                              ; preds = %963, %958
  %972 = phi i8** [ %956, %958 ], [ %964, %963 ]
  %973 = phi i64* [ %955, %958 ], [ %965, %963 ]
  %974 = phi i32* [ %954, %958 ], [ %966, %963 ]
  %975 = phi i16* [ %953, %958 ], [ %967, %963 ]
  %976 = phi i8* [ %952, %958 ], [ %968, %963 ]
  %977 = phi i8* [ %961, %958 ], [ %969, %963 ]
  %978 = bitcast i8* %977 to i32*
  %979 = load i32, i32* %978, align 4
  %980 = icmp eq i8* %976, null
  br i1 %980, label %985, label %981

981:                                              ; preds = %971
  %982 = icmp sgt i32 %979, 0
  %983 = icmp eq i32 %979, -1
  %984 = or i1 %983, %982
  br i1 %984, label %1130, label %1947

985:                                              ; preds = %971
  %986 = load i32, i32* %8, align 4
  br label %987

987:                                              ; preds = %1124, %985
  %988 = phi i32 [ %1126, %1124 ], [ %986, %985 ]
  %989 = phi i64 [ %990, %1124 ], [ 0, %985 ]
  %990 = add nuw nsw i64 %989, 1
  %991 = getelementptr inbounds [8 x i8], [8 x i8]* @.str, i64 0, i64 %989
  %992 = load i8, i8* %991, align 1
  %993 = icmp eq i32 %988, 0
  br i1 %993, label %1007, label %994

994:                                              ; preds = %987
  switch i8 %992, label %995 [
    i8 10, label %1004
    i8 0, label %1117
  ]

995:                                              ; preds = %994
  %996 = icmp slt i32 %988, %1
  br i1 %996, label %997, label %1117

997:                                              ; preds = %995
  %998 = add nsw i32 %988, -1
  %999 = sext i32 %998 to i64
  %1000 = getelementptr inbounds i8, i8* %0, i64 %999
  %1001 = load i8, i8* %1000, align 1
  %1002 = icmp ne i8 %1001, 10
  %1003 = or i1 %1002, %16
  br i1 %1003, label %1117, label %1008

1004:                                             ; preds = %994
  %1005 = icmp sge i32 %988, %1
  %1006 = and i1 %10, %1005
  br i1 %1006, label %1008, label %1117

1007:                                             ; preds = %987
  br i1 %10, label %1008, label %1117

1008:                                             ; preds = %997, %1007, %1004
  br i1 %75, label %1103, label %1009

1009:                                             ; preds = %1008
  %1010 = add i32 %988, %76
  %1011 = insertelement <16 x i32> undef, i32 %988, i32 0
  %1012 = shufflevector <16 x i32> %1011, <16 x i32> undef, <16 x i32> zeroinitializer
  %1013 = add <16 x i32> %1012, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  br label %1014

1014:                                             ; preds = %1098, %1009
  %1015 = phi i32 [ 0, %1009 ], [ %1099, %1098 ]
  %1016 = phi <16 x i32> [ %1013, %1009 ], [ %1100, %1098 ]
  %1017 = icmp slt <16 x i32> %1016, %78
  %1018 = sext <16 x i32> %1016 to <16 x i64>
  %1019 = extractelement <16 x i1> %1017, i32 0
  br i1 %1019, label %1020, label %1023

1020:                                             ; preds = %1014
  %1021 = extractelement <16 x i64> %1018, i32 0
  %1022 = getelementptr inbounds i8, i8* %0, i64 %1021
  store i8 32, i8* %1022, align 1
  br label %1023

1023:                                             ; preds = %1020, %1014
  %1024 = extractelement <16 x i1> %1017, i32 1
  br i1 %1024, label %1025, label %1028

1025:                                             ; preds = %1023
  %1026 = extractelement <16 x i64> %1018, i32 1
  %1027 = getelementptr inbounds i8, i8* %0, i64 %1026
  store i8 32, i8* %1027, align 1
  br label %1028

1028:                                             ; preds = %1025, %1023
  %1029 = extractelement <16 x i1> %1017, i32 2
  br i1 %1029, label %1030, label %1033

1030:                                             ; preds = %1028
  %1031 = extractelement <16 x i64> %1018, i32 2
  %1032 = getelementptr inbounds i8, i8* %0, i64 %1031
  store i8 32, i8* %1032, align 1
  br label %1033

1033:                                             ; preds = %1030, %1028
  %1034 = extractelement <16 x i1> %1017, i32 3
  br i1 %1034, label %1035, label %1038

1035:                                             ; preds = %1033
  %1036 = extractelement <16 x i64> %1018, i32 3
  %1037 = getelementptr inbounds i8, i8* %0, i64 %1036
  store i8 32, i8* %1037, align 1
  br label %1038

1038:                                             ; preds = %1035, %1033
  %1039 = extractelement <16 x i1> %1017, i32 4
  br i1 %1039, label %1040, label %1043

1040:                                             ; preds = %1038
  %1041 = extractelement <16 x i64> %1018, i32 4
  %1042 = getelementptr inbounds i8, i8* %0, i64 %1041
  store i8 32, i8* %1042, align 1
  br label %1043

1043:                                             ; preds = %1040, %1038
  %1044 = extractelement <16 x i1> %1017, i32 5
  br i1 %1044, label %1045, label %1048

1045:                                             ; preds = %1043
  %1046 = extractelement <16 x i64> %1018, i32 5
  %1047 = getelementptr inbounds i8, i8* %0, i64 %1046
  store i8 32, i8* %1047, align 1
  br label %1048

1048:                                             ; preds = %1045, %1043
  %1049 = extractelement <16 x i1> %1017, i32 6
  br i1 %1049, label %1050, label %1053

1050:                                             ; preds = %1048
  %1051 = extractelement <16 x i64> %1018, i32 6
  %1052 = getelementptr inbounds i8, i8* %0, i64 %1051
  store i8 32, i8* %1052, align 1
  br label %1053

1053:                                             ; preds = %1050, %1048
  %1054 = extractelement <16 x i1> %1017, i32 7
  br i1 %1054, label %1055, label %1058

1055:                                             ; preds = %1053
  %1056 = extractelement <16 x i64> %1018, i32 7
  %1057 = getelementptr inbounds i8, i8* %0, i64 %1056
  store i8 32, i8* %1057, align 1
  br label %1058

1058:                                             ; preds = %1055, %1053
  %1059 = extractelement <16 x i1> %1017, i32 8
  br i1 %1059, label %1060, label %1063

1060:                                             ; preds = %1058
  %1061 = extractelement <16 x i64> %1018, i32 8
  %1062 = getelementptr inbounds i8, i8* %0, i64 %1061
  store i8 32, i8* %1062, align 1
  br label %1063

1063:                                             ; preds = %1060, %1058
  %1064 = extractelement <16 x i1> %1017, i32 9
  br i1 %1064, label %1065, label %1068

1065:                                             ; preds = %1063
  %1066 = extractelement <16 x i64> %1018, i32 9
  %1067 = getelementptr inbounds i8, i8* %0, i64 %1066
  store i8 32, i8* %1067, align 1
  br label %1068

1068:                                             ; preds = %1065, %1063
  %1069 = extractelement <16 x i1> %1017, i32 10
  br i1 %1069, label %1070, label %1073

1070:                                             ; preds = %1068
  %1071 = extractelement <16 x i64> %1018, i32 10
  %1072 = getelementptr inbounds i8, i8* %0, i64 %1071
  store i8 32, i8* %1072, align 1
  br label %1073

1073:                                             ; preds = %1070, %1068
  %1074 = extractelement <16 x i1> %1017, i32 11
  br i1 %1074, label %1075, label %1078

1075:                                             ; preds = %1073
  %1076 = extractelement <16 x i64> %1018, i32 11
  %1077 = getelementptr inbounds i8, i8* %0, i64 %1076
  store i8 32, i8* %1077, align 1
  br label %1078

1078:                                             ; preds = %1075, %1073
  %1079 = extractelement <16 x i1> %1017, i32 12
  br i1 %1079, label %1080, label %1083

1080:                                             ; preds = %1078
  %1081 = extractelement <16 x i64> %1018, i32 12
  %1082 = getelementptr inbounds i8, i8* %0, i64 %1081
  store i8 32, i8* %1082, align 1
  br label %1083

1083:                                             ; preds = %1080, %1078
  %1084 = extractelement <16 x i1> %1017, i32 13
  br i1 %1084, label %1085, label %1088

1085:                                             ; preds = %1083
  %1086 = extractelement <16 x i64> %1018, i32 13
  %1087 = getelementptr inbounds i8, i8* %0, i64 %1086
  store i8 32, i8* %1087, align 1
  br label %1088

1088:                                             ; preds = %1085, %1083
  %1089 = extractelement <16 x i1> %1017, i32 14
  br i1 %1089, label %1090, label %1093

1090:                                             ; preds = %1088
  %1091 = extractelement <16 x i64> %1018, i32 14
  %1092 = getelementptr inbounds i8, i8* %0, i64 %1091
  store i8 32, i8* %1092, align 1
  br label %1093

1093:                                             ; preds = %1090, %1088
  %1094 = extractelement <16 x i1> %1017, i32 15
  br i1 %1094, label %1095, label %1098

1095:                                             ; preds = %1093
  %1096 = extractelement <16 x i64> %1018, i32 15
  %1097 = getelementptr inbounds i8, i8* %0, i64 %1096
  store i8 32, i8* %1097, align 1
  br label %1098

1098:                                             ; preds = %1095, %1093
  %1099 = add i32 %1015, 16
  %1100 = add <16 x i32> %1016, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1101 = icmp eq i32 %1099, %76
  br i1 %1101, label %1102, label %1014, !llvm.loop !12

1102:                                             ; preds = %1098
  br i1 %79, label %1117, label %1103

1103:                                             ; preds = %1102, %1008
  %1104 = phi i32 [ %988, %1008 ], [ %1010, %1102 ]
  %1105 = phi i32 [ 0, %1008 ], [ %76, %1102 ]
  br label %1106

1106:                                             ; preds = %1103, %1113
  %1107 = phi i32 [ %1114, %1113 ], [ %1104, %1103 ]
  %1108 = phi i32 [ %1115, %1113 ], [ %1105, %1103 ]
  %1109 = icmp slt i32 %1107, %1
  br i1 %1109, label %1110, label %1113

1110:                                             ; preds = %1106
  %1111 = sext i32 %1107 to i64
  %1112 = getelementptr inbounds i8, i8* %0, i64 %1111
  store i8 32, i8* %1112, align 1
  br label %1113

1113:                                             ; preds = %1110, %1106
  %1114 = add nsw i32 %1107, 1
  %1115 = add nuw nsw i32 %1108, 1
  %1116 = icmp slt i32 %1115, %2
  br i1 %1116, label %1106, label %1117, !llvm.loop !13

1117:                                             ; preds = %1113, %1102, %997, %995, %1007, %1004, %994
  %1118 = phi i32 [ %988, %1004 ], [ %988, %1007 ], [ %988, %994 ], [ %988, %997 ], [ %988, %995 ], [ %1010, %1102 ], [ %1114, %1113 ]
  %1119 = phi i32 [ %988, %1004 ], [ 0, %1007 ], [ %988, %994 ], [ %988, %997 ], [ %988, %995 ], [ %1010, %1102 ], [ %1114, %1113 ]
  %1120 = icmp slt i32 %1119, %1
  br i1 %1120, label %1121, label %1124

1121:                                             ; preds = %1117
  %1122 = sext i32 %1119 to i64
  %1123 = getelementptr inbounds i8, i8* %0, i64 %1122
  store i8 %992, i8* %1123, align 1
  br label %1124

1124:                                             ; preds = %1121, %1117
  %1125 = icmp eq i64 %989, 7
  %1126 = add nsw i32 %1118, 1
  br i1 %1125, label %1946, label %987

1127:                                             ; preds = %1935
  %1128 = icmp slt i32 %1945, %979
  %1129 = or i1 %983, %1128
  br i1 %1129, label %1130, label %1947

1130:                                             ; preds = %981, %1127
  %1131 = phi i32 [ %1945, %1127 ], [ 0, %981 ]
  %1132 = phi i32 [ %1936, %1127 ], [ 0, %981 ]
  %1133 = phi i8** [ %1937, %1127 ], [ %972, %981 ]
  %1134 = phi i64* [ %1938, %1127 ], [ %973, %981 ]
  %1135 = phi i32* [ %1939, %1127 ], [ %974, %981 ]
  %1136 = phi i16* [ %1940, %1127 ], [ %975, %981 ]
  %1137 = phi i8* [ %1941, %1127 ], [ %976, %981 ]
  %1138 = phi i64 [ %1942, %1127 ], [ %112, %981 ]
  switch i32 %931, label %1754 [
    i32 98, label %1139
    i32 104, label %1143
    i32 100, label %1147
    i32 108, label %1151
    i32 112, label %1154
    i32 99, label %1195
    i32 115, label %1342
    i32 83, label %1622
  ]

1139:                                             ; preds = %1130
  %1140 = getelementptr inbounds i8, i8* %1137, i64 1
  %1141 = load i8, i8* %1137, align 1
  %1142 = sext i8 %1141 to i64
  br label %1756

1143:                                             ; preds = %1130
  %1144 = getelementptr inbounds i16, i16* %1136, i64 1
  %1145 = load i16, i16* %1136, align 2
  %1146 = sext i16 %1145 to i64
  br label %1756

1147:                                             ; preds = %1130
  %1148 = getelementptr inbounds i32, i32* %1135, i64 1
  %1149 = load i32, i32* %1135, align 4
  %1150 = sext i32 %1149 to i64
  br label %1756

1151:                                             ; preds = %1130
  %1152 = getelementptr inbounds i64, i64* %1134, i64 1
  %1153 = load i64, i64* %1134, align 8
  br label %1756

1154:                                             ; preds = %1130
  %1155 = load i8*, i8** %1133, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  store i8* %1155, i8** %7, align 8
  %1156 = ptrtoint i8* %1155 to i64
  %1157 = lshr i64 %1156, 56
  %1158 = trunc i64 %1157 to i8
  %1159 = load i32, i32* %8, align 4
  br label %1160

1160:                                             ; preds = %1188, %1154
  %1161 = phi i32 [ %1159, %1154 ], [ %1184, %1188 ]
  %1162 = phi i8 [ %1158, %1154 ], [ %1189, %1188 ]
  %1163 = phi i8* [ %15, %1154 ], [ %1185, %1188 ]
  %1164 = phi i32 [ 0, %1154 ], [ %1186, %1188 ]
  %1165 = sext i8 %1162 to i64
  %1166 = icmp slt i32 %1161, %1
  br i1 %1166, label %1167, label %1174

1167:                                             ; preds = %1160
  %1168 = lshr i64 %1165, 4
  %1169 = and i64 %1168, 15
  %1170 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %1169
  %1171 = load i8, i8* %1170, align 1
  %1172 = sext i32 %1161 to i64
  %1173 = getelementptr inbounds i8, i8* %0, i64 %1172
  store i8 %1171, i8* %1173, align 1
  br label %1174

1174:                                             ; preds = %1167, %1160
  %1175 = add nsw i32 %1161, 1
  store i32 %1175, i32* %8, align 4
  %1176 = icmp slt i32 %1175, %1
  br i1 %1176, label %1177, label %1183

1177:                                             ; preds = %1174
  %1178 = and i64 %1165, 15
  %1179 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %1178
  %1180 = load i8, i8* %1179, align 1
  %1181 = sext i32 %1175 to i64
  %1182 = getelementptr inbounds i8, i8* %0, i64 %1181
  store i8 %1180, i8* %1182, align 1
  br label %1183

1183:                                             ; preds = %1177, %1174
  %1184 = add nsw i32 %1161, 2
  store i32 %1184, i32* %8, align 4
  %1185 = getelementptr inbounds i8, i8* %1163, i64 -1
  %1186 = add nuw nsw i32 %1164, 1
  %1187 = icmp eq i32 %1186, 8
  br i1 %1187, label %1190, label %1188

1188:                                             ; preds = %1183
  %1189 = load i8, i8* %1185, align 1
  br label %1160

1190:                                             ; preds = %1183
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  %1191 = load i8*, i8** %1133, align 8
  %1192 = icmp ne i8* %1191, null
  %1193 = zext i1 %1192 to i64
  %1194 = getelementptr inbounds i8*, i8** %1133, i64 1
  br label %1935

1195:                                             ; preds = %1130
  %1196 = load i8, i8* %1137, align 1
  %1197 = load i32, i32* %8, align 4
  %1198 = icmp eq i32 %1197, 0
  br i1 %1198, label %1216, label %1199

1199:                                             ; preds = %1195
  switch i8 %1196, label %1200 [
    i8 10, label %1213
    i8 0, label %1328
  ]

1200:                                             ; preds = %1199
  %1201 = icmp slt i32 %1197, %1
  br i1 %1201, label %1202, label %1208

1202:                                             ; preds = %1200
  %1203 = add nsw i32 %1197, -1
  %1204 = sext i32 %1203 to i64
  %1205 = getelementptr inbounds i8, i8* %0, i64 %1204
  %1206 = load i8, i8* %1205, align 1
  %1207 = icmp eq i8 %1206, 10
  br i1 %1207, label %1216, label %1208

1208:                                             ; preds = %1202, %1200
  %1209 = icmp eq i8 %1196, 10
  %1210 = icmp sge i32 %1197, %1
  %1211 = and i1 %1209, %1210
  %1212 = and i1 %10, %1211
  br i1 %1212, label %1217, label %1328

1213:                                             ; preds = %1199
  %1214 = icmp sge i32 %1197, %1
  %1215 = and i1 %10, %1214
  br i1 %1215, label %1217, label %1328

1216:                                             ; preds = %1202, %1195
  br i1 %10, label %1217, label %1328

1217:                                             ; preds = %1216, %1213, %1208
  br i1 %65, label %1312, label %1218

1218:                                             ; preds = %1217
  %1219 = add i32 %1197, %66
  %1220 = insertelement <16 x i32> undef, i32 %1197, i32 0
  %1221 = shufflevector <16 x i32> %1220, <16 x i32> undef, <16 x i32> zeroinitializer
  %1222 = add <16 x i32> %1221, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  br label %1223

1223:                                             ; preds = %1307, %1218
  %1224 = phi i32 [ 0, %1218 ], [ %1308, %1307 ]
  %1225 = phi <16 x i32> [ %1222, %1218 ], [ %1309, %1307 ]
  %1226 = icmp slt <16 x i32> %1225, %68
  %1227 = sext <16 x i32> %1225 to <16 x i64>
  %1228 = extractelement <16 x i1> %1226, i32 0
  br i1 %1228, label %1229, label %1232

1229:                                             ; preds = %1223
  %1230 = extractelement <16 x i64> %1227, i32 0
  %1231 = getelementptr inbounds i8, i8* %0, i64 %1230
  store i8 32, i8* %1231, align 1
  br label %1232

1232:                                             ; preds = %1229, %1223
  %1233 = extractelement <16 x i1> %1226, i32 1
  br i1 %1233, label %1234, label %1237

1234:                                             ; preds = %1232
  %1235 = extractelement <16 x i64> %1227, i32 1
  %1236 = getelementptr inbounds i8, i8* %0, i64 %1235
  store i8 32, i8* %1236, align 1
  br label %1237

1237:                                             ; preds = %1234, %1232
  %1238 = extractelement <16 x i1> %1226, i32 2
  br i1 %1238, label %1239, label %1242

1239:                                             ; preds = %1237
  %1240 = extractelement <16 x i64> %1227, i32 2
  %1241 = getelementptr inbounds i8, i8* %0, i64 %1240
  store i8 32, i8* %1241, align 1
  br label %1242

1242:                                             ; preds = %1239, %1237
  %1243 = extractelement <16 x i1> %1226, i32 3
  br i1 %1243, label %1244, label %1247

1244:                                             ; preds = %1242
  %1245 = extractelement <16 x i64> %1227, i32 3
  %1246 = getelementptr inbounds i8, i8* %0, i64 %1245
  store i8 32, i8* %1246, align 1
  br label %1247

1247:                                             ; preds = %1244, %1242
  %1248 = extractelement <16 x i1> %1226, i32 4
  br i1 %1248, label %1249, label %1252

1249:                                             ; preds = %1247
  %1250 = extractelement <16 x i64> %1227, i32 4
  %1251 = getelementptr inbounds i8, i8* %0, i64 %1250
  store i8 32, i8* %1251, align 1
  br label %1252

1252:                                             ; preds = %1249, %1247
  %1253 = extractelement <16 x i1> %1226, i32 5
  br i1 %1253, label %1254, label %1257

1254:                                             ; preds = %1252
  %1255 = extractelement <16 x i64> %1227, i32 5
  %1256 = getelementptr inbounds i8, i8* %0, i64 %1255
  store i8 32, i8* %1256, align 1
  br label %1257

1257:                                             ; preds = %1254, %1252
  %1258 = extractelement <16 x i1> %1226, i32 6
  br i1 %1258, label %1259, label %1262

1259:                                             ; preds = %1257
  %1260 = extractelement <16 x i64> %1227, i32 6
  %1261 = getelementptr inbounds i8, i8* %0, i64 %1260
  store i8 32, i8* %1261, align 1
  br label %1262

1262:                                             ; preds = %1259, %1257
  %1263 = extractelement <16 x i1> %1226, i32 7
  br i1 %1263, label %1264, label %1267

1264:                                             ; preds = %1262
  %1265 = extractelement <16 x i64> %1227, i32 7
  %1266 = getelementptr inbounds i8, i8* %0, i64 %1265
  store i8 32, i8* %1266, align 1
  br label %1267

1267:                                             ; preds = %1264, %1262
  %1268 = extractelement <16 x i1> %1226, i32 8
  br i1 %1268, label %1269, label %1272

1269:                                             ; preds = %1267
  %1270 = extractelement <16 x i64> %1227, i32 8
  %1271 = getelementptr inbounds i8, i8* %0, i64 %1270
  store i8 32, i8* %1271, align 1
  br label %1272

1272:                                             ; preds = %1269, %1267
  %1273 = extractelement <16 x i1> %1226, i32 9
  br i1 %1273, label %1274, label %1277

1274:                                             ; preds = %1272
  %1275 = extractelement <16 x i64> %1227, i32 9
  %1276 = getelementptr inbounds i8, i8* %0, i64 %1275
  store i8 32, i8* %1276, align 1
  br label %1277

1277:                                             ; preds = %1274, %1272
  %1278 = extractelement <16 x i1> %1226, i32 10
  br i1 %1278, label %1279, label %1282

1279:                                             ; preds = %1277
  %1280 = extractelement <16 x i64> %1227, i32 10
  %1281 = getelementptr inbounds i8, i8* %0, i64 %1280
  store i8 32, i8* %1281, align 1
  br label %1282

1282:                                             ; preds = %1279, %1277
  %1283 = extractelement <16 x i1> %1226, i32 11
  br i1 %1283, label %1284, label %1287

1284:                                             ; preds = %1282
  %1285 = extractelement <16 x i64> %1227, i32 11
  %1286 = getelementptr inbounds i8, i8* %0, i64 %1285
  store i8 32, i8* %1286, align 1
  br label %1287

1287:                                             ; preds = %1284, %1282
  %1288 = extractelement <16 x i1> %1226, i32 12
  br i1 %1288, label %1289, label %1292

1289:                                             ; preds = %1287
  %1290 = extractelement <16 x i64> %1227, i32 12
  %1291 = getelementptr inbounds i8, i8* %0, i64 %1290
  store i8 32, i8* %1291, align 1
  br label %1292

1292:                                             ; preds = %1289, %1287
  %1293 = extractelement <16 x i1> %1226, i32 13
  br i1 %1293, label %1294, label %1297

1294:                                             ; preds = %1292
  %1295 = extractelement <16 x i64> %1227, i32 13
  %1296 = getelementptr inbounds i8, i8* %0, i64 %1295
  store i8 32, i8* %1296, align 1
  br label %1297

1297:                                             ; preds = %1294, %1292
  %1298 = extractelement <16 x i1> %1226, i32 14
  br i1 %1298, label %1299, label %1302

1299:                                             ; preds = %1297
  %1300 = extractelement <16 x i64> %1227, i32 14
  %1301 = getelementptr inbounds i8, i8* %0, i64 %1300
  store i8 32, i8* %1301, align 1
  br label %1302

1302:                                             ; preds = %1299, %1297
  %1303 = extractelement <16 x i1> %1226, i32 15
  br i1 %1303, label %1304, label %1307

1304:                                             ; preds = %1302
  %1305 = extractelement <16 x i64> %1227, i32 15
  %1306 = getelementptr inbounds i8, i8* %0, i64 %1305
  store i8 32, i8* %1306, align 1
  br label %1307

1307:                                             ; preds = %1304, %1302
  %1308 = add i32 %1224, 16
  %1309 = add <16 x i32> %1225, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1310 = icmp eq i32 %1308, %66
  br i1 %1310, label %1311, label %1223, !llvm.loop !14

1311:                                             ; preds = %1307
  br i1 %69, label %1326, label %1312

1312:                                             ; preds = %1311, %1217
  %1313 = phi i32 [ %1197, %1217 ], [ %1219, %1311 ]
  %1314 = phi i32 [ 0, %1217 ], [ %66, %1311 ]
  br label %1315

1315:                                             ; preds = %1312, %1322
  %1316 = phi i32 [ %1323, %1322 ], [ %1313, %1312 ]
  %1317 = phi i32 [ %1324, %1322 ], [ %1314, %1312 ]
  %1318 = icmp slt i32 %1316, %1
  br i1 %1318, label %1319, label %1322

1319:                                             ; preds = %1315
  %1320 = sext i32 %1316 to i64
  %1321 = getelementptr inbounds i8, i8* %0, i64 %1320
  store i8 32, i8* %1321, align 1
  br label %1322

1322:                                             ; preds = %1319, %1315
  %1323 = add nsw i32 %1316, 1
  %1324 = add nuw nsw i32 %1317, 1
  %1325 = icmp slt i32 %1324, %2
  br i1 %1325, label %1315, label %1326, !llvm.loop !15

1326:                                             ; preds = %1322, %1311
  %1327 = phi i32 [ %1219, %1311 ], [ %1323, %1322 ]
  store i32 %1327, i32* %8, align 4
  br label %1328

1328:                                             ; preds = %1326, %1216, %1213, %1208, %1199
  %1329 = phi i32 [ %1197, %1213 ], [ %1197, %1208 ], [ %1197, %1216 ], [ %1197, %1199 ], [ %1327, %1326 ]
  %1330 = icmp slt i32 %1329, %1
  br i1 %1330, label %1331, label %1334

1331:                                             ; preds = %1328
  %1332 = sext i32 %1329 to i64
  %1333 = getelementptr inbounds i8, i8* %0, i64 %1332
  store i8 %1196, i8* %1333, align 1
  br label %1334

1334:                                             ; preds = %1331, %1328
  %1335 = icmp eq i8 %1196, 0
  br i1 %1335, label %1338, label %1336

1336:                                             ; preds = %1334
  %1337 = add nsw i32 %1329, 1
  store i32 %1337, i32* %8, align 4
  br label %1338

1338:                                             ; preds = %1334, %1336
  %1339 = load i8, i8* %1137, align 1
  %1340 = sext i8 %1339 to i64
  %1341 = getelementptr inbounds i8, i8* %1137, i64 1
  br label %1935

1342:                                             ; preds = %1130
  %1343 = load i8*, i8** %1133, align 8
  %1344 = icmp eq i8* %1343, null
  %1345 = select i1 %1344, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i8* %1343
  %1346 = load i32, i32* %8, align 4
  br label %1347

1347:                                             ; preds = %1491, %1342
  %1348 = phi i64 [ %1350, %1491 ], [ 0, %1342 ]
  %1349 = phi i32 [ %1492, %1491 ], [ %1346, %1342 ]
  %1350 = add nuw i64 %1348, 1
  %1351 = getelementptr inbounds i8, i8* %1345, i64 %1348
  %1352 = load i8, i8* %1351, align 1
  %1353 = icmp eq i32 %1349, 0
  br i1 %1353, label %1371, label %1354

1354:                                             ; preds = %1347
  switch i8 %1352, label %1355 [
    i8 10, label %1368
    i8 0, label %1483
  ]

1355:                                             ; preds = %1354
  %1356 = icmp slt i32 %1349, %1
  br i1 %1356, label %1357, label %1363

1357:                                             ; preds = %1355
  %1358 = add nsw i32 %1349, -1
  %1359 = sext i32 %1358 to i64
  %1360 = getelementptr inbounds i8, i8* %0, i64 %1359
  %1361 = load i8, i8* %1360, align 1
  %1362 = icmp eq i8 %1361, 10
  br i1 %1362, label %1371, label %1363

1363:                                             ; preds = %1357, %1355
  %1364 = icmp eq i8 %1352, 10
  %1365 = icmp sge i32 %1349, %1
  %1366 = and i1 %1365, %1364
  %1367 = and i1 %10, %1366
  br i1 %1367, label %1372, label %1483

1368:                                             ; preds = %1354
  %1369 = icmp sge i32 %1349, %1
  %1370 = and i1 %10, %1369
  br i1 %1370, label %1372, label %1483

1371:                                             ; preds = %1357, %1347
  br i1 %10, label %1372, label %1483

1372:                                             ; preds = %1371, %1368, %1363
  br i1 %55, label %1467, label %1373

1373:                                             ; preds = %1372
  %1374 = add i32 %1349, %56
  %1375 = insertelement <16 x i32> undef, i32 %1349, i32 0
  %1376 = shufflevector <16 x i32> %1375, <16 x i32> undef, <16 x i32> zeroinitializer
  %1377 = add <16 x i32> %1376, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  br label %1378

1378:                                             ; preds = %1462, %1373
  %1379 = phi i32 [ 0, %1373 ], [ %1463, %1462 ]
  %1380 = phi <16 x i32> [ %1377, %1373 ], [ %1464, %1462 ]
  %1381 = icmp slt <16 x i32> %1380, %58
  %1382 = sext <16 x i32> %1380 to <16 x i64>
  %1383 = extractelement <16 x i1> %1381, i32 0
  br i1 %1383, label %1384, label %1387

1384:                                             ; preds = %1378
  %1385 = extractelement <16 x i64> %1382, i32 0
  %1386 = getelementptr inbounds i8, i8* %0, i64 %1385
  store i8 32, i8* %1386, align 1
  br label %1387

1387:                                             ; preds = %1384, %1378
  %1388 = extractelement <16 x i1> %1381, i32 1
  br i1 %1388, label %1389, label %1392

1389:                                             ; preds = %1387
  %1390 = extractelement <16 x i64> %1382, i32 1
  %1391 = getelementptr inbounds i8, i8* %0, i64 %1390
  store i8 32, i8* %1391, align 1
  br label %1392

1392:                                             ; preds = %1389, %1387
  %1393 = extractelement <16 x i1> %1381, i32 2
  br i1 %1393, label %1394, label %1397

1394:                                             ; preds = %1392
  %1395 = extractelement <16 x i64> %1382, i32 2
  %1396 = getelementptr inbounds i8, i8* %0, i64 %1395
  store i8 32, i8* %1396, align 1
  br label %1397

1397:                                             ; preds = %1394, %1392
  %1398 = extractelement <16 x i1> %1381, i32 3
  br i1 %1398, label %1399, label %1402

1399:                                             ; preds = %1397
  %1400 = extractelement <16 x i64> %1382, i32 3
  %1401 = getelementptr inbounds i8, i8* %0, i64 %1400
  store i8 32, i8* %1401, align 1
  br label %1402

1402:                                             ; preds = %1399, %1397
  %1403 = extractelement <16 x i1> %1381, i32 4
  br i1 %1403, label %1404, label %1407

1404:                                             ; preds = %1402
  %1405 = extractelement <16 x i64> %1382, i32 4
  %1406 = getelementptr inbounds i8, i8* %0, i64 %1405
  store i8 32, i8* %1406, align 1
  br label %1407

1407:                                             ; preds = %1404, %1402
  %1408 = extractelement <16 x i1> %1381, i32 5
  br i1 %1408, label %1409, label %1412

1409:                                             ; preds = %1407
  %1410 = extractelement <16 x i64> %1382, i32 5
  %1411 = getelementptr inbounds i8, i8* %0, i64 %1410
  store i8 32, i8* %1411, align 1
  br label %1412

1412:                                             ; preds = %1409, %1407
  %1413 = extractelement <16 x i1> %1381, i32 6
  br i1 %1413, label %1414, label %1417

1414:                                             ; preds = %1412
  %1415 = extractelement <16 x i64> %1382, i32 6
  %1416 = getelementptr inbounds i8, i8* %0, i64 %1415
  store i8 32, i8* %1416, align 1
  br label %1417

1417:                                             ; preds = %1414, %1412
  %1418 = extractelement <16 x i1> %1381, i32 7
  br i1 %1418, label %1419, label %1422

1419:                                             ; preds = %1417
  %1420 = extractelement <16 x i64> %1382, i32 7
  %1421 = getelementptr inbounds i8, i8* %0, i64 %1420
  store i8 32, i8* %1421, align 1
  br label %1422

1422:                                             ; preds = %1419, %1417
  %1423 = extractelement <16 x i1> %1381, i32 8
  br i1 %1423, label %1424, label %1427

1424:                                             ; preds = %1422
  %1425 = extractelement <16 x i64> %1382, i32 8
  %1426 = getelementptr inbounds i8, i8* %0, i64 %1425
  store i8 32, i8* %1426, align 1
  br label %1427

1427:                                             ; preds = %1424, %1422
  %1428 = extractelement <16 x i1> %1381, i32 9
  br i1 %1428, label %1429, label %1432

1429:                                             ; preds = %1427
  %1430 = extractelement <16 x i64> %1382, i32 9
  %1431 = getelementptr inbounds i8, i8* %0, i64 %1430
  store i8 32, i8* %1431, align 1
  br label %1432

1432:                                             ; preds = %1429, %1427
  %1433 = extractelement <16 x i1> %1381, i32 10
  br i1 %1433, label %1434, label %1437

1434:                                             ; preds = %1432
  %1435 = extractelement <16 x i64> %1382, i32 10
  %1436 = getelementptr inbounds i8, i8* %0, i64 %1435
  store i8 32, i8* %1436, align 1
  br label %1437

1437:                                             ; preds = %1434, %1432
  %1438 = extractelement <16 x i1> %1381, i32 11
  br i1 %1438, label %1439, label %1442

1439:                                             ; preds = %1437
  %1440 = extractelement <16 x i64> %1382, i32 11
  %1441 = getelementptr inbounds i8, i8* %0, i64 %1440
  store i8 32, i8* %1441, align 1
  br label %1442

1442:                                             ; preds = %1439, %1437
  %1443 = extractelement <16 x i1> %1381, i32 12
  br i1 %1443, label %1444, label %1447

1444:                                             ; preds = %1442
  %1445 = extractelement <16 x i64> %1382, i32 12
  %1446 = getelementptr inbounds i8, i8* %0, i64 %1445
  store i8 32, i8* %1446, align 1
  br label %1447

1447:                                             ; preds = %1444, %1442
  %1448 = extractelement <16 x i1> %1381, i32 13
  br i1 %1448, label %1449, label %1452

1449:                                             ; preds = %1447
  %1450 = extractelement <16 x i64> %1382, i32 13
  %1451 = getelementptr inbounds i8, i8* %0, i64 %1450
  store i8 32, i8* %1451, align 1
  br label %1452

1452:                                             ; preds = %1449, %1447
  %1453 = extractelement <16 x i1> %1381, i32 14
  br i1 %1453, label %1454, label %1457

1454:                                             ; preds = %1452
  %1455 = extractelement <16 x i64> %1382, i32 14
  %1456 = getelementptr inbounds i8, i8* %0, i64 %1455
  store i8 32, i8* %1456, align 1
  br label %1457

1457:                                             ; preds = %1454, %1452
  %1458 = extractelement <16 x i1> %1381, i32 15
  br i1 %1458, label %1459, label %1462

1459:                                             ; preds = %1457
  %1460 = extractelement <16 x i64> %1382, i32 15
  %1461 = getelementptr inbounds i8, i8* %0, i64 %1460
  store i8 32, i8* %1461, align 1
  br label %1462

1462:                                             ; preds = %1459, %1457
  %1463 = add i32 %1379, 16
  %1464 = add <16 x i32> %1380, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1465 = icmp eq i32 %1463, %56
  br i1 %1465, label %1466, label %1378, !llvm.loop !16

1466:                                             ; preds = %1462
  br i1 %59, label %1481, label %1467

1467:                                             ; preds = %1466, %1372
  %1468 = phi i32 [ %1349, %1372 ], [ %1374, %1466 ]
  %1469 = phi i32 [ 0, %1372 ], [ %56, %1466 ]
  br label %1470

1470:                                             ; preds = %1467, %1477
  %1471 = phi i32 [ %1478, %1477 ], [ %1468, %1467 ]
  %1472 = phi i32 [ %1479, %1477 ], [ %1469, %1467 ]
  %1473 = icmp slt i32 %1471, %1
  br i1 %1473, label %1474, label %1477

1474:                                             ; preds = %1470
  %1475 = sext i32 %1471 to i64
  %1476 = getelementptr inbounds i8, i8* %0, i64 %1475
  store i8 32, i8* %1476, align 1
  br label %1477

1477:                                             ; preds = %1474, %1470
  %1478 = add nsw i32 %1471, 1
  %1479 = add nuw nsw i32 %1472, 1
  %1480 = icmp slt i32 %1479, %2
  br i1 %1480, label %1470, label %1481, !llvm.loop !17

1481:                                             ; preds = %1477, %1466
  %1482 = phi i32 [ %1374, %1466 ], [ %1478, %1477 ]
  store i32 %1482, i32* %8, align 4
  br label %1483

1483:                                             ; preds = %1481, %1371, %1368, %1363, %1354
  %1484 = phi i32 [ %1349, %1368 ], [ %1349, %1363 ], [ %1349, %1371 ], [ %1349, %1354 ], [ %1482, %1481 ]
  %1485 = icmp slt i32 %1484, %1
  br i1 %1485, label %1486, label %1489

1486:                                             ; preds = %1483
  %1487 = sext i32 %1484 to i64
  %1488 = getelementptr inbounds i8, i8* %0, i64 %1487
  store i8 %1352, i8* %1488, align 1
  br label %1489

1489:                                             ; preds = %1486, %1483
  %1490 = icmp eq i8 %1352, 0
  br i1 %1490, label %1493, label %1491

1491:                                             ; preds = %1489
  %1492 = add nsw i32 %1484, 1
  store i32 %1492, i32* %8, align 4
  br label %1347

1493:                                             ; preds = %1489
  %1494 = icmp eq i32 %1484, 0
  br i1 %1494, label %1498, label %1495

1495:                                             ; preds = %1493
  %1496 = icmp sge i32 %1484, %1
  %1497 = and i1 %10, %1496
  br i1 %1497, label %1499, label %1610

1498:                                             ; preds = %1493
  br i1 %10, label %1499, label %1610

1499:                                             ; preds = %1498, %1495
  br i1 %60, label %1594, label %1500

1500:                                             ; preds = %1499
  %1501 = add i32 %1484, %61
  %1502 = insertelement <16 x i32> undef, i32 %1484, i32 0
  %1503 = shufflevector <16 x i32> %1502, <16 x i32> undef, <16 x i32> zeroinitializer
  %1504 = add <16 x i32> %1503, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  br label %1505

1505:                                             ; preds = %1589, %1500
  %1506 = phi i32 [ 0, %1500 ], [ %1590, %1589 ]
  %1507 = phi <16 x i32> [ %1504, %1500 ], [ %1591, %1589 ]
  %1508 = icmp slt <16 x i32> %1507, %63
  %1509 = sext <16 x i32> %1507 to <16 x i64>
  %1510 = extractelement <16 x i1> %1508, i32 0
  br i1 %1510, label %1511, label %1514

1511:                                             ; preds = %1505
  %1512 = extractelement <16 x i64> %1509, i32 0
  %1513 = getelementptr inbounds i8, i8* %0, i64 %1512
  store i8 32, i8* %1513, align 1
  br label %1514

1514:                                             ; preds = %1511, %1505
  %1515 = extractelement <16 x i1> %1508, i32 1
  br i1 %1515, label %1516, label %1519

1516:                                             ; preds = %1514
  %1517 = extractelement <16 x i64> %1509, i32 1
  %1518 = getelementptr inbounds i8, i8* %0, i64 %1517
  store i8 32, i8* %1518, align 1
  br label %1519

1519:                                             ; preds = %1516, %1514
  %1520 = extractelement <16 x i1> %1508, i32 2
  br i1 %1520, label %1521, label %1524

1521:                                             ; preds = %1519
  %1522 = extractelement <16 x i64> %1509, i32 2
  %1523 = getelementptr inbounds i8, i8* %0, i64 %1522
  store i8 32, i8* %1523, align 1
  br label %1524

1524:                                             ; preds = %1521, %1519
  %1525 = extractelement <16 x i1> %1508, i32 3
  br i1 %1525, label %1526, label %1529

1526:                                             ; preds = %1524
  %1527 = extractelement <16 x i64> %1509, i32 3
  %1528 = getelementptr inbounds i8, i8* %0, i64 %1527
  store i8 32, i8* %1528, align 1
  br label %1529

1529:                                             ; preds = %1526, %1524
  %1530 = extractelement <16 x i1> %1508, i32 4
  br i1 %1530, label %1531, label %1534

1531:                                             ; preds = %1529
  %1532 = extractelement <16 x i64> %1509, i32 4
  %1533 = getelementptr inbounds i8, i8* %0, i64 %1532
  store i8 32, i8* %1533, align 1
  br label %1534

1534:                                             ; preds = %1531, %1529
  %1535 = extractelement <16 x i1> %1508, i32 5
  br i1 %1535, label %1536, label %1539

1536:                                             ; preds = %1534
  %1537 = extractelement <16 x i64> %1509, i32 5
  %1538 = getelementptr inbounds i8, i8* %0, i64 %1537
  store i8 32, i8* %1538, align 1
  br label %1539

1539:                                             ; preds = %1536, %1534
  %1540 = extractelement <16 x i1> %1508, i32 6
  br i1 %1540, label %1541, label %1544

1541:                                             ; preds = %1539
  %1542 = extractelement <16 x i64> %1509, i32 6
  %1543 = getelementptr inbounds i8, i8* %0, i64 %1542
  store i8 32, i8* %1543, align 1
  br label %1544

1544:                                             ; preds = %1541, %1539
  %1545 = extractelement <16 x i1> %1508, i32 7
  br i1 %1545, label %1546, label %1549

1546:                                             ; preds = %1544
  %1547 = extractelement <16 x i64> %1509, i32 7
  %1548 = getelementptr inbounds i8, i8* %0, i64 %1547
  store i8 32, i8* %1548, align 1
  br label %1549

1549:                                             ; preds = %1546, %1544
  %1550 = extractelement <16 x i1> %1508, i32 8
  br i1 %1550, label %1551, label %1554

1551:                                             ; preds = %1549
  %1552 = extractelement <16 x i64> %1509, i32 8
  %1553 = getelementptr inbounds i8, i8* %0, i64 %1552
  store i8 32, i8* %1553, align 1
  br label %1554

1554:                                             ; preds = %1551, %1549
  %1555 = extractelement <16 x i1> %1508, i32 9
  br i1 %1555, label %1556, label %1559

1556:                                             ; preds = %1554
  %1557 = extractelement <16 x i64> %1509, i32 9
  %1558 = getelementptr inbounds i8, i8* %0, i64 %1557
  store i8 32, i8* %1558, align 1
  br label %1559

1559:                                             ; preds = %1556, %1554
  %1560 = extractelement <16 x i1> %1508, i32 10
  br i1 %1560, label %1561, label %1564

1561:                                             ; preds = %1559
  %1562 = extractelement <16 x i64> %1509, i32 10
  %1563 = getelementptr inbounds i8, i8* %0, i64 %1562
  store i8 32, i8* %1563, align 1
  br label %1564

1564:                                             ; preds = %1561, %1559
  %1565 = extractelement <16 x i1> %1508, i32 11
  br i1 %1565, label %1566, label %1569

1566:                                             ; preds = %1564
  %1567 = extractelement <16 x i64> %1509, i32 11
  %1568 = getelementptr inbounds i8, i8* %0, i64 %1567
  store i8 32, i8* %1568, align 1
  br label %1569

1569:                                             ; preds = %1566, %1564
  %1570 = extractelement <16 x i1> %1508, i32 12
  br i1 %1570, label %1571, label %1574

1571:                                             ; preds = %1569
  %1572 = extractelement <16 x i64> %1509, i32 12
  %1573 = getelementptr inbounds i8, i8* %0, i64 %1572
  store i8 32, i8* %1573, align 1
  br label %1574

1574:                                             ; preds = %1571, %1569
  %1575 = extractelement <16 x i1> %1508, i32 13
  br i1 %1575, label %1576, label %1579

1576:                                             ; preds = %1574
  %1577 = extractelement <16 x i64> %1509, i32 13
  %1578 = getelementptr inbounds i8, i8* %0, i64 %1577
  store i8 32, i8* %1578, align 1
  br label %1579

1579:                                             ; preds = %1576, %1574
  %1580 = extractelement <16 x i1> %1508, i32 14
  br i1 %1580, label %1581, label %1584

1581:                                             ; preds = %1579
  %1582 = extractelement <16 x i64> %1509, i32 14
  %1583 = getelementptr inbounds i8, i8* %0, i64 %1582
  store i8 32, i8* %1583, align 1
  br label %1584

1584:                                             ; preds = %1581, %1579
  %1585 = extractelement <16 x i1> %1508, i32 15
  br i1 %1585, label %1586, label %1589

1586:                                             ; preds = %1584
  %1587 = extractelement <16 x i64> %1509, i32 15
  %1588 = getelementptr inbounds i8, i8* %0, i64 %1587
  store i8 32, i8* %1588, align 1
  br label %1589

1589:                                             ; preds = %1586, %1584
  %1590 = add i32 %1506, 16
  %1591 = add <16 x i32> %1507, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1592 = icmp eq i32 %1590, %61
  br i1 %1592, label %1593, label %1505, !llvm.loop !18

1593:                                             ; preds = %1589
  br i1 %64, label %1608, label %1594

1594:                                             ; preds = %1593, %1499
  %1595 = phi i32 [ %1484, %1499 ], [ %1501, %1593 ]
  %1596 = phi i32 [ 0, %1499 ], [ %61, %1593 ]
  br label %1597

1597:                                             ; preds = %1594, %1604
  %1598 = phi i32 [ %1605, %1604 ], [ %1595, %1594 ]
  %1599 = phi i32 [ %1606, %1604 ], [ %1596, %1594 ]
  %1600 = icmp slt i32 %1598, %1
  br i1 %1600, label %1601, label %1604

1601:                                             ; preds = %1597
  %1602 = sext i32 %1598 to i64
  %1603 = getelementptr inbounds i8, i8* %0, i64 %1602
  store i8 32, i8* %1603, align 1
  br label %1604

1604:                                             ; preds = %1601, %1597
  %1605 = add nsw i32 %1598, 1
  %1606 = add nuw nsw i32 %1599, 1
  %1607 = icmp slt i32 %1606, %2
  br i1 %1607, label %1597, label %1608, !llvm.loop !19

1608:                                             ; preds = %1604, %1593
  %1609 = phi i32 [ %1501, %1593 ], [ %1605, %1604 ]
  store i32 %1609, i32* %8, align 4
  br label %1610

1610:                                             ; preds = %1608, %1498, %1495
  %1611 = phi i32 [ %1484, %1495 ], [ 0, %1498 ], [ %1609, %1608 ]
  %1612 = icmp slt i32 %1611, %1
  br i1 %1612, label %1613, label %1616

1613:                                             ; preds = %1610
  %1614 = sext i32 %1611 to i64
  %1615 = getelementptr inbounds i8, i8* %0, i64 %1614
  store i8 10, i8* %1615, align 1
  br label %1616

1616:                                             ; preds = %1610, %1613
  %1617 = add nsw i32 %1611, 1
  store i32 %1617, i32* %8, align 4
  %1618 = load i8*, i8** %1133, align 8
  %1619 = icmp ne i8* %1618, null
  %1620 = zext i1 %1619 to i64
  %1621 = getelementptr inbounds i8*, i8** %1133, i64 1
  br label %1935

1622:                                             ; preds = %1130
  %1623 = bitcast i8** %1133 to i16**
  %1624 = load i16*, i16** %1623, align 8
  call fastcc void @_ZL13outputUStringPKDsiPcPiii(i16* %1624, i32 -1, i8* %0, i32* nonnull %8, i32 %1, i32 %2)
  %1625 = load i32, i32* %8, align 4
  %1626 = icmp eq i32 %1625, 0
  br i1 %1626, label %1630, label %1627

1627:                                             ; preds = %1622
  %1628 = icmp sge i32 %1625, %1
  %1629 = and i1 %10, %1628
  br i1 %1629, label %1631, label %1742

1630:                                             ; preds = %1622
  br i1 %10, label %1631, label %1742

1631:                                             ; preds = %1630, %1627
  br i1 %50, label %1726, label %1632

1632:                                             ; preds = %1631
  %1633 = add i32 %1625, %51
  %1634 = insertelement <16 x i32> undef, i32 %1625, i32 0
  %1635 = shufflevector <16 x i32> %1634, <16 x i32> undef, <16 x i32> zeroinitializer
  %1636 = add <16 x i32> %1635, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  br label %1637

1637:                                             ; preds = %1721, %1632
  %1638 = phi i32 [ 0, %1632 ], [ %1722, %1721 ]
  %1639 = phi <16 x i32> [ %1636, %1632 ], [ %1723, %1721 ]
  %1640 = icmp slt <16 x i32> %1639, %53
  %1641 = sext <16 x i32> %1639 to <16 x i64>
  %1642 = extractelement <16 x i1> %1640, i32 0
  br i1 %1642, label %1643, label %1646

1643:                                             ; preds = %1637
  %1644 = extractelement <16 x i64> %1641, i32 0
  %1645 = getelementptr inbounds i8, i8* %0, i64 %1644
  store i8 32, i8* %1645, align 1
  br label %1646

1646:                                             ; preds = %1643, %1637
  %1647 = extractelement <16 x i1> %1640, i32 1
  br i1 %1647, label %1648, label %1651

1648:                                             ; preds = %1646
  %1649 = extractelement <16 x i64> %1641, i32 1
  %1650 = getelementptr inbounds i8, i8* %0, i64 %1649
  store i8 32, i8* %1650, align 1
  br label %1651

1651:                                             ; preds = %1648, %1646
  %1652 = extractelement <16 x i1> %1640, i32 2
  br i1 %1652, label %1653, label %1656

1653:                                             ; preds = %1651
  %1654 = extractelement <16 x i64> %1641, i32 2
  %1655 = getelementptr inbounds i8, i8* %0, i64 %1654
  store i8 32, i8* %1655, align 1
  br label %1656

1656:                                             ; preds = %1653, %1651
  %1657 = extractelement <16 x i1> %1640, i32 3
  br i1 %1657, label %1658, label %1661

1658:                                             ; preds = %1656
  %1659 = extractelement <16 x i64> %1641, i32 3
  %1660 = getelementptr inbounds i8, i8* %0, i64 %1659
  store i8 32, i8* %1660, align 1
  br label %1661

1661:                                             ; preds = %1658, %1656
  %1662 = extractelement <16 x i1> %1640, i32 4
  br i1 %1662, label %1663, label %1666

1663:                                             ; preds = %1661
  %1664 = extractelement <16 x i64> %1641, i32 4
  %1665 = getelementptr inbounds i8, i8* %0, i64 %1664
  store i8 32, i8* %1665, align 1
  br label %1666

1666:                                             ; preds = %1663, %1661
  %1667 = extractelement <16 x i1> %1640, i32 5
  br i1 %1667, label %1668, label %1671

1668:                                             ; preds = %1666
  %1669 = extractelement <16 x i64> %1641, i32 5
  %1670 = getelementptr inbounds i8, i8* %0, i64 %1669
  store i8 32, i8* %1670, align 1
  br label %1671

1671:                                             ; preds = %1668, %1666
  %1672 = extractelement <16 x i1> %1640, i32 6
  br i1 %1672, label %1673, label %1676

1673:                                             ; preds = %1671
  %1674 = extractelement <16 x i64> %1641, i32 6
  %1675 = getelementptr inbounds i8, i8* %0, i64 %1674
  store i8 32, i8* %1675, align 1
  br label %1676

1676:                                             ; preds = %1673, %1671
  %1677 = extractelement <16 x i1> %1640, i32 7
  br i1 %1677, label %1678, label %1681

1678:                                             ; preds = %1676
  %1679 = extractelement <16 x i64> %1641, i32 7
  %1680 = getelementptr inbounds i8, i8* %0, i64 %1679
  store i8 32, i8* %1680, align 1
  br label %1681

1681:                                             ; preds = %1678, %1676
  %1682 = extractelement <16 x i1> %1640, i32 8
  br i1 %1682, label %1683, label %1686

1683:                                             ; preds = %1681
  %1684 = extractelement <16 x i64> %1641, i32 8
  %1685 = getelementptr inbounds i8, i8* %0, i64 %1684
  store i8 32, i8* %1685, align 1
  br label %1686

1686:                                             ; preds = %1683, %1681
  %1687 = extractelement <16 x i1> %1640, i32 9
  br i1 %1687, label %1688, label %1691

1688:                                             ; preds = %1686
  %1689 = extractelement <16 x i64> %1641, i32 9
  %1690 = getelementptr inbounds i8, i8* %0, i64 %1689
  store i8 32, i8* %1690, align 1
  br label %1691

1691:                                             ; preds = %1688, %1686
  %1692 = extractelement <16 x i1> %1640, i32 10
  br i1 %1692, label %1693, label %1696

1693:                                             ; preds = %1691
  %1694 = extractelement <16 x i64> %1641, i32 10
  %1695 = getelementptr inbounds i8, i8* %0, i64 %1694
  store i8 32, i8* %1695, align 1
  br label %1696

1696:                                             ; preds = %1693, %1691
  %1697 = extractelement <16 x i1> %1640, i32 11
  br i1 %1697, label %1698, label %1701

1698:                                             ; preds = %1696
  %1699 = extractelement <16 x i64> %1641, i32 11
  %1700 = getelementptr inbounds i8, i8* %0, i64 %1699
  store i8 32, i8* %1700, align 1
  br label %1701

1701:                                             ; preds = %1698, %1696
  %1702 = extractelement <16 x i1> %1640, i32 12
  br i1 %1702, label %1703, label %1706

1703:                                             ; preds = %1701
  %1704 = extractelement <16 x i64> %1641, i32 12
  %1705 = getelementptr inbounds i8, i8* %0, i64 %1704
  store i8 32, i8* %1705, align 1
  br label %1706

1706:                                             ; preds = %1703, %1701
  %1707 = extractelement <16 x i1> %1640, i32 13
  br i1 %1707, label %1708, label %1711

1708:                                             ; preds = %1706
  %1709 = extractelement <16 x i64> %1641, i32 13
  %1710 = getelementptr inbounds i8, i8* %0, i64 %1709
  store i8 32, i8* %1710, align 1
  br label %1711

1711:                                             ; preds = %1708, %1706
  %1712 = extractelement <16 x i1> %1640, i32 14
  br i1 %1712, label %1713, label %1716

1713:                                             ; preds = %1711
  %1714 = extractelement <16 x i64> %1641, i32 14
  %1715 = getelementptr inbounds i8, i8* %0, i64 %1714
  store i8 32, i8* %1715, align 1
  br label %1716

1716:                                             ; preds = %1713, %1711
  %1717 = extractelement <16 x i1> %1640, i32 15
  br i1 %1717, label %1718, label %1721

1718:                                             ; preds = %1716
  %1719 = extractelement <16 x i64> %1641, i32 15
  %1720 = getelementptr inbounds i8, i8* %0, i64 %1719
  store i8 32, i8* %1720, align 1
  br label %1721

1721:                                             ; preds = %1718, %1716
  %1722 = add i32 %1638, 16
  %1723 = add <16 x i32> %1639, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1724 = icmp eq i32 %1722, %51
  br i1 %1724, label %1725, label %1637, !llvm.loop !20

1725:                                             ; preds = %1721
  br i1 %54, label %1740, label %1726

1726:                                             ; preds = %1725, %1631
  %1727 = phi i32 [ %1625, %1631 ], [ %1633, %1725 ]
  %1728 = phi i32 [ 0, %1631 ], [ %51, %1725 ]
  br label %1729

1729:                                             ; preds = %1726, %1736
  %1730 = phi i32 [ %1737, %1736 ], [ %1727, %1726 ]
  %1731 = phi i32 [ %1738, %1736 ], [ %1728, %1726 ]
  %1732 = icmp slt i32 %1730, %1
  br i1 %1732, label %1733, label %1736

1733:                                             ; preds = %1729
  %1734 = sext i32 %1730 to i64
  %1735 = getelementptr inbounds i8, i8* %0, i64 %1734
  store i8 32, i8* %1735, align 1
  br label %1736

1736:                                             ; preds = %1733, %1729
  %1737 = add nsw i32 %1730, 1
  %1738 = add nuw nsw i32 %1731, 1
  %1739 = icmp slt i32 %1738, %2
  br i1 %1739, label %1729, label %1740, !llvm.loop !21

1740:                                             ; preds = %1736, %1725
  %1741 = phi i32 [ %1633, %1725 ], [ %1737, %1736 ]
  store i32 %1741, i32* %8, align 4
  br label %1742

1742:                                             ; preds = %1740, %1630, %1627
  %1743 = phi i32 [ %1625, %1627 ], [ 0, %1630 ], [ %1741, %1740 ]
  %1744 = icmp slt i32 %1743, %1
  br i1 %1744, label %1745, label %1748

1745:                                             ; preds = %1742
  %1746 = sext i32 %1743 to i64
  %1747 = getelementptr inbounds i8, i8* %0, i64 %1746
  store i8 10, i8* %1747, align 1
  br label %1748

1748:                                             ; preds = %1742, %1745
  %1749 = add nsw i32 %1743, 1
  store i32 %1749, i32* %8, align 4
  %1750 = load i8*, i8** %1133, align 8
  %1751 = icmp ne i8* %1750, null
  %1752 = zext i1 %1751 to i64
  %1753 = getelementptr inbounds i8*, i8** %1133, i64 1
  br label %1935

1754:                                             ; preds = %1130
  %1755 = icmp sgt i32 %1132, 0
  br i1 %1755, label %1765, label %1935

1756:                                             ; preds = %1139, %1143, %1147, %1151
  %1757 = phi i32 [ 16, %1151 ], [ 8, %1147 ], [ 4, %1143 ], [ 2, %1139 ]
  %1758 = phi i64* [ %1152, %1151 ], [ %1134, %1147 ], [ %1134, %1143 ], [ %1134, %1139 ]
  %1759 = phi i32* [ %1135, %1151 ], [ %1148, %1147 ], [ %1135, %1143 ], [ %1135, %1139 ]
  %1760 = phi i16* [ %1136, %1151 ], [ %1136, %1147 ], [ %1144, %1143 ], [ %1136, %1139 ]
  %1761 = phi i8* [ %1137, %1151 ], [ %1137, %1147 ], [ %1137, %1143 ], [ %1140, %1139 ]
  %1762 = phi i64 [ %1153, %1151 ], [ %1150, %1147 ], [ %1146, %1143 ], [ %1142, %1139 ]
  %1763 = shl nuw nsw i32 %1757, 2
  %1764 = add nsw i32 %1763, -4
  br label %1769

1765:                                             ; preds = %1754
  %1766 = shl i32 %1132, 2
  %1767 = add i32 %1766, -4
  %1768 = icmp sgt i32 %1767, -1
  br i1 %1768, label %1769, label %1794

1769:                                             ; preds = %1756, %1765
  %1770 = phi i32 [ %1764, %1756 ], [ %1767, %1765 ]
  %1771 = phi i64 [ %1762, %1756 ], [ %1138, %1765 ]
  %1772 = phi i8* [ %1761, %1756 ], [ %1137, %1765 ]
  %1773 = phi i16* [ %1760, %1756 ], [ %1136, %1765 ]
  %1774 = phi i32* [ %1759, %1756 ], [ %1135, %1765 ]
  %1775 = phi i64* [ %1758, %1756 ], [ %1134, %1765 ]
  %1776 = phi i32 [ %1757, %1756 ], [ %1132, %1765 ]
  %1777 = load i32, i32* %8, align 4
  br label %1778

1778:                                             ; preds = %1790, %1769
  %1779 = phi i32 [ %1791, %1790 ], [ %1777, %1769 ]
  %1780 = phi i32 [ %1792, %1790 ], [ %1770, %1769 ]
  %1781 = icmp slt i32 %1779, %1
  br i1 %1781, label %1782, label %1790

1782:                                             ; preds = %1778
  %1783 = zext i32 %1780 to i64
  %1784 = ashr i64 %1771, %1783
  %1785 = and i64 %1784, 15
  %1786 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %1785
  %1787 = load i8, i8* %1786, align 1
  %1788 = sext i32 %1779 to i64
  %1789 = getelementptr inbounds i8, i8* %0, i64 %1788
  store i8 %1787, i8* %1789, align 1
  br label %1790

1790:                                             ; preds = %1782, %1778
  %1791 = add nsw i32 %1779, 1
  %1792 = add i32 %1780, -4
  %1793 = icmp sgt i32 %1792, -1
  br i1 %1793, label %1778, label %1796

1794:                                             ; preds = %1765
  %1795 = load i32, i32* %8, align 4
  br label %1797

1796:                                             ; preds = %1790
  store i32 %1791, i32* %8, align 4
  br label %1797

1797:                                             ; preds = %1796, %1794
  %1798 = phi i64 [ %1138, %1794 ], [ %1771, %1796 ]
  %1799 = phi i8* [ %1137, %1794 ], [ %1772, %1796 ]
  %1800 = phi i16* [ %1136, %1794 ], [ %1773, %1796 ]
  %1801 = phi i32* [ %1135, %1794 ], [ %1774, %1796 ]
  %1802 = phi i64* [ %1134, %1794 ], [ %1775, %1796 ]
  %1803 = phi i32 [ %1132, %1794 ], [ %1776, %1796 ]
  %1804 = phi i32 [ %1795, %1794 ], [ %1791, %1796 ]
  %1805 = icmp eq i32 %1804, 0
  br i1 %1805, label %1815, label %1806

1806:                                             ; preds = %1797
  %1807 = icmp slt i32 %1804, %1
  br i1 %1807, label %1808, label %1927

1808:                                             ; preds = %1806
  %1809 = add nsw i32 %1804, -1
  %1810 = sext i32 %1809 to i64
  %1811 = getelementptr inbounds i8, i8* %0, i64 %1810
  %1812 = load i8, i8* %1811, align 1
  %1813 = icmp eq i8 %1812, 10
  %1814 = and i1 %10, %1813
  br i1 %1814, label %1816, label %1927

1815:                                             ; preds = %1797
  br i1 %10, label %1816, label %1927

1816:                                             ; preds = %1808, %1815
  br i1 %70, label %1911, label %1817

1817:                                             ; preds = %1816
  %1818 = add i32 %1804, %71
  %1819 = insertelement <16 x i32> undef, i32 %1804, i32 0
  %1820 = shufflevector <16 x i32> %1819, <16 x i32> undef, <16 x i32> zeroinitializer
  %1821 = add <16 x i32> %1820, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  br label %1822

1822:                                             ; preds = %1906, %1817
  %1823 = phi i32 [ 0, %1817 ], [ %1907, %1906 ]
  %1824 = phi <16 x i32> [ %1821, %1817 ], [ %1908, %1906 ]
  %1825 = icmp slt <16 x i32> %1824, %73
  %1826 = sext <16 x i32> %1824 to <16 x i64>
  %1827 = extractelement <16 x i1> %1825, i32 0
  br i1 %1827, label %1828, label %1831

1828:                                             ; preds = %1822
  %1829 = extractelement <16 x i64> %1826, i32 0
  %1830 = getelementptr inbounds i8, i8* %0, i64 %1829
  store i8 32, i8* %1830, align 1
  br label %1831

1831:                                             ; preds = %1828, %1822
  %1832 = extractelement <16 x i1> %1825, i32 1
  br i1 %1832, label %1833, label %1836

1833:                                             ; preds = %1831
  %1834 = extractelement <16 x i64> %1826, i32 1
  %1835 = getelementptr inbounds i8, i8* %0, i64 %1834
  store i8 32, i8* %1835, align 1
  br label %1836

1836:                                             ; preds = %1833, %1831
  %1837 = extractelement <16 x i1> %1825, i32 2
  br i1 %1837, label %1838, label %1841

1838:                                             ; preds = %1836
  %1839 = extractelement <16 x i64> %1826, i32 2
  %1840 = getelementptr inbounds i8, i8* %0, i64 %1839
  store i8 32, i8* %1840, align 1
  br label %1841

1841:                                             ; preds = %1838, %1836
  %1842 = extractelement <16 x i1> %1825, i32 3
  br i1 %1842, label %1843, label %1846

1843:                                             ; preds = %1841
  %1844 = extractelement <16 x i64> %1826, i32 3
  %1845 = getelementptr inbounds i8, i8* %0, i64 %1844
  store i8 32, i8* %1845, align 1
  br label %1846

1846:                                             ; preds = %1843, %1841
  %1847 = extractelement <16 x i1> %1825, i32 4
  br i1 %1847, label %1848, label %1851

1848:                                             ; preds = %1846
  %1849 = extractelement <16 x i64> %1826, i32 4
  %1850 = getelementptr inbounds i8, i8* %0, i64 %1849
  store i8 32, i8* %1850, align 1
  br label %1851

1851:                                             ; preds = %1848, %1846
  %1852 = extractelement <16 x i1> %1825, i32 5
  br i1 %1852, label %1853, label %1856

1853:                                             ; preds = %1851
  %1854 = extractelement <16 x i64> %1826, i32 5
  %1855 = getelementptr inbounds i8, i8* %0, i64 %1854
  store i8 32, i8* %1855, align 1
  br label %1856

1856:                                             ; preds = %1853, %1851
  %1857 = extractelement <16 x i1> %1825, i32 6
  br i1 %1857, label %1858, label %1861

1858:                                             ; preds = %1856
  %1859 = extractelement <16 x i64> %1826, i32 6
  %1860 = getelementptr inbounds i8, i8* %0, i64 %1859
  store i8 32, i8* %1860, align 1
  br label %1861

1861:                                             ; preds = %1858, %1856
  %1862 = extractelement <16 x i1> %1825, i32 7
  br i1 %1862, label %1863, label %1866

1863:                                             ; preds = %1861
  %1864 = extractelement <16 x i64> %1826, i32 7
  %1865 = getelementptr inbounds i8, i8* %0, i64 %1864
  store i8 32, i8* %1865, align 1
  br label %1866

1866:                                             ; preds = %1863, %1861
  %1867 = extractelement <16 x i1> %1825, i32 8
  br i1 %1867, label %1868, label %1871

1868:                                             ; preds = %1866
  %1869 = extractelement <16 x i64> %1826, i32 8
  %1870 = getelementptr inbounds i8, i8* %0, i64 %1869
  store i8 32, i8* %1870, align 1
  br label %1871

1871:                                             ; preds = %1868, %1866
  %1872 = extractelement <16 x i1> %1825, i32 9
  br i1 %1872, label %1873, label %1876

1873:                                             ; preds = %1871
  %1874 = extractelement <16 x i64> %1826, i32 9
  %1875 = getelementptr inbounds i8, i8* %0, i64 %1874
  store i8 32, i8* %1875, align 1
  br label %1876

1876:                                             ; preds = %1873, %1871
  %1877 = extractelement <16 x i1> %1825, i32 10
  br i1 %1877, label %1878, label %1881

1878:                                             ; preds = %1876
  %1879 = extractelement <16 x i64> %1826, i32 10
  %1880 = getelementptr inbounds i8, i8* %0, i64 %1879
  store i8 32, i8* %1880, align 1
  br label %1881

1881:                                             ; preds = %1878, %1876
  %1882 = extractelement <16 x i1> %1825, i32 11
  br i1 %1882, label %1883, label %1886

1883:                                             ; preds = %1881
  %1884 = extractelement <16 x i64> %1826, i32 11
  %1885 = getelementptr inbounds i8, i8* %0, i64 %1884
  store i8 32, i8* %1885, align 1
  br label %1886

1886:                                             ; preds = %1883, %1881
  %1887 = extractelement <16 x i1> %1825, i32 12
  br i1 %1887, label %1888, label %1891

1888:                                             ; preds = %1886
  %1889 = extractelement <16 x i64> %1826, i32 12
  %1890 = getelementptr inbounds i8, i8* %0, i64 %1889
  store i8 32, i8* %1890, align 1
  br label %1891

1891:                                             ; preds = %1888, %1886
  %1892 = extractelement <16 x i1> %1825, i32 13
  br i1 %1892, label %1893, label %1896

1893:                                             ; preds = %1891
  %1894 = extractelement <16 x i64> %1826, i32 13
  %1895 = getelementptr inbounds i8, i8* %0, i64 %1894
  store i8 32, i8* %1895, align 1
  br label %1896

1896:                                             ; preds = %1893, %1891
  %1897 = extractelement <16 x i1> %1825, i32 14
  br i1 %1897, label %1898, label %1901

1898:                                             ; preds = %1896
  %1899 = extractelement <16 x i64> %1826, i32 14
  %1900 = getelementptr inbounds i8, i8* %0, i64 %1899
  store i8 32, i8* %1900, align 1
  br label %1901

1901:                                             ; preds = %1898, %1896
  %1902 = extractelement <16 x i1> %1825, i32 15
  br i1 %1902, label %1903, label %1906

1903:                                             ; preds = %1901
  %1904 = extractelement <16 x i64> %1826, i32 15
  %1905 = getelementptr inbounds i8, i8* %0, i64 %1904
  store i8 32, i8* %1905, align 1
  br label %1906

1906:                                             ; preds = %1903, %1901
  %1907 = add i32 %1823, 16
  %1908 = add <16 x i32> %1824, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1909 = icmp eq i32 %1907, %71
  br i1 %1909, label %1910, label %1822, !llvm.loop !22

1910:                                             ; preds = %1906
  br i1 %74, label %1925, label %1911

1911:                                             ; preds = %1910, %1816
  %1912 = phi i32 [ %1804, %1816 ], [ %1818, %1910 ]
  %1913 = phi i32 [ 0, %1816 ], [ %71, %1910 ]
  br label %1914

1914:                                             ; preds = %1911, %1921
  %1915 = phi i32 [ %1922, %1921 ], [ %1912, %1911 ]
  %1916 = phi i32 [ %1923, %1921 ], [ %1913, %1911 ]
  %1917 = icmp slt i32 %1915, %1
  br i1 %1917, label %1918, label %1921

1918:                                             ; preds = %1914
  %1919 = sext i32 %1915 to i64
  %1920 = getelementptr inbounds i8, i8* %0, i64 %1919
  store i8 32, i8* %1920, align 1
  br label %1921

1921:                                             ; preds = %1918, %1914
  %1922 = add nsw i32 %1915, 1
  %1923 = add nuw nsw i32 %1916, 1
  %1924 = icmp slt i32 %1923, %2
  br i1 %1924, label %1914, label %1925, !llvm.loop !23

1925:                                             ; preds = %1921, %1910
  %1926 = phi i32 [ %1818, %1910 ], [ %1922, %1921 ]
  store i32 %1926, i32* %8, align 4
  br label %1927

1927:                                             ; preds = %1925, %1806, %1808, %1815
  %1928 = phi i32 [ 0, %1815 ], [ %1804, %1808 ], [ %1804, %1806 ], [ %1926, %1925 ]
  %1929 = icmp slt i32 %1928, %1
  br i1 %1929, label %1930, label %1933

1930:                                             ; preds = %1927
  %1931 = sext i32 %1928 to i64
  %1932 = getelementptr inbounds i8, i8* %0, i64 %1931
  store i8 32, i8* %1932, align 1
  br label %1933

1933:                                             ; preds = %1927, %1930
  %1934 = add nsw i32 %1928, 1
  store i32 %1934, i32* %8, align 4
  br label %1935

1935:                                             ; preds = %1190, %1338, %1616, %1748, %1933, %1754
  %1936 = phi i32 [ %1803, %1933 ], [ %1132, %1754 ], [ 0, %1748 ], [ 0, %1616 ], [ 0, %1338 ], [ 0, %1190 ]
  %1937 = phi i8** [ %1133, %1933 ], [ %1133, %1754 ], [ %1753, %1748 ], [ %1621, %1616 ], [ %1133, %1338 ], [ %1194, %1190 ]
  %1938 = phi i64* [ %1802, %1933 ], [ %1134, %1754 ], [ %1134, %1748 ], [ %1134, %1616 ], [ %1134, %1338 ], [ %1134, %1190 ]
  %1939 = phi i32* [ %1801, %1933 ], [ %1135, %1754 ], [ %1135, %1748 ], [ %1135, %1616 ], [ %1135, %1338 ], [ %1135, %1190 ]
  %1940 = phi i16* [ %1800, %1933 ], [ %1136, %1754 ], [ %1136, %1748 ], [ %1136, %1616 ], [ %1136, %1338 ], [ %1136, %1190 ]
  %1941 = phi i8* [ %1799, %1933 ], [ %1137, %1754 ], [ %1137, %1748 ], [ %1137, %1616 ], [ %1341, %1338 ], [ %1137, %1190 ]
  %1942 = phi i64 [ %1798, %1933 ], [ %1138, %1754 ], [ %1752, %1748 ], [ %1620, %1616 ], [ %1340, %1338 ], [ %1193, %1190 ]
  %1943 = icmp eq i64 %1942, 0
  %1944 = and i1 %983, %1943
  %1945 = add nuw nsw i32 %1131, 1
  br i1 %1944, label %1947, label %1127

1946:                                             ; preds = %1124
  store i32 %1118, i32* %8, align 4
  br label %1950

1947:                                             ; preds = %1127, %1935, %981
  %1948 = phi i64 [ %112, %981 ], [ %1942, %1127 ], [ 0, %1935 ]
  %1949 = load i32, i32* %8, align 4
  br label %1950

1950:                                             ; preds = %1947, %1946
  %1951 = phi i32 [ %1949, %1947 ], [ %1118, %1946 ]
  %1952 = phi i64 [ %1948, %1947 ], [ %112, %1946 ]
  %1953 = icmp eq i32 %1951, 0
  br i1 %1953, label %1963, label %1954

1954:                                             ; preds = %1950
  %1955 = icmp slt i32 %1951, %1
  br i1 %1955, label %1956, label %2075

1956:                                             ; preds = %1954
  %1957 = add nsw i32 %1951, -1
  %1958 = sext i32 %1957 to i64
  %1959 = getelementptr inbounds i8, i8* %0, i64 %1958
  %1960 = load i8, i8* %1959, align 1
  %1961 = icmp eq i8 %1960, 10
  %1962 = and i1 %10, %1961
  br i1 %1962, label %1964, label %2075

1963:                                             ; preds = %1950
  br i1 %10, label %1964, label %2075

1964:                                             ; preds = %1956, %1963
  br i1 %80, label %2059, label %1965

1965:                                             ; preds = %1964
  %1966 = add i32 %1951, %81
  %1967 = insertelement <16 x i32> undef, i32 %1951, i32 0
  %1968 = shufflevector <16 x i32> %1967, <16 x i32> undef, <16 x i32> zeroinitializer
  %1969 = add <16 x i32> %1968, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  br label %1970

1970:                                             ; preds = %2054, %1965
  %1971 = phi i32 [ 0, %1965 ], [ %2055, %2054 ]
  %1972 = phi <16 x i32> [ %1969, %1965 ], [ %2056, %2054 ]
  %1973 = icmp slt <16 x i32> %1972, %83
  %1974 = sext <16 x i32> %1972 to <16 x i64>
  %1975 = extractelement <16 x i1> %1973, i32 0
  br i1 %1975, label %1976, label %1979

1976:                                             ; preds = %1970
  %1977 = extractelement <16 x i64> %1974, i32 0
  %1978 = getelementptr inbounds i8, i8* %0, i64 %1977
  store i8 32, i8* %1978, align 1
  br label %1979

1979:                                             ; preds = %1976, %1970
  %1980 = extractelement <16 x i1> %1973, i32 1
  br i1 %1980, label %1981, label %1984

1981:                                             ; preds = %1979
  %1982 = extractelement <16 x i64> %1974, i32 1
  %1983 = getelementptr inbounds i8, i8* %0, i64 %1982
  store i8 32, i8* %1983, align 1
  br label %1984

1984:                                             ; preds = %1981, %1979
  %1985 = extractelement <16 x i1> %1973, i32 2
  br i1 %1985, label %1986, label %1989

1986:                                             ; preds = %1984
  %1987 = extractelement <16 x i64> %1974, i32 2
  %1988 = getelementptr inbounds i8, i8* %0, i64 %1987
  store i8 32, i8* %1988, align 1
  br label %1989

1989:                                             ; preds = %1986, %1984
  %1990 = extractelement <16 x i1> %1973, i32 3
  br i1 %1990, label %1991, label %1994

1991:                                             ; preds = %1989
  %1992 = extractelement <16 x i64> %1974, i32 3
  %1993 = getelementptr inbounds i8, i8* %0, i64 %1992
  store i8 32, i8* %1993, align 1
  br label %1994

1994:                                             ; preds = %1991, %1989
  %1995 = extractelement <16 x i1> %1973, i32 4
  br i1 %1995, label %1996, label %1999

1996:                                             ; preds = %1994
  %1997 = extractelement <16 x i64> %1974, i32 4
  %1998 = getelementptr inbounds i8, i8* %0, i64 %1997
  store i8 32, i8* %1998, align 1
  br label %1999

1999:                                             ; preds = %1996, %1994
  %2000 = extractelement <16 x i1> %1973, i32 5
  br i1 %2000, label %2001, label %2004

2001:                                             ; preds = %1999
  %2002 = extractelement <16 x i64> %1974, i32 5
  %2003 = getelementptr inbounds i8, i8* %0, i64 %2002
  store i8 32, i8* %2003, align 1
  br label %2004

2004:                                             ; preds = %2001, %1999
  %2005 = extractelement <16 x i1> %1973, i32 6
  br i1 %2005, label %2006, label %2009

2006:                                             ; preds = %2004
  %2007 = extractelement <16 x i64> %1974, i32 6
  %2008 = getelementptr inbounds i8, i8* %0, i64 %2007
  store i8 32, i8* %2008, align 1
  br label %2009

2009:                                             ; preds = %2006, %2004
  %2010 = extractelement <16 x i1> %1973, i32 7
  br i1 %2010, label %2011, label %2014

2011:                                             ; preds = %2009
  %2012 = extractelement <16 x i64> %1974, i32 7
  %2013 = getelementptr inbounds i8, i8* %0, i64 %2012
  store i8 32, i8* %2013, align 1
  br label %2014

2014:                                             ; preds = %2011, %2009
  %2015 = extractelement <16 x i1> %1973, i32 8
  br i1 %2015, label %2016, label %2019

2016:                                             ; preds = %2014
  %2017 = extractelement <16 x i64> %1974, i32 8
  %2018 = getelementptr inbounds i8, i8* %0, i64 %2017
  store i8 32, i8* %2018, align 1
  br label %2019

2019:                                             ; preds = %2016, %2014
  %2020 = extractelement <16 x i1> %1973, i32 9
  br i1 %2020, label %2021, label %2024

2021:                                             ; preds = %2019
  %2022 = extractelement <16 x i64> %1974, i32 9
  %2023 = getelementptr inbounds i8, i8* %0, i64 %2022
  store i8 32, i8* %2023, align 1
  br label %2024

2024:                                             ; preds = %2021, %2019
  %2025 = extractelement <16 x i1> %1973, i32 10
  br i1 %2025, label %2026, label %2029

2026:                                             ; preds = %2024
  %2027 = extractelement <16 x i64> %1974, i32 10
  %2028 = getelementptr inbounds i8, i8* %0, i64 %2027
  store i8 32, i8* %2028, align 1
  br label %2029

2029:                                             ; preds = %2026, %2024
  %2030 = extractelement <16 x i1> %1973, i32 11
  br i1 %2030, label %2031, label %2034

2031:                                             ; preds = %2029
  %2032 = extractelement <16 x i64> %1974, i32 11
  %2033 = getelementptr inbounds i8, i8* %0, i64 %2032
  store i8 32, i8* %2033, align 1
  br label %2034

2034:                                             ; preds = %2031, %2029
  %2035 = extractelement <16 x i1> %1973, i32 12
  br i1 %2035, label %2036, label %2039

2036:                                             ; preds = %2034
  %2037 = extractelement <16 x i64> %1974, i32 12
  %2038 = getelementptr inbounds i8, i8* %0, i64 %2037
  store i8 32, i8* %2038, align 1
  br label %2039

2039:                                             ; preds = %2036, %2034
  %2040 = extractelement <16 x i1> %1973, i32 13
  br i1 %2040, label %2041, label %2044

2041:                                             ; preds = %2039
  %2042 = extractelement <16 x i64> %1974, i32 13
  %2043 = getelementptr inbounds i8, i8* %0, i64 %2042
  store i8 32, i8* %2043, align 1
  br label %2044

2044:                                             ; preds = %2041, %2039
  %2045 = extractelement <16 x i1> %1973, i32 14
  br i1 %2045, label %2046, label %2049

2046:                                             ; preds = %2044
  %2047 = extractelement <16 x i64> %1974, i32 14
  %2048 = getelementptr inbounds i8, i8* %0, i64 %2047
  store i8 32, i8* %2048, align 1
  br label %2049

2049:                                             ; preds = %2046, %2044
  %2050 = extractelement <16 x i1> %1973, i32 15
  br i1 %2050, label %2051, label %2054

2051:                                             ; preds = %2049
  %2052 = extractelement <16 x i64> %1974, i32 15
  %2053 = getelementptr inbounds i8, i8* %0, i64 %2052
  store i8 32, i8* %2053, align 1
  br label %2054

2054:                                             ; preds = %2051, %2049
  %2055 = add i32 %1971, 16
  %2056 = add <16 x i32> %1972, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %2057 = icmp eq i32 %2055, %81
  br i1 %2057, label %2058, label %1970, !llvm.loop !24

2058:                                             ; preds = %2054
  br i1 %84, label %2073, label %2059

2059:                                             ; preds = %2058, %1964
  %2060 = phi i32 [ %1951, %1964 ], [ %1966, %2058 ]
  %2061 = phi i32 [ 0, %1964 ], [ %81, %2058 ]
  br label %2062

2062:                                             ; preds = %2059, %2069
  %2063 = phi i32 [ %2070, %2069 ], [ %2060, %2059 ]
  %2064 = phi i32 [ %2071, %2069 ], [ %2061, %2059 ]
  %2065 = icmp slt i32 %2063, %1
  br i1 %2065, label %2066, label %2069

2066:                                             ; preds = %2062
  %2067 = sext i32 %2063 to i64
  %2068 = getelementptr inbounds i8, i8* %0, i64 %2067
  store i8 32, i8* %2068, align 1
  br label %2069

2069:                                             ; preds = %2066, %2062
  %2070 = add nsw i32 %2063, 1
  %2071 = add nuw nsw i32 %2064, 1
  %2072 = icmp slt i32 %2071, %2
  br i1 %2072, label %2062, label %2073, !llvm.loop !25

2073:                                             ; preds = %2069, %2058
  %2074 = phi i32 [ %1966, %2058 ], [ %2070, %2069 ]
  store i32 %2074, i32* %8, align 4
  br label %2075

2075:                                             ; preds = %2073, %1954, %1956, %1963
  %2076 = phi i32 [ 0, %1963 ], [ %1951, %1956 ], [ %1951, %1954 ], [ %2074, %2073 ]
  %2077 = icmp slt i32 %2076, %1
  br i1 %2077, label %2078, label %2081

2078:                                             ; preds = %2075
  %2079 = sext i32 %2076 to i64
  %2080 = getelementptr inbounds i8, i8* %0, i64 %2079
  store i8 91, i8* %2080, align 1
  br label %2081

2081:                                             ; preds = %2075, %2078
  %2082 = add nsw i32 %2076, 1
  store i32 %2082, i32* %8, align 4
  %2083 = sext i32 %979 to i64
  %2084 = icmp slt i32 %2082, %1
  br i1 %2084, label %2085, label %2092

2085:                                             ; preds = %2081
  %2086 = lshr i64 %2083, 28
  %2087 = and i64 %2086, 15
  %2088 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %2087
  %2089 = load i8, i8* %2088, align 1
  %2090 = sext i32 %2082 to i64
  %2091 = getelementptr inbounds i8, i8* %0, i64 %2090
  store i8 %2089, i8* %2091, align 1
  br label %2092

2092:                                             ; preds = %2085, %2081
  %2093 = add nsw i32 %2076, 2
  %2094 = icmp slt i32 %2093, %1
  br i1 %2094, label %2492, label %2499

2095:                                             ; preds = %2558
  %2096 = icmp slt i32 %2559, %1
  br i1 %2096, label %2097, label %2215

2097:                                             ; preds = %2095
  %2098 = sext i32 %2550 to i64
  %2099 = getelementptr inbounds i8, i8* %0, i64 %2098
  %2100 = load i8, i8* %2099, align 1
  %2101 = icmp eq i8 %2100, 10
  %2102 = and i1 %10, %2101
  br i1 %2102, label %2104, label %2215

2103:                                             ; preds = %2558
  br i1 %10, label %2104, label %2215

2104:                                             ; preds = %2097, %2103
  br i1 %85, label %2199, label %2105

2105:                                             ; preds = %2104
  %2106 = add i32 %2559, %86
  %2107 = insertelement <16 x i32> undef, i32 %2559, i32 0
  %2108 = shufflevector <16 x i32> %2107, <16 x i32> undef, <16 x i32> zeroinitializer
  %2109 = add <16 x i32> %2108, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  br label %2110

2110:                                             ; preds = %2194, %2105
  %2111 = phi i32 [ 0, %2105 ], [ %2195, %2194 ]
  %2112 = phi <16 x i32> [ %2109, %2105 ], [ %2196, %2194 ]
  %2113 = icmp slt <16 x i32> %2112, %88
  %2114 = sext <16 x i32> %2112 to <16 x i64>
  %2115 = extractelement <16 x i1> %2113, i32 0
  br i1 %2115, label %2116, label %2119

2116:                                             ; preds = %2110
  %2117 = extractelement <16 x i64> %2114, i32 0
  %2118 = getelementptr inbounds i8, i8* %0, i64 %2117
  store i8 32, i8* %2118, align 1
  br label %2119

2119:                                             ; preds = %2116, %2110
  %2120 = extractelement <16 x i1> %2113, i32 1
  br i1 %2120, label %2121, label %2124

2121:                                             ; preds = %2119
  %2122 = extractelement <16 x i64> %2114, i32 1
  %2123 = getelementptr inbounds i8, i8* %0, i64 %2122
  store i8 32, i8* %2123, align 1
  br label %2124

2124:                                             ; preds = %2121, %2119
  %2125 = extractelement <16 x i1> %2113, i32 2
  br i1 %2125, label %2126, label %2129

2126:                                             ; preds = %2124
  %2127 = extractelement <16 x i64> %2114, i32 2
  %2128 = getelementptr inbounds i8, i8* %0, i64 %2127
  store i8 32, i8* %2128, align 1
  br label %2129

2129:                                             ; preds = %2126, %2124
  %2130 = extractelement <16 x i1> %2113, i32 3
  br i1 %2130, label %2131, label %2134

2131:                                             ; preds = %2129
  %2132 = extractelement <16 x i64> %2114, i32 3
  %2133 = getelementptr inbounds i8, i8* %0, i64 %2132
  store i8 32, i8* %2133, align 1
  br label %2134

2134:                                             ; preds = %2131, %2129
  %2135 = extractelement <16 x i1> %2113, i32 4
  br i1 %2135, label %2136, label %2139

2136:                                             ; preds = %2134
  %2137 = extractelement <16 x i64> %2114, i32 4
  %2138 = getelementptr inbounds i8, i8* %0, i64 %2137
  store i8 32, i8* %2138, align 1
  br label %2139

2139:                                             ; preds = %2136, %2134
  %2140 = extractelement <16 x i1> %2113, i32 5
  br i1 %2140, label %2141, label %2144

2141:                                             ; preds = %2139
  %2142 = extractelement <16 x i64> %2114, i32 5
  %2143 = getelementptr inbounds i8, i8* %0, i64 %2142
  store i8 32, i8* %2143, align 1
  br label %2144

2144:                                             ; preds = %2141, %2139
  %2145 = extractelement <16 x i1> %2113, i32 6
  br i1 %2145, label %2146, label %2149

2146:                                             ; preds = %2144
  %2147 = extractelement <16 x i64> %2114, i32 6
  %2148 = getelementptr inbounds i8, i8* %0, i64 %2147
  store i8 32, i8* %2148, align 1
  br label %2149

2149:                                             ; preds = %2146, %2144
  %2150 = extractelement <16 x i1> %2113, i32 7
  br i1 %2150, label %2151, label %2154

2151:                                             ; preds = %2149
  %2152 = extractelement <16 x i64> %2114, i32 7
  %2153 = getelementptr inbounds i8, i8* %0, i64 %2152
  store i8 32, i8* %2153, align 1
  br label %2154

2154:                                             ; preds = %2151, %2149
  %2155 = extractelement <16 x i1> %2113, i32 8
  br i1 %2155, label %2156, label %2159

2156:                                             ; preds = %2154
  %2157 = extractelement <16 x i64> %2114, i32 8
  %2158 = getelementptr inbounds i8, i8* %0, i64 %2157
  store i8 32, i8* %2158, align 1
  br label %2159

2159:                                             ; preds = %2156, %2154
  %2160 = extractelement <16 x i1> %2113, i32 9
  br i1 %2160, label %2161, label %2164

2161:                                             ; preds = %2159
  %2162 = extractelement <16 x i64> %2114, i32 9
  %2163 = getelementptr inbounds i8, i8* %0, i64 %2162
  store i8 32, i8* %2163, align 1
  br label %2164

2164:                                             ; preds = %2161, %2159
  %2165 = extractelement <16 x i1> %2113, i32 10
  br i1 %2165, label %2166, label %2169

2166:                                             ; preds = %2164
  %2167 = extractelement <16 x i64> %2114, i32 10
  %2168 = getelementptr inbounds i8, i8* %0, i64 %2167
  store i8 32, i8* %2168, align 1
  br label %2169

2169:                                             ; preds = %2166, %2164
  %2170 = extractelement <16 x i1> %2113, i32 11
  br i1 %2170, label %2171, label %2174

2171:                                             ; preds = %2169
  %2172 = extractelement <16 x i64> %2114, i32 11
  %2173 = getelementptr inbounds i8, i8* %0, i64 %2172
  store i8 32, i8* %2173, align 1
  br label %2174

2174:                                             ; preds = %2171, %2169
  %2175 = extractelement <16 x i1> %2113, i32 12
  br i1 %2175, label %2176, label %2179

2176:                                             ; preds = %2174
  %2177 = extractelement <16 x i64> %2114, i32 12
  %2178 = getelementptr inbounds i8, i8* %0, i64 %2177
  store i8 32, i8* %2178, align 1
  br label %2179

2179:                                             ; preds = %2176, %2174
  %2180 = extractelement <16 x i1> %2113, i32 13
  br i1 %2180, label %2181, label %2184

2181:                                             ; preds = %2179
  %2182 = extractelement <16 x i64> %2114, i32 13
  %2183 = getelementptr inbounds i8, i8* %0, i64 %2182
  store i8 32, i8* %2183, align 1
  br label %2184

2184:                                             ; preds = %2181, %2179
  %2185 = extractelement <16 x i1> %2113, i32 14
  br i1 %2185, label %2186, label %2189

2186:                                             ; preds = %2184
  %2187 = extractelement <16 x i64> %2114, i32 14
  %2188 = getelementptr inbounds i8, i8* %0, i64 %2187
  store i8 32, i8* %2188, align 1
  br label %2189

2189:                                             ; preds = %2186, %2184
  %2190 = extractelement <16 x i1> %2113, i32 15
  br i1 %2190, label %2191, label %2194

2191:                                             ; preds = %2189
  %2192 = extractelement <16 x i64> %2114, i32 15
  %2193 = getelementptr inbounds i8, i8* %0, i64 %2192
  store i8 32, i8* %2193, align 1
  br label %2194

2194:                                             ; preds = %2191, %2189
  %2195 = add i32 %2111, 16
  %2196 = add <16 x i32> %2112, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %2197 = icmp eq i32 %2195, %86
  br i1 %2197, label %2198, label %2110, !llvm.loop !26

2198:                                             ; preds = %2194
  br i1 %89, label %2213, label %2199

2199:                                             ; preds = %2198, %2104
  %2200 = phi i32 [ %2559, %2104 ], [ %2106, %2198 ]
  %2201 = phi i32 [ 0, %2104 ], [ %86, %2198 ]
  br label %2202

2202:                                             ; preds = %2199, %2209
  %2203 = phi i32 [ %2210, %2209 ], [ %2200, %2199 ]
  %2204 = phi i32 [ %2211, %2209 ], [ %2201, %2199 ]
  %2205 = icmp slt i32 %2203, %1
  br i1 %2205, label %2206, label %2209

2206:                                             ; preds = %2202
  %2207 = sext i32 %2203 to i64
  %2208 = getelementptr inbounds i8, i8* %0, i64 %2207
  store i8 32, i8* %2208, align 1
  br label %2209

2209:                                             ; preds = %2206, %2202
  %2210 = add nsw i32 %2203, 1
  %2211 = add nuw nsw i32 %2204, 1
  %2212 = icmp slt i32 %2211, %2
  br i1 %2212, label %2202, label %2213, !llvm.loop !27

2213:                                             ; preds = %2209, %2198
  %2214 = phi i32 [ %2106, %2198 ], [ %2210, %2209 ]
  store i32 %2214, i32* %8, align 4
  br label %2215

2215:                                             ; preds = %2213, %2095, %2097, %2103
  %2216 = phi i32 [ 0, %2103 ], [ %2559, %2097 ], [ %2559, %2095 ], [ %2214, %2213 ]
  %2217 = icmp slt i32 %2216, %1
  br i1 %2217, label %2218, label %2221

2218:                                             ; preds = %2215
  %2219 = sext i32 %2216 to i64
  %2220 = getelementptr inbounds i8, i8* %0, i64 %2219
  store i8 93, i8* %2220, align 1
  br label %2221

2221:                                             ; preds = %2215, %2218
  %2222 = add nsw i32 %2216, 1
  store i32 %2222, i32* %8, align 4
  br label %2366

2223:                                             ; preds = %272
  %2224 = load i32, i32* %8, align 4
  %2225 = icmp eq i32 %2224, 0
  br i1 %2225, label %2243, label %2226

2226:                                             ; preds = %2223
  switch i8 %278, label %2227 [
    i8 10, label %2240
    i8 0, label %2355
  ]

2227:                                             ; preds = %2226
  %2228 = icmp slt i32 %2224, %1
  br i1 %2228, label %2229, label %2235

2229:                                             ; preds = %2227
  %2230 = add nsw i32 %2224, -1
  %2231 = sext i32 %2230 to i64
  %2232 = getelementptr inbounds i8, i8* %0, i64 %2231
  %2233 = load i8, i8* %2232, align 1
  %2234 = icmp eq i8 %2233, 10
  br i1 %2234, label %2243, label %2235

2235:                                             ; preds = %2229, %2227
  %2236 = icmp eq i8 %278, 10
  %2237 = icmp sge i32 %2224, %1
  %2238 = and i1 %2236, %2237
  %2239 = and i1 %10, %2238
  br i1 %2239, label %2244, label %2355

2240:                                             ; preds = %2226
  %2241 = icmp sge i32 %2224, %1
  %2242 = and i1 %10, %2241
  br i1 %2242, label %2244, label %2355

2243:                                             ; preds = %2229, %2223
  br i1 %10, label %2244, label %2355

2244:                                             ; preds = %2243, %2240, %2235
  br i1 %105, label %2339, label %2245

2245:                                             ; preds = %2244
  %2246 = add i32 %2224, %106
  %2247 = insertelement <16 x i32> undef, i32 %2224, i32 0
  %2248 = shufflevector <16 x i32> %2247, <16 x i32> undef, <16 x i32> zeroinitializer
  %2249 = add <16 x i32> %2248, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  br label %2250

2250:                                             ; preds = %2334, %2245
  %2251 = phi i32 [ 0, %2245 ], [ %2335, %2334 ]
  %2252 = phi <16 x i32> [ %2249, %2245 ], [ %2336, %2334 ]
  %2253 = icmp slt <16 x i32> %2252, %108
  %2254 = sext <16 x i32> %2252 to <16 x i64>
  %2255 = extractelement <16 x i1> %2253, i32 0
  br i1 %2255, label %2256, label %2259

2256:                                             ; preds = %2250
  %2257 = extractelement <16 x i64> %2254, i32 0
  %2258 = getelementptr inbounds i8, i8* %0, i64 %2257
  store i8 32, i8* %2258, align 1
  br label %2259

2259:                                             ; preds = %2256, %2250
  %2260 = extractelement <16 x i1> %2253, i32 1
  br i1 %2260, label %2261, label %2264

2261:                                             ; preds = %2259
  %2262 = extractelement <16 x i64> %2254, i32 1
  %2263 = getelementptr inbounds i8, i8* %0, i64 %2262
  store i8 32, i8* %2263, align 1
  br label %2264

2264:                                             ; preds = %2261, %2259
  %2265 = extractelement <16 x i1> %2253, i32 2
  br i1 %2265, label %2266, label %2269

2266:                                             ; preds = %2264
  %2267 = extractelement <16 x i64> %2254, i32 2
  %2268 = getelementptr inbounds i8, i8* %0, i64 %2267
  store i8 32, i8* %2268, align 1
  br label %2269

2269:                                             ; preds = %2266, %2264
  %2270 = extractelement <16 x i1> %2253, i32 3
  br i1 %2270, label %2271, label %2274

2271:                                             ; preds = %2269
  %2272 = extractelement <16 x i64> %2254, i32 3
  %2273 = getelementptr inbounds i8, i8* %0, i64 %2272
  store i8 32, i8* %2273, align 1
  br label %2274

2274:                                             ; preds = %2271, %2269
  %2275 = extractelement <16 x i1> %2253, i32 4
  br i1 %2275, label %2276, label %2279

2276:                                             ; preds = %2274
  %2277 = extractelement <16 x i64> %2254, i32 4
  %2278 = getelementptr inbounds i8, i8* %0, i64 %2277
  store i8 32, i8* %2278, align 1
  br label %2279

2279:                                             ; preds = %2276, %2274
  %2280 = extractelement <16 x i1> %2253, i32 5
  br i1 %2280, label %2281, label %2284

2281:                                             ; preds = %2279
  %2282 = extractelement <16 x i64> %2254, i32 5
  %2283 = getelementptr inbounds i8, i8* %0, i64 %2282
  store i8 32, i8* %2283, align 1
  br label %2284

2284:                                             ; preds = %2281, %2279
  %2285 = extractelement <16 x i1> %2253, i32 6
  br i1 %2285, label %2286, label %2289

2286:                                             ; preds = %2284
  %2287 = extractelement <16 x i64> %2254, i32 6
  %2288 = getelementptr inbounds i8, i8* %0, i64 %2287
  store i8 32, i8* %2288, align 1
  br label %2289

2289:                                             ; preds = %2286, %2284
  %2290 = extractelement <16 x i1> %2253, i32 7
  br i1 %2290, label %2291, label %2294

2291:                                             ; preds = %2289
  %2292 = extractelement <16 x i64> %2254, i32 7
  %2293 = getelementptr inbounds i8, i8* %0, i64 %2292
  store i8 32, i8* %2293, align 1
  br label %2294

2294:                                             ; preds = %2291, %2289
  %2295 = extractelement <16 x i1> %2253, i32 8
  br i1 %2295, label %2296, label %2299

2296:                                             ; preds = %2294
  %2297 = extractelement <16 x i64> %2254, i32 8
  %2298 = getelementptr inbounds i8, i8* %0, i64 %2297
  store i8 32, i8* %2298, align 1
  br label %2299

2299:                                             ; preds = %2296, %2294
  %2300 = extractelement <16 x i1> %2253, i32 9
  br i1 %2300, label %2301, label %2304

2301:                                             ; preds = %2299
  %2302 = extractelement <16 x i64> %2254, i32 9
  %2303 = getelementptr inbounds i8, i8* %0, i64 %2302
  store i8 32, i8* %2303, align 1
  br label %2304

2304:                                             ; preds = %2301, %2299
  %2305 = extractelement <16 x i1> %2253, i32 10
  br i1 %2305, label %2306, label %2309

2306:                                             ; preds = %2304
  %2307 = extractelement <16 x i64> %2254, i32 10
  %2308 = getelementptr inbounds i8, i8* %0, i64 %2307
  store i8 32, i8* %2308, align 1
  br label %2309

2309:                                             ; preds = %2306, %2304
  %2310 = extractelement <16 x i1> %2253, i32 11
  br i1 %2310, label %2311, label %2314

2311:                                             ; preds = %2309
  %2312 = extractelement <16 x i64> %2254, i32 11
  %2313 = getelementptr inbounds i8, i8* %0, i64 %2312
  store i8 32, i8* %2313, align 1
  br label %2314

2314:                                             ; preds = %2311, %2309
  %2315 = extractelement <16 x i1> %2253, i32 12
  br i1 %2315, label %2316, label %2319

2316:                                             ; preds = %2314
  %2317 = extractelement <16 x i64> %2254, i32 12
  %2318 = getelementptr inbounds i8, i8* %0, i64 %2317
  store i8 32, i8* %2318, align 1
  br label %2319

2319:                                             ; preds = %2316, %2314
  %2320 = extractelement <16 x i1> %2253, i32 13
  br i1 %2320, label %2321, label %2324

2321:                                             ; preds = %2319
  %2322 = extractelement <16 x i64> %2254, i32 13
  %2323 = getelementptr inbounds i8, i8* %0, i64 %2322
  store i8 32, i8* %2323, align 1
  br label %2324

2324:                                             ; preds = %2321, %2319
  %2325 = extractelement <16 x i1> %2253, i32 14
  br i1 %2325, label %2326, label %2329

2326:                                             ; preds = %2324
  %2327 = extractelement <16 x i64> %2254, i32 14
  %2328 = getelementptr inbounds i8, i8* %0, i64 %2327
  store i8 32, i8* %2328, align 1
  br label %2329

2329:                                             ; preds = %2326, %2324
  %2330 = extractelement <16 x i1> %2253, i32 15
  br i1 %2330, label %2331, label %2334

2331:                                             ; preds = %2329
  %2332 = extractelement <16 x i64> %2254, i32 15
  %2333 = getelementptr inbounds i8, i8* %0, i64 %2332
  store i8 32, i8* %2333, align 1
  br label %2334

2334:                                             ; preds = %2331, %2329
  %2335 = add i32 %2251, 16
  %2336 = add <16 x i32> %2252, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %2337 = icmp eq i32 %2335, %106
  br i1 %2337, label %2338, label %2250, !llvm.loop !28

2338:                                             ; preds = %2334
  br i1 %109, label %2353, label %2339

2339:                                             ; preds = %2338, %2244
  %2340 = phi i32 [ %2224, %2244 ], [ %2246, %2338 ]
  %2341 = phi i32 [ 0, %2244 ], [ %106, %2338 ]
  br label %2342

2342:                                             ; preds = %2339, %2349
  %2343 = phi i32 [ %2350, %2349 ], [ %2340, %2339 ]
  %2344 = phi i32 [ %2351, %2349 ], [ %2341, %2339 ]
  %2345 = icmp slt i32 %2343, %1
  br i1 %2345, label %2346, label %2349

2346:                                             ; preds = %2342
  %2347 = sext i32 %2343 to i64
  %2348 = getelementptr inbounds i8, i8* %0, i64 %2347
  store i8 32, i8* %2348, align 1
  br label %2349

2349:                                             ; preds = %2346, %2342
  %2350 = add nsw i32 %2343, 1
  %2351 = add nuw nsw i32 %2344, 1
  %2352 = icmp slt i32 %2351, %2
  br i1 %2352, label %2342, label %2353, !llvm.loop !29

2353:                                             ; preds = %2349, %2338
  %2354 = phi i32 [ %2246, %2338 ], [ %2350, %2349 ]
  store i32 %2354, i32* %8, align 4
  br label %2355

2355:                                             ; preds = %2353, %2243, %2240, %2235, %2226
  %2356 = phi i32 [ %2224, %2240 ], [ %2224, %2235 ], [ %2224, %2243 ], [ %2224, %2226 ], [ %2354, %2353 ]
  %2357 = icmp slt i32 %2356, %1
  br i1 %2357, label %2358, label %2361

2358:                                             ; preds = %2355
  %2359 = sext i32 %2356 to i64
  %2360 = getelementptr inbounds i8, i8* %0, i64 %2359
  store i8 %278, i8* %2360, align 1
  br label %2361

2361:                                             ; preds = %2358, %2355
  %2362 = icmp eq i8 %278, 0
  br i1 %2362, label %2366, label %2363

2363:                                             ; preds = %2361
  %2364 = add nsw i32 %2356, 1
  store i32 %2364, i32* %8, align 4
  br label %2366

2365:                                             ; preds = %2673
  store i32 %2674, i32* %8, align 4
  br label %2366

2366:                                             ; preds = %597, %2365, %2627, %2655, %2663, %2363, %2361, %435, %433, %2221, %925, %794, %626
  %2367 = phi i32 [ %934, %2221 ], [ %274, %925 ], [ %275, %794 ], [ %275, %626 ], [ %275, %433 ], [ %275, %435 ], [ %275, %2361 ], [ %275, %2363 ], [ %275, %2663 ], [ %275, %2655 ], [ %275, %2627 ], [ %275, %2365 ], [ %275, %597 ]
  %2368 = phi i64 [ %1952, %2221 ], [ %112, %925 ], [ %112, %794 ], [ %112, %626 ], [ %112, %433 ], [ %112, %435 ], [ %112, %2361 ], [ %112, %2363 ], [ %112, %2663 ], [ %112, %2655 ], [ %112, %2627 ], [ %729, %2365 ], [ %112, %597 ]
  br label %110

2369:                                             ; preds = %261
  %2370 = icmp ne i32 %256, 0
  %2371 = xor i1 %10, true
  %2372 = or i1 %2370, %2371
  br i1 %2372, label %2484, label %2373

2373:                                             ; preds = %2369
  %2374 = icmp ult i32 %2, 16
  br i1 %2374, label %2469, label %2375

2375:                                             ; preds = %2373
  %2376 = and i32 %2, -16
  %2377 = insertelement <16 x i32> undef, i32 %1, i32 0
  %2378 = shufflevector <16 x i32> %2377, <16 x i32> undef, <16 x i32> zeroinitializer
  br label %2379

2379:                                             ; preds = %2463, %2375
  %2380 = phi i32 [ 0, %2375 ], [ %2464, %2463 ]
  %2381 = phi <16 x i32> [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>, %2375 ], [ %2465, %2463 ]
  %2382 = icmp slt <16 x i32> %2381, %2378
  %2383 = zext <16 x i32> %2381 to <16 x i64>
  %2384 = extractelement <16 x i1> %2382, i32 0
  br i1 %2384, label %2385, label %2388

2385:                                             ; preds = %2379
  %2386 = extractelement <16 x i64> %2383, i32 0
  %2387 = getelementptr inbounds i8, i8* %0, i64 %2386
  store i8 32, i8* %2387, align 1
  br label %2388

2388:                                             ; preds = %2385, %2379
  %2389 = extractelement <16 x i1> %2382, i32 1
  br i1 %2389, label %2390, label %2393

2390:                                             ; preds = %2388
  %2391 = extractelement <16 x i64> %2383, i32 1
  %2392 = getelementptr inbounds i8, i8* %0, i64 %2391
  store i8 32, i8* %2392, align 1
  br label %2393

2393:                                             ; preds = %2390, %2388
  %2394 = extractelement <16 x i1> %2382, i32 2
  br i1 %2394, label %2395, label %2398

2395:                                             ; preds = %2393
  %2396 = extractelement <16 x i64> %2383, i32 2
  %2397 = getelementptr inbounds i8, i8* %0, i64 %2396
  store i8 32, i8* %2397, align 1
  br label %2398

2398:                                             ; preds = %2395, %2393
  %2399 = extractelement <16 x i1> %2382, i32 3
  br i1 %2399, label %2400, label %2403

2400:                                             ; preds = %2398
  %2401 = extractelement <16 x i64> %2383, i32 3
  %2402 = getelementptr inbounds i8, i8* %0, i64 %2401
  store i8 32, i8* %2402, align 1
  br label %2403

2403:                                             ; preds = %2400, %2398
  %2404 = extractelement <16 x i1> %2382, i32 4
  br i1 %2404, label %2405, label %2408

2405:                                             ; preds = %2403
  %2406 = extractelement <16 x i64> %2383, i32 4
  %2407 = getelementptr inbounds i8, i8* %0, i64 %2406
  store i8 32, i8* %2407, align 1
  br label %2408

2408:                                             ; preds = %2405, %2403
  %2409 = extractelement <16 x i1> %2382, i32 5
  br i1 %2409, label %2410, label %2413

2410:                                             ; preds = %2408
  %2411 = extractelement <16 x i64> %2383, i32 5
  %2412 = getelementptr inbounds i8, i8* %0, i64 %2411
  store i8 32, i8* %2412, align 1
  br label %2413

2413:                                             ; preds = %2410, %2408
  %2414 = extractelement <16 x i1> %2382, i32 6
  br i1 %2414, label %2415, label %2418

2415:                                             ; preds = %2413
  %2416 = extractelement <16 x i64> %2383, i32 6
  %2417 = getelementptr inbounds i8, i8* %0, i64 %2416
  store i8 32, i8* %2417, align 1
  br label %2418

2418:                                             ; preds = %2415, %2413
  %2419 = extractelement <16 x i1> %2382, i32 7
  br i1 %2419, label %2420, label %2423

2420:                                             ; preds = %2418
  %2421 = extractelement <16 x i64> %2383, i32 7
  %2422 = getelementptr inbounds i8, i8* %0, i64 %2421
  store i8 32, i8* %2422, align 1
  br label %2423

2423:                                             ; preds = %2420, %2418
  %2424 = extractelement <16 x i1> %2382, i32 8
  br i1 %2424, label %2425, label %2428

2425:                                             ; preds = %2423
  %2426 = extractelement <16 x i64> %2383, i32 8
  %2427 = getelementptr inbounds i8, i8* %0, i64 %2426
  store i8 32, i8* %2427, align 1
  br label %2428

2428:                                             ; preds = %2425, %2423
  %2429 = extractelement <16 x i1> %2382, i32 9
  br i1 %2429, label %2430, label %2433

2430:                                             ; preds = %2428
  %2431 = extractelement <16 x i64> %2383, i32 9
  %2432 = getelementptr inbounds i8, i8* %0, i64 %2431
  store i8 32, i8* %2432, align 1
  br label %2433

2433:                                             ; preds = %2430, %2428
  %2434 = extractelement <16 x i1> %2382, i32 10
  br i1 %2434, label %2435, label %2438

2435:                                             ; preds = %2433
  %2436 = extractelement <16 x i64> %2383, i32 10
  %2437 = getelementptr inbounds i8, i8* %0, i64 %2436
  store i8 32, i8* %2437, align 1
  br label %2438

2438:                                             ; preds = %2435, %2433
  %2439 = extractelement <16 x i1> %2382, i32 11
  br i1 %2439, label %2440, label %2443

2440:                                             ; preds = %2438
  %2441 = extractelement <16 x i64> %2383, i32 11
  %2442 = getelementptr inbounds i8, i8* %0, i64 %2441
  store i8 32, i8* %2442, align 1
  br label %2443

2443:                                             ; preds = %2440, %2438
  %2444 = extractelement <16 x i1> %2382, i32 12
  br i1 %2444, label %2445, label %2448

2445:                                             ; preds = %2443
  %2446 = extractelement <16 x i64> %2383, i32 12
  %2447 = getelementptr inbounds i8, i8* %0, i64 %2446
  store i8 32, i8* %2447, align 1
  br label %2448

2448:                                             ; preds = %2445, %2443
  %2449 = extractelement <16 x i1> %2382, i32 13
  br i1 %2449, label %2450, label %2453

2450:                                             ; preds = %2448
  %2451 = extractelement <16 x i64> %2383, i32 13
  %2452 = getelementptr inbounds i8, i8* %0, i64 %2451
  store i8 32, i8* %2452, align 1
  br label %2453

2453:                                             ; preds = %2450, %2448
  %2454 = extractelement <16 x i1> %2382, i32 14
  br i1 %2454, label %2455, label %2458

2455:                                             ; preds = %2453
  %2456 = extractelement <16 x i64> %2383, i32 14
  %2457 = getelementptr inbounds i8, i8* %0, i64 %2456
  store i8 32, i8* %2457, align 1
  br label %2458

2458:                                             ; preds = %2455, %2453
  %2459 = extractelement <16 x i1> %2382, i32 15
  br i1 %2459, label %2460, label %2463

2460:                                             ; preds = %2458
  %2461 = extractelement <16 x i64> %2383, i32 15
  %2462 = getelementptr inbounds i8, i8* %0, i64 %2461
  store i8 32, i8* %2462, align 1
  br label %2463

2463:                                             ; preds = %2460, %2458
  %2464 = add i32 %2380, 16
  %2465 = add <16 x i32> %2381, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %2466 = icmp eq i32 %2464, %2376
  br i1 %2466, label %2467, label %2379, !llvm.loop !30

2467:                                             ; preds = %2463
  %2468 = icmp eq i32 %2376, %2
  br i1 %2468, label %2482, label %2469

2469:                                             ; preds = %2467, %2373
  %2470 = phi i32 [ 0, %2373 ], [ %2376, %2467 ]
  br label %2471

2471:                                             ; preds = %2469, %2478
  %2472 = phi i32 [ %2479, %2478 ], [ %2470, %2469 ]
  %2473 = phi i32 [ %2480, %2478 ], [ %2470, %2469 ]
  %2474 = icmp slt i32 %2472, %1
  br i1 %2474, label %2475, label %2478

2475:                                             ; preds = %2471
  %2476 = zext i32 %2472 to i64
  %2477 = getelementptr inbounds i8, i8* %0, i64 %2476
  store i8 32, i8* %2477, align 1
  br label %2478

2478:                                             ; preds = %2475, %2471
  %2479 = add nuw nsw i32 %2472, 1
  %2480 = add nuw nsw i32 %2473, 1
  %2481 = icmp eq i32 %2480, %2
  br i1 %2481, label %2482, label %2471, !llvm.loop !31

2482:                                             ; preds = %2478, %2467
  %2483 = phi i32 [ %2376, %2467 ], [ %2479, %2478 ]
  store i32 %2483, i32* %8, align 4
  br label %2484

2484:                                             ; preds = %2369, %2482
  %2485 = phi i32 [ %256, %2369 ], [ %2483, %2482 ]
  %2486 = icmp slt i32 %2485, %1
  br i1 %2486, label %2487, label %2490

2487:                                             ; preds = %2484
  %2488 = sext i32 %2485 to i64
  %2489 = getelementptr inbounds i8, i8* %0, i64 %2488
  store i8 0, i8* %2489, align 1
  br label %2490

2490:                                             ; preds = %2484, %2487
  %2491 = add nsw i32 %2485, 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #3
  ret i32 %2491

2492:                                             ; preds = %2092
  %2493 = lshr i64 %2083, 24
  %2494 = and i64 %2493, 15
  %2495 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %2494
  %2496 = load i8, i8* %2495, align 1
  %2497 = sext i32 %2093 to i64
  %2498 = getelementptr inbounds i8, i8* %0, i64 %2497
  store i8 %2496, i8* %2498, align 1
  br label %2499

2499:                                             ; preds = %2492, %2092
  %2500 = add nsw i32 %2076, 3
  %2501 = icmp slt i32 %2500, %1
  br i1 %2501, label %2502, label %2509

2502:                                             ; preds = %2499
  %2503 = lshr i64 %2083, 20
  %2504 = and i64 %2503, 15
  %2505 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %2504
  %2506 = load i8, i8* %2505, align 1
  %2507 = sext i32 %2500 to i64
  %2508 = getelementptr inbounds i8, i8* %0, i64 %2507
  store i8 %2506, i8* %2508, align 1
  br label %2509

2509:                                             ; preds = %2502, %2499
  %2510 = add nsw i32 %2076, 4
  %2511 = icmp slt i32 %2510, %1
  br i1 %2511, label %2512, label %2519

2512:                                             ; preds = %2509
  %2513 = lshr i64 %2083, 16
  %2514 = and i64 %2513, 15
  %2515 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %2514
  %2516 = load i8, i8* %2515, align 1
  %2517 = sext i32 %2510 to i64
  %2518 = getelementptr inbounds i8, i8* %0, i64 %2517
  store i8 %2516, i8* %2518, align 1
  br label %2519

2519:                                             ; preds = %2512, %2509
  %2520 = add nsw i32 %2076, 5
  %2521 = icmp slt i32 %2520, %1
  br i1 %2521, label %2522, label %2529

2522:                                             ; preds = %2519
  %2523 = lshr i64 %2083, 12
  %2524 = and i64 %2523, 15
  %2525 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %2524
  %2526 = load i8, i8* %2525, align 1
  %2527 = sext i32 %2520 to i64
  %2528 = getelementptr inbounds i8, i8* %0, i64 %2527
  store i8 %2526, i8* %2528, align 1
  br label %2529

2529:                                             ; preds = %2522, %2519
  %2530 = add nsw i32 %2076, 6
  %2531 = icmp slt i32 %2530, %1
  br i1 %2531, label %2532, label %2539

2532:                                             ; preds = %2529
  %2533 = lshr i64 %2083, 8
  %2534 = and i64 %2533, 15
  %2535 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %2534
  %2536 = load i8, i8* %2535, align 1
  %2537 = sext i32 %2530 to i64
  %2538 = getelementptr inbounds i8, i8* %0, i64 %2537
  store i8 %2536, i8* %2538, align 1
  br label %2539

2539:                                             ; preds = %2532, %2529
  %2540 = add nsw i32 %2076, 7
  %2541 = icmp slt i32 %2540, %1
  br i1 %2541, label %2542, label %2549

2542:                                             ; preds = %2539
  %2543 = lshr i64 %2083, 4
  %2544 = and i64 %2543, 15
  %2545 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %2544
  %2546 = load i8, i8* %2545, align 1
  %2547 = sext i32 %2540 to i64
  %2548 = getelementptr inbounds i8, i8* %0, i64 %2547
  store i8 %2546, i8* %2548, align 1
  br label %2549

2549:                                             ; preds = %2542, %2539
  %2550 = add nsw i32 %2076, 8
  %2551 = icmp slt i32 %2550, %1
  br i1 %2551, label %2552, label %2558

2552:                                             ; preds = %2549
  %2553 = and i64 %2083, 15
  %2554 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %2553
  %2555 = load i8, i8* %2554, align 1
  %2556 = sext i32 %2550 to i64
  %2557 = getelementptr inbounds i8, i8* %0, i64 %2556
  store i8 %2555, i8* %2557, align 1
  br label %2558

2558:                                             ; preds = %2552, %2549
  %2559 = add nsw i32 %2076, 9
  store i32 %2559, i32* %8, align 4
  %2560 = icmp eq i32 %2559, 0
  br i1 %2560, label %2103, label %2095

2561:                                             ; preds = %712
  %2562 = lshr i64 %702, 24
  %2563 = and i64 %2562, 15
  %2564 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %2563
  %2565 = load i8, i8* %2564, align 1
  %2566 = sext i32 %713 to i64
  %2567 = getelementptr inbounds i8, i8* %0, i64 %2566
  store i8 %2565, i8* %2567, align 1
  br label %2568

2568:                                             ; preds = %2561, %712
  %2569 = add nsw i32 %703, 2
  %2570 = icmp slt i32 %2569, %1
  br i1 %2570, label %2571, label %2578

2571:                                             ; preds = %2568
  %2572 = lshr i64 %702, 20
  %2573 = and i64 %2572, 15
  %2574 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %2573
  %2575 = load i8, i8* %2574, align 1
  %2576 = sext i32 %2569 to i64
  %2577 = getelementptr inbounds i8, i8* %0, i64 %2576
  store i8 %2575, i8* %2577, align 1
  br label %2578

2578:                                             ; preds = %2571, %2568
  %2579 = add nsw i32 %703, 3
  %2580 = icmp slt i32 %2579, %1
  br i1 %2580, label %2581, label %2588

2581:                                             ; preds = %2578
  %2582 = lshr i64 %702, 16
  %2583 = and i64 %2582, 15
  %2584 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %2583
  %2585 = load i8, i8* %2584, align 1
  %2586 = sext i32 %2579 to i64
  %2587 = getelementptr inbounds i8, i8* %0, i64 %2586
  store i8 %2585, i8* %2587, align 1
  br label %2588

2588:                                             ; preds = %2581, %2578
  %2589 = add nsw i32 %703, 4
  %2590 = icmp slt i32 %2589, %1
  br i1 %2590, label %2591, label %2598

2591:                                             ; preds = %2588
  %2592 = lshr i64 %702, 12
  %2593 = and i64 %2592, 15
  %2594 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %2593
  %2595 = load i8, i8* %2594, align 1
  %2596 = sext i32 %2589 to i64
  %2597 = getelementptr inbounds i8, i8* %0, i64 %2596
  store i8 %2595, i8* %2597, align 1
  br label %2598

2598:                                             ; preds = %2591, %2588
  %2599 = add nsw i32 %703, 5
  %2600 = icmp slt i32 %2599, %1
  br i1 %2600, label %2601, label %2608

2601:                                             ; preds = %2598
  %2602 = lshr i64 %702, 8
  %2603 = and i64 %2602, 15
  %2604 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %2603
  %2605 = load i8, i8* %2604, align 1
  %2606 = sext i32 %2599 to i64
  %2607 = getelementptr inbounds i8, i8* %0, i64 %2606
  store i8 %2605, i8* %2607, align 1
  br label %2608

2608:                                             ; preds = %2601, %2598
  %2609 = add nsw i32 %703, 6
  %2610 = icmp slt i32 %2609, %1
  br i1 %2610, label %2611, label %2618

2611:                                             ; preds = %2608
  %2612 = lshr i64 %702, 4
  %2613 = and i64 %2612, 15
  %2614 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %2613
  %2615 = load i8, i8* %2614, align 1
  %2616 = sext i32 %2609 to i64
  %2617 = getelementptr inbounds i8, i8* %0, i64 %2616
  store i8 %2615, i8* %2617, align 1
  br label %2618

2618:                                             ; preds = %2611, %2608
  %2619 = add nsw i32 %703, 7
  %2620 = icmp slt i32 %2619, %1
  br i1 %2620, label %2621, label %2627

2621:                                             ; preds = %2618
  %2622 = and i64 %702, 15
  %2623 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %2622
  %2624 = load i8, i8* %2623, align 1
  %2625 = sext i32 %2619 to i64
  %2626 = getelementptr inbounds i8, i8* %0, i64 %2625
  store i8 %2624, i8* %2626, align 1
  br label %2627

2627:                                             ; preds = %2621, %2618
  %2628 = add nsw i32 %703, 8
  store i32 %2628, i32* %8, align 4
  br label %2366

2629:                                             ; preds = %684
  %2630 = lshr i64 %674, 8
  %2631 = and i64 %2630, 15
  %2632 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %2631
  %2633 = load i8, i8* %2632, align 1
  %2634 = sext i32 %685 to i64
  %2635 = getelementptr inbounds i8, i8* %0, i64 %2634
  store i8 %2633, i8* %2635, align 1
  br label %2636

2636:                                             ; preds = %2629, %684
  %2637 = add nsw i32 %675, 2
  %2638 = icmp slt i32 %2637, %1
  br i1 %2638, label %2639, label %2646

2639:                                             ; preds = %2636
  %2640 = lshr i64 %674, 4
  %2641 = and i64 %2640, 15
  %2642 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %2641
  %2643 = load i8, i8* %2642, align 1
  %2644 = sext i32 %2637 to i64
  %2645 = getelementptr inbounds i8, i8* %0, i64 %2644
  store i8 %2643, i8* %2645, align 1
  br label %2646

2646:                                             ; preds = %2639, %2636
  %2647 = add nsw i32 %675, 3
  %2648 = icmp slt i32 %2647, %1
  br i1 %2648, label %2649, label %2655

2649:                                             ; preds = %2646
  %2650 = and i64 %674, 15
  %2651 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %2650
  %2652 = load i8, i8* %2651, align 1
  %2653 = sext i32 %2647 to i64
  %2654 = getelementptr inbounds i8, i8* %0, i64 %2653
  store i8 %2652, i8* %2654, align 1
  br label %2655

2655:                                             ; preds = %2649, %2646
  %2656 = add nsw i32 %675, 4
  store i32 %2656, i32* %8, align 4
  br label %2366

2657:                                             ; preds = %656
  %2658 = and i64 %646, 15
  %2659 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %2658
  %2660 = load i8, i8* %2659, align 1
  %2661 = sext i32 %657 to i64
  %2662 = getelementptr inbounds i8, i8* %0, i64 %2661
  store i8 %2660, i8* %2662, align 1
  br label %2663

2663:                                             ; preds = %2657, %656
  %2664 = add nsw i32 %647, 2
  store i32 %2664, i32* %8, align 4
  br label %2366

2665:                                             ; preds = %742
  %2666 = add nsw i64 %732, -4
  %2667 = ashr i64 %729, %2666
  %2668 = and i64 %2667, 15
  %2669 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %2668
  %2670 = load i8, i8* %2669, align 1
  %2671 = sext i32 %743 to i64
  %2672 = getelementptr inbounds i8, i8* %0, i64 %2671
  store i8 %2670, i8* %2672, align 1
  br label %2673

2673:                                             ; preds = %2665, %742
  %2674 = add nsw i32 %733, 2
  %2675 = add nsw i64 %732, -8
  %2676 = icmp sgt i64 %2675, -1
  br i1 %2676, label %731, label %2365
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @_ZL10outputCharcPcPiii(i8 signext, i8* nocapture, i32* nocapture, i32, i32) unnamed_addr #4 {
  %6 = load i32, i32* %2, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %27, label %8

8:                                                ; preds = %5
  switch i8 %0, label %9 [
    i8 10, label %23
    i8 0, label %43
  ]

9:                                                ; preds = %8
  %10 = icmp slt i32 %6, %3
  br i1 %10, label %11, label %17

11:                                               ; preds = %9
  %12 = add nsw i32 %6, -1
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i8, i8* %1, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 10
  br i1 %16, label %27, label %17

17:                                               ; preds = %11, %9
  %18 = icmp eq i8 %0, 10
  %19 = icmp sge i32 %6, %3
  %20 = and i1 %19, %18
  %21 = icmp sgt i32 %4, 0
  %22 = and i1 %20, %21
  br i1 %22, label %29, label %43

23:                                               ; preds = %8
  %24 = icmp sge i32 %6, %3
  %25 = icmp sgt i32 %4, 0
  %26 = and i1 %24, %25
  br i1 %26, label %29, label %43

27:                                               ; preds = %11, %5
  %28 = icmp sgt i32 %4, 0
  br i1 %28, label %29, label %43

29:                                               ; preds = %27, %17, %23
  br label %30

30:                                               ; preds = %29, %38
  %31 = phi i32 [ %40, %38 ], [ %6, %29 ]
  %32 = phi i32 [ %41, %38 ], [ 0, %29 ]
  %33 = icmp slt i32 %31, %3
  br i1 %33, label %34, label %38

34:                                               ; preds = %30
  %35 = sext i32 %31 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  store i8 32, i8* %36, align 1
  %37 = load i32, i32* %2, align 4
  br label %38

38:                                               ; preds = %34, %30
  %39 = phi i32 [ %37, %34 ], [ %31, %30 ]
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %2, align 4
  %41 = add nuw nsw i32 %32, 1
  %42 = icmp slt i32 %41, %4
  br i1 %42, label %30, label %43

43:                                               ; preds = %38, %23, %17, %27, %8
  %44 = phi i32 [ %6, %23 ], [ %6, %17 ], [ %6, %27 ], [ %6, %8 ], [ %40, %38 ]
  %45 = icmp slt i32 %44, %3
  br i1 %45, label %46, label %49

46:                                               ; preds = %43
  %47 = sext i32 %44 to i64
  %48 = getelementptr inbounds i8, i8* %1, i64 %47
  store i8 %0, i8* %48, align 1
  br label %49

49:                                               ; preds = %46, %43
  %50 = icmp eq i8 %0, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %49
  %52 = load i32, i32* %2, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %2, align 4
  br label %54

54:                                               ; preds = %49, %51
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @_ZL12outputStringPKcPcPiii(i8* readonly, i8* nocapture, i32* nocapture, i32, i32) unnamed_addr #4 {
  %6 = icmp eq i8* %0, null
  %7 = select i1 %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i8* %0
  %8 = load i32, i32* %2, align 4
  %9 = icmp sgt i32 %4, 0
  br label %10

10:                                               ; preds = %57, %5
  %11 = phi i64 [ %13, %57 ], [ 0, %5 ]
  %12 = phi i32 [ %59, %57 ], [ %8, %5 ]
  %13 = add nuw i64 %11, 1
  %14 = getelementptr inbounds i8, i8* %7, i64 %11
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i32 %12, 0
  br i1 %16, label %34, label %17

17:                                               ; preds = %10
  switch i8 %15, label %18 [
    i8 10, label %31
    i8 0, label %49
  ]

18:                                               ; preds = %17
  %19 = icmp slt i32 %12, %3
  br i1 %19, label %20, label %26

20:                                               ; preds = %18
  %21 = add nsw i32 %12, -1
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i8, i8* %1, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 10
  br i1 %25, label %34, label %26

26:                                               ; preds = %20, %18
  %27 = icmp eq i8 %15, 10
  %28 = icmp sge i32 %12, %3
  %29 = and i1 %28, %27
  %30 = and i1 %9, %29
  br i1 %30, label %35, label %49

31:                                               ; preds = %17
  %32 = icmp sge i32 %12, %3
  %33 = and i1 %9, %32
  br i1 %33, label %35, label %49

34:                                               ; preds = %20, %10
  br i1 %9, label %35, label %49

35:                                               ; preds = %34, %31, %26
  br label %36

36:                                               ; preds = %35, %44
  %37 = phi i32 [ %46, %44 ], [ %12, %35 ]
  %38 = phi i32 [ %47, %44 ], [ 0, %35 ]
  %39 = icmp slt i32 %37, %3
  br i1 %39, label %40, label %44

40:                                               ; preds = %36
  %41 = sext i32 %37 to i64
  %42 = getelementptr inbounds i8, i8* %1, i64 %41
  store i8 32, i8* %42, align 1
  %43 = load i32, i32* %2, align 4
  br label %44

44:                                               ; preds = %40, %36
  %45 = phi i32 [ %43, %40 ], [ %37, %36 ]
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %2, align 4
  %47 = add nuw nsw i32 %38, 1
  %48 = icmp slt i32 %47, %4
  br i1 %48, label %36, label %49

49:                                               ; preds = %44, %34, %31, %26, %17
  %50 = phi i32 [ %12, %31 ], [ %12, %26 ], [ %12, %34 ], [ %12, %17 ], [ %46, %44 ]
  %51 = icmp slt i32 %50, %3
  br i1 %51, label %52, label %55

52:                                               ; preds = %49
  %53 = sext i32 %50 to i64
  %54 = getelementptr inbounds i8, i8* %1, i64 %53
  store i8 %15, i8* %54, align 1
  br label %55

55:                                               ; preds = %52, %49
  %56 = icmp eq i8 %15, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %55
  %58 = load i32, i32* %2, align 4
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %2, align 4
  br label %10

60:                                               ; preds = %55
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @_ZL13outputUStringPKDsiPcPiii(i16* readonly, i32, i8* nocapture, i32* nocapture, i32, i32) unnamed_addr #4 {
  %7 = icmp eq i16* %0, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %6
  %9 = icmp sgt i32 %1, 0
  %10 = icmp eq i32 %1, -1
  %11 = or i1 %10, %9
  br i1 %11, label %17, label %35

12:                                               ; preds = %6
  tail call fastcc void @_ZL12outputStringPKcPcPiii(i8* null, i8* %2, i32* %3, i32 %4, i32 %5)
  br label %35

13:                                               ; preds = %67
  %14 = trunc i64 %72 to i32
  %15 = icmp slt i32 %14, %1
  %16 = or i1 %10, %15
  br i1 %16, label %17, label %35

17:                                               ; preds = %8, %13
  %18 = phi i64 [ %72, %13 ], [ 0, %8 ]
  %19 = getelementptr inbounds i16, i16* %0, i64 %18
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i64
  %22 = load i32, i32* %3, align 4
  %23 = icmp slt i32 %22, %4
  br i1 %23, label %24, label %31

24:                                               ; preds = %17
  %25 = lshr i64 %21, 12
  %26 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = sext i32 %22 to i64
  %29 = getelementptr inbounds i8, i8* %2, i64 %28
  store i8 %27, i8* %29, align 1
  %30 = load i32, i32* %3, align 4
  br label %31

31:                                               ; preds = %24, %17
  %32 = phi i32 [ %22, %17 ], [ %30, %24 ]
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %3, align 4
  %34 = icmp slt i32 %33, %4
  br i1 %34, label %36, label %44

35:                                               ; preds = %67, %13, %8, %12
  ret void

36:                                               ; preds = %31
  %37 = lshr i64 %21, 8
  %38 = and i64 %37, 15
  %39 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = sext i32 %33 to i64
  %42 = getelementptr inbounds i8, i8* %2, i64 %41
  store i8 %40, i8* %42, align 1
  %43 = load i32, i32* %3, align 4
  br label %44

44:                                               ; preds = %36, %31
  %45 = phi i32 [ %33, %31 ], [ %43, %36 ]
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %3, align 4
  %47 = icmp slt i32 %46, %4
  br i1 %47, label %48, label %56

48:                                               ; preds = %44
  %49 = lshr i64 %21, 4
  %50 = and i64 %49, 15
  %51 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = sext i32 %46 to i64
  %54 = getelementptr inbounds i8, i8* %2, i64 %53
  store i8 %52, i8* %54, align 1
  %55 = load i32, i32* %3, align 4
  br label %56

56:                                               ; preds = %48, %44
  %57 = phi i32 [ %46, %44 ], [ %55, %48 ]
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %3, align 4
  %59 = icmp slt i32 %58, %4
  br i1 %59, label %60, label %67

60:                                               ; preds = %56
  %61 = and i64 %21, 15
  %62 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZL14outputHexBytesliPcPiiE9gHexChars, i64 0, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = sext i32 %58 to i64
  %65 = getelementptr inbounds i8, i8* %2, i64 %64
  store i8 %63, i8* %65, align 1
  %66 = load i32, i32* %3, align 4
  br label %67

67:                                               ; preds = %60, %56
  %68 = phi i32 [ %58, %56 ], [ %66, %60 ]
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %3, align 4
  tail call fastcc void @_ZL10outputCharcPcPiii(i8 signext 32, i8* %2, i32* %3, i32 %4, i32 %5)
  %70 = icmp eq i16 %20, 0
  %71 = and i1 %10, %70
  %72 = add nuw i64 %18, 1
  br i1 %71, label %35, label %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @utrace_format_69(i8*, i32, i32, i8* nocapture readonly, ...) local_unnamed_addr #0 {
  %5 = alloca [1 x %struct.__va_list_tag], align 16
  %6 = bitcast [1 x %struct.__va_list_tag]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #3
  %7 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0
  %8 = bitcast [1 x %struct.__va_list_tag]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %6)
  %9 = call i32 @utrace_vformat_69(i8* %0, i32 %1, i32 %2, i8* %3, %struct.__va_list_tag* nonnull %7)
  call void @llvm.va_end(i8* nonnull %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #3
  ret i32 %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @utrace_setFunctions_69(i8*, void (i8*, i32)*, void (i8*, i32, i8*, %struct.__va_list_tag*)*, void (i8*, i32, i32, i8*, %struct.__va_list_tag*)*) local_unnamed_addr #5 {
  store void (i8*, i32)* %1, void (i8*, i32)** @_ZL15pTraceEntryFunc, align 8
  store void (i8*, i32, i8*, %struct.__va_list_tag*)* %2, void (i8*, i32, i8*, %struct.__va_list_tag*)** @_ZL14pTraceExitFunc, align 8
  store void (i8*, i32, i32, i8*, %struct.__va_list_tag*)* %3, void (i8*, i32, i32, i8*, %struct.__va_list_tag*)** @_ZL14pTraceDataFunc, align 8
  store i8* %0, i8** @_ZL13gTraceContext, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @utrace_getFunctions_69(i8** nocapture, void (i8*, i32)** nocapture, void (i8*, i32, i8*, %struct.__va_list_tag*)** nocapture, void (i8*, i32, i32, i8*, %struct.__va_list_tag*)** nocapture) local_unnamed_addr #4 {
  %5 = load i64, i64* bitcast (void (i8*, i32)** @_ZL15pTraceEntryFunc to i64*), align 8
  %6 = bitcast void (i8*, i32)** %1 to i64*
  store i64 %5, i64* %6, align 8
  %7 = load i64, i64* bitcast (void (i8*, i32, i8*, %struct.__va_list_tag*)** @_ZL14pTraceExitFunc to i64*), align 8
  %8 = bitcast void (i8*, i32, i8*, %struct.__va_list_tag*)** %2 to i64*
  store i64 %7, i64* %8, align 8
  %9 = load i64, i64* bitcast (void (i8*, i32, i32, i8*, %struct.__va_list_tag*)** @_ZL14pTraceDataFunc to i64*), align 8
  %10 = bitcast void (i8*, i32, i32, i8*, %struct.__va_list_tag*)** %3 to i64*
  store i64 %9, i64* %10, align 8
  %11 = load i64, i64* bitcast (i8** @_ZL13gTraceContext to i64*), align 8
  %12 = bitcast i8** %0 to i64*
  store i64 %11, i64* %12, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @utrace_setLevel_69(i32) local_unnamed_addr #5 {
  %2 = icmp sgt i32 %0, -1
  %3 = select i1 %2, i32 %0, i32 -1
  %4 = icmp slt i32 %3, 9
  %5 = select i1 %4, i32 %3, i32 9
  store i32 %5, i32* @_ZL12utrace_level, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @utrace_getLevel_69() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL12utrace_level, align 4
  ret i32 %1
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden signext i8 @utrace_cleanup_69() local_unnamed_addr #5 {
  store void (i8*, i32)* null, void (i8*, i32)** @_ZL15pTraceEntryFunc, align 8
  store void (i8*, i32, i8*, %struct.__va_list_tag*)* null, void (i8*, i32, i8*, %struct.__va_list_tag*)** @_ZL14pTraceExitFunc, align 8
  store void (i8*, i32, i32, i8*, %struct.__va_list_tag*)* null, void (i8*, i32, i32, i8*, %struct.__va_list_tag*)** @_ZL14pTraceDataFunc, align 8
  store i32 -1, i32* @_ZL12utrace_level, align 4
  store i8* null, i8** @_ZL13gTraceContext, align 8
  ret i8 1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @utrace_functionName_69(i32) local_unnamed_addr #7 {
  %2 = icmp ult i32 %0, 2
  br i1 %2, label %3, label %6

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [3 x i8*], [3 x i8*]* @_ZL8trFnName, i64 0, i64 %4
  br label %26

6:                                                ; preds = %1
  %7 = and i32 %0, -8
  %8 = icmp eq i32 %7, 4096
  br i1 %8, label %9, label %13

9:                                                ; preds = %6
  %10 = add nsw i32 %0, -4096
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [9 x i8*], [9 x i8*]* @_ZL11trConvNames, i64 0, i64 %11
  br label %26

13:                                               ; preds = %6
  %14 = add i32 %0, -8192
  %15 = icmp ult i32 %14, 9
  br i1 %15, label %16, label %19

16:                                               ; preds = %13
  %17 = sext i32 %14 to i64
  %18 = getelementptr inbounds [10 x i8*], [10 x i8*]* @_ZL11trCollNames, i64 0, i64 %17
  br label %26

19:                                               ; preds = %13
  %20 = and i32 %0, -4
  %21 = icmp eq i32 %20, 12288
  br i1 %21, label %22, label %29

22:                                               ; preds = %19
  %23 = add nsw i32 %0, -12288
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [5 x i8*], [5 x i8*]* @_ZL14trResDataNames, i64 0, i64 %24
  br label %26

26:                                               ; preds = %3, %9, %16, %22
  %27 = phi i8** [ %25, %22 ], [ %18, %16 ], [ %12, %9 ], [ %5, %3 ]
  %28 = load i8*, i8** %27, align 8
  br label %29

29:                                               ; preds = %26, %19
  %30 = phi i8* [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), %19 ], [ %28, %26 ]
  ret i8* %30
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !5, !3}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !5, !3}
!10 = distinct !{!10, !3}
!11 = distinct !{!11, !5, !3}
!12 = distinct !{!12, !3}
!13 = distinct !{!13, !5, !3}
!14 = distinct !{!14, !3}
!15 = distinct !{!15, !5, !3}
!16 = distinct !{!16, !3}
!17 = distinct !{!17, !5, !3}
!18 = distinct !{!18, !3}
!19 = distinct !{!19, !5, !3}
!20 = distinct !{!20, !3}
!21 = distinct !{!21, !5, !3}
!22 = distinct !{!22, !3}
!23 = distinct !{!23, !5, !3}
!24 = distinct !{!24, !3}
!25 = distinct !{!25, !5, !3}
!26 = distinct !{!26, !3}
!27 = distinct !{!27, !5, !3}
!28 = distinct !{!28, !3}
!29 = distinct !{!29, !5, !3}
!30 = distinct !{!30, !3}
!31 = distinct !{!31, !5, !3}
