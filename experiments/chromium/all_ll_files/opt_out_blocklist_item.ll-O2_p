; ModuleID = '../../components/blocklist/opt_out_blocklist/opt_out_blocklist_item.cc'
source_filename = "../../components/blocklist/opt_out_blocklist/opt_out_blocklist_item.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blocklist::OptOutBlocklistItem::OptOutRecord" = type <{ %"class.base::Time", i8, [7 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blocklist::OptOutBlocklistItem" = type <{ i64, i32, [4 x i8], %"class.base::TimeDelta", %"class.std::__1::priority_queue", %"class.absl::optional", i32, [4 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::priority_queue" = type <{ %"class.std::__1::vector", %"struct.std::__1::less", [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blocklist::OptOutBlocklistItem::OptOutRecord"*, %"class.blocklist::OptOutBlocklistItem::OptOutRecord"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* }
%"struct.std::__1::less" = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::Time" }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__114priority_queueIN9blocklist19OptOutBlocklistItem12OptOutRecordENS_6vectorIS3_NS_9allocatorIS3_EEEENS_4lessIS3_EEE7emplaceIJRN4base4TimeERbEEEvDpOT_ = comdat any

$_ZNSt3__111__sift_downIRNS_4lessIN9blocklist19OptOutBlocklistItem12OptOutRecordEEENS_11__wrap_iterIPS4_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeESA_ = comdat any

@_ZN9blocklist19OptOutBlocklistItem12OptOutRecordC1EN4base4TimeEb = hidden unnamed_addr alias void (%"class.blocklist::OptOutBlocklistItem::OptOutRecord"*, i64, i1), void (%"class.blocklist::OptOutBlocklistItem::OptOutRecord"*, i64, i1)* @_ZN9blocklist19OptOutBlocklistItem12OptOutRecordC2EN4base4TimeEb
@_ZN9blocklist19OptOutBlocklistItem12OptOutRecordD1Ev = hidden unnamed_addr alias void (%"class.blocklist::OptOutBlocklistItem::OptOutRecord"*), void (%"class.blocklist::OptOutBlocklistItem::OptOutRecord"*)* @_ZN9blocklist19OptOutBlocklistItem12OptOutRecordD2Ev
@_ZN9blocklist19OptOutBlocklistItem12OptOutRecordC1EOS1_ = hidden unnamed_addr alias void (%"class.blocklist::OptOutBlocklistItem::OptOutRecord"*, %"class.blocklist::OptOutBlocklistItem::OptOutRecord"*), void (%"class.blocklist::OptOutBlocklistItem::OptOutRecord"*, %"class.blocklist::OptOutBlocklistItem::OptOutRecord"*)* @_ZN9blocklist19OptOutBlocklistItem12OptOutRecordC2EOS1_
@_ZN9blocklist19OptOutBlocklistItemC1EmiN4base9TimeDeltaE = hidden unnamed_addr alias void (%"class.blocklist::OptOutBlocklistItem"*, i64, i32, i64), void (%"class.blocklist::OptOutBlocklistItem"*, i64, i32, i64)* @_ZN9blocklist19OptOutBlocklistItemC2EmiN4base9TimeDeltaE
@_ZN9blocklist19OptOutBlocklistItemD1Ev = hidden unnamed_addr alias void (%"class.blocklist::OptOutBlocklistItem"*), void (%"class.blocklist::OptOutBlocklistItem"*)* @_ZN9blocklist19OptOutBlocklistItemD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN9blocklist19OptOutBlocklistItem12OptOutRecordC2EN4base4TimeEb(%"class.blocklist::OptOutBlocklistItem::OptOutRecord"* nocapture, i64, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %0, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %0, i64 0, i32 1
  store i8 %4, i8* %6, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN9blocklist19OptOutBlocklistItem12OptOutRecordD2Ev(%"class.blocklist::OptOutBlocklistItem::OptOutRecord"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9blocklist19OptOutBlocklistItem12OptOutRecordC2EOS1_(%"class.blocklist::OptOutBlocklistItem::OptOutRecord"* nocapture, %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* nocapture readonly dereferenceable(16)) unnamed_addr #3 align 2 {
  %3 = bitcast %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %0 to i8*
  %4 = bitcast %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 9, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* @_ZN9blocklist19OptOutBlocklistItem12OptOutRecordaSEOS1_(%"class.blocklist::OptOutBlocklistItem::OptOutRecord"* returned, %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %3 = bitcast %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %0 to i8*
  %4 = bitcast %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 9, i1 false)
  ret %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %0
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK9blocklist19OptOutBlocklistItem12OptOutRecordltERKS1_(%"class.blocklist::OptOutBlocklistItem::OptOutRecord"*, %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %1, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp slt i64 %8, %6
  br i1 %9, label %16, label %10

10:                                               ; preds = %2
  %11 = icmp slt i64 %6, %8
  br i1 %11, label %16, label %12

12:                                               ; preds = %10
  %13 = load i8, i8* %4, align 1, !range !2
  %14 = load i8, i8* %3, align 1, !range !2
  %15 = icmp ult i8 %13, %14
  br label %16

16:                                               ; preds = %2, %10, %12
  %17 = phi i1 [ %15, %12 ], [ true, %2 ], [ false, %10 ]
  ret i1 %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9blocklist19OptOutBlocklistItemC2EmiN4base9TimeDeltaE(%"class.blocklist::OptOutBlocklistItem"* nocapture, i64, i32, i64) unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem", %"class.blocklist::OptOutBlocklistItem"* %0, i64 0, i32 0
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem", %"class.blocklist::OptOutBlocklistItem"* %0, i64 0, i32 1
  store i32 %2, i32* %6, align 8
  %7 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem", %"class.blocklist::OptOutBlocklistItem"* %0, i64 0, i32 3, i32 0
  store i64 %3, i64* %7, align 8
  %8 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem", %"class.blocklist::OptOutBlocklistItem"* %0, i64 0, i32 4
  %9 = bitcast %"class.std::__1::priority_queue"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #11
  %10 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem", %"class.blocklist::OptOutBlocklistItem"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem", %"class.blocklist::OptOutBlocklistItem"* %0, i64 0, i32 6
  store i32 0, i32* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9blocklist19OptOutBlocklistItemD2Ev(%"class.blocklist::OptOutBlocklistItem"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem", %"class.blocklist::OptOutBlocklistItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.blocklist::OptOutBlocklistItem::OptOutRecord"*, %"class.blocklist::OptOutBlocklistItem::OptOutRecord"** %2, align 8
  %4 = icmp eq %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %3 to i64
  %7 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem", %"class.blocklist::OptOutBlocklistItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %8 = bitcast %"class.blocklist::OptOutBlocklistItem::OptOutRecord"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9blocklist19OptOutBlocklistItem8AddEntryEbN4base4TimeE(%"class.blocklist::OptOutBlocklistItem"*, i1 zeroext, i64) local_unnamed_addr #3 align 2 {
  %4 = alloca %"struct.std::__1::less", align 1
  %5 = alloca %"class.base::Time", align 8
  %6 = alloca i8, align 1
  %7 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %5, i64 0, i32 0, i32 0
  store i64 %2, i64* %7, align 8
  %8 = zext i1 %1 to i8
  store i8 %8, i8* %6, align 1
  %9 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem", %"class.blocklist::OptOutBlocklistItem"* %0, i64 0, i32 4
  call void @_ZNSt3__114priority_queueIN9blocklist19OptOutBlocklistItem12OptOutRecordENS_6vectorIS3_NS_9allocatorIS3_EEEENS_4lessIS3_EEE7emplaceIJRN4base4TimeERbEEEvDpOT_(%"class.std::__1::priority_queue"* %9, %"class.base::Time"* nonnull dereferenceable(8) %5, i8* nonnull dereferenceable(1) %6)
  %10 = load i8, i8* %6, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %24, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem", %"class.blocklist::OptOutBlocklistItem"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  %16 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem", %"class.blocklist::OptOutBlocklistItem"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br i1 %15, label %22, label %17

17:                                               ; preds = %12
  %18 = load i64, i64* %16, align 8
  %19 = load i64, i64* %7, align 8
  %20 = icmp sgt i64 %19, %18
  br i1 %20, label %21, label %24

21:                                               ; preds = %17
  store i64 %19, i64* %16, align 8
  br label %24

22:                                               ; preds = %12
  %23 = load i64, i64* %7, align 8
  store i64 %23, i64* %16, align 8
  store i8 1, i8* %13, align 8
  br label %24

24:                                               ; preds = %22, %21, %3, %17
  %25 = zext i8 %10 to i32
  %26 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem", %"class.blocklist::OptOutBlocklistItem"* %0, i64 0, i32 6
  %27 = load i32, i32* %26, align 8
  %28 = add nsw i32 %27, %25
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem", %"class.blocklist::OptOutBlocklistItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %30 = bitcast %"class.blocklist::OptOutBlocklistItem::OptOutRecord"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::priority_queue"* %9 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 4
  %36 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem", %"class.blocklist::OptOutBlocklistItem"* %0, i64 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = icmp ugt i64 %35, %37
  %39 = inttoptr i64 %33 to %"class.blocklist::OptOutBlocklistItem::OptOutRecord"*
  %40 = inttoptr i64 %31 to %"class.blocklist::OptOutBlocklistItem::OptOutRecord"*
  br i1 %38, label %41, label %63

41:                                               ; preds = %24
  %42 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %39, i64 0, i32 1
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = zext i8 %43 to i32
  %45 = sub nsw i32 %28, %44
  store i32 %45, i32* %26, align 8
  %46 = getelementptr inbounds %"struct.std::__1::less", %"struct.std::__1::less"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %46) #11
  %47 = icmp sgt i64 %34, 16
  br i1 %47, label %48, label %60

48:                                               ; preds = %41
  %49 = lshr exact i64 %34, 4
  %50 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %40, i64 -1
  %51 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %39, i64 0, i32 0, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = load i8, i8* %42, align 8
  %54 = inttoptr i64 %33 to i8*
  %55 = bitcast %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 9, i1 false) #11
  %56 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %50, i64 0, i32 0, i32 0, i32 0
  store i64 %52, i64* %56, align 8
  %57 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %40, i64 -1, i32 1
  store i8 %53, i8* %57, align 8
  %58 = add nsw i64 %49, -1
  call void @_ZNSt3__111__sift_downIRNS_4lessIN9blocklist19OptOutBlocklistItem12OptOutRecordEEENS_11__wrap_iterIPS4_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeESA_(%"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %39, %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %50, %"struct.std::__1::less"* nonnull dereferenceable(1) %4, i64 %58, %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %39) #11
  %59 = load %"class.blocklist::OptOutBlocklistItem::OptOutRecord"*, %"class.blocklist::OptOutBlocklistItem::OptOutRecord"** %29, align 8
  br label %60

60:                                               ; preds = %41, %48
  %61 = phi %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* [ %40, %41 ], [ %59, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %46) #11
  %62 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %61, i64 -1
  store %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %62, %"class.blocklist::OptOutBlocklistItem::OptOutRecord"** %29, align 8
  br label %63

63:                                               ; preds = %60, %24
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114priority_queueIN9blocklist19OptOutBlocklistItem12OptOutRecordENS_6vectorIS3_NS_9allocatorIS3_EEEENS_4lessIS3_EEE7emplaceIJRN4base4TimeERbEEEvDpOT_(%"class.std::__1::priority_queue"*, %"class.base::Time"* dereferenceable(8), i8* dereferenceable(1)) local_unnamed_addr #5 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load %"class.blocklist::OptOutBlocklistItem::OptOutRecord"*, %"class.blocklist::OptOutBlocklistItem::OptOutRecord"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load %"class.blocklist::OptOutBlocklistItem::OptOutRecord"*, %"class.blocklist::OptOutBlocklistItem::OptOutRecord"** %6, align 8
  %8 = icmp ult %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %5, %7
  %9 = ptrtoint %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %7 to i64
  br i1 %8, label %10, label %19

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %1, i64 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = load i8, i8* %2, align 1, !range !2
  %14 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %5, i64 0, i32 0, i32 0, i32 0
  store i64 %12, i64* %14, align 8
  %15 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %5, i64 0, i32 1
  store i8 %13, i8* %15, align 8
  %16 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %5, i64 1
  %17 = ptrtoint %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %16 to i64
  %18 = bitcast %"class.blocklist::OptOutBlocklistItem::OptOutRecord"** %4 to i64*
  store i64 %17, i64* %18, align 8
  br label %121

19:                                               ; preds = %3
  %20 = ptrtoint %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %5 to i64
  %21 = bitcast %"class.blocklist::OptOutBlocklistItem::OptOutRecord"** %4 to i64*
  %22 = bitcast %"class.std::__1::priority_queue"* %0 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %20, %23
  %25 = ashr exact i64 %24, 4
  %26 = add nsw i64 %25, 1
  %27 = icmp ugt i64 %26, 1152921504606846975
  br i1 %27, label %28, label %30

28:                                               ; preds = %19
  %29 = bitcast %"class.std::__1::priority_queue"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #13
  unreachable

30:                                               ; preds = %19
  %31 = bitcast %"class.blocklist::OptOutBlocklistItem::OptOutRecord"** %6 to i64*
  %32 = sub i64 %9, %23
  %33 = ashr exact i64 %32, 4
  %34 = icmp ult i64 %33, 576460752303423487
  br i1 %34, label %35, label %43

35:                                               ; preds = %30
  %36 = ashr exact i64 %32, 3
  %37 = icmp ult i64 %36, %26
  %38 = select i1 %37, i64 %26, i64 %36
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %48, label %40

40:                                               ; preds = %35
  %41 = icmp ugt i64 %38, 1152921504606846975
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  tail call void @abort() #13
  unreachable

43:                                               ; preds = %40, %30
  %44 = phi i64 [ %38, %40 ], [ 1152921504606846975, %30 ]
  %45 = shl i64 %44, 4
  %46 = tail call i8* @_Znwm(i64 %45) #12
  %47 = bitcast i8* %46 to %"class.blocklist::OptOutBlocklistItem::OptOutRecord"*
  br label %48

48:                                               ; preds = %43, %35
  %49 = phi i64 [ %44, %43 ], [ 0, %35 ]
  %50 = phi %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* [ %47, %43 ], [ null, %35 ]
  %51 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %50, i64 %25
  %52 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %50, i64 %49
  %53 = ptrtoint %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %52 to i64
  %54 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %1, i64 0, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = load i8, i8* %2, align 1, !range !2
  %57 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %51, i64 0, i32 0, i32 0, i32 0
  store i64 %55, i64* %57, align 8
  %58 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %50, i64 %25, i32 1
  store i8 %56, i8* %58, align 8
  %59 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %51, i64 1
  %60 = ptrtoint %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %59 to i64
  %61 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %0, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blocklist::OptOutBlocklistItem::OptOutRecord"*, %"class.blocklist::OptOutBlocklistItem::OptOutRecord"** %61, align 8
  %63 = ptrtoint %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %62 to i64
  %64 = load %"class.blocklist::OptOutBlocklistItem::OptOutRecord"*, %"class.blocklist::OptOutBlocklistItem::OptOutRecord"** %4, align 8
  %65 = icmp eq %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %64, %62
  br i1 %65, label %112, label %66

66:                                               ; preds = %48
  %67 = getelementptr %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %64, i64 -1, i32 0, i32 0, i32 0
  %68 = ptrtoint i64* %67 to i64
  %69 = sub i64 %68, %63
  %70 = lshr i64 %69, 4
  %71 = add nuw nsw i64 %70, 1
  %72 = and i64 %71, 3
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %84, label %74

74:                                               ; preds = %66, %74
  %75 = phi %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* [ %78, %74 ], [ %51, %66 ]
  %76 = phi %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* [ %79, %74 ], [ %64, %66 ]
  %77 = phi i64 [ %82, %74 ], [ %72, %66 ]
  %78 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %75, i64 -1
  %79 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %76, i64 -1
  %80 = bitcast %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %78 to i8*
  %81 = bitcast %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 9, i1 false) #11
  %82 = add i64 %77, -1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %74, !llvm.loop !3

84:                                               ; preds = %74, %66
  %85 = phi %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* [ undef, %66 ], [ %78, %74 ]
  %86 = phi %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* [ %51, %66 ], [ %78, %74 ]
  %87 = phi %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* [ %64, %66 ], [ %79, %74 ]
  %88 = icmp ult i64 %69, 48
  br i1 %88, label %109, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* [ %104, %89 ], [ %86, %84 ]
  %91 = phi %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* [ %105, %89 ], [ %87, %84 ]
  %92 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %90, i64 -1
  %93 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %91, i64 -1
  %94 = bitcast %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %92 to i8*
  %95 = bitcast %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %93 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 9, i1 false) #11
  %96 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %90, i64 -2
  %97 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %91, i64 -2
  %98 = bitcast %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %96 to i8*
  %99 = bitcast %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 9, i1 false) #11
  %100 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %90, i64 -3
  %101 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %91, i64 -3
  %102 = bitcast %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %100 to i8*
  %103 = bitcast %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 9, i1 false) #11
  %104 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %90, i64 -4
  %105 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %91, i64 -4
  %106 = bitcast %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %104 to i8*
  %107 = bitcast %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %105 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %107, i64 9, i1 false) #11
  %108 = icmp eq %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %105, %62
  br i1 %108, label %109, label %89

109:                                              ; preds = %89, %84
  %110 = phi %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* [ %85, %84 ], [ %104, %89 ]
  %111 = load i64, i64* %22, align 8
  br label %112

112:                                              ; preds = %48, %109
  %113 = phi %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* [ %110, %109 ], [ %51, %48 ]
  %114 = phi i64 [ %111, %109 ], [ %63, %48 ]
  %115 = ptrtoint %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %113 to i64
  store i64 %115, i64* %22, align 8
  store i64 %60, i64* %21, align 8
  store i64 %53, i64* %31, align 8
  %116 = icmp eq i64 %114, 0
  br i1 %116, label %121, label %117

117:                                              ; preds = %112
  %118 = inttoptr i64 %114 to i8*
  tail call void @_ZdlPv(i8* %118) #12
  %119 = load %"class.blocklist::OptOutBlocklistItem::OptOutRecord"*, %"class.blocklist::OptOutBlocklistItem::OptOutRecord"** %4, align 8
  %120 = ptrtoint %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %119 to i64
  br label %121

121:                                              ; preds = %117, %112, %10
  %122 = phi i64 [ %120, %117 ], [ %60, %112 ], [ %17, %10 ]
  %123 = phi %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* [ %119, %117 ], [ %59, %112 ], [ %16, %10 ]
  %124 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %0, i64 0, i32 0, i32 0, i32 0
  %125 = load %"class.blocklist::OptOutBlocklistItem::OptOutRecord"*, %"class.blocklist::OptOutBlocklistItem::OptOutRecord"** %124, align 8
  %126 = ptrtoint %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %125 to i64
  %127 = sub i64 %122, %126
  %128 = ashr exact i64 %127, 4
  %129 = icmp sgt i64 %127, 16
  br i1 %129, label %130, label %179

130:                                              ; preds = %121
  %131 = add nsw i64 %128, -2
  %132 = sdiv i64 %131, 2
  %133 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %125, i64 %132
  %134 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %123, i64 -1
  %135 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %125, i64 %132, i32 1
  %136 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %123, i64 -1, i32 1
  %137 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %133, i64 0, i32 0, i32 0, i32 0
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %134, i64 0, i32 0, i32 0, i32 0
  %140 = load i64, i64* %139, align 8
  %141 = icmp slt i64 %140, %138
  br i1 %141, label %142, label %144

142:                                              ; preds = %130
  %143 = load i8, i8* %136, align 8
  br label %150

144:                                              ; preds = %130
  %145 = icmp slt i64 %138, %140
  br i1 %145, label %179, label %146

146:                                              ; preds = %144
  %147 = load i8, i8* %136, align 1, !range !2
  %148 = load i8, i8* %135, align 1, !range !2
  %149 = icmp ult i8 %147, %148
  br i1 %149, label %150, label %179

150:                                              ; preds = %146, %142
  %151 = phi i8 [ %143, %142 ], [ 0, %146 ]
  %152 = bitcast %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %134 to i8*
  %153 = bitcast %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %133 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 9, i1 false) #11
  %154 = add nsw i64 %128, -1
  %155 = icmp ult i64 %154, 3
  br i1 %155, label %175, label %156

156:                                              ; preds = %150, %171
  %157 = phi %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* [ %161, %171 ], [ %133, %150 ]
  %158 = phi i64 [ %160, %171 ], [ %132, %150 ]
  %159 = add nsw i64 %158, -1
  %160 = sdiv i64 %159, 2
  %161 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %125, i64 %160
  %162 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %125, i64 %160, i32 1
  %163 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %161, i64 0, i32 0, i32 0, i32 0
  %164 = load i64, i64* %163, align 8
  %165 = icmp slt i64 %140, %164
  br i1 %165, label %171, label %166

166:                                              ; preds = %156
  %167 = icmp slt i64 %164, %140
  br i1 %167, label %175, label %168

168:                                              ; preds = %166
  %169 = load i8, i8* %162, align 1, !range !2
  %170 = icmp ult i8 %151, %169
  br i1 %170, label %171, label %175

171:                                              ; preds = %168, %156
  %172 = bitcast %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %157 to i8*
  %173 = bitcast %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %161 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %172, i8* align 8 %173, i64 9, i1 false) #11
  %174 = icmp ult i64 %158, 3
  br i1 %174, label %175, label %156

175:                                              ; preds = %171, %168, %166, %150
  %176 = phi %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* [ %133, %150 ], [ %157, %168 ], [ %157, %166 ], [ %161, %171 ]
  %177 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %176, i64 0, i32 0, i32 0, i32 0
  store i64 %140, i64* %177, align 8
  %178 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %176, i64 0, i32 1
  store i8 %151, i8* %178, align 8
  br label %179

179:                                              ; preds = %121, %144, %146, %175
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK9blocklist19OptOutBlocklistItem13IsBlockListedEN4base4TimeE(%"class.blocklist::OptOutBlocklistItem"* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem", %"class.blocklist::OptOutBlocklistItem"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem", %"class.blocklist::OptOutBlocklistItem"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = sub nsw i64 %1, %8
  %10 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem", %"class.blocklist::OptOutBlocklistItem"* %0, i64 0, i32 3, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp slt i64 %9, %11
  br i1 %12, label %13, label %19

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem", %"class.blocklist::OptOutBlocklistItem"* %0, i64 0, i32 6
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem", %"class.blocklist::OptOutBlocklistItem"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp sge i32 %15, %17
  br label %19

19:                                               ; preds = %2, %13, %6
  %20 = phi i1 [ false, %6 ], [ false, %2 ], [ %18, %13 ]
  ret i1 %20
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK9blocklist19OptOutBlocklistItem27OptOutRecordsSizeForTestingEv(%"class.blocklist::OptOutBlocklistItem"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem", %"class.blocklist::OptOutBlocklistItem"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem", %"class.blocklist::OptOutBlocklistItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %4 = bitcast %"class.blocklist::OptOutBlocklistItem::OptOutRecord"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::priority_queue"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  ret i64 %9
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__111__sift_downIRNS_4lessIN9blocklist19OptOutBlocklistItem12OptOutRecordEEENS_11__wrap_iterIPS4_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeESA_(%"class.blocklist::OptOutBlocklistItem::OptOutRecord"*, %"class.blocklist::OptOutBlocklistItem::OptOutRecord"*, %"struct.std::__1::less"* dereferenceable(1), i64, %"class.blocklist::OptOutBlocklistItem::OptOutRecord"*) local_unnamed_addr #3 comdat {
  %6 = ptrtoint %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %0 to i64
  %7 = ptrtoint %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %4 to i64
  %8 = sub i64 %7, %6
  %9 = icmp slt i64 %3, 2
  br i1 %9, label %113, label %10

10:                                               ; preds = %5
  %11 = ashr exact i64 %8, 4
  %12 = add nsw i64 %3, -2
  %13 = sdiv i64 %12, 2
  %14 = icmp slt i64 %13, %11
  br i1 %14, label %113, label %15

15:                                               ; preds = %10
  %16 = ashr exact i64 %8, 3
  %17 = or i64 %16, 1
  %18 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %0, i64 %17
  %19 = ptrtoint %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %18 to i64
  %20 = add nsw i64 %17, 1
  %21 = icmp slt i64 %20, %3
  br i1 %21, label %22, label %39

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %18, i64 1
  %24 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %0, i64 %17, i32 1
  %25 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %23, i64 0, i32 1
  %26 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %18, i64 0, i32 0, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %23, i64 0, i32 0, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp slt i64 %29, %27
  br i1 %30, label %37, label %31

31:                                               ; preds = %22
  %32 = icmp slt i64 %27, %29
  br i1 %32, label %39, label %33

33:                                               ; preds = %31
  %34 = load i8, i8* %25, align 1, !range !2
  %35 = load i8, i8* %24, align 1, !range !2
  %36 = icmp ult i8 %34, %35
  br i1 %36, label %37, label %39

37:                                               ; preds = %22, %33
  %38 = ptrtoint %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %23 to i64
  br label %39

39:                                               ; preds = %31, %15, %37, %33
  %40 = phi i64 [ %38, %37 ], [ %19, %33 ], [ %19, %15 ], [ %19, %31 ]
  %41 = phi i64 [ %20, %37 ], [ %17, %33 ], [ %17, %15 ], [ %17, %31 ]
  %42 = inttoptr i64 %40 to %"class.blocklist::OptOutBlocklistItem::OptOutRecord"*
  %43 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %42, i64 0, i32 1
  %44 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %4, i64 0, i32 1
  %45 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %42, i64 0, i32 0, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %4, i64 0, i32 0, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = icmp slt i64 %48, %46
  br i1 %49, label %113, label %50

50:                                               ; preds = %39
  %51 = icmp slt i64 %46, %48
  br i1 %51, label %52, label %54

52:                                               ; preds = %50
  %53 = load i8, i8* %44, align 8
  br label %58

54:                                               ; preds = %50
  %55 = load i8, i8* %44, align 1, !range !2
  %56 = load i8, i8* %43, align 1, !range !2
  %57 = icmp ult i8 %55, %56
  br i1 %57, label %113, label %58

58:                                               ; preds = %52, %54
  %59 = phi i8 [ %53, %52 ], [ %55, %54 ]
  %60 = bitcast %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %4 to i8*
  %61 = inttoptr i64 %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 9, i1 false) #11
  %62 = icmp slt i64 %13, %41
  br i1 %62, label %109, label %63

63:                                               ; preds = %58, %103
  %64 = phi %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* [ %93, %103 ], [ %42, %58 ]
  %65 = phi i64 [ %92, %103 ], [ %41, %58 ]
  %66 = phi i64 [ %91, %103 ], [ %40, %58 ]
  %67 = shl nsw i64 %65, 1
  %68 = or i64 %67, 1
  %69 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %0, i64 %68
  %70 = ptrtoint %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %69 to i64
  %71 = add nsw i64 %68, 1
  %72 = icmp slt i64 %71, %3
  br i1 %72, label %73, label %90

73:                                               ; preds = %63
  %74 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %69, i64 1
  %75 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %0, i64 %68, i32 1
  %76 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %74, i64 0, i32 1
  %77 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %69, i64 0, i32 0, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %74, i64 0, i32 0, i32 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = icmp slt i64 %80, %78
  br i1 %81, label %88, label %82

82:                                               ; preds = %73
  %83 = icmp slt i64 %78, %80
  br i1 %83, label %90, label %84

84:                                               ; preds = %82
  %85 = load i8, i8* %76, align 1, !range !2
  %86 = load i8, i8* %75, align 1, !range !2
  %87 = icmp ult i8 %85, %86
  br i1 %87, label %88, label %90

88:                                               ; preds = %73, %84
  %89 = ptrtoint %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %74 to i64
  br label %90

90:                                               ; preds = %82, %63, %84, %88
  %91 = phi i64 [ %89, %88 ], [ %70, %84 ], [ %70, %63 ], [ %70, %82 ]
  %92 = phi i64 [ %71, %88 ], [ %68, %84 ], [ %68, %63 ], [ %68, %82 ]
  %93 = inttoptr i64 %91 to %"class.blocklist::OptOutBlocklistItem::OptOutRecord"*
  %94 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %93, i64 0, i32 1
  %95 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %93, i64 0, i32 0, i32 0, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = icmp slt i64 %48, %96
  br i1 %97, label %109, label %98

98:                                               ; preds = %90
  %99 = icmp slt i64 %96, %48
  br i1 %99, label %103, label %100

100:                                              ; preds = %98
  %101 = load i8, i8* %94, align 1, !range !2
  %102 = icmp ult i8 %59, %101
  br i1 %102, label %109, label %103

103:                                              ; preds = %100, %98
  %104 = inttoptr i64 %66 to i8*
  %105 = inttoptr i64 %91 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %105, i64 9, i1 false) #11
  %106 = icmp slt i64 %13, %92
  br i1 %106, label %107, label %63

107:                                              ; preds = %103
  %108 = inttoptr i64 %91 to %"class.blocklist::OptOutBlocklistItem::OptOutRecord"*
  br label %109

109:                                              ; preds = %90, %100, %107, %58
  %110 = phi %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* [ %42, %58 ], [ %108, %107 ], [ %64, %100 ], [ %64, %90 ]
  %111 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %110, i64 0, i32 0, i32 0, i32 0
  store i64 %48, i64* %111, align 8
  %112 = getelementptr inbounds %"class.blocklist::OptOutBlocklistItem::OptOutRecord", %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* %110, i64 0, i32 1
  store i8 %59, i8* %112, align 8
  br label %113

113:                                              ; preds = %39, %109, %54, %5, %10
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
