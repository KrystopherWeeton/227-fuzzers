; ModuleID = '../../third_party/skia/src/effects/imagefilters/SkOffsetImageFilter.cpp'
source_filename = "../../third_party/skia/src/effects/imagefilters/SkOffsetImageFilter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkRect = type { float, float, float, float }
%class.SkPaint = type <{ %class.sk_sp.35, %class.sk_sp.36, %class.sk_sp.37, %class.sk_sp.38, %class.sk_sp, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.35 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.36 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.37 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.38 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%"class.SkImageFilter_Base::CropRect" = type { %struct.SkRect, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [16 x i8] }
%class.SkTArray = type { %class.sk_sp*, i64 }
%"struct.SkImageFilters::CropRect" = type { %struct.SkRect }
%class.SkImageFilter_Base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32, [4 x i8] }>
%class.SkImageFilter.base = type { %class.SkFlattenable.base }
%class.SkAutoSTArray = type { i32, %class.sk_sp*, [16 x i8] }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.sk_sp.15 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.2*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.15*, %class.SkReadBuffer*)* }
%class.sk_sp.2 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%struct.SkDeserialProcs = type { void (%class.sk_sp.8*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.13*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.2*, i8*, i64, i8*)*, i8* }
%class.sk_sp.8 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.9", [7 x i8] }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%class.sk_sp.13 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.14, i32, i32 }
%class.sk_sp.14 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.SkImageFilter_Base::Common" = type { %"class.SkImageFilter_Base::CropRect", %class.SkSTArray }
%struct.SkPoint = type { float, float }
%"class.(anonymous namespace)::SkOffsetImageFilter" = type { %class.SkImageFilter_Base.base, %struct.SkPoint, [4 x i8] }
%class.SkImageFilter_Base.base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32 }>
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.16*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.16*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.16*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.16 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.17, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.17 = type { %"struct.std::__1::atomic" }
%class.sk_sp.18 = type { %class.SkSpecialImage* }
%class.SkSpecialImage = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.skif::Context" = type { %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, %class.SkColorSpace*, %"class.skif::FilterResult" }
%"class.skif::Mapping" = type { %class.SkMatrix, %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.skif::LayerSpace" = type { %struct.SkIRect }
%class.SkImageFilterCache = type opaque
%"class.skif::FilterResult" = type { %class.sk_sp.18, %"class.skif::LayerSpace.19" }
%"class.skif::LayerSpace.19" = type { %struct.SkIPoint }
%struct.SkIPoint = type { i32, i32 }
%class.sk_sp.20 = type { %class.SkSpecialSurface* }
%class.SkSpecialSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, [4 x i8] }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.21, [384 x i64], %class.sk_sp.22, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.23", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.29" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.21 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.22 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK13SkImageFilter18getFlattenableTypeEv = comdat any

$_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter = comdat any

$_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv = comdat any

$_ZNK18SkImageFilter_Base23affectsTransparentBlackEv = comdat any

@.str = private unnamed_addr constant [20 x i8] c"SkOffsetImageFilter\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"SkOffsetImageFilterImpl\00", align 1
@_ZN4skifL11kNoCropRectE = internal unnamed_addr constant %struct.SkRect { float 0xFFF0000000000000, float 0xFFF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000 }, align 4
@_ZTVN12_GLOBAL__N_119SkOffsetImageFilterE = internal unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkImageFilter_Base*)* @_ZN18SkImageFilter_BaseD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkOffsetImageFilter"*)* @_ZN12_GLOBAL__N_119SkOffsetImageFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.15*, %class.SkReadBuffer*)* (%"class.(anonymous namespace)::SkOffsetImageFilter"*)* @_ZNK12_GLOBAL__N_119SkOffsetImageFilter10getFactoryEv to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::SkOffsetImageFilter"*)* @_ZNK12_GLOBAL__N_119SkOffsetImageFilter11getTypeNameEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkOffsetImageFilter"*, %class.SkWriteBuffer*)* @_ZNK12_GLOBAL__N_119SkOffsetImageFilter7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkImageFilter*)* @_ZNK13SkImageFilter18getFlattenableTypeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.(anonymous namespace)::SkOffsetImageFilter"*, %struct.SkRect*)* @_ZNK12_GLOBAL__N_119SkOffsetImageFilter17computeFastBoundsERK6SkRect to i8*), i8* bitcast (void (%class.sk_sp.18*, %"class.(anonymous namespace)::SkOffsetImageFilter"*, %"class.skif::Context"*, %struct.SkIPoint*)* @_ZNK12_GLOBAL__N_119SkOffsetImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast ({ i64, i64 } (%"class.(anonymous namespace)::SkOffsetImageFilter"*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK12_GLOBAL__N_119SkOffsetImageFilter18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS2_ to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)* @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv to i8*), i8* bitcast (void ()* @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)* @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)* @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE to i8*)] }, align 8
@__const._ZNK12_GLOBAL__N_119SkOffsetImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint.paint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.35 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.36 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.37 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.38 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZN12_GLOBAL__N_119SkOffsetImageFilter10CreateProcER12SkReadBuffer.common = private unnamed_addr constant { %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray } { %"class.SkImageFilter_Base::CropRect" { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.SkSTArray { %class.SkAlignedSTStorage { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %class.SkTArray { %class.sk_sp* inttoptr (i64 -6148914691236517206 to %class.sk_sp*), i64 -6148914691236517206 } } }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkImageFilters6OffsetEff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* noalias nocapture sret, float, float, %class.sk_sp* nocapture, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.sk_sp, align 8
  %7 = bitcast float %1 to i32
  %8 = and i32 %7, 2139095040
  %9 = icmp eq i32 %8, 2139095040
  br i1 %9, label %14, label %10

10:                                               ; preds = %5
  %11 = bitcast float %2 to i32
  %12 = and i32 %11, 2139095040
  %13 = icmp eq i32 %12, 2139095040
  br i1 %13, label %14, label %16

14:                                               ; preds = %10, %5
  %15 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %15, align 8
  br label %61

16:                                               ; preds = %10
  %17 = tail call i8* @_Znwm(i64 88) #10
  %18 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %19 = bitcast %class.sk_sp* %3 to i64*
  %20 = load i64, i64* %19, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %18, align 8
  %21 = bitcast %class.sk_sp* %6 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %4, i64 0, i32 0
  %23 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %4, i64 0, i32 0, i32 0
  %24 = load float, float* %23, align 4
  %25 = fcmp une float %24, 0xFFF0000000000000
  br i1 %25, label %38, label %26

26:                                               ; preds = %16
  %27 = getelementptr inbounds float, float* %23, i64 1
  %28 = load float, float* %27, align 4
  %29 = fcmp une float %28, 0xFFF0000000000000
  br i1 %29, label %38, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds float, float* %23, i64 2
  %32 = load float, float* %31, align 4
  %33 = fcmp une float %32, 0x7FF0000000000000
  br i1 %33, label %38, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds float, float* %23, i64 3
  %36 = load float, float* %35, align 4
  %37 = fcmp une float %36, 0x7FF0000000000000
  br i1 %37, label %38, label %39

38:                                               ; preds = %34, %30, %26, %16
  br label %39

39:                                               ; preds = %34, %38
  %40 = phi %struct.SkRect* [ %22, %38 ], [ null, %34 ]
  %41 = bitcast i8* %17 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %41, %class.sk_sp* nonnull %6, i32 1, %struct.SkRect* %40) #11
  %42 = bitcast i8* %17 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_119SkOffsetImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds i8, i8* %17, i64 76
  %44 = bitcast i8* %43 to float*
  store float %1, float* %44, align 4
  %45 = getelementptr inbounds i8, i8* %17, i64 80
  %46 = bitcast i8* %45 to float*
  store float %2, float* %46, align 4
  %47 = bitcast %class.sk_sp* %0 to i8**
  store i8* %17, i8** %47, align 8
  %48 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %49 = load %class.SkImageFilter*, %class.SkImageFilter** %48, align 8
  %50 = icmp eq %class.SkImageFilter* %49, null
  br i1 %50, label %61, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %49, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 -1 acq_rel
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %61

55:                                               ; preds = %51
  %56 = bitcast %class.SkImageFilter* %49 to %class.SkRefCntBase*
  %57 = bitcast %class.SkImageFilter* %49 to void (%class.SkRefCntBase*)***
  %58 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %57, align 8
  %59 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %58, i64 2
  %60 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %59, align 8
  call void %60(%class.SkRefCntBase* nonnull %56) #11
  br label %61

61:                                               ; preds = %55, %51, %39, %14
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z38SkRegisterOffsetImageFilterFlattenablev() local_unnamed_addr #0 {
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), void (%class.sk_sp.15*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_119SkOffsetImageFilter10CreateProcER12SkReadBuffer) #11
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), void (%class.sk_sp.15*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_119SkOffsetImageFilter10CreateProcER12SkReadBuffer) #11
  ret void
}

declare void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8*, void (%class.sk_sp.15*, %class.SkReadBuffer*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_119SkOffsetImageFilter10CreateProcER12SkReadBuffer(%class.sk_sp.15* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = alloca %"class.SkImageFilter_Base::Common", align 8
  %5 = alloca %struct.SkPoint, align 4
  %6 = alloca %"struct.SkImageFilters::CropRect", align 4
  %7 = bitcast %"class.SkImageFilter_Base::Common"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %7) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast ({ %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray }* @__const._ZN12_GLOBAL__N_119SkOffsetImageFilter10CreateProcER12SkReadBuffer.common to i8*), i64 40, i1 false)
  %8 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 0, i32 1
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 1, i32 0, i32 0, i64 16
  %10 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 1, i32 0, i32 0, i64 0
  %11 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 1, i32 0, i32 0, i64 24
  %12 = bitcast i8* %11 to i64*
  %13 = bitcast i8* %9 to i8**
  store i8* %10, i8** %13, align 8
  store i64 17179869184, i64* %12, align 8
  %14 = call zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"* nonnull %4, %class.SkReadBuffer* dereferenceable(136) %1, i32 1) #11
  br i1 %14, label %17, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %16, align 8
  br label %103

17:                                               ; preds = %2
  %18 = bitcast %struct.SkPoint* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %19, align 4
  %20 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %20, align 4
  call void @_ZN12SkReadBuffer9readPointEP7SkPoint(%class.SkReadBuffer* %1, %struct.SkPoint* nonnull %5) #11
  %21 = load float, float* %19, align 4
  %22 = load float, float* %20, align 4
  %23 = bitcast i8* %9 to %class.sk_sp**
  %24 = load %class.sk_sp*, %class.sk_sp** %23, align 8, !noalias !2
  %25 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %24, i64 0, i32 0
  %26 = load %class.SkImageFilter*, %class.SkImageFilter** %25, align 8, !noalias !2
  %27 = icmp eq %class.SkImageFilter* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %17
  %29 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %26, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 1 monotonic, !noalias !2
  br label %31

31:                                               ; preds = %17, %28
  %32 = ptrtoint %class.SkImageFilter* %26 to i64
  %33 = bitcast %"struct.SkImageFilters::CropRect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #11
  %34 = load i32, i32* %8, align 8
  %35 = icmp eq i32 %34, 0
  %36 = select i1 %35, i8* bitcast (%struct.SkRect* @_ZN4skifL11kNoCropRectE to i8*), i8* %7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %36, i64 16, i1 false) #11
  %37 = bitcast %class.sk_sp* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = bitcast float %21 to i32
  %39 = and i32 %38, 2139095040
  %40 = icmp eq i32 %39, 2139095040
  br i1 %40, label %89, label %41

41:                                               ; preds = %31
  %42 = bitcast float %22 to i32
  %43 = and i32 %42, 2139095040
  %44 = icmp eq i32 %43, 2139095040
  br i1 %44, label %89, label %45

45:                                               ; preds = %41
  %46 = call i8* @_Znwm(i64 88) #10, !noalias !5
  %47 = bitcast %class.sk_sp* %3 to i64*
  store i64 %32, i64* %47, align 8, !noalias !5
  %48 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %6, i64 0, i32 0
  %49 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %6, i64 0, i32 0, i32 0
  %50 = load float, float* %49, align 4, !noalias !5
  %51 = fcmp une float %50, 0xFFF0000000000000
  br i1 %51, label %64, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds float, float* %49, i64 1
  %54 = load float, float* %53, align 4, !noalias !5
  %55 = fcmp une float %54, 0xFFF0000000000000
  br i1 %55, label %64, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds float, float* %49, i64 2
  %58 = load float, float* %57, align 4, !noalias !5
  %59 = fcmp une float %58, 0x7FF0000000000000
  br i1 %59, label %64, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds float, float* %49, i64 3
  %62 = load float, float* %61, align 4, !noalias !5
  %63 = fcmp une float %62, 0x7FF0000000000000
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %56, %52, %45
  br label %65

65:                                               ; preds = %64, %60
  %66 = phi %struct.SkRect* [ %48, %64 ], [ null, %60 ]
  %67 = bitcast i8* %46 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %67, %class.sk_sp* nonnull %3, i32 1, %struct.SkRect* %66) #11, !noalias !5
  %68 = bitcast i8* %46 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_119SkOffsetImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %68, align 8, !noalias !5
  %69 = getelementptr inbounds i8, i8* %46, i64 76
  %70 = bitcast i8* %69 to float*
  store float %21, float* %70, align 4, !noalias !5
  %71 = getelementptr inbounds i8, i8* %46, i64 80
  %72 = bitcast i8* %71 to float*
  store float %22, float* %72, align 4, !noalias !5
  %73 = ptrtoint i8* %46 to i64
  %74 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %75 = load %class.SkImageFilter*, %class.SkImageFilter** %74, align 8, !noalias !5
  %76 = icmp eq %class.SkImageFilter* %75, null
  br i1 %76, label %87, label %77

77:                                               ; preds = %65
  %78 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %75, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw add i32* %78, i32 -1 acq_rel, !noalias !5
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %87

81:                                               ; preds = %77
  %82 = bitcast %class.SkImageFilter* %75 to %class.SkRefCntBase*
  %83 = bitcast %class.SkImageFilter* %75 to void (%class.SkRefCntBase*)***
  %84 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %83, align 8, !noalias !5
  %85 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %84, i64 2
  %86 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %85, align 8, !noalias !5
  call void %86(%class.SkRefCntBase* nonnull %82) #11, !noalias !5
  br label %87

87:                                               ; preds = %65, %81, %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  %88 = bitcast %class.sk_sp.15* %0 to i64*
  store i64 %73, i64* %88, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #11
  br label %102

89:                                               ; preds = %41, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  %90 = bitcast %class.sk_sp.15* %0 to i64*
  store i64 0, i64* %90, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #11
  %91 = icmp eq %class.SkImageFilter* %26, null
  br i1 %91, label %102, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %26, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = atomicrmw add i32* %93, i32 -1 acq_rel
  %95 = icmp eq i32 %94, 1
  br i1 %95, label %96, label %102

96:                                               ; preds = %92
  %97 = bitcast %class.SkImageFilter* %26 to %class.SkRefCntBase*
  %98 = bitcast %class.SkImageFilter* %26 to void (%class.SkRefCntBase*)***
  %99 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %98, align 8
  %100 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %99, i64 2
  %101 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %100, align 8
  call void %101(%class.SkRefCntBase* nonnull %97) #11
  br label %102

102:                                              ; preds = %87, %89, %92, %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  br label %103

103:                                              ; preds = %102, %15
  %104 = load i64, i64* %12, align 8
  %105 = and i64 %104, 4294967294
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %109, label %107

107:                                              ; preds = %103
  %108 = bitcast i8* %9 to %class.sk_sp**
  br label %113

109:                                              ; preds = %129, %103
  %110 = phi i64 [ %104, %103 ], [ %131, %129 ]
  %111 = and i64 %110, 1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %137, label %135

113:                                              ; preds = %129, %107
  %114 = phi i64 [ 0, %107 ], [ %130, %129 ]
  %115 = load %class.sk_sp*, %class.sk_sp** %108, align 8
  %116 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %115, i64 %114, i32 0
  %117 = load %class.SkImageFilter*, %class.SkImageFilter** %116, align 8
  %118 = icmp eq %class.SkImageFilter* %117, null
  br i1 %118, label %129, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %117, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = atomicrmw add i32* %120, i32 -1 acq_rel
  %122 = icmp eq i32 %121, 1
  br i1 %122, label %123, label %129

123:                                              ; preds = %119
  %124 = bitcast %class.SkImageFilter* %117 to %class.SkRefCntBase*
  %125 = bitcast %class.SkImageFilter* %117 to void (%class.SkRefCntBase*)***
  %126 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %125, align 8
  %127 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %126, i64 2
  %128 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %127, align 8
  call void %128(%class.SkRefCntBase* nonnull %124) #11
  br label %129

129:                                              ; preds = %123, %119, %113
  %130 = add nuw nsw i64 %114, 1
  %131 = load i64, i64* %12, align 8
  %132 = lshr i64 %131, 1
  %133 = and i64 %132, 2147483647
  %134 = icmp ult i64 %130, %133
  br i1 %134, label %113, label %109

135:                                              ; preds = %109
  %136 = load i8*, i8** %13, align 8
  call void @_Z7sk_freePv(i8* %136) #11
  br label %137

137:                                              ; preds = %109, %135
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %7) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base*, %class.sk_sp*, i32, %struct.SkRect*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_119SkOffsetImageFilterD0Ev(%"class.(anonymous namespace)::SkOffsetImageFilter"*) unnamed_addr #5 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::SkOffsetImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base* %2) #11
  %3 = bitcast %"class.(anonymous namespace)::SkOffsetImageFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #11
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal nonnull void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZNK12_GLOBAL__N_119SkOffsetImageFilter10getFactoryEv(%"class.(anonymous namespace)::SkOffsetImageFilter"* nocapture readnone) unnamed_addr #6 align 2 {
  ret void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZN12_GLOBAL__N_119SkOffsetImageFilter10CreateProcER12SkReadBuffer
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_119SkOffsetImageFilter11getTypeNameEv(%"class.(anonymous namespace)::SkOffsetImageFilter"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_119SkOffsetImageFilter7flattenER13SkWriteBuffer(%"class.(anonymous namespace)::SkOffsetImageFilter"*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.(anonymous namespace)::SkOffsetImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base* %3, %class.SkWriteBuffer* dereferenceable(56) %1) #11
  %4 = getelementptr inbounds %"class.(anonymous namespace)::SkOffsetImageFilter", %"class.(anonymous namespace)::SkOffsetImageFilter"* %0, i64 0, i32 1
  %5 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %struct.SkPoint*)***
  %6 = load void (%class.SkWriteBuffer*, %struct.SkPoint*)**, void (%class.SkWriteBuffer*, %struct.SkPoint*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.SkWriteBuffer*, %struct.SkPoint*)*, void (%class.SkWriteBuffer*, %struct.SkPoint*)** %6, i64 16
  %8 = load void (%class.SkWriteBuffer*, %struct.SkPoint*)*, void (%class.SkWriteBuffer*, %struct.SkPoint*)** %7, align 8
  tail call void %8(%class.SkWriteBuffer* %1, %struct.SkPoint* dereferenceable(8) %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK13SkImageFilter18getFlattenableTypeEv(%class.SkImageFilter*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

; Function Attrs: nounwind ssp uwtable
define internal { <2 x float>, <2 x float> } @_ZNK12_GLOBAL__N_119SkOffsetImageFilter17computeFastBoundsERK6SkRect(%"class.(anonymous namespace)::SkOffsetImageFilter"*, %struct.SkRect* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.(anonymous namespace)::SkOffsetImageFilter"* %0 to %class.SkImageFilter*
  %4 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %3, i32 0) #11
  %5 = icmp eq %class.SkImageFilter* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %3, i32 0) #11
  %8 = bitcast %class.SkImageFilter* %7 to { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)***
  %9 = load { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)**, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*** %8, align 8
  %10 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)** %9, i64 7
  %11 = load { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)** %10, align 8
  %12 = tail call { <2 x float>, <2 x float> } %11(%class.SkImageFilter* %7, %struct.SkRect* dereferenceable(16) %1) #11
  %13 = extractvalue { <2 x float>, <2 x float> } %12, 0
  %14 = extractvalue { <2 x float>, <2 x float> } %12, 1
  br label %21

15:                                               ; preds = %2
  %16 = bitcast %struct.SkRect* %1 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 4
  %18 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %19 = bitcast float* %18 to <2 x float>*
  %20 = load <2 x float>, <2 x float>* %19, align 4
  br label %21

21:                                               ; preds = %15, %6
  %22 = phi <2 x float> [ %20, %15 ], [ %14, %6 ]
  %23 = phi <2 x float> [ %17, %15 ], [ %13, %6 ]
  %24 = getelementptr inbounds %"class.(anonymous namespace)::SkOffsetImageFilter", %"class.(anonymous namespace)::SkOffsetImageFilter"* %0, i64 0, i32 1, i32 0
  %25 = bitcast float* %24 to <2 x float>*
  %26 = load <2 x float>, <2 x float>* %25, align 4
  %27 = fadd <2 x float> %23, %26
  %28 = fadd <2 x float> %22, %26
  %29 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %27, 0
  %30 = insertvalue { <2 x float>, <2 x float> } %29, <2 x float> %28, 1
  ret { <2 x float>, <2 x float> } %30
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_119SkOffsetImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint(%class.sk_sp.18* noalias sret, %"class.(anonymous namespace)::SkOffsetImageFilter"*, %"class.skif::Context"* dereferenceable(136), %struct.SkIPoint* nocapture) unnamed_addr #7 align 2 {
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca <2 x float>, align 8
  %7 = alloca %"class.skif::FilterResult", align 8
  %8 = alloca %struct.SkIRect, align 4
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %struct.SkIRect*
  %11 = alloca %class.sk_sp.20, align 8
  %12 = alloca i64, align 8
  %13 = bitcast i64* %12 to %struct.SkISize*
  %14 = alloca %class.SkPaint, align 8
  %15 = alloca %struct.SkSamplingOptions, align 4
  %16 = bitcast %"class.(anonymous namespace)::SkOffsetImageFilter"* %1 to %class.SkImageFilter_Base*
  %17 = bitcast %"class.skif::FilterResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #11, !noalias !8
  call void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* nonnull sret %7, %class.SkImageFilter_Base* %16, i32 0, %"class.skif::Context"* dereferenceable(136) %2) #11, !noalias !8
  %18 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %7, i64 0, i32 0, i32 0
  %19 = load %class.SkSpecialImage*, %class.SkSpecialImage** %18, align 8, !noalias !11
  %20 = icmp eq %class.SkSpecialImage* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #11, !noalias !8
  %22 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %22, align 8
  br label %212

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %7, i64 0, i32 1, i32 0
  %25 = bitcast %struct.SkIPoint* %24 to i64*
  %26 = load i64, i64* %25, align 8, !noalias !11
  %27 = trunc i64 %26 to i32
  %28 = lshr i64 %26, 32
  %29 = trunc i64 %28 to i32
  %30 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %19, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 1 monotonic, !noalias !11
  %32 = ptrtoint %class.SkSpecialImage* %19 to i64
  %33 = atomicrmw add i32* %30, i32 -1 acq_rel, !noalias !8
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %23
  %36 = bitcast %class.SkSpecialImage* %19 to %class.SkRefCntBase*
  %37 = bitcast %class.SkSpecialImage* %19 to void (%class.SkRefCntBase*)***
  %38 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %37, align 8, !noalias !8
  %39 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, i64 2
  %40 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, align 8, !noalias !8
  call void %40(%class.SkRefCntBase* nonnull %36) #11, !noalias !8
  br label %41

41:                                               ; preds = %23, %35
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #11, !noalias !8
  %42 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.(anonymous namespace)::SkOffsetImageFilter", %"class.(anonymous namespace)::SkOffsetImageFilter"* %1, i64 0, i32 1
  %44 = bitcast %struct.SkPoint* %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.(anonymous namespace)::SkOffsetImageFilter", %"class.(anonymous namespace)::SkOffsetImageFilter"* %1, i64 0, i32 1, i32 1
  %47 = bitcast float* %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = bitcast <2 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #11
  %50 = bitcast <2 x float>* %6 to %struct.SkPoint*
  %51 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %50, i64 0, i32 1
  %52 = bitcast <2 x float>* %6 to i32*
  store i32 %45, i32* %52, align 8
  %53 = bitcast float* %51 to i32*
  store i32 %48, i32* %53, align 4
  call void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix* %42, %struct.SkPoint* nonnull %50, %struct.SkPoint* nonnull %50, i32 1) #11
  %54 = load <2 x float>, <2 x float>* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #11
  %55 = extractelement <2 x float> %54, i32 0
  %56 = fadd float %55, 5.000000e-01
  %57 = call float @llvm.floor.f32(float %56) #11
  %58 = fcmp olt float %57, 0x41DFFFFFE0000000
  %59 = select i1 %58, float %57, float 0x41DFFFFFE0000000
  %60 = fcmp ogt float %59, 0xC1DFFFFFE0000000
  %61 = select i1 %60, float %59, float 0xC1DFFFFFE0000000
  %62 = fptosi float %61 to i32
  %63 = extractelement <2 x float> %54, i32 1
  %64 = fadd float %63, 5.000000e-01
  %65 = call float @llvm.floor.f32(float %64) #11
  %66 = fcmp olt float %65, 0x41DFFFFFE0000000
  %67 = select i1 %66, float %65, float 0x41DFFFFFE0000000
  %68 = fcmp ogt float %67, 0xC1DFFFFFE0000000
  %69 = select i1 %68, float %67, float 0xC1DFFFFFE0000000
  %70 = fptosi float %69 to i32
  %71 = getelementptr inbounds %"class.(anonymous namespace)::SkOffsetImageFilter", %"class.(anonymous namespace)::SkOffsetImageFilter"* %1, i64 0, i32 0, i32 5, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %95

74:                                               ; preds = %41
  %75 = shl i64 %26, 32
  %76 = ashr exact i64 %75, 32
  %77 = sext i32 %62 to i64
  %78 = add nsw i64 %76, %77
  %79 = icmp slt i64 %78, 2147483647
  %80 = select i1 %79, i64 %78, i64 2147483647
  %81 = icmp sgt i64 %80, -2147483647
  %82 = select i1 %81, i64 %80, i64 -2147483647
  %83 = trunc i64 %82 to i32
  %84 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 0
  store i32 %83, i32* %84, align 4
  %85 = ashr i64 %26, 32
  %86 = sext i32 %70 to i64
  %87 = add nsw i64 %85, %86
  %88 = icmp slt i64 %87, 2147483647
  %89 = select i1 %88, i64 %87, i64 2147483647
  %90 = icmp sgt i64 %89, -2147483647
  %91 = select i1 %90, i64 %89, i64 -2147483647
  %92 = trunc i64 %91 to i32
  %93 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 1
  store i32 %92, i32* %93, align 4
  %94 = bitcast %class.sk_sp.18* %0 to i64*
  store i64 %32, i64* %94, align 8
  br label %212

95:                                               ; preds = %41
  %96 = bitcast %struct.SkIRect* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %96) #11
  %97 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 0
  %98 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 1
  %99 = bitcast { i64, i64 }* %9 to i8*
  %100 = bitcast %struct.SkIRect* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %100, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %99) #11
  %101 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %102 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %19, i64 0, i32 2, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %19, i64 0, i32 2, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = sub i32 %103, %105
  %107 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %19, i64 0, i32 2, i32 3
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %19, i64 0, i32 2, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = sub i32 %108, %110
  %112 = shl i64 %26, 32
  %113 = ashr exact i64 %112, 32
  %114 = sext i32 %106 to i64
  %115 = add nsw i64 %113, %114
  %116 = icmp slt i64 %115, 2147483647
  %117 = select i1 %116, i64 %115, i64 2147483647
  %118 = icmp sgt i64 %117, -2147483647
  %119 = select i1 %118, i64 %117, i64 -2147483647
  %120 = ashr i64 %26, 32
  %121 = sext i32 %111 to i64
  %122 = add nsw i64 %120, %121
  %123 = icmp slt i64 %122, 2147483647
  %124 = select i1 %123, i64 %122, i64 2147483647
  %125 = icmp sgt i64 %124, -2147483647
  %126 = select i1 %125, i64 %124, i64 -2147483647
  %127 = shl nsw i64 %126, 32
  %128 = and i64 %119, 4294967295
  %129 = or i64 %127, %128
  %130 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  store i64 %26, i64* %130, align 8
  store i64 %129, i64* %101, align 8
  %131 = call zeroext i1 @_ZNK18SkImageFilter_Base13applyCropRectERKN4skif7ContextERK7SkIRectPS4_(%class.SkImageFilter_Base* %16, %"class.skif::Context"* dereferenceable(136) %2, %struct.SkIRect* nonnull dereferenceable(16) %10, %struct.SkIRect* nonnull %8) #11
  br i1 %131, label %134, label %132

132:                                              ; preds = %95
  %133 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %133, align 8
  br label %202

134:                                              ; preds = %95
  %135 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 3
  %136 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 2
  %137 = bitcast %class.sk_sp.20* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #11
  %138 = getelementptr inbounds %class.sk_sp.20, %class.sk_sp.20* %11, i64 0, i32 0
  store %class.SkSpecialSurface* inttoptr (i64 -6148914691236517206 to %class.SkSpecialSurface*), %class.SkSpecialSurface** %138, align 8
  %139 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %139) #11
  %140 = load i32, i32* %136, align 4
  %141 = load i32, i32* %97, align 4
  %142 = sub i32 %140, %141
  %143 = load i32, i32* %135, align 4
  %144 = load i32, i32* %98, align 4
  %145 = sub i32 %143, %144
  %146 = zext i32 %145 to i64
  %147 = shl nuw i64 %146, 32
  %148 = zext i32 %142 to i64
  %149 = or i64 %147, %148
  store i64 %149, i64* %12, align 8
  %150 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 5, i32 0, i32 0
  %151 = load %class.SkSpecialImage*, %class.SkSpecialImage** %150, align 8, !noalias !14
  %152 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %151, i64 0, i32 1
  %153 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 3
  %154 = load i32, i32* %153, align 8, !noalias !14
  %155 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 4
  %156 = load %class.SkColorSpace*, %class.SkColorSpace** %155, align 8, !noalias !14
  call void @_ZNK14SkSpecialImage11makeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.20* nonnull sret %11, %class.SkSpecialImage* %151, i32 %154, %class.SkColorSpace* %156, %struct.SkISize* nonnull dereferenceable(8) %13, i32 2, %class.SkSurfaceProps* dereferenceable(8) %152) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %139) #11
  %157 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %138, align 8
  %158 = icmp eq %class.SkSpecialSurface* %157, null
  br i1 %158, label %159, label %161

159:                                              ; preds = %134
  %160 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %160, align 8
  br label %201

161:                                              ; preds = %134
  %162 = call %class.SkCanvas* @_ZN16SkSpecialSurface9getCanvasEv(%class.SkSpecialSurface* nonnull %157) #11
  %163 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRGBA4f*
  %164 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %164) #11
  %165 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 0) #11
  %166 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %167 = extractvalue { <2 x float>, <2 x float> } %165, 0
  store <2 x float> %167, <2 x float>* %166, align 8
  %168 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %169 = extractvalue { <2 x float>, <2 x float> } %165, 1
  store <2 x float> %169, <2 x float>* %168, align 8
  call void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas* %162, %struct.SkRGBA4f* nonnull dereferenceable(16) %163, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %164) #11
  %170 = bitcast %class.SkPaint* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %170) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %170, i8* align 8 bitcast (%class.SkPaint* @__const._ZNK12_GLOBAL__N_119SkOffsetImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %14) #11
  %171 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %14, i64 0, i32 8, i32 0, i32 0
  %172 = load i32, i32* %171, align 8
  %173 = and i32 %172, -261121
  %174 = or i32 %173, 1024
  store i32 %174, i32* %171, align 8
  %175 = load i32, i32* %97, align 4
  %176 = sub nsw i32 %27, %175
  %177 = sitofp i32 %176 to float
  %178 = load i32, i32* %98, align 4
  %179 = sub nsw i32 %29, %178
  %180 = sitofp i32 %179 to float
  call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* %162, float %177, float %180) #11
  %181 = sitofp i32 %62 to float
  %182 = sitofp i32 %70 to float
  %183 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %15, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %183) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %183, i8 0, i64 20, i1 false)
  call void @_ZNK14SkSpecialImage4drawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSpecialImage* nonnull %19, %class.SkCanvas* %162, float %181, float %182, %struct.SkSamplingOptions* nonnull dereferenceable(20) %15, %class.SkPaint* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %183) #11
  %184 = load i32, i32* %97, align 4
  %185 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 0
  store i32 %184, i32* %185, align 4
  %186 = load i32, i32* %98, align 4
  %187 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 1
  store i32 %186, i32* %187, align 4
  %188 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %138, align 8
  call void @_ZN16SkSpecialSurface17makeImageSnapshotEv(%class.sk_sp.18* sret %0, %class.SkSpecialSurface* %188) #11
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %170) #11
  %189 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %138, align 8
  %190 = icmp eq %class.SkSpecialSurface* %189, null
  br i1 %190, label %201, label %191

191:                                              ; preds = %161
  %192 = getelementptr inbounds %class.SkSpecialSurface, %class.SkSpecialSurface* %189, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = atomicrmw add i32* %192, i32 -1 acq_rel
  %194 = icmp eq i32 %193, 1
  br i1 %194, label %195, label %201

195:                                              ; preds = %191
  %196 = bitcast %class.SkSpecialSurface* %189 to %class.SkRefCntBase*
  %197 = bitcast %class.SkSpecialSurface* %189 to void (%class.SkRefCntBase*)***
  %198 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %197, align 8
  %199 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %198, i64 2
  %200 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %199, align 8
  call void %200(%class.SkRefCntBase* nonnull %196) #11
  br label %201

201:                                              ; preds = %159, %161, %191, %195
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #11
  br label %202

202:                                              ; preds = %201, %132
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %96) #11
  %203 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %19, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = atomicrmw add i32* %203, i32 -1 acq_rel
  %205 = icmp eq i32 %204, 1
  br i1 %205, label %206, label %212

206:                                              ; preds = %202
  %207 = bitcast %class.SkSpecialImage* %19 to %class.SkRefCntBase*
  %208 = bitcast %class.SkSpecialImage* %19 to void (%class.SkRefCntBase*)***
  %209 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %208, align 8
  %210 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %209, i64 2
  %211 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %210, align 8
  call void %211(%class.SkRefCntBase* nonnull %207) #11
  br label %212

212:                                              ; preds = %21, %74, %202, %206
  ret void
}

declare { i64, i64 } @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal { i64, i64 } @_ZNK12_GLOBAL__N_119SkOffsetImageFilter18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS2_(%"class.(anonymous namespace)::SkOffsetImageFilter"* nocapture readonly, %struct.SkIRect* nocapture readonly dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect* nocapture readnone) unnamed_addr #7 align 2 {
  %6 = alloca <2 x float>, align 8
  %7 = getelementptr inbounds %"class.(anonymous namespace)::SkOffsetImageFilter", %"class.(anonymous namespace)::SkOffsetImageFilter"* %0, i64 0, i32 1
  %8 = bitcast %struct.SkPoint* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.(anonymous namespace)::SkOffsetImageFilter", %"class.(anonymous namespace)::SkOffsetImageFilter"* %0, i64 0, i32 1, i32 1
  %11 = bitcast float* %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = bitcast <2 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = bitcast <2 x float>* %6 to %struct.SkPoint*
  %15 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %14, i64 0, i32 1
  %16 = bitcast <2 x float>* %6 to i32*
  store i32 %9, i32* %16, align 8
  %17 = bitcast float* %15 to i32*
  store i32 %12, i32* %17, align 4
  call void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix* %2, %struct.SkPoint* nonnull %14, %struct.SkPoint* nonnull %14, i32 1) #11
  %18 = load <2 x float>, <2 x float>* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  %19 = extractelement <2 x float> %18, i32 0
  %20 = fadd float %19, 5.000000e-01
  %21 = call float @llvm.floor.f32(float %20) #11
  %22 = fcmp olt float %21, 0x41DFFFFFE0000000
  %23 = select i1 %22, float %21, float 0x41DFFFFFE0000000
  %24 = fcmp ogt float %23, 0xC1DFFFFFE0000000
  %25 = select i1 %24, float %23, float 0xC1DFFFFFE0000000
  %26 = fptosi float %25 to i32
  %27 = extractelement <2 x float> %18, i32 1
  %28 = fadd float %27, 5.000000e-01
  %29 = call float @llvm.floor.f32(float %28) #11
  %30 = fcmp olt float %29, 0x41DFFFFFE0000000
  %31 = select i1 %30, float %29, float 0x41DFFFFFE0000000
  %32 = fcmp ogt float %31, 0xC1DFFFFFE0000000
  %33 = select i1 %32, float %31, float 0xC1DFFFFFE0000000
  %34 = fptosi float %33 to i32
  %35 = icmp eq i32 %3, 1
  %36 = sub nsw i32 0, %26
  %37 = sub nsw i32 0, %34
  %38 = select i1 %35, i32 %37, i32 %34
  %39 = select i1 %35, i32 %36, i32 %26
  %40 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = sext i32 %41 to i64
  %43 = sext i32 %39 to i64
  %44 = add nsw i64 %43, %42
  %45 = icmp slt i64 %44, 2147483647
  %46 = select i1 %45, i64 %44, i64 2147483647
  %47 = icmp sgt i64 %46, -2147483647
  %48 = select i1 %47, i64 %46, i64 -2147483647
  %49 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = sext i32 %50 to i64
  %52 = sext i32 %38 to i64
  %53 = add nsw i64 %52, %51
  %54 = icmp slt i64 %53, 2147483647
  %55 = select i1 %54, i64 %53, i64 2147483647
  %56 = icmp sgt i64 %55, -2147483647
  %57 = select i1 %56, i64 %55, i64 -2147483647
  %58 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = sext i32 %59 to i64
  %61 = add nsw i64 %43, %60
  %62 = icmp slt i64 %61, 2147483647
  %63 = select i1 %62, i64 %61, i64 2147483647
  %64 = icmp sgt i64 %63, -2147483647
  %65 = select i1 %64, i64 %63, i64 -2147483647
  %66 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %67 = load i32, i32* %66, align 4
  %68 = sext i32 %67 to i64
  %69 = add nsw i64 %52, %68
  %70 = icmp slt i64 %69, 2147483647
  %71 = select i1 %70, i64 %69, i64 2147483647
  %72 = icmp sgt i64 %71, -2147483647
  %73 = select i1 %72, i64 %71, i64 -2147483647
  %74 = shl nsw i64 %57, 32
  %75 = and i64 %48, 4294967295
  %76 = or i64 %74, %75
  %77 = insertvalue { i64, i64 } undef, i64 %76, 0
  %78 = shl nsw i64 %73, 32
  %79 = and i64 %65, 4294967295
  %80 = or i64 %78, %79
  %81 = insertvalue { i64, i64 } %77, i64 %80, 1
  ret { i64, i64 } %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter(%class.SkImageFilter_Base*, %class.SkColorFilter**) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv(%class.SkImageFilter_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv(%class.SkImageFilter_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE() unnamed_addr

declare { i64, i64 } @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16), %"class.skif::LayerSpace"* dereferenceable(16), i1 zeroext) unnamed_addr #2

declare { i64, i64 } @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #2

declare %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare zeroext i1 @_ZNK18SkImageFilter_Base13applyCropRectERKN4skif7ContextERK7SkIRectPS4_(%class.SkImageFilter_Base*, %"class.skif::Context"* dereferenceable(136), %struct.SkIRect* dereferenceable(16), %struct.SkIRect*) local_unnamed_addr #2

declare %class.SkCanvas* @_ZN16SkSpecialSurface9getCanvasEv(%class.SkSpecialSurface*) local_unnamed_addr #2

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #2

declare void @_ZN8SkCanvas9translateEff(%class.SkCanvas*, float, float) local_unnamed_addr #2

declare void @_ZNK14SkSpecialImage4drawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSpecialImage*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #2

declare void @_ZN16SkSpecialSurface17makeImageSnapshotEv(%class.sk_sp.18* sret, %class.SkSpecialSurface*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #4

declare void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* sret, %class.SkImageFilter_Base*, i32, %"class.skif::Context"* dereferenceable(136)) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #9

declare void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #2

declare void @_ZNK14SkSpecialImage11makeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.20* sret, %class.SkSpecialImage*, i32, %class.SkColorSpace*, %struct.SkISize* dereferenceable(8), i32, %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #2

declare void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas*, %struct.SkRGBA4f* dereferenceable(16), i32) local_unnamed_addr #2

declare zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"*, %class.SkReadBuffer* dereferenceable(136), i32) local_unnamed_addr #2

declare void @_ZN12SkReadBuffer9readPointEP7SkPoint(%class.SkReadBuffer*, %struct.SkPoint*) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN18SkImageFilter_Base6Common8getInputEi: argument 0"}
!4 = distinct !{!4, !"_ZN18SkImageFilter_Base6Common8getInputEi"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN14SkImageFilters6OffsetEff5sk_spI13SkImageFilterERKNS_8CropRectE: argument 0"}
!7 = distinct !{!7, !"_ZN14SkImageFilters6OffsetEff5sk_spI13SkImageFilterERKNS_8CropRectE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint: argument 0"}
!10 = distinct !{!10, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint"}
!11 = !{!12, !9}
!12 = distinct !{!12, !13, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint: argument 0"}
!13 = distinct !{!13, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK4skif7Context11makeSurfaceERK7SkISizePK14SkSurfaceProps: argument 0"}
!16 = distinct !{!16, !"_ZNK4skif7Context11makeSurfaceERK7SkISizePK14SkSurfaceProps"}
