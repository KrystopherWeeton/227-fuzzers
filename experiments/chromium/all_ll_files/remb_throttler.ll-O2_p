; ModuleID = '../../third_party/webrtc/modules/congestion_controller/remb_throttler.cc'
source_filename = "../../third_party/webrtc/modules/congestion_controller/remb_throttler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.webrtc::RembThrottler" = type { %"class.webrtc::RemoteBitrateObserver", %"class.std::__1::function", %"class.webrtc::Clock"*, %"class.webrtc::Mutex", %"class.webrtc::Timestamp", %"class.webrtc::DataRate", %"class.webrtc::DataRate" }
%"class.webrtc::RemoteBitrateObserver" = type { i32 (...)** }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i64, %"class.std::__1::vector"*)* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.webrtc::Mutex" = type { %"class.webrtc::MutexImpl" }
%"class.webrtc::MutexImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.webrtc::Timestamp" = type { %"class.webrtc::rtc_units_impl::UnitBase" }
%"class.webrtc::rtc_units_impl::UnitBase" = type { i64 }
%"class.webrtc::DataRate" = type { %"class.webrtc::rtc_units_impl::RelativeUnit" }
%"class.webrtc::rtc_units_impl::RelativeUnit" = type { %"class.webrtc::rtc_units_impl::UnitBase.1" }
%"class.webrtc::rtc_units_impl::UnitBase.1" = type { i64 }
%"class.webrtc::Clock" = type { i32 (...)** }
%union.pthread_mutexattr_t = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN6webrtc13RembThrottlerD2Ev = comdat any

$_ZN6webrtc13RembThrottlerD0Ev = comdat any

$_ZNSt3__110__function16__policy_invokerIFvlNS_6vectorIjNS_9allocatorIjEEEEEE12__call_emptyEPKNS0_16__policy_storageElOS5_ = comdat any

$_ZNSt3__125__throw_bad_function_callEv = comdat any

$_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = comdat any

@_ZTVN6webrtc13RembThrottlerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::RembThrottler"*, %"class.std::__1::vector"*, i32)* @_ZN6webrtc13RembThrottler23OnReceiveBitrateChangedERKNSt3__16vectorIjNS1_9allocatorIjEEEEj to i8*), i8* bitcast (void (%"class.webrtc::RembThrottler"*)* @_ZN6webrtc13RembThrottlerD2Ev to i8*), i8* bitcast (void (%"class.webrtc::RembThrottler"*)* @_ZN6webrtc13RembThrottlerD0Ev to i8*)] }, align 8
@_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" { i8* (i8*)* null, void (i8*)* null, i8 1, %"class.std::type_info"* null }, comdat, align 8

@_ZN6webrtc13RembThrottlerC1ENSt3__18functionIFvlNS1_6vectorIjNS1_9allocatorIjEEEEEEEPNS_5ClockE = hidden unnamed_addr alias void (%"class.webrtc::RembThrottler"*, %"class.std::__1::function"*, %"class.webrtc::Clock"*), void (%"class.webrtc::RembThrottler"*, %"class.std::__1::function"*, %"class.webrtc::Clock"*)* @_ZN6webrtc13RembThrottlerC2ENSt3__18functionIFvlNS1_6vectorIjNS1_9allocatorIjEEEEEEEPNS_5ClockE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc13RembThrottlerC2ENSt3__18functionIFvlNS1_6vectorIjNS1_9allocatorIjEEEEEEEPNS_5ClockE(%"class.webrtc::RembThrottler"*, %"class.std::__1::function"* nocapture, %"class.webrtc::Clock"*) unnamed_addr #0 align 2 {
  %4 = alloca %union.pthread_mutexattr_t, align 4
  %5 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6webrtc13RembThrottlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::function"* %6 to i8*
  %8 = bitcast %"class.std::__1::function"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false) #9
  %9 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 1
  %11 = bitcast %"struct.std::__1::__function::__policy_invoker"* %10 to i64*
  %12 = bitcast %"struct.std::__1::__function::__policy_invoker"* %9 to i64*
  %13 = load i64, i64* %11, align 8
  store i64 %13, i64* %12, align 8
  %14 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 1, i32 0, i32 2
  %15 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 2
  %16 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %15, align 8
  store %"struct.std::__1::__function::__policy"* %16, %"struct.std::__1::__function::__policy"** %14, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %16, i64 0, i32 1
  %18 = load void (i8*)*, void (i8*)** %17, align 8
  %19 = icmp eq void (i8*)* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %3
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %15, align 8
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*, i64, %"class.std::__1::vector"*)* @_ZNSt3__110__function16__policy_invokerIFvlNS_6vectorIjNS_9allocatorIjEEEEEE12__call_emptyEPKNS0_16__policy_storageElOS5_ to i64), i64* %11, align 8
  br label %21

21:                                               ; preds = %3, %20
  %22 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 2
  store %"class.webrtc::Clock"* %2, %"class.webrtc::Clock"** %22, align 8
  %23 = bitcast %union.pthread_mutexattr_t* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #9
  %24 = getelementptr inbounds %union.pthread_mutexattr_t, %union.pthread_mutexattr_t* %4, i64 0, i32 0
  store i32 -1431655766, i32* %24, align 4
  %25 = call i32 @pthread_mutexattr_init(%union.pthread_mutexattr_t* nonnull %4) #9
  %26 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 3, i32 0, i32 0
  %27 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %26, %union.pthread_mutexattr_t* nonnull %4) #9
  %28 = call i32 @pthread_mutexattr_destroy(%union.pthread_mutexattr_t* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #9
  %29 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 4, i32 0, i32 0
  %30 = bitcast i64* %29 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 9223372036854775807>, <2 x i64>* %30, align 8
  %31 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  store i64 9223372036854775807, i64* %31, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc13RembThrottler23OnReceiveBitrateChangedERKNSt3__16vectorIjNS1_9allocatorIjEEEEj(%"class.webrtc::RembThrottler"*, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = zext i32 %2 to i64
  %6 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 2
  %7 = load %"class.webrtc::Clock"*, %"class.webrtc::Clock"** %6, align 8
  %8 = bitcast %"class.webrtc::Clock"* %7 to i64 (%"class.webrtc::Clock"*)***
  %9 = load i64 (%"class.webrtc::Clock"*)**, i64 (%"class.webrtc::Clock"*)*** %8, align 8
  %10 = getelementptr inbounds i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %9, i64 2
  %11 = load i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %10, align 8
  %12 = tail call i64 %11(%"class.webrtc::Clock"* %7) #9
  %13 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %13) #9
  %15 = mul nuw nsw i64 %5, 103
  %16 = udiv i64 %15, 100
  %17 = sitofp i64 %16 to double
  %18 = fptosi double %17 to i64
  %19 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 5
  %20 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp slt i64 %21, %18
  br i1 %22, label %23, label %34

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 4, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 9223372036854775807
  br i1 %26, label %31, label %27

27:                                               ; preds = %23
  %28 = icmp eq i64 %25, -9223372036854775808
  %29 = add nsw i64 %25, 200000
  %30 = select i1 %28, i64 -9223372036854775808, i64 %29
  br label %31

31:                                               ; preds = %23, %27
  %32 = phi i64 [ %30, %27 ], [ 9223372036854775807, %23 ]
  %33 = icmp slt i64 %12, %32
  br i1 %33, label %87, label %34

34:                                               ; preds = %3, %31
  %35 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 4, i32 0, i32 0
  store i64 %12, i64* %35, align 8
  store i64 %5, i64* %20, align 8
  %36 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 6
  %37 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = icmp slt i64 %38, %5
  %40 = select i1 %39, %"class.webrtc::DataRate"* %36, %"class.webrtc::DataRate"* %19
  %41 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %13) #9
  %44 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 24, i1 false) #9
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %46 = bitcast i32** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.std::__1::vector"* %1 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %47, %49
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  br i1 %52, label %75, label %53

53:                                               ; preds = %34
  %54 = icmp ugt i64 %51, 4611686018427387903
  br i1 %54, label %55, label %57

55:                                               ; preds = %53
  %56 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %56) #10
  unreachable

57:                                               ; preds = %53
  %58 = tail call i8* @_Znwm(i64 %50) #11
  %59 = bitcast i8* %58 to i32*
  %60 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %61 = bitcast i32** %60 to i8**
  store i8* %58, i8** %61, align 8
  %62 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %58, i8** %62, align 8
  %63 = getelementptr inbounds i32, i32* %59, i64 %51
  %64 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %63, i32** %64, align 8
  %65 = bitcast i32** %60 to i64*
  %66 = ptrtoint i8* %58 to i64
  %67 = icmp sgt i64 %50, 0
  br i1 %67, label %68, label %73

68:                                               ; preds = %57
  %69 = lshr exact i64 %50, 2
  %70 = inttoptr i64 %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %58, i8* align 4 %70, i64 %50, i1 false) #9
  %71 = getelementptr inbounds i32, i32* %59, i64 %69
  %72 = ptrtoint i32* %71 to i64
  br label %73

73:                                               ; preds = %68, %57
  %74 = phi i64 [ %72, %68 ], [ %66, %57 ]
  store i64 %74, i64* %65, align 8
  br label %75

75:                                               ; preds = %34, %73
  %76 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %77 = load void (%"union.std::__1::__function::__policy_storage"*, i64, %"class.std::__1::vector"*)*, void (%"union.std::__1::__function::__policy_storage"*, i64, %"class.std::__1::vector"*)** %76, align 8
  %78 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 1, i32 0, i32 0
  call void %77(%"union.std::__1::__function::__policy_storage"* %78, i64 %42, %"class.std::__1::vector"* nonnull dereferenceable(24) %4) #9
  %79 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %80 = load i32*, i32** %79, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %89, label %82

82:                                               ; preds = %75
  %83 = ptrtoint i32* %80 to i64
  %84 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %85 = bitcast i32** %84 to i64*
  store i64 %83, i64* %85, align 8
  %86 = bitcast i32* %80 to i8*
  call void @_ZdlPv(i8* %86) #11
  br label %89

87:                                               ; preds = %31
  %88 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %13) #9
  br label %89

89:                                               ; preds = %82, %75, %87
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc13RembThrottler27SetMaxDesiredReceiveBitrateENS_8DataRateE(%"class.webrtc::RembThrottler"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 2
  %5 = load %"class.webrtc::Clock"*, %"class.webrtc::Clock"** %4, align 8
  %6 = bitcast %"class.webrtc::Clock"* %5 to i64 (%"class.webrtc::Clock"*)***
  %7 = load i64 (%"class.webrtc::Clock"*)**, i64 (%"class.webrtc::Clock"*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %7, i64 2
  %9 = load i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %8, align 8
  %10 = tail call i64 %9(%"class.webrtc::Clock"* %5) #9
  %11 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %11) #9
  %13 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  store i64 %1, i64* %13, align 8
  %14 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 4, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %10, 9223372036854775807
  %17 = icmp eq i64 %15, -9223372036854775808
  %18 = or i1 %16, %17
  br i1 %18, label %34, label %19

19:                                               ; preds = %2
  %20 = icmp eq i64 %10, -9223372036854775808
  %21 = icmp eq i64 %15, 9223372036854775807
  %22 = or i1 %20, %21
  %23 = sub nsw i64 %10, %15
  %24 = icmp slt i64 %23, 200000
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %34

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp ne i64 %28, 0
  %30 = icmp sle i64 %28, %1
  %31 = and i1 %29, %30
  br i1 %31, label %32, label %34

32:                                               ; preds = %26
  %33 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #9
  br label %48

34:                                               ; preds = %26, %19, %2
  %35 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #9
  %36 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 24, i1 false) #9
  %37 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %38 = load void (%"union.std::__1::__function::__policy_storage"*, i64, %"class.std::__1::vector"*)*, void (%"union.std::__1::__function::__policy_storage"*, i64, %"class.std::__1::vector"*)** %37, align 8
  %39 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 1, i32 0, i32 0
  call void %38(%"union.std::__1::__function::__policy_storage"* %39, i64 %1, %"class.std::__1::vector"* nonnull dereferenceable(24) %3) #9
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = icmp eq i32* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %34
  %44 = ptrtoint i32* %41 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %46 = bitcast i32** %45 to i64*
  store i64 %44, i64* %46, align 8
  %47 = bitcast i32* %41 to i8*
  call void @_ZdlPv(i8* %47) #11
  br label %48

48:                                               ; preds = %43, %34, %32
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc13RembThrottlerD2Ev(%"class.webrtc::RembThrottler"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6webrtc13RembThrottlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %3) #9
  %5 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 1, i32 0, i32 2
  %6 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %5, align 8
  %7 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %6, i64 0, i32 1
  %8 = load void (i8*)*, void (i8*)** %7, align 8
  %9 = icmp eq void (i8*)* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  tail call void %8(i8* %12) #9
  br label %13

13:                                               ; preds = %1, %10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc13RembThrottlerD0Ev(%"class.webrtc::RembThrottler"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6webrtc13RembThrottlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %3) #9
  %5 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 1, i32 0, i32 2
  %6 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %5, align 8
  %7 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %6, i64 0, i32 1
  %8 = load void (i8*)*, void (i8*)** %7, align 8
  %9 = icmp eq void (i8*)* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.webrtc::RembThrottler", %"class.webrtc::RembThrottler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  tail call void %8(i8* %12) #9
  br label %13

13:                                               ; preds = %1, %10
  %14 = bitcast %"class.webrtc::RembThrottler"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #11
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_mutexattr_init(%union.pthread_mutexattr_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_init(%union.pthread_mutex_t*, %union.pthread_mutexattr_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutexattr_destroy(%union.pthread_mutexattr_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_destroy(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvlNS_6vectorIjNS_9allocatorIjEEEEEE12__call_emptyEPKNS0_16__policy_storageElOS5_(%"union.std::__1::__function::__policy_storage"*, i64, %"class.std::__1::vector"* dereferenceable(24)) #0 comdat align 2 {
  tail call void @_ZNSt3__125__throw_bad_function_callEv() #12
  unreachable
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__125__throw_bad_function_callEv() local_unnamed_addr #5 comdat {
  tail call void @abort() #10
  unreachable
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
