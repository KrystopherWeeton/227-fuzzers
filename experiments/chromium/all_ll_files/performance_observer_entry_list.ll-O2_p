; ModuleID = '../../third_party/blink/renderer/core/timing/performance_observer_entry_list.cc'
source_filename = "../../third_party/blink/renderer/core/timing/performance_observer_entry_list.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type opaque
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.133", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.149", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.174", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.114", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__cxx_atomic_impl.37" }
%"struct.std::__1::__cxx_atomic_impl.37" = type { %"struct.std::__1::__cxx_atomic_base_impl.38" }
%"struct.std::__1::__cxx_atomic_base_impl.38" = type { i64 }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::Worklist.45"* }
%"class.blink::Worklist.45" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::Worklist.52"* }
%"class.blink::Worklist.52" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::Worklist.59"* }
%"class.blink::Worklist.59" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::Worklist.66"* }
%"class.blink::Worklist.66" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::Worklist.73"* }
%"class.blink::Worklist.73" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::Worklist.80"* }
%"class.blink::Worklist.80" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::Worklist.87"* }
%"class.blink::Worklist.87" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.94", %"class.std::__1::__compressed_pair.101", %"class.std::__1::__compressed_pair.106", %"class.std::__1::__compressed_pair.108", [4 x i8] }>
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { i64 }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { float }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.117", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.126" }
%"class.WTF::Vector.126" = type { %"class.WTF::VectorBuffer.127" }
%"class.WTF::VectorBuffer.127" = type { %"class.WTF::VectorBufferBase.128" }
%"class.WTF::VectorBufferBase.128" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.141" }
%"class.WTF::VectorBuffer.141" = type { %"class.WTF::VectorBufferBase.142" }
%"class.WTF::VectorBufferBase.142" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.45"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.52"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.59"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.66"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.73"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.178" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.173 }
%class.scoped_refptr.173 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.174" = type { %"struct.std::__1::__atomic_base.175" }
%"struct.std::__1::__atomic_base.175" = type { %"struct.std::__1::__cxx_atomic_impl.176" }
%"struct.std::__1::__cxx_atomic_impl.176" = type { %"struct.std::__1::__cxx_atomic_base_impl.177" }
%"struct.std::__1::__cxx_atomic_base_impl.177" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.221" }
%"struct.std::__1::atomic.221" = type { %"struct.std::__1::__atomic_base.222" }
%"struct.std::__1::__atomic_base.222" = type { %"struct.std::__1::__atomic_base.223" }
%"struct.std::__1::__atomic_base.223" = type { %"struct.std::__1::__cxx_atomic_impl.224" }
%"struct.std::__1::__cxx_atomic_impl.224" = type { %"struct.std::__1::__cxx_atomic_base_impl.225" }
%"struct.std::__1::__cxx_atomic_base_impl.225" = type { i32 }
%"class.blink::PerformanceObserverEntryList" = type { %"class.blink::ScriptWrappable", %"class.blink::HeapVector" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::PerformanceEntry"* }
%"class.blink::PerformanceEntry" = type <{ %"class.blink::ScriptWrappable", double, %"class.WTF::AtomicString", double, i32, [4 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type opaque
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink16PerformanceEntry24StartTimeCompareLessThanEPS0_S1_ = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink28PerformanceObserverEntryList18GetWrapperTypeInfoEv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEEC2ERKS6_ = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_16PerformanceEntryEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_16PerformanceEntryEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE6AppendIS4_EEvPKT_j = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZNSt3__16__sortIRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEvT0_SA_T_ = comdat any

$_ZNSt3__17__sort3IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_T_ = comdat any

$_ZNSt3__17__sort4IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_T_ = comdat any

$_ZNSt3__17__sort5IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_SA_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEbT0_SA_T_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_ = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink28PerformanceObserverEntryListE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::PerformanceObserverEntryList"*)* @_ZN5blink28PerformanceObserverEntryListD2Ev to i8*), i8* bitcast (void (%"class.blink::PerformanceObserverEntryList"*)* @_ZN5blink28PerformanceObserverEntryListD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::PerformanceObserverEntryList"*, %"class.blink::Visitor"*)* @_ZNK5blink28PerformanceObserverEntryList5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::PerformanceObserverEntryList"*)* @_ZNK5blink28PerformanceObserverEntryList18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, align 8
@_ZN5blink28PerformanceObserverEntryList18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.1 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.3 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.6 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.7 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@.str.8 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.9 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1

@_ZN5blink28PerformanceObserverEntryListC1ERKNS_10HeapVectorINS_6MemberINS_16PerformanceEntryEEELj0EEE = hidden unnamed_addr alias void (%"class.blink::PerformanceObserverEntryList"*, %"class.blink::HeapVector"*), void (%"class.blink::PerformanceObserverEntryList"*, %"class.blink::HeapVector"*)* @_ZN5blink28PerformanceObserverEntryListC2ERKNS_10HeapVectorINS_6MemberINS_16PerformanceEntryEEELj0EEE
@_ZN5blink28PerformanceObserverEntryListD1Ev = hidden unnamed_addr alias void (%"class.blink::PerformanceObserverEntryList"*), void (%"class.blink::PerformanceObserverEntryList"*)* @_ZN5blink28PerformanceObserverEntryListD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28PerformanceObserverEntryListC2ERKNS_10HeapVectorINS_6MemberINS_16PerformanceEntryEEELj0EEE(%"class.blink::PerformanceObserverEntryList"*, %"class.blink::HeapVector"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PerformanceObserverEntryList", %"class.blink::PerformanceObserverEntryList"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::PerformanceObserverEntryList", %"class.blink::PerformanceObserverEntryList"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink28PerformanceObserverEntryListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::PerformanceObserverEntryList", %"class.blink::PerformanceObserverEntryList"* %0, i64 0, i32 1, i32 0
  %6 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector"* %5, %"class.WTF::Vector"* dereferenceable(16) %6) #6
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink28PerformanceObserverEntryListD2Ev(%"class.blink::PerformanceObserverEntryList"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink28PerformanceObserverEntryListD0Ev(%"class.blink::PerformanceObserverEntryList"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink28PerformanceObserverEntryList10getEntriesEv(%"class.blink::HeapVector"* noalias sret, %"class.blink::PerformanceObserverEntryList"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, align 8
  %4 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %6 = bitcast %"class.blink::HeapVector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #6
  %7 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::PerformanceObserverEntryList", %"class.blink::PerformanceObserverEntryList"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::PerformanceObserverEntryList", %"class.blink::PerformanceObserverEntryList"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE6AppendIS4_EEvPKT_j(%"class.WTF::Vector"* %7, %"class.blink::Member"* %9, i32 %11) #6
  %12 = load %"class.blink::Member"*, %"class.blink::Member"** %4, align 8
  %13 = load i32, i32* %5, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %12, i64 %14
  %16 = bitcast i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  store i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)* @_ZN5blink16PerformanceEntry24StartTimeCompareLessThanEPS0_S1_, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %3, align 8
  call void @_ZNSt3__16__sortIRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEvT0_SA_T_(%"class.blink::Member"* %12, %"class.blink::Member"* %15, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** nonnull dereferenceable(8) %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16PerformanceEntry24StartTimeCompareLessThanEPS0_S1_(%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*) #0 comdat align 2 {
  %3 = tail call double @_ZNK5blink16PerformanceEntry9startTimeEv(%"class.blink::PerformanceEntry"* %0) #6
  %4 = tail call double @_ZNK5blink16PerformanceEntry9startTimeEv(%"class.blink::PerformanceEntry"* %1) #6
  %5 = fcmp oeq double %3, %4
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PerformanceEntry", %"class.blink::PerformanceEntry"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.blink::PerformanceEntry", %"class.blink::PerformanceEntry"* %1, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %8, %10
  br label %16

12:                                               ; preds = %2
  %13 = tail call double @_ZNK5blink16PerformanceEntry9startTimeEv(%"class.blink::PerformanceEntry"* %0) #6
  %14 = tail call double @_ZNK5blink16PerformanceEntry9startTimeEv(%"class.blink::PerformanceEntry"* %1) #6
  %15 = fcmp olt double %13, %14
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i1 [ %11, %6 ], [ %15, %12 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28PerformanceObserverEntryList16getEntriesByTypeERKN3WTF12AtomicStringE(%"class.blink::HeapVector"* noalias sret, %"class.blink::PerformanceObserverEntryList"* nocapture readonly, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, align 8
  %5 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = bitcast %"class.blink::HeapVector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #6
  %9 = tail call i32 @_ZN5blink16PerformanceEntry15ToEntryTypeEnumERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8) %2) #6
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %63, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::PerformanceObserverEntryList", %"class.blink::PerformanceObserverEntryList"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::Member"*, %"class.blink::Member"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::PerformanceObserverEntryList", %"class.blink::PerformanceObserverEntryList"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %13, i64 %16
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0
  br label %30

21:                                               ; preds = %60
  %22 = load %"class.blink::Member"*, %"class.blink::Member"** %5, align 8
  %23 = load i32, i32* %7, align 4
  %24 = zext i32 %23 to i64
  br label %25

25:                                               ; preds = %21, %11
  %26 = phi i64 [ %24, %21 ], [ 0, %11 ]
  %27 = phi %"class.blink::Member"* [ %22, %21 ], [ null, %11 ]
  %28 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %27, i64 %26
  %29 = bitcast i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29)
  store i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)* @_ZN5blink16PerformanceEntry24StartTimeCompareLessThanEPS0_S1_, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %4, align 8
  call void @_ZNSt3__16__sortIRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEvT0_SA_T_(%"class.blink::Member"* %27, %"class.blink::Member"* %28, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** nonnull dereferenceable(8) %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29)
  br label %63

30:                                               ; preds = %19, %60
  %31 = phi %"class.blink::Member"* [ %13, %19 ], [ %61, %60 ]
  %32 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %32, align 8
  %34 = bitcast %"class.blink::PerformanceEntry"* %33 to i32 (%"class.blink::PerformanceEntry"*)***
  %35 = load i32 (%"class.blink::PerformanceEntry"*)**, i32 (%"class.blink::PerformanceEntry"*)*** %34, align 8
  %36 = getelementptr inbounds i32 (%"class.blink::PerformanceEntry"*)*, i32 (%"class.blink::PerformanceEntry"*)** %35, i64 10
  %37 = load i32 (%"class.blink::PerformanceEntry"*)*, i32 (%"class.blink::PerformanceEntry"*)** %36, align 8
  %38 = tail call i32 %37(%"class.blink::PerformanceEntry"* %33) #6
  %39 = icmp eq i32 %38, %9
  br i1 %39, label %40, label %60

40:                                               ; preds = %30
  %41 = load i32, i32* %7, align 4
  %42 = load i32, i32* %6, align 8
  %43 = icmp eq i32 %41, %42
  br i1 %43, label %59, label %44, !prof !2

44:                                               ; preds = %40
  %45 = load %"class.blink::Member"*, %"class.blink::Member"** %5, align 8
  %46 = zext i32 %41 to i64
  %47 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %45, i64 %46
  %48 = bitcast %"class.blink::Member"* %31 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.blink::Member"* %47 to i64*
  store atomic i64 %49, i64* %50 monotonic, align 8
  %51 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %44
  %54 = inttoptr i64 %49 to i8*
  %55 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %54) #6
  br label %56

56:                                               ; preds = %53, %44
  %57 = load i32, i32* %7, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %7, align 4
  br label %60

59:                                               ; preds = %40
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector"* %20, %"class.blink::Member"* dereferenceable(8) %31) #6
  br label %60

60:                                               ; preds = %59, %56, %30
  %61 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %31, i64 1
  %62 = icmp eq %"class.blink::Member"* %61, %17
  br i1 %62, label %21, label %30

63:                                               ; preds = %3, %25
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @_ZN5blink16PerformanceEntry15ToEntryTypeEnumERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28PerformanceObserverEntryList16getEntriesByNameERKN3WTF6StringERKNS1_12AtomicStringE(%"class.blink::HeapVector"* noalias sret, %"class.blink::PerformanceObserverEntryList"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, align 8
  %6 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = bitcast %"class.blink::HeapVector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #6
  %10 = tail call i32 @_ZN5blink16PerformanceEntry15ToEntryTypeEnumERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8) %3) #6
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp ne %"class.WTF::StringImpl"* %12, null
  %14 = icmp eq i32 %10, 0
  %15 = and i1 %14, %13
  br i1 %15, label %78, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.blink::PerformanceObserverEntryList", %"class.blink::PerformanceObserverEntryList"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::Member"*, %"class.blink::Member"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::PerformanceObserverEntryList", %"class.blink::PerformanceObserverEntryList"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %18, i64 %21
  %23 = icmp eq i32 %20, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0
  br label %36

27:                                               ; preds = %75
  %28 = load %"class.blink::Member"*, %"class.blink::Member"** %6, align 8
  %29 = load i32, i32* %8, align 4
  %30 = zext i32 %29 to i64
  br label %31

31:                                               ; preds = %27, %16
  %32 = phi i64 [ %30, %27 ], [ 0, %16 ]
  %33 = phi %"class.blink::Member"* [ %28, %27 ], [ null, %16 ]
  %34 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %33, i64 %32
  %35 = bitcast i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  store i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)* @_ZN5blink16PerformanceEntry24StartTimeCompareLessThanEPS0_S1_, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %5, align 8
  call void @_ZNSt3__16__sortIRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEvT0_SA_T_(%"class.blink::Member"* %33, %"class.blink::Member"* %34, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** nonnull dereferenceable(8) %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  br label %78

36:                                               ; preds = %24, %75
  %37 = phi %"class.blink::Member"* [ %18, %24 ], [ %76, %75 ]
  %38 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %37, i64 0, i32 0, i32 0
  %39 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::PerformanceEntry", %"class.blink::PerformanceEntry"* %39, i64 0, i32 2, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %43 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"* %42) #6
  br i1 %43, label %44, label %75

44:                                               ; preds = %36
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %55, label %47

47:                                               ; preds = %44
  %48 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %38, align 8
  %49 = bitcast %"class.blink::PerformanceEntry"* %48 to i32 (%"class.blink::PerformanceEntry"*)***
  %50 = load i32 (%"class.blink::PerformanceEntry"*)**, i32 (%"class.blink::PerformanceEntry"*)*** %49, align 8
  %51 = getelementptr inbounds i32 (%"class.blink::PerformanceEntry"*)*, i32 (%"class.blink::PerformanceEntry"*)** %50, i64 10
  %52 = load i32 (%"class.blink::PerformanceEntry"*)*, i32 (%"class.blink::PerformanceEntry"*)** %51, align 8
  %53 = tail call i32 %52(%"class.blink::PerformanceEntry"* %48) #6
  %54 = icmp eq i32 %10, %53
  br i1 %54, label %55, label %75

55:                                               ; preds = %47, %44
  %56 = load i32, i32* %8, align 4
  %57 = load i32, i32* %7, align 8
  %58 = icmp eq i32 %56, %57
  br i1 %58, label %74, label %59, !prof !2

59:                                               ; preds = %55
  %60 = load %"class.blink::Member"*, %"class.blink::Member"** %6, align 8
  %61 = zext i32 %56 to i64
  %62 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %60, i64 %61
  %63 = bitcast %"class.blink::Member"* %37 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::Member"* %62 to i64*
  store atomic i64 %64, i64* %65 monotonic, align 8
  %66 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %59
  %69 = inttoptr i64 %64 to i8*
  %70 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %69) #6
  br label %71

71:                                               ; preds = %68, %59
  %72 = load i32, i32* %8, align 4
  %73 = add i32 %72, 1
  store i32 %73, i32* %8, align 4
  br label %75

74:                                               ; preds = %55
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector"* %26, %"class.blink::Member"* dereferenceable(8) %37) #6
  br label %75

75:                                               ; preds = %74, %71, %47, %36
  %76 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %37, i64 1
  %77 = icmp eq %"class.blink::Member"* %76, %22
  br i1 %77, label %27, label %36

78:                                               ; preds = %4, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink28PerformanceObserverEntryList5TraceEPNS_7VisitorE(%"class.blink::PerformanceObserverEntryList"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PerformanceObserverEntryList", %"class.blink::PerformanceObserverEntryList"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::HeapVector"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast %"class.blink::HeapVector"* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #6
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #6
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.blink::PerformanceObserverEntryList", %"class.blink::PerformanceObserverEntryList"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %19, %"class.blink::Visitor"* %1) #6
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #3

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink28PerformanceObserverEntryList18GetWrapperTypeInfoEv(%"class.blink::PerformanceObserverEntryList"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink28PerformanceObserverEntryList18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #3

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare double @_ZNK5blink16PerformanceEntry9startTimeEv(%"class.blink::PerformanceEntry"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Member"* null, %"class.blink::Member"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_16PerformanceEntryEEEEEmm(i64 %9) #6
  %11 = lshr i64 %10, 3
  %12 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %11) #6
  %13 = ptrtoint %"class.blink::HeapVectorBacking"* %12 to i64
  %14 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = trunc i64 %11 to i32
  store i32 %15, i32* %6, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  %18 = bitcast %"class.blink::HeapVectorBacking"* %12 to %"class.blink::Member"*
  br i1 %17, label %23, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %12, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #6
  %22 = load %"class.blink::Member"*, %"class.blink::Member"** %5, align 8
  br label %23

23:                                               ; preds = %2, %8, %19
  %24 = phi %"class.blink::Member"* [ null, %2 ], [ %18, %8 ], [ %22, %19 ]
  %25 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member"*, %"class.blink::Member"** %28, align 8
  %30 = icmp ne %"class.blink::Member"* %24, null
  %31 = icmp ne %"class.blink::Member"* %29, null
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %53, !prof !3

33:                                               ; preds = %23
  %34 = load i32, i32* %25, align 4
  %35 = zext i32 %34 to i64
  %36 = bitcast %"class.blink::Member"* %24 to i8*
  %37 = bitcast %"class.blink::Member"* %29 to i8*
  %38 = shl nuw nsw i64 %35, 3
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %36, i8* nonnull %37, i64 %38) #6
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %53, label %40

40:                                               ; preds = %33, %50
  %41 = phi i64 [ %43, %50 ], [ %35, %33 ]
  %42 = phi %"class.blink::Member"* [ %51, %50 ], [ %24, %33 ]
  %43 = add nsw i64 %41, -1
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::Member"* %42 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #6
  br label %50

50:                                               ; preds = %46, %40
  %51 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %42, i64 1
  %52 = icmp eq i64 %43, 0
  br i1 %52, label %53, label %40

53:                                               ; preds = %50, %23, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_16PerformanceEntryEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 3
  ret i64 %20
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.3, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #6
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #6
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #6
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 4
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #6
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #6
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #6
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %34, i8* %35) #6
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #6
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #6
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #6
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !2

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #6
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16PerformanceEntryEE5TraceEPNS_7VisitorEPKv) #6
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16PerformanceEntryEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #3

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE6AppendIS4_EEvPKT_j(%"class.WTF::Vector"*, %"class.blink::Member"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %43

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::Member"*, %"class.blink::Member"** %14, align 8
  %16 = icmp ugt %"class.blink::Member"* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 %18
  %20 = icmp ugt %"class.blink::Member"* %19, %1
  br i1 %20, label %29, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %28) #6
  br label %43

29:                                               ; preds = %17
  %30 = ptrtoint %"class.blink::Member"* %1 to i64
  %31 = ptrtoint %"class.blink::Member"* %15 to i64
  %32 = sub i64 %30, %31
  %33 = ashr exact i64 %32, 3
  %34 = lshr i32 %11, 2
  %35 = add nuw i32 %11, 1
  %36 = add i32 %35, %34
  %37 = icmp ugt i32 %36, 4
  %38 = select i1 %37, i32 %36, i32 4
  %39 = icmp ugt i32 %38, %9
  %40 = select i1 %39, i32 %38, i32 %9
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %40) #6
  %41 = load %"class.blink::Member"*, %"class.blink::Member"** %14, align 8
  %42 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %41, i64 %33
  br label %43

43:                                               ; preds = %29, %21, %3
  %44 = phi %"class.blink::Member"* [ %1, %3 ], [ %1, %21 ], [ %42, %29 ]
  %45 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #6
  %46 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %46, align 8
  %47 = load i32, i32* %7, align 4
  %48 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48)
  %49 = icmp ult i32 %9, %47
  br i1 %49, label %51, label %50

50:                                               ; preds = %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  store i8* null, i8** %46, align 8
  br label %60

51:                                               ; preds = %43
  %52 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #6
  %53 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %47) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* %52, i8* %53) #6
  %54 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  store i8* %55, i8** %46, align 8
  %56 = icmp eq i8* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %51
  %58 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #6
  %59 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #6
  br label %60

60:                                               ; preds = %50, %51, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #6
  %61 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::Member"*, %"class.blink::Member"** %61, align 8
  %63 = load i32, i32* %7, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 %64
  %66 = icmp ne %"class.blink::Member"* %65, null
  %67 = icmp ne %"class.blink::Member"* %44, null
  %68 = and i1 %67, %66
  br i1 %68, label %69, label %88, !prof !3

69:                                               ; preds = %60
  %70 = zext i32 %2 to i64
  %71 = bitcast %"class.blink::Member"* %65 to i8*
  %72 = bitcast %"class.blink::Member"* %44 to i8*
  %73 = shl nuw nsw i64 %70, 3
  call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %71, i8* nonnull %72, i64 %73) #6
  %74 = icmp eq i32 %2, 0
  br i1 %74, label %88, label %75

75:                                               ; preds = %69, %85
  %76 = phi i64 [ %78, %85 ], [ %70, %69 ]
  %77 = phi %"class.blink::Member"* [ %86, %85 ], [ %65, %69 ]
  %78 = add nsw i64 %76, -1
  %79 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %75
  %82 = bitcast %"class.blink::Member"* %77 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %83) #6
  br label %85

85:                                               ; preds = %81, %75
  %86 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %77, i64 1
  %87 = icmp eq i64 %78, 0
  br i1 %87, label %88, label %75

88:                                               ; preds = %85, %60, %69
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_16PerformanceEntryEEEEEmm(i64 %11) #6
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #6
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #6
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #6
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #6
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #6
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0)) #6
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #6
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #6
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #6
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_16PerformanceEntryEEEEEmm(i64 %14) #6
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #6
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !3

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #6
  %33 = bitcast %"class.WTF::Vector"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #6
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #6
  %42 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #6
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEvT0_SA_T_(%"class.blink::Member"*, %"class.blink::Member"*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %332, %3
  %5 = phi %"class.blink::Member"* [ %1, %3 ], [ %295, %332 ]
  %6 = phi %"class.blink::Member"* [ %0, %3 ], [ %16, %332 ]
  %7 = ptrtoint %"class.blink::Member"* %5 to i64
  %8 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %5, i64 -1
  %9 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %8, i64 0, i32 0, i32 0
  %10 = bitcast %"class.blink::Member"* %8 to i64*
  %11 = bitcast %"class.blink::Member"* %8 to i8**
  %12 = ptrtoint %"class.blink::Member"* %5 to i64
  br label %13

13:                                               ; preds = %341, %4
  %14 = phi %"class.blink::Member"* [ %6, %4 ], [ %342, %341 ]
  br label %15

15:                                               ; preds = %193, %13
  %16 = phi %"class.blink::Member"* [ %14, %13 ], [ %178, %193 ]
  %17 = ptrtoint %"class.blink::Member"* %16 to i64
  %18 = sub i64 %7, %17
  %19 = ashr exact i64 %18, 3
  switch i64 %19, label %61 [
    i64 0, label %345
    i64 1, label %345
    i64 2, label %20
    i64 3, label %46
    i64 4, label %50
    i64 5, label %55
  ]

20:                                               ; preds = %15
  %21 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %22 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %5, i64 -1
  %23 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 0, i32 0, i32 0
  %26 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %25, align 8
  %27 = tail call zeroext i1 %21(%"class.blink::PerformanceEntry"* %24, %"class.blink::PerformanceEntry"* %26) #6
  br i1 %27, label %28, label %345

28:                                               ; preds = %20
  %29 = bitcast %"class.blink::Member"* %16 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::Member"* %22 to i64*
  %32 = load i64, i64* %31, align 8
  store atomic i64 %32, i64* %29 monotonic, align 8
  store atomic i64 %30, i64* %31 monotonic, align 8
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %28
  %36 = bitcast %"class.blink::Member"* %16 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %37) #6
  br label %39

39:                                               ; preds = %35, %28
  %40 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %345, label %42

42:                                               ; preds = %39
  %43 = bitcast %"class.blink::Member"* %22 to i8**
  %44 = load i8*, i8** %43, align 8
  %45 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %44) #6
  br label %345

46:                                               ; preds = %15
  %47 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 1
  %48 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %5, i64 -1
  %49 = tail call i32 @_ZNSt3__17__sort3IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_T_(%"class.blink::Member"* %16, %"class.blink::Member"* %47, %"class.blink::Member"* %48, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %2)
  br label %345

50:                                               ; preds = %15
  %51 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 1
  %52 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 2
  %53 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %5, i64 -1
  %54 = tail call i32 @_ZNSt3__17__sort4IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_T_(%"class.blink::Member"* %16, %"class.blink::Member"* %51, %"class.blink::Member"* %52, %"class.blink::Member"* %53, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %2)
  br label %345

55:                                               ; preds = %15
  %56 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 1
  %57 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 2
  %58 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 3
  %59 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %5, i64 -1
  %60 = tail call i32 @_ZNSt3__17__sort5IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_SA_T_(%"class.blink::Member"* %16, %"class.blink::Member"* %56, %"class.blink::Member"* %57, %"class.blink::Member"* %58, %"class.blink::Member"* %59, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %2)
  br label %345

61:                                               ; preds = %15
  %62 = icmp slt i64 %18, 56
  br i1 %62, label %63, label %112

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 2
  %65 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 1
  %66 = tail call i32 @_ZNSt3__17__sort3IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_T_(%"class.blink::Member"* %16, %"class.blink::Member"* %65, %"class.blink::Member"* %64, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %2) #6
  %67 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 3
  %68 = icmp eq %"class.blink::Member"* %67, %5
  br i1 %68, label %345, label %69

69:                                               ; preds = %63, %109
  %70 = phi %"class.blink::Member"* [ %110, %109 ], [ %67, %63 ]
  %71 = phi %"class.blink::Member"* [ %70, %109 ], [ %64, %63 ]
  %72 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %73 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %70, i64 0, i32 0, i32 0
  %74 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %71, i64 0, i32 0, i32 0
  %76 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %75, align 8
  %77 = tail call zeroext i1 %72(%"class.blink::PerformanceEntry"* %74, %"class.blink::PerformanceEntry"* %76) #6
  br i1 %77, label %78, label %109

78:                                               ; preds = %69
  %79 = bitcast %"class.blink::Member"* %70 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = inttoptr i64 %80 to %"class.blink::PerformanceEntry"*
  br label %82

82:                                               ; preds = %95, %78
  %83 = phi %"class.blink::Member"* [ %70, %78 ], [ %84, %95 ]
  %84 = phi %"class.blink::Member"* [ %71, %78 ], [ %97, %95 ]
  %85 = bitcast %"class.blink::Member"* %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"class.blink::Member"* %83 to i64*
  store atomic i64 %86, i64* %87 monotonic, align 8
  %88 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %82
  %91 = inttoptr i64 %86 to i8*
  %92 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %91) #6
  br label %93

93:                                               ; preds = %90, %82
  %94 = icmp eq %"class.blink::Member"* %84, %16
  br i1 %94, label %101, label %95

95:                                               ; preds = %93
  %96 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %97 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %84, i64 -1
  %98 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %97, i64 0, i32 0, i32 0
  %99 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %98, align 8
  %100 = tail call zeroext i1 %96(%"class.blink::PerformanceEntry"* %81, %"class.blink::PerformanceEntry"* %99) #6
  br i1 %100, label %82, label %101

101:                                              ; preds = %93, %95
  %102 = phi %"class.blink::Member"* [ %84, %95 ], [ %16, %93 ]
  %103 = bitcast %"class.blink::Member"* %102 to i64*
  store atomic i64 %80, i64* %103 monotonic, align 8
  %104 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %101
  %107 = inttoptr i64 %80 to i8*
  %108 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %107) #6
  br label %109

109:                                              ; preds = %106, %101, %69
  %110 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %70, i64 1
  %111 = icmp eq %"class.blink::Member"* %110, %5
  br i1 %111, label %345, label %69

112:                                              ; preds = %61
  %113 = icmp sgt i64 %18, 7992
  %114 = sdiv i64 %19, 2
  %115 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %114
  br i1 %113, label %116, label %121

116:                                              ; preds = %112
  %117 = sdiv i64 %19, 4
  %118 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %117
  %119 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %115, i64 %117
  %120 = tail call i32 @_ZNSt3__17__sort5IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_SA_T_(%"class.blink::Member"* %16, %"class.blink::Member"* %118, %"class.blink::Member"* %115, %"class.blink::Member"* %119, %"class.blink::Member"* %8, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %2)
  br label %123

121:                                              ; preds = %112
  %122 = tail call i32 @_ZNSt3__17__sort3IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_T_(%"class.blink::Member"* %16, %"class.blink::Member"* %115, %"class.blink::Member"* %8, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %2)
  br label %123

123:                                              ; preds = %121, %116
  %124 = phi i32 [ %120, %116 ], [ %122, %121 ]
  %125 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %126 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 0, i32 0, i32 0
  %127 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %126, align 8
  %128 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %115, i64 0, i32 0, i32 0
  %129 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %128, align 8
  %130 = tail call zeroext i1 %125(%"class.blink::PerformanceEntry"* %127, %"class.blink::PerformanceEntry"* %129) #6
  br i1 %130, label %240, label %131

131:                                              ; preds = %123, %214
  %132 = phi %"class.blink::Member"* [ %133, %214 ], [ %8, %123 ]
  %133 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %132, i64 -1
  %134 = icmp eq %"class.blink::Member"* %16, %133
  br i1 %134, label %135, label %214

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 1
  %137 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %138 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %126, align 8
  %139 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %9, align 8
  %140 = tail call zeroext i1 %137(%"class.blink::PerformanceEntry"* %138, %"class.blink::PerformanceEntry"* %139) #6
  br i1 %140, label %171, label %141

141:                                              ; preds = %135
  %142 = icmp eq %"class.blink::Member"* %136, %8
  br i1 %142, label %345, label %143

143:                                              ; preds = %141, %168
  %144 = phi %"class.blink::Member"* [ %169, %168 ], [ %136, %141 ]
  %145 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %146 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %126, align 8
  %147 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %144, i64 0, i32 0, i32 0
  %148 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %147, align 8
  %149 = tail call zeroext i1 %145(%"class.blink::PerformanceEntry"* %146, %"class.blink::PerformanceEntry"* %148) #6
  br i1 %149, label %150, label %168

150:                                              ; preds = %143
  %151 = bitcast %"class.blink::Member"* %144 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = load i64, i64* %10, align 8
  store atomic i64 %153, i64* %151 monotonic, align 8
  store atomic i64 %152, i64* %10 monotonic, align 8
  %154 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %160, label %156

156:                                              ; preds = %150
  %157 = bitcast %"class.blink::Member"* %144 to i8**
  %158 = load i8*, i8** %157, align 8
  %159 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %158) #6
  br label %160

160:                                              ; preds = %156, %150
  %161 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %166, label %163

163:                                              ; preds = %160
  %164 = load i8*, i8** %11, align 8
  %165 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %164) #6
  br label %166

166:                                              ; preds = %160, %163
  %167 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %144, i64 1
  br label %171

168:                                              ; preds = %143
  %169 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %144, i64 1
  %170 = icmp eq %"class.blink::Member"* %169, %8
  br i1 %170, label %345, label %143

171:                                              ; preds = %166, %135
  %172 = phi %"class.blink::Member"* [ %136, %135 ], [ %167, %166 ]
  %173 = icmp eq %"class.blink::Member"* %172, %8
  br i1 %173, label %345, label %174

174:                                              ; preds = %171, %209
  %175 = phi %"class.blink::Member"* [ %184, %209 ], [ %172, %171 ]
  %176 = phi %"class.blink::Member"* [ %189, %209 ], [ %8, %171 ]
  br label %177

177:                                              ; preds = %177, %174
  %178 = phi %"class.blink::Member"* [ %175, %174 ], [ %184, %177 ]
  %179 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %180 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %126, align 8
  %181 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %178, i64 0, i32 0, i32 0
  %182 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %181, align 8
  %183 = tail call zeroext i1 %179(%"class.blink::PerformanceEntry"* %180, %"class.blink::PerformanceEntry"* %182) #6
  %184 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %178, i64 1
  br i1 %183, label %185, label %177

185:                                              ; preds = %177, %185
  %186 = phi %"class.blink::Member"* [ %189, %185 ], [ %176, %177 ]
  %187 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %188 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %126, align 8
  %189 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %186, i64 -1
  %190 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %189, i64 0, i32 0, i32 0
  %191 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %190, align 8
  %192 = tail call zeroext i1 %187(%"class.blink::PerformanceEntry"* %188, %"class.blink::PerformanceEntry"* %191) #6
  br i1 %192, label %185, label %193

193:                                              ; preds = %185
  %194 = icmp ult %"class.blink::Member"* %178, %189
  br i1 %194, label %195, label %15

195:                                              ; preds = %193
  %196 = bitcast %"class.blink::Member"* %178 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = bitcast %"class.blink::Member"* %189 to i64*
  %199 = load i64, i64* %198, align 8
  store atomic i64 %199, i64* %196 monotonic, align 8
  store atomic i64 %197, i64* %198 monotonic, align 8
  %200 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %206, label %202

202:                                              ; preds = %195
  %203 = bitcast %"class.blink::Member"* %178 to i8**
  %204 = load i8*, i8** %203, align 8
  %205 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %204) #6
  br label %206

206:                                              ; preds = %202, %195
  %207 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %210

209:                                              ; preds = %206, %210
  br label %174

210:                                              ; preds = %206
  %211 = bitcast %"class.blink::Member"* %189 to i8**
  %212 = load i8*, i8** %211, align 8
  %213 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %212) #6
  br label %209

214:                                              ; preds = %131
  %215 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %216 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %133, i64 0, i32 0, i32 0
  %217 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %216, align 8
  %218 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %128, align 8
  %219 = tail call zeroext i1 %215(%"class.blink::PerformanceEntry"* %217, %"class.blink::PerformanceEntry"* %218) #6
  br i1 %219, label %220, label %131

220:                                              ; preds = %214
  %221 = bitcast %"class.blink::Member"* %16 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = bitcast %"class.blink::Member"* %133 to i64*
  %224 = load i64, i64* %223, align 8
  store atomic i64 %224, i64* %221 monotonic, align 8
  store atomic i64 %222, i64* %223 monotonic, align 8
  %225 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %231, label %227

227:                                              ; preds = %220
  %228 = bitcast %"class.blink::Member"* %16 to i8**
  %229 = load i8*, i8** %228, align 8
  %230 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %229) #6
  br label %231

231:                                              ; preds = %227, %220
  %232 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %238, label %234

234:                                              ; preds = %231
  %235 = bitcast %"class.blink::Member"* %133 to i8**
  %236 = load i8*, i8** %235, align 8
  %237 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %236) #6
  br label %238

238:                                              ; preds = %231, %234
  %239 = add i32 %124, 1
  br label %240

240:                                              ; preds = %123, %238
  %241 = phi i32 [ %239, %238 ], [ %124, %123 ]
  %242 = phi %"class.blink::Member"* [ %133, %238 ], [ %8, %123 ]
  %243 = ptrtoint %"class.blink::Member"* %16 to i64
  %244 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 1
  %245 = icmp ult %"class.blink::Member"* %244, %242
  br i1 %245, label %246, label %292

246:                                              ; preds = %240, %288
  %247 = phi %"class.blink::Member"* [ %291, %288 ], [ %115, %240 ]
  %248 = phi i32 [ %289, %288 ], [ %241, %240 ]
  %249 = phi %"class.blink::Member"* [ %259, %288 ], [ %244, %240 ]
  %250 = phi %"class.blink::Member"* [ %263, %288 ], [ %242, %240 ]
  %251 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %247, i64 0, i32 0, i32 0
  br label %252

252:                                              ; preds = %252, %246
  %253 = phi %"class.blink::Member"* [ %249, %246 ], [ %259, %252 ]
  %254 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %255 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %253, i64 0, i32 0, i32 0
  %256 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %255, align 8
  %257 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %251, align 8
  %258 = tail call zeroext i1 %254(%"class.blink::PerformanceEntry"* %256, %"class.blink::PerformanceEntry"* %257) #6
  %259 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %253, i64 1
  br i1 %258, label %252, label %260

260:                                              ; preds = %252, %260
  %261 = phi %"class.blink::Member"* [ %263, %260 ], [ %250, %252 ]
  %262 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %263 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %261, i64 -1
  %264 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %263, i64 0, i32 0, i32 0
  %265 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %264, align 8
  %266 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %251, align 8
  %267 = tail call zeroext i1 %262(%"class.blink::PerformanceEntry"* %265, %"class.blink::PerformanceEntry"* %266) #6
  br i1 %267, label %268, label %260

268:                                              ; preds = %260
  %269 = icmp ugt %"class.blink::Member"* %253, %263
  br i1 %269, label %292, label %270

270:                                              ; preds = %268
  %271 = bitcast %"class.blink::Member"* %253 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = bitcast %"class.blink::Member"* %263 to i64*
  %274 = load i64, i64* %273, align 8
  store atomic i64 %274, i64* %271 monotonic, align 8
  store atomic i64 %272, i64* %273 monotonic, align 8
  %275 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %281, label %277

277:                                              ; preds = %270
  %278 = bitcast %"class.blink::Member"* %253 to i8**
  %279 = load i8*, i8** %278, align 8
  %280 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %279) #6
  br label %281

281:                                              ; preds = %277, %270
  %282 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %288, label %284

284:                                              ; preds = %281
  %285 = bitcast %"class.blink::Member"* %263 to i8**
  %286 = load i8*, i8** %285, align 8
  %287 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %286) #6
  br label %288

288:                                              ; preds = %281, %284
  %289 = add i32 %248, 1
  %290 = icmp eq %"class.blink::Member"* %247, %253
  %291 = select i1 %290, %"class.blink::Member"* %263, %"class.blink::Member"* %247
  br label %246

292:                                              ; preds = %268, %240
  %293 = phi %"class.blink::Member"* [ %115, %240 ], [ %247, %268 ]
  %294 = phi i32 [ %241, %240 ], [ %248, %268 ]
  %295 = phi %"class.blink::Member"* [ %244, %240 ], [ %253, %268 ]
  %296 = icmp eq %"class.blink::Member"* %295, %293
  br i1 %296, label %324, label %297

297:                                              ; preds = %292
  %298 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %299 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %293, i64 0, i32 0, i32 0
  %300 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %299, align 8
  %301 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %295, i64 0, i32 0, i32 0
  %302 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %301, align 8
  %303 = tail call zeroext i1 %298(%"class.blink::PerformanceEntry"* %300, %"class.blink::PerformanceEntry"* %302) #6
  br i1 %303, label %304, label %324

304:                                              ; preds = %297
  %305 = bitcast %"class.blink::Member"* %295 to i64*
  %306 = load i64, i64* %305, align 8
  %307 = bitcast %"class.blink::Member"* %293 to i64*
  %308 = load i64, i64* %307, align 8
  store atomic i64 %308, i64* %305 monotonic, align 8
  store atomic i64 %306, i64* %307 monotonic, align 8
  %309 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %315, label %311

311:                                              ; preds = %304
  %312 = bitcast %"class.blink::Member"* %295 to i8**
  %313 = load i8*, i8** %312, align 8
  %314 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %313) #6
  br label %315

315:                                              ; preds = %311, %304
  %316 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %322, label %318

318:                                              ; preds = %315
  %319 = bitcast %"class.blink::Member"* %293 to i8**
  %320 = load i8*, i8** %319, align 8
  %321 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %320) #6
  br label %322

322:                                              ; preds = %315, %318
  %323 = add i32 %294, 1
  br label %324

324:                                              ; preds = %292, %322, %297
  %325 = phi i32 [ %323, %322 ], [ %294, %297 ], [ %294, %292 ]
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %327, label %334

327:                                              ; preds = %324
  %328 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEbT0_SA_T_(%"class.blink::Member"* %16, %"class.blink::Member"* %295, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %2)
  %329 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %295, i64 1
  %330 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEbT0_SA_T_(%"class.blink::Member"* %329, %"class.blink::Member"* %5, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %2)
  br i1 %330, label %331, label %333

331:                                              ; preds = %327
  br i1 %328, label %345, label %332

332:                                              ; preds = %331, %343
  br label %4

333:                                              ; preds = %327
  br i1 %328, label %341, label %334

334:                                              ; preds = %333, %324
  %335 = ptrtoint %"class.blink::Member"* %295 to i64
  %336 = sub i64 %335, %243
  %337 = sub i64 %12, %335
  %338 = icmp slt i64 %336, %337
  br i1 %338, label %339, label %343

339:                                              ; preds = %334
  tail call void @_ZNSt3__16__sortIRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEvT0_SA_T_(%"class.blink::Member"* %16, %"class.blink::Member"* %295, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %2)
  %340 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %295, i64 1
  br label %341

341:                                              ; preds = %339, %333
  %342 = phi %"class.blink::Member"* [ %329, %333 ], [ %340, %339 ]
  br label %13

343:                                              ; preds = %334
  %344 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %295, i64 1
  tail call void @_ZNSt3__16__sortIRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEvT0_SA_T_(%"class.blink::Member"* %344, %"class.blink::Member"* %5, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %2)
  br label %332

345:                                              ; preds = %331, %171, %15, %15, %141, %168, %109, %63, %42, %39, %20, %46, %50, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_T_(%"class.blink::Member"*, %"class.blink::Member"*, %"class.blink::Member"*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %3, align 8
  %6 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %8, align 8
  %10 = tail call zeroext i1 %5(%"class.blink::PerformanceEntry"* %7, %"class.blink::PerformanceEntry"* %9) #6
  %11 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %3, align 8
  %12 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %12, align 8
  %14 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %6, align 8
  %15 = tail call zeroext i1 %11(%"class.blink::PerformanceEntry"* %13, %"class.blink::PerformanceEntry"* %14) #6
  br i1 %10, label %57, label %16

16:                                               ; preds = %4
  br i1 %15, label %17, label %114

17:                                               ; preds = %16
  %18 = bitcast %"class.blink::Member"* %1 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.blink::Member"* %2 to i64*
  %21 = load i64, i64* %20, align 8
  store atomic i64 %21, i64* %18 monotonic, align 8
  store atomic i64 %19, i64* %20 monotonic, align 8
  %22 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %17
  %25 = bitcast %"class.blink::Member"* %1 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #6
  br label %28

28:                                               ; preds = %24, %17
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %28
  %32 = bitcast %"class.blink::Member"* %2 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %33) #6
  br label %35

35:                                               ; preds = %28, %31
  %36 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %3, align 8
  %37 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %6, align 8
  %38 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %8, align 8
  %39 = tail call zeroext i1 %36(%"class.blink::PerformanceEntry"* %37, %"class.blink::PerformanceEntry"* %38) #6
  br i1 %39, label %40, label %114

40:                                               ; preds = %35
  %41 = bitcast %"class.blink::Member"* %0 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = load i64, i64* %18, align 8
  store atomic i64 %43, i64* %41 monotonic, align 8
  store atomic i64 %42, i64* %18 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::Member"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #6
  br label %50

50:                                               ; preds = %46, %40
  %51 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %114, label %53

53:                                               ; preds = %50
  %54 = bitcast %"class.blink::Member"* %1 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %55) #6
  br label %114

57:                                               ; preds = %4
  %58 = bitcast %"class.blink::Member"* %0 to i64*
  %59 = load i64, i64* %58, align 8
  br i1 %15, label %60, label %76

60:                                               ; preds = %57
  %61 = bitcast %"class.blink::Member"* %2 to i64*
  %62 = load i64, i64* %61, align 8
  store atomic i64 %62, i64* %58 monotonic, align 8
  store atomic i64 %59, i64* %61 monotonic, align 8
  %63 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %60
  %66 = bitcast %"class.blink::Member"* %0 to i8**
  %67 = load i8*, i8** %66, align 8
  %68 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %67) #6
  br label %69

69:                                               ; preds = %65, %60
  %70 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %114, label %72

72:                                               ; preds = %69
  %73 = bitcast %"class.blink::Member"* %2 to i8**
  %74 = load i8*, i8** %73, align 8
  %75 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %74) #6
  br label %114

76:                                               ; preds = %57
  %77 = bitcast %"class.blink::Member"* %1 to i64*
  %78 = load i64, i64* %77, align 8
  store atomic i64 %78, i64* %58 monotonic, align 8
  store atomic i64 %59, i64* %77 monotonic, align 8
  %79 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %76
  %82 = bitcast %"class.blink::Member"* %0 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %83) #6
  br label %85

85:                                               ; preds = %81, %76
  %86 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %92, label %88

88:                                               ; preds = %85
  %89 = bitcast %"class.blink::Member"* %1 to i8**
  %90 = load i8*, i8** %89, align 8
  %91 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %90) #6
  br label %92

92:                                               ; preds = %85, %88
  %93 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %3, align 8
  %94 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %12, align 8
  %95 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %6, align 8
  %96 = tail call zeroext i1 %93(%"class.blink::PerformanceEntry"* %94, %"class.blink::PerformanceEntry"* %95) #6
  br i1 %96, label %97, label %114

97:                                               ; preds = %92
  %98 = load i64, i64* %77, align 8
  %99 = bitcast %"class.blink::Member"* %2 to i64*
  %100 = load i64, i64* %99, align 8
  store atomic i64 %100, i64* %77 monotonic, align 8
  store atomic i64 %98, i64* %99 monotonic, align 8
  %101 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %107, label %103

103:                                              ; preds = %97
  %104 = bitcast %"class.blink::Member"* %1 to i8**
  %105 = load i8*, i8** %104, align 8
  %106 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %105) #6
  br label %107

107:                                              ; preds = %103, %97
  %108 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %107
  %111 = bitcast %"class.blink::Member"* %2 to i8**
  %112 = load i8*, i8** %111, align 8
  %113 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %112) #6
  br label %114

114:                                              ; preds = %110, %107, %72, %69, %53, %50, %92, %35, %16
  %115 = phi i32 [ 0, %16 ], [ 1, %35 ], [ 1, %92 ], [ 2, %50 ], [ 2, %53 ], [ 1, %69 ], [ 1, %72 ], [ 2, %107 ], [ 2, %110 ]
  ret i32 %115
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_T_(%"class.blink::Member"*, %"class.blink::Member"*, %"class.blink::Member"*, %"class.blink::Member"*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = tail call i32 @_ZNSt3__17__sort3IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_T_(%"class.blink::Member"* %0, %"class.blink::Member"* %1, %"class.blink::Member"* %2, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %4)
  %7 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %4, align 8
  %8 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 0, i32 0, i32 0
  %9 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %10, align 8
  %12 = tail call zeroext i1 %7(%"class.blink::PerformanceEntry"* %9, %"class.blink::PerformanceEntry"* %11) #6
  br i1 %12, label %13, label %81

13:                                               ; preds = %5
  %14 = bitcast %"class.blink::Member"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.blink::Member"* %3 to i64*
  %17 = load i64, i64* %16, align 8
  store atomic i64 %17, i64* %14 monotonic, align 8
  store atomic i64 %15, i64* %16 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.blink::Member"* %2 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #6
  br label %24

24:                                               ; preds = %20, %13
  %25 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %3 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %29) #6
  br label %31

31:                                               ; preds = %24, %27
  %32 = add i32 %6, 1
  %33 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %4, align 8
  %34 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %10, align 8
  %35 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 0, i32 0, i32 0
  %36 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %35, align 8
  %37 = tail call zeroext i1 %33(%"class.blink::PerformanceEntry"* %34, %"class.blink::PerformanceEntry"* %36) #6
  br i1 %37, label %38, label %81

38:                                               ; preds = %31
  %39 = bitcast %"class.blink::Member"* %1 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = load i64, i64* %14, align 8
  store atomic i64 %41, i64* %39 monotonic, align 8
  store atomic i64 %40, i64* %14 monotonic, align 8
  %42 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %38
  %45 = bitcast %"class.blink::Member"* %1 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %46) #6
  br label %48

48:                                               ; preds = %44, %38
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %55, label %51

51:                                               ; preds = %48
  %52 = bitcast %"class.blink::Member"* %2 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #6
  br label %55

55:                                               ; preds = %48, %51
  %56 = add i32 %6, 2
  %57 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %4, align 8
  %58 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %35, align 8
  %59 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 0, i32 0, i32 0
  %60 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %59, align 8
  %61 = tail call zeroext i1 %57(%"class.blink::PerformanceEntry"* %58, %"class.blink::PerformanceEntry"* %60) #6
  br i1 %61, label %62, label %81

62:                                               ; preds = %55
  %63 = bitcast %"class.blink::Member"* %0 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = load i64, i64* %39, align 8
  store atomic i64 %65, i64* %63 monotonic, align 8
  store atomic i64 %64, i64* %39 monotonic, align 8
  %66 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %72, label %68

68:                                               ; preds = %62
  %69 = bitcast %"class.blink::Member"* %0 to i8**
  %70 = load i8*, i8** %69, align 8
  %71 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %70) #6
  br label %72

72:                                               ; preds = %68, %62
  %73 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %72
  %76 = bitcast %"class.blink::Member"* %1 to i8**
  %77 = load i8*, i8** %76, align 8
  %78 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %77) #6
  br label %79

79:                                               ; preds = %72, %75
  %80 = add i32 %6, 3
  br label %81

81:                                               ; preds = %31, %79, %55, %5
  %82 = phi i32 [ %80, %79 ], [ %56, %55 ], [ %32, %31 ], [ %6, %5 ]
  ret i32 %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_SA_T_(%"class.blink::Member"*, %"class.blink::Member"*, %"class.blink::Member"*, %"class.blink::Member"*, %"class.blink::Member"*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_T_(%"class.blink::Member"* %0, %"class.blink::Member"* %1, %"class.blink::Member"* %2, %"class.blink::Member"* %3, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %5)
  %8 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %5, align 8
  %9 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %4, i64 0, i32 0, i32 0
  %10 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 0, i32 0, i32 0
  %12 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %11, align 8
  %13 = tail call zeroext i1 %8(%"class.blink::PerformanceEntry"* %10, %"class.blink::PerformanceEntry"* %12) #6
  br i1 %13, label %14, label %106

14:                                               ; preds = %6
  %15 = bitcast %"class.blink::Member"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.blink::Member"* %4 to i64*
  %18 = load i64, i64* %17, align 8
  store atomic i64 %18, i64* %15 monotonic, align 8
  store atomic i64 %16, i64* %17 monotonic, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.blink::Member"* %3 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %23) #6
  br label %25

25:                                               ; preds = %21, %14
  %26 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %25
  %29 = bitcast %"class.blink::Member"* %4 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #6
  br label %32

32:                                               ; preds = %25, %28
  %33 = add i32 %7, 1
  %34 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %5, align 8
  %35 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %11, align 8
  %36 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 0, i32 0, i32 0
  %37 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %36, align 8
  %38 = tail call zeroext i1 %34(%"class.blink::PerformanceEntry"* %35, %"class.blink::PerformanceEntry"* %37) #6
  br i1 %38, label %39, label %106

39:                                               ; preds = %32
  %40 = bitcast %"class.blink::Member"* %2 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = load i64, i64* %15, align 8
  store atomic i64 %42, i64* %40 monotonic, align 8
  store atomic i64 %41, i64* %15 monotonic, align 8
  %43 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %39
  %46 = bitcast %"class.blink::Member"* %2 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #6
  br label %49

49:                                               ; preds = %45, %39
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.blink::Member"* %3 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %54) #6
  br label %56

56:                                               ; preds = %49, %52
  %57 = add i32 %7, 2
  %58 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %5, align 8
  %59 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %36, align 8
  %60 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 0, i32 0, i32 0
  %61 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %60, align 8
  %62 = tail call zeroext i1 %58(%"class.blink::PerformanceEntry"* %59, %"class.blink::PerformanceEntry"* %61) #6
  br i1 %62, label %63, label %106

63:                                               ; preds = %56
  %64 = bitcast %"class.blink::Member"* %1 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = load i64, i64* %40, align 8
  store atomic i64 %66, i64* %64 monotonic, align 8
  store atomic i64 %65, i64* %40 monotonic, align 8
  %67 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %63
  %70 = bitcast %"class.blink::Member"* %1 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %71) #6
  br label %73

73:                                               ; preds = %69, %63
  %74 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %80, label %76

76:                                               ; preds = %73
  %77 = bitcast %"class.blink::Member"* %2 to i8**
  %78 = load i8*, i8** %77, align 8
  %79 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %78) #6
  br label %80

80:                                               ; preds = %73, %76
  %81 = add i32 %7, 3
  %82 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %5, align 8
  %83 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %60, align 8
  %84 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 0, i32 0, i32 0
  %85 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %84, align 8
  %86 = tail call zeroext i1 %82(%"class.blink::PerformanceEntry"* %83, %"class.blink::PerformanceEntry"* %85) #6
  br i1 %86, label %87, label %106

87:                                               ; preds = %80
  %88 = bitcast %"class.blink::Member"* %0 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = load i64, i64* %64, align 8
  store atomic i64 %90, i64* %88 monotonic, align 8
  store atomic i64 %89, i64* %64 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %97, label %93

93:                                               ; preds = %87
  %94 = bitcast %"class.blink::Member"* %0 to i8**
  %95 = load i8*, i8** %94, align 8
  %96 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #6
  br label %97

97:                                               ; preds = %93, %87
  %98 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %104, label %100

100:                                              ; preds = %97
  %101 = bitcast %"class.blink::Member"* %1 to i8**
  %102 = load i8*, i8** %101, align 8
  %103 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %102) #6
  br label %104

104:                                              ; preds = %97, %100
  %105 = add i32 %7, 4
  br label %106

106:                                              ; preds = %32, %80, %104, %56, %6
  %107 = phi i32 [ %105, %104 ], [ %81, %80 ], [ %57, %56 ], [ %33, %32 ], [ %7, %6 ]
  ret i32 %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEbT0_SA_T_(%"class.blink::Member"*, %"class.blink::Member"*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = ptrtoint %"class.blink::Member"* %1 to i64
  %5 = ptrtoint %"class.blink::Member"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  switch i64 %7, label %49 [
    i64 0, label %106
    i64 1, label %106
    i64 2, label %8
    i64 3, label %34
    i64 4, label %38
    i64 5, label %43
  ]

8:                                                ; preds = %3
  %9 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %10 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 -1
  %11 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 0, i32 0, i32 0
  %14 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %13, align 8
  %15 = tail call zeroext i1 %9(%"class.blink::PerformanceEntry"* %12, %"class.blink::PerformanceEntry"* %14) #6
  br i1 %15, label %16, label %106

16:                                               ; preds = %8
  %17 = bitcast %"class.blink::Member"* %0 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.blink::Member"* %10 to i64*
  %20 = load i64, i64* %19, align 8
  store atomic i64 %20, i64* %17 monotonic, align 8
  store atomic i64 %18, i64* %19 monotonic, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.blink::Member"* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %25) #6
  br label %27

27:                                               ; preds = %23, %16
  %28 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %106, label %30

30:                                               ; preds = %27
  %31 = bitcast %"class.blink::Member"* %10 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %32) #6
  br label %106

34:                                               ; preds = %3
  %35 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 1
  %36 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 -1
  %37 = tail call i32 @_ZNSt3__17__sort3IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_T_(%"class.blink::Member"* %0, %"class.blink::Member"* %35, %"class.blink::Member"* %36, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %2)
  br label %106

38:                                               ; preds = %3
  %39 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 1
  %40 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 2
  %41 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 -1
  %42 = tail call i32 @_ZNSt3__17__sort4IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_T_(%"class.blink::Member"* %0, %"class.blink::Member"* %39, %"class.blink::Member"* %40, %"class.blink::Member"* %41, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %2)
  br label %106

43:                                               ; preds = %3
  %44 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 1
  %45 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 2
  %46 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 3
  %47 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 -1
  %48 = tail call i32 @_ZNSt3__17__sort5IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_SA_T_(%"class.blink::Member"* %0, %"class.blink::Member"* %44, %"class.blink::Member"* %45, %"class.blink::Member"* %46, %"class.blink::Member"* %47, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %2)
  br label %106

49:                                               ; preds = %3
  %50 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 2
  %51 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 1
  %52 = tail call i32 @_ZNSt3__17__sort3IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_T_(%"class.blink::Member"* %0, %"class.blink::Member"* %51, %"class.blink::Member"* %50, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %2)
  %53 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 3
  %54 = icmp eq %"class.blink::Member"* %53, %1
  br i1 %54, label %106, label %55

55:                                               ; preds = %49, %99
  %56 = phi %"class.blink::Member"* [ %101, %99 ], [ %53, %49 ]
  %57 = phi i32 [ %100, %99 ], [ 0, %49 ]
  %58 = phi %"class.blink::Member"* [ %56, %99 ], [ %50, %49 ]
  %59 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %60 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %56, i64 0, i32 0, i32 0
  %61 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %58, i64 0, i32 0, i32 0
  %63 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %62, align 8
  %64 = tail call zeroext i1 %59(%"class.blink::PerformanceEntry"* %61, %"class.blink::PerformanceEntry"* %63) #6
  br i1 %64, label %65, label %99

65:                                               ; preds = %55
  %66 = bitcast %"class.blink::Member"* %56 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = inttoptr i64 %67 to %"class.blink::PerformanceEntry"*
  br label %69

69:                                               ; preds = %82, %65
  %70 = phi %"class.blink::Member"* [ %56, %65 ], [ %71, %82 ]
  %71 = phi %"class.blink::Member"* [ %58, %65 ], [ %84, %82 ]
  %72 = bitcast %"class.blink::Member"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.blink::Member"* %70 to i64*
  store atomic i64 %73, i64* %74 monotonic, align 8
  %75 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %80, label %77

77:                                               ; preds = %69
  %78 = inttoptr i64 %73 to i8*
  %79 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %78) #6
  br label %80

80:                                               ; preds = %69, %77
  %81 = icmp eq %"class.blink::Member"* %71, %0
  br i1 %81, label %88, label %82

82:                                               ; preds = %80
  %83 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %84 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %71, i64 -1
  %85 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %85, align 8
  %87 = tail call zeroext i1 %83(%"class.blink::PerformanceEntry"* %68, %"class.blink::PerformanceEntry"* %86) #6
  br i1 %87, label %69, label %88

88:                                               ; preds = %80, %82
  %89 = phi %"class.blink::Member"* [ %71, %82 ], [ %0, %80 ]
  %90 = bitcast %"class.blink::Member"* %89 to i64*
  store atomic i64 %67, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %88
  %94 = inttoptr i64 %67 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #6
  br label %96

96:                                               ; preds = %88, %93
  %97 = add i32 %57, 1
  %98 = icmp eq i32 %97, 8
  br i1 %98, label %103, label %99

99:                                               ; preds = %96, %55
  %100 = phi i32 [ %97, %96 ], [ %57, %55 ]
  %101 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %56, i64 1
  %102 = icmp eq %"class.blink::Member"* %101, %1
  br i1 %102, label %106, label %55

103:                                              ; preds = %96
  %104 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %56, i64 1
  %105 = icmp eq %"class.blink::Member"* %104, %1
  br label %106

106:                                              ; preds = %99, %103, %49, %30, %27, %8, %3, %3, %43, %38, %34
  %107 = phi i1 [ true, %43 ], [ true, %38 ], [ true, %34 ], [ true, %3 ], [ true, %3 ], [ true, %8 ], [ true, %27 ], [ true, %30 ], [ true, %49 ], [ %105, %103 ], [ true, %99 ]
  ret i1 %107
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector"*, %"class.blink::Member"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member"*, %"class.blink::Member"** %6, align 8
  %8 = icmp ugt %"class.blink::Member"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %7, i64 %10
  %12 = icmp ugt %"class.blink::Member"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %22) #6
  %23 = load %"class.blink::Member"*, %"class.blink::Member"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::Member"* %1 to i64
  %26 = ptrtoint %"class.blink::Member"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 3
  %29 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %37) #6
  %38 = load %"class.blink::Member"*, %"class.blink::Member"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::Member"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::Member"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %41, i64 %44
  %46 = bitcast %"class.blink::Member"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::Member"* %45 to i64*
  store atomic i64 %47, i64* %48 monotonic, align 8
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %40
  %52 = inttoptr i64 %47 to i8*
  %53 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #6
  br label %54

54:                                               ; preds = %40, %51
  %55 = load i32, i32* %3, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %3, align 4
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
