; ModuleID = '../../third_party/skia/src/pdf/SkPDFBitmap.cpp'
source_filename = "../../third_party/skia/src/pdf/SkPDFBitmap.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkPDFDocument = type { %class.SkDocument.base, %class.SkTHashMap, %class.SkTHashMap.7, %class.SkTHashMap.16, %class.SkTHashMap.25, %class.SkTHashMap.34, %class.SkTHashMap.43, %class.SkTHashMap.52, %class.SkTHashMap.52, %class.SkTHashMap.61, %class.SkTHashMap.70, %class.SkTHashMap.79, %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference, %"class.std::__1::vector", %"class.std::__1::vector.92", %class.SkPDFOffsetMap, %class.SkCanvas, %"class.std::__1::vector.122", %"class.std::__1::vector.142", %class.sk_sp.149, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %struct.SkUUID, %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference, %"struct.SkPDF::Metadata", float, float, %class.SkExecutor*, %class.SkPDFTagTree, %class.SkMutex, %class.SkSemaphore }
%class.SkDocument.base = type <{ %class.SkRefCnt.base, [4 x i8], %class.SkWStream*, i32 }>
%class.SkWStream = type { i32 (...)** }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.7 = type { %class.SkTHashTable.8 }
%class.SkTHashTable.8 = type { i32, i32, %class.SkAutoTArray.9 }
%class.SkAutoTArray.9 = type { %"class.std::__1::unique_ptr.10" }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.SkTHashTable<SkTHashMap<SkPDFGradientShader::Key, SkPDFIndirectReference, SkPDFGradientShader::KeyHash>::Pair, SkPDFGradientShader::Key, SkTHashMap<SkPDFGradientShader::Key, SkPDFIndirectReference, SkPDFGradientShader::KeyHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPDFGradientShader::Key, SkPDFIndirectReference, SkPDFGradientShader::KeyHash>::Pair, SkPDFGradientShader::Key, SkTHashMap<SkPDFGradientShader::Key, SkPDFIndirectReference, SkPDFGradientShader::KeyHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.16 = type { %class.SkTHashTable.17 }
%class.SkTHashTable.17 = type { i32, i32, %class.SkAutoTArray.18 }
%class.SkAutoTArray.18 = type { %"class.std::__1::unique_ptr.19" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.25 = type { %class.SkTHashTable.26 }
%class.SkTHashTable.26 = type { i32, i32, %class.SkAutoTArray.27 }
%class.SkAutoTArray.27 = type { %"class.std::__1::unique_ptr.28" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::unique_ptr<SkAdvancedTypefaceMetrics, std::__1::default_delete<SkAdvancedTypefaceMetrics> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::unique_ptr<SkAdvancedTypefaceMetrics, std::__1::default_delete<SkAdvancedTypefaceMetrics> >, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::unique_ptr<SkAdvancedTypefaceMetrics, std::__1::default_delete<SkAdvancedTypefaceMetrics> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::unique_ptr<SkAdvancedTypefaceMetrics, std::__1::default_delete<SkAdvancedTypefaceMetrics> >, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.34 = type { %class.SkTHashTable.35 }
%class.SkTHashTable.35 = type { i32, i32, %class.SkAutoTArray.36 }
%class.SkAutoTArray.36 = type { %"class.std::__1::unique_ptr.37" }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.43 = type { %class.SkTHashTable.44 }
%class.SkTHashTable.44 = type { i32, i32, %class.SkAutoTArray.45 }
%class.SkAutoTArray.45 = type { %"class.std::__1::unique_ptr.46" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<int, std::__1::allocator<int> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<int, std::__1::allocator<int> >, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<int, std::__1::allocator<int> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<int, std::__1::allocator<int> >, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.52 = type { %class.SkTHashTable.53 }
%class.SkTHashTable.53 = type { i32, i32, %class.SkAutoTArray.54 }
%class.SkAutoTArray.54 = type { %"class.std::__1::unique_ptr.55" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.61 = type { %class.SkTHashTable.62 }
%class.SkTHashTable.62 = type { i32, i32, %class.SkAutoTArray.63 }
%class.SkAutoTArray.63 = type { %"class.std::__1::unique_ptr.64" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.SkTHashTable<SkTHashMap<unsigned long, SkPDFFont, SkGoodHash>::Pair, unsigned long, SkTHashMap<unsigned long, SkPDFFont, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned long, SkPDFFont, SkGoodHash>::Pair, unsigned long, SkTHashMap<unsigned long, SkPDFFont, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.70 = type { %class.SkTHashTable.71 }
%class.SkTHashTable.71 = type { i32, i32, %class.SkAutoTArray.72 }
%class.SkAutoTArray.72 = type { %"class.std::__1::unique_ptr.73" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.SkTHashTable<SkTHashMap<SkPDFStrokeGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFStrokeGraphicState, SkTHashMap<SkPDFStrokeGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPDFStrokeGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFStrokeGraphicState, SkTHashMap<SkPDFStrokeGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.79 = type { %class.SkTHashTable.80 }
%class.SkTHashTable.80 = type { i32, i32, %class.SkAutoTArray.81 }
%class.SkAutoTArray.81 = type { %"class.std::__1::unique_ptr.82" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.SkTHashTable<SkTHashMap<SkPDFFillGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFFillGraphicState, SkTHashMap<SkPDFFillGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPDFFillGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFFillGraphicState, SkTHashMap<SkPDFFillGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.88"*, %"class.std::__1::unique_ptr.88"*, %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::unique_ptr.88" = type opaque
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.std::__1::unique_ptr.88"* }
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %struct.SkPDFNamedDestination*, %struct.SkPDFNamedDestination*, %"class.std::__1::__compressed_pair.96" }
%struct.SkPDFNamedDestination = type <{ %class.sk_sp.94, %struct.SkPoint, %struct.SkPDFIndirectReference, [4 x i8] }>
%class.sk_sp.94 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.95, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.95 = type { %"struct.std::__1::atomic" }
%struct.SkPoint = type { float, float }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %struct.SkPDFNamedDestination* }
%class.SkPDFOffsetMap = type { %"class.std::__1::vector.101", i64 }
%"class.std::__1::vector.101" = type { %"class.std::__1::__vector_base.102" }
%"class.std::__1::__vector_base.102" = type { i32*, i32*, %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { i32* }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.108, [384 x i64], %class.sk_sp.109, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.110", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.116" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.108 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.109 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.std::__1::vector.122" = type { %"class.std::__1::__vector_base.123" }
%"class.std::__1::__vector_base.123" = type { %"class.std::__1::unique_ptr.124"*, %"class.std::__1::unique_ptr.124"*, %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %class.SkPDFDict* }
%class.SkPDFDict = type { %class.SkPDFObject, %"class.std::__1::vector.127" }
%class.SkPDFObject = type { i32 (...)** }
%"class.std::__1::vector.127" = type { %"class.std::__1::__vector_base.128" }
%"class.std::__1::__vector_base.128" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.129" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"struct.std::__1::pair"* }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.std::__1::unique_ptr.124"* }
%"class.std::__1::vector.142" = type { %"class.std::__1::__vector_base.143" }
%"class.std::__1::__vector_base.143" = type { %struct.SkPDFIndirectReference*, %struct.SkPDFIndirectReference*, %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %struct.SkPDFIndirectReference* }
%class.sk_sp.149 = type { %class.SkPDFDevice* }
%class.SkPDFDevice = type opaque
%struct.SkUUID = type { [16 x i8] }
%struct.SkPDFIndirectReference = type { i32 }
%"struct.SkPDF::Metadata" = type <{ %class.SkString, %class.SkString, %class.SkString, %class.SkString, %class.SkString, %class.SkString, %"struct.SkTime::DateTime", %"struct.SkTime::DateTime", float, i8, [3 x i8], i32, %"struct.SkPDF::StructureElementNode"*, %class.SkExecutor*, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.150 }
%class.sk_sp.150 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.SkTime::DateTime" = type { i16, i16, i8, i8, i8, i8, i8, i8 }
%"struct.SkPDF::StructureElementNode" = type <{ %class.SkString, %"class.std::__1::vector.151", i32, [4 x i8], %"class.std::__1::vector.101", %"class.SkPDF::AttributeList", %class.SkString, %class.SkString, i32, [4 x i8] }>
%"class.std::__1::vector.151" = type { %"class.std::__1::__vector_base.152" }
%"class.std::__1::__vector_base.152" = type { %"class.std::__1::unique_ptr.153"*, %"class.std::__1::unique_ptr.153"*, %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::unique_ptr.153" = type opaque
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.std::__1::unique_ptr.153"* }
%"class.SkPDF::AttributeList" = type { %"class.std::__1::unique_ptr.159" }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %class.SkPDFArray* }
%class.SkPDFArray = type { %class.SkPDFObject, %"class.std::__1::vector.162" }
%"class.std::__1::vector.162" = type { %"class.std::__1::__vector_base.163" }
%"class.std::__1::__vector_base.163" = type { %class.SkPDFUnion*, %class.SkPDFUnion*, %"class.std::__1::__compressed_pair.164" }
%class.SkPDFUnion = type opaque
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %class.SkPDFUnion* }
%class.SkExecutor = type { i32 (...)** }
%class.SkPDFTagTree = type { %class.SkArenaAlloc, %class.SkTHashMap.172, %struct.SkPDFTagNode*, %class.SkTArray, %"class.std::__1::vector.182", %"class.std::__1::vector.101" }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%class.SkTHashMap.172 = type { %class.SkTHashTable.173 }
%class.SkTHashTable.173 = type { i32, i32, %class.SkAutoTArray.174 }
%class.SkAutoTArray.174 = type { %"class.std::__1::unique_ptr.175" }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.SkTHashTable<SkTHashMap<int, SkPDFTagNode *, SkGoodHash>::Pair, int, SkTHashMap<int, SkPDFTagNode *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkPDFTagNode *, SkGoodHash>::Pair, int, SkTHashMap<int, SkPDFTagNode *, SkGoodHash>::Pair>::Slot" = type opaque
%struct.SkPDFTagNode = type opaque
%class.SkTArray = type { %class.SkTArray.181*, i64 }
%class.SkTArray.181 = type opaque
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.SkPDFTagTree::IDTreeEntry"*, %"struct.SkPDFTagTree::IDTreeEntry"*, %"class.std::__1::__compressed_pair.184" }
%"struct.SkPDFTagTree::IDTreeEntry" = type { i32, %struct.SkPDFIndirectReference }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.SkPDFTagTree::IDTreeEntry"* }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkDynamicMemoryWStream = type { %class.SkWStream, %"struct.SkDynamicMemoryWStream::Block"*, %"struct.SkDynamicMemoryWStream::Block"*, i64 }
%"struct.SkDynamicMemoryWStream::Block" = type opaque
%class.SkDeflateWStream = type { %class.SkWStream, %"class.std::__1::unique_ptr.192" }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"struct.SkDeflateWStream::Impl"* }
%"struct.SkDeflateWStream::Impl" = type opaque
%class.SkBitmap = type { %class.sk_sp.189, %class.SkPixmap, %class.sk_sp.190 }
%class.sk_sp.189 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.190 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%class.GrDirectContext = type opaque
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"class.std::__1::__function::__default_alloc_func" = type { %class.anon }
%class.anon = type <{ %class.SkImage*, i32, [4 x i8], %class.SkPDFDocument*, %struct.SkPDFIndirectReference, [4 x i8] }>
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>

@.str = private unnamed_addr constant [10 x i8] c"DeviceRGB\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"DeviceGray\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"XObject\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"Subtype\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"Image\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"Width\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"Height\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"ColorSpace\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"SMask\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"BitsPerComponent\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"Filter\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"DCTDecode\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"FlateDecode\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"ColorTransform\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"Length\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c" stream\0A\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"\0Aendstream\00", align 1
@_ZTV22SkDynamicMemoryWStream = external unnamed_addr constant { [7 x i8*] }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZ19SkPDFSerializeImagePK7SkImageP13SkPDFDocumentiE3$_0FvvEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZ19SkPDFSerializeImagePK7SkImageP13SkPDFDocumentiE3$_0FvvEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZ19SkPDFSerializeImagePK7SkImageP13SkPDFDocumentiE3$_0FvvEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z15serialize_imagePK7SkImageiP13SkPDFDocument22SkPDFIndirectReference(%class.SkImage*, i32, %class.SkPDFDocument*, i32) local_unnamed_addr #0 {
  %5 = alloca %struct.SkImageInfo, align 16
  %6 = alloca %struct.SkImageInfo, align 16
  %7 = alloca %struct.SkImageInfo, align 8
  %8 = alloca %class.SkPDFDict, align 8
  %9 = alloca [4096 x i8], align 16
  %10 = alloca %class.SkPDFDict, align 8
  %11 = alloca %class.SkDynamicMemoryWStream, align 8
  %12 = alloca %class.SkDeflateWStream, align 8
  %13 = alloca [4092 x i8], align 16
  %14 = alloca %class.SkDynamicMemoryWStream, align 8
  %15 = alloca %class.SkDeflateWStream, align 8
  %16 = alloca [3072 x i8], align 16
  %17 = alloca %class.sk_sp.94, align 8
  %18 = alloca %class.sk_sp.94, align 8
  %19 = alloca %class.SkBitmap, align 8
  %20 = alloca %class.sk_sp.94, align 8
  %21 = alloca %class.sk_sp.94, align 8
  %22 = getelementptr inbounds %class.SkImage, %class.SkImage* %0, i64 0, i32 2, i32 1, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %class.SkImage, %class.SkImage* %0, i64 0, i32 2, i32 1, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = shl nuw i64 %26, 32
  %28 = zext i32 %23 to i64
  %29 = or i64 %27, %28
  %30 = bitcast %class.sk_sp.94* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #6
  %31 = getelementptr inbounds %class.sk_sp.94, %class.sk_sp.94* %17, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %31, align 8
  call void @_ZNK7SkImage14refEncodedDataEv(%class.sk_sp.94* nonnull sret %17, %class.SkImage* %0) #6
  %32 = load %class.SkData*, %class.SkData** %31, align 8
  %33 = icmp eq %class.SkData* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %4
  %35 = ptrtoint %class.SkData* %32 to i64
  store %class.SkData* null, %class.SkData** %31, align 8
  %36 = bitcast %class.sk_sp.94* %18 to i64*
  store i64 %35, i64* %36, align 8
  %37 = call fastcc zeroext i1 @_ZL7do_jpeg5sk_spI6SkDataEP13SkPDFDocument7SkISize22SkPDFIndirectReference(%class.sk_sp.94* nonnull %18, %class.SkPDFDocument* %2, i64 %29, i32 %3)
  %38 = getelementptr inbounds %class.SkData, %class.SkData* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %43

41:                                               ; preds = %34
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %32) #6
  %42 = bitcast %class.SkData* %32 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %42) #6
  br i1 %37, label %550, label %44

43:                                               ; preds = %34
  br i1 %37, label %550, label %44

44:                                               ; preds = %4, %41, %43
  %45 = bitcast %class.SkBitmap* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %45) #6
  %46 = bitcast %class.SkBitmap* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %19) #6
  %47 = load i32, i32* %22, align 4, !noalias !2
  %48 = load i32, i32* %24, align 4, !noalias !2
  %49 = call i32 @_ZNK7SkImage9colorTypeEv(%class.SkImage* %0) #6
  switch i32 %49, label %86 [
    i32 1, label %50
    i32 11, label %68
  ]

50:                                               ; preds = %44
  %51 = bitcast %struct.SkImageInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #6, !noalias !2
  %52 = zext i32 %48 to i64
  %53 = shl nuw i64 %52, 32
  %54 = zext i32 %47 to i64
  %55 = or i64 %53, %54
  %56 = bitcast %struct.SkImageInfo* %5 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934593>, <2 x i64>* %56, align 16, !alias.scope !5, !noalias !2
  %57 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 1
  %58 = bitcast %struct.SkISize* %57 to i64*
  store i64 %55, i64* %58, align 16, !alias.scope !5, !noalias !2
  call void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap* nonnull %19, %struct.SkImageInfo* nonnull dereferenceable(24) %5) #6
  %59 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 0, i32 0
  %60 = load %class.SkColorSpace*, %class.SkColorSpace** %59, align 16, !noalias !2
  %61 = icmp eq %class.SkColorSpace* %60, null
  br i1 %61, label %110, label %62

62:                                               ; preds = %50
  %63 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %110

66:                                               ; preds = %62
  %67 = bitcast %class.SkColorSpace* %60 to i8*
  call void @_ZdlPv(i8* %67) #7
  br label %110

68:                                               ; preds = %44
  %69 = bitcast %struct.SkImageInfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #6, !noalias !2
  %70 = zext i32 %48 to i64
  %71 = shl nuw i64 %70, 32
  %72 = zext i32 %47 to i64
  %73 = or i64 %71, %72
  %74 = bitcast %struct.SkImageInfo* %6 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4294967307>, <2 x i64>* %74, align 16, !alias.scope !10, !noalias !2
  %75 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 1
  %76 = bitcast %struct.SkISize* %75 to i64*
  store i64 %73, i64* %76, align 16, !alias.scope !10, !noalias !2
  call void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap* nonnull %19, %struct.SkImageInfo* nonnull dereferenceable(24) %6) #6
  %77 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 0, i32 0
  %78 = load %class.SkColorSpace*, %class.SkColorSpace** %77, align 16, !noalias !2
  %79 = icmp eq %class.SkColorSpace* %78, null
  br i1 %79, label %110, label %80

80:                                               ; preds = %68
  %81 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw add i32* %81, i32 -1 acq_rel
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %110

84:                                               ; preds = %80
  %85 = bitcast %class.SkColorSpace* %78 to i8*
  call void @_ZdlPv(i8* %85) #7
  br label %110

86:                                               ; preds = %44
  %87 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %19, i64 0, i32 1, i32 2, i32 0, i32 2
  %88 = load i32, i32* %87, align 4, !alias.scope !2
  %89 = icmp eq i32 %88, 1
  %90 = bitcast %struct.SkImageInfo* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #6, !noalias !2
  %91 = select i1 %89, i64 4294967302, i64 12884901894
  %92 = zext i32 %48 to i64
  %93 = shl nuw i64 %92, 32
  %94 = zext i32 %47 to i64
  %95 = or i64 %93, %94
  %96 = bitcast %struct.SkImageInfo* %7 to i64*
  store i64 0, i64* %96, align 8, !alias.scope !13, !noalias !2
  %97 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 0, i32 1
  %98 = bitcast i32* %97 to i64*
  store i64 %91, i64* %98, align 8, !alias.scope !13, !noalias !2
  %99 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 1
  %100 = bitcast %struct.SkISize* %99 to i64*
  store i64 %95, i64* %100, align 8, !alias.scope !13, !noalias !2
  call void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap* nonnull %19, %struct.SkImageInfo* nonnull dereferenceable(24) %7) #6
  %101 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 0, i32 0, i32 0
  %102 = load %class.SkColorSpace*, %class.SkColorSpace** %101, align 8, !noalias !2
  %103 = icmp eq %class.SkColorSpace* %102, null
  br i1 %103, label %110, label %104

104:                                              ; preds = %86
  %105 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = atomicrmw add i32* %105, i32 -1 acq_rel
  %107 = icmp eq i32 %106, 1
  br i1 %107, label %108, label %110

108:                                              ; preds = %104
  %109 = bitcast %class.SkColorSpace* %102 to i8*
  call void @_ZdlPv(i8* %109) #7
  br label %110

110:                                              ; preds = %86, %104, %108, %68, %80, %84, %50, %62, %66
  %111 = phi i8* [ %51, %66 ], [ %51, %62 ], [ %51, %50 ], [ %69, %84 ], [ %69, %80 ], [ %69, %68 ], [ %90, %108 ], [ %90, %104 ], [ %90, %86 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %111) #6, !noalias !2
  %112 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %19, i64 0, i32 1
  %113 = call zeroext i1 @_ZNK7SkImage10readPixelsEP15GrDirectContextRK8SkPixmapiiNS_11CachingHintE(%class.SkImage* %0, %class.GrDirectContext* null, %class.SkPixmap* dereferenceable(40) %112, i32 0, i32 0, i32 0) #6
  br i1 %113, label %115, label %114

114:                                              ; preds = %110
  call void @_ZNK8SkBitmap10eraseColorEj(%class.SkBitmap* nonnull %19, i32 -16777216) #6
  br label %115

115:                                              ; preds = %110, %114
  %116 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %19, i64 0, i32 1, i32 2, i32 0, i32 2
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %117, 1
  br i1 %118, label %125, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %19, i64 0, i32 1, i32 2, i32 0, i32 1
  %121 = load i32, i32* %120, align 8
  %122 = call zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32 %121) #6
  br i1 %122, label %125, label %123

123:                                              ; preds = %119
  %124 = call zeroext i1 @_ZNK8SkPixmap15computeIsOpaqueEv(%class.SkPixmap* %112) #6
  br label %125

125:                                              ; preds = %115, %123, %119
  %126 = phi i1 [ true, %119 ], [ %124, %123 ], [ true, %115 ]
  %127 = icmp sgt i32 %1, 100
  %128 = xor i1 %126, true
  %129 = or i1 %127, %128
  br i1 %129, label %158, label %130

130:                                              ; preds = %125
  %131 = bitcast %class.sk_sp.94* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #6
  %132 = getelementptr inbounds %class.sk_sp.94, %class.sk_sp.94* %20, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %132, align 8
  call void @_ZNK7SkImage12encodeToDataE20SkEncodedImageFormati(%class.sk_sp.94* nonnull sret %20, %class.SkImage* %0, i32 3, i32 %1) #6
  %133 = load %class.SkData*, %class.SkData** %132, align 8
  %134 = icmp eq %class.SkData* %133, null
  br i1 %134, label %135, label %136

135:                                              ; preds = %130
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #6
  br label %158

136:                                              ; preds = %130
  %137 = ptrtoint %class.SkData* %133 to i64
  store %class.SkData* null, %class.SkData** %132, align 8
  %138 = bitcast %class.sk_sp.94* %21 to i64*
  store i64 %137, i64* %138, align 8
  %139 = call fastcc zeroext i1 @_ZL7do_jpeg5sk_spI6SkDataEP13SkPDFDocument7SkISize22SkPDFIndirectReference(%class.sk_sp.94* nonnull %21, %class.SkPDFDocument* %2, i64 %29, i32 %3)
  %140 = getelementptr inbounds %class.SkData, %class.SkData* %133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = atomicrmw add i32* %140, i32 -1 acq_rel
  %142 = icmp eq i32 %141, 1
  br i1 %142, label %143, label %145

143:                                              ; preds = %136
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %133) #6
  %144 = bitcast %class.SkData* %133 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %144) #6
  br i1 %139, label %146, label %147

145:                                              ; preds = %136
  br i1 %139, label %146, label %147

146:                                              ; preds = %143, %145
  br label %147

147:                                              ; preds = %143, %145, %146
  %148 = phi i1 [ true, %143 ], [ true, %145 ], [ false, %146 ]
  %149 = load %class.SkData*, %class.SkData** %132, align 8
  %150 = icmp eq %class.SkData* %149, null
  br i1 %150, label %157, label %151

151:                                              ; preds = %147
  %152 = getelementptr inbounds %class.SkData, %class.SkData* %149, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = atomicrmw add i32* %152, i32 -1 acq_rel
  %154 = icmp eq i32 %153, 1
  br i1 %154, label %155, label %157

155:                                              ; preds = %151
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %149) #6
  %156 = bitcast %class.SkData* %149 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %156) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #6
  br i1 %148, label %158, label %549

157:                                              ; preds = %147, %151
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #6
  br i1 %148, label %158, label %549

158:                                              ; preds = %155, %135, %125, %157
  br i1 %126, label %162, label %159

159:                                              ; preds = %158
  %160 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %2, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = atomicrmw add i32* %160, i32 1 seq_cst
  br label %162

162:                                              ; preds = %159, %158
  %163 = phi i32 [ -1, %158 ], [ %161, %159 ]
  %164 = bitcast %class.SkDynamicMemoryWStream* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %164) #6
  %165 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %14, i64 0, i32 0, i32 0
  %166 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %14, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %165, align 8
  %167 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %166 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %167, i8 0, i64 24, i1 false) #6
  %168 = bitcast %class.SkDeflateWStream* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %168) #6
  %169 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %14, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 -86, i64 16, i1 false) #6
  call void @_ZN16SkDeflateWStreamC1EP9SkWStreamib(%class.SkDeflateWStream* nonnull %15, %class.SkWStream* nonnull %169, i32 -1, i1 zeroext false) #6
  %170 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %19, i64 0, i32 1, i32 2, i32 0, i32 1
  %171 = load i32, i32* %170, align 8
  switch i32 %171, label %208 [
    i32 1, label %172
    i32 11, label %198
  ]

172:                                              ; preds = %162
  %173 = getelementptr inbounds %class.SkDeflateWStream, %class.SkDeflateWStream* %15, i64 0, i32 0
  %174 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %19, i64 0, i32 1, i32 2, i32 1, i32 0
  %175 = load i32, i32* %174, align 8
  %176 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %19, i64 0, i32 1, i32 2, i32 1, i32 1
  %177 = load i32, i32* %176, align 4
  %178 = mul nsw i32 %177, %175
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds [4096 x i8], [4096 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %180) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %180, i8 0, i64 4096, i1 false) #6
  %181 = lshr i64 %179, 12
  %182 = icmp eq i64 %181, 0
  %183 = bitcast %class.SkDeflateWStream* %15 to i1 (%class.SkWStream*, i8*, i64)***
  br i1 %182, label %192, label %184

184:                                              ; preds = %172, %184
  %185 = phi i64 [ %190, %184 ], [ 0, %172 ]
  %186 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %183, align 8
  %187 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %186, i64 2
  %188 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %187, align 8
  %189 = call zeroext i1 %188(%class.SkWStream* nonnull %173, i8* nonnull %180, i64 4096) #6
  %190 = add nuw nsw i64 %185, 1
  %191 = icmp eq i64 %190, %181
  br i1 %191, label %192, label %184

192:                                              ; preds = %184, %172
  %193 = and i64 %179, 4095
  %194 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %183, align 8
  %195 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %194, i64 2
  %196 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %195, align 8
  %197 = call zeroext i1 %196(%class.SkWStream* nonnull %173, i8* nonnull %180, i64 %193) #6
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %180) #6
  br label %430

198:                                              ; preds = %162
  %199 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %112, i64 0, i32 0
  %200 = load i8*, i8** %199, align 8
  %201 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %19, i64 0, i32 1, i32 2, i32 1, i32 0
  %202 = load i32, i32* %201, align 8
  %203 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %19, i64 0, i32 1, i32 2, i32 1, i32 1
  %204 = load i32, i32* %203, align 4
  %205 = mul nsw i32 %204, %202
  %206 = sext i32 %205 to i64
  %207 = call zeroext i1 @_ZN16SkDeflateWStream5writeEPKvm(%class.SkDeflateWStream* nonnull %15, i8* %200, i64 %206) #6
  br label %430

208:                                              ; preds = %162
  %209 = getelementptr inbounds [3072 x i8], [3072 x i8]* %16, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3072, i8* nonnull %209) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %209, i8 -86, i64 3072, i1 false) #6
  %210 = getelementptr inbounds [3072 x i8], [3072 x i8]* %16, i64 0, i64 3072
  %211 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %19, i64 0, i32 1, i32 2, i32 1, i32 1
  %212 = load i32, i32* %211, align 4
  %213 = icmp sgt i32 %212, 0
  br i1 %213, label %214, label %219

214:                                              ; preds = %208
  %215 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %112, i64 0, i32 0
  %216 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %19, i64 0, i32 1, i32 1
  %217 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %19, i64 0, i32 1, i32 2, i32 1, i32 0
  %218 = load i32, i32* %217, align 8
  br label %225

219:                                              ; preds = %249, %208
  %220 = phi i8* [ %209, %208 ], [ %253, %249 ]
  %221 = ptrtoint i8* %220 to i64
  %222 = ptrtoint [3072 x i8]* %16 to i64
  %223 = sub i64 %221, %222
  %224 = call zeroext i1 @_ZN16SkDeflateWStream5writeEPKvm(%class.SkDeflateWStream* nonnull %15, i8* nonnull %209, i64 %223) #6
  call void @llvm.lifetime.end.p0i8(i64 3072, i8* nonnull %209) #6
  br label %430

225:                                              ; preds = %249, %214
  %226 = phi i32 [ %212, %214 ], [ %251, %249 ]
  %227 = phi i32 [ %218, %214 ], [ %252, %249 ]
  %228 = phi i64 [ 0, %214 ], [ %250, %249 ]
  %229 = phi i8* [ %209, %214 ], [ %253, %249 ]
  %230 = icmp sgt i32 %227, 0
  br i1 %230, label %233, label %231

231:                                              ; preds = %225
  %232 = add nuw nsw i64 %228, 1
  br label %249

233:                                              ; preds = %225
  %234 = load i8*, i8** %215, align 8
  %235 = load i64, i64* %216, align 8
  %236 = mul i64 %235, %228
  %237 = getelementptr inbounds i8, i8* %234, i64 %236
  %238 = bitcast i8* %237 to i32*
  %239 = icmp ugt i64 %228, 1
  %240 = select i1 %239, i64 %228, i64 1
  %241 = trunc i64 %240 to i32
  %242 = add nsw i32 %241, -1
  %243 = add nuw nsw i64 %228, 1
  %244 = and i64 %240, 4294967295
  %245 = add nsw i64 %244, -1
  %246 = trunc i64 %243 to i32
  br label %256

247:                                              ; preds = %425
  %248 = load i32, i32* %211, align 4
  br label %249

249:                                              ; preds = %247, %231
  %250 = phi i64 [ %232, %231 ], [ %243, %247 ]
  %251 = phi i32 [ %226, %231 ], [ %248, %247 ]
  %252 = phi i32 [ %227, %231 ], [ %428, %247 ]
  %253 = phi i8* [ %229, %231 ], [ %426, %247 ]
  %254 = sext i32 %251 to i64
  %255 = icmp slt i64 %250, %254
  br i1 %255, label %225, label %219

256:                                              ; preds = %425, %233
  %257 = phi i32 [ %227, %233 ], [ %428, %425 ]
  %258 = phi i8* [ %229, %233 ], [ %426, %425 ]
  %259 = phi i32* [ %238, %233 ], [ %265, %425 ]
  %260 = phi i32 [ 0, %233 ], [ %427, %425 ]
  %261 = icmp ugt i32 %260, 1
  %262 = select i1 %261, i32 %260, i32 1
  %263 = zext i32 %262 to i64
  %264 = add nsw i64 %263, -1
  %265 = getelementptr inbounds i32, i32* %259, i64 1
  %266 = load i32, i32* %259, align 4
  %267 = icmp ult i32 %266, 16777216
  br i1 %267, label %268, label %412

268:                                              ; preds = %256
  %269 = load i32, i32* %211, align 4
  %270 = add nsw i32 %269, -1
  %271 = sext i32 %270 to i64
  %272 = icmp slt i64 %228, %271
  %273 = select i1 %272, i32 %246, i32 %270
  %274 = icmp ugt i32 %260, 1
  %275 = select i1 %274, i32 %260, i32 1
  %276 = add nuw nsw i32 %260, 1
  %277 = add nsw i32 %257, -1
  %278 = icmp slt i32 %277, %276
  %279 = select i1 %278, i32 %277, i32 %276
  %280 = icmp sgt i32 %242, %273
  br i1 %280, label %412, label %281

281:                                              ; preds = %268
  %282 = add nsw i32 %275, -1
  %283 = load i8*, i8** %215, align 8
  %284 = load i64, i64* %216, align 8
  %285 = icmp sgt i32 %282, %279
  %286 = zext i32 %275 to i64
  %287 = add nsw i64 %286, -1
  %288 = sext i32 %279 to i64
  %289 = sext i32 %273 to i64
  %290 = icmp sgt i64 %264, %288
  %291 = select i1 %290, i64 %264, i64 %288
  %292 = add nsw i64 %291, 2
  %293 = sub nsw i64 %292, %263
  %294 = icmp ult i64 %293, 4
  %295 = and i64 %293, -4
  %296 = add nsw i64 %287, %295
  %297 = icmp eq i64 %293, %295
  br label %300

298:                                              ; preds = %368
  %299 = icmp eq i32 %371, 0
  br i1 %299, label %412, label %401

300:                                              ; preds = %368, %281
  %301 = phi i64 [ %373, %368 ], [ %245, %281 ]
  %302 = phi i32 [ %372, %368 ], [ 0, %281 ]
  %303 = phi i32 [ %371, %368 ], [ 0, %281 ]
  %304 = phi i32 [ %370, %368 ], [ 0, %281 ]
  %305 = phi i32 [ %369, %368 ], [ 0, %281 ]
  %306 = mul i64 %301, %284
  %307 = getelementptr inbounds i8, i8* %283, i64 %306
  %308 = bitcast i8* %307 to i32*
  br i1 %285, label %368, label %309

309:                                              ; preds = %300
  br i1 %294, label %310, label %316

310:                                              ; preds = %347, %309
  %311 = phi i64 [ %287, %309 ], [ %296, %347 ]
  %312 = phi i32 [ %302, %309 ], [ %367, %347 ]
  %313 = phi i32 [ %303, %309 ], [ %362, %347 ]
  %314 = phi i32 [ %304, %309 ], [ %357, %347 ]
  %315 = phi i32 [ %305, %309 ], [ %352, %347 ]
  br label %375

316:                                              ; preds = %309
  %317 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %302, i32 0
  %318 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %303, i32 0
  %319 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %304, i32 0
  %320 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %305, i32 0
  br label %321

321:                                              ; preds = %321, %316
  %322 = phi i64 [ 0, %316 ], [ %345, %321 ]
  %323 = phi <4 x i32> [ %317, %316 ], [ %344, %321 ]
  %324 = phi <4 x i32> [ %318, %316 ], [ %342, %321 ]
  %325 = phi <4 x i32> [ %319, %316 ], [ %339, %321 ]
  %326 = phi <4 x i32> [ %320, %316 ], [ %338, %321 ]
  %327 = add i64 %287, %322
  %328 = getelementptr inbounds i32, i32* %308, i64 %327
  %329 = bitcast i32* %328 to <4 x i32>*
  %330 = load <4 x i32>, <4 x i32>* %329, align 4
  %331 = icmp eq <4 x i32> %330, zeroinitializer
  %332 = lshr <4 x i32> %330, <i32 16, i32 16, i32 16, i32 16>
  %333 = and <4 x i32> %332, <i32 255, i32 255, i32 255, i32 255>
  %334 = lshr <4 x i32> %330, <i32 8, i32 8, i32 8, i32 8>
  %335 = and <4 x i32> %334, <i32 255, i32 255, i32 255, i32 255>
  %336 = and <4 x i32> %330, <i32 255, i32 255, i32 255, i32 255>
  %337 = select <4 x i1> %331, <4 x i32> zeroinitializer, <4 x i32> %335
  %338 = add <4 x i32> %326, %337
  %339 = add <4 x i32> %325, %336
  %340 = xor <4 x i1> %331, <i1 true, i1 true, i1 true, i1 true>
  %341 = zext <4 x i1> %340 to <4 x i32>
  %342 = add <4 x i32> %324, %341
  %343 = select <4 x i1> %331, <4 x i32> zeroinitializer, <4 x i32> %333
  %344 = add <4 x i32> %323, %343
  %345 = add i64 %322, 4
  %346 = icmp eq i64 %345, %295
  br i1 %346, label %347, label %321, !llvm.loop !16

347:                                              ; preds = %321
  %348 = shufflevector <4 x i32> %338, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %349 = add <4 x i32> %338, %348
  %350 = shufflevector <4 x i32> %349, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %351 = add <4 x i32> %349, %350
  %352 = extractelement <4 x i32> %351, i32 0
  %353 = shufflevector <4 x i32> %339, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %354 = add <4 x i32> %339, %353
  %355 = shufflevector <4 x i32> %354, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %356 = add <4 x i32> %354, %355
  %357 = extractelement <4 x i32> %356, i32 0
  %358 = shufflevector <4 x i32> %342, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %359 = add <4 x i32> %342, %358
  %360 = shufflevector <4 x i32> %359, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %361 = add <4 x i32> %359, %360
  %362 = extractelement <4 x i32> %361, i32 0
  %363 = shufflevector <4 x i32> %344, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %364 = add <4 x i32> %344, %363
  %365 = shufflevector <4 x i32> %364, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %366 = add <4 x i32> %364, %365
  %367 = extractelement <4 x i32> %366, i32 0
  br i1 %297, label %368, label %310

368:                                              ; preds = %394, %347, %300
  %369 = phi i32 [ %305, %300 ], [ %352, %347 ], [ %395, %394 ]
  %370 = phi i32 [ %304, %300 ], [ %357, %347 ], [ %396, %394 ]
  %371 = phi i32 [ %303, %300 ], [ %362, %347 ], [ %397, %394 ]
  %372 = phi i32 [ %302, %300 ], [ %367, %347 ], [ %398, %394 ]
  %373 = add nsw i64 %301, 1
  %374 = icmp slt i64 %301, %289
  br i1 %374, label %300, label %298

375:                                              ; preds = %310, %394
  %376 = phi i64 [ %399, %394 ], [ %311, %310 ]
  %377 = phi i32 [ %398, %394 ], [ %312, %310 ]
  %378 = phi i32 [ %397, %394 ], [ %313, %310 ]
  %379 = phi i32 [ %396, %394 ], [ %314, %310 ]
  %380 = phi i32 [ %395, %394 ], [ %315, %310 ]
  %381 = getelementptr inbounds i32, i32* %308, i64 %376
  %382 = load i32, i32* %381, align 4
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %394, label %384

384:                                              ; preds = %375
  %385 = lshr i32 %382, 16
  %386 = and i32 %385, 255
  %387 = add i32 %386, %377
  %388 = lshr i32 %382, 8
  %389 = and i32 %388, 255
  %390 = add i32 %389, %380
  %391 = and i32 %382, 255
  %392 = add i32 %391, %379
  %393 = add i32 %378, 1
  br label %394

394:                                              ; preds = %384, %375
  %395 = phi i32 [ %390, %384 ], [ %380, %375 ]
  %396 = phi i32 [ %392, %384 ], [ %379, %375 ]
  %397 = phi i32 [ %393, %384 ], [ %378, %375 ]
  %398 = phi i32 [ %387, %384 ], [ %377, %375 ]
  %399 = add nsw i64 %376, 1
  %400 = icmp slt i64 %376, %288
  br i1 %400, label %375, label %368, !llvm.loop !18

401:                                              ; preds = %298
  %402 = udiv i32 %372, %371
  %403 = udiv i32 %369, %371
  %404 = udiv i32 %370, %371
  %405 = and i32 %404, 255
  %406 = shl i32 %402, 16
  %407 = shl i32 %403, 8
  %408 = and i32 %407, 65280
  %409 = or i32 %406, %408
  %410 = or i32 %409, %405
  %411 = or i32 %410, -16777216
  br label %412

412:                                              ; preds = %401, %298, %268, %256
  %413 = phi i32 [ %266, %256 ], [ %411, %401 ], [ 0, %298 ], [ 0, %268 ]
  %414 = lshr i32 %413, 16
  %415 = trunc i32 %414 to i8
  %416 = getelementptr inbounds i8, i8* %258, i64 1
  store i8 %415, i8* %258, align 1
  %417 = lshr i32 %413, 8
  %418 = trunc i32 %417 to i8
  %419 = getelementptr inbounds i8, i8* %258, i64 2
  store i8 %418, i8* %416, align 1
  %420 = trunc i32 %413 to i8
  %421 = getelementptr inbounds i8, i8* %258, i64 3
  store i8 %420, i8* %419, align 1
  %422 = icmp eq i8* %421, %210
  br i1 %422, label %423, label %425

423:                                              ; preds = %412
  %424 = call zeroext i1 @_ZN16SkDeflateWStream5writeEPKvm(%class.SkDeflateWStream* nonnull %15, i8* nonnull %209, i64 3072) #6
  br label %425

425:                                              ; preds = %423, %412
  %426 = phi i8* [ %209, %423 ], [ %421, %412 ]
  %427 = add nuw nsw i32 %260, 1
  %428 = load i32, i32* %217, align 8
  %429 = icmp slt i32 %427, %428
  br i1 %429, label %256, label %247

430:                                              ; preds = %219, %198, %192
  %431 = phi i8* [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), %219 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), %198 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), %192 ]
  call void @_ZN16SkDeflateWStream8finalizeEv(%class.SkDeflateWStream* nonnull %15) #6
  %432 = call i64 @_ZNK22SkDynamicMemoryWStream12bytesWrittenEv(%class.SkDynamicMemoryWStream* nonnull %14) #6
  %433 = trunc i64 %432 to i32
  %434 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %19, i64 0, i32 1, i32 2, i32 1
  %435 = bitcast %struct.SkISize* %434 to i64*
  %436 = load i64, i64* %435, align 8
  %437 = trunc i64 %436 to i32
  %438 = lshr i64 %436, 32
  %439 = trunc i64 %438 to i32
  %440 = bitcast %class.SkPDFDict* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %440) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %440, i8 -86, i64 32, i1 false) #6
  call void @_ZN9SkPDFDictC1EPKc(%class.SkPDFDict* nonnull %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0)) #6
  call void @_ZN9SkPDFDict10insertNameEPKcS1_(%class.SkPDFDict* nonnull %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0)) #6
  call void @_ZN9SkPDFDict9insertIntEPKci(%class.SkPDFDict* nonnull %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i32 %437) #6
  call void @_ZN9SkPDFDict9insertIntEPKci(%class.SkPDFDict* nonnull %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i32 %439) #6
  call void @_ZN9SkPDFDict10insertNameEPKcS1_(%class.SkPDFDict* nonnull %8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* nonnull %431) #6
  %441 = icmp eq i32 %163, -1
  br i1 %441, label %443, label %442

442:                                              ; preds = %430
  call void @_ZN9SkPDFDict9insertRefEPKc22SkPDFIndirectReference(%class.SkPDFDict* nonnull %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i32 %163) #6
  br label %443

443:                                              ; preds = %442, %430
  call void @_ZN9SkPDFDict9insertIntEPKci(%class.SkPDFDict* nonnull %8, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i32 8) #6
  call void @_ZN9SkPDFDict10insertNameEPKcS1_(%class.SkPDFDict* nonnull %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0)) #6
  call void @_ZN9SkPDFDict9insertIntEPKci(%class.SkPDFDict* nonnull %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0), i32 %433) #6
  %444 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %2, i64 0, i32 31
  %445 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %444, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %446 = atomicrmw sub i32* %445, i32 1 acquire
  %447 = icmp slt i32 %446, 1
  br i1 %447, label %448, label %450

448:                                              ; preds = %443
  %449 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %444, i64 0, i32 0
  call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %449) #6
  br label %450

450:                                              ; preds = %448, %443
  %451 = call %class.SkWStream* @_ZN13SkPDFDocument11beginObjectE22SkPDFIndirectReference(%class.SkPDFDocument* %2, i32 %3) #6
  call void @_ZNK9SkPDFDict10emitObjectEP9SkWStream(%class.SkPDFDict* nonnull %8, %class.SkWStream* %451) #6
  %452 = bitcast %class.SkWStream* %451 to i1 (%class.SkWStream*, i8*, i64)***
  %453 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %452, align 8
  %454 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %453, i64 2
  %455 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %454, align 8
  %456 = call zeroext i1 %455(%class.SkWStream* %451, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0), i64 8) #6
  %457 = call zeroext i1 @_ZN22SkDynamicMemoryWStream15writeToAndResetEP9SkWStream(%class.SkDynamicMemoryWStream* nonnull %14, %class.SkWStream* %451) #6
  %458 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %452, align 8
  %459 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %458, i64 2
  %460 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %459, align 8
  %461 = call zeroext i1 %460(%class.SkWStream* %451, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i64 10) #6
  call void @_ZN13SkPDFDocument9endObjectEv(%class.SkPDFDocument* %2) #6
  %462 = atomicrmw add i32* %445, i32 1 release
  %463 = icmp slt i32 %462, 0
  br i1 %463, label %464, label %466

464:                                              ; preds = %450
  %465 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %444, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %465, i32 1) #6
  br label %466

466:                                              ; preds = %464, %450
  call void @_ZN9SkPDFDictD1Ev(%class.SkPDFDict* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %440) #6
  br i1 %126, label %548, label %467

467:                                              ; preds = %466
  %468 = bitcast %class.SkDynamicMemoryWStream* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %468) #6
  %469 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %11, i64 0, i32 0, i32 0
  %470 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %11, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %469, align 8
  %471 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %470 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %471, i8 0, i64 24, i1 false) #6
  %472 = bitcast %class.SkDeflateWStream* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %472) #6
  %473 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %11, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %472, i8 -86, i64 16, i1 false) #6
  call void @_ZN16SkDeflateWStreamC1EP9SkWStreamib(%class.SkDeflateWStream* nonnull %12, %class.SkWStream* nonnull %473, i32 -1, i1 zeroext false) #6
  %474 = load i32, i32* %170, align 8
  %475 = icmp eq i32 %474, 1
  br i1 %475, label %476, label %486

476:                                              ; preds = %467
  %477 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %112, i64 0, i32 0
  %478 = load i8*, i8** %477, align 8
  %479 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %19, i64 0, i32 1, i32 2, i32 1, i32 0
  %480 = load i32, i32* %479, align 8
  %481 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %19, i64 0, i32 1, i32 2, i32 1, i32 1
  %482 = load i32, i32* %481, align 4
  %483 = mul nsw i32 %482, %480
  %484 = sext i32 %483 to i64
  %485 = call zeroext i1 @_ZN22SkDynamicMemoryWStream5writeEPKvm(%class.SkDynamicMemoryWStream* nonnull %11, i8* %478, i64 %484) #6
  br label %519

486:                                              ; preds = %467
  %487 = bitcast %class.SkPixmap* %112 to i32**
  %488 = load i32*, i32** %487, align 8
  %489 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %19, i64 0, i32 1, i32 2, i32 1, i32 1
  %490 = load i32, i32* %489, align 4
  %491 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %19, i64 0, i32 1, i32 2, i32 1, i32 0
  %492 = load i32, i32* %491, align 8
  %493 = mul nsw i32 %492, %490
  %494 = sext i32 %493 to i64
  %495 = getelementptr inbounds i32, i32* %488, i64 %494
  %496 = getelementptr inbounds [4092 x i8], [4092 x i8]* %13, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4092, i8* nonnull %496) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %496, i8 -86, i64 4092, i1 false) #6
  %497 = getelementptr inbounds [4092 x i8], [4092 x i8]* %13, i64 0, i64 4092
  %498 = icmp eq i32 %493, 0
  br i1 %498, label %513, label %499

499:                                              ; preds = %486, %510
  %500 = phi i32* [ %502, %510 ], [ %488, %486 ]
  %501 = phi i8* [ %511, %510 ], [ %496, %486 ]
  %502 = getelementptr inbounds i32, i32* %500, i64 1
  %503 = load i32, i32* %500, align 4
  %504 = lshr i32 %503, 24
  %505 = trunc i32 %504 to i8
  %506 = getelementptr inbounds i8, i8* %501, i64 1
  store i8 %505, i8* %501, align 1
  %507 = icmp eq i8* %506, %497
  br i1 %507, label %508, label %510

508:                                              ; preds = %499
  %509 = call zeroext i1 @_ZN16SkDeflateWStream5writeEPKvm(%class.SkDeflateWStream* nonnull %12, i8* nonnull %496, i64 4092) #6
  br label %510

510:                                              ; preds = %508, %499
  %511 = phi i8* [ %496, %508 ], [ %506, %499 ]
  %512 = icmp eq i32* %502, %495
  br i1 %512, label %513, label %499

513:                                              ; preds = %510, %486
  %514 = phi i8* [ %496, %486 ], [ %511, %510 ]
  %515 = ptrtoint i8* %514 to i64
  %516 = ptrtoint [4092 x i8]* %13 to i64
  %517 = sub i64 %515, %516
  %518 = call zeroext i1 @_ZN16SkDeflateWStream5writeEPKvm(%class.SkDeflateWStream* nonnull %12, i8* nonnull %496, i64 %517) #6
  call void @llvm.lifetime.end.p0i8(i64 4092, i8* nonnull %496) #6
  br label %519

519:                                              ; preds = %513, %476
  call void @_ZN16SkDeflateWStream8finalizeEv(%class.SkDeflateWStream* nonnull %12) #6
  %520 = call i64 @_ZNK22SkDynamicMemoryWStream12bytesWrittenEv(%class.SkDynamicMemoryWStream* nonnull %11) #6
  %521 = trunc i64 %520 to i32
  %522 = load i64, i64* %435, align 8
  %523 = trunc i64 %522 to i32
  %524 = lshr i64 %522, 32
  %525 = trunc i64 %524 to i32
  %526 = bitcast %class.SkPDFDict* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %526) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %526, i8 -86, i64 32, i1 false) #6
  call void @_ZN9SkPDFDictC1EPKc(%class.SkPDFDict* nonnull %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0)) #6
  call void @_ZN9SkPDFDict10insertNameEPKcS1_(%class.SkPDFDict* nonnull %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0)) #6
  call void @_ZN9SkPDFDict9insertIntEPKci(%class.SkPDFDict* nonnull %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i32 %523) #6
  call void @_ZN9SkPDFDict9insertIntEPKci(%class.SkPDFDict* nonnull %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i32 %525) #6
  call void @_ZN9SkPDFDict10insertNameEPKcS1_(%class.SkPDFDict* nonnull %10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0)) #6
  call void @_ZN9SkPDFDict9insertIntEPKci(%class.SkPDFDict* nonnull %10, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i32 8) #6
  call void @_ZN9SkPDFDict10insertNameEPKcS1_(%class.SkPDFDict* nonnull %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0)) #6
  call void @_ZN9SkPDFDict9insertIntEPKci(%class.SkPDFDict* nonnull %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0), i32 %521) #6
  %527 = atomicrmw sub i32* %445, i32 1 acquire
  %528 = icmp slt i32 %527, 1
  br i1 %528, label %529, label %531

529:                                              ; preds = %519
  %530 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %444, i64 0, i32 0
  call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %530) #6
  br label %531

531:                                              ; preds = %529, %519
  %532 = call %class.SkWStream* @_ZN13SkPDFDocument11beginObjectE22SkPDFIndirectReference(%class.SkPDFDocument* %2, i32 %163) #6
  call void @_ZNK9SkPDFDict10emitObjectEP9SkWStream(%class.SkPDFDict* nonnull %10, %class.SkWStream* %532) #6
  %533 = bitcast %class.SkWStream* %532 to i1 (%class.SkWStream*, i8*, i64)***
  %534 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %533, align 8
  %535 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %534, i64 2
  %536 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %535, align 8
  %537 = call zeroext i1 %536(%class.SkWStream* %532, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0), i64 8) #6
  %538 = call zeroext i1 @_ZN22SkDynamicMemoryWStream15writeToAndResetEP9SkWStream(%class.SkDynamicMemoryWStream* nonnull %11, %class.SkWStream* %532) #6
  %539 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %533, align 8
  %540 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %539, i64 2
  %541 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %540, align 8
  %542 = call zeroext i1 %541(%class.SkWStream* %532, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i64 10) #6
  call void @_ZN13SkPDFDocument9endObjectEv(%class.SkPDFDocument* %2) #6
  %543 = atomicrmw add i32* %445, i32 1 release
  %544 = icmp slt i32 %543, 0
  br i1 %544, label %545, label %547

545:                                              ; preds = %531
  %546 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %444, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %546, i32 1) #6
  br label %547

547:                                              ; preds = %545, %531
  call void @_ZN9SkPDFDictD1Ev(%class.SkPDFDict* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %526) #6
  call void @_ZN16SkDeflateWStreamD1Ev(%class.SkDeflateWStream* nonnull %12) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %472) #6
  call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* nonnull %11) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %468) #6
  br label %548

548:                                              ; preds = %466, %547
  call void @_ZN16SkDeflateWStreamD1Ev(%class.SkDeflateWStream* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %168) #6
  call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* nonnull %14) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %164) #6
  br label %549

549:                                              ; preds = %155, %157, %548
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %19) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %45) #6
  br label %550

550:                                              ; preds = %41, %43, %549
  %551 = load %class.SkData*, %class.SkData** %31, align 8
  %552 = icmp eq %class.SkData* %551, null
  br i1 %552, label %559, label %553

553:                                              ; preds = %550
  %554 = getelementptr inbounds %class.SkData, %class.SkData* %551, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %555 = atomicrmw add i32* %554, i32 -1 acq_rel
  %556 = icmp eq i32 %555, 1
  br i1 %556, label %557, label %559

557:                                              ; preds = %553
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %551) #6
  %558 = bitcast %class.SkData* %551 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %558) #6
  br label %559

559:                                              ; preds = %550, %553, %557
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK7SkImage14refEncodedDataEv(%class.sk_sp.94* sret, %class.SkImage*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZL7do_jpeg5sk_spI6SkDataEP13SkPDFDocument7SkISize22SkPDFIndirectReference(%class.sk_sp.94* nocapture readonly, %class.SkPDFDocument*, i64, i32) unnamed_addr #0 {
  %5 = alloca %class.SkPDFDict, align 8
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %struct.SkISize*
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #6
  %11 = bitcast i64* %6 to i32*
  store i32 -1431655766, i32* %11, align 8
  %12 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %7, i64 0, i32 1
  store i32 -1431655766, i32* %12, align 4
  %13 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #6
  store i32 -1431655766, i32* %8, align 4
  %14 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #6
  store i32 -1431655766, i32* %9, align 4
  %15 = getelementptr inbounds %class.sk_sp.94, %class.sk_sp.94* %0, i64 0, i32 0
  %16 = load %class.SkData*, %class.SkData** %15, align 8
  %17 = getelementptr inbounds %class.SkData, %class.SkData* %16, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %class.SkData, %class.SkData* %16, i64 0, i32 4
  %20 = load i64, i64* %19, align 8
  %21 = call zeroext i1 @_Z13SkGetJpegInfoPKvmP7SkISizePN13SkEncodedInfo5ColorEP15SkEncodedOrigin(i8* %18, i64 %20, %struct.SkISize* nonnull %7, i32* nonnull %8, i32* nonnull %9) #6
  br i1 %21, label %22, label %82

22:                                               ; preds = %4
  %23 = lshr i64 %2, 32
  %24 = trunc i64 %23 to i32
  %25 = trunc i64 %2 to i32
  %26 = load i32, i32* %8, align 4
  %27 = icmp eq i32 %26, 10
  %28 = load i32, i32* %11, align 8
  %29 = icmp ne i32 %28, %25
  %30 = load i32, i32* %12, align 4
  %31 = icmp ne i32 %30, %24
  %32 = or i1 %29, %31
  br i1 %32, label %82, label %33

33:                                               ; preds = %22
  %34 = icmp eq i32 %26, 0
  %35 = or i1 %27, %34
  %36 = xor i1 %35, true
  %37 = load i32, i32* %9, align 4
  %38 = icmp ne i32 %37, 1
  %39 = or i1 %38, %36
  br i1 %39, label %82, label %40

40:                                               ; preds = %33
  %41 = load i64, i64* %6, align 8
  %42 = select i1 %27, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0)
  %43 = load %class.SkData*, %class.SkData** %15, align 8
  %44 = getelementptr inbounds %class.SkData, %class.SkData* %43, i64 0, i32 4
  %45 = load i64, i64* %44, align 8
  %46 = trunc i64 %45 to i32
  %47 = trunc i64 %41 to i32
  %48 = lshr i64 %41, 32
  %49 = trunc i64 %48 to i32
  %50 = bitcast %class.SkPDFDict* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %50) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 32, i1 false) #6
  call void @_ZN9SkPDFDictC1EPKc(%class.SkPDFDict* nonnull %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0)) #6
  call void @_ZN9SkPDFDict10insertNameEPKcS1_(%class.SkPDFDict* nonnull %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0)) #6
  call void @_ZN9SkPDFDict9insertIntEPKci(%class.SkPDFDict* nonnull %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i32 %47) #6
  call void @_ZN9SkPDFDict9insertIntEPKci(%class.SkPDFDict* nonnull %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i32 %49) #6
  call void @_ZN9SkPDFDict10insertNameEPKcS1_(%class.SkPDFDict* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %42) #6
  call void @_ZN9SkPDFDict9insertIntEPKci(%class.SkPDFDict* nonnull %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i32 8) #6
  call void @_ZN9SkPDFDict10insertNameEPKcS1_(%class.SkPDFDict* nonnull %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0)) #6
  call void @_ZN9SkPDFDict9insertIntEPKci(%class.SkPDFDict* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0), i32 0) #6
  call void @_ZN9SkPDFDict9insertIntEPKci(%class.SkPDFDict* nonnull %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0), i32 %46) #6
  %51 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %1, i64 0, i32 31
  %52 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw sub i32* %52, i32 1 acquire
  %54 = icmp slt i32 %53, 1
  br i1 %54, label %55, label %57

55:                                               ; preds = %40
  %56 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %51, i64 0, i32 0
  call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %56) #6
  br label %57

57:                                               ; preds = %55, %40
  %58 = call %class.SkWStream* @_ZN13SkPDFDocument11beginObjectE22SkPDFIndirectReference(%class.SkPDFDocument* %1, i32 %3) #6
  call void @_ZNK9SkPDFDict10emitObjectEP9SkWStream(%class.SkPDFDict* nonnull %5, %class.SkWStream* %58) #6
  %59 = bitcast %class.SkWStream* %58 to i1 (%class.SkWStream*, i8*, i64)***
  %60 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %59, align 8
  %61 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %60, i64 2
  %62 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %61, align 8
  %63 = call zeroext i1 %62(%class.SkWStream* %58, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0), i64 8) #6
  %64 = load %class.SkData*, %class.SkData** %15, align 8
  %65 = getelementptr inbounds %class.SkData, %class.SkData* %64, i64 0, i32 3
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds %class.SkData, %class.SkData* %64, i64 0, i32 4
  %68 = load i64, i64* %67, align 8
  %69 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %59, align 8
  %70 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %69, i64 2
  %71 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %70, align 8
  %72 = call zeroext i1 %71(%class.SkWStream* %58, i8* %66, i64 %68) #6
  %73 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %59, align 8
  %74 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %73, i64 2
  %75 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %74, align 8
  %76 = call zeroext i1 %75(%class.SkWStream* %58, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i64 10) #6
  call void @_ZN13SkPDFDocument9endObjectEv(%class.SkPDFDocument* %1) #6
  %77 = atomicrmw add i32* %52, i32 1 release
  %78 = icmp slt i32 %77, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %57
  %80 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %51, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %80, i32 1) #6
  br label %81

81:                                               ; preds = %57, %79
  call void @_ZN9SkPDFDictD1Ev(%class.SkPDFDict* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %50) #6
  br label %82

82:                                               ; preds = %22, %81, %33, %4
  %83 = phi i1 [ false, %4 ], [ true, %81 ], [ false, %33 ], [ false, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #6
  ret i1 %83
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZNK8SkPixmap15computeIsOpaqueEv(%class.SkPixmap*) local_unnamed_addr #2

declare void @_ZNK7SkImage12encodeToDataE20SkEncodedImageFormati(%class.sk_sp.94* sret, %class.SkImage*, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z19SkPDFSerializeImagePK7SkImageP13SkPDFDocumenti(%class.SkImage*, %class.SkPDFDocument*, i32) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::function", align 8
  %5 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %1, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw add i32* %5, i32 1 seq_cst
  %7 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %1, i64 0, i32 29
  %8 = load %class.SkExecutor*, %class.SkExecutor** %7, align 8
  %9 = icmp eq %class.SkExecutor* %8, null
  br i1 %9, label %34, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.SkImage, %class.SkImage* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  tail call void @_ZN13SkPDFDocument17incrementJobCountEv(%class.SkPDFDocument* %1) #6
  %13 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZ19SkPDFSerializeImagePK7SkImageP13SkPDFDocumentiE3$_0S2_EEEEvPKNS0_16__policy_storageE", void (%"union.std::__1::__function::__policy_storage"*)** %13, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZ19SkPDFSerializeImagePK7SkImageP13SkPDFDocumentiE3$_0FvvEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %14, align 8
  %15 = tail call i8* @_Znwm(i64 32) #7, !noalias !20
  %16 = bitcast i8* %15 to %class.SkImage**
  store %class.SkImage* %0, %class.SkImage** %16, align 8
  %17 = getelementptr inbounds i8, i8* %15, i64 8
  %18 = bitcast i8* %17 to i32*
  store i32 %2, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %15, i64 16
  %20 = bitcast i8* %19 to %class.SkPDFDocument**
  store %class.SkPDFDocument* %1, %class.SkPDFDocument** %20, align 8
  %21 = getelementptr inbounds i8, i8* %15, i64 24
  %22 = bitcast i8* %21 to i32*
  store i32 %6, i32* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %23, align 8
  %24 = bitcast %class.SkExecutor* %8 to void (%class.SkExecutor*, %"class.std::__1::function"*)***
  %25 = load void (%class.SkExecutor*, %"class.std::__1::function"*)**, void (%class.SkExecutor*, %"class.std::__1::function"*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.SkExecutor*, %"class.std::__1::function"*)*, void (%class.SkExecutor*, %"class.std::__1::function"*)** %25, i64 2
  %27 = load void (%class.SkExecutor*, %"class.std::__1::function"*)*, void (%class.SkExecutor*, %"class.std::__1::function"*)** %26, align 8
  call void %27(%class.SkExecutor* nonnull %8, %"class.std::__1::function"* nonnull %4) #6
  %28 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %14, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %28, i64 0, i32 1
  %30 = load void (i8*)*, void (i8*)** %29, align 8
  %31 = icmp eq void (i8*)* %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %10
  %33 = load i8*, i8** %23, align 8
  call void %30(i8* %33) #6
  br label %35

34:                                               ; preds = %3
  tail call void @_Z15serialize_imagePK7SkImageiP13SkPDFDocument22SkPDFIndirectReference(%class.SkImage* %0, i32 %2, %class.SkPDFDocument* %1, i32 %6)
  br label %35

35:                                               ; preds = %32, %10, %34
  ret i32 %6
}

declare void @_ZN13SkPDFDocument17incrementJobCountEv(%class.SkPDFDocument*) local_unnamed_addr #2

declare zeroext i1 @_Z13SkGetJpegInfoPKvmP7SkISizePN13SkEncodedInfo5ColorEP15SkEncodedOrigin(i8*, i64, %struct.SkISize*, i32*, i32*) local_unnamed_addr #2

declare void @_ZN9SkPDFDictC1EPKc(%class.SkPDFDict*, i8*) unnamed_addr #2

declare void @_ZN9SkPDFDict10insertNameEPKcS1_(%class.SkPDFDict*, i8*, i8*) local_unnamed_addr #2

declare void @_ZN9SkPDFDict9insertIntEPKci(%class.SkPDFDict*, i8*, i32) local_unnamed_addr #2

declare void @_ZN9SkPDFDict9insertRefEPKc22SkPDFIndirectReference(%class.SkPDFDict*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9SkPDFDictD1Ev(%class.SkPDFDict*) unnamed_addr #3

declare %class.SkWStream* @_ZN13SkPDFDocument11beginObjectE22SkPDFIndirectReference(%class.SkPDFDocument*, i32) local_unnamed_addr #2

declare void @_ZNK9SkPDFDict10emitObjectEP9SkWStream(%class.SkPDFDict*, %class.SkWStream*) unnamed_addr #2

declare void @_ZN13SkPDFDocument9endObjectEv(%class.SkPDFDocument*) local_unnamed_addr #2

declare void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore*) local_unnamed_addr #2

declare void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore*, i32) local_unnamed_addr #2

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

declare i32 @_ZNK7SkImage9colorTypeEv(%class.SkImage*) local_unnamed_addr #2

declare void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZNK7SkImage10readPixelsEP15GrDirectContextRK8SkPixmapiiNS_11CachingHintE(%class.SkImage*, %class.GrDirectContext*, %class.SkPixmap* dereferenceable(40), i32, i32, i32) local_unnamed_addr #2

declare void @_ZNK8SkBitmap10eraseColorEj(%class.SkBitmap*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32) local_unnamed_addr #2

declare void @_ZN16SkDeflateWStreamC1EP9SkWStreamib(%class.SkDeflateWStream*, %class.SkWStream*, i32, i1 zeroext) unnamed_addr #2

declare zeroext i1 @_ZN16SkDeflateWStream5writeEPKvm(%class.SkDeflateWStream*, i8*, i64) unnamed_addr #2

declare void @_ZN16SkDeflateWStream8finalizeEv(%class.SkDeflateWStream*) local_unnamed_addr #2

declare i64 @_ZNK22SkDynamicMemoryWStream12bytesWrittenEv(%class.SkDynamicMemoryWStream*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN16SkDeflateWStreamD1Ev(%class.SkDeflateWStream*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream*) unnamed_addr #3

declare zeroext i1 @_ZN22SkDynamicMemoryWStream15writeToAndResetEP9SkWStream(%class.SkDynamicMemoryWStream*, %class.SkWStream*) local_unnamed_addr #2

declare zeroext i1 @_ZN22SkDynamicMemoryWStream5writeEPKvm(%class.SkDynamicMemoryWStream*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZ19SkPDFSerializeImagePK7SkImageP13SkPDFDocumentiE3$_0S2_EEEEvPKNS0_16__policy_storageE"(%"union.std::__1::__function::__policy_storage"* nocapture readonly) #0 align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func"**
  %3 = load %"class.std::__1::__function::__default_alloc_func"*, %"class.std::__1::__function::__default_alloc_func"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %3, i64 0, i32 0, i32 0
  %5 = load %class.SkImage*, %class.SkImage** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %3, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %3, i64 0, i32 0, i32 3
  %9 = load %class.SkPDFDocument*, %class.SkPDFDocument** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %3, i64 0, i32 0, i32 4, i32 0
  %11 = load i32, i32* %10, align 8
  tail call void @_Z15serialize_imagePK7SkImageiP13SkPDFDocument22SkPDFIndirectReference(%class.SkImage* %5, i32 %7, %class.SkPDFDocument* %9, i32 %11) #6
  %12 = load %class.SkImage*, %class.SkImage** %4, align 8
  %13 = icmp eq %class.SkImage* %12, null
  br i1 %13, label %24, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %class.SkImage, %class.SkImage* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 -1 acq_rel
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %24

18:                                               ; preds = %14
  %19 = bitcast %class.SkImage* %12 to %class.SkRefCntBase*
  %20 = bitcast %class.SkImage* %12 to void (%class.SkRefCntBase*)***
  %21 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %20, align 8
  %22 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %21, i64 2
  %23 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, align 8
  tail call void %23(%class.SkRefCntBase* nonnull %19) #6
  br label %24

24:                                               ; preds = %1, %14, %18
  %25 = load %class.SkPDFDocument*, %class.SkPDFDocument** %8, align 8
  tail call void @_ZN13SkPDFDocument17signalJobCompleteEv(%class.SkPDFDocument* %25) #6
  ret void
}

declare void @_ZN13SkPDFDocument17signalJobCompleteEv(%class.SkPDFDocument*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZ19SkPDFSerializeImagePK7SkImageP13SkPDFDocumentiE3$_0FvvEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #7, !noalias !25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 32, i1 false) #6
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZ19SkPDFSerializeImagePK7SkImageP13SkPDFDocumentiE3$_0FvvEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #7
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZL9to_pixelsPK7SkImage: argument 0"}
!4 = distinct !{!4, !"_ZL9to_pixelsPK7SkImage"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!7 = distinct !{!7, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!8 = distinct !{!8, !9, !"_ZN11SkImageInfo6MakeA8Eii: argument 0"}
!9 = distinct !{!9, !"_ZN11SkImageInfo6MakeA8Eii"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!12 = distinct !{!12, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!15 = distinct !{!15, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.isvectorized", i32 1}
!18 = distinct !{!18, !19, !17}
!19 = !{!"llvm.loop.unroll.runtime.disable"}
!20 = !{!21, !23}
!21 = distinct !{!21, !22, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!23 = distinct !{!23, !24, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZ19SkPDFSerializeImagePK7SkImageP13SkPDFDocumentiE3$_0FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!24 = distinct !{!24, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZ19SkPDFSerializeImagePK7SkImageP13SkPDFDocumentiE3$_0FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!27 = distinct !{!27, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!28 = distinct !{!28, !29, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZ19SkPDFSerializeImagePK7SkImageP13SkPDFDocumentiE3$_0FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZ19SkPDFSerializeImagePK7SkImageP13SkPDFDocumentiE3$_0FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
