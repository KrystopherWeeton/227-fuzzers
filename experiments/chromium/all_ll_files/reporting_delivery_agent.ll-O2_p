; ModuleID = '../../net/reporting/reporting_delivery_agent.cc'
source_filename = "../../net/reporting/reporting_delivery_agent.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.net::ReportingDeliveryAgent" = type { i32 (...)** }
%"class.net::ReportingContext" = type { %"struct.net::ReportingPolicy", %"class.base::Clock"*, %"class.base::TickClock"*, %"class.std::__1::unique_ptr.1", %"class.base::ObserverList", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.16", %"class.net::ReportingCache::PersistentReportingStore"*, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28" }
%"struct.net::ReportingPolicy" = type <{ i64, i64, i64, %"class.base::TimeDelta", %"struct.net::BackoffEntry::Policy", %"class.base::TimeDelta", i8, i8, [6 x i8], %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i32, i8, i8, [2 x i8] }>
%"struct.net::BackoffEntry::Policy" = type { i32, i32, double, double, i64, i64, i8 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Clock" = type opaque
%"class.base::TickClock" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.net::ReportingUploader"* }
%"class.net::ReportingUploader" = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.7" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.net::ReportingDelegate"* }
%"class.net::ReportingDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.net::ReportingCache"* }
%"class.net::ReportingCache" = type { i32 (...)** }
%"class.net::ReportingCache::PersistentReportingStore" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::ReportingDeliveryAgent"* }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.net::ReportingGarbageCollector"* }
%"class.net::ReportingGarbageCollector" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.net::ReportingNetworkChangeObserver"* }
%"class.net::ReportingNetworkChangeObserver" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.48 }
%class.scoped_refptr.48 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.49", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.49" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.net::ReportingCacheObserver" = type { i32 (...)** }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.41 }
%class.scoped_refptr.41 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.42", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.42" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.43" }
%"struct.std::__1::atomic.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__atomic_base.45" }
%"struct.std::__1::__atomic_base.45" = type { %"struct.std::__1::__cxx_atomic_impl.46" }
%"struct.std::__1::__cxx_atomic_impl.46" = type { %"struct.std::__1::__cxx_atomic_base_impl.47" }
%"struct.std::__1::__cxx_atomic_base_impl.47" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.net::ReportingEndpointManager" = type { i32 (...)** }
%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl" = type { %"class.net::ReportingDeliveryAgent", %"class.net::ReportingCacheObserver", %"class.net::ReportingContext"*, %"class.std::__1::unique_ptr.37", %"class.std::__1::set", %"class.std::__1::unique_ptr.61", %"class.base::WeakPtrFactory.67" }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.base::OneShotTimer"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.53", %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { i64 }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.net::ReportingEndpointManager"* }
%"class.base::WeakPtrFactory.67" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.net::ReportingEndpointGroupKey" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.net::ReportingEndpointGroupKey" = type { %"class.net::NetworkIsolationKey", %"class.url::Origin", %"class.std::__1::basic_string" }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.net::SchemefulSite" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.77" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.77" = type { %"class.absl::optional_internal::optional_data.78" }
%"class.absl::optional_internal::optional_data.78" = type { %"class.absl::optional_internal::optional_data_base.79" }
%"class.absl::optional_internal::optional_data_base.79" = type { %"class.absl::optional_internal::optional_data_dtor_base.80" }
%"class.absl::optional_internal::optional_data_dtor_base.80" = type { i8, %union.anon.81 }
%union.anon.81 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.73 }
%union.anon.73 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"**, %"class.std::__1::__compressed_pair.125" }
%"struct.net::ReportingReport" = type <{ %"class.net::NetworkIsolationKey", %class.GURL, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.90", i32, [4 x i8], %"class.base::TimeTicks", i32, i32, i32, [4 x i8] }>
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.84" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %class.GURL* }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.base::Value"* }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.93" }
%"union.absl::variant_internal::DestructibleUnionImpl.93" = type { %"union.absl::variant_internal::DestructibleUnionImpl.94" }
%"union.absl::variant_internal::DestructibleUnionImpl.94" = type { %"union.absl::variant_internal::DestructibleUnionImpl.95" }
%"union.absl::variant_internal::DestructibleUnionImpl.95" = type { %"union.absl::variant_internal::DestructibleUnionImpl.96" }
%"union.absl::variant_internal::DestructibleUnionImpl.96" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.net::ReportingReport"** }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.142 }
%class.scoped_refptr.142 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::set.130" = type { %"class.std::__1::__tree.131" }
%"class.std::__1::__tree.131" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.132", %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.base::OnceCallback.141" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.std::__1::__tree_node.145" = type { %"class.std::__1::__tree_node_base.base", %"class.url::Origin" }
%"class.std::__1::tuple.246" = type { %"struct.std::__1::__tuple_impl.247" }
%"struct.std::__1::__tuple_impl.247" = type { %"class.std::__1::__tuple_leaf.248" }
%"class.std::__1::__tuple_leaf.248" = type { %"struct.net::ReportingEndpointGroupKey"* }
%"class.std::__1::tuple.249" = type { i8 }
%"struct.std::__1::__tuple_less" = type { i8 }
%"class.std::__1::tuple.214" = type { %"struct.std::__1::__tuple_impl.215" }
%"struct.std::__1::__tuple_impl.215" = type { %"class.std::__1::__tuple_leaf.216", %"class.std::__1::__tuple_leaf.217", %"class.std::__1::__tuple_leaf.218" }
%"class.std::__1::__tuple_leaf.216" = type { %"class.net::NetworkIsolationKey"* }
%"class.std::__1::__tuple_leaf.217" = type { %"class.url::Origin"* }
%"class.std::__1::__tuple_leaf.218" = type { %class.GURL* }
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.153" }
%"class.std::__1::__tree.153" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.154", %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.net::ReportingEndpoint" = type { %"struct.net::ReportingEndpointGroupKey", %"struct.net::ReportingEndpoint::EndpointInfo", %"struct.net::ReportingEndpoint::Statistics" }
%"struct.net::ReportingEndpoint::EndpointInfo" = type { %class.GURL, i32, i32 }
%"struct.net::ReportingEndpoint::Statistics" = type { i32, i32, i32, i32 }
%"struct.net::(anonymous namespace)::Delivery::Target" = type { %"class.net::NetworkIsolationKey", %"class.url::Origin", %class.GURL }
%"struct.std::__1::pair.183" = type { %"struct.net::(anonymous namespace)::Delivery::Target", %"class.std::__1::unique_ptr.166" }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.net::(anonymous namespace)::Delivery"* }
%"class.net::(anonymous namespace)::Delivery" = type { %"struct.net::(anonymous namespace)::Delivery::Target", %"class.std::__1::vector.82", %"class.std::__1::map.169" }
%"class.std::__1::map.169" = type { %"class.std::__1::__tree.170" }
%"class.std::__1::__tree.170" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.171", %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::set.190" = type { %"class.std::__1::__tree.191" }
%"class.std::__1::__tree.191" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.192", %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::less.198" = type { i8 }
%"class.base::OnceCallback.200" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__tree_node.213" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.188" }
%"struct.std::__1::pair.188" = type { %"struct.net::(anonymous namespace)::Delivery::Target", %"class.std::__1::unique_ptr.166" }
%"class.std::__1::__tree_node.264" = type { %"class.std::__1::__tree_node_base.base", %"struct.net::ReportingReport"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__tree_node.239" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type.240" }
%"struct.std::__1::__value_type.240" = type { %"struct.std::__1::pair.241" }
%"struct.std::__1::pair.241" = type <{ %"struct.net::ReportingEndpointGroupKey", i32, [4 x i8] }>
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::tuple.220" = type { %"struct.std::__1::__tuple_impl.221" }
%"struct.std::__1::__tuple_impl.221" = type { %"class.std::__1::__tuple_leaf.222", %"class.std::__1::__tuple_leaf.223", %"class.std::__1::__tuple_leaf.224" }
%"class.std::__1::__tuple_leaf.222" = type { %"class.absl::optional"* }
%"class.std::__1::__tuple_leaf.223" = type { %"class.absl::optional"* }
%"class.std::__1::__tuple_leaf.224" = type { i8* }

$_ZNSt3__16__treeIN3net25ReportingEndpointGroupKeyENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZNSt3__16__treeIN3url6OriginENS_4lessIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__13setIPKN3net15ReportingReportENS_4lessIS4_EENS_9allocatorIS4_EEEC2INS_11__wrap_iterIPS4_EEEET_SE_RKS6_ = comdat any

$_ZNSt3__16vectorIPKN3net15ReportingReportENS_9allocatorIS4_EEEC2INS_21__tree_const_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEEET_NS_9enable_ifIXaasr27__is_cpp17_forward_iteratorISF_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISF_E9referenceEEE5valueESF_E4typeE = comdat any

$_ZNSt3__16__sortIRPFbPKN3net15ReportingReportES4_EPS4_EEvT0_S9_T_ = comdat any

$_ZNSt3__17__sort4IRPFbPKN3net15ReportingReportES4_EPS4_EEjT0_S9_S9_S9_T_ = comdat any

$_ZNSt3__17__sort5IRPFbPKN3net15ReportingReportES4_EPS4_EEjT0_S9_S9_S9_S9_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRPFbPKN3net15ReportingReportES4_EPS4_EEvT0_S9_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRPFbPKN3net15ReportingReportES4_EPS4_EEbT0_S9_T_ = comdat any

$_ZNSt3__16__treeIN3net25ReportingEndpointGroupKeyENS_4lessIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN3net19NetworkIsolationKeyERKN3url6OriginERK4GURLEEESF_EEbRKT_RKT0_ = comdat any

$_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net25ReportingEndpointGroupKeyEiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE = comdat any

$_ZNSt3__16vectorIPKN3net15ReportingReportENS_9allocatorIS4_EEE6insertINS_11__wrap_iterIPKS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISE_E9referenceEEE5valueENS9_IPS4_EEE4typeESC_SE_SE_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net25ReportingEndpointGroupKeyEiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSG_IJEEEEEENS_4pairINS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeIN3net25ReportingEndpointGroupKeyENS_4lessIS2_EENS_9allocatorIS2_EEE14__erase_uniqueIS2_EEmRKT_ = comdat any

$_ZNSt3__16__treeIPKN3net15ReportingReportENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE = comdat any

$_ZNSt3__16__treeIN3url6OriginENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

@_ZTVN3net22ReportingDeliveryAgentE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::ReportingDeliveryAgent"*)* @_ZN3net22ReportingDeliveryAgentD2Ev to i8*), i8* bitcast (void (%"class.net::ReportingDeliveryAgent"*)* @_ZN3net22ReportingDeliveryAgentD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN3net12_GLOBAL__N_126ReportingDeliveryAgentImplE = internal unnamed_addr constant { [6 x i8*], [4 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*)* @_ZN3net12_GLOBAL__N_126ReportingDeliveryAgentImplD2Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*)* @_ZN3net12_GLOBAL__N_126ReportingDeliveryAgentImplD0Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*, %"class.base::OneShotTimer"*)* @_ZN3net12_GLOBAL__N_126ReportingDeliveryAgentImpl18SetTimerForTestingENSt3__110unique_ptrIN4base12OneShotTimerENS2_14default_deleteIS5_EEEE to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*)* @_ZN3net12_GLOBAL__N_126ReportingDeliveryAgentImpl16OnReportsUpdatedEv to i8*)], [4 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*)* @_ZThn8_N3net12_GLOBAL__N_126ReportingDeliveryAgentImpl16OnReportsUpdatedEv to i8*), i8* bitcast (void (%"class.net::ReportingCacheObserver"*)* @_ZN3net22ReportingCacheObserver16OnClientsUpdatedEv to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"age\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"url\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"user_agent\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"body\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"StartTimer\00", align 1
@.str.11 = private unnamed_addr constant [48 x i8] c"../../net/reporting/reporting_delivery_agent.cc\00", align 1

@_ZN3net22ReportingDeliveryAgentD1Ev = hidden unnamed_addr alias void (%"class.net::ReportingDeliveryAgent"*), void (%"class.net::ReportingDeliveryAgent"*)* @_ZN3net22ReportingDeliveryAgentD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::ReportingDeliveryAgent"* @_ZN3net22ReportingDeliveryAgent6CreateEPNS_16ReportingContextERKN4base17RepeatingCallbackIFiiiEEE(%"class.net::ReportingContext"*, %"class.base::RepeatingCallback"*) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 80) #11
  %4 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net22ReportingDeliveryAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to %"class.net::ReportingCacheObserver"*
  tail call void @_ZN3net22ReportingCacheObserverC2Ev(%"class.net::ReportingCacheObserver"* %6) #12
  %7 = bitcast i8* %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [4 x i8*] }, { [6 x i8*], [4 x i8*] }* @_ZTVN3net12_GLOBAL__N_126ReportingDeliveryAgentImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [4 x i8*] }, { [6 x i8*], [4 x i8*] }* @_ZTVN3net12_GLOBAL__N_126ReportingDeliveryAgentImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 8
  %8 = getelementptr inbounds i8, i8* %3, i64 16
  %9 = bitcast i8* %8 to %"class.net::ReportingContext"**
  store %"class.net::ReportingContext"* %0, %"class.net::ReportingContext"** %9, align 8
  %10 = tail call i8* @_Znwm(i64 128) #11
  %11 = bitcast i8* %10 to %"class.base::OneShotTimer"*
  tail call void @_ZN4base12OneShotTimerC1Ev(%"class.base::OneShotTimer"* nonnull %11) #12
  %12 = getelementptr inbounds i8, i8* %3, i64 24
  %13 = bitcast i8* %12 to i8**
  store i8* %10, i8** %13, align 8
  %14 = getelementptr inbounds i8, i8* %3, i64 40
  %15 = getelementptr inbounds i8, i8* %3, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #12
  %16 = bitcast i8* %15 to i8**
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds %"class.net::ReportingContext", %"class.net::ReportingContext"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.net::ReportingContext", %"class.net::ReportingContext"* %0, i64 0, i32 2
  %19 = load %"class.base::TickClock"*, %"class.base::TickClock"** %18, align 8
  %20 = getelementptr inbounds %"class.net::ReportingContext", %"class.net::ReportingContext"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %21 = load %"class.net::ReportingDelegate"*, %"class.net::ReportingDelegate"** %20, align 8
  %22 = getelementptr inbounds %"class.net::ReportingContext", %"class.net::ReportingContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %23 = load %"class.net::ReportingCache"*, %"class.net::ReportingCache"** %22, align 8
  %24 = tail call %"class.net::ReportingEndpointManager"* @_ZN3net24ReportingEndpointManager6CreateEPKNS_15ReportingPolicyEPKN4base9TickClockEPKNS_17ReportingDelegateEPNS_14ReportingCacheERKNS4_17RepeatingCallbackIFiiiEEE(%"struct.net::ReportingPolicy"* %17, %"class.base::TickClock"* %19, %"class.net::ReportingDelegate"* %21, %"class.net::ReportingCache"* %23, %"class.base::RepeatingCallback"* dereferenceable(8) %1) #12
  %25 = getelementptr inbounds i8, i8* %3, i64 56
  %26 = bitcast i8* %25 to %"class.net::ReportingEndpointManager"**
  store %"class.net::ReportingEndpointManager"* %24, %"class.net::ReportingEndpointManager"** %26, align 8
  %27 = getelementptr inbounds i8, i8* %3, i64 64
  %28 = bitcast i8* %27 to %"class.base::internal::WeakPtrFactoryBase"*
  %29 = ptrtoint i8* %3 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %28, i64 %29) #12
  %30 = load %"class.net::ReportingContext"*, %"class.net::ReportingContext"** %9, align 8
  tail call void @_ZN3net16ReportingContext16AddCacheObserverEPNS_22ReportingCacheObserverE(%"class.net::ReportingContext"* %30, %"class.net::ReportingCacheObserver"* %6) #12
  %31 = bitcast i8* %3 to %"class.net::ReportingDeliveryAgent"*
  ret %"class.net::ReportingDeliveryAgent"* %31
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net22ReportingDeliveryAgentD2Ev(%"class.net::ReportingDeliveryAgent"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3net22ReportingDeliveryAgentD0Ev(%"class.net::ReportingDeliveryAgent"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN3net22ReportingCacheObserverC2Ev(%"class.net::ReportingCacheObserver"*) unnamed_addr #6

declare %"class.net::ReportingEndpointManager"* @_ZN3net24ReportingEndpointManager6CreateEPKNS_15ReportingPolicyEPKN4base9TickClockEPKNS_17ReportingDelegateEPNS_14ReportingCacheERKNS4_17RepeatingCallbackIFiiiEEE(%"struct.net::ReportingPolicy"*, %"class.base::TickClock"*, %"class.net::ReportingDelegate"*, %"class.net::ReportingCache"*, %"class.base::RepeatingCallback"* dereferenceable(8)) local_unnamed_addr #6

declare void @_ZN3net16ReportingContext16AddCacheObserverEPNS_22ReportingCacheObserverE(%"class.net::ReportingContext"*, %"class.net::ReportingCacheObserver"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_126ReportingDeliveryAgentImplD2Ev(%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 1
  %3 = bitcast %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [4 x i8*] }, { [6 x i8*], [4 x i8*] }* @_ZTVN3net12_GLOBAL__N_126ReportingDeliveryAgentImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [4 x i8*] }, { [6 x i8*], [4 x i8*] }* @_ZTVN3net12_GLOBAL__N_126ReportingDeliveryAgentImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 2
  %5 = load %"class.net::ReportingContext"*, %"class.net::ReportingContext"** %4, align 8
  tail call void @_ZN3net16ReportingContext19RemoveCacheObserverEPNS_22ReportingCacheObserverE(%"class.net::ReportingContext"* %5, %"class.net::ReportingCacheObserver"* %2) #12
  %6 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 6, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %6) #12
  %7 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %8 = load %"class.net::ReportingEndpointManager"*, %"class.net::ReportingEndpointManager"** %7, align 8
  store %"class.net::ReportingEndpointManager"* null, %"class.net::ReportingEndpointManager"** %7, align 8
  %9 = icmp eq %"class.net::ReportingEndpointManager"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.net::ReportingEndpointManager"* %8 to void (%"class.net::ReportingEndpointManager"*)***
  %12 = load void (%"class.net::ReportingEndpointManager"*)**, void (%"class.net::ReportingEndpointManager"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.net::ReportingEndpointManager"*)*, void (%"class.net::ReportingEndpointManager"*)** %12, i64 1
  %14 = load void (%"class.net::ReportingEndpointManager"*)*, void (%"class.net::ReportingEndpointManager"*)** %13, align 8
  tail call void %14(%"class.net::ReportingEndpointManager"* nonnull %8) #12
  br label %15

15:                                               ; preds = %1, %10
  %16 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 4, i32 0
  %17 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node"**
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %18, align 8
  tail call void @_ZNSt3__16__treeIN3net25ReportingEndpointGroupKeyENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %16, %"class.std::__1::__tree_node"* %19) #12
  %20 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.base::OneShotTimer"*, %"class.base::OneShotTimer"** %20, align 8
  store %"class.base::OneShotTimer"* null, %"class.base::OneShotTimer"** %20, align 8
  %22 = icmp eq %"class.base::OneShotTimer"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %15
  %24 = bitcast %"class.base::OneShotTimer"* %21 to void (%"class.base::OneShotTimer"*)***
  %25 = load void (%"class.base::OneShotTimer"*)**, void (%"class.base::OneShotTimer"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.base::OneShotTimer"*)*, void (%"class.base::OneShotTimer"*)** %25, i64 1
  %27 = load void (%"class.base::OneShotTimer"*)*, void (%"class.base::OneShotTimer"*)** %26, align 8
  tail call void %27(%"class.base::OneShotTimer"* nonnull %21) #12
  br label %28

28:                                               ; preds = %15, %23
  tail call void @_ZN3net22ReportingCacheObserverD2Ev(%"class.net::ReportingCacheObserver"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_126ReportingDeliveryAgentImplD0Ev(%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 1
  %3 = bitcast %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [4 x i8*] }, { [6 x i8*], [4 x i8*] }* @_ZTVN3net12_GLOBAL__N_126ReportingDeliveryAgentImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [4 x i8*] }, { [6 x i8*], [4 x i8*] }* @_ZTVN3net12_GLOBAL__N_126ReportingDeliveryAgentImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 2
  %5 = load %"class.net::ReportingContext"*, %"class.net::ReportingContext"** %4, align 8
  tail call void @_ZN3net16ReportingContext19RemoveCacheObserverEPNS_22ReportingCacheObserverE(%"class.net::ReportingContext"* %5, %"class.net::ReportingCacheObserver"* %2) #12
  %6 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 6, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %6) #12
  %7 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %8 = load %"class.net::ReportingEndpointManager"*, %"class.net::ReportingEndpointManager"** %7, align 8
  store %"class.net::ReportingEndpointManager"* null, %"class.net::ReportingEndpointManager"** %7, align 8
  %9 = icmp eq %"class.net::ReportingEndpointManager"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.net::ReportingEndpointManager"* %8 to void (%"class.net::ReportingEndpointManager"*)***
  %12 = load void (%"class.net::ReportingEndpointManager"*)**, void (%"class.net::ReportingEndpointManager"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.net::ReportingEndpointManager"*)*, void (%"class.net::ReportingEndpointManager"*)** %12, i64 1
  %14 = load void (%"class.net::ReportingEndpointManager"*)*, void (%"class.net::ReportingEndpointManager"*)** %13, align 8
  tail call void %14(%"class.net::ReportingEndpointManager"* nonnull %8) #12
  br label %15

15:                                               ; preds = %10, %1
  %16 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 4, i32 0
  %17 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node"**
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %18, align 8
  tail call void @_ZNSt3__16__treeIN3net25ReportingEndpointGroupKeyENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %16, %"class.std::__1::__tree_node"* %19) #12
  %20 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.base::OneShotTimer"*, %"class.base::OneShotTimer"** %20, align 8
  store %"class.base::OneShotTimer"* null, %"class.base::OneShotTimer"** %20, align 8
  %22 = icmp eq %"class.base::OneShotTimer"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %15
  %24 = bitcast %"class.base::OneShotTimer"* %21 to void (%"class.base::OneShotTimer"*)***
  %25 = load void (%"class.base::OneShotTimer"*)**, void (%"class.base::OneShotTimer"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.base::OneShotTimer"*)*, void (%"class.base::OneShotTimer"*)** %25, i64 1
  %27 = load void (%"class.base::OneShotTimer"*)*, void (%"class.base::OneShotTimer"*)** %26, align 8
  tail call void %27(%"class.base::OneShotTimer"* nonnull %21) #12
  br label %28

28:                                               ; preds = %15, %23
  tail call void @_ZN3net22ReportingCacheObserverD2Ev(%"class.net::ReportingCacheObserver"* %2) #12
  %29 = bitcast %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %29) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_126ReportingDeliveryAgentImpl18SetTimerForTestingENSt3__110unique_ptrIN4base12OneShotTimerENS2_14default_deleteIS5_EEEE(%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* nocapture, %"class.base::OneShotTimer"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.base::OneShotTimer"* %1 to i64
  %4 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.base::OneShotTimer"*, %"class.base::OneShotTimer"** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr.37"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %"class.base::OneShotTimer"* %6, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.base::OneShotTimer"* %6 to void (%"class.base::OneShotTimer"*)***
  %11 = load void (%"class.base::OneShotTimer"*)**, void (%"class.base::OneShotTimer"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.base::OneShotTimer"*)*, void (%"class.base::OneShotTimer"*)** %11, i64 1
  %13 = load void (%"class.base::OneShotTimer"*)*, void (%"class.base::OneShotTimer"*)** %12, align 8
  tail call void %13(%"class.base::OneShotTimer"* nonnull %6) #12
  br label %14

14:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_126ReportingDeliveryAgentImpl16OnReportsUpdatedEv(%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.82", align 8
  %3 = bitcast %"class.std::__1::vector.82"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #12
  %4 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %2, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %2, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 24, i1 false) #12
  %6 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 2
  %7 = load %"class.net::ReportingContext"*, %"class.net::ReportingContext"** %6, align 8
  %8 = getelementptr inbounds %"class.net::ReportingContext", %"class.net::ReportingContext"* %7, i64 0, i32 6, i32 0, i32 0, i32 0
  %9 = load %"class.net::ReportingCache"*, %"class.net::ReportingCache"** %8, align 8
  %10 = bitcast %"class.net::ReportingCache"* %9 to void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)***
  %11 = load void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)**, void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)*, void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)** %11, i64 3
  %13 = load void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)*, void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)** %12, align 8
  call void %13(%"class.net::ReportingCache"* %9, %"class.std::__1::vector.82"* nonnull %2) #12
  %14 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %4, align 8
  %15 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %5, align 8
  %16 = icmp eq %"struct.net::ReportingReport"** %14, %15
  %17 = icmp eq %"struct.net::ReportingReport"** %14, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %1
  %19 = ptrtoint %"struct.net::ReportingReport"** %14 to i64
  %20 = bitcast %"struct.net::ReportingReport"*** %5 to i64*
  store i64 %19, i64* %20, align 8
  %21 = bitcast %"struct.net::ReportingReport"** %14 to i8*
  call void @_ZdlPv(i8* %21) #11
  br label %22

22:                                               ; preds = %1, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #12
  br i1 %16, label %29, label %23

23:                                               ; preds = %22
  %24 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.base::OneShotTimer"*, %"class.base::OneShotTimer"** %24, align 8
  %26 = getelementptr inbounds %"class.base::OneShotTimer", %"class.base::OneShotTimer"* %25, i64 0, i32 0
  %27 = call zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"* %26) #12
  br i1 %27, label %29, label %28

28:                                               ; preds = %23
  call fastcc void @_ZN3net12_GLOBAL__N_126ReportingDeliveryAgentImpl11SendReportsEv(%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0)
  call fastcc void @_ZN3net12_GLOBAL__N_126ReportingDeliveryAgentImpl10StartTimerEv(%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0)
  br label %29

29:                                               ; preds = %22, %28, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn8_N3net12_GLOBAL__N_126ReportingDeliveryAgentImpl16OnReportsUpdatedEv(%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.std::__1::vector.82", align 8
  %5 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 -1, i32 6, i32 0, i32 1
  %6 = bitcast i64* %5 to %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*
  %7 = bitcast %"class.std::__1::vector.82"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %4, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #12
  %10 = getelementptr inbounds i64, i64* %5, i64 2
  %11 = bitcast i64* %10 to %"class.net::ReportingContext"**
  %12 = load %"class.net::ReportingContext"*, %"class.net::ReportingContext"** %11, align 8
  %13 = getelementptr inbounds %"class.net::ReportingContext", %"class.net::ReportingContext"* %12, i64 0, i32 6, i32 0, i32 0, i32 0
  %14 = load %"class.net::ReportingCache"*, %"class.net::ReportingCache"** %13, align 8
  %15 = bitcast %"class.net::ReportingCache"* %14 to void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)***
  %16 = load void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)**, void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)*, void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)** %16, i64 3
  %18 = load void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)*, void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)** %17, align 8
  call void %18(%"class.net::ReportingCache"* %14, %"class.std::__1::vector.82"* nonnull %4) #12
  %19 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %8, align 8
  %20 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %9, align 8
  %21 = icmp eq %"struct.net::ReportingReport"** %19, %20
  %22 = icmp eq %"struct.net::ReportingReport"** %19, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %1
  %24 = ptrtoint %"struct.net::ReportingReport"** %19 to i64
  %25 = bitcast %"struct.net::ReportingReport"*** %9 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"struct.net::ReportingReport"** %19 to i8*
  call void @_ZdlPv(i8* %26) #11
  br label %27

27:                                               ; preds = %23, %1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  br i1 %21, label %54, label %28

28:                                               ; preds = %27
  %29 = getelementptr inbounds i64, i64* %5, i64 3
  %30 = bitcast i64* %29 to %"class.base::OneShotTimer"**
  %31 = load %"class.base::OneShotTimer"*, %"class.base::OneShotTimer"** %30, align 8
  %32 = getelementptr inbounds %"class.base::OneShotTimer", %"class.base::OneShotTimer"* %31, i64 0, i32 0
  %33 = call zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"* %32) #12
  br i1 %33, label %54, label %34

34:                                               ; preds = %28
  call fastcc void @_ZN3net12_GLOBAL__N_126ReportingDeliveryAgentImpl11SendReportsEv(%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %6) #12
  %35 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = load %"class.base::OneShotTimer"*, %"class.base::OneShotTimer"** %30, align 8
  %37 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.11, i64 0, i64 0), i32 204) #12
  %38 = load %"class.net::ReportingContext"*, %"class.net::ReportingContext"** %11, align 8
  %39 = getelementptr inbounds %"class.net::ReportingContext", %"class.net::ReportingContext"* %38, i64 0, i32 0, i32 3, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = ptrtoint i64* %5 to i64
  %42 = call i8* @_Znwm(i64 56) #11, !noalias !2
  %43 = bitcast i8* %42 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %43, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvvEJNS0_17UnretainedWrapperIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvvEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !2
  %44 = getelementptr inbounds i8, i8* %42, i64 32
  %45 = bitcast i8* %44 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*)* @_ZN3net12_GLOBAL__N_126ReportingDeliveryAgentImpl12OnTimerFiredEv to i64), i64 0>, <2 x i64>* %45, align 8, !noalias !2
  %46 = getelementptr inbounds i8, i8* %42, i64 48
  %47 = bitcast i8* %46 to i64*
  store i64 %41, i64* %47, align 8, !noalias !2
  %48 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %42, i8** %48, align 8, !alias.scope !2
  %49 = bitcast %"class.base::OneShotTimer"* %36 to void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)***
  %50 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)**, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %50, i64 7
  %52 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %51, align 8
  call void %52(%"class.base::OneShotTimer"* %36, %"class.base::Location"* nonnull dereferenceable(32) %2, i64 %40, %"class.base::OnceCallback"* nonnull %3) #12
  %53 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %53) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  br label %54

54:                                               ; preds = %27, %28, %34
  ret void
}

declare void @_ZN3net22ReportingCacheObserver16OnClientsUpdatedEv(%"class.net::ReportingCacheObserver"*) unnamed_addr #6

declare void @_ZN4base12OneShotTimerC1Ev(%"class.base::OneShotTimer"*) unnamed_addr #6

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #6

declare void @_ZN3net16ReportingContext19RemoveCacheObserverEPNS_22ReportingCacheObserverE(%"class.net::ReportingContext"*, %"class.net::ReportingCacheObserver"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN3net22ReportingCacheObserverD2Ev(%"class.net::ReportingCacheObserver"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN3net25ReportingEndpointGroupKeyENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN3net25ReportingEndpointGroupKeyENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN3net25ReportingEndpointGroupKeyENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1
  tail call void @_ZN3net25ReportingEndpointGroupKeyD1Ev(%"struct.net::ReportingEndpointGroupKey"* %10) #12
  %11 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %11) #11
  ret void

12:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net25ReportingEndpointGroupKeyD1Ev(%"struct.net::ReportingEndpointGroupKey"*) unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3net12_GLOBAL__N_126ReportingDeliveryAgentImpl11SendReportsEv(%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.std::__1::vector.82", align 16
  %4 = alloca %"class.std::__1::set.130", align 16
  %5 = alloca %"class.url::Origin", align 8
  %6 = alloca %"class.std::__1::set.130", align 16
  %7 = alloca %"class.base::OnceCallback.141", align 8
  %8 = alloca %"class.base::WeakPtr", align 8
  %9 = bitcast %"class.std::__1::vector.82"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %3, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %3, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 2
  %14 = bitcast %"class.std::__1::vector.82"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 24, i1 false)
  %15 = load %"class.net::ReportingContext"*, %"class.net::ReportingContext"** %13, align 8
  %16 = getelementptr inbounds %"class.net::ReportingContext", %"class.net::ReportingContext"* %15, i64 0, i32 6, i32 0, i32 0, i32 0
  %17 = load %"class.net::ReportingCache"*, %"class.net::ReportingCache"** %16, align 8
  %18 = bitcast %"class.net::ReportingCache"* %17 to void (%"class.std::__1::vector.82"*, %"class.net::ReportingCache"*)***
  %19 = load void (%"class.std::__1::vector.82"*, %"class.net::ReportingCache"*)**, void (%"class.std::__1::vector.82"*, %"class.net::ReportingCache"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.std::__1::vector.82"*, %"class.net::ReportingCache"*)*, void (%"class.std::__1::vector.82"*, %"class.net::ReportingCache"*)** %19, i64 5
  %21 = load void (%"class.std::__1::vector.82"*, %"class.net::ReportingCache"*)*, void (%"class.std::__1::vector.82"*, %"class.net::ReportingCache"*)** %20, align 8
  call void %21(%"class.std::__1::vector.82"* nonnull sret %3, %"class.net::ReportingCache"* %17) #12
  %22 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %10, align 16
  %23 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %11, align 8
  %24 = icmp eq %"struct.net::ReportingReport"** %22, %23
  br i1 %24, label %97, label %25

25:                                               ; preds = %1
  %26 = bitcast %"class.std::__1::set.130"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  %27 = getelementptr inbounds %"class.std::__1::set.130", %"class.std::__1::set.130"* %4, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::set.130", %"class.std::__1::set.130"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::set.130", %"class.std::__1::set.130"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::set.130", %"class.std::__1::set.130"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %31 = bitcast %"class.std::__1::__tree_node_base"** %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %30, %"class.std::__1::__tree_end_node"** %27, align 16
  %32 = bitcast %"class.url::Origin"* %5 to i8*
  %33 = getelementptr inbounds %"class.std::__1::set.130", %"class.std::__1::set.130"* %4, i64 0, i32 0
  br label %90

34:                                               ; preds = %90
  %35 = load %"class.net::ReportingContext"*, %"class.net::ReportingContext"** %13, align 8
  %36 = getelementptr inbounds %"class.net::ReportingContext", %"class.net::ReportingContext"* %35, i64 0, i32 5, i32 0, i32 0, i32 0
  %37 = load %"class.net::ReportingDelegate"*, %"class.net::ReportingDelegate"** %36, align 8
  %38 = bitcast %"class.std::__1::set.130"* %4 to <2 x i64>*
  %39 = load <2 x i64>, <2 x i64>* %38, align 16
  %40 = bitcast %"class.std::__1::set.130"* %6 to <2 x i64>*
  store <2 x i64> %39, <2 x i64>* %40, align 16
  %41 = getelementptr inbounds %"class.std::__1::set.130", %"class.std::__1::set.130"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %42 = load i64, i64* %29, align 16
  store i64 %42, i64* %41, align 16
  %43 = icmp eq i64 %42, 0
  %44 = getelementptr inbounds %"class.std::__1::set.130", %"class.std::__1::set.130"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  br i1 %43, label %45, label %47

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"class.std::__1::set.130", %"class.std::__1::set.130"* %6, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %44, %"class.std::__1::__tree_end_node"** %46, align 16
  br label %52

47:                                               ; preds = %34
  %48 = extractelement <2 x i64> %39, i32 1
  %49 = inttoptr i64 %48 to %"class.std::__1::__tree_node_base"*
  %50 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %49, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %44, %"class.std::__1::__tree_end_node"** %50, align 8
  store %"class.std::__1::__tree_end_node"* %30, %"class.std::__1::__tree_end_node"** %27, align 16
  %51 = bitcast %"class.std::__1::__tree_end_node"* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #12
  br label %52

52:                                               ; preds = %45, %47
  %53 = bitcast %"class.base::WeakPtr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #12
  %54 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #12, !noalias !7
  %55 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 6, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %55) #12, !noalias !7
  %56 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 6, i32 0, i32 1
  %57 = load i64, i64* %56, align 8, !noalias !7
  %58 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %58, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %57) #12
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #12, !noalias !7
  %59 = call i8* @_Znwm(i64 88) #11, !noalias !10
  %60 = bitcast i8* %59 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %60, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::set.130"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvNSt3__16vectorIPKNS3_15ReportingReportENS6_9allocatorISA_EEEENS6_3setIN3url6OriginENS6_4lessISG_EENSB_ISG_EEEEEJNS_7WeakPtrIS5_EESD_EEEFvSK_EE7RunOnceEPNS0_13BindStateBaseEOSK_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvNSt3__16vectorIPKNS2_15ReportingReportENS5_9allocatorIS9_EEEENS5_3setIN3url6OriginENS5_4lessISF_EENSA_ISF_EEEEEJNS_7WeakPtrIS4_EESC_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvNSt3__16vectorIPKNS3_15ReportingReportENS6_9allocatorISA_EEEENS6_3setIN3url6OriginENS6_4lessISG_EENSB_ISG_EEEEEJNS_7WeakPtrIS5_EESD_EEEEEbPKNS0_13BindStateBaseENSQ_21CancellationQueryModeE) #12, !noalias !10
  %61 = getelementptr inbounds i8, i8* %59, i64 32
  %62 = bitcast i8* %61 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*, %"class.std::__1::vector.82"*, %"class.std::__1::set.130"*)* @_ZN3net12_GLOBAL__N_126ReportingDeliveryAgentImpl24OnSendPermissionsCheckedENSt3__16vectorIPKNS_15ReportingReportENS2_9allocatorIS6_EEEENS2_3setIN3url6OriginENS2_4lessISC_EENS7_ISC_EEEE to i64), i64 0>, <2 x i64>* %62, align 8, !noalias !10
  %63 = getelementptr inbounds i8, i8* %59, i64 48
  %64 = bitcast i8* %63 to %"class.base::internal::WeakReference"*
  %65 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %64, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %65) #12, !noalias !10
  %66 = getelementptr inbounds i8, i8* %59, i64 56
  %67 = bitcast i8* %66 to i64*
  %68 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 1
  %69 = load i64, i64* %68, align 8, !noalias !10
  store i64 %69, i64* %67, align 8, !noalias !10
  %70 = getelementptr inbounds i8, i8* %59, i64 64
  %71 = bitcast %"class.std::__1::vector.82"* %3 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 16, !noalias !10
  %73 = bitcast i8* %70 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %73, align 8, !noalias !10
  %74 = bitcast %"struct.net::ReportingReport"*** %12 to i64*
  %75 = load i64, i64* %74, align 16, !noalias !10
  %76 = getelementptr inbounds i8, i8* %59, i64 80
  %77 = bitcast i8* %76 to i64*
  store i64 %75, i64* %77, align 8, !noalias !10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 24, i1 false) #12, !noalias !10
  %78 = bitcast %"class.base::OnceCallback.141"* %7 to i8**
  store i8* %59, i8** %78, align 8, !alias.scope !10
  %79 = bitcast %"class.net::ReportingDelegate"* %37 to void (%"class.net::ReportingDelegate"*, %"class.std::__1::set.130"*, %"class.base::OnceCallback.141"*)***
  %80 = load void (%"class.net::ReportingDelegate"*, %"class.std::__1::set.130"*, %"class.base::OnceCallback.141"*)**, void (%"class.net::ReportingDelegate"*, %"class.std::__1::set.130"*, %"class.base::OnceCallback.141"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.net::ReportingDelegate"*, %"class.std::__1::set.130"*, %"class.base::OnceCallback.141"*)*, void (%"class.net::ReportingDelegate"*, %"class.std::__1::set.130"*, %"class.base::OnceCallback.141"*)** %80, i64 3
  %82 = load void (%"class.net::ReportingDelegate"*, %"class.std::__1::set.130"*, %"class.base::OnceCallback.141"*)*, void (%"class.net::ReportingDelegate"*, %"class.std::__1::set.130"*, %"class.base::OnceCallback.141"*)** %81, align 8
  call void %82(%"class.net::ReportingDelegate"* %37, %"class.std::__1::set.130"* nonnull %6, %"class.base::OnceCallback.141"* nonnull %7) #12
  %83 = getelementptr inbounds %"class.base::OnceCallback.141", %"class.base::OnceCallback.141"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %83) #12
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %58) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #12
  %84 = getelementptr inbounds %"class.std::__1::set.130", %"class.std::__1::set.130"* %6, i64 0, i32 0
  %85 = bitcast %"class.std::__1::__tree_end_node"* %44 to %"class.std::__1::__tree_node.145"**
  %86 = load %"class.std::__1::__tree_node.145"*, %"class.std::__1::__tree_node.145"** %85, align 8
  call void @_ZNSt3__16__treeIN3url6OriginENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.131"* nonnull %84, %"class.std::__1::__tree_node.145"* %86) #12
  %87 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.std::__1::__tree_node.145"**
  %88 = load %"class.std::__1::__tree_node.145"*, %"class.std::__1::__tree_node.145"** %87, align 8
  call void @_ZNSt3__16__treeIN3url6OriginENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.131"* nonnull %33, %"class.std::__1::__tree_node.145"* %88) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  %89 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %10, align 16
  br label %97

90:                                               ; preds = %25, %90
  %91 = phi %"struct.net::ReportingReport"** [ %22, %25 ], [ %95, %90 ]
  %92 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %91, align 8
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %32) #12
  %93 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %92, i64 0, i32 1
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %5, %class.GURL* dereferenceable(120) %93) #12
  %94 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN3url6OriginENS_4lessIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.131"* nonnull %33, %"class.url::Origin"* nonnull dereferenceable(80) %5, %"class.url::Origin"* nonnull dereferenceable(80) %5) #12
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %32) #12
  %95 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %91, i64 1
  %96 = icmp eq %"struct.net::ReportingReport"** %95, %23
  br i1 %96, label %34, label %90

97:                                               ; preds = %1, %52
  %98 = phi %"struct.net::ReportingReport"** [ %22, %1 ], [ %89, %52 ]
  %99 = icmp eq %"struct.net::ReportingReport"** %98, null
  br i1 %99, label %104, label %100

100:                                              ; preds = %97
  %101 = ptrtoint %"struct.net::ReportingReport"** %98 to i64
  %102 = bitcast %"struct.net::ReportingReport"*** %11 to i64*
  store i64 %101, i64* %102, align 8
  %103 = bitcast %"struct.net::ReportingReport"** %98 to i8*
  call void @_ZdlPv(i8* %103) #11
  br label %104

104:                                              ; preds = %97, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3net12_GLOBAL__N_126ReportingDeliveryAgentImpl10StartTimerEv(%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.base::OneShotTimer"*, %"class.base::OneShotTimer"** %4, align 8
  %6 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.11, i64 0, i64 0), i32 204) #12
  %7 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 2
  %8 = load %"class.net::ReportingContext"*, %"class.net::ReportingContext"** %7, align 8
  %9 = getelementptr inbounds %"class.net::ReportingContext", %"class.net::ReportingContext"* %8, i64 0, i32 0, i32 3, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = ptrtoint %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0 to i64
  %12 = call i8* @_Znwm(i64 56) #11, !noalias !15
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvvEJNS0_17UnretainedWrapperIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvvEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !15
  %14 = getelementptr inbounds i8, i8* %12, i64 32
  %15 = bitcast i8* %14 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*)* @_ZN3net12_GLOBAL__N_126ReportingDeliveryAgentImpl12OnTimerFiredEv to i64), i64 0>, <2 x i64>* %15, align 8, !noalias !15
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %11, i64* %17, align 8, !noalias !15
  %18 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !15
  %19 = bitcast %"class.base::OneShotTimer"* %5 to void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)***
  %20 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)**, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %20, i64 7
  %22 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %21, align 8
  call void %22(%"class.base::OneShotTimer"* %5, %"class.base::Location"* nonnull dereferenceable(32) %2, i64 %10, %"class.base::OnceCallback"* nonnull %3) #12
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  ret void
}

declare void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_126ReportingDeliveryAgentImpl24OnSendPermissionsCheckedENSt3__16vectorIPKNS_15ReportingReportENS2_9allocatorIS6_EEEENS2_3setIN3url6OriginENS2_4lessISC_EENS7_ISC_EEEE(%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*, %"class.std::__1::vector.82"* nocapture readonly, %"class.std::__1::set.130"*) #0 align 2 {
  %4 = alloca %"class.std::__1::tuple.246", align 8
  %5 = alloca %"class.std::__1::tuple.249", align 1
  %6 = alloca %"struct.std::__1::__tuple_less", align 1
  %7 = alloca %"class.std::__1::tuple.214", align 8
  %8 = alloca %"class.std::__1::tuple.214", align 8
  %9 = alloca %"struct.std::__1::__tuple_less", align 1
  %10 = alloca %"class.std::__1::tuple.214", align 8
  %11 = alloca %"class.std::__1::tuple.214", align 8
  %12 = alloca %"struct.std::__1::__tuple_less", align 1
  %13 = alloca %"class.std::__1::tuple.214", align 8
  %14 = alloca %"class.std::__1::tuple.214", align 8
  %15 = alloca %"struct.std::__1::__tuple_less", align 1
  %16 = alloca %"class.std::__1::tuple.214", align 8
  %17 = alloca %"class.std::__1::tuple.214", align 16
  %18 = alloca %"struct.net::ReportingEndpointGroupKey", align 8
  %19 = alloca %"struct.net::ReportingEndpointGroupKey", align 8
  %20 = alloca %"class.base::ListValue", align 8
  %21 = alloca %"class.base::TimeDelta", align 8
  %22 = alloca %"class.base::Value", align 8
  %23 = alloca %"class.base::internal::WeakReference", align 8
  %24 = alloca i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, align 8
  %25 = alloca %"class.std::__1::map", align 8
  %26 = alloca %"struct.net::ReportingEndpointGroupKey", align 8
  %27 = alloca %"struct.net::ReportingEndpoint", align 8
  %28 = alloca %"struct.net::(anonymous namespace)::Delivery::Target", align 8
  %29 = alloca %"struct.std::__1::pair.183", align 8
  %30 = alloca %"class.std::__1::set.190", align 8
  %31 = alloca %"struct.std::__1::less.198", align 1
  %32 = alloca %"class.std::__1::basic_string", align 8
  %33 = alloca %"class.base::OnceCallback.200", align 8
  %34 = alloca %"class.base::WeakPtr", align 8
  %35 = alloca %"class.std::__1::vector.82", align 8
  %36 = bitcast %"class.std::__1::map"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #12
  %37 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %25, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %25, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %25, i64 0, i32 0, i32 2, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %25, i64 0, i32 0, i32 1, i32 0, i32 0
  %41 = bitcast %"class.std::__1::__tree_node_base"** %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %37, align 8
  %42 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %1, i64 0, i32 0, i32 0
  %43 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %1, i64 0, i32 0, i32 1
  %45 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %44, align 8
  %46 = bitcast i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46)
  store i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)* @_ZN3net12_GLOBAL__N_122CompareReportGroupKeysEPKNS_15ReportingReportES3_, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %24, align 8
  call void @_ZNSt3__16__sortIRPFbPKN3net15ReportingReportES4_EPS4_EEvT0_S9_T_(%"struct.net::ReportingReport"** %43, %"struct.net::ReportingReport"** %45, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** nonnull dereferenceable(8) %24) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46)
  %47 = bitcast %"class.std::__1::vector.82"* %1 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %44, align 8
  %50 = inttoptr i64 %48 to %"struct.net::ReportingReport"**
  %51 = icmp eq %"struct.net::ReportingReport"** %49, %50
  br i1 %51, label %122, label %52

52:                                               ; preds = %3
  %53 = getelementptr inbounds %"struct.net::ReportingEndpointGroupKey", %"struct.net::ReportingEndpointGroupKey"* %18, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.net::ReportingEndpointGroupKey", %"struct.net::ReportingEndpointGroupKey"* %19, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.net::ReportingEndpointGroupKey", %"struct.net::ReportingEndpointGroupKey"* %26, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.net::ReportingEndpointGroupKey", %"struct.net::ReportingEndpointGroupKey"* %26, i64 0, i32 1
  %57 = getelementptr inbounds %"class.std::__1::set.130", %"class.std::__1::set.130"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %58 = bitcast %"class.std::__1::__tree_end_node"* %57 to %"class.std::__1::__tree_node.145"**
  %59 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %60 = bitcast %"class.std::__1::__tree_end_node"* %59 to %"class.std::__1::__tree_node"**
  %61 = getelementptr inbounds %"struct.net::ReportingEndpoint", %"struct.net::ReportingEndpoint"* %27, i64 0, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 4, i32 0
  %64 = getelementptr inbounds %"struct.net::(anonymous namespace)::Delivery::Target", %"struct.net::(anonymous namespace)::Delivery::Target"* %28, i64 0, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.net::ReportingEndpointGroupKey", %"struct.net::ReportingEndpointGroupKey"* %26, i64 0, i32 0
  %66 = getelementptr inbounds %"struct.net::ReportingEndpoint", %"struct.net::ReportingEndpoint"* %27, i64 0, i32 1, i32 0
  %67 = getelementptr inbounds %"struct.net::(anonymous namespace)::Delivery::Target", %"struct.net::(anonymous namespace)::Delivery::Target"* %28, i64 0, i32 0
  %68 = getelementptr inbounds %"struct.net::(anonymous namespace)::Delivery::Target", %"struct.net::(anonymous namespace)::Delivery::Target"* %28, i64 0, i32 1
  %69 = getelementptr inbounds %"struct.net::(anonymous namespace)::Delivery::Target", %"struct.net::(anonymous namespace)::Delivery::Target"* %28, i64 0, i32 2
  %70 = bitcast %"class.std::__1::__tree_end_node"* %40 to %"class.std::__1::__tree_node.213"**
  %71 = bitcast %"class.std::__1::tuple.214"* %13 to i8*
  %72 = getelementptr inbounds %"class.std::__1::tuple.214", %"class.std::__1::tuple.214"* %13, i64 0, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::tuple.214", %"class.std::__1::tuple.214"* %13, i64 0, i32 0, i32 1, i32 0
  %74 = getelementptr inbounds %"class.std::__1::tuple.214", %"class.std::__1::tuple.214"* %13, i64 0, i32 0, i32 2, i32 0
  %75 = bitcast %"class.std::__1::tuple.214"* %14 to i8*
  %76 = getelementptr inbounds %"class.std::__1::tuple.214", %"class.std::__1::tuple.214"* %14, i64 0, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.std::__1::tuple.214", %"class.std::__1::tuple.214"* %14, i64 0, i32 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.std::__1::tuple.214", %"class.std::__1::tuple.214"* %14, i64 0, i32 0, i32 2, i32 0
  %79 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %12, i64 0, i32 0
  %80 = bitcast %"class.std::__1::tuple.214"* %16 to i8*
  %81 = getelementptr inbounds %"class.std::__1::tuple.214", %"class.std::__1::tuple.214"* %16, i64 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.std::__1::tuple.214", %"class.std::__1::tuple.214"* %16, i64 0, i32 0, i32 1, i32 0
  %83 = getelementptr inbounds %"class.std::__1::tuple.214", %"class.std::__1::tuple.214"* %16, i64 0, i32 0, i32 2, i32 0
  %84 = bitcast %"class.std::__1::tuple.214"* %17 to i8*
  %85 = getelementptr inbounds %"class.std::__1::tuple.214", %"class.std::__1::tuple.214"* %17, i64 0, i32 0, i32 2, i32 0
  %86 = bitcast %class.GURL** %85 to %"class.std::__1::__tree_end_node"**
  %87 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %15, i64 0, i32 0
  %88 = getelementptr inbounds %"struct.std::__1::pair.183", %"struct.std::__1::pair.183"* %29, i64 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::__1::pair.183", %"struct.std::__1::pair.183"* %29, i64 0, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.std::__1::pair.183", %"struct.std::__1::pair.183"* %29, i64 0, i32 0, i32 1
  %91 = getelementptr inbounds %"struct.std::__1::pair.183", %"struct.std::__1::pair.183"* %29, i64 0, i32 0, i32 2
  %92 = getelementptr inbounds %"struct.std::__1::pair.183", %"struct.std::__1::pair.183"* %29, i64 0, i32 1
  %93 = bitcast %"class.std::__1::unique_ptr.166"* %92 to i64*
  %94 = bitcast %"class.std::__1::tuple.214"* %7 to i8*
  %95 = getelementptr inbounds %"class.std::__1::tuple.214", %"class.std::__1::tuple.214"* %7, i64 0, i32 0, i32 0, i32 0
  %96 = getelementptr inbounds %"class.std::__1::tuple.214", %"class.std::__1::tuple.214"* %7, i64 0, i32 0, i32 1, i32 0
  %97 = getelementptr inbounds %"class.std::__1::tuple.214", %"class.std::__1::tuple.214"* %7, i64 0, i32 0, i32 2, i32 0
  %98 = bitcast %"class.std::__1::tuple.214"* %8 to i8*
  %99 = getelementptr inbounds %"class.std::__1::tuple.214", %"class.std::__1::tuple.214"* %8, i64 0, i32 0, i32 0, i32 0
  %100 = getelementptr inbounds %"class.std::__1::tuple.214", %"class.std::__1::tuple.214"* %8, i64 0, i32 0, i32 1, i32 0
  %101 = getelementptr inbounds %"class.std::__1::tuple.214", %"class.std::__1::tuple.214"* %8, i64 0, i32 0, i32 2, i32 0
  %102 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %6, i64 0, i32 0
  %103 = bitcast %"class.std::__1::tuple.214"* %10 to i8*
  %104 = getelementptr inbounds %"class.std::__1::tuple.214", %"class.std::__1::tuple.214"* %10, i64 0, i32 0, i32 0, i32 0
  %105 = getelementptr inbounds %"class.std::__1::tuple.214", %"class.std::__1::tuple.214"* %10, i64 0, i32 0, i32 1, i32 0
  %106 = getelementptr inbounds %"class.std::__1::tuple.214", %"class.std::__1::tuple.214"* %10, i64 0, i32 0, i32 2, i32 0
  %107 = bitcast %"class.std::__1::tuple.214"* %11 to i8*
  %108 = getelementptr inbounds %"class.std::__1::tuple.214", %"class.std::__1::tuple.214"* %11, i64 0, i32 0, i32 0, i32 0
  %109 = getelementptr inbounds %"class.std::__1::tuple.214", %"class.std::__1::tuple.214"* %11, i64 0, i32 0, i32 1, i32 0
  %110 = getelementptr inbounds %"class.std::__1::tuple.214", %"class.std::__1::tuple.214"* %11, i64 0, i32 0, i32 2, i32 0
  %111 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %9, i64 0, i32 0
  %112 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 0, i32 0
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %92, i64 0, i32 0, i32 0, i32 0
  %114 = bitcast %"class.std::__1::map"* %25 to i64*
  %115 = getelementptr inbounds %"struct.net::ReportingEndpoint", %"struct.net::ReportingEndpoint"* %27, i64 0, i32 0
  %116 = bitcast %"class.std::__1::tuple.246"* %4 to i8*
  %117 = getelementptr inbounds %"class.std::__1::tuple.246", %"class.std::__1::tuple.246"* %4, i64 0, i32 0, i32 0, i32 0
  %118 = getelementptr inbounds %"class.std::__1::tuple.249", %"class.std::__1::tuple.249"* %5, i64 0, i32 0
  %119 = bitcast %"class.std::__1::tuple.214"* %17 to <2 x %"class.std::__1::__tree_end_node"*>*
  br label %156

120:                                              ; preds = %379
  %121 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %42, align 8
  br label %122

122:                                              ; preds = %120, %3
  %123 = phi %"struct.net::ReportingReport"** [ %49, %3 ], [ %121, %120 ]
  %124 = phi %"struct.net::ReportingReport"** [ %49, %3 ], [ %180, %120 ]
  %125 = bitcast %"class.std::__1::set.190"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125) #12
  %126 = getelementptr inbounds %"class.std::__1::set.190", %"class.std::__1::set.190"* %30, i64 0, i32 0, i32 0
  %127 = getelementptr inbounds %"class.std::__1::set.190", %"class.std::__1::set.190"* %30, i64 0, i32 0, i32 2, i32 0, i32 0
  %128 = getelementptr inbounds %"struct.std::__1::less.198", %"struct.std::__1::less.198"* %31, i64 0, i32 0
  %129 = bitcast %"class.std::__1::set.190"* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %129, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %128) #12
  call void @_ZNSt3__13setIPKN3net15ReportingReportENS_4lessIS4_EENS_9allocatorIS4_EEEC2INS_11__wrap_iterIPS4_EEEET_SE_RKS6_(%"class.std::__1::set.190"* nonnull %30, %"struct.net::ReportingReport"** %123, %"struct.net::ReportingReport"** %124, %"struct.std::__1::less.198"* nonnull dereferenceable(1) %31)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %128) #12
  %130 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %131 = icmp eq %"class.std::__1::__tree_end_node"* %130, %40
  br i1 %131, label %382, label %132

132:                                              ; preds = %122
  %133 = getelementptr inbounds %"class.std::__1::set.190", %"class.std::__1::set.190"* %30, i64 0, i32 0, i32 1, i32 0, i32 0
  %134 = bitcast %"class.std::__1::__tree_end_node"* %133 to %"class.std::__1::__tree_node.264"**
  %135 = bitcast %"class.std::__1::set.190"* %30 to i64*
  %136 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %137 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 2
  %139 = bitcast %"class.base::ListValue"* %20 to i8*
  %140 = bitcast %"class.base::TimeDelta"* %21 to i8*
  %141 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %21, i64 0, i32 0
  %142 = bitcast %"class.base::Value"* %22 to i8*
  %143 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %20, i64 0, i32 0
  %144 = bitcast %"class.base::WeakPtr"* %34 to i8*
  %145 = bitcast %"class.base::internal::WeakReference"* %23 to i8*
  %146 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 6, i32 0, i32 0
  %147 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 6, i32 0, i32 1
  %148 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %34, i64 0, i32 0
  %149 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %34, i64 0, i32 0, i32 0
  %150 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %34, i64 0, i32 0, i32 1
  %151 = bitcast %"class.base::OnceCallback.200"* %33 to i8**
  %152 = getelementptr inbounds %"class.base::OnceCallback.200", %"class.base::OnceCallback.200"* %33, i64 0, i32 0
  %153 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %154 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %153, i64 0, i32 1, i32 0
  %155 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  br label %409

156:                                              ; preds = %52, %379
  %157 = phi %"struct.net::ReportingReport"** [ %50, %52 ], [ %180, %379 ]
  %158 = phi %"struct.net::ReportingReport"** [ %49, %52 ], [ %380, %379 ]
  %159 = phi i64 [ %48, %52 ], [ %181, %379 ]
  %160 = ptrtoint %"struct.net::ReportingReport"** %158 to i64
  %161 = sub i64 %160, %159
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %179, label %163

163:                                              ; preds = %156
  %164 = ashr exact i64 %161, 3
  br label %165

165:                                              ; preds = %165, %163
  %166 = phi %"struct.net::ReportingReport"** [ %177, %165 ], [ %157, %163 ]
  %167 = phi i64 [ %176, %165 ], [ %164, %163 ]
  %168 = lshr i64 %167, 1
  %169 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %166, i64 %168
  %170 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %157, align 8
  %171 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %169, align 8
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %53) #12
  call void @_ZNK3net15ReportingReport11GetGroupKeyEv(%"struct.net::ReportingEndpointGroupKey"* nonnull sret %18, %"struct.net::ReportingReport"* %170) #12
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %54) #12
  call void @_ZNK3net15ReportingReport11GetGroupKeyEv(%"struct.net::ReportingEndpointGroupKey"* nonnull sret %19, %"struct.net::ReportingReport"* %171) #12
  %172 = call zeroext i1 @_ZN3netltERKNS_25ReportingEndpointGroupKeyES2_(%"struct.net::ReportingEndpointGroupKey"* nonnull dereferenceable(288) %18, %"struct.net::ReportingEndpointGroupKey"* nonnull dereferenceable(288) %19) #12
  call void @_ZN3net25ReportingEndpointGroupKeyD1Ev(%"struct.net::ReportingEndpointGroupKey"* nonnull %19) #12
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %54) #12
  call void @_ZN3net25ReportingEndpointGroupKeyD1Ev(%"struct.net::ReportingEndpointGroupKey"* nonnull %18) #12
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %53) #12
  %173 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %169, i64 1
  %174 = xor i64 %168, -1
  %175 = add i64 %167, %174
  %176 = select i1 %172, i64 %168, i64 %175
  %177 = select i1 %172, %"struct.net::ReportingReport"** %166, %"struct.net::ReportingReport"** %173
  %178 = icmp eq i64 %176, 0
  br i1 %178, label %179, label %165

179:                                              ; preds = %165, %156
  %180 = phi %"struct.net::ReportingReport"** [ %157, %156 ], [ %177, %165 ]
  %181 = ptrtoint %"struct.net::ReportingReport"** %180 to i64
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %55) #12
  %182 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %157, align 8
  call void @_ZNK3net15ReportingReport11GetGroupKeyEv(%"struct.net::ReportingEndpointGroupKey"* nonnull sret %26, %"struct.net::ReportingReport"* %182) #12
  %183 = load %"class.std::__1::__tree_node.145"*, %"class.std::__1::__tree_node.145"** %58, align 8
  %184 = icmp eq %"class.std::__1::__tree_node.145"* %183, null
  br i1 %184, label %379, label %185

185:                                              ; preds = %179, %185
  %186 = phi %"class.std::__1::__tree_end_node"* [ %195, %185 ], [ %57, %179 ]
  %187 = phi %"class.std::__1::__tree_node.145"* [ %196, %185 ], [ %183, %179 ]
  %188 = getelementptr inbounds %"class.std::__1::__tree_node.145", %"class.std::__1::__tree_node.145"* %187, i64 0, i32 1
  %189 = call zeroext i1 @_ZNK3url6OriginltERKS0_(%"class.url::Origin"* %188, %"class.url::Origin"* dereferenceable(80) %56) #12
  %190 = getelementptr inbounds %"class.std::__1::__tree_node.145", %"class.std::__1::__tree_node.145"* %187, i64 0, i32 0, i32 1
  %191 = bitcast %"class.std::__1::__tree_node_base"** %190 to %"class.std::__1::__tree_node.145"**
  %192 = getelementptr inbounds %"class.std::__1::__tree_node.145", %"class.std::__1::__tree_node.145"* %187, i64 0, i32 0, i32 0
  %193 = bitcast %"class.std::__1::__tree_node.145"* %187 to %"class.std::__1::__tree_node.145"**
  %194 = select i1 %189, %"class.std::__1::__tree_node.145"** %191, %"class.std::__1::__tree_node.145"** %193
  %195 = select i1 %189, %"class.std::__1::__tree_end_node"* %186, %"class.std::__1::__tree_end_node"* %192
  %196 = load %"class.std::__1::__tree_node.145"*, %"class.std::__1::__tree_node.145"** %194, align 8
  %197 = icmp eq %"class.std::__1::__tree_node.145"* %196, null
  br i1 %197, label %198, label %185

198:                                              ; preds = %185
  %199 = icmp eq %"class.std::__1::__tree_end_node"* %195, %57
  br i1 %199, label %379, label %200

200:                                              ; preds = %198
  %201 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %195, i64 4
  %202 = bitcast %"class.std::__1::__tree_end_node"* %201 to %"class.url::Origin"*
  %203 = call zeroext i1 @_ZNK3url6OriginltERKS0_(%"class.url::Origin"* %56, %"class.url::Origin"* dereferenceable(80) %202) #12
  br i1 %203, label %379, label %204

204:                                              ; preds = %200
  %205 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %60, align 8
  %206 = icmp eq %"class.std::__1::__tree_node"* %205, null
  br i1 %206, label %226, label %207

207:                                              ; preds = %204, %207
  %208 = phi %"class.std::__1::__tree_end_node"* [ %217, %207 ], [ %59, %204 ]
  %209 = phi %"class.std::__1::__tree_node"* [ %218, %207 ], [ %205, %204 ]
  %210 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %209, i64 0, i32 1
  %211 = call zeroext i1 @_ZN3netltERKNS_25ReportingEndpointGroupKeyES2_(%"struct.net::ReportingEndpointGroupKey"* dereferenceable(288) %210, %"struct.net::ReportingEndpointGroupKey"* nonnull dereferenceable(288) %26) #12
  %212 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %209, i64 0, i32 0, i32 1
  %213 = bitcast %"class.std::__1::__tree_node_base"** %212 to %"class.std::__1::__tree_node"**
  %214 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %209, i64 0, i32 0, i32 0
  %215 = bitcast %"class.std::__1::__tree_node"* %209 to %"class.std::__1::__tree_node"**
  %216 = select i1 %211, %"class.std::__1::__tree_node"** %213, %"class.std::__1::__tree_node"** %215
  %217 = select i1 %211, %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"* %214
  %218 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %216, align 8
  %219 = icmp eq %"class.std::__1::__tree_node"* %218, null
  br i1 %219, label %220, label %207

220:                                              ; preds = %207
  %221 = icmp eq %"class.std::__1::__tree_end_node"* %217, %59
  br i1 %221, label %226, label %222

222:                                              ; preds = %220
  %223 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %217, i64 4
  %224 = bitcast %"class.std::__1::__tree_end_node"* %223 to %"struct.net::ReportingEndpointGroupKey"*
  %225 = call zeroext i1 @_ZN3netltERKNS_25ReportingEndpointGroupKeyES2_(%"struct.net::ReportingEndpointGroupKey"* nonnull dereferenceable(288) %26, %"struct.net::ReportingEndpointGroupKey"* dereferenceable(288) %224) #12
  br i1 %225, label %226, label %379

226:                                              ; preds = %222, %220, %204
  call void @llvm.lifetime.start.p0i8(i64 432, i8* nonnull %61) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 432, i1 false)
  %227 = load %"class.net::ReportingEndpointManager"*, %"class.net::ReportingEndpointManager"** %62, align 8
  %228 = bitcast %"class.net::ReportingEndpointManager"* %227 to void (%"struct.net::ReportingEndpoint"*, %"class.net::ReportingEndpointManager"*, %"struct.net::ReportingEndpointGroupKey"*)***
  %229 = load void (%"struct.net::ReportingEndpoint"*, %"class.net::ReportingEndpointManager"*, %"struct.net::ReportingEndpointGroupKey"*)**, void (%"struct.net::ReportingEndpoint"*, %"class.net::ReportingEndpointManager"*, %"struct.net::ReportingEndpointGroupKey"*)*** %228, align 8
  %230 = getelementptr inbounds void (%"struct.net::ReportingEndpoint"*, %"class.net::ReportingEndpointManager"*, %"struct.net::ReportingEndpointGroupKey"*)*, void (%"struct.net::ReportingEndpoint"*, %"class.net::ReportingEndpointManager"*, %"struct.net::ReportingEndpointGroupKey"*)** %229, i64 2
  %231 = load void (%"struct.net::ReportingEndpoint"*, %"class.net::ReportingEndpointManager"*, %"struct.net::ReportingEndpointGroupKey"*)*, void (%"struct.net::ReportingEndpoint"*, %"class.net::ReportingEndpointManager"*, %"struct.net::ReportingEndpointGroupKey"*)** %230, align 8
  call void %231(%"struct.net::ReportingEndpoint"* nonnull sret %27, %"class.net::ReportingEndpointManager"* %227, %"struct.net::ReportingEndpointGroupKey"* nonnull dereferenceable(288) %26) #12
  %232 = call zeroext i1 @_ZNK3net17ReportingEndpoint8is_validEv(%"struct.net::ReportingEndpoint"* nonnull %27) #12
  br i1 %232, label %233, label %378

233:                                              ; preds = %226
  %234 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN3net25ReportingEndpointGroupKeyENS_4lessIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %63, %"struct.net::ReportingEndpointGroupKey"* nonnull dereferenceable(288) %26, %"struct.net::ReportingEndpointGroupKey"* nonnull dereferenceable(288) %26) #12
  call void @llvm.lifetime.start.p0i8(i64 384, i8* nonnull %64) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 384, i1 false)
  call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* nonnull %67, %"class.net::NetworkIsolationKey"* nonnull dereferenceable(184) %65) #12
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %68, %"class.url::Origin"* dereferenceable(80) %56) #12
  call void @_ZN4GURLC1ERKS_(%class.GURL* %69, %class.GURL* dereferenceable(120) %66) #12
  %235 = load %"class.std::__1::__tree_node.213"*, %"class.std::__1::__tree_node.213"** %70, align 8
  %236 = icmp eq %"class.std::__1::__tree_node.213"* %235, null
  br i1 %236, label %262, label %237

237:                                              ; preds = %233, %237
  %238 = phi %"class.std::__1::__tree_end_node"* [ %249, %237 ], [ %40, %233 ]
  %239 = phi %"class.std::__1::__tree_node.213"* [ %250, %237 ], [ %235, %233 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #12
  %240 = getelementptr inbounds %"class.std::__1::__tree_node.213", %"class.std::__1::__tree_node.213"* %239, i64 0, i32 1, i32 0, i32 0, i32 0
  %241 = getelementptr inbounds %"class.std::__1::__tree_node.213", %"class.std::__1::__tree_node.213"* %239, i64 0, i32 1, i32 0, i32 0, i32 1
  %242 = getelementptr inbounds %"class.std::__1::__tree_node.213", %"class.std::__1::__tree_node.213"* %239, i64 0, i32 1, i32 0, i32 0, i32 2
  store %"class.net::NetworkIsolationKey"* %240, %"class.net::NetworkIsolationKey"** %72, align 8, !alias.scope !20
  store %"class.url::Origin"* %241, %"class.url::Origin"** %73, align 8, !alias.scope !20
  store %class.GURL* %242, %class.GURL** %74, align 8, !alias.scope !20
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #12
  store %"class.net::NetworkIsolationKey"* %67, %"class.net::NetworkIsolationKey"** %76, align 8, !alias.scope !23
  store %"class.url::Origin"* %68, %"class.url::Origin"** %77, align 8, !alias.scope !23
  store %class.GURL* %69, %class.GURL** %78, align 8, !alias.scope !23
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %79) #12
  %243 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN3net19NetworkIsolationKeyERKN3url6OriginERK4GURLEEESF_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %12, %"class.std::__1::tuple.214"* nonnull dereferenceable(24) %13, %"class.std::__1::tuple.214"* nonnull dereferenceable(24) %14) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %79) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #12
  %244 = getelementptr inbounds %"class.std::__1::__tree_node.213", %"class.std::__1::__tree_node.213"* %239, i64 0, i32 0, i32 1
  %245 = bitcast %"class.std::__1::__tree_node_base"** %244 to %"class.std::__1::__tree_node.213"**
  %246 = getelementptr inbounds %"class.std::__1::__tree_node.213", %"class.std::__1::__tree_node.213"* %239, i64 0, i32 0, i32 0
  %247 = bitcast %"class.std::__1::__tree_node.213"* %239 to %"class.std::__1::__tree_node.213"**
  %248 = select i1 %243, %"class.std::__1::__tree_node.213"** %245, %"class.std::__1::__tree_node.213"** %247
  %249 = select i1 %243, %"class.std::__1::__tree_end_node"* %238, %"class.std::__1::__tree_end_node"* %246
  %250 = load %"class.std::__1::__tree_node.213"*, %"class.std::__1::__tree_node.213"** %248, align 8
  %251 = icmp eq %"class.std::__1::__tree_node.213"* %250, null
  br i1 %251, label %252, label %237

252:                                              ; preds = %237
  %253 = icmp eq %"class.std::__1::__tree_end_node"* %249, %40
  br i1 %253, label %262, label %254

254:                                              ; preds = %252
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %80) #12
  store %"class.net::NetworkIsolationKey"* %67, %"class.net::NetworkIsolationKey"** %81, align 8, !alias.scope !26
  store %"class.url::Origin"* %68, %"class.url::Origin"** %82, align 8, !alias.scope !26
  store %class.GURL* %69, %class.GURL** %83, align 8, !alias.scope !26
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #12
  %255 = insertelement <2 x %"class.std::__1::__tree_end_node"*> undef, %"class.std::__1::__tree_end_node"* %249, i32 0
  %256 = shufflevector <2 x %"class.std::__1::__tree_end_node"*> %255, <2 x %"class.std::__1::__tree_end_node"*> undef, <2 x i32> zeroinitializer
  %257 = getelementptr %"class.std::__1::__tree_end_node", <2 x %"class.std::__1::__tree_end_node"*> %256, <2 x i64> <i64 4, i64 27>
  %258 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %249, i64 37
  store <2 x %"class.std::__1::__tree_end_node"*> %257, <2 x %"class.std::__1::__tree_end_node"*>* %119, align 16, !alias.scope !29
  store %"class.std::__1::__tree_end_node"* %258, %"class.std::__1::__tree_end_node"** %86, align 16, !alias.scope !29
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %87) #12
  %259 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN3net19NetworkIsolationKeyERKN3url6OriginERK4GURLEEESF_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %15, %"class.std::__1::tuple.214"* nonnull dereferenceable(24) %16, %"class.std::__1::tuple.214"* nonnull dereferenceable(24) %17) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %87) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %80) #12
  br i1 %259, label %262, label %260

260:                                              ; preds = %254
  %261 = bitcast %"class.std::__1::__tree_end_node"* %249 to %"class.std::__1::__tree_node.213"*
  br label %360

262:                                              ; preds = %254, %252, %233
  %263 = call i8* @_Znwm(i64 432) #11
  %264 = bitcast i8* %263 to %"class.net::NetworkIsolationKey"*
  call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* nonnull %264, %"class.net::NetworkIsolationKey"* nonnull dereferenceable(184) %67) #12
  %265 = getelementptr inbounds i8, i8* %263, i64 184
  %266 = bitcast i8* %265 to %"class.url::Origin"*
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %266, %"class.url::Origin"* dereferenceable(80) %68) #12
  %267 = getelementptr inbounds i8, i8* %263, i64 264
  %268 = bitcast i8* %267 to %class.GURL*
  call void @_ZN4GURLC1ERKS_(%class.GURL* %268, %class.GURL* dereferenceable(120) %69) #12
  %269 = getelementptr inbounds i8, i8* %263, i64 384
  call void @llvm.memset.p0i8.i64(i8* align 8 %269, i8 0, i64 24, i1 false) #12
  %270 = getelementptr inbounds i8, i8* %263, i64 416
  %271 = getelementptr inbounds i8, i8* %263, i64 408
  call void @llvm.memset.p0i8.i64(i8* align 8 %270, i8 0, i64 16, i1 false) #12
  %272 = bitcast i8* %271 to i8**
  store i8* %270, i8** %272, align 8
  %273 = ptrtoint i8* %263 to i64
  call void @llvm.lifetime.start.p0i8(i64 392, i8* nonnull %88) #12
  call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* nonnull %89, %"class.net::NetworkIsolationKey"* nonnull dereferenceable(184) %67) #12
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %90, %"class.url::Origin"* dereferenceable(80) %68) #12
  call void @_ZN4GURLC1ERKS_(%class.GURL* %91, %class.GURL* dereferenceable(120) %69) #12
  store i64 %273, i64* %93, align 8, !alias.scope !32
  %274 = load %"class.std::__1::__tree_node.213"*, %"class.std::__1::__tree_node.213"** %70, align 8
  %275 = icmp eq %"class.std::__1::__tree_node.213"* %274, null
  br i1 %275, label %303, label %276

276:                                              ; preds = %262, %299
  %277 = phi %"class.std::__1::__tree_node.213"* [ %302, %299 ], [ %274, %262 ]
  %278 = phi %"class.std::__1::__tree_node_base"** [ %301, %299 ], [ %38, %262 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #12
  store %"class.net::NetworkIsolationKey"* %89, %"class.net::NetworkIsolationKey"** %95, align 8, !alias.scope !35
  store %"class.url::Origin"* %90, %"class.url::Origin"** %96, align 8, !alias.scope !35
  store %class.GURL* %91, %class.GURL** %97, align 8, !alias.scope !35
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #12
  %279 = getelementptr inbounds %"class.std::__1::__tree_node.213", %"class.std::__1::__tree_node.213"* %277, i64 0, i32 1, i32 0, i32 0, i32 0
  %280 = getelementptr inbounds %"class.std::__1::__tree_node.213", %"class.std::__1::__tree_node.213"* %277, i64 0, i32 1, i32 0, i32 0, i32 1
  %281 = getelementptr inbounds %"class.std::__1::__tree_node.213", %"class.std::__1::__tree_node.213"* %277, i64 0, i32 1, i32 0, i32 0, i32 2
  store %"class.net::NetworkIsolationKey"* %279, %"class.net::NetworkIsolationKey"** %99, align 8, !alias.scope !38
  store %"class.url::Origin"* %280, %"class.url::Origin"** %100, align 8, !alias.scope !38
  store %class.GURL* %281, %class.GURL** %101, align 8, !alias.scope !38
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %102) #12
  %282 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN3net19NetworkIsolationKeyERKN3url6OriginERK4GURLEEESF_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %6, %"class.std::__1::tuple.214"* nonnull dereferenceable(24) %7, %"class.std::__1::tuple.214"* nonnull dereferenceable(24) %8) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %102) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #12
  br i1 %282, label %283, label %289

283:                                              ; preds = %276
  %284 = getelementptr inbounds %"class.std::__1::__tree_node.213", %"class.std::__1::__tree_node.213"* %277, i64 0, i32 0, i32 0, i32 0
  %285 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %284, align 8
  %286 = icmp eq %"class.std::__1::__tree_node_base"* %285, null
  br i1 %286, label %287, label %299

287:                                              ; preds = %283
  %288 = getelementptr inbounds %"class.std::__1::__tree_node.213", %"class.std::__1::__tree_node.213"* %277, i64 0, i32 0, i32 0
  br label %303

289:                                              ; preds = %276
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #12
  store %"class.net::NetworkIsolationKey"* %279, %"class.net::NetworkIsolationKey"** %104, align 8, !alias.scope !41
  store %"class.url::Origin"* %280, %"class.url::Origin"** %105, align 8, !alias.scope !41
  store %class.GURL* %281, %class.GURL** %106, align 8, !alias.scope !41
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #12
  store %"class.net::NetworkIsolationKey"* %89, %"class.net::NetworkIsolationKey"** %108, align 8, !alias.scope !44
  store %"class.url::Origin"* %90, %"class.url::Origin"** %109, align 8, !alias.scope !44
  store %class.GURL* %91, %class.GURL** %110, align 8, !alias.scope !44
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %111) #12
  %290 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN3net19NetworkIsolationKeyERKN3url6OriginERK4GURLEEESF_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %9, %"class.std::__1::tuple.214"* nonnull dereferenceable(24) %10, %"class.std::__1::tuple.214"* nonnull dereferenceable(24) %11) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %111) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #12
  br i1 %290, label %291, label %297

291:                                              ; preds = %289
  %292 = getelementptr inbounds %"class.std::__1::__tree_node.213", %"class.std::__1::__tree_node.213"* %277, i64 0, i32 0, i32 1
  %293 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %292, align 8
  %294 = icmp eq %"class.std::__1::__tree_node_base"* %293, null
  br i1 %294, label %295, label %299

295:                                              ; preds = %291
  %296 = getelementptr inbounds %"class.std::__1::__tree_node.213", %"class.std::__1::__tree_node.213"* %277, i64 0, i32 0, i32 0
  br label %303

297:                                              ; preds = %289
  %298 = getelementptr inbounds %"class.std::__1::__tree_node.213", %"class.std::__1::__tree_node.213"* %277, i64 0, i32 0, i32 0
  br label %303

299:                                              ; preds = %291, %283
  %300 = phi %"class.std::__1::__tree_node_base"* [ %285, %283 ], [ %293, %291 ]
  %301 = phi %"class.std::__1::__tree_node_base"** [ %284, %283 ], [ %292, %291 ]
  %302 = bitcast %"class.std::__1::__tree_node_base"* %300 to %"class.std::__1::__tree_node.213"*
  br label %276

303:                                              ; preds = %262, %297, %295, %287
  %304 = phi %"class.std::__1::__tree_end_node"* [ %288, %287 ], [ %296, %295 ], [ %298, %297 ], [ %40, %262 ]
  %305 = phi %"class.std::__1::__tree_node_base"** [ %284, %287 ], [ %292, %295 ], [ %278, %297 ], [ %112, %262 ]
  %306 = bitcast %"class.std::__1::__tree_node_base"** %305 to %"class.std::__1::__tree_node.213"**
  %307 = load %"class.std::__1::__tree_node.213"*, %"class.std::__1::__tree_node.213"** %306, align 8
  %308 = icmp eq %"class.std::__1::__tree_node.213"* %307, null
  br i1 %308, label %309, label %337

309:                                              ; preds = %303
  %310 = call i8* @_Znwm(i64 424) #11, !noalias !47
  %311 = getelementptr inbounds i8, i8* %310, i64 32
  %312 = bitcast i8* %311 to %"class.net::NetworkIsolationKey"*
  call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* %312, %"class.net::NetworkIsolationKey"* nonnull dereferenceable(184) %89) #12, !noalias !47
  %313 = getelementptr inbounds i8, i8* %310, i64 216
  %314 = bitcast i8* %313 to %"class.url::Origin"*
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %314, %"class.url::Origin"* dereferenceable(80) %90) #12, !noalias !47
  %315 = getelementptr inbounds i8, i8* %310, i64 296
  %316 = bitcast i8* %315 to %class.GURL*
  call void @_ZN4GURLC1ERKS_(%class.GURL* %316, %class.GURL* dereferenceable(120) %91) #12, !noalias !47
  %317 = getelementptr inbounds i8, i8* %310, i64 416
  %318 = load i64, i64* %93, align 8, !noalias !47
  store %"class.net::(anonymous namespace)::Delivery"* null, %"class.net::(anonymous namespace)::Delivery"** %113, align 8, !noalias !47
  %319 = bitcast i8* %317 to i64*
  store i64 %318, i64* %319, align 8, !noalias !47
  %320 = bitcast i8* %310 to %"class.std::__1::__tree_node.213"*
  %321 = bitcast i8* %310 to %"class.std::__1::__tree_node_base"*
  %322 = getelementptr inbounds i8, i8* %310, i64 16
  %323 = bitcast i8* %322 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %310, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %304, %"class.std::__1::__tree_end_node"** %323, align 8
  %324 = bitcast %"class.std::__1::__tree_node_base"** %305 to i8**
  store i8* %310, i8** %324, align 8
  %325 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %326 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %325, i64 0, i32 0
  %327 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %326, align 8
  %328 = icmp eq %"class.std::__1::__tree_node_base"* %327, null
  br i1 %328, label %332, label %329

329:                                              ; preds = %309
  %330 = ptrtoint %"class.std::__1::__tree_node_base"* %327 to i64
  store i64 %330, i64* %114, align 8
  %331 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %305, align 8
  br label %332

332:                                              ; preds = %329, %309
  %333 = phi %"class.std::__1::__tree_node_base"* [ %321, %309 ], [ %331, %329 ]
  %334 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %38, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %334, %"class.std::__1::__tree_node_base"* %333) #12
  %335 = load i64, i64* %39, align 8
  %336 = add i64 %335, 1
  store i64 %336, i64* %39, align 8
  br label %337

337:                                              ; preds = %303, %332
  %338 = phi %"class.std::__1::__tree_node.213"* [ %320, %332 ], [ %307, %303 ]
  %339 = load %"class.net::(anonymous namespace)::Delivery"*, %"class.net::(anonymous namespace)::Delivery"** %113, align 8
  store %"class.net::(anonymous namespace)::Delivery"* null, %"class.net::(anonymous namespace)::Delivery"** %113, align 8
  %340 = icmp eq %"class.net::(anonymous namespace)::Delivery"* %339, null
  br i1 %340, label %359, label %341

341:                                              ; preds = %337
  %342 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %339, i64 0, i32 2, i32 0
  %343 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %339, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %344 = bitcast %"class.std::__1::__tree_end_node"* %343 to %"class.std::__1::__tree_node.239"**
  %345 = load %"class.std::__1::__tree_node.239"*, %"class.std::__1::__tree_node.239"** %344, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN3net25ReportingEndpointGroupKeyEiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.170"* %342, %"class.std::__1::__tree_node.239"* %345) #12
  %346 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %339, i64 0, i32 1, i32 0, i32 0
  %347 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %346, align 8
  %348 = icmp eq %"struct.net::ReportingReport"** %347, null
  br i1 %348, label %354, label %349

349:                                              ; preds = %341
  %350 = ptrtoint %"struct.net::ReportingReport"** %347 to i64
  %351 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %339, i64 0, i32 1, i32 0, i32 1
  %352 = bitcast %"struct.net::ReportingReport"*** %351 to i64*
  store i64 %350, i64* %352, align 8
  %353 = bitcast %"struct.net::ReportingReport"** %347 to i8*
  call void @_ZdlPv(i8* %353) #11
  br label %354

354:                                              ; preds = %349, %341
  %355 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %339, i64 0, i32 0, i32 2
  call void @_ZN4GURLD1Ev(%class.GURL* %355) #12
  %356 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %339, i64 0, i32 0, i32 1
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %356) #12
  %357 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %339, i64 0, i32 0, i32 0
  call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %357) #12
  %358 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %339, i64 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %358) #11
  br label %359

359:                                              ; preds = %354, %337
  call void @_ZN4GURLD1Ev(%class.GURL* %91) #12
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %90) #12
  call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* nonnull %89) #12
  call void @llvm.lifetime.end.p0i8(i64 392, i8* nonnull %88) #12
  br label %360

360:                                              ; preds = %260, %359
  %361 = phi %"class.std::__1::__tree_node.213"* [ %338, %359 ], [ %261, %260 ]
  %362 = getelementptr inbounds %"class.std::__1::__tree_node.213", %"class.std::__1::__tree_node.213"* %361, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %363 = load %"class.net::(anonymous namespace)::Delivery"*, %"class.net::(anonymous namespace)::Delivery"** %362, align 8
  %364 = sub i64 %181, %159
  %365 = lshr exact i64 %364, 3
  %366 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %363, i64 0, i32 2, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #12
  store %"struct.net::ReportingEndpointGroupKey"* %115, %"struct.net::ReportingEndpointGroupKey"** %117, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %118) #12
  %367 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN3net25ReportingEndpointGroupKeyEiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSG_IJEEEEEENS_4pairINS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.170"* %366, %"struct.net::ReportingEndpointGroupKey"* nonnull dereferenceable(288) %115, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.246"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.249"* nonnull dereferenceable(1) %5) #12
  %368 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %367, 0
  %369 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %368, i64 40
  %370 = bitcast %"class.std::__1::__tree_end_node"* %369 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %118) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #12
  %371 = load i32, i32* %370, align 4
  %372 = trunc i64 %365 to i32
  %373 = add i32 %371, %372
  store i32 %373, i32* %370, align 4
  %374 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %363, i64 0, i32 1
  %375 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %363, i64 0, i32 1, i32 0, i32 1
  %376 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %375, align 8
  %377 = call %"struct.net::ReportingReport"** @_ZNSt3__16vectorIPKN3net15ReportingReportENS_9allocatorIS4_EEE6insertINS_11__wrap_iterIPKS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISE_E9referenceEEE5valueENS9_IPS4_EEE4typeESC_SE_SE_(%"class.std::__1::vector.82"* %374, %"struct.net::ReportingReport"** %376, %"struct.net::ReportingReport"** %157, %"struct.net::ReportingReport"** %180) #12
  call void @_ZN4GURLD1Ev(%class.GURL* %69) #12
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %68) #12
  call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* nonnull %67) #12
  call void @llvm.lifetime.end.p0i8(i64 384, i8* nonnull %64) #12
  br label %378

378:                                              ; preds = %226, %360
  call void @_ZN3net17ReportingEndpointD1Ev(%"struct.net::ReportingEndpoint"* nonnull %27) #12
  call void @llvm.lifetime.end.p0i8(i64 432, i8* nonnull %61) #12
  br label %379

379:                                              ; preds = %222, %200, %198, %179, %378
  call void @_ZN3net25ReportingEndpointGroupKeyD1Ev(%"struct.net::ReportingEndpointGroupKey"* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %55) #12
  %380 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %44, align 8
  %381 = icmp eq %"struct.net::ReportingReport"** %380, %180
  br i1 %381, label %120, label %156

382:                                              ; preds = %558, %122
  %383 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 2
  %384 = load %"class.net::ReportingContext"*, %"class.net::ReportingContext"** %383, align 8
  %385 = getelementptr inbounds %"class.net::ReportingContext", %"class.net::ReportingContext"* %384, i64 0, i32 6, i32 0, i32 0, i32 0
  %386 = load %"class.net::ReportingCache"*, %"class.net::ReportingCache"** %385, align 8
  %387 = bitcast %"class.std::__1::vector.82"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %387) #12
  %388 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %126, align 8
  %389 = getelementptr inbounds %"class.std::__1::set.190", %"class.std::__1::set.190"* %30, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZNSt3__16vectorIPKN3net15ReportingReportENS_9allocatorIS4_EEEC2INS_21__tree_const_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEEET_NS_9enable_ifIXaasr27__is_cpp17_forward_iteratorISF_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISF_E9referenceEEE5valueESF_E4typeE(%"class.std::__1::vector.82"* nonnull %35, %"class.std::__1::__tree_end_node"* %388, %"class.std::__1::__tree_end_node"* %389)
  %390 = bitcast %"class.net::ReportingCache"* %386 to void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)***
  %391 = load void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)**, void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)*** %390, align 8
  %392 = getelementptr inbounds void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)*, void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)** %391, i64 6
  %393 = load void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)*, void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)** %392, align 8
  call void %393(%"class.net::ReportingCache"* %386, %"class.std::__1::vector.82"* nonnull dereferenceable(24) %35) #12
  %394 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %35, i64 0, i32 0, i32 0
  %395 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %394, align 8
  %396 = icmp eq %"struct.net::ReportingReport"** %395, null
  br i1 %396, label %402, label %397

397:                                              ; preds = %382
  %398 = ptrtoint %"struct.net::ReportingReport"** %395 to i64
  %399 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %35, i64 0, i32 0, i32 1
  %400 = bitcast %"struct.net::ReportingReport"*** %399 to i64*
  store i64 %398, i64* %400, align 8
  %401 = bitcast %"struct.net::ReportingReport"** %395 to i8*
  call void @_ZdlPv(i8* %401) #11
  br label %402

402:                                              ; preds = %382, %397
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %387) #12
  %403 = getelementptr inbounds %"class.std::__1::set.190", %"class.std::__1::set.190"* %30, i64 0, i32 0
  %404 = bitcast %"class.std::__1::__tree_end_node"* %389 to %"class.std::__1::__tree_node.264"**
  %405 = load %"class.std::__1::__tree_node.264"*, %"class.std::__1::__tree_node.264"** %404, align 8
  call void @_ZNSt3__16__treeIPKN3net15ReportingReportENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.191"* nonnull %403, %"class.std::__1::__tree_node.264"* %405) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #12
  %406 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %25, i64 0, i32 0
  %407 = bitcast %"class.std::__1::__tree_end_node"* %40 to %"class.std::__1::__tree_node.213"**
  %408 = load %"class.std::__1::__tree_node.213"*, %"class.std::__1::__tree_node.213"** %407, align 8
  call fastcc void @_ZNSt3__16__treeINS_12__value_typeIN3net12_GLOBAL__N_18Delivery6TargetENS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.153"* nonnull %406, %"class.std::__1::__tree_node.213"* %408) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #12
  ret void

409:                                              ; preds = %132, %558
  %410 = phi %"class.std::__1::__tree_end_node"* [ %130, %132 ], [ %559, %558 ]
  %411 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %410, i64 4
  %412 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %410, i64 52
  %413 = bitcast %"class.std::__1::__tree_end_node"* %412 to %"class.net::(anonymous namespace)::Delivery"**
  %414 = load %"class.net::(anonymous namespace)::Delivery"*, %"class.net::(anonymous namespace)::Delivery"** %413, align 8
  %415 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %414, i64 0, i32 1, i32 0, i32 0
  %416 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %415, align 8
  %417 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %414, i64 0, i32 1, i32 0, i32 1
  %418 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %417, align 8
  %419 = icmp eq %"struct.net::ReportingReport"** %416, %418
  br i1 %419, label %422, label %561

420:                                              ; preds = %628
  %421 = load %"class.net::(anonymous namespace)::Delivery"*, %"class.net::(anonymous namespace)::Delivery"** %413, align 8
  br label %422

422:                                              ; preds = %420, %409
  %423 = phi %"class.net::(anonymous namespace)::Delivery"* [ %414, %409 ], [ %421, %420 ]
  %424 = phi i32 [ 0, %409 ], [ %632, %420 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %136) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %155, i8 -86, i64 24, i1 false)
  %425 = load %"class.net::ReportingContext"*, %"class.net::ReportingContext"** %138, align 8
  %426 = getelementptr inbounds %"class.net::ReportingContext", %"class.net::ReportingContext"* %425, i64 0, i32 2
  %427 = load %"class.base::TickClock"*, %"class.base::TickClock"** %426, align 8
  %428 = bitcast %"class.base::TickClock"* %427 to i64 (%"class.base::TickClock"*)***
  %429 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %428, align 8
  %430 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %429, i64 2
  %431 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %430, align 8
  %432 = call i64 %431(%"class.base::TickClock"* %427) #12
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %139) #12, !noalias !50
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %139, i8 -86, i64 32, i1 false) #12, !noalias !50
  call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %20) #12, !noalias !50
  %433 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %423, i64 0, i32 1, i32 0, i32 0
  %434 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %433, align 8, !noalias !50
  %435 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %423, i64 0, i32 1, i32 0, i32 1
  %436 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %435, align 8, !noalias !50
  %437 = icmp eq %"struct.net::ReportingReport"** %434, %436
  br i1 %437, label %498, label %438

438:                                              ; preds = %422, %438
  %439 = phi %"struct.net::ReportingReport"** [ %496, %438 ], [ %434, %422 ]
  %440 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %439, align 8
  %441 = call i8* @_Znwm(i64 32) #11
  %442 = bitcast i8* %441 to %"class.base::DictionaryValue"*
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %442) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #12, !noalias !50
  %443 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %440, i64 0, i32 8, i32 0, i32 0
  %444 = load i64, i64* %443, align 8
  %445 = sub nsw i64 %432, %444
  store i64 %445, i64* %141, align 8, !noalias !50
  %446 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %21) #12
  %447 = trunc i64 %446 to i32
  %448 = call %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* nonnull %442, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i64 3, i32 %447) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #12, !noalias !50
  %449 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %440, i64 0, i32 4
  %450 = bitcast %"class.std::__1::basic_string"* %449 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %451 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %450, i64 0, i32 1, i32 0
  %452 = load i8, i8* %451, align 1
  %453 = icmp slt i8 %452, 0
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %449, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %455 = load i8*, i8** %454, align 8
  %456 = bitcast %"class.std::__1::basic_string"* %449 to i8*
  %457 = select i1 %453, i8* %455, i8* %456
  %458 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %440, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %459 = load i64, i64* %458, align 8
  %460 = zext i8 %452 to i64
  %461 = select i1 %453, i64 %459, i64 %460
  %462 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* nonnull %442, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i64 4, i8* %457, i64 %461) #12
  %463 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %440, i64 0, i32 1
  %464 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* %463) #12
  %465 = bitcast %"class.std::__1::basic_string"* %464 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %466 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %465, i64 0, i32 1, i32 0
  %467 = load i8, i8* %466, align 1
  %468 = icmp slt i8 %467, 0
  %469 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %464, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %470 = load i8*, i8** %469, align 8
  %471 = bitcast %"class.std::__1::basic_string"* %464 to i8*
  %472 = select i1 %468, i8* %470, i8* %471
  %473 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %464, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %474 = load i64, i64* %473, align 8
  %475 = zext i8 %467 to i64
  %476 = select i1 %468, i64 %474, i64 %475
  %477 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* nonnull %442, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i64 3, i8* %472, i64 %476) #12
  %478 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %440, i64 0, i32 2
  %479 = bitcast %"class.std::__1::basic_string"* %478 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %480 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %479, i64 0, i32 1, i32 0
  %481 = load i8, i8* %480, align 1
  %482 = icmp slt i8 %481, 0
  %483 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %478, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %484 = load i8*, i8** %483, align 8
  %485 = bitcast %"class.std::__1::basic_string"* %478 to i8*
  %486 = select i1 %482, i8* %484, i8* %485
  %487 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %440, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %488 = load i64, i64* %487, align 8
  %489 = zext i8 %481 to i64
  %490 = select i1 %482, i64 %488, i64 %489
  %491 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* nonnull %442, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i64 10, i8* %486, i64 %490) #12
  %492 = bitcast i8* %441 to %"class.base::Value"*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %142) #12, !noalias !50
  %493 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %440, i64 0, i32 5, i32 0, i32 0, i32 0
  %494 = load %"class.base::Value"*, %"class.base::Value"** %493, align 8
  call void @_ZNK4base5Value5CloneEv(%"class.base::Value"* nonnull sret %22, %"class.base::Value"* %494) #12
  %495 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %492, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %22) #12
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %142) #12, !noalias !50
  call void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"* nonnull %20, %"class.base::Value"* nonnull %492) #12
  %496 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %439, i64 1
  %497 = icmp eq %"struct.net::ReportingReport"** %496, %436
  br i1 %497, label %498, label %438

498:                                              ; preds = %438, %422
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %136, i8 0, i64 24, i1 false) #12, !alias.scope !50
  %499 = call zeroext i1 @_ZN4base10JSONWriter5WriteERKNS_5ValueEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEm(%"class.base::Value"* nonnull dereferenceable(32) %143, %"class.std::__1::basic_string"* nonnull %32, i64 200) #12
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %143) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %139) #12, !noalias !50
  %500 = load %"class.net::ReportingContext"*, %"class.net::ReportingContext"** %138, align 8
  %501 = getelementptr inbounds %"class.net::ReportingContext", %"class.net::ReportingContext"* %500, i64 0, i32 3, i32 0, i32 0, i32 0
  %502 = load %"class.net::ReportingUploader"*, %"class.net::ReportingUploader"** %501, align 8
  %503 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %410, i64 27
  %504 = bitcast %"class.std::__1::__tree_end_node"* %503 to %"class.url::Origin"*
  %505 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %410, i64 37
  %506 = bitcast %"class.std::__1::__tree_end_node"* %505 to %class.GURL*
  %507 = bitcast %"class.std::__1::__tree_end_node"* %411 to %"class.net::NetworkIsolationKey"*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %144) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145) #12, !noalias !53
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %23, %"class.base::internal::WeakReferenceOwner"* %146) #12, !noalias !53
  %508 = load i64, i64* %147, align 8, !noalias !53
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %148, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %23, i64 %508) #12
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #12, !noalias !53
  %509 = call i8* @_Znwm(i64 72) #11, !noalias !56
  %510 = bitcast i8* %509 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %510, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvNSt3__110unique_ptrINS4_8DeliveryENS6_14default_deleteIS8_EEEENS3_17ReportingUploader7OutcomeEEJNS_7WeakPtrIS5_EESB_EEEFvSD_EE7RunOnceEPNS0_13BindStateBaseESD_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvNSt3__110unique_ptrINS3_8DeliveryENS5_14default_deleteIS7_EEEENS2_17ReportingUploader7OutcomeEEJNS_7WeakPtrIS4_EESA_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvNSt3__110unique_ptrINS4_8DeliveryENS6_14default_deleteIS8_EEEENS3_17ReportingUploader7OutcomeEEJNS_7WeakPtrIS5_EESB_EEEEEbPKNS0_13BindStateBaseENSJ_21CancellationQueryModeE) #12, !noalias !56
  %511 = getelementptr inbounds i8, i8* %509, i64 32
  %512 = bitcast i8* %511 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*, %"class.net::(anonymous namespace)::Delivery"*, i32)* @_ZN3net12_GLOBAL__N_126ReportingDeliveryAgentImpl16OnUploadCompleteENSt3__110unique_ptrINS0_8DeliveryENS2_14default_deleteIS4_EEEENS_17ReportingUploader7OutcomeE to i64), i64 0>, <2 x i64>* %512, align 8, !noalias !56
  %513 = getelementptr inbounds i8, i8* %509, i64 48
  %514 = bitcast i8* %513 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %514, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %149) #12, !noalias !56
  %515 = getelementptr inbounds i8, i8* %509, i64 56
  %516 = bitcast i8* %515 to i64*
  %517 = load i64, i64* %150, align 8, !noalias !56
  store i64 %517, i64* %516, align 8, !noalias !56
  %518 = getelementptr inbounds i8, i8* %509, i64 64
  %519 = bitcast %"class.std::__1::__tree_end_node"* %412 to i64*
  %520 = load i64, i64* %519, align 8, !noalias !56
  store %"class.net::(anonymous namespace)::Delivery"* null, %"class.net::(anonymous namespace)::Delivery"** %413, align 8, !noalias !56
  %521 = bitcast i8* %518 to i64*
  store i64 %520, i64* %521, align 8, !noalias !56
  store i8* %509, i8** %151, align 8, !alias.scope !56
  %522 = bitcast %"class.net::ReportingUploader"* %502 to void (%"class.net::ReportingUploader"*, %"class.url::Origin"*, %class.GURL*, %"class.net::NetworkIsolationKey"*, %"class.std::__1::basic_string"*, i32, %"class.base::OnceCallback.200"*)***
  %523 = load void (%"class.net::ReportingUploader"*, %"class.url::Origin"*, %class.GURL*, %"class.net::NetworkIsolationKey"*, %"class.std::__1::basic_string"*, i32, %"class.base::OnceCallback.200"*)**, void (%"class.net::ReportingUploader"*, %"class.url::Origin"*, %class.GURL*, %"class.net::NetworkIsolationKey"*, %"class.std::__1::basic_string"*, i32, %"class.base::OnceCallback.200"*)*** %522, align 8
  %524 = getelementptr inbounds void (%"class.net::ReportingUploader"*, %"class.url::Origin"*, %class.GURL*, %"class.net::NetworkIsolationKey"*, %"class.std::__1::basic_string"*, i32, %"class.base::OnceCallback.200"*)*, void (%"class.net::ReportingUploader"*, %"class.url::Origin"*, %class.GURL*, %"class.net::NetworkIsolationKey"*, %"class.std::__1::basic_string"*, i32, %"class.base::OnceCallback.200"*)** %523, i64 2
  %525 = load void (%"class.net::ReportingUploader"*, %"class.url::Origin"*, %class.GURL*, %"class.net::NetworkIsolationKey"*, %"class.std::__1::basic_string"*, i32, %"class.base::OnceCallback.200"*)*, void (%"class.net::ReportingUploader"*, %"class.url::Origin"*, %class.GURL*, %"class.net::NetworkIsolationKey"*, %"class.std::__1::basic_string"*, i32, %"class.base::OnceCallback.200"*)** %524, align 8
  call void %525(%"class.net::ReportingUploader"* %502, %"class.url::Origin"* dereferenceable(80) %504, %class.GURL* dereferenceable(120) %506, %"class.net::NetworkIsolationKey"* dereferenceable(184) %507, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %32, i32 %424, %"class.base::OnceCallback.200"* nonnull %33) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %152) #12
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %148) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %144) #12
  %526 = load i8, i8* %154, align 1
  %527 = icmp slt i8 %526, 0
  br i1 %527, label %528, label %530

528:                                              ; preds = %498
  %529 = load i8*, i8** %137, align 8
  call void @_ZdlPv(i8* %529) #11
  br label %530

530:                                              ; preds = %498, %528
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %136) #12
  %531 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %410, i64 1, i32 0
  %532 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %531, align 8
  %533 = icmp eq %"class.std::__1::__tree_node_base"* %532, null
  br i1 %533, label %534, label %542

534:                                              ; preds = %530
  %535 = bitcast %"class.std::__1::__tree_end_node"* %410 to %"class.std::__1::__tree_node_base"*
  %536 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %410, i64 2
  %537 = bitcast %"class.std::__1::__tree_end_node"* %536 to %"class.std::__1::__tree_end_node"**
  %538 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %537, align 8
  %539 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %538, i64 0, i32 0
  %540 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %539, align 8
  %541 = icmp eq %"class.std::__1::__tree_node_base"* %540, %535
  br i1 %541, label %558, label %549

542:                                              ; preds = %530, %542
  %543 = phi %"class.std::__1::__tree_node_base"* [ %545, %542 ], [ %532, %530 ]
  %544 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %543, i64 0, i32 0, i32 0
  %545 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %544, align 8
  %546 = icmp eq %"class.std::__1::__tree_node_base"* %545, null
  br i1 %546, label %547, label %542

547:                                              ; preds = %542
  %548 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %543, i64 0, i32 0
  br label %558

549:                                              ; preds = %534, %549
  %550 = phi %"class.std::__1::__tree_end_node"** [ %553, %549 ], [ %537, %534 ]
  %551 = bitcast %"class.std::__1::__tree_end_node"** %550 to %"class.std::__1::__tree_node_base"**
  %552 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %551, align 8
  %553 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %552, i64 0, i32 2
  %554 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %553, align 8
  %555 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %554, i64 0, i32 0
  %556 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %555, align 8
  %557 = icmp eq %"class.std::__1::__tree_node_base"* %556, %552
  br i1 %557, label %558, label %549

558:                                              ; preds = %549, %534, %547
  %559 = phi %"class.std::__1::__tree_end_node"* [ %548, %547 ], [ %538, %534 ], [ %554, %549 ]
  %560 = icmp eq %"class.std::__1::__tree_end_node"* %559, %40
  br i1 %560, label %382, label %409

561:                                              ; preds = %409, %628
  %562 = phi %"struct.net::ReportingReport"** [ %633, %628 ], [ %416, %409 ]
  %563 = phi i32 [ %632, %628 ], [ 0, %409 ]
  %564 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %562, align 8
  %565 = load %"class.std::__1::__tree_node.264"*, %"class.std::__1::__tree_node.264"** %134, align 8
  %566 = icmp eq %"class.std::__1::__tree_node.264"* %565, null
  %567 = bitcast %"class.std::__1::__tree_node.264"* %565 to %"class.std::__1::__tree_node_base"*
  br i1 %566, label %628, label %568

568:                                              ; preds = %561, %568
  %569 = phi %"class.std::__1::__tree_end_node"* [ %579, %568 ], [ %133, %561 ]
  %570 = phi %"class.std::__1::__tree_node.264"* [ %580, %568 ], [ %565, %561 ]
  %571 = getelementptr inbounds %"class.std::__1::__tree_node.264", %"class.std::__1::__tree_node.264"* %570, i64 0, i32 1
  %572 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %571, align 8
  %573 = icmp ult %"struct.net::ReportingReport"* %572, %564
  %574 = getelementptr inbounds %"class.std::__1::__tree_node.264", %"class.std::__1::__tree_node.264"* %570, i64 0, i32 0, i32 1
  %575 = bitcast %"class.std::__1::__tree_node_base"** %574 to %"class.std::__1::__tree_node.264"**
  %576 = getelementptr inbounds %"class.std::__1::__tree_node.264", %"class.std::__1::__tree_node.264"* %570, i64 0, i32 0, i32 0
  %577 = bitcast %"class.std::__1::__tree_node.264"* %570 to %"class.std::__1::__tree_node.264"**
  %578 = select i1 %573, %"class.std::__1::__tree_node.264"** %575, %"class.std::__1::__tree_node.264"** %577
  %579 = select i1 %573, %"class.std::__1::__tree_end_node"* %569, %"class.std::__1::__tree_end_node"* %576
  %580 = load %"class.std::__1::__tree_node.264"*, %"class.std::__1::__tree_node.264"** %578, align 8
  %581 = icmp eq %"class.std::__1::__tree_node.264"* %580, null
  br i1 %581, label %582, label %568

582:                                              ; preds = %568
  %583 = icmp eq %"class.std::__1::__tree_end_node"* %579, %133
  br i1 %583, label %628, label %584

584:                                              ; preds = %582
  %585 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %579, i64 4
  %586 = bitcast %"class.std::__1::__tree_end_node"* %585 to %"struct.net::ReportingReport"**
  %587 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %586, align 8
  %588 = icmp ugt %"struct.net::ReportingReport"* %587, %564
  br i1 %588, label %628, label %589

589:                                              ; preds = %584
  %590 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %579, i64 1, i32 0
  %591 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %590, align 8
  %592 = icmp eq %"class.std::__1::__tree_node_base"* %591, null
  br i1 %592, label %593, label %601

593:                                              ; preds = %589
  %594 = bitcast %"class.std::__1::__tree_end_node"* %579 to %"class.std::__1::__tree_node_base"*
  %595 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %579, i64 2
  %596 = bitcast %"class.std::__1::__tree_end_node"* %595 to %"class.std::__1::__tree_end_node"**
  %597 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %596, align 8
  %598 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %597, i64 0, i32 0
  %599 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %598, align 8
  %600 = icmp eq %"class.std::__1::__tree_node_base"* %599, %594
  br i1 %600, label %617, label %608

601:                                              ; preds = %589, %601
  %602 = phi %"class.std::__1::__tree_node_base"* [ %604, %601 ], [ %591, %589 ]
  %603 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %602, i64 0, i32 0, i32 0
  %604 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %603, align 8
  %605 = icmp eq %"class.std::__1::__tree_node_base"* %604, null
  br i1 %605, label %606, label %601

606:                                              ; preds = %601
  %607 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %602, i64 0, i32 0
  br label %617

608:                                              ; preds = %593, %608
  %609 = phi %"class.std::__1::__tree_end_node"** [ %612, %608 ], [ %596, %593 ]
  %610 = bitcast %"class.std::__1::__tree_end_node"** %609 to %"class.std::__1::__tree_node_base"**
  %611 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %610, align 8
  %612 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %611, i64 0, i32 2
  %613 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %612, align 8
  %614 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %613, i64 0, i32 0
  %615 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %614, align 8
  %616 = icmp eq %"class.std::__1::__tree_node_base"* %615, %611
  br i1 %616, label %617, label %608

617:                                              ; preds = %608, %606, %593
  %618 = phi %"class.std::__1::__tree_end_node"* [ %607, %606 ], [ %597, %593 ], [ %613, %608 ]
  %619 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %126, align 8
  %620 = icmp eq %"class.std::__1::__tree_end_node"* %619, %579
  br i1 %620, label %621, label %623

621:                                              ; preds = %617
  %622 = ptrtoint %"class.std::__1::__tree_end_node"* %618 to i64
  store i64 %622, i64* %135, align 8
  br label %623

623:                                              ; preds = %621, %617
  %624 = load i64, i64* %127, align 8
  %625 = add i64 %624, -1
  store i64 %625, i64* %127, align 8
  %626 = bitcast %"class.std::__1::__tree_end_node"* %579 to %"class.std::__1::__tree_node_base"*
  call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %567, %"class.std::__1::__tree_node_base"* %626) #12
  %627 = bitcast %"class.std::__1::__tree_end_node"* %579 to i8*
  call void @_ZdlPv(i8* %627) #11
  br label %628

628:                                              ; preds = %561, %582, %584, %623
  %629 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %564, i64 0, i32 6
  %630 = load i32, i32* %629, align 4
  %631 = icmp slt i32 %630, %563
  %632 = select i1 %631, i32 %563, i32 %630
  %633 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %562, i64 1
  %634 = icmp eq %"struct.net::ReportingReport"** %633, %418
  br i1 %634, label %420, label %561
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN3url6OriginENS_4lessIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.131"*, %"class.url::Origin"* dereferenceable(80), %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.131", %"class.std::__1::__tree.131"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.145"**
  %6 = load %"class.std::__1::__tree_node.145"*, %"class.std::__1::__tree_node.145"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.145"* %6, null
  br i1 %7, label %35, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.131", %"class.std::__1::__tree.131"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %31, %8
  %11 = phi %"class.std::__1::__tree_node.145"* [ %34, %31 ], [ %6, %8 ]
  %12 = phi %"class.std::__1::__tree_node_base"** [ %33, %31 ], [ %9, %8 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node.145", %"class.std::__1::__tree_node.145"* %11, i64 0, i32 1
  %14 = tail call zeroext i1 @_ZNK3url6OriginltERKS0_(%"class.url::Origin"* %1, %"class.url::Origin"* dereferenceable(80) %13) #12
  br i1 %14, label %15, label %21

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.std::__1::__tree_node.145", %"class.std::__1::__tree_node.145"* %11, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %31

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::__tree_node.145", %"class.std::__1::__tree_node.145"* %11, i64 0, i32 0, i32 0
  br label %37

21:                                               ; preds = %10
  %22 = tail call zeroext i1 @_ZNK3url6OriginltERKS0_(%"class.url::Origin"* %13, %"class.url::Origin"* dereferenceable(80) %1) #12
  br i1 %22, label %23, label %29

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_node.145", %"class.std::__1::__tree_node.145"* %11, i64 0, i32 0, i32 1
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.145", %"class.std::__1::__tree_node.145"* %11, i64 0, i32 0, i32 0
  br label %37

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.145", %"class.std::__1::__tree_node.145"* %11, i64 0, i32 0, i32 0
  br label %37

31:                                               ; preds = %23, %15
  %32 = phi %"class.std::__1::__tree_node_base"* [ %17, %15 ], [ %25, %23 ]
  %33 = phi %"class.std::__1::__tree_node_base"** [ %16, %15 ], [ %24, %23 ]
  %34 = bitcast %"class.std::__1::__tree_node_base"* %32 to %"class.std::__1::__tree_node.145"*
  br label %10

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %37

37:                                               ; preds = %19, %27, %29, %35
  %38 = phi %"class.std::__1::__tree_end_node"* [ %4, %35 ], [ %20, %19 ], [ %28, %27 ], [ %30, %29 ]
  %39 = phi %"class.std::__1::__tree_node_base"** [ %36, %35 ], [ %16, %19 ], [ %24, %27 ], [ %12, %29 ]
  %40 = bitcast %"class.std::__1::__tree_node_base"** %39 to %"class.std::__1::__tree_node.145"**
  %41 = load %"class.std::__1::__tree_node.145"*, %"class.std::__1::__tree_node.145"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node.145"* %41, null
  br i1 %42, label %43, label %68

43:                                               ; preds = %37
  %44 = tail call i8* @_Znwm(i64 112) #11, !noalias !61
  %45 = getelementptr inbounds i8, i8* %44, i64 32
  %46 = bitcast i8* %45 to %"class.url::Origin"*
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %46, %"class.url::Origin"* dereferenceable(80) %2) #12, !noalias !61
  %47 = bitcast i8* %44 to %"class.std::__1::__tree_node.145"*
  %48 = bitcast i8* %44 to %"class.std::__1::__tree_node_base"*
  %49 = getelementptr inbounds i8, i8* %44, i64 16
  %50 = bitcast i8* %49 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %50, align 8
  %51 = bitcast %"class.std::__1::__tree_node_base"** %39 to i8**
  store i8* %44, i8** %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree.131", %"class.std::__1::__tree.131"* %0, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %61, label %57

57:                                               ; preds = %43
  %58 = ptrtoint %"class.std::__1::__tree_node_base"* %55 to i64
  %59 = bitcast %"class.std::__1::__tree.131"* %0 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  br label %61

61:                                               ; preds = %57, %43
  %62 = phi %"class.std::__1::__tree_node_base"* [ %48, %43 ], [ %60, %57 ]
  %63 = getelementptr inbounds %"class.std::__1::__tree.131", %"class.std::__1::__tree.131"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %64, %"class.std::__1::__tree_node_base"* %62) #12
  %65 = getelementptr inbounds %"class.std::__1::__tree.131", %"class.std::__1::__tree.131"* %0, i64 0, i32 2, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, 1
  store i64 %67, i64* %65, align 8
  br label %68

68:                                               ; preds = %61, %37
  %69 = phi i8 [ 1, %61 ], [ 0, %37 ]
  %70 = phi %"class.std::__1::__tree_node.145"* [ %47, %61 ], [ %41, %37 ]
  %71 = getelementptr inbounds %"class.std::__1::__tree_node.145", %"class.std::__1::__tree_node.145"* %70, i64 0, i32 0, i32 0
  %72 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %71, 0
  %73 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %72, i8 %69, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %73
}

declare zeroext i1 @_ZNK3url6OriginltERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !64
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !64
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !64
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvNSt3__16vectorIPKNS3_15ReportingReportENS6_9allocatorISA_EEEENS6_3setIN3url6OriginENS6_4lessISG_EENSB_ISG_EEEEEJNS_7WeakPtrIS5_EESD_EEEFvSK_EE7RunOnceEPNS0_13BindStateBaseEOSK_(%"class.base::internal::BindStateBase"*, %"class.std::__1::set.130"* dereferenceable(24)) #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.std::__1::vector.82", align 16
  %5 = alloca %"class.std::__1::set.130", align 16
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %7, i64 2
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.base::internal::WeakReference"*
  %10 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #12
  br i1 %10, label %11, label %87

11:                                               ; preds = %2
  %12 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %7, i64 1
  %13 = bitcast void (%"class.base::internal::BindStateBase"*)** %12 to %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"**
  %14 = load %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*, %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"** %13, align 8
  %15 = icmp eq %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %14, null
  br i1 %15, label %87, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.base::internal::BindStateBase"* %6 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %20 = bitcast void ()** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.82"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #12
  %23 = bitcast %"class.std::__1::set.130"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #12
  %24 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #12
  br i1 %24, label %28, label %25

25:                                               ; preds = %16
  %26 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #12
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  br label %28

28:                                               ; preds = %25, %16
  %29 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #12
  %30 = bitcast void (%"class.base::internal::BindStateBase"*)** %12 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = select i1 %29, i8* %31, i8* null
  %33 = getelementptr inbounds i8, i8* %32, i64 %21
  %34 = bitcast i8* %33 to %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*
  %35 = and i64 %18, 1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %28
  %38 = bitcast i8* %33 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = add i64 %18, -1
  %41 = getelementptr i8, i8* %39, i64 %40
  %42 = bitcast i8* %41 to void (%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*, %"class.std::__1::vector.82"*, %"class.std::__1::set.130"*)**
  %43 = load void (%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*, %"class.std::__1::vector.82"*, %"class.std::__1::set.130"*)*, void (%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*, %"class.std::__1::vector.82"*, %"class.std::__1::set.130"*)** %42, align 8
  br label %46

44:                                               ; preds = %28
  %45 = inttoptr i64 %18 to void (%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*, %"class.std::__1::vector.82"*, %"class.std::__1::set.130"*)*
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi void (%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*, %"class.std::__1::vector.82"*, %"class.std::__1::set.130"*)* [ %43, %37 ], [ %45, %44 ]
  %48 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to <2 x i64>*
  %49 = load <2 x i64>, <2 x i64>* %48, align 8
  %50 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %4, i64 0, i32 0, i32 1
  %51 = bitcast %"struct.net::ReportingReport"*** %50 to i64*
  %52 = bitcast %"class.std::__1::vector.82"* %4 to <2 x i64>*
  store <2 x i64> %49, <2 x i64>* %52, align 16
  %53 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %7, i64 4
  %54 = bitcast void (%"class.base::internal::BindStateBase"*)** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %57 = bitcast %"struct.net::ReportingReport"*** %56 to i64*
  store i64 %55, i64* %57, align 16
  %58 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 24, i1 false) #12
  %59 = bitcast %"class.std::__1::set.130"* %1 to <2 x i64>*
  %60 = load <2 x i64>, <2 x i64>* %59, align 8
  %61 = bitcast %"class.std::__1::set.130"* %5 to <2 x i64>*
  store <2 x i64> %60, <2 x i64>* %61, align 16
  %62 = getelementptr inbounds %"class.std::__1::set.130", %"class.std::__1::set.130"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %63 = getelementptr inbounds %"class.std::__1::set.130", %"class.std::__1::set.130"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %64 = load i64, i64* %62, align 8
  store i64 %64, i64* %63, align 16
  %65 = icmp eq i64 %64, 0
  %66 = getelementptr inbounds %"class.std::__1::set.130", %"class.std::__1::set.130"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  br i1 %65, label %67, label %69

67:                                               ; preds = %46
  %68 = getelementptr inbounds %"class.std::__1::set.130", %"class.std::__1::set.130"* %5, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %66, %"class.std::__1::__tree_end_node"** %68, align 16
  br label %76

69:                                               ; preds = %46
  %70 = extractelement <2 x i64> %60, i32 1
  %71 = inttoptr i64 %70 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::set.130", %"class.std::__1::set.130"* %1, i64 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %66, %"class.std::__1::__tree_end_node"** %73, align 8
  %74 = getelementptr inbounds %"class.std::__1::set.130", %"class.std::__1::set.130"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %72, align 8
  %75 = bitcast %"class.std::__1::__tree_end_node"* %74 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 16, i1 false) #12
  br label %76

76:                                               ; preds = %69, %67
  call void %47(%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %34, %"class.std::__1::vector.82"* nonnull %4, %"class.std::__1::set.130"* nonnull %5) #12
  %77 = getelementptr inbounds %"class.std::__1::set.130", %"class.std::__1::set.130"* %5, i64 0, i32 0
  %78 = bitcast %"class.std::__1::__tree_end_node"* %66 to %"class.std::__1::__tree_node.145"**
  %79 = load %"class.std::__1::__tree_node.145"*, %"class.std::__1::__tree_node.145"** %78, align 8
  call void @_ZNSt3__16__treeIN3url6OriginENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.131"* nonnull %77, %"class.std::__1::__tree_node.145"* %79) #12
  %80 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %4, i64 0, i32 0, i32 0
  %81 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %80, align 16
  %82 = icmp eq %"struct.net::ReportingReport"** %81, null
  br i1 %82, label %86, label %83

83:                                               ; preds = %76
  %84 = ptrtoint %"struct.net::ReportingReport"** %81 to i64
  store i64 %84, i64* %51, align 8
  %85 = bitcast %"struct.net::ReportingReport"** %81 to i8*
  call void @_ZdlPv(i8* %85) #11
  br label %86

86:                                               ; preds = %83, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #12
  br label %87

87:                                               ; preds = %2, %11, %86
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #6

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvNSt3__16vectorIPKNS2_15ReportingReportENS5_9allocatorIS9_EEEENS5_3setIN3url6OriginENS5_4lessISF_EENSA_ISF_EEEEEJNS_7WeakPtrIS4_EESC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %17, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"struct.net::ReportingReport"***
  %6 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %5, align 8
  %7 = icmp eq %"struct.net::ReportingReport"** %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = ptrtoint %"struct.net::ReportingReport"** %6 to i64
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2, i32 1
  %11 = bitcast void ()** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = bitcast %"struct.net::ReportingReport"** %6 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  br label %13

13:                                               ; preds = %3, %8
  %14 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %15 = bitcast void (%"class.base::internal::BindStateBase"*)** %14 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %15) #12
  %16 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %13, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvNSt3__16vectorIPKNS3_15ReportingReportENS6_9allocatorISA_EEEENS6_3setIN3url6OriginENS6_4lessISG_EENSB_ISG_EEEEEJNS_7WeakPtrIS5_EESD_EEEEEbPKNS0_13BindStateBaseENSQ_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #12
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"**
  %9 = load %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*, %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"** %8, align 8
  %10 = icmp ne %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #12
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #6

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN3net12_GLOBAL__N_122CompareReportGroupKeysEPKNS_15ReportingReportES3_(%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*) #0 {
  %3 = alloca %"struct.net::ReportingEndpointGroupKey", align 8
  %4 = alloca %"struct.net::ReportingEndpointGroupKey", align 8
  %5 = getelementptr inbounds %"struct.net::ReportingEndpointGroupKey", %"struct.net::ReportingEndpointGroupKey"* %3, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %5) #12
  call void @_ZNK3net15ReportingReport11GetGroupKeyEv(%"struct.net::ReportingEndpointGroupKey"* nonnull sret %3, %"struct.net::ReportingReport"* %0) #12
  %6 = getelementptr inbounds %"struct.net::ReportingEndpointGroupKey", %"struct.net::ReportingEndpointGroupKey"* %4, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %6) #12
  call void @_ZNK3net15ReportingReport11GetGroupKeyEv(%"struct.net::ReportingEndpointGroupKey"* nonnull sret %4, %"struct.net::ReportingReport"* %1) #12
  %7 = call zeroext i1 @_ZN3netltERKNS_25ReportingEndpointGroupKeyES2_(%"struct.net::ReportingEndpointGroupKey"* nonnull dereferenceable(288) %3, %"struct.net::ReportingEndpointGroupKey"* nonnull dereferenceable(288) %4) #12
  call void @_ZN3net25ReportingEndpointGroupKeyD1Ev(%"struct.net::ReportingEndpointGroupKey"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %6) #12
  call void @_ZN3net25ReportingEndpointGroupKeyD1Ev(%"struct.net::ReportingEndpointGroupKey"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %5) #12
  ret i1 %7
}

declare void @_ZNK3net15ReportingReport11GetGroupKeyEv(%"struct.net::ReportingEndpointGroupKey"* sret, %"struct.net::ReportingReport"*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__110unique_ptrIN3net12_GLOBAL__N_18DeliveryENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr.166"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.net::(anonymous namespace)::Delivery"*, %"class.net::(anonymous namespace)::Delivery"** %2, align 8
  store %"class.net::(anonymous namespace)::Delivery"* null, %"class.net::(anonymous namespace)::Delivery"** %2, align 8
  %4 = icmp eq %"class.net::(anonymous namespace)::Delivery"* %3, null
  br i1 %4, label %23, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %3, i64 0, i32 2, i32 0
  %7 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %3, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node.239"**
  %9 = load %"class.std::__1::__tree_node.239"*, %"class.std::__1::__tree_node.239"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net25ReportingEndpointGroupKeyEiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.170"* %6, %"class.std::__1::__tree_node.239"* %9) #12
  %10 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %3, i64 0, i32 1, i32 0, i32 0
  %11 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %10, align 8
  %12 = icmp eq %"struct.net::ReportingReport"** %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %5
  %14 = ptrtoint %"struct.net::ReportingReport"** %11 to i64
  %15 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %3, i64 0, i32 1, i32 0, i32 1
  %16 = bitcast %"struct.net::ReportingReport"*** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"struct.net::ReportingReport"** %11 to i8*
  tail call void @_ZdlPv(i8* %17) #11
  br label %18

18:                                               ; preds = %13, %5
  %19 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %3, i64 0, i32 0, i32 2
  tail call void @_ZN4GURLD1Ev(%class.GURL* %19) #12
  %20 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %3, i64 0, i32 0, i32 1
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %20) #12
  %21 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %3, i64 0, i32 0, i32 0
  tail call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %21) #12
  %22 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %22) #11
  br label %23

23:                                               ; preds = %1, %18
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net17ReportingEndpointD1Ev(%"struct.net::ReportingEndpoint"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__13setIPKN3net15ReportingReportENS_4lessIS4_EENS_9allocatorIS4_EEEC2INS_11__wrap_iterIPS4_EEEET_SE_RKS6_(%"class.std::__1::set.190"*, %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"**, %"struct.std::__1::less.198"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::set.190", %"class.std::__1::set.190"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::set.190", %"class.std::__1::set.190"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::set.190", %"class.std::__1::set.190"* %0, i64 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %6, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = icmp eq %"struct.net::ReportingReport"** %1, %2
  br i1 %9, label %116, label %10

10:                                               ; preds = %4
  %11 = ptrtoint %"class.std::__1::__tree_end_node"* %6 to i64
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  %13 = bitcast %"class.std::__1::set.190"* %0 to i64*
  %14 = getelementptr inbounds %"class.std::__1::set.190", %"class.std::__1::set.190"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %15

15:                                               ; preds = %112, %10
  %16 = phi %"class.std::__1::__tree_node.264"* [ %115, %112 ], [ null, %10 ]
  %17 = phi %"class.std::__1::__tree_node_base"* [ %114, %112 ], [ null, %10 ]
  %18 = phi %"class.std::__1::__tree_end_node"* [ %113, %112 ], [ %6, %10 ]
  %19 = phi %"struct.net::ReportingReport"** [ %110, %112 ], [ %1, %10 ]
  %20 = icmp eq %"class.std::__1::__tree_end_node"* %18, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %15
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %21, %23
  %24 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ %17, %21 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 1
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, null
  br i1 %27, label %39, label %23

28:                                               ; preds = %21, %28
  %29 = phi %"class.std::__1::__tree_end_node"* [ %33, %28 ], [ %6, %21 ]
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_node_base"*
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %29, i64 2
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.std::__1::__tree_end_node"**
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 0, i32 0
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, %30
  br i1 %36, label %28, label %37

37:                                               ; preds = %28
  %38 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_node_base"*
  br label %39

39:                                               ; preds = %23, %37
  %40 = phi %"class.std::__1::__tree_node_base"* [ %38, %37 ], [ %24, %23 ]
  %41 = ptrtoint %"class.std::__1::__tree_node_base"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 1
  %43 = bitcast %"class.std::__1::__tree_node_base"* %42 to %"struct.net::ReportingReport"**
  %44 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %43, align 8
  %45 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %19, align 8
  %46 = icmp ult %"struct.net::ReportingReport"* %44, %45
  br i1 %46, label %47, label %53

47:                                               ; preds = %39, %15
  %48 = phi i64 [ %41, %39 ], [ %11, %15 ]
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %49, label %81, label %50

50:                                               ; preds = %47
  %51 = inttoptr i64 %48 to %"class.std::__1::__tree_node_base"*
  %52 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %51, i64 0, i32 1
  br label %81

53:                                               ; preds = %39
  %54 = icmp eq %"class.std::__1::__tree_node.264"* %16, null
  br i1 %54, label %81, label %55

55:                                               ; preds = %53, %77
  %56 = phi %"class.std::__1::__tree_node.264"* [ %80, %77 ], [ %16, %53 ]
  %57 = phi %"class.std::__1::__tree_node_base"** [ %79, %77 ], [ %5, %53 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node.264", %"class.std::__1::__tree_node.264"* %56, i64 0, i32 1
  %59 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %58, align 8
  %60 = icmp ult %"struct.net::ReportingReport"* %45, %59
  br i1 %60, label %61, label %67

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.std::__1::__tree_node.264", %"class.std::__1::__tree_node.264"* %56, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node_base"* %63, null
  br i1 %64, label %65, label %77

65:                                               ; preds = %61
  %66 = ptrtoint %"class.std::__1::__tree_node.264"* %56 to i64
  br label %81

67:                                               ; preds = %55
  %68 = icmp ult %"struct.net::ReportingReport"* %59, %45
  br i1 %68, label %69, label %75

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"class.std::__1::__tree_node.264", %"class.std::__1::__tree_node.264"* %56, i64 0, i32 0, i32 1
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  %72 = icmp eq %"class.std::__1::__tree_node_base"* %71, null
  br i1 %72, label %73, label %77

73:                                               ; preds = %69
  %74 = ptrtoint %"class.std::__1::__tree_node.264"* %56 to i64
  br label %81

75:                                               ; preds = %67
  %76 = ptrtoint %"class.std::__1::__tree_node.264"* %56 to i64
  br label %81

77:                                               ; preds = %69, %61
  %78 = phi %"class.std::__1::__tree_node_base"* [ %63, %61 ], [ %71, %69 ]
  %79 = phi %"class.std::__1::__tree_node_base"** [ %62, %61 ], [ %70, %69 ]
  %80 = bitcast %"class.std::__1::__tree_node_base"* %78 to %"class.std::__1::__tree_node.264"*
  br label %55

81:                                               ; preds = %53, %47, %50, %65, %73, %75
  %82 = phi i64 [ %48, %50 ], [ %66, %65 ], [ %74, %73 ], [ %76, %75 ], [ %11, %47 ], [ %11, %53 ]
  %83 = phi %"class.std::__1::__tree_node_base"** [ %52, %50 ], [ %62, %65 ], [ %70, %73 ], [ %57, %75 ], [ %12, %47 ], [ %12, %53 ]
  %84 = bitcast %"class.std::__1::__tree_node_base"** %83 to %"class.std::__1::__tree_node.264"**
  %85 = load %"class.std::__1::__tree_node.264"*, %"class.std::__1::__tree_node.264"** %84, align 8
  %86 = icmp eq %"class.std::__1::__tree_node.264"* %85, null
  br i1 %86, label %87, label %109

87:                                               ; preds = %81
  %88 = tail call i8* @_Znwm(i64 40) #11, !noalias !65
  %89 = getelementptr inbounds i8, i8* %88, i64 32
  %90 = bitcast %"struct.net::ReportingReport"** %19 to i64*
  %91 = load i64, i64* %90, align 8, !noalias !65
  %92 = bitcast i8* %89 to i64*
  store i64 %91, i64* %92, align 8, !noalias !65
  %93 = bitcast i8* %88 to %"class.std::__1::__tree_node_base"*
  %94 = getelementptr inbounds i8, i8* %88, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 0, i64 16, i1 false) #12
  %95 = bitcast i8* %94 to i64*
  store i64 %82, i64* %95, align 8
  %96 = bitcast %"class.std::__1::__tree_node_base"** %83 to i8**
  store i8* %88, i8** %96, align 8
  %97 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %97, i64 0, i32 0
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  %100 = icmp eq %"class.std::__1::__tree_node_base"* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %87
  %102 = ptrtoint %"class.std::__1::__tree_node_base"* %99 to i64
  store i64 %102, i64* %13, align 8
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  br label %104

104:                                              ; preds = %101, %87
  %105 = phi %"class.std::__1::__tree_node_base"* [ %93, %87 ], [ %103, %101 ]
  %106 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %5, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %106, %"class.std::__1::__tree_node_base"* %105) #12
  %107 = load i64, i64* %14, align 8
  %108 = add i64 %107, 1
  store i64 %108, i64* %14, align 8
  br label %109

109:                                              ; preds = %81, %104
  %110 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %19, i64 1
  %111 = icmp eq %"struct.net::ReportingReport"** %110, %2
  br i1 %111, label %116, label %112

112:                                              ; preds = %109
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %115 = bitcast %"class.std::__1::__tree_node_base"* %114 to %"class.std::__1::__tree_node.264"*
  br label %15

116:                                              ; preds = %109, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_126ReportingDeliveryAgentImpl16OnUploadCompleteENSt3__110unique_ptrINS0_8DeliveryENS2_14default_deleteIS4_EEEENS_17ReportingUploader7OutcomeE(%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*, %"class.net::(anonymous namespace)::Delivery"*, i32) #0 align 2 {
  %4 = alloca %"struct.net::ReportingEndpointGroupKey", align 8
  %5 = icmp eq i32 %2, 0
  %6 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 2
  %7 = load %"class.net::ReportingContext"*, %"class.net::ReportingContext"** %6, align 8
  %8 = getelementptr inbounds %"class.net::ReportingContext", %"class.net::ReportingContext"* %7, i64 0, i32 6, i32 0, i32 0, i32 0
  %9 = load %"class.net::ReportingCache"*, %"class.net::ReportingCache"** %8, align 8
  %10 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %1, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %10, align 8
  %12 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %13 = icmp eq %"class.std::__1::__tree_end_node"* %11, %12
  br i1 %13, label %17, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %1, i64 0, i32 0, i32 2
  %16 = bitcast %"class.net::ReportingCache"* %9 to void (%"class.net::ReportingCache"*, %"struct.net::ReportingEndpointGroupKey"*, %class.GURL*, i32, i1)***
  br label %19

17:                                               ; preds = %56, %3
  %18 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %1, i64 0, i32 1
  br i1 %5, label %59, label %64

19:                                               ; preds = %56, %14
  %20 = phi %"class.std::__1::__tree_end_node"* [ %11, %14 ], [ %57, %56 ]
  %21 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 4
  %22 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"struct.net::ReportingEndpointGroupKey"*
  %23 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 40
  %24 = bitcast %"class.std::__1::__tree_end_node"* %23 to i32*
  %25 = load i32, i32* %24, align 8
  %26 = load void (%"class.net::ReportingCache"*, %"struct.net::ReportingEndpointGroupKey"*, %class.GURL*, i32, i1)**, void (%"class.net::ReportingCache"*, %"struct.net::ReportingEndpointGroupKey"*, %class.GURL*, i32, i1)*** %16, align 8
  %27 = getelementptr inbounds void (%"class.net::ReportingCache"*, %"struct.net::ReportingEndpointGroupKey"*, %class.GURL*, i32, i1)*, void (%"class.net::ReportingCache"*, %"struct.net::ReportingEndpointGroupKey"*, %class.GURL*, i32, i1)** %26, i64 8
  %28 = load void (%"class.net::ReportingCache"*, %"struct.net::ReportingEndpointGroupKey"*, %class.GURL*, i32, i1)*, void (%"class.net::ReportingCache"*, %"struct.net::ReportingEndpointGroupKey"*, %class.GURL*, i32, i1)** %27, align 8
  tail call void %28(%"class.net::ReportingCache"* %9, %"struct.net::ReportingEndpointGroupKey"* dereferenceable(288) %22, %class.GURL* dereferenceable(120) %15, i32 %25, i1 zeroext %5) #12
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 1, i32 0
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, null
  br i1 %31, label %32, label %40

32:                                               ; preds = %19
  %33 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_node_base"*
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 2
  %35 = bitcast %"class.std::__1::__tree_end_node"* %34 to %"class.std::__1::__tree_end_node"**
  %36 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 0, i32 0
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_node_base"* %38, %33
  br i1 %39, label %56, label %47

40:                                               ; preds = %19, %40
  %41 = phi %"class.std::__1::__tree_node_base"* [ %43, %40 ], [ %30, %19 ]
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %41, i64 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node_base"* %43, null
  br i1 %44, label %45, label %40

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %41, i64 0, i32 0
  br label %56

47:                                               ; preds = %32, %47
  %48 = phi %"class.std::__1::__tree_end_node"** [ %51, %47 ], [ %35, %32 ]
  %49 = bitcast %"class.std::__1::__tree_end_node"** %48 to %"class.std::__1::__tree_node_base"**
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %50, i64 0, i32 2
  %52 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 0, i32 0
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node_base"* %54, %50
  br i1 %55, label %56, label %47

56:                                               ; preds = %47, %45, %32
  %57 = phi %"class.std::__1::__tree_end_node"* [ %46, %45 ], [ %36, %32 ], [ %52, %47 ]
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %57, %12
  br i1 %58, label %17, label %19

59:                                               ; preds = %17
  %60 = bitcast %"class.net::ReportingCache"* %9 to void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*, i32)***
  %61 = load void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*, i32)**, void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*, i32)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*, i32)*, void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*, i32)** %61, i64 9
  %63 = load void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*, i32)*, void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*, i32)** %62, align 8
  tail call void %63(%"class.net::ReportingCache"* %9, %"class.std::__1::vector.82"* dereferenceable(24) %18, i32 9) #12
  br label %69

64:                                               ; preds = %17
  %65 = bitcast %"class.net::ReportingCache"* %9 to void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)***
  %66 = load void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)**, void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)*, void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)** %66, i64 7
  %68 = load void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)*, void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)** %67, align 8
  tail call void %68(%"class.net::ReportingCache"* %9, %"class.std::__1::vector.82"* dereferenceable(24) %18) #12
  br label %69

69:                                               ; preds = %59, %64
  %70 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %71 = load %"class.net::ReportingEndpointManager"*, %"class.net::ReportingEndpointManager"** %70, align 8
  %72 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %1, i64 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %1, i64 0, i32 0, i32 2
  %74 = bitcast %"class.net::ReportingEndpointManager"* %71 to void (%"class.net::ReportingEndpointManager"*, %"class.net::NetworkIsolationKey"*, %class.GURL*, i1)***
  %75 = load void (%"class.net::ReportingEndpointManager"*, %"class.net::NetworkIsolationKey"*, %class.GURL*, i1)**, void (%"class.net::ReportingEndpointManager"*, %"class.net::NetworkIsolationKey"*, %class.GURL*, i1)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.net::ReportingEndpointManager"*, %"class.net::NetworkIsolationKey"*, %class.GURL*, i1)*, void (%"class.net::ReportingEndpointManager"*, %"class.net::NetworkIsolationKey"*, %class.GURL*, i1)** %75, i64 3
  %77 = load void (%"class.net::ReportingEndpointManager"*, %"class.net::NetworkIsolationKey"*, %class.GURL*, i1)*, void (%"class.net::ReportingEndpointManager"*, %"class.net::NetworkIsolationKey"*, %class.GURL*, i1)** %76, align 8
  tail call void %77(%"class.net::ReportingEndpointManager"* %71, %"class.net::NetworkIsolationKey"* dereferenceable(184) %72, %class.GURL* dereferenceable(120) %73, i1 zeroext %5) #12
  %78 = icmp eq i32 %2, 1
  br i1 %78, label %79, label %87

79:                                               ; preds = %69
  %80 = load %"class.net::ReportingContext"*, %"class.net::ReportingContext"** %6, align 8
  %81 = getelementptr inbounds %"class.net::ReportingContext", %"class.net::ReportingContext"* %80, i64 0, i32 6, i32 0, i32 0, i32 0
  %82 = load %"class.net::ReportingCache"*, %"class.net::ReportingCache"** %81, align 8
  %83 = bitcast %"class.net::ReportingCache"* %82 to void (%"class.net::ReportingCache"*, %class.GURL*)***
  %84 = load void (%"class.net::ReportingCache"*, %class.GURL*)**, void (%"class.net::ReportingCache"*, %class.GURL*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.net::ReportingCache"*, %class.GURL*)*, void (%"class.net::ReportingCache"*, %class.GURL*)** %84, i64 20
  %86 = load void (%"class.net::ReportingCache"*, %class.GURL*)*, void (%"class.net::ReportingCache"*, %class.GURL*)** %85, align 8
  tail call void %86(%"class.net::ReportingCache"* %82, %class.GURL* dereferenceable(120) %73) #12
  br label %87

87:                                               ; preds = %79, %69
  %88 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %18, i64 0, i32 0, i32 0
  %89 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %88, align 8
  %90 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %1, i64 0, i32 1, i32 0, i32 1
  %91 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %90, align 8
  %92 = icmp eq %"struct.net::ReportingReport"** %89, %91
  br i1 %92, label %96, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"struct.net::ReportingEndpointGroupKey", %"struct.net::ReportingEndpointGroupKey"* %4, i64 0, i32 0, i32 0
  %95 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 4, i32 0
  br label %120

96:                                               ; preds = %120, %87
  %97 = load %"class.net::ReportingContext"*, %"class.net::ReportingContext"** %6, align 8
  %98 = getelementptr inbounds %"class.net::ReportingContext", %"class.net::ReportingContext"* %97, i64 0, i32 6, i32 0, i32 0, i32 0
  %99 = load %"class.net::ReportingCache"*, %"class.net::ReportingCache"** %98, align 8
  %100 = bitcast %"class.net::ReportingCache"* %99 to void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)***
  %101 = load void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)**, void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)*, void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)** %101, i64 6
  %103 = load void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)*, void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)** %102, align 8
  call void %103(%"class.net::ReportingCache"* %99, %"class.std::__1::vector.82"* dereferenceable(24) %18) #12
  %104 = icmp eq %"class.net::(anonymous namespace)::Delivery"* %1, null
  br i1 %104, label %119, label %105

105:                                              ; preds = %96
  %106 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %1, i64 0, i32 2, i32 0
  %107 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node.239"**
  %108 = load %"class.std::__1::__tree_node.239"*, %"class.std::__1::__tree_node.239"** %107, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN3net25ReportingEndpointGroupKeyEiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.170"* %106, %"class.std::__1::__tree_node.239"* %108) #12
  %109 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %1, i64 0, i32 1, i32 0, i32 0
  %110 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %109, align 8
  %111 = icmp eq %"struct.net::ReportingReport"** %110, null
  br i1 %111, label %116, label %112

112:                                              ; preds = %105
  %113 = ptrtoint %"struct.net::ReportingReport"** %110 to i64
  %114 = bitcast %"struct.net::ReportingReport"*** %90 to i64*
  store i64 %113, i64* %114, align 8
  %115 = bitcast %"struct.net::ReportingReport"** %110 to i8*
  call void @_ZdlPv(i8* %115) #11
  br label %116

116:                                              ; preds = %112, %105
  call void @_ZN4GURLD1Ev(%class.GURL* %73) #12
  %117 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %1, i64 0, i32 0, i32 1
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %117) #12
  call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %72) #12
  %118 = getelementptr inbounds %"class.net::(anonymous namespace)::Delivery", %"class.net::(anonymous namespace)::Delivery"* %1, i64 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %118) #11
  br label %119

119:                                              ; preds = %96, %116
  ret void

120:                                              ; preds = %93, %120
  %121 = phi %"struct.net::ReportingReport"** [ %89, %93 ], [ %124, %120 ]
  %122 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %121, align 8
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %94) #12
  call void @_ZNK3net15ReportingReport11GetGroupKeyEv(%"struct.net::ReportingEndpointGroupKey"* nonnull sret %4, %"struct.net::ReportingReport"* %122) #12
  %123 = call i64 @_ZNSt3__16__treeIN3net25ReportingEndpointGroupKeyENS_4lessIS2_EENS_9allocatorIS2_EEE14__erase_uniqueIS2_EEmRKT_(%"class.std::__1::__tree"* %95, %"struct.net::ReportingEndpointGroupKey"* nonnull dereferenceable(288) %4) #12
  call void @_ZN3net25ReportingEndpointGroupKeyD1Ev(%"struct.net::ReportingEndpointGroupKey"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %94) #12
  %124 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %121, i64 1
  %125 = icmp eq %"struct.net::ReportingReport"** %124, %91
  br i1 %125, label %96, label %120
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPKN3net15ReportingReportENS_9allocatorIS4_EEEC2INS_21__tree_const_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEEET_NS_9enable_ifIXaasr27__is_cpp17_forward_iteratorISF_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISF_E9referenceEEE5valueESF_E4typeE(%"class.std::__1::vector.82"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.std::__1::vector.82"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #12
  %5 = icmp eq %"class.std::__1::__tree_end_node"* %1, %2
  br i1 %5, label %97, label %6

6:                                                ; preds = %3, %37
  %7 = phi i64 [ %9, %37 ], [ 0, %3 ]
  %8 = phi %"class.std::__1::__tree_end_node"* [ %38, %37 ], [ %1, %3 ]
  %9 = add nuw nsw i64 %7, 1
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 1, i32 0
  %11 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %10, align 8
  %12 = icmp eq %"class.std::__1::__tree_node_base"* %11, null
  br i1 %12, label %13, label %21

13:                                               ; preds = %6
  %14 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node_base"*
  %15 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 2
  %16 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_end_node"**
  %17 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, %14
  br i1 %20, label %37, label %28

21:                                               ; preds = %6, %21
  %22 = phi %"class.std::__1::__tree_node_base"* [ %24, %21 ], [ %11, %6 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_node_base"* %24, null
  br i1 %25, label %26, label %21

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %22, i64 0, i32 0
  br label %37

28:                                               ; preds = %13, %28
  %29 = phi %"class.std::__1::__tree_end_node"** [ %32, %28 ], [ %16, %13 ]
  %30 = bitcast %"class.std::__1::__tree_end_node"** %29 to %"class.std::__1::__tree_node_base"**
  %31 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %31, i64 0, i32 2
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 0, i32 0
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, %31
  br i1 %36, label %37, label %28

37:                                               ; preds = %28, %26, %13
  %38 = phi %"class.std::__1::__tree_end_node"* [ %27, %26 ], [ %17, %13 ], [ %33, %28 ]
  %39 = icmp eq %"class.std::__1::__tree_end_node"* %38, %2
  br i1 %39, label %40, label %6

40:                                               ; preds = %37
  %41 = icmp ugt i64 %7, 2305843009213693950
  br i1 %41, label %42, label %44

42:                                               ; preds = %40
  %43 = bitcast %"class.std::__1::vector.82"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %43) #13
  unreachable

44:                                               ; preds = %40
  %45 = shl i64 %9, 3
  %46 = tail call i8* @_Znwm(i64 %45) #11
  %47 = bitcast i8* %46 to %"struct.net::ReportingReport"**
  %48 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %0, i64 0, i32 0, i32 1
  %49 = bitcast %"struct.net::ReportingReport"*** %48 to i8**
  store i8* %46, i8** %49, align 8
  %50 = bitcast %"class.std::__1::vector.82"* %0 to i8**
  store i8* %46, i8** %50, align 8
  %51 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %47, i64 %9
  %52 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.net::ReportingReport"** %51, %"struct.net::ReportingReport"*** %52, align 8
  %53 = bitcast %"struct.net::ReportingReport"*** %48 to i64*
  %54 = bitcast i8* %46 to %"struct.net::ReportingReport"**
  %55 = bitcast i8* %46 to i64*
  br label %56

56:                                               ; preds = %90, %44
  %57 = phi %"struct.net::ReportingReport"** [ %54, %44 ], [ %92, %90 ]
  %58 = phi i64* [ %55, %44 ], [ %94, %90 ]
  %59 = phi %"class.std::__1::__tree_end_node"* [ %1, %44 ], [ %91, %90 ]
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %59, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to i64*
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %58, align 8
  %63 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %59, i64 1, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  %65 = icmp eq %"class.std::__1::__tree_node_base"* %64, null
  br i1 %65, label %66, label %74

66:                                               ; preds = %56
  %67 = bitcast %"class.std::__1::__tree_end_node"* %59 to %"class.std::__1::__tree_node_base"*
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %59, i64 2
  %69 = bitcast %"class.std::__1::__tree_end_node"* %68 to %"class.std::__1::__tree_end_node"**
  %70 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %69, align 8
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 0, i32 0
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  %73 = icmp eq %"class.std::__1::__tree_node_base"* %72, %67
  br i1 %73, label %90, label %81

74:                                               ; preds = %56, %74
  %75 = phi %"class.std::__1::__tree_node_base"* [ %77, %74 ], [ %64, %56 ]
  %76 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %76, align 8
  %78 = icmp eq %"class.std::__1::__tree_node_base"* %77, null
  br i1 %78, label %79, label %74

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %75, i64 0, i32 0
  br label %90

81:                                               ; preds = %66, %81
  %82 = phi %"class.std::__1::__tree_end_node"** [ %85, %81 ], [ %69, %66 ]
  %83 = bitcast %"class.std::__1::__tree_end_node"** %82 to %"class.std::__1::__tree_node_base"**
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  %85 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %84, i64 0, i32 2
  %86 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %85, align 8
  %87 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %86, i64 0, i32 0
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  %89 = icmp eq %"class.std::__1::__tree_node_base"* %88, %84
  br i1 %89, label %90, label %81

90:                                               ; preds = %81, %79, %66
  %91 = phi %"class.std::__1::__tree_end_node"* [ %80, %79 ], [ %70, %66 ], [ %86, %81 ]
  %92 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %57, i64 1
  %93 = icmp eq %"class.std::__1::__tree_end_node"* %91, %2
  %94 = bitcast %"struct.net::ReportingReport"** %92 to i64*
  br i1 %93, label %95, label %56

95:                                               ; preds = %90
  %96 = ptrtoint %"struct.net::ReportingReport"** %92 to i64
  store i64 %96, i64* %53, align 8
  br label %97

97:                                               ; preds = %3, %95
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRPFbPKN3net15ReportingReportES4_EPS4_EEvT0_S9_T_(%"struct.net::ReportingReport"**, %"struct.net::ReportingReport"**, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %264, %3
  %5 = phi %"struct.net::ReportingReport"** [ %1, %3 ], [ %243, %264 ]
  %6 = phi %"struct.net::ReportingReport"** [ %0, %3 ], [ %17, %264 ]
  %7 = ptrtoint %"struct.net::ReportingReport"** %5 to i64
  %8 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %5, i64 -1
  %9 = bitcast %"struct.net::ReportingReport"** %8 to i64*
  %10 = bitcast %"struct.net::ReportingReport"** %8 to i64*
  %11 = bitcast %"struct.net::ReportingReport"** %8 to i64*
  %12 = bitcast %"struct.net::ReportingReport"** %8 to i64*
  %13 = ptrtoint %"struct.net::ReportingReport"** %5 to i64
  br label %14

14:                                               ; preds = %273, %4
  %15 = phi %"struct.net::ReportingReport"** [ %6, %4 ], [ %274, %273 ]
  br label %16

16:                                               ; preds = %187, %14
  %17 = phi %"struct.net::ReportingReport"** [ %15, %14 ], [ %174, %187 ]
  %18 = ptrtoint %"struct.net::ReportingReport"** %17 to i64
  %19 = sub i64 %7, %18
  %20 = ashr exact i64 %19, 3
  switch i64 %20, label %86 [
    i64 0, label %277
    i64 1, label %277
    i64 2, label %21
    i64 3, label %32
    i64 4, label %75
    i64 5, label %80
  ]

21:                                               ; preds = %16
  %22 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %23 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %5, i64 -1
  %24 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %23, align 8
  %25 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %17, align 8
  %26 = tail call zeroext i1 %22(%"struct.net::ReportingReport"* %24, %"struct.net::ReportingReport"* %25) #12
  br i1 %26, label %27, label %277

27:                                               ; preds = %21
  %28 = bitcast %"struct.net::ReportingReport"** %17 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"struct.net::ReportingReport"** %23 to i64*
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %28, align 8
  store i64 %29, i64* %30, align 8
  br label %277

32:                                               ; preds = %16
  %33 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %17, i64 1
  %34 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %5, i64 -1
  %35 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %36 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %33, align 8
  %37 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %17, align 8
  %38 = tail call zeroext i1 %35(%"struct.net::ReportingReport"* %36, %"struct.net::ReportingReport"* %37) #12
  %39 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %40 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %34, align 8
  %41 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %33, align 8
  %42 = tail call zeroext i1 %39(%"struct.net::ReportingReport"* %40, %"struct.net::ReportingReport"* %41) #12
  br i1 %38, label %58, label %43

43:                                               ; preds = %32
  br i1 %42, label %44, label %277

44:                                               ; preds = %43
  %45 = bitcast %"struct.net::ReportingReport"** %33 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"struct.net::ReportingReport"** %34 to i64*
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %45, align 8
  store i64 %46, i64* %47, align 8
  %49 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %50 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %33, align 8
  %51 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %17, align 8
  %52 = tail call zeroext i1 %49(%"struct.net::ReportingReport"* %50, %"struct.net::ReportingReport"* %51) #12
  br i1 %52, label %53, label %277

53:                                               ; preds = %44
  %54 = bitcast %"struct.net::ReportingReport"** %17 to <2 x i64>*
  %55 = load <2 x i64>, <2 x i64>* %54, align 8
  %56 = shufflevector <2 x i64> %55, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %57 = bitcast %"struct.net::ReportingReport"** %17 to <2 x i64>*
  store <2 x i64> %56, <2 x i64>* %57, align 8
  br label %277

58:                                               ; preds = %32
  %59 = bitcast %"struct.net::ReportingReport"** %17 to i64*
  %60 = load i64, i64* %59, align 8
  br i1 %42, label %61, label %64

61:                                               ; preds = %58
  %62 = bitcast %"struct.net::ReportingReport"** %34 to i64*
  %63 = load i64, i64* %62, align 8
  store i64 %63, i64* %59, align 8
  store i64 %60, i64* %62, align 8
  br label %277

64:                                               ; preds = %58
  %65 = bitcast %"struct.net::ReportingReport"** %33 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %59, align 8
  store i64 %60, i64* %65, align 8
  %67 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %68 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %34, align 8
  %69 = inttoptr i64 %60 to %"struct.net::ReportingReport"*
  %70 = tail call zeroext i1 %67(%"struct.net::ReportingReport"* %68, %"struct.net::ReportingReport"* %69) #12
  br i1 %70, label %71, label %277

71:                                               ; preds = %64
  %72 = load i64, i64* %65, align 8
  %73 = bitcast %"struct.net::ReportingReport"** %34 to i64*
  %74 = load i64, i64* %73, align 8
  store i64 %74, i64* %65, align 8
  store i64 %72, i64* %73, align 8
  br label %277

75:                                               ; preds = %16
  %76 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %17, i64 1
  %77 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %17, i64 2
  %78 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %5, i64 -1
  %79 = tail call i32 @_ZNSt3__17__sort4IRPFbPKN3net15ReportingReportES4_EPS4_EEjT0_S9_S9_S9_T_(%"struct.net::ReportingReport"** %17, %"struct.net::ReportingReport"** %76, %"struct.net::ReportingReport"** %77, %"struct.net::ReportingReport"** %78, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** dereferenceable(8) %2)
  br label %277

80:                                               ; preds = %16
  %81 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %17, i64 1
  %82 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %17, i64 2
  %83 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %17, i64 3
  %84 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %5, i64 -1
  %85 = tail call i32 @_ZNSt3__17__sort5IRPFbPKN3net15ReportingReportES4_EPS4_EEjT0_S9_S9_S9_S9_T_(%"struct.net::ReportingReport"** %17, %"struct.net::ReportingReport"** %81, %"struct.net::ReportingReport"** %82, %"struct.net::ReportingReport"** %83, %"struct.net::ReportingReport"** %84, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** dereferenceable(8) %2)
  br label %277

86:                                               ; preds = %16
  %87 = icmp slt i64 %19, 248
  br i1 %87, label %88, label %89

88:                                               ; preds = %86
  tail call void @_ZNSt3__118__insertion_sort_3IRPFbPKN3net15ReportingReportES4_EPS4_EEvT0_S9_T_(%"struct.net::ReportingReport"** %17, %"struct.net::ReportingReport"** %5, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** dereferenceable(8) %2)
  br label %277

89:                                               ; preds = %86
  %90 = icmp sgt i64 %19, 7992
  %91 = sdiv i64 %20, 2
  %92 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %17, i64 %91
  br i1 %90, label %93, label %98

93:                                               ; preds = %89
  %94 = sdiv i64 %20, 4
  %95 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %17, i64 %94
  %96 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %92, i64 %94
  %97 = tail call i32 @_ZNSt3__17__sort5IRPFbPKN3net15ReportingReportES4_EPS4_EEjT0_S9_S9_S9_S9_T_(%"struct.net::ReportingReport"** %17, %"struct.net::ReportingReport"** %95, %"struct.net::ReportingReport"** %92, %"struct.net::ReportingReport"** %96, %"struct.net::ReportingReport"** %8, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** dereferenceable(8) %2)
  br label %135

98:                                               ; preds = %89
  %99 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %100 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %92, align 8
  %101 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %17, align 8
  %102 = tail call zeroext i1 %99(%"struct.net::ReportingReport"* %100, %"struct.net::ReportingReport"* %101) #12
  %103 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %104 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %8, align 8
  %105 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %92, align 8
  %106 = tail call zeroext i1 %103(%"struct.net::ReportingReport"* %104, %"struct.net::ReportingReport"* %105) #12
  br i1 %102, label %120, label %107

107:                                              ; preds = %98
  br i1 %106, label %108, label %135

108:                                              ; preds = %107
  %109 = bitcast %"struct.net::ReportingReport"** %92 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = load i64, i64* %9, align 8
  store i64 %111, i64* %109, align 8
  store i64 %110, i64* %9, align 8
  %112 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %113 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %92, align 8
  %114 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %17, align 8
  %115 = tail call zeroext i1 %112(%"struct.net::ReportingReport"* %113, %"struct.net::ReportingReport"* %114) #12
  br i1 %115, label %116, label %135

116:                                              ; preds = %108
  %117 = bitcast %"struct.net::ReportingReport"** %17 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = load i64, i64* %109, align 8
  store i64 %119, i64* %117, align 8
  store i64 %118, i64* %109, align 8
  br label %135

120:                                              ; preds = %98
  %121 = bitcast %"struct.net::ReportingReport"** %17 to i64*
  %122 = load i64, i64* %121, align 8
  br i1 %106, label %123, label %125

123:                                              ; preds = %120
  %124 = load i64, i64* %11, align 8
  store i64 %124, i64* %121, align 8
  store i64 %122, i64* %11, align 8
  br label %135

125:                                              ; preds = %120
  %126 = bitcast %"struct.net::ReportingReport"** %92 to i64*
  %127 = load i64, i64* %126, align 8
  store i64 %127, i64* %121, align 8
  store i64 %122, i64* %126, align 8
  %128 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %129 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %8, align 8
  %130 = inttoptr i64 %122 to %"struct.net::ReportingReport"*
  %131 = tail call zeroext i1 %128(%"struct.net::ReportingReport"* %129, %"struct.net::ReportingReport"* %130) #12
  br i1 %131, label %132, label %135

132:                                              ; preds = %125
  %133 = load i64, i64* %126, align 8
  %134 = load i64, i64* %10, align 8
  store i64 %134, i64* %126, align 8
  store i64 %133, i64* %10, align 8
  br label %135

135:                                              ; preds = %132, %125, %123, %116, %108, %107, %93
  %136 = phi i32 [ %97, %93 ], [ 1, %123 ], [ 0, %107 ], [ 2, %116 ], [ 1, %108 ], [ 2, %132 ], [ 1, %125 ]
  %137 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %138 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %17, align 8
  %139 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %92, align 8
  %140 = tail call zeroext i1 %137(%"struct.net::ReportingReport"* %138, %"struct.net::ReportingReport"* %139) #12
  br i1 %140, label %205, label %141

141:                                              ; preds = %135, %194
  %142 = phi %"struct.net::ReportingReport"** [ %143, %194 ], [ %8, %135 ]
  %143 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %142, i64 -1
  %144 = icmp eq %"struct.net::ReportingReport"** %17, %143
  br i1 %144, label %145, label %194

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %17, i64 1
  %147 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %148 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %17, align 8
  %149 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %8, align 8
  %150 = tail call zeroext i1 %147(%"struct.net::ReportingReport"* %148, %"struct.net::ReportingReport"* %149) #12
  br i1 %150, label %167, label %151

151:                                              ; preds = %145
  %152 = icmp eq %"struct.net::ReportingReport"** %146, %8
  br i1 %152, label %277, label %153

153:                                              ; preds = %151, %164
  %154 = phi %"struct.net::ReportingReport"** [ %165, %164 ], [ %146, %151 ]
  %155 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %156 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %17, align 8
  %157 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %154, align 8
  %158 = tail call zeroext i1 %155(%"struct.net::ReportingReport"* %156, %"struct.net::ReportingReport"* %157) #12
  br i1 %158, label %159, label %164

159:                                              ; preds = %153
  %160 = bitcast %"struct.net::ReportingReport"** %154 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = load i64, i64* %12, align 8
  store i64 %162, i64* %160, align 8
  store i64 %161, i64* %12, align 8
  %163 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %154, i64 1
  br label %167

164:                                              ; preds = %153
  %165 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %154, i64 1
  %166 = icmp eq %"struct.net::ReportingReport"** %165, %8
  br i1 %166, label %277, label %153

167:                                              ; preds = %159, %145
  %168 = phi %"struct.net::ReportingReport"** [ %146, %145 ], [ %163, %159 ]
  %169 = icmp eq %"struct.net::ReportingReport"** %168, %8
  br i1 %169, label %277, label %170

170:                                              ; preds = %167, %189
  %171 = phi %"struct.net::ReportingReport"** [ %179, %189 ], [ %168, %167 ]
  %172 = phi %"struct.net::ReportingReport"** [ %184, %189 ], [ %8, %167 ]
  br label %173

173:                                              ; preds = %173, %170
  %174 = phi %"struct.net::ReportingReport"** [ %171, %170 ], [ %179, %173 ]
  %175 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %176 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %17, align 8
  %177 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %174, align 8
  %178 = tail call zeroext i1 %175(%"struct.net::ReportingReport"* %176, %"struct.net::ReportingReport"* %177) #12
  %179 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %174, i64 1
  br i1 %178, label %180, label %173

180:                                              ; preds = %173, %180
  %181 = phi %"struct.net::ReportingReport"** [ %184, %180 ], [ %172, %173 ]
  %182 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %183 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %17, align 8
  %184 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %181, i64 -1
  %185 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %184, align 8
  %186 = tail call zeroext i1 %182(%"struct.net::ReportingReport"* %183, %"struct.net::ReportingReport"* %185) #12
  br i1 %186, label %180, label %187

187:                                              ; preds = %180
  %188 = icmp ult %"struct.net::ReportingReport"** %174, %184
  br i1 %188, label %189, label %16

189:                                              ; preds = %187
  %190 = bitcast %"struct.net::ReportingReport"** %174 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = bitcast %"struct.net::ReportingReport"** %184 to i64*
  %193 = load i64, i64* %192, align 8
  store i64 %193, i64* %190, align 8
  store i64 %191, i64* %192, align 8
  br label %170

194:                                              ; preds = %141
  %195 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %196 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %143, align 8
  %197 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %92, align 8
  %198 = tail call zeroext i1 %195(%"struct.net::ReportingReport"* %196, %"struct.net::ReportingReport"* %197) #12
  br i1 %198, label %199, label %141

199:                                              ; preds = %194
  %200 = bitcast %"struct.net::ReportingReport"** %17 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = bitcast %"struct.net::ReportingReport"** %143 to i64*
  %203 = load i64, i64* %202, align 8
  store i64 %203, i64* %200, align 8
  store i64 %201, i64* %202, align 8
  %204 = add i32 %136, 1
  br label %205

205:                                              ; preds = %135, %199
  %206 = phi i32 [ %204, %199 ], [ %136, %135 ]
  %207 = phi %"struct.net::ReportingReport"** [ %143, %199 ], [ %8, %135 ]
  %208 = ptrtoint %"struct.net::ReportingReport"** %17 to i64
  %209 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %17, i64 1
  %210 = icmp ult %"struct.net::ReportingReport"** %209, %207
  br i1 %210, label %211, label %240

211:                                              ; preds = %205, %232
  %212 = phi %"struct.net::ReportingReport"** [ %239, %232 ], [ %92, %205 ]
  %213 = phi i32 [ %237, %232 ], [ %206, %205 ]
  %214 = phi %"struct.net::ReportingReport"** [ %222, %232 ], [ %209, %205 ]
  %215 = phi %"struct.net::ReportingReport"** [ %226, %232 ], [ %207, %205 ]
  br label %216

216:                                              ; preds = %216, %211
  %217 = phi %"struct.net::ReportingReport"** [ %214, %211 ], [ %222, %216 ]
  %218 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %219 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %217, align 8
  %220 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %212, align 8
  %221 = tail call zeroext i1 %218(%"struct.net::ReportingReport"* %219, %"struct.net::ReportingReport"* %220) #12
  %222 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %217, i64 1
  br i1 %221, label %216, label %223

223:                                              ; preds = %216, %223
  %224 = phi %"struct.net::ReportingReport"** [ %226, %223 ], [ %215, %216 ]
  %225 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %226 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %224, i64 -1
  %227 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %226, align 8
  %228 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %212, align 8
  %229 = tail call zeroext i1 %225(%"struct.net::ReportingReport"* %227, %"struct.net::ReportingReport"* %228) #12
  br i1 %229, label %230, label %223

230:                                              ; preds = %223
  %231 = icmp ugt %"struct.net::ReportingReport"** %217, %226
  br i1 %231, label %240, label %232

232:                                              ; preds = %230
  %233 = bitcast %"struct.net::ReportingReport"** %217 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = bitcast %"struct.net::ReportingReport"** %226 to i64*
  %236 = load i64, i64* %235, align 8
  store i64 %236, i64* %233, align 8
  store i64 %234, i64* %235, align 8
  %237 = add i32 %213, 1
  %238 = icmp eq %"struct.net::ReportingReport"** %212, %217
  %239 = select i1 %238, %"struct.net::ReportingReport"** %226, %"struct.net::ReportingReport"** %212
  br label %211

240:                                              ; preds = %230, %205
  %241 = phi %"struct.net::ReportingReport"** [ %92, %205 ], [ %212, %230 ]
  %242 = phi i32 [ %206, %205 ], [ %213, %230 ]
  %243 = phi %"struct.net::ReportingReport"** [ %209, %205 ], [ %217, %230 ]
  %244 = icmp eq %"struct.net::ReportingReport"** %243, %241
  br i1 %244, label %256, label %245

245:                                              ; preds = %240
  %246 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %247 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %241, align 8
  %248 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %243, align 8
  %249 = tail call zeroext i1 %246(%"struct.net::ReportingReport"* %247, %"struct.net::ReportingReport"* %248) #12
  br i1 %249, label %250, label %256

250:                                              ; preds = %245
  %251 = bitcast %"struct.net::ReportingReport"** %243 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = bitcast %"struct.net::ReportingReport"** %241 to i64*
  %254 = load i64, i64* %253, align 8
  store i64 %254, i64* %251, align 8
  store i64 %252, i64* %253, align 8
  %255 = add i32 %242, 1
  br label %256

256:                                              ; preds = %240, %250, %245
  %257 = phi i32 [ %255, %250 ], [ %242, %245 ], [ %242, %240 ]
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %266

259:                                              ; preds = %256
  %260 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPKN3net15ReportingReportES4_EPS4_EEbT0_S9_T_(%"struct.net::ReportingReport"** %17, %"struct.net::ReportingReport"** %243, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** dereferenceable(8) %2)
  %261 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %243, i64 1
  %262 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPKN3net15ReportingReportES4_EPS4_EEbT0_S9_T_(%"struct.net::ReportingReport"** %261, %"struct.net::ReportingReport"** %5, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** dereferenceable(8) %2)
  br i1 %262, label %263, label %265

263:                                              ; preds = %259
  br i1 %260, label %277, label %264

264:                                              ; preds = %263, %275
  br label %4

265:                                              ; preds = %259
  br i1 %260, label %273, label %266

266:                                              ; preds = %265, %256
  %267 = ptrtoint %"struct.net::ReportingReport"** %243 to i64
  %268 = sub i64 %267, %208
  %269 = sub i64 %13, %267
  %270 = icmp slt i64 %268, %269
  br i1 %270, label %271, label %275

271:                                              ; preds = %266
  tail call void @_ZNSt3__16__sortIRPFbPKN3net15ReportingReportES4_EPS4_EEvT0_S9_T_(%"struct.net::ReportingReport"** %17, %"struct.net::ReportingReport"** %243, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** dereferenceable(8) %2)
  %272 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %243, i64 1
  br label %273

273:                                              ; preds = %271, %265
  %274 = phi %"struct.net::ReportingReport"** [ %261, %265 ], [ %272, %271 ]
  br label %14

275:                                              ; preds = %266
  %276 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %243, i64 1
  tail call void @_ZNSt3__16__sortIRPFbPKN3net15ReportingReportES4_EPS4_EEvT0_S9_T_(%"struct.net::ReportingReport"** %276, %"struct.net::ReportingReport"** %5, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** dereferenceable(8) %2)
  br label %264

277:                                              ; preds = %263, %167, %16, %16, %151, %164, %71, %64, %61, %53, %44, %43, %21, %27, %75, %80, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRPFbPKN3net15ReportingReportES4_EPS4_EEjT0_S9_S9_S9_T_(%"struct.net::ReportingReport"**, %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"**, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %4, align 8
  %7 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %1, align 8
  %8 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %0, align 8
  %9 = tail call zeroext i1 %6(%"struct.net::ReportingReport"* %7, %"struct.net::ReportingReport"* %8) #12
  %10 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %4, align 8
  %11 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %2, align 8
  %12 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %1, align 8
  %13 = tail call zeroext i1 %10(%"struct.net::ReportingReport"* %11, %"struct.net::ReportingReport"* %12) #12
  br i1 %9, label %28, label %14

14:                                               ; preds = %5
  br i1 %13, label %15, label %45

15:                                               ; preds = %14
  %16 = bitcast %"struct.net::ReportingReport"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"struct.net::ReportingReport"** %2 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 %17, i64* %18, align 8
  %20 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %4, align 8
  %21 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %1, align 8
  %22 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %0, align 8
  %23 = tail call zeroext i1 %20(%"struct.net::ReportingReport"* %21, %"struct.net::ReportingReport"* %22) #12
  br i1 %23, label %24, label %45

24:                                               ; preds = %15
  %25 = bitcast %"struct.net::ReportingReport"** %0 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = load i64, i64* %16, align 8
  store i64 %27, i64* %25, align 8
  store i64 %26, i64* %16, align 8
  br label %45

28:                                               ; preds = %5
  %29 = bitcast %"struct.net::ReportingReport"** %0 to i64*
  %30 = load i64, i64* %29, align 8
  br i1 %13, label %31, label %34

31:                                               ; preds = %28
  %32 = bitcast %"struct.net::ReportingReport"** %2 to i64*
  %33 = load i64, i64* %32, align 8
  store i64 %33, i64* %29, align 8
  store i64 %30, i64* %32, align 8
  br label %45

34:                                               ; preds = %28
  %35 = bitcast %"struct.net::ReportingReport"** %1 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %29, align 8
  store i64 %30, i64* %35, align 8
  %37 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %4, align 8
  %38 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %2, align 8
  %39 = inttoptr i64 %30 to %"struct.net::ReportingReport"*
  %40 = tail call zeroext i1 %37(%"struct.net::ReportingReport"* %38, %"struct.net::ReportingReport"* %39) #12
  br i1 %40, label %41, label %45

41:                                               ; preds = %34
  %42 = load i64, i64* %35, align 8
  %43 = bitcast %"struct.net::ReportingReport"** %2 to i64*
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %35, align 8
  store i64 %42, i64* %43, align 8
  br label %45

45:                                               ; preds = %14, %15, %24, %31, %34, %41
  %46 = phi i32 [ 1, %31 ], [ 0, %14 ], [ 2, %24 ], [ 1, %15 ], [ 2, %41 ], [ 1, %34 ]
  %47 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %4, align 8
  %48 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %3, align 8
  %49 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %2, align 8
  %50 = tail call zeroext i1 %47(%"struct.net::ReportingReport"* %48, %"struct.net::ReportingReport"* %49) #12
  br i1 %50, label %51, label %75

51:                                               ; preds = %45
  %52 = bitcast %"struct.net::ReportingReport"** %2 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"struct.net::ReportingReport"** %3 to i64*
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %52, align 8
  store i64 %53, i64* %54, align 8
  %56 = add nuw nsw i32 %46, 1
  %57 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %4, align 8
  %58 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %2, align 8
  %59 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %1, align 8
  %60 = tail call zeroext i1 %57(%"struct.net::ReportingReport"* %58, %"struct.net::ReportingReport"* %59) #12
  br i1 %60, label %61, label %75

61:                                               ; preds = %51
  %62 = bitcast %"struct.net::ReportingReport"** %1 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = load i64, i64* %52, align 8
  store i64 %64, i64* %62, align 8
  store i64 %63, i64* %52, align 8
  %65 = add nuw nsw i32 %46, 2
  %66 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %4, align 8
  %67 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %1, align 8
  %68 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %0, align 8
  %69 = tail call zeroext i1 %66(%"struct.net::ReportingReport"* %67, %"struct.net::ReportingReport"* %68) #12
  br i1 %69, label %70, label %75

70:                                               ; preds = %61
  %71 = bitcast %"struct.net::ReportingReport"** %0 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = load i64, i64* %62, align 8
  store i64 %73, i64* %71, align 8
  store i64 %72, i64* %62, align 8
  %74 = add nuw nsw i32 %46, 3
  br label %75

75:                                               ; preds = %51, %70, %61, %45
  %76 = phi i32 [ %74, %70 ], [ %65, %61 ], [ %56, %51 ], [ %46, %45 ]
  ret i32 %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRPFbPKN3net15ReportingReportES4_EPS4_EEjT0_S9_S9_S9_S9_T_(%"struct.net::ReportingReport"**, %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"**, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRPFbPKN3net15ReportingReportES4_EPS4_EEjT0_S9_S9_S9_T_(%"struct.net::ReportingReport"** %0, %"struct.net::ReportingReport"** %1, %"struct.net::ReportingReport"** %2, %"struct.net::ReportingReport"** %3, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** dereferenceable(8) %5)
  %8 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %5, align 8
  %9 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %4, align 8
  %10 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %3, align 8
  %11 = tail call zeroext i1 %8(%"struct.net::ReportingReport"* %9, %"struct.net::ReportingReport"* %10) #12
  br i1 %11, label %12, label %45

12:                                               ; preds = %6
  %13 = bitcast %"struct.net::ReportingReport"** %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"struct.net::ReportingReport"** %4 to i64*
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %13, align 8
  store i64 %14, i64* %15, align 8
  %17 = add i32 %7, 1
  %18 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %5, align 8
  %19 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %3, align 8
  %20 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %2, align 8
  %21 = tail call zeroext i1 %18(%"struct.net::ReportingReport"* %19, %"struct.net::ReportingReport"* %20) #12
  br i1 %21, label %22, label %45

22:                                               ; preds = %12
  %23 = bitcast %"struct.net::ReportingReport"** %2 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = load i64, i64* %13, align 8
  store i64 %25, i64* %23, align 8
  store i64 %24, i64* %13, align 8
  %26 = add i32 %7, 2
  %27 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %5, align 8
  %28 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %2, align 8
  %29 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %1, align 8
  %30 = tail call zeroext i1 %27(%"struct.net::ReportingReport"* %28, %"struct.net::ReportingReport"* %29) #12
  br i1 %30, label %31, label %45

31:                                               ; preds = %22
  %32 = bitcast %"struct.net::ReportingReport"** %1 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = load i64, i64* %23, align 8
  store i64 %34, i64* %32, align 8
  store i64 %33, i64* %23, align 8
  %35 = add i32 %7, 3
  %36 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %5, align 8
  %37 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %1, align 8
  %38 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %0, align 8
  %39 = tail call zeroext i1 %36(%"struct.net::ReportingReport"* %37, %"struct.net::ReportingReport"* %38) #12
  br i1 %39, label %40, label %45

40:                                               ; preds = %31
  %41 = bitcast %"struct.net::ReportingReport"** %0 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = load i64, i64* %32, align 8
  store i64 %43, i64* %41, align 8
  store i64 %42, i64* %32, align 8
  %44 = add i32 %7, 4
  br label %45

45:                                               ; preds = %12, %31, %40, %22, %6
  %46 = phi i32 [ %44, %40 ], [ %35, %31 ], [ %26, %22 ], [ %17, %12 ], [ %7, %6 ]
  ret i32 %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRPFbPKN3net15ReportingReportES4_EPS4_EEvT0_S9_T_(%"struct.net::ReportingReport"**, %"struct.net::ReportingReport"**, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %0, i64 2
  %5 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %0, i64 1
  %6 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %7 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %5, align 8
  %8 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %0, align 8
  %9 = tail call zeroext i1 %6(%"struct.net::ReportingReport"* %7, %"struct.net::ReportingReport"* %8) #12
  %10 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %11 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %4, align 8
  %12 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %5, align 8
  %13 = tail call zeroext i1 %10(%"struct.net::ReportingReport"* %11, %"struct.net::ReportingReport"* %12) #12
  br i1 %9, label %29, label %14

14:                                               ; preds = %3
  br i1 %13, label %15, label %47

15:                                               ; preds = %14
  %16 = bitcast %"struct.net::ReportingReport"** %5 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"struct.net::ReportingReport"** %4 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 %17, i64* %18, align 8
  %20 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %21 = inttoptr i64 %19 to %"struct.net::ReportingReport"*
  %22 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %0, align 8
  %23 = tail call zeroext i1 %20(%"struct.net::ReportingReport"* %21, %"struct.net::ReportingReport"* %22) #12
  br i1 %23, label %24, label %47

24:                                               ; preds = %15
  %25 = bitcast %"struct.net::ReportingReport"** %0 to <2 x i64>*
  %26 = load <2 x i64>, <2 x i64>* %25, align 8
  %27 = shufflevector <2 x i64> %26, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %28 = bitcast %"struct.net::ReportingReport"** %0 to <2 x i64>*
  store <2 x i64> %27, <2 x i64>* %28, align 8
  br label %47

29:                                               ; preds = %3
  %30 = bitcast %"struct.net::ReportingReport"** %0 to i64*
  %31 = load i64, i64* %30, align 8
  br i1 %13, label %32, label %35

32:                                               ; preds = %29
  %33 = bitcast %"struct.net::ReportingReport"** %4 to i64*
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %30, align 8
  store i64 %31, i64* %33, align 8
  br label %47

35:                                               ; preds = %29
  %36 = bitcast %"struct.net::ReportingReport"** %5 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %30, align 8
  store i64 %31, i64* %36, align 8
  %38 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %39 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %4, align 8
  %40 = inttoptr i64 %31 to %"struct.net::ReportingReport"*
  %41 = tail call zeroext i1 %38(%"struct.net::ReportingReport"* %39, %"struct.net::ReportingReport"* %40) #12
  br i1 %41, label %42, label %47

42:                                               ; preds = %35
  %43 = bitcast %"struct.net::ReportingReport"** %5 to <2 x i64>*
  %44 = load <2 x i64>, <2 x i64>* %43, align 8
  %45 = shufflevector <2 x i64> %44, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %46 = bitcast %"struct.net::ReportingReport"** %5 to <2 x i64>*
  store <2 x i64> %45, <2 x i64>* %46, align 8
  br label %47

47:                                               ; preds = %14, %15, %24, %32, %35, %42
  %48 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %0, i64 3
  %49 = icmp eq %"struct.net::ReportingReport"** %48, %1
  br i1 %49, label %50, label %51

50:                                               ; preds = %77, %47
  ret void

51:                                               ; preds = %47, %77
  %52 = phi %"struct.net::ReportingReport"** [ %78, %77 ], [ %48, %47 ]
  %53 = phi %"struct.net::ReportingReport"** [ %52, %77 ], [ %4, %47 ]
  %54 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %55 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %52, align 8
  %56 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %53, align 8
  %57 = tail call zeroext i1 %54(%"struct.net::ReportingReport"* %55, %"struct.net::ReportingReport"* %56) #12
  br i1 %57, label %58, label %77

58:                                               ; preds = %51
  %59 = bitcast %"struct.net::ReportingReport"** %52 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = inttoptr i64 %60 to %"struct.net::ReportingReport"*
  br label %62

62:                                               ; preds = %69, %58
  %63 = phi %"struct.net::ReportingReport"** [ %52, %58 ], [ %64, %69 ]
  %64 = phi %"struct.net::ReportingReport"** [ %53, %58 ], [ %71, %69 ]
  %65 = bitcast %"struct.net::ReportingReport"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"struct.net::ReportingReport"** %63 to i64*
  store i64 %66, i64* %67, align 8
  %68 = icmp eq %"struct.net::ReportingReport"** %64, %0
  br i1 %68, label %74, label %69

69:                                               ; preds = %62
  %70 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %71 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %64, i64 -1
  %72 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %71, align 8
  %73 = tail call zeroext i1 %70(%"struct.net::ReportingReport"* %61, %"struct.net::ReportingReport"* %72) #12
  br i1 %73, label %62, label %74

74:                                               ; preds = %62, %69
  %75 = phi %"struct.net::ReportingReport"** [ %64, %69 ], [ %0, %62 ]
  %76 = bitcast %"struct.net::ReportingReport"** %75 to i64*
  store i64 %60, i64* %76, align 8
  br label %77

77:                                               ; preds = %74, %51
  %78 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %52, i64 1
  %79 = icmp eq %"struct.net::ReportingReport"** %78, %1
  br i1 %79, label %50, label %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPKN3net15ReportingReportES4_EPS4_EEbT0_S9_T_(%"struct.net::ReportingReport"**, %"struct.net::ReportingReport"**, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = ptrtoint %"struct.net::ReportingReport"** %1 to i64
  %5 = ptrtoint %"struct.net::ReportingReport"** %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  switch i64 %7, label %73 [
    i64 0, label %156
    i64 1, label %156
    i64 2, label %8
    i64 3, label %19
    i64 4, label %62
    i64 5, label %67
  ]

8:                                                ; preds = %3
  %9 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %10 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %1, i64 -1
  %11 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %10, align 8
  %12 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %0, align 8
  %13 = tail call zeroext i1 %9(%"struct.net::ReportingReport"* %11, %"struct.net::ReportingReport"* %12) #12
  br i1 %13, label %14, label %156

14:                                               ; preds = %8
  %15 = bitcast %"struct.net::ReportingReport"** %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"struct.net::ReportingReport"** %10 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 %16, i64* %17, align 8
  br label %156

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %0, i64 1
  %21 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %1, i64 -1
  %22 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %23 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %20, align 8
  %24 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %0, align 8
  %25 = tail call zeroext i1 %22(%"struct.net::ReportingReport"* %23, %"struct.net::ReportingReport"* %24) #12
  %26 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %27 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %21, align 8
  %28 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %20, align 8
  %29 = tail call zeroext i1 %26(%"struct.net::ReportingReport"* %27, %"struct.net::ReportingReport"* %28) #12
  br i1 %25, label %45, label %30

30:                                               ; preds = %19
  br i1 %29, label %31, label %156

31:                                               ; preds = %30
  %32 = bitcast %"struct.net::ReportingReport"** %20 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"struct.net::ReportingReport"** %21 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %32, align 8
  store i64 %33, i64* %34, align 8
  %36 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %37 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %20, align 8
  %38 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %0, align 8
  %39 = tail call zeroext i1 %36(%"struct.net::ReportingReport"* %37, %"struct.net::ReportingReport"* %38) #12
  br i1 %39, label %40, label %156

40:                                               ; preds = %31
  %41 = bitcast %"struct.net::ReportingReport"** %0 to <2 x i64>*
  %42 = load <2 x i64>, <2 x i64>* %41, align 8
  %43 = shufflevector <2 x i64> %42, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %44 = bitcast %"struct.net::ReportingReport"** %0 to <2 x i64>*
  store <2 x i64> %43, <2 x i64>* %44, align 8
  br label %156

45:                                               ; preds = %19
  %46 = bitcast %"struct.net::ReportingReport"** %0 to i64*
  %47 = load i64, i64* %46, align 8
  br i1 %29, label %48, label %51

48:                                               ; preds = %45
  %49 = bitcast %"struct.net::ReportingReport"** %21 to i64*
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* %46, align 8
  store i64 %47, i64* %49, align 8
  br label %156

51:                                               ; preds = %45
  %52 = bitcast %"struct.net::ReportingReport"** %20 to i64*
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %46, align 8
  store i64 %47, i64* %52, align 8
  %54 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %55 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %21, align 8
  %56 = inttoptr i64 %47 to %"struct.net::ReportingReport"*
  %57 = tail call zeroext i1 %54(%"struct.net::ReportingReport"* %55, %"struct.net::ReportingReport"* %56) #12
  br i1 %57, label %58, label %156

58:                                               ; preds = %51
  %59 = load i64, i64* %52, align 8
  %60 = bitcast %"struct.net::ReportingReport"** %21 to i64*
  %61 = load i64, i64* %60, align 8
  store i64 %61, i64* %52, align 8
  store i64 %59, i64* %60, align 8
  br label %156

62:                                               ; preds = %3
  %63 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %0, i64 1
  %64 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %0, i64 2
  %65 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %1, i64 -1
  %66 = tail call i32 @_ZNSt3__17__sort4IRPFbPKN3net15ReportingReportES4_EPS4_EEjT0_S9_S9_S9_T_(%"struct.net::ReportingReport"** %0, %"struct.net::ReportingReport"** %63, %"struct.net::ReportingReport"** %64, %"struct.net::ReportingReport"** %65, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** dereferenceable(8) %2)
  br label %156

67:                                               ; preds = %3
  %68 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %0, i64 1
  %69 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %0, i64 2
  %70 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %0, i64 3
  %71 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %1, i64 -1
  %72 = tail call i32 @_ZNSt3__17__sort5IRPFbPKN3net15ReportingReportES4_EPS4_EEjT0_S9_S9_S9_S9_T_(%"struct.net::ReportingReport"** %0, %"struct.net::ReportingReport"** %68, %"struct.net::ReportingReport"** %69, %"struct.net::ReportingReport"** %70, %"struct.net::ReportingReport"** %71, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** dereferenceable(8) %2)
  br label %156

73:                                               ; preds = %3
  %74 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %0, i64 2
  %75 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %0, i64 1
  %76 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %77 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %75, align 8
  %78 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %0, align 8
  %79 = tail call zeroext i1 %76(%"struct.net::ReportingReport"* %77, %"struct.net::ReportingReport"* %78) #12
  %80 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %81 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %74, align 8
  %82 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %75, align 8
  %83 = tail call zeroext i1 %80(%"struct.net::ReportingReport"* %81, %"struct.net::ReportingReport"* %82) #12
  br i1 %79, label %99, label %84

84:                                               ; preds = %73
  br i1 %83, label %85, label %117

85:                                               ; preds = %84
  %86 = bitcast %"struct.net::ReportingReport"** %75 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"struct.net::ReportingReport"** %74 to i64*
  %89 = load i64, i64* %88, align 8
  store i64 %89, i64* %86, align 8
  store i64 %87, i64* %88, align 8
  %90 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %91 = inttoptr i64 %89 to %"struct.net::ReportingReport"*
  %92 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %0, align 8
  %93 = tail call zeroext i1 %90(%"struct.net::ReportingReport"* %91, %"struct.net::ReportingReport"* %92) #12
  br i1 %93, label %94, label %117

94:                                               ; preds = %85
  %95 = bitcast %"struct.net::ReportingReport"** %0 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 8
  %97 = shufflevector <2 x i64> %96, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %98 = bitcast %"struct.net::ReportingReport"** %0 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %98, align 8
  br label %117

99:                                               ; preds = %73
  %100 = bitcast %"struct.net::ReportingReport"** %0 to i64*
  %101 = load i64, i64* %100, align 8
  br i1 %83, label %102, label %105

102:                                              ; preds = %99
  %103 = bitcast %"struct.net::ReportingReport"** %74 to i64*
  %104 = load i64, i64* %103, align 8
  store i64 %104, i64* %100, align 8
  store i64 %101, i64* %103, align 8
  br label %117

105:                                              ; preds = %99
  %106 = bitcast %"struct.net::ReportingReport"** %75 to i64*
  %107 = load i64, i64* %106, align 8
  store i64 %107, i64* %100, align 8
  store i64 %101, i64* %106, align 8
  %108 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %109 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %74, align 8
  %110 = inttoptr i64 %101 to %"struct.net::ReportingReport"*
  %111 = tail call zeroext i1 %108(%"struct.net::ReportingReport"* %109, %"struct.net::ReportingReport"* %110) #12
  br i1 %111, label %112, label %117

112:                                              ; preds = %105
  %113 = bitcast %"struct.net::ReportingReport"** %75 to <2 x i64>*
  %114 = load <2 x i64>, <2 x i64>* %113, align 8
  %115 = shufflevector <2 x i64> %114, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %116 = bitcast %"struct.net::ReportingReport"** %75 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %116, align 8
  br label %117

117:                                              ; preds = %84, %85, %94, %102, %105, %112
  %118 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %0, i64 3
  %119 = icmp eq %"struct.net::ReportingReport"** %118, %1
  br i1 %119, label %156, label %120

120:                                              ; preds = %117, %149
  %121 = phi %"struct.net::ReportingReport"** [ %151, %149 ], [ %118, %117 ]
  %122 = phi i32 [ %150, %149 ], [ 0, %117 ]
  %123 = phi %"struct.net::ReportingReport"** [ %121, %149 ], [ %74, %117 ]
  %124 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %125 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %121, align 8
  %126 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %123, align 8
  %127 = tail call zeroext i1 %124(%"struct.net::ReportingReport"* %125, %"struct.net::ReportingReport"* %126) #12
  br i1 %127, label %128, label %149

128:                                              ; preds = %120
  %129 = bitcast %"struct.net::ReportingReport"** %121 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = inttoptr i64 %130 to %"struct.net::ReportingReport"*
  br label %132

132:                                              ; preds = %139, %128
  %133 = phi %"struct.net::ReportingReport"** [ %121, %128 ], [ %134, %139 ]
  %134 = phi %"struct.net::ReportingReport"** [ %123, %128 ], [ %141, %139 ]
  %135 = bitcast %"struct.net::ReportingReport"** %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %"struct.net::ReportingReport"** %133 to i64*
  store i64 %136, i64* %137, align 8
  %138 = icmp eq %"struct.net::ReportingReport"** %134, %0
  br i1 %138, label %144, label %139

139:                                              ; preds = %132
  %140 = load i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)*, i1 (%"struct.net::ReportingReport"*, %"struct.net::ReportingReport"*)** %2, align 8
  %141 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %134, i64 -1
  %142 = load %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %141, align 8
  %143 = tail call zeroext i1 %140(%"struct.net::ReportingReport"* %131, %"struct.net::ReportingReport"* %142) #12
  br i1 %143, label %132, label %144

144:                                              ; preds = %132, %139
  %145 = phi %"struct.net::ReportingReport"** [ %134, %139 ], [ %0, %132 ]
  %146 = bitcast %"struct.net::ReportingReport"** %145 to i64*
  store i64 %130, i64* %146, align 8
  %147 = add i32 %122, 1
  %148 = icmp eq i32 %147, 8
  br i1 %148, label %153, label %149

149:                                              ; preds = %144, %120
  %150 = phi i32 [ %147, %144 ], [ %122, %120 ]
  %151 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %121, i64 1
  %152 = icmp eq %"struct.net::ReportingReport"** %151, %1
  br i1 %152, label %156, label %120

153:                                              ; preds = %144
  %154 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %121, i64 1
  %155 = icmp eq %"struct.net::ReportingReport"** %154, %1
  br label %156

156:                                              ; preds = %149, %153, %117, %58, %51, %48, %40, %31, %30, %8, %14, %3, %3, %67, %62
  %157 = phi i1 [ true, %67 ], [ true, %62 ], [ true, %3 ], [ true, %3 ], [ true, %14 ], [ true, %8 ], [ true, %30 ], [ true, %31 ], [ true, %40 ], [ true, %48 ], [ true, %51 ], [ true, %58 ], [ true, %117 ], [ %155, %153 ], [ true, %149 ]
  ret i1 %157
}

declare zeroext i1 @_ZN3netltERKNS_25ReportingEndpointGroupKeyES2_(%"struct.net::ReportingEndpointGroupKey"* dereferenceable(288), %"struct.net::ReportingEndpointGroupKey"* dereferenceable(288)) local_unnamed_addr #6

declare zeroext i1 @_ZNK3net17ReportingEndpoint8is_validEv(%"struct.net::ReportingEndpoint"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN3net25ReportingEndpointGroupKeyENS_4lessIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"struct.net::ReportingEndpointGroupKey"* dereferenceable(288), %"struct.net::ReportingEndpointGroupKey"* dereferenceable(288)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %35, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %31, %8
  %11 = phi %"class.std::__1::__tree_node"* [ %34, %31 ], [ %6, %8 ]
  %12 = phi %"class.std::__1::__tree_node_base"** [ %33, %31 ], [ %9, %8 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 1
  %14 = tail call zeroext i1 @_ZN3netltERKNS_25ReportingEndpointGroupKeyES2_(%"struct.net::ReportingEndpointGroupKey"* dereferenceable(288) %1, %"struct.net::ReportingEndpointGroupKey"* dereferenceable(288) %13) #12
  br i1 %14, label %15, label %21

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %31

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

21:                                               ; preds = %10
  %22 = tail call zeroext i1 @_ZN3netltERKNS_25ReportingEndpointGroupKeyES2_(%"struct.net::ReportingEndpointGroupKey"* dereferenceable(288) %13, %"struct.net::ReportingEndpointGroupKey"* dereferenceable(288) %1) #12
  br i1 %22, label %23, label %29

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

31:                                               ; preds = %23, %15
  %32 = phi %"class.std::__1::__tree_node_base"* [ %17, %15 ], [ %25, %23 ]
  %33 = phi %"class.std::__1::__tree_node_base"** [ %16, %15 ], [ %24, %23 ]
  %34 = bitcast %"class.std::__1::__tree_node_base"* %32 to %"class.std::__1::__tree_node"*
  br label %10

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %37

37:                                               ; preds = %19, %27, %29, %35
  %38 = phi %"class.std::__1::__tree_end_node"* [ %4, %35 ], [ %20, %19 ], [ %28, %27 ], [ %30, %29 ]
  %39 = phi %"class.std::__1::__tree_node_base"** [ %36, %35 ], [ %16, %19 ], [ %24, %27 ], [ %12, %29 ]
  %40 = bitcast %"class.std::__1::__tree_node_base"** %39 to %"class.std::__1::__tree_node"**
  %41 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node"* %41, null
  br i1 %42, label %43, label %68

43:                                               ; preds = %37
  %44 = tail call i8* @_Znwm(i64 320) #11, !noalias !68
  %45 = getelementptr inbounds i8, i8* %44, i64 32
  %46 = bitcast i8* %45 to %"struct.net::ReportingEndpointGroupKey"*
  tail call void @_ZN3net25ReportingEndpointGroupKeyC1ERKS0_(%"struct.net::ReportingEndpointGroupKey"* %46, %"struct.net::ReportingEndpointGroupKey"* dereferenceable(288) %2) #12, !noalias !68
  %47 = bitcast i8* %44 to %"class.std::__1::__tree_node"*
  %48 = bitcast i8* %44 to %"class.std::__1::__tree_node_base"*
  %49 = getelementptr inbounds i8, i8* %44, i64 16
  %50 = bitcast i8* %49 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %50, align 8
  %51 = bitcast %"class.std::__1::__tree_node_base"** %39 to i8**
  store i8* %44, i8** %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %61, label %57

57:                                               ; preds = %43
  %58 = ptrtoint %"class.std::__1::__tree_node_base"* %55 to i64
  %59 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  br label %61

61:                                               ; preds = %57, %43
  %62 = phi %"class.std::__1::__tree_node_base"* [ %48, %43 ], [ %60, %57 ]
  %63 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %64, %"class.std::__1::__tree_node_base"* %62) #12
  %65 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, 1
  store i64 %67, i64* %65, align 8
  br label %68

68:                                               ; preds = %61, %37
  %69 = phi i8 [ 1, %61 ], [ 0, %37 ]
  %70 = phi %"class.std::__1::__tree_node"* [ %47, %61 ], [ %41, %37 ]
  %71 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %70, i64 0, i32 0, i32 0
  %72 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %71, 0
  %73 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %72, i8 %69, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %73
}

declare void @_ZN3net25ReportingEndpointGroupKeyC1ERKS0_(%"struct.net::ReportingEndpointGroupKey"*, %"struct.net::ReportingEndpointGroupKey"* dereferenceable(288)) unnamed_addr #6

declare void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"* dereferenceable(184)) unnamed_addr #6

declare void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #6

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN3net19NetworkIsolationKeyERKN3url6OriginERK4GURLEEESF_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"*, %"class.std::__1::tuple.214"* dereferenceable(24), %"class.std::__1::tuple.214"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__tuple_less", align 1
  %5 = alloca %"class.std::__1::tuple.220", align 8
  %6 = alloca %"class.std::__1::tuple.220", align 8
  %7 = alloca %"struct.std::__1::__tuple_less", align 1
  %8 = alloca %"class.std::__1::tuple.220", align 8
  %9 = alloca %"class.std::__1::tuple.220", align 8
  %10 = getelementptr inbounds %"class.std::__1::tuple.214", %"class.std::__1::tuple.214"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::tuple.214", %"class.std::__1::tuple.214"* %2, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"** %12, align 8
  %14 = bitcast %"class.std::__1::tuple.220"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %11, i64 0, i32 1
  %16 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %11, i64 0, i32 2
  %17 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %11, i64 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::tuple.220", %"class.std::__1::tuple.220"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.absl::optional"* %15, %"class.absl::optional"** %18, align 8, !alias.scope !71
  %19 = getelementptr inbounds %"class.std::__1::tuple.220", %"class.std::__1::tuple.220"* %8, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional"* %16, %"class.absl::optional"** %19, align 8, !alias.scope !71
  %20 = getelementptr inbounds %"class.std::__1::tuple.220", %"class.std::__1::tuple.220"* %8, i64 0, i32 0, i32 2, i32 0
  store i8* %17, i8** %20, align 8, !alias.scope !71
  %21 = bitcast %"class.std::__1::tuple.220"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #12
  %22 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %13, i64 0, i32 1
  %23 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %13, i64 0, i32 2
  %24 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %13, i64 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::tuple.220", %"class.std::__1::tuple.220"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.absl::optional"* %22, %"class.absl::optional"** %25, align 8, !alias.scope !74
  %26 = getelementptr inbounds %"class.std::__1::tuple.220", %"class.std::__1::tuple.220"* %9, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional"* %23, %"class.absl::optional"** %26, align 8, !alias.scope !74
  %27 = getelementptr inbounds %"class.std::__1::tuple.220", %"class.std::__1::tuple.220"* %9, i64 0, i32 0, i32 2, i32 0
  store i8* %24, i8** %27, align 8, !alias.scope !74
  %28 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %28) #12
  %29 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %7, %"class.std::__1::tuple.220"* nonnull dereferenceable(24) %8, %"class.std::__1::tuple.220"* nonnull dereferenceable(24) %9) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %28) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  br i1 %29, label %69, label %30

30:                                               ; preds = %3
  %31 = load %"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"** %12, align 8
  %32 = load %"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"** %10, align 8
  %33 = bitcast %"class.std::__1::tuple.220"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #12
  %34 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %31, i64 0, i32 1
  %35 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %31, i64 0, i32 2
  %36 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %31, i64 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::tuple.220", %"class.std::__1::tuple.220"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.absl::optional"* %34, %"class.absl::optional"** %37, align 8, !alias.scope !77
  %38 = getelementptr inbounds %"class.std::__1::tuple.220", %"class.std::__1::tuple.220"* %5, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional"* %35, %"class.absl::optional"** %38, align 8, !alias.scope !77
  %39 = getelementptr inbounds %"class.std::__1::tuple.220", %"class.std::__1::tuple.220"* %5, i64 0, i32 0, i32 2, i32 0
  store i8* %36, i8** %39, align 8, !alias.scope !77
  %40 = bitcast %"class.std::__1::tuple.220"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #12
  %41 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %32, i64 0, i32 1
  %42 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %32, i64 0, i32 2
  %43 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %32, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::tuple.220", %"class.std::__1::tuple.220"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.absl::optional"* %41, %"class.absl::optional"** %44, align 8, !alias.scope !80
  %45 = getelementptr inbounds %"class.std::__1::tuple.220", %"class.std::__1::tuple.220"* %6, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional"* %42, %"class.absl::optional"** %45, align 8, !alias.scope !80
  %46 = getelementptr inbounds %"class.std::__1::tuple.220", %"class.std::__1::tuple.220"* %6, i64 0, i32 0, i32 2, i32 0
  store i8* %43, i8** %46, align 8, !alias.scope !80
  %47 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %47) #12
  %48 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %4, %"class.std::__1::tuple.220"* nonnull dereferenceable(24) %5, %"class.std::__1::tuple.220"* nonnull dereferenceable(24) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %47) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #12
  br i1 %48, label %69, label %49

49:                                               ; preds = %30
  %50 = getelementptr inbounds %"class.std::__1::tuple.214", %"class.std::__1::tuple.214"* %1, i64 0, i32 0, i32 1, i32 0
  %51 = load %"class.url::Origin"*, %"class.url::Origin"** %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::tuple.214", %"class.std::__1::tuple.214"* %2, i64 0, i32 0, i32 1, i32 0
  %53 = load %"class.url::Origin"*, %"class.url::Origin"** %52, align 8
  %54 = call zeroext i1 @_ZNK3url6OriginltERKS0_(%"class.url::Origin"* %51, %"class.url::Origin"* dereferenceable(80) %53) #12
  br i1 %54, label %69, label %55

55:                                               ; preds = %49
  %56 = load %"class.url::Origin"*, %"class.url::Origin"** %52, align 8
  %57 = load %"class.url::Origin"*, %"class.url::Origin"** %50, align 8
  %58 = call zeroext i1 @_ZNK3url6OriginltERKS0_(%"class.url::Origin"* %56, %"class.url::Origin"* dereferenceable(80) %57) #12
  br i1 %58, label %69, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.std::__1::tuple.214", %"class.std::__1::tuple.214"* %1, i64 0, i32 0, i32 2, i32 0
  %61 = load %class.GURL*, %class.GURL** %60, align 8
  %62 = getelementptr inbounds %"class.std::__1::tuple.214", %"class.std::__1::tuple.214"* %2, i64 0, i32 0, i32 2, i32 0
  %63 = load %class.GURL*, %class.GURL** %62, align 8
  %64 = call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %61, %class.GURL* dereferenceable(120) %63) #12
  br i1 %64, label %69, label %65

65:                                               ; preds = %59
  %66 = load %class.GURL*, %class.GURL** %62, align 8
  %67 = load %class.GURL*, %class.GURL** %60, align 8
  %68 = call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %66, %class.GURL* dereferenceable(120) %67) #12
  br label %69

69:                                               ; preds = %65, %59, %55, %49, %30, %3
  %70 = phi i1 [ true, %3 ], [ false, %30 ], [ true, %49 ], [ false, %55 ], [ true, %59 ], [ false, %65 ]
  ret i1 %70
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"*, %"class.std::__1::tuple.220"* dereferenceable(24), %"class.std::__1::tuple.220"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::tuple.220", %"class.std::__1::tuple.220"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.absl::optional"*, %"class.absl::optional"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::tuple.220", %"class.std::__1::tuple.220"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.absl::optional"*, %"class.absl::optional"** %6, align 8
  %8 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !64
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !64
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %77, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = tail call zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"* %16, %"class.net::SchemefulSite"* dereferenceable(80) %17) #12
  br i1 %18, label %77, label %19

19:                                               ; preds = %15
  %20 = load %"class.absl::optional"*, %"class.absl::optional"** %6, align 8
  %21 = load %"class.absl::optional"*, %"class.absl::optional"** %4, align 8
  br label %22

22:                                               ; preds = %19, %3
  %23 = phi %"class.absl::optional"* [ %21, %19 ], [ %5, %3 ]
  %24 = phi %"class.absl::optional"* [ %20, %19 ], [ %7, %3 ]
  %25 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8, i8* %25, align 8, !range !64
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %36, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8, i8* %29, align 8, !range !64
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %77, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %34 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %35 = tail call zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"* %33, %"class.net::SchemefulSite"* dereferenceable(80) %34) #12
  br i1 %35, label %77, label %36

36:                                               ; preds = %22, %32
  %37 = getelementptr inbounds %"class.std::__1::tuple.220", %"class.std::__1::tuple.220"* %1, i64 0, i32 0, i32 1, i32 0
  %38 = load %"class.absl::optional"*, %"class.absl::optional"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::tuple.220", %"class.std::__1::tuple.220"* %2, i64 0, i32 0, i32 1, i32 0
  %40 = load %"class.absl::optional"*, %"class.absl::optional"** %39, align 8
  %41 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8, i8* %41, align 8, !range !64
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %55, label %44

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8, i8* %45, align 8, !range !64
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %77, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %50 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %40, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %51 = tail call zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"* %49, %"class.net::SchemefulSite"* dereferenceable(80) %50) #12
  br i1 %51, label %77, label %52

52:                                               ; preds = %48
  %53 = load %"class.absl::optional"*, %"class.absl::optional"** %39, align 8
  %54 = load %"class.absl::optional"*, %"class.absl::optional"** %37, align 8
  br label %55

55:                                               ; preds = %52, %36
  %56 = phi %"class.absl::optional"* [ %54, %52 ], [ %38, %36 ]
  %57 = phi %"class.absl::optional"* [ %53, %52 ], [ %40, %36 ]
  %58 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8, i8* %58, align 8, !range !64
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %69, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8, i8* %62, align 8, !range !64
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %77, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %57, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %67 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %56, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %68 = tail call zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"* %66, %"class.net::SchemefulSite"* dereferenceable(80) %67) #12
  br i1 %68, label %77, label %69

69:                                               ; preds = %65, %55
  %70 = getelementptr inbounds %"class.std::__1::tuple.220", %"class.std::__1::tuple.220"* %1, i64 0, i32 0, i32 2, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = load i8, i8* %71, align 1, !range !64
  %73 = getelementptr inbounds %"class.std::__1::tuple.220", %"class.std::__1::tuple.220"* %2, i64 0, i32 0, i32 2, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = load i8, i8* %74, align 1, !range !64
  %76 = icmp ult i8 %72, %75
  br label %77

77:                                               ; preds = %28, %11, %69, %65, %61, %48, %44, %32, %15
  %78 = phi i1 [ true, %15 ], [ false, %32 ], [ %76, %69 ], [ true, %48 ], [ false, %65 ], [ true, %44 ], [ false, %61 ], [ true, %11 ], [ false, %28 ]
  ret i1 %78
}

declare zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"*, %"class.net::SchemefulSite"* dereferenceable(80)) local_unnamed_addr #6

declare zeroext i1 @_ZNK4GURLltERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN3net25ReportingEndpointGroupKeyEiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.170"*, %"class.std::__1::__tree_node.239"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.239"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.239"* %1 to %"class.std::__1::__tree_node.239"**
  %6 = load %"class.std::__1::__tree_node.239"*, %"class.std::__1::__tree_node.239"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net25ReportingEndpointGroupKeyEiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.170"* %0, %"class.std::__1::__tree_node.239"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.239", %"class.std::__1::__tree_node.239"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.239"**
  %9 = load %"class.std::__1::__tree_node.239"*, %"class.std::__1::__tree_node.239"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net25ReportingEndpointGroupKeyEiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.170"* %0, %"class.std::__1::__tree_node.239"* %9) #12
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.239", %"class.std::__1::__tree_node.239"* %1, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZN3net25ReportingEndpointGroupKeyD1Ev(%"struct.net::ReportingEndpointGroupKey"* %10) #12
  %11 = bitcast %"class.std::__1::__tree_node.239"* %1 to i8*
  tail call void @_ZdlPv(i8* %11) #11
  ret void

12:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.net::ReportingReport"** @_ZNSt3__16vectorIPKN3net15ReportingReportENS_9allocatorIS4_EEE6insertINS_11__wrap_iterIPKS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISE_E9referenceEEE5valueENS9_IPS4_EEE4typeESC_SE_SE_(%"class.std::__1::vector.82"*, %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"**) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"struct.net::ReportingReport"** %2 to i8*
  %6 = bitcast %"struct.net::ReportingReport"** %1 to i8*
  %7 = ptrtoint %"struct.net::ReportingReport"** %1 to i64
  %8 = ptrtoint %"struct.net::ReportingReport"** %2 to i64
  %9 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %0, i64 0, i32 0, i32 0
  %10 = ptrtoint %"struct.net::ReportingReport"** %3 to i64
  %11 = sub i64 %10, %8
  %12 = ashr exact i64 %11, 3
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %772

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.net::ReportingReport"*** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %0, i64 0, i32 0, i32 1
  %19 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %18, align 8
  %20 = ptrtoint %"struct.net::ReportingReport"** %19 to i64
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = icmp sgt i64 %12, %22
  %24 = bitcast %"struct.net::ReportingReport"*** %18 to i64*
  br i1 %23, label %359, label %25

25:                                               ; preds = %14
  %26 = sub i64 %20, %7
  %27 = ashr exact i64 %26, 3
  %28 = icmp sgt i64 %12, %27
  br i1 %28, label %29, label %214

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %2, i64 %27
  %31 = icmp eq %"struct.net::ReportingReport"** %30, %3
  br i1 %31, label %209, label %32

32:                                               ; preds = %29
  %33 = xor i64 %27, -1
  %34 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %3, i64 %33
  %35 = ptrtoint %"struct.net::ReportingReport"** %34 to i64
  %36 = sub i64 %35, %8
  %37 = lshr i64 %36, 3
  %38 = add nuw nsw i64 %37, 1
  %39 = icmp ult i64 %38, 4
  br i1 %39, label %135, label %40

40:                                               ; preds = %32
  %41 = xor i64 %27, -1
  %42 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %3, i64 %41
  %43 = ptrtoint %"struct.net::ReportingReport"** %42 to i64
  %44 = sub i64 %43, %8
  %45 = lshr i64 %44, 3
  %46 = add nuw nsw i64 %45, 1
  %47 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %19, i64 %46
  %48 = add nsw i64 %27, %45
  %49 = add nsw i64 %48, 1
  %50 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %2, i64 %49
  %51 = icmp ult %"struct.net::ReportingReport"** %19, %50
  %52 = icmp ult %"struct.net::ReportingReport"** %30, %47
  %53 = and i1 %51, %52
  br i1 %53, label %135, label %54

54:                                               ; preds = %40
  %55 = and i64 %38, 4611686018427387900
  %56 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %19, i64 %55
  %57 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %30, i64 %55
  %58 = add nsw i64 %55, -4
  %59 = lshr exact i64 %58, 2
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 12
  br i1 %62, label %114, label %63

63:                                               ; preds = %54
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %19, i64 %66
  %69 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %30, i64 %66
  %70 = bitcast %"struct.net::ReportingReport"** %69 to <2 x i64>*
  %71 = load <2 x i64>, <2 x i64>* %70, align 8, !alias.scope !83
  %72 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %69, i64 2
  %73 = bitcast %"struct.net::ReportingReport"** %72 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8, !alias.scope !83
  %75 = bitcast %"struct.net::ReportingReport"** %68 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %75, align 8, !alias.scope !86, !noalias !83
  %76 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %68, i64 2
  %77 = bitcast %"struct.net::ReportingReport"** %76 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %77, align 8, !alias.scope !86, !noalias !83
  %78 = or i64 %66, 4
  %79 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %19, i64 %78
  %80 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %30, i64 %78
  %81 = bitcast %"struct.net::ReportingReport"** %80 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8, !alias.scope !83
  %83 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %80, i64 2
  %84 = bitcast %"struct.net::ReportingReport"** %83 to <2 x i64>*
  %85 = load <2 x i64>, <2 x i64>* %84, align 8, !alias.scope !83
  %86 = bitcast %"struct.net::ReportingReport"** %79 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %86, align 8, !alias.scope !86, !noalias !83
  %87 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %79, i64 2
  %88 = bitcast %"struct.net::ReportingReport"** %87 to <2 x i64>*
  store <2 x i64> %85, <2 x i64>* %88, align 8, !alias.scope !86, !noalias !83
  %89 = or i64 %66, 8
  %90 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %19, i64 %89
  %91 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %30, i64 %89
  %92 = bitcast %"struct.net::ReportingReport"** %91 to <2 x i64>*
  %93 = load <2 x i64>, <2 x i64>* %92, align 8, !alias.scope !83
  %94 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %91, i64 2
  %95 = bitcast %"struct.net::ReportingReport"** %94 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 8, !alias.scope !83
  %97 = bitcast %"struct.net::ReportingReport"** %90 to <2 x i64>*
  store <2 x i64> %93, <2 x i64>* %97, align 8, !alias.scope !86, !noalias !83
  %98 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %90, i64 2
  %99 = bitcast %"struct.net::ReportingReport"** %98 to <2 x i64>*
  store <2 x i64> %96, <2 x i64>* %99, align 8, !alias.scope !86, !noalias !83
  %100 = or i64 %66, 12
  %101 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %19, i64 %100
  %102 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %30, i64 %100
  %103 = bitcast %"struct.net::ReportingReport"** %102 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8, !alias.scope !83
  %105 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %102, i64 2
  %106 = bitcast %"struct.net::ReportingReport"** %105 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 8, !alias.scope !83
  %108 = bitcast %"struct.net::ReportingReport"** %101 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %108, align 8, !alias.scope !86, !noalias !83
  %109 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %101, i64 2
  %110 = bitcast %"struct.net::ReportingReport"** %109 to <2 x i64>*
  store <2 x i64> %107, <2 x i64>* %110, align 8, !alias.scope !86, !noalias !83
  %111 = add i64 %66, 16
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !88

114:                                              ; preds = %65, %54
  %115 = phi i64 [ 0, %54 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %19, i64 %118
  %121 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %30, i64 %118
  %122 = bitcast %"struct.net::ReportingReport"** %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8, !alias.scope !83
  %124 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %121, i64 2
  %125 = bitcast %"struct.net::ReportingReport"** %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !83
  %127 = bitcast %"struct.net::ReportingReport"** %120 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %127, align 8, !alias.scope !86, !noalias !83
  %128 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %120, i64 2
  %129 = bitcast %"struct.net::ReportingReport"** %128 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %129, align 8, !alias.scope !86, !noalias !83
  %130 = add i64 %118, 4
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !90

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %38, %55
  br i1 %134, label %206, label %135

135:                                              ; preds = %133, %40, %32
  %136 = phi %"struct.net::ReportingReport"** [ %19, %40 ], [ %19, %32 ], [ %56, %133 ]
  %137 = phi %"struct.net::ReportingReport"** [ %30, %40 ], [ %30, %32 ], [ %57, %133 ]
  %138 = ptrtoint %"struct.net::ReportingReport"** %137 to i64
  %139 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %3, i64 -1
  %140 = ptrtoint %"struct.net::ReportingReport"** %139 to i64
  %141 = sub i64 %140, %138
  %142 = lshr i64 %141, 3
  %143 = add nuw nsw i64 %142, 1
  %144 = and i64 %143, 7
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %157, label %146

146:                                              ; preds = %135, %146
  %147 = phi %"struct.net::ReportingReport"** [ %154, %146 ], [ %136, %135 ]
  %148 = phi %"struct.net::ReportingReport"** [ %153, %146 ], [ %137, %135 ]
  %149 = phi i64 [ %155, %146 ], [ %144, %135 ]
  %150 = bitcast %"struct.net::ReportingReport"** %147 to i64*
  %151 = bitcast %"struct.net::ReportingReport"** %148 to i64*
  %152 = load i64, i64* %151, align 8
  store i64 %152, i64* %150, align 8
  %153 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %148, i64 1
  %154 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %147, i64 1
  %155 = add i64 %149, -1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %146, !llvm.loop !92

157:                                              ; preds = %146, %135
  %158 = phi %"struct.net::ReportingReport"** [ undef, %135 ], [ %154, %146 ]
  %159 = phi %"struct.net::ReportingReport"** [ %136, %135 ], [ %154, %146 ]
  %160 = phi %"struct.net::ReportingReport"** [ %137, %135 ], [ %153, %146 ]
  %161 = icmp ult i64 %141, 56
  br i1 %161, label %206, label %162

162:                                              ; preds = %157, %162
  %163 = phi %"struct.net::ReportingReport"** [ %204, %162 ], [ %159, %157 ]
  %164 = phi %"struct.net::ReportingReport"** [ %203, %162 ], [ %160, %157 ]
  %165 = bitcast %"struct.net::ReportingReport"** %163 to i64*
  %166 = bitcast %"struct.net::ReportingReport"** %164 to i64*
  %167 = load i64, i64* %166, align 8
  store i64 %167, i64* %165, align 8
  %168 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %164, i64 1
  %169 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %163, i64 1
  %170 = bitcast %"struct.net::ReportingReport"** %169 to i64*
  %171 = bitcast %"struct.net::ReportingReport"** %168 to i64*
  %172 = load i64, i64* %171, align 8
  store i64 %172, i64* %170, align 8
  %173 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %164, i64 2
  %174 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %163, i64 2
  %175 = bitcast %"struct.net::ReportingReport"** %174 to i64*
  %176 = bitcast %"struct.net::ReportingReport"** %173 to i64*
  %177 = load i64, i64* %176, align 8
  store i64 %177, i64* %175, align 8
  %178 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %164, i64 3
  %179 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %163, i64 3
  %180 = bitcast %"struct.net::ReportingReport"** %179 to i64*
  %181 = bitcast %"struct.net::ReportingReport"** %178 to i64*
  %182 = load i64, i64* %181, align 8
  store i64 %182, i64* %180, align 8
  %183 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %164, i64 4
  %184 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %163, i64 4
  %185 = bitcast %"struct.net::ReportingReport"** %184 to i64*
  %186 = bitcast %"struct.net::ReportingReport"** %183 to i64*
  %187 = load i64, i64* %186, align 8
  store i64 %187, i64* %185, align 8
  %188 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %164, i64 5
  %189 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %163, i64 5
  %190 = bitcast %"struct.net::ReportingReport"** %189 to i64*
  %191 = bitcast %"struct.net::ReportingReport"** %188 to i64*
  %192 = load i64, i64* %191, align 8
  store i64 %192, i64* %190, align 8
  %193 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %164, i64 6
  %194 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %163, i64 6
  %195 = bitcast %"struct.net::ReportingReport"** %194 to i64*
  %196 = bitcast %"struct.net::ReportingReport"** %193 to i64*
  %197 = load i64, i64* %196, align 8
  store i64 %197, i64* %195, align 8
  %198 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %164, i64 7
  %199 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %163, i64 7
  %200 = bitcast %"struct.net::ReportingReport"** %199 to i64*
  %201 = bitcast %"struct.net::ReportingReport"** %198 to i64*
  %202 = load i64, i64* %201, align 8
  store i64 %202, i64* %200, align 8
  %203 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %164, i64 8
  %204 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %163, i64 8
  %205 = icmp eq %"struct.net::ReportingReport"** %203, %3
  br i1 %205, label %206, label %162, !llvm.loop !93

206:                                              ; preds = %157, %162, %133
  %207 = phi %"struct.net::ReportingReport"** [ %56, %133 ], [ %158, %157 ], [ %204, %162 ]
  %208 = ptrtoint %"struct.net::ReportingReport"** %207 to i64
  br label %209

209:                                              ; preds = %206, %29
  %210 = phi i64 [ %20, %29 ], [ %208, %206 ]
  store i64 %210, i64* %24, align 8
  %211 = icmp sgt i64 %26, 0
  br i1 %211, label %212, label %772

212:                                              ; preds = %209
  %213 = inttoptr i64 %210 to %"struct.net::ReportingReport"**
  br label %214

214:                                              ; preds = %212, %25
  %215 = phi i64 [ %210, %212 ], [ %20, %25 ]
  %216 = phi %"struct.net::ReportingReport"** [ %213, %212 ], [ %19, %25 ]
  %217 = phi %"struct.net::ReportingReport"** [ %30, %212 ], [ %3, %25 ]
  %218 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %1, i64 %12
  %219 = ptrtoint %"struct.net::ReportingReport"** %218 to i64
  %220 = sub i64 %215, %219
  %221 = ashr exact i64 %220, 3
  %222 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %1, i64 %221
  %223 = icmp ult %"struct.net::ReportingReport"** %222, %19
  br i1 %223, label %224, label %337

224:                                              ; preds = %214
  %225 = sub nsw i64 0, %221
  %226 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %19, i64 %225
  %227 = bitcast %"struct.net::ReportingReport"** %226 to i8*
  %228 = xor i64 %7, -1
  %229 = getelementptr i8, i8* %227, i64 %228
  %230 = ptrtoint i8* %229 to i64
  %231 = lshr i64 %230, 3
  %232 = add nuw nsw i64 %231, 1
  %233 = icmp ult i64 %232, 4
  br i1 %233, label %234, label %237

234:                                              ; preds = %332, %237, %224
  %235 = phi %"struct.net::ReportingReport"** [ %216, %237 ], [ %216, %224 ], [ %255, %332 ]
  %236 = phi %"struct.net::ReportingReport"** [ %222, %237 ], [ %222, %224 ], [ %256, %332 ]
  br label %345

237:                                              ; preds = %224
  %238 = sub nsw i64 0, %221
  %239 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %19, i64 %238
  %240 = bitcast %"struct.net::ReportingReport"** %239 to i8*
  %241 = xor i64 %7, -1
  %242 = getelementptr i8, i8* %240, i64 %241
  %243 = ptrtoint i8* %242 to i64
  %244 = lshr i64 %243, 3
  %245 = add nuw nsw i64 %244, 1
  %246 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %216, i64 %245
  %247 = add nsw i64 %221, %244
  %248 = add nsw i64 %247, 1
  %249 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %1, i64 %248
  %250 = icmp ult %"struct.net::ReportingReport"** %216, %249
  %251 = icmp ult %"struct.net::ReportingReport"** %222, %246
  %252 = and i1 %250, %251
  br i1 %252, label %234, label %253

253:                                              ; preds = %237
  %254 = and i64 %232, 4611686018427387900
  %255 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %216, i64 %254
  %256 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %222, i64 %254
  %257 = add nsw i64 %254, -4
  %258 = lshr exact i64 %257, 2
  %259 = add nuw nsw i64 %258, 1
  %260 = and i64 %259, 3
  %261 = icmp ult i64 %257, 12
  br i1 %261, label %313, label %262

262:                                              ; preds = %253
  %263 = sub nsw i64 %259, %260
  br label %264

264:                                              ; preds = %264, %262
  %265 = phi i64 [ 0, %262 ], [ %310, %264 ]
  %266 = phi i64 [ %263, %262 ], [ %311, %264 ]
  %267 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %216, i64 %265
  %268 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %222, i64 %265
  %269 = bitcast %"struct.net::ReportingReport"** %268 to <2 x i64>*
  %270 = load <2 x i64>, <2 x i64>* %269, align 8, !alias.scope !94
  %271 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %268, i64 2
  %272 = bitcast %"struct.net::ReportingReport"** %271 to <2 x i64>*
  %273 = load <2 x i64>, <2 x i64>* %272, align 8, !alias.scope !94
  %274 = bitcast %"struct.net::ReportingReport"** %267 to <2 x i64>*
  store <2 x i64> %270, <2 x i64>* %274, align 8, !alias.scope !97, !noalias !94
  %275 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %267, i64 2
  %276 = bitcast %"struct.net::ReportingReport"** %275 to <2 x i64>*
  store <2 x i64> %273, <2 x i64>* %276, align 8, !alias.scope !97, !noalias !94
  %277 = or i64 %265, 4
  %278 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %216, i64 %277
  %279 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %222, i64 %277
  %280 = bitcast %"struct.net::ReportingReport"** %279 to <2 x i64>*
  %281 = load <2 x i64>, <2 x i64>* %280, align 8, !alias.scope !94
  %282 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %279, i64 2
  %283 = bitcast %"struct.net::ReportingReport"** %282 to <2 x i64>*
  %284 = load <2 x i64>, <2 x i64>* %283, align 8, !alias.scope !94
  %285 = bitcast %"struct.net::ReportingReport"** %278 to <2 x i64>*
  store <2 x i64> %281, <2 x i64>* %285, align 8, !alias.scope !97, !noalias !94
  %286 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %278, i64 2
  %287 = bitcast %"struct.net::ReportingReport"** %286 to <2 x i64>*
  store <2 x i64> %284, <2 x i64>* %287, align 8, !alias.scope !97, !noalias !94
  %288 = or i64 %265, 8
  %289 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %216, i64 %288
  %290 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %222, i64 %288
  %291 = bitcast %"struct.net::ReportingReport"** %290 to <2 x i64>*
  %292 = load <2 x i64>, <2 x i64>* %291, align 8, !alias.scope !94
  %293 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %290, i64 2
  %294 = bitcast %"struct.net::ReportingReport"** %293 to <2 x i64>*
  %295 = load <2 x i64>, <2 x i64>* %294, align 8, !alias.scope !94
  %296 = bitcast %"struct.net::ReportingReport"** %289 to <2 x i64>*
  store <2 x i64> %292, <2 x i64>* %296, align 8, !alias.scope !97, !noalias !94
  %297 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %289, i64 2
  %298 = bitcast %"struct.net::ReportingReport"** %297 to <2 x i64>*
  store <2 x i64> %295, <2 x i64>* %298, align 8, !alias.scope !97, !noalias !94
  %299 = or i64 %265, 12
  %300 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %216, i64 %299
  %301 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %222, i64 %299
  %302 = bitcast %"struct.net::ReportingReport"** %301 to <2 x i64>*
  %303 = load <2 x i64>, <2 x i64>* %302, align 8, !alias.scope !94
  %304 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %301, i64 2
  %305 = bitcast %"struct.net::ReportingReport"** %304 to <2 x i64>*
  %306 = load <2 x i64>, <2 x i64>* %305, align 8, !alias.scope !94
  %307 = bitcast %"struct.net::ReportingReport"** %300 to <2 x i64>*
  store <2 x i64> %303, <2 x i64>* %307, align 8, !alias.scope !97, !noalias !94
  %308 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %300, i64 2
  %309 = bitcast %"struct.net::ReportingReport"** %308 to <2 x i64>*
  store <2 x i64> %306, <2 x i64>* %309, align 8, !alias.scope !97, !noalias !94
  %310 = add i64 %265, 16
  %311 = add i64 %266, -4
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %313, label %264, !llvm.loop !99

313:                                              ; preds = %264, %253
  %314 = phi i64 [ 0, %253 ], [ %310, %264 ]
  %315 = icmp eq i64 %260, 0
  br i1 %315, label %332, label %316

316:                                              ; preds = %313, %316
  %317 = phi i64 [ %329, %316 ], [ %314, %313 ]
  %318 = phi i64 [ %330, %316 ], [ %260, %313 ]
  %319 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %216, i64 %317
  %320 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %222, i64 %317
  %321 = bitcast %"struct.net::ReportingReport"** %320 to <2 x i64>*
  %322 = load <2 x i64>, <2 x i64>* %321, align 8, !alias.scope !94
  %323 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %320, i64 2
  %324 = bitcast %"struct.net::ReportingReport"** %323 to <2 x i64>*
  %325 = load <2 x i64>, <2 x i64>* %324, align 8, !alias.scope !94
  %326 = bitcast %"struct.net::ReportingReport"** %319 to <2 x i64>*
  store <2 x i64> %322, <2 x i64>* %326, align 8, !alias.scope !97, !noalias !94
  %327 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %319, i64 2
  %328 = bitcast %"struct.net::ReportingReport"** %327 to <2 x i64>*
  store <2 x i64> %325, <2 x i64>* %328, align 8, !alias.scope !97, !noalias !94
  %329 = add i64 %317, 4
  %330 = add i64 %318, -1
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %332, label %316, !llvm.loop !100

332:                                              ; preds = %316, %313
  %333 = icmp eq i64 %232, %254
  br i1 %333, label %334, label %234

334:                                              ; preds = %345, %332
  %335 = phi %"struct.net::ReportingReport"** [ %255, %332 ], [ %352, %345 ]
  %336 = ptrtoint %"struct.net::ReportingReport"** %335 to i64
  br label %337

337:                                              ; preds = %334, %214
  %338 = phi i64 [ %336, %334 ], [ %215, %214 ]
  store i64 %338, i64* %24, align 8
  %339 = icmp eq i64 %220, 0
  br i1 %339, label %354, label %340

340:                                              ; preds = %337
  %341 = sub nsw i64 0, %221
  %342 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %216, i64 %341
  %343 = bitcast %"struct.net::ReportingReport"** %342 to i8*
  %344 = bitcast %"struct.net::ReportingReport"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %343, i8* align 8 %344, i64 %220, i1 false) #12
  br label %354

345:                                              ; preds = %234, %345
  %346 = phi %"struct.net::ReportingReport"** [ %352, %345 ], [ %235, %234 ]
  %347 = phi %"struct.net::ReportingReport"** [ %351, %345 ], [ %236, %234 ]
  %348 = bitcast %"struct.net::ReportingReport"** %347 to i64*
  %349 = load i64, i64* %348, align 8
  %350 = bitcast %"struct.net::ReportingReport"** %346 to i64*
  store i64 %349, i64* %350, align 8
  %351 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %347, i64 1
  %352 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %346, i64 1
  %353 = icmp ult %"struct.net::ReportingReport"** %351, %19
  br i1 %353, label %345, label %334, !llvm.loop !101

354:                                              ; preds = %337, %340
  %355 = ptrtoint %"struct.net::ReportingReport"** %217 to i64
  %356 = sub i64 %355, %8
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %772, label %358

358:                                              ; preds = %354
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %5, i64 %356, i1 false) #12
  br label %772

359:                                              ; preds = %14
  %360 = bitcast %"class.std::__1::vector.82"* %0 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = sub i64 %20, %361
  %363 = ashr exact i64 %362, 3
  %364 = add nsw i64 %363, %12
  %365 = icmp ugt i64 %364, 2305843009213693951
  br i1 %365, label %366, label %368

366:                                              ; preds = %359
  %367 = bitcast %"class.std::__1::vector.82"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %367) #13
  unreachable

368:                                              ; preds = %359
  %369 = sub i64 %17, %361
  %370 = ashr exact i64 %369, 3
  %371 = icmp ult i64 %370, 1152921504606846975
  br i1 %371, label %375, label %372

372:                                              ; preds = %368
  %373 = sub i64 %7, %361
  %374 = ashr exact i64 %373, 3
  br label %385

375:                                              ; preds = %368
  %376 = ashr exact i64 %369, 2
  %377 = icmp ult i64 %376, %364
  %378 = select i1 %377, i64 %364, i64 %376
  %379 = sub i64 %7, %361
  %380 = ashr exact i64 %379, 3
  %381 = icmp eq i64 %378, 0
  br i1 %381, label %391, label %382

382:                                              ; preds = %375
  %383 = icmp ugt i64 %378, 2305843009213693951
  br i1 %383, label %384, label %385

384:                                              ; preds = %382
  tail call void @abort() #13
  unreachable

385:                                              ; preds = %372, %382
  %386 = phi i64 [ 2305843009213693951, %372 ], [ %378, %382 ]
  %387 = phi i64 [ %374, %372 ], [ %380, %382 ]
  %388 = shl i64 %386, 3
  %389 = tail call i8* @_Znwm(i64 %388) #11
  %390 = bitcast i8* %389 to %"struct.net::ReportingReport"**
  br label %391

391:                                              ; preds = %385, %375
  %392 = phi i64 [ %387, %385 ], [ %380, %375 ]
  %393 = phi i64 [ %386, %385 ], [ 0, %375 ]
  %394 = phi %"struct.net::ReportingReport"** [ %390, %385 ], [ null, %375 ]
  %395 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %394, i64 %392
  %396 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %394, i64 %393
  %397 = ptrtoint %"struct.net::ReportingReport"** %396 to i64
  %398 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %395, i64 %12
  %399 = add i64 %11, -8
  %400 = lshr i64 %399, 3
  %401 = add nuw nsw i64 %400, 1
  %402 = icmp ult i64 %401, 4
  br i1 %402, label %496, label %403

403:                                              ; preds = %391
  %404 = add i64 %11, -8
  %405 = lshr i64 %404, 3
  %406 = add nsw i64 %392, %405
  %407 = add nsw i64 %406, 1
  %408 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %394, i64 %407
  %409 = add nuw nsw i64 %405, 1
  %410 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %2, i64 %409
  %411 = icmp ult %"struct.net::ReportingReport"** %395, %410
  %412 = icmp ugt %"struct.net::ReportingReport"** %408, %2
  %413 = and i1 %411, %412
  br i1 %413, label %496, label %414

414:                                              ; preds = %403
  %415 = and i64 %401, 4611686018427387900
  %416 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %395, i64 %415
  %417 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %395, i64 %415
  %418 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %2, i64 %415
  %419 = add nsw i64 %415, -4
  %420 = lshr exact i64 %419, 2
  %421 = add nuw nsw i64 %420, 1
  %422 = and i64 %421, 3
  %423 = icmp ult i64 %419, 12
  br i1 %423, label %475, label %424

424:                                              ; preds = %414
  %425 = sub nsw i64 %421, %422
  br label %426

426:                                              ; preds = %426, %424
  %427 = phi i64 [ 0, %424 ], [ %472, %426 ]
  %428 = phi i64 [ %425, %424 ], [ %473, %426 ]
  %429 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %395, i64 %427
  %430 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %2, i64 %427
  %431 = bitcast %"struct.net::ReportingReport"** %430 to <2 x i64>*
  %432 = load <2 x i64>, <2 x i64>* %431, align 8, !alias.scope !102
  %433 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %430, i64 2
  %434 = bitcast %"struct.net::ReportingReport"** %433 to <2 x i64>*
  %435 = load <2 x i64>, <2 x i64>* %434, align 8, !alias.scope !102
  %436 = bitcast %"struct.net::ReportingReport"** %429 to <2 x i64>*
  store <2 x i64> %432, <2 x i64>* %436, align 8, !alias.scope !105, !noalias !102
  %437 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %429, i64 2
  %438 = bitcast %"struct.net::ReportingReport"** %437 to <2 x i64>*
  store <2 x i64> %435, <2 x i64>* %438, align 8, !alias.scope !105, !noalias !102
  %439 = or i64 %427, 4
  %440 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %395, i64 %439
  %441 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %2, i64 %439
  %442 = bitcast %"struct.net::ReportingReport"** %441 to <2 x i64>*
  %443 = load <2 x i64>, <2 x i64>* %442, align 8, !alias.scope !102
  %444 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %441, i64 2
  %445 = bitcast %"struct.net::ReportingReport"** %444 to <2 x i64>*
  %446 = load <2 x i64>, <2 x i64>* %445, align 8, !alias.scope !102
  %447 = bitcast %"struct.net::ReportingReport"** %440 to <2 x i64>*
  store <2 x i64> %443, <2 x i64>* %447, align 8, !alias.scope !105, !noalias !102
  %448 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %440, i64 2
  %449 = bitcast %"struct.net::ReportingReport"** %448 to <2 x i64>*
  store <2 x i64> %446, <2 x i64>* %449, align 8, !alias.scope !105, !noalias !102
  %450 = or i64 %427, 8
  %451 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %395, i64 %450
  %452 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %2, i64 %450
  %453 = bitcast %"struct.net::ReportingReport"** %452 to <2 x i64>*
  %454 = load <2 x i64>, <2 x i64>* %453, align 8, !alias.scope !102
  %455 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %452, i64 2
  %456 = bitcast %"struct.net::ReportingReport"** %455 to <2 x i64>*
  %457 = load <2 x i64>, <2 x i64>* %456, align 8, !alias.scope !102
  %458 = bitcast %"struct.net::ReportingReport"** %451 to <2 x i64>*
  store <2 x i64> %454, <2 x i64>* %458, align 8, !alias.scope !105, !noalias !102
  %459 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %451, i64 2
  %460 = bitcast %"struct.net::ReportingReport"** %459 to <2 x i64>*
  store <2 x i64> %457, <2 x i64>* %460, align 8, !alias.scope !105, !noalias !102
  %461 = or i64 %427, 12
  %462 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %395, i64 %461
  %463 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %2, i64 %461
  %464 = bitcast %"struct.net::ReportingReport"** %463 to <2 x i64>*
  %465 = load <2 x i64>, <2 x i64>* %464, align 8, !alias.scope !102
  %466 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %463, i64 2
  %467 = bitcast %"struct.net::ReportingReport"** %466 to <2 x i64>*
  %468 = load <2 x i64>, <2 x i64>* %467, align 8, !alias.scope !102
  %469 = bitcast %"struct.net::ReportingReport"** %462 to <2 x i64>*
  store <2 x i64> %465, <2 x i64>* %469, align 8, !alias.scope !105, !noalias !102
  %470 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %462, i64 2
  %471 = bitcast %"struct.net::ReportingReport"** %470 to <2 x i64>*
  store <2 x i64> %468, <2 x i64>* %471, align 8, !alias.scope !105, !noalias !102
  %472 = add i64 %427, 16
  %473 = add i64 %428, -4
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %475, label %426, !llvm.loop !107

475:                                              ; preds = %426, %414
  %476 = phi i64 [ 0, %414 ], [ %472, %426 ]
  %477 = icmp eq i64 %422, 0
  br i1 %477, label %494, label %478

478:                                              ; preds = %475, %478
  %479 = phi i64 [ %491, %478 ], [ %476, %475 ]
  %480 = phi i64 [ %492, %478 ], [ %422, %475 ]
  %481 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %395, i64 %479
  %482 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %2, i64 %479
  %483 = bitcast %"struct.net::ReportingReport"** %482 to <2 x i64>*
  %484 = load <2 x i64>, <2 x i64>* %483, align 8, !alias.scope !102
  %485 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %482, i64 2
  %486 = bitcast %"struct.net::ReportingReport"** %485 to <2 x i64>*
  %487 = load <2 x i64>, <2 x i64>* %486, align 8, !alias.scope !102
  %488 = bitcast %"struct.net::ReportingReport"** %481 to <2 x i64>*
  store <2 x i64> %484, <2 x i64>* %488, align 8, !alias.scope !105, !noalias !102
  %489 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %481, i64 2
  %490 = bitcast %"struct.net::ReportingReport"** %489 to <2 x i64>*
  store <2 x i64> %487, <2 x i64>* %490, align 8, !alias.scope !105, !noalias !102
  %491 = add i64 %479, 4
  %492 = add i64 %480, -1
  %493 = icmp eq i64 %492, 0
  br i1 %493, label %494, label %478, !llvm.loop !108

494:                                              ; preds = %478, %475
  %495 = icmp eq i64 %401, %415
  br i1 %495, label %572, label %496

496:                                              ; preds = %494, %403, %391
  %497 = phi %"struct.net::ReportingReport"** [ %395, %403 ], [ %395, %391 ], [ %416, %494 ]
  %498 = phi %"struct.net::ReportingReport"** [ %395, %403 ], [ %395, %391 ], [ %417, %494 ]
  %499 = phi %"struct.net::ReportingReport"** [ %2, %403 ], [ %2, %391 ], [ %418, %494 ]
  %500 = ptrtoint %"struct.net::ReportingReport"** %497 to i64
  %501 = add nsw i64 %392, %12
  %502 = add nsw i64 %501, -1
  %503 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %394, i64 %502
  %504 = ptrtoint %"struct.net::ReportingReport"** %503 to i64
  %505 = sub i64 %504, %500
  %506 = lshr i64 %505, 3
  %507 = add nuw nsw i64 %506, 1
  %508 = and i64 %507, 7
  %509 = icmp eq i64 %508, 0
  br i1 %509, label %522, label %510

510:                                              ; preds = %496, %510
  %511 = phi %"struct.net::ReportingReport"** [ %518, %510 ], [ %497, %496 ]
  %512 = phi %"struct.net::ReportingReport"** [ %518, %510 ], [ %498, %496 ]
  %513 = phi %"struct.net::ReportingReport"** [ %519, %510 ], [ %499, %496 ]
  %514 = phi i64 [ %520, %510 ], [ %508, %496 ]
  %515 = bitcast %"struct.net::ReportingReport"** %513 to i64*
  %516 = load i64, i64* %515, align 8
  %517 = bitcast %"struct.net::ReportingReport"** %512 to i64*
  store i64 %516, i64* %517, align 8
  %518 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %511, i64 1
  %519 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %513, i64 1
  %520 = add i64 %514, -1
  %521 = icmp eq i64 %520, 0
  br i1 %521, label %522, label %510, !llvm.loop !109

522:                                              ; preds = %510, %496
  %523 = phi %"struct.net::ReportingReport"** [ %497, %496 ], [ %518, %510 ]
  %524 = phi %"struct.net::ReportingReport"** [ %498, %496 ], [ %518, %510 ]
  %525 = phi %"struct.net::ReportingReport"** [ %499, %496 ], [ %519, %510 ]
  %526 = icmp ult i64 %505, 56
  br i1 %526, label %572, label %527

527:                                              ; preds = %522, %527
  %528 = phi %"struct.net::ReportingReport"** [ %569, %527 ], [ %523, %522 ]
  %529 = phi %"struct.net::ReportingReport"** [ %569, %527 ], [ %524, %522 ]
  %530 = phi %"struct.net::ReportingReport"** [ %570, %527 ], [ %525, %522 ]
  %531 = bitcast %"struct.net::ReportingReport"** %530 to i64*
  %532 = load i64, i64* %531, align 8
  %533 = bitcast %"struct.net::ReportingReport"** %529 to i64*
  store i64 %532, i64* %533, align 8
  %534 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %528, i64 1
  %535 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %530, i64 1
  %536 = bitcast %"struct.net::ReportingReport"** %535 to i64*
  %537 = load i64, i64* %536, align 8
  %538 = bitcast %"struct.net::ReportingReport"** %534 to i64*
  store i64 %537, i64* %538, align 8
  %539 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %528, i64 2
  %540 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %530, i64 2
  %541 = bitcast %"struct.net::ReportingReport"** %540 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = bitcast %"struct.net::ReportingReport"** %539 to i64*
  store i64 %542, i64* %543, align 8
  %544 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %528, i64 3
  %545 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %530, i64 3
  %546 = bitcast %"struct.net::ReportingReport"** %545 to i64*
  %547 = load i64, i64* %546, align 8
  %548 = bitcast %"struct.net::ReportingReport"** %544 to i64*
  store i64 %547, i64* %548, align 8
  %549 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %528, i64 4
  %550 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %530, i64 4
  %551 = bitcast %"struct.net::ReportingReport"** %550 to i64*
  %552 = load i64, i64* %551, align 8
  %553 = bitcast %"struct.net::ReportingReport"** %549 to i64*
  store i64 %552, i64* %553, align 8
  %554 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %528, i64 5
  %555 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %530, i64 5
  %556 = bitcast %"struct.net::ReportingReport"** %555 to i64*
  %557 = load i64, i64* %556, align 8
  %558 = bitcast %"struct.net::ReportingReport"** %554 to i64*
  store i64 %557, i64* %558, align 8
  %559 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %528, i64 6
  %560 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %530, i64 6
  %561 = bitcast %"struct.net::ReportingReport"** %560 to i64*
  %562 = load i64, i64* %561, align 8
  %563 = bitcast %"struct.net::ReportingReport"** %559 to i64*
  store i64 %562, i64* %563, align 8
  %564 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %528, i64 7
  %565 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %530, i64 7
  %566 = bitcast %"struct.net::ReportingReport"** %565 to i64*
  %567 = load i64, i64* %566, align 8
  %568 = bitcast %"struct.net::ReportingReport"** %564 to i64*
  store i64 %567, i64* %568, align 8
  %569 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %528, i64 8
  %570 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %530, i64 8
  %571 = icmp eq %"struct.net::ReportingReport"** %398, %569
  br i1 %571, label %572, label %527, !llvm.loop !110

572:                                              ; preds = %522, %527, %494
  %573 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %9, align 8
  %574 = ptrtoint %"struct.net::ReportingReport"** %573 to i64
  %575 = sub i64 %7, %574
  %576 = ashr exact i64 %575, 3
  %577 = sub nsw i64 0, %576
  %578 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %395, i64 %577
  %579 = ptrtoint %"struct.net::ReportingReport"** %578 to i64
  %580 = icmp sgt i64 %575, 0
  br i1 %580, label %581, label %584

581:                                              ; preds = %572
  %582 = bitcast %"struct.net::ReportingReport"** %578 to i8*
  %583 = bitcast %"struct.net::ReportingReport"** %573 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %582, i8* align 8 %583, i64 %575, i1 false) #12
  br label %584

584:                                              ; preds = %581, %572
  %585 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %18, align 8
  %586 = icmp eq %"struct.net::ReportingReport"** %585, %1
  br i1 %586, label %765, label %587

587:                                              ; preds = %584
  %588 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %585, i64 -1
  %589 = ptrtoint %"struct.net::ReportingReport"** %588 to i64
  %590 = sub i64 %589, %7
  %591 = lshr i64 %590, 3
  %592 = add nuw nsw i64 %591, 1
  %593 = icmp ult i64 %592, 4
  br i1 %593, label %690, label %594

594:                                              ; preds = %587
  %595 = add nsw i64 %392, %12
  %596 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %585, i64 -1
  %597 = ptrtoint %"struct.net::ReportingReport"** %596 to i64
  %598 = sub i64 %597, %7
  %599 = lshr i64 %598, 3
  %600 = add nsw i64 %595, %599
  %601 = add nsw i64 %600, 1
  %602 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %394, i64 %601
  %603 = add nuw nsw i64 %599, 1
  %604 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %1, i64 %603
  %605 = icmp ult %"struct.net::ReportingReport"** %398, %604
  %606 = icmp ugt %"struct.net::ReportingReport"** %602, %1
  %607 = and i1 %605, %606
  br i1 %607, label %690, label %608

608:                                              ; preds = %594
  %609 = and i64 %592, 4611686018427387900
  %610 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %398, i64 %609
  %611 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %398, i64 %609
  %612 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %1, i64 %609
  %613 = add nsw i64 %609, -4
  %614 = lshr exact i64 %613, 2
  %615 = add nuw nsw i64 %614, 1
  %616 = and i64 %615, 3
  %617 = icmp ult i64 %613, 12
  br i1 %617, label %669, label %618

618:                                              ; preds = %608
  %619 = sub nsw i64 %615, %616
  br label %620

620:                                              ; preds = %620, %618
  %621 = phi i64 [ 0, %618 ], [ %666, %620 ]
  %622 = phi i64 [ %619, %618 ], [ %667, %620 ]
  %623 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %398, i64 %621
  %624 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %1, i64 %621
  %625 = bitcast %"struct.net::ReportingReport"** %624 to <2 x i64>*
  %626 = load <2 x i64>, <2 x i64>* %625, align 8, !alias.scope !111
  %627 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %624, i64 2
  %628 = bitcast %"struct.net::ReportingReport"** %627 to <2 x i64>*
  %629 = load <2 x i64>, <2 x i64>* %628, align 8, !alias.scope !111
  %630 = bitcast %"struct.net::ReportingReport"** %623 to <2 x i64>*
  store <2 x i64> %626, <2 x i64>* %630, align 8, !alias.scope !114, !noalias !111
  %631 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %623, i64 2
  %632 = bitcast %"struct.net::ReportingReport"** %631 to <2 x i64>*
  store <2 x i64> %629, <2 x i64>* %632, align 8, !alias.scope !114, !noalias !111
  %633 = or i64 %621, 4
  %634 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %398, i64 %633
  %635 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %1, i64 %633
  %636 = bitcast %"struct.net::ReportingReport"** %635 to <2 x i64>*
  %637 = load <2 x i64>, <2 x i64>* %636, align 8, !alias.scope !111
  %638 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %635, i64 2
  %639 = bitcast %"struct.net::ReportingReport"** %638 to <2 x i64>*
  %640 = load <2 x i64>, <2 x i64>* %639, align 8, !alias.scope !111
  %641 = bitcast %"struct.net::ReportingReport"** %634 to <2 x i64>*
  store <2 x i64> %637, <2 x i64>* %641, align 8, !alias.scope !114, !noalias !111
  %642 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %634, i64 2
  %643 = bitcast %"struct.net::ReportingReport"** %642 to <2 x i64>*
  store <2 x i64> %640, <2 x i64>* %643, align 8, !alias.scope !114, !noalias !111
  %644 = or i64 %621, 8
  %645 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %398, i64 %644
  %646 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %1, i64 %644
  %647 = bitcast %"struct.net::ReportingReport"** %646 to <2 x i64>*
  %648 = load <2 x i64>, <2 x i64>* %647, align 8, !alias.scope !111
  %649 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %646, i64 2
  %650 = bitcast %"struct.net::ReportingReport"** %649 to <2 x i64>*
  %651 = load <2 x i64>, <2 x i64>* %650, align 8, !alias.scope !111
  %652 = bitcast %"struct.net::ReportingReport"** %645 to <2 x i64>*
  store <2 x i64> %648, <2 x i64>* %652, align 8, !alias.scope !114, !noalias !111
  %653 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %645, i64 2
  %654 = bitcast %"struct.net::ReportingReport"** %653 to <2 x i64>*
  store <2 x i64> %651, <2 x i64>* %654, align 8, !alias.scope !114, !noalias !111
  %655 = or i64 %621, 12
  %656 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %398, i64 %655
  %657 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %1, i64 %655
  %658 = bitcast %"struct.net::ReportingReport"** %657 to <2 x i64>*
  %659 = load <2 x i64>, <2 x i64>* %658, align 8, !alias.scope !111
  %660 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %657, i64 2
  %661 = bitcast %"struct.net::ReportingReport"** %660 to <2 x i64>*
  %662 = load <2 x i64>, <2 x i64>* %661, align 8, !alias.scope !111
  %663 = bitcast %"struct.net::ReportingReport"** %656 to <2 x i64>*
  store <2 x i64> %659, <2 x i64>* %663, align 8, !alias.scope !114, !noalias !111
  %664 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %656, i64 2
  %665 = bitcast %"struct.net::ReportingReport"** %664 to <2 x i64>*
  store <2 x i64> %662, <2 x i64>* %665, align 8, !alias.scope !114, !noalias !111
  %666 = add i64 %621, 16
  %667 = add i64 %622, -4
  %668 = icmp eq i64 %667, 0
  br i1 %668, label %669, label %620, !llvm.loop !116

669:                                              ; preds = %620, %608
  %670 = phi i64 [ 0, %608 ], [ %666, %620 ]
  %671 = icmp eq i64 %616, 0
  br i1 %671, label %688, label %672

672:                                              ; preds = %669, %672
  %673 = phi i64 [ %685, %672 ], [ %670, %669 ]
  %674 = phi i64 [ %686, %672 ], [ %616, %669 ]
  %675 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %398, i64 %673
  %676 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %1, i64 %673
  %677 = bitcast %"struct.net::ReportingReport"** %676 to <2 x i64>*
  %678 = load <2 x i64>, <2 x i64>* %677, align 8, !alias.scope !111
  %679 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %676, i64 2
  %680 = bitcast %"struct.net::ReportingReport"** %679 to <2 x i64>*
  %681 = load <2 x i64>, <2 x i64>* %680, align 8, !alias.scope !111
  %682 = bitcast %"struct.net::ReportingReport"** %675 to <2 x i64>*
  store <2 x i64> %678, <2 x i64>* %682, align 8, !alias.scope !114, !noalias !111
  %683 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %675, i64 2
  %684 = bitcast %"struct.net::ReportingReport"** %683 to <2 x i64>*
  store <2 x i64> %681, <2 x i64>* %684, align 8, !alias.scope !114, !noalias !111
  %685 = add i64 %673, 4
  %686 = add i64 %674, -1
  %687 = icmp eq i64 %686, 0
  br i1 %687, label %688, label %672, !llvm.loop !117

688:                                              ; preds = %672, %669
  %689 = icmp eq i64 %592, %609
  br i1 %689, label %765, label %690

690:                                              ; preds = %688, %594, %587
  %691 = phi %"struct.net::ReportingReport"** [ %398, %594 ], [ %398, %587 ], [ %610, %688 ]
  %692 = phi %"struct.net::ReportingReport"** [ %398, %594 ], [ %398, %587 ], [ %611, %688 ]
  %693 = phi %"struct.net::ReportingReport"** [ %1, %594 ], [ %1, %587 ], [ %612, %688 ]
  %694 = ptrtoint %"struct.net::ReportingReport"** %693 to i64
  %695 = getelementptr %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %585, i64 -1
  %696 = ptrtoint %"struct.net::ReportingReport"** %695 to i64
  %697 = sub i64 %696, %694
  %698 = lshr i64 %697, 3
  %699 = add nuw nsw i64 %698, 1
  %700 = and i64 %699, 7
  %701 = icmp eq i64 %700, 0
  br i1 %701, label %714, label %702

702:                                              ; preds = %690, %702
  %703 = phi %"struct.net::ReportingReport"** [ %711, %702 ], [ %691, %690 ]
  %704 = phi %"struct.net::ReportingReport"** [ %711, %702 ], [ %692, %690 ]
  %705 = phi %"struct.net::ReportingReport"** [ %710, %702 ], [ %693, %690 ]
  %706 = phi i64 [ %712, %702 ], [ %700, %690 ]
  %707 = bitcast %"struct.net::ReportingReport"** %704 to i64*
  %708 = bitcast %"struct.net::ReportingReport"** %705 to i64*
  %709 = load i64, i64* %708, align 8
  store i64 %709, i64* %707, align 8
  %710 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %705, i64 1
  %711 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %703, i64 1
  %712 = add i64 %706, -1
  %713 = icmp eq i64 %712, 0
  br i1 %713, label %714, label %702, !llvm.loop !118

714:                                              ; preds = %702, %690
  %715 = phi %"struct.net::ReportingReport"** [ undef, %690 ], [ %711, %702 ]
  %716 = phi %"struct.net::ReportingReport"** [ %691, %690 ], [ %711, %702 ]
  %717 = phi %"struct.net::ReportingReport"** [ %692, %690 ], [ %711, %702 ]
  %718 = phi %"struct.net::ReportingReport"** [ %693, %690 ], [ %710, %702 ]
  %719 = icmp ult i64 %697, 56
  br i1 %719, label %765, label %720

720:                                              ; preds = %714, %720
  %721 = phi %"struct.net::ReportingReport"** [ %763, %720 ], [ %716, %714 ]
  %722 = phi %"struct.net::ReportingReport"** [ %763, %720 ], [ %717, %714 ]
  %723 = phi %"struct.net::ReportingReport"** [ %762, %720 ], [ %718, %714 ]
  %724 = bitcast %"struct.net::ReportingReport"** %722 to i64*
  %725 = bitcast %"struct.net::ReportingReport"** %723 to i64*
  %726 = load i64, i64* %725, align 8
  store i64 %726, i64* %724, align 8
  %727 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %723, i64 1
  %728 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %721, i64 1
  %729 = bitcast %"struct.net::ReportingReport"** %728 to i64*
  %730 = bitcast %"struct.net::ReportingReport"** %727 to i64*
  %731 = load i64, i64* %730, align 8
  store i64 %731, i64* %729, align 8
  %732 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %723, i64 2
  %733 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %721, i64 2
  %734 = bitcast %"struct.net::ReportingReport"** %733 to i64*
  %735 = bitcast %"struct.net::ReportingReport"** %732 to i64*
  %736 = load i64, i64* %735, align 8
  store i64 %736, i64* %734, align 8
  %737 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %723, i64 3
  %738 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %721, i64 3
  %739 = bitcast %"struct.net::ReportingReport"** %738 to i64*
  %740 = bitcast %"struct.net::ReportingReport"** %737 to i64*
  %741 = load i64, i64* %740, align 8
  store i64 %741, i64* %739, align 8
  %742 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %723, i64 4
  %743 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %721, i64 4
  %744 = bitcast %"struct.net::ReportingReport"** %743 to i64*
  %745 = bitcast %"struct.net::ReportingReport"** %742 to i64*
  %746 = load i64, i64* %745, align 8
  store i64 %746, i64* %744, align 8
  %747 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %723, i64 5
  %748 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %721, i64 5
  %749 = bitcast %"struct.net::ReportingReport"** %748 to i64*
  %750 = bitcast %"struct.net::ReportingReport"** %747 to i64*
  %751 = load i64, i64* %750, align 8
  store i64 %751, i64* %749, align 8
  %752 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %723, i64 6
  %753 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %721, i64 6
  %754 = bitcast %"struct.net::ReportingReport"** %753 to i64*
  %755 = bitcast %"struct.net::ReportingReport"** %752 to i64*
  %756 = load i64, i64* %755, align 8
  store i64 %756, i64* %754, align 8
  %757 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %723, i64 7
  %758 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %721, i64 7
  %759 = bitcast %"struct.net::ReportingReport"** %758 to i64*
  %760 = bitcast %"struct.net::ReportingReport"** %757 to i64*
  %761 = load i64, i64* %760, align 8
  store i64 %761, i64* %759, align 8
  %762 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %723, i64 8
  %763 = getelementptr inbounds %"struct.net::ReportingReport"*, %"struct.net::ReportingReport"** %721, i64 8
  %764 = icmp eq %"struct.net::ReportingReport"** %762, %585
  br i1 %764, label %765, label %720, !llvm.loop !119

765:                                              ; preds = %714, %720, %688, %584
  %766 = phi %"struct.net::ReportingReport"** [ %398, %584 ], [ %610, %688 ], [ %715, %714 ], [ %763, %720 ]
  %767 = ptrtoint %"struct.net::ReportingReport"** %766 to i64
  %768 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %9, align 8
  store i64 %579, i64* %360, align 8
  store i64 %767, i64* %24, align 8
  store i64 %397, i64* %16, align 8
  %769 = icmp eq %"struct.net::ReportingReport"** %768, null
  br i1 %769, label %772, label %770

770:                                              ; preds = %765
  %771 = bitcast %"struct.net::ReportingReport"** %768 to i8*
  tail call void @_ZdlPv(i8* %771) #11
  br label %772

772:                                              ; preds = %770, %765, %209, %354, %358, %4
  %773 = phi %"struct.net::ReportingReport"** [ %1, %4 ], [ %1, %358 ], [ %1, %354 ], [ %1, %209 ], [ %395, %765 ], [ %395, %770 ]
  ret %"struct.net::ReportingReport"** %773
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN3net25ReportingEndpointGroupKeyEiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSG_IJEEEEEENS_4pairINS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.170"*, %"struct.net::ReportingEndpointGroupKey"* dereferenceable(288), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.246"* dereferenceable(8), %"class.std::__1::tuple.249"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.std::__1::__tree.170", %"class.std::__1::__tree.170"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node.239"**
  %8 = load %"class.std::__1::__tree_node.239"*, %"class.std::__1::__tree_node.239"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node.239"* %8, null
  br i1 %9, label %37, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__1::__tree.170", %"class.std::__1::__tree.170"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %12

12:                                               ; preds = %33, %10
  %13 = phi %"class.std::__1::__tree_node.239"* [ %36, %33 ], [ %8, %10 ]
  %14 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %11, %10 ]
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.239", %"class.std::__1::__tree_node.239"* %13, i64 0, i32 2, i32 0, i32 0
  %16 = tail call zeroext i1 @_ZN3netltERKNS_25ReportingEndpointGroupKeyES2_(%"struct.net::ReportingEndpointGroupKey"* dereferenceable(288) %1, %"struct.net::ReportingEndpointGroupKey"* dereferenceable(288) %15) #12
  br i1 %16, label %17, label %23

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::__tree_node.239", %"class.std::__1::__tree_node.239"* %13, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node.239", %"class.std::__1::__tree_node.239"* %13, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %12
  %24 = tail call zeroext i1 @_ZN3netltERKNS_25ReportingEndpointGroupKeyES2_(%"struct.net::ReportingEndpointGroupKey"* dereferenceable(288) %15, %"struct.net::ReportingEndpointGroupKey"* dereferenceable(288) %1) #12
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node.239", %"class.std::__1::__tree_node.239"* %13, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.239", %"class.std::__1::__tree_node.239"* %13, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node.239", %"class.std::__1::__tree_node.239"* %13, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node.239"*
  br label %12

37:                                               ; preds = %5
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %39

39:                                               ; preds = %21, %29, %31, %37
  %40 = phi %"class.std::__1::__tree_end_node"* [ %6, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %14, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node.239"**
  %43 = load %"class.std::__1::__tree_node.239"*, %"class.std::__1::__tree_node.239"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node.239"* %43, null
  br i1 %44, label %45, label %74

45:                                               ; preds = %39
  %46 = tail call i8* @_Znwm(i64 328) #11, !noalias !120
  %47 = getelementptr inbounds i8, i8* %46, i64 32
  %48 = getelementptr inbounds %"class.std::__1::tuple.246", %"class.std::__1::tuple.246"* %3, i64 0, i32 0, i32 0, i32 0
  %49 = load %"struct.net::ReportingEndpointGroupKey"*, %"struct.net::ReportingEndpointGroupKey"** %48, align 8, !noalias !120
  %50 = bitcast i8* %47 to %"struct.net::ReportingEndpointGroupKey"*
  tail call void @_ZN3net25ReportingEndpointGroupKeyC1ERKS0_(%"struct.net::ReportingEndpointGroupKey"* %50, %"struct.net::ReportingEndpointGroupKey"* dereferenceable(288) %49) #12, !noalias !120
  %51 = getelementptr inbounds i8, i8* %46, i64 320
  %52 = bitcast i8* %51 to i32*
  store i32 0, i32* %52, align 8, !noalias !120
  %53 = bitcast i8* %46 to %"class.std::__1::__tree_node.239"*
  %54 = bitcast i8* %46 to %"class.std::__1::__tree_node_base"*
  %55 = getelementptr inbounds i8, i8* %46, i64 16
  %56 = bitcast i8* %55 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %56, align 8
  %57 = bitcast %"class.std::__1::__tree_node_base"** %41 to i8**
  store i8* %46, i8** %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree.170", %"class.std::__1::__tree.170"* %0, i64 0, i32 0
  %59 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %58, align 8
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %59, i64 0, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %45
  %64 = ptrtoint %"class.std::__1::__tree_node_base"* %61 to i64
  %65 = bitcast %"class.std::__1::__tree.170"* %0 to i64*
  store i64 %64, i64* %65, align 8
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  br label %67

67:                                               ; preds = %63, %45
  %68 = phi %"class.std::__1::__tree_node_base"* [ %54, %45 ], [ %66, %63 ]
  %69 = getelementptr inbounds %"class.std::__1::__tree.170", %"class.std::__1::__tree.170"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %70, %"class.std::__1::__tree_node_base"* %68) #12
  %71 = getelementptr inbounds %"class.std::__1::__tree.170", %"class.std::__1::__tree.170"* %0, i64 0, i32 2, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 1
  store i64 %73, i64* %71, align 8
  br label %74

74:                                               ; preds = %67, %39
  %75 = phi i8 [ 1, %67 ], [ 0, %39 ]
  %76 = phi %"class.std::__1::__tree_node.239"* [ %53, %67 ], [ %43, %39 ]
  %77 = getelementptr inbounds %"class.std::__1::__tree_node.239", %"class.std::__1::__tree_node.239"* %76, i64 0, i32 0, i32 0
  %78 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %77, 0
  %79 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %78, i8 %75, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %79
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !64
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !64
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !64
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !64
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !64
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !64
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !64
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !64
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !64
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !64
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !64
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !64
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !64
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

declare void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"*) unnamed_addr #6

declare %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"*, i8*, i64, i32) local_unnamed_addr #6

declare i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"*) local_unnamed_addr #6

declare %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"*, i8*, i64, i8*, i64) local_unnamed_addr #6

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #6

declare %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"*, i8*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #6

declare void @_ZNK4base5Value5CloneEv(%"class.base::Value"* sret, %"class.base::Value"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #7

declare void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"*, %"class.base::Value"*) local_unnamed_addr #6

declare zeroext i1 @_ZN4base10JSONWriter5WriteERKNS_5ValueEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEm(%"class.base::Value"* dereferenceable(32), %"class.std::__1::basic_string"*, i64) local_unnamed_addr #6

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvNSt3__110unique_ptrINS4_8DeliveryENS6_14default_deleteIS8_EEEENS3_17ReportingUploader7OutcomeEEJNS_7WeakPtrIS5_EESB_EEEFvSD_EE7RunOnceEPNS0_13BindStateBaseESD_(%"class.base::internal::BindStateBase"*, i32) #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.base::internal::WeakReference"*
  %7 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #12
  br i1 %7, label %8, label %46

8:                                                ; preds = %2
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"**
  %11 = load %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*, %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"** %10, align 8
  %12 = icmp eq %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %11, null
  br i1 %12, label %46, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %17 = bitcast void ()** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #12
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %20, %13
  %24 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #12
  %25 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = select i1 %24, i8* %26, i8* null
  %28 = getelementptr inbounds i8, i8* %27, i64 %18
  %29 = bitcast i8* %28 to %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*
  %30 = and i64 %15, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %23
  %33 = bitcast i8* %28 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = add i64 %15, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = bitcast i8* %36 to void (%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*, %"class.net::(anonymous namespace)::Delivery"*, i32)**
  %38 = load void (%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*, %"class.net::(anonymous namespace)::Delivery"*, i32)*, void (%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*, %"class.net::(anonymous namespace)::Delivery"*, i32)** %37, align 8
  br label %41

39:                                               ; preds = %23
  %40 = inttoptr i64 %15 to void (%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*, %"class.net::(anonymous namespace)::Delivery"*, i32)*
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi void (%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*, %"class.net::(anonymous namespace)::Delivery"*, i32)* [ %38, %32 ], [ %40, %39 ]
  %43 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 2
  %44 = bitcast void (%"class.base::internal::BindStateBase"*)** %43 to %"class.net::(anonymous namespace)::Delivery"**
  %45 = load %"class.net::(anonymous namespace)::Delivery"*, %"class.net::(anonymous namespace)::Delivery"** %44, align 8
  store %"class.net::(anonymous namespace)::Delivery"* null, %"class.net::(anonymous namespace)::Delivery"** %44, align 8
  call void %42(%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %29, %"class.net::(anonymous namespace)::Delivery"* %45, i32 %1) #12
  br label %46

46:                                               ; preds = %2, %8, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvNSt3__110unique_ptrINS3_8DeliveryENS5_14default_deleteIS7_EEEENS2_17ReportingUploader7OutcomeEEJNS_7WeakPtrIS4_EESA_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.std::__1::unique_ptr.166"*
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12_GLOBAL__N_18DeliveryENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr.166"* %5) #12
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %7) #12
  %8 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #11
  br label %9

9:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvNSt3__110unique_ptrINS4_8DeliveryENS6_14default_deleteIS8_EEEENS3_17ReportingUploader7OutcomeEEJNS_7WeakPtrIS5_EESB_EEEEEbPKNS0_13BindStateBaseENSJ_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #12
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"**
  %9 = load %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*, %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"** %8, align 8
  %10 = icmp ne %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #12
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__16__treeIN3net25ReportingEndpointGroupKeyENS_4lessIS2_EENS_9allocatorIS2_EEE14__erase_uniqueIS2_EEmRKT_(%"class.std::__1::__tree"*, %"struct.net::ReportingEndpointGroupKey"* dereferenceable(288)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %70, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %17, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %18, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1
  %11 = tail call zeroext i1 @_ZN3netltERKNS_25ReportingEndpointGroupKeyES2_(%"struct.net::ReportingEndpointGroupKey"* dereferenceable(288) %10, %"struct.net::ReportingEndpointGroupKey"* dereferenceable(288) %1) #12
  %12 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::__tree_node_base"** %12 to %"class.std::__1::__tree_node"**
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %15 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %16 = select i1 %11, %"class.std::__1::__tree_node"** %13, %"class.std::__1::__tree_node"** %15
  %17 = select i1 %11, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %14
  %18 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %16, align 8
  %19 = icmp eq %"class.std::__1::__tree_node"* %18, null
  br i1 %19, label %20, label %7

20:                                               ; preds = %7
  %21 = icmp eq %"class.std::__1::__tree_end_node"* %17, %3
  br i1 %21, label %70, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 4
  %24 = bitcast %"class.std::__1::__tree_end_node"* %23 to %"struct.net::ReportingEndpointGroupKey"*
  %25 = tail call zeroext i1 @_ZN3netltERKNS_25ReportingEndpointGroupKeyES2_(%"struct.net::ReportingEndpointGroupKey"* dereferenceable(288) %1, %"struct.net::ReportingEndpointGroupKey"* dereferenceable(288) %24) #12
  br i1 %25, label %70, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 1, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %29, label %30, label %38

30:                                               ; preds = %26
  %31 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 2
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_end_node"**
  %34 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 0, i32 0
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, %31
  br i1 %37, label %54, label %45

38:                                               ; preds = %26, %38
  %39 = phi %"class.std::__1::__tree_node_base"* [ %41, %38 ], [ %28, %26 ]
  %40 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %42, label %43, label %38

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 0
  br label %54

45:                                               ; preds = %30, %45
  %46 = phi %"class.std::__1::__tree_end_node"** [ %49, %45 ], [ %33, %30 ]
  %47 = bitcast %"class.std::__1::__tree_end_node"** %46 to %"class.std::__1::__tree_node_base"**
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %48, i64 0, i32 2
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  %53 = icmp eq %"class.std::__1::__tree_node_base"* %52, %48
  br i1 %53, label %54, label %45

54:                                               ; preds = %45, %43, %30
  %55 = phi %"class.std::__1::__tree_end_node"* [ %44, %43 ], [ %34, %30 ], [ %50, %45 ]
  %56 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %57 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %57, %17
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = ptrtoint %"class.std::__1::__tree_end_node"* %55 to i64
  %61 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %60, i64* %61, align 8
  br label %62

62:                                               ; preds = %54, %59
  %63 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, -1
  store i64 %65, i64* %63, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"* %68) #12
  tail call void @_ZN3net25ReportingEndpointGroupKeyD1Ev(%"struct.net::ReportingEndpointGroupKey"* %24) #12
  %69 = bitcast %"class.std::__1::__tree_end_node"* %17 to i8*
  tail call void @_ZdlPv(i8* %69) #11
  br label %70

70:                                               ; preds = %22, %20, %2, %62
  %71 = phi i64 [ 1, %62 ], [ 0, %2 ], [ 0, %20 ], [ 0, %22 ]
  ret i64 %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPKN3net15ReportingReportENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.191"*, %"class.std::__1::__tree_node.264"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.264"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.264"* %1 to %"class.std::__1::__tree_node.264"**
  %6 = load %"class.std::__1::__tree_node.264"*, %"class.std::__1::__tree_node.264"** %5, align 8
  tail call void @_ZNSt3__16__treeIPKN3net15ReportingReportENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.191"* %0, %"class.std::__1::__tree_node.264"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.264", %"class.std::__1::__tree_node.264"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.264"**
  %9 = load %"class.std::__1::__tree_node.264"*, %"class.std::__1::__tree_node.264"** %8, align 8
  tail call void @_ZNSt3__16__treeIPKN3net15ReportingReportENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.191"* %0, %"class.std::__1::__tree_node.264"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node.264"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16__treeINS_12__value_typeIN3net12_GLOBAL__N_18Delivery6TargetENS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.153"* readnone, %"class.std::__1::__tree_node.213"*) unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.213"* %1, null
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.213"* %1 to %"class.std::__1::__tree_node.213"**
  %6 = load %"class.std::__1::__tree_node.213"*, %"class.std::__1::__tree_node.213"** %5, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeIN3net12_GLOBAL__N_18Delivery6TargetENS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.153"* %0, %"class.std::__1::__tree_node.213"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.213", %"class.std::__1::__tree_node.213"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.213"**
  %9 = load %"class.std::__1::__tree_node.213"*, %"class.std::__1::__tree_node.213"** %8, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeIN3net12_GLOBAL__N_18Delivery6TargetENS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.153"* %0, %"class.std::__1::__tree_node.213"* %9) #12
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.213", %"class.std::__1::__tree_node.213"* %1, i64 0, i32 1, i32 0, i32 1
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12_GLOBAL__N_18DeliveryENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr.166"* %10) #12
  %11 = getelementptr inbounds %"class.std::__1::__tree_node.213", %"class.std::__1::__tree_node.213"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  tail call void @_ZN4GURLD1Ev(%class.GURL* %11) #12
  %12 = getelementptr inbounds %"class.std::__1::__tree_node.213", %"class.std::__1::__tree_node.213"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %12) #12
  %13 = getelementptr inbounds %"class.std::__1::__tree_node.213", %"class.std::__1::__tree_node.213"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  tail call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %13) #12
  %14 = bitcast %"class.std::__1::__tree_node.213"* %1 to i8*
  tail call void @_ZdlPv(i8* %14) #11
  ret void

15:                                               ; preds = %2
  ret void
}

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #7

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN3url6OriginENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.131"*, %"class.std::__1::__tree_node.145"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.145"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.145"* %1 to %"class.std::__1::__tree_node.145"**
  %6 = load %"class.std::__1::__tree_node.145"*, %"class.std::__1::__tree_node.145"** %5, align 8
  tail call void @_ZNSt3__16__treeIN3url6OriginENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.131"* %0, %"class.std::__1::__tree_node.145"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.145", %"class.std::__1::__tree_node.145"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.145"**
  %9 = load %"class.std::__1::__tree_node.145"*, %"class.std::__1::__tree_node.145"** %8, align 8
  tail call void @_ZNSt3__16__treeIN3url6OriginENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.131"* %0, %"class.std::__1::__tree_node.145"* %9) #12
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.145", %"class.std::__1::__tree_node.145"* %1, i64 0, i32 1
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %10) #12
  %11 = bitcast %"class.std::__1::__tree_node.145"* %1 to i8*
  tail call void @_ZdlPv(i8* %11) #11
  ret void

12:                                               ; preds = %2
  ret void
}

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_126ReportingDeliveryAgentImpl12OnTimerFiredEv(%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*) #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.std::__1::vector.82", align 8
  %5 = bitcast %"class.std::__1::vector.82"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #12
  %8 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 2
  %9 = load %"class.net::ReportingContext"*, %"class.net::ReportingContext"** %8, align 8
  %10 = getelementptr inbounds %"class.net::ReportingContext", %"class.net::ReportingContext"* %9, i64 0, i32 6, i32 0, i32 0, i32 0
  %11 = load %"class.net::ReportingCache"*, %"class.net::ReportingCache"** %10, align 8
  %12 = bitcast %"class.net::ReportingCache"* %11 to void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)***
  %13 = load void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)**, void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)*, void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)** %13, i64 3
  %15 = load void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)*, void (%"class.net::ReportingCache"*, %"class.std::__1::vector.82"*)** %14, align 8
  call void %15(%"class.net::ReportingCache"* %11, %"class.std::__1::vector.82"* nonnull %4) #12
  %16 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %6, align 8
  %17 = load %"struct.net::ReportingReport"**, %"struct.net::ReportingReport"*** %7, align 8
  %18 = icmp eq %"struct.net::ReportingReport"** %16, %17
  %19 = icmp eq %"struct.net::ReportingReport"** %16, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %1
  %21 = ptrtoint %"struct.net::ReportingReport"** %16 to i64
  %22 = bitcast %"struct.net::ReportingReport"*** %7 to i64*
  store i64 %21, i64* %22, align 8
  %23 = bitcast %"struct.net::ReportingReport"** %16 to i8*
  call void @_ZdlPv(i8* %23) #11
  br label %24

24:                                               ; preds = %1, %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  br i1 %18, label %46, label %25

25:                                               ; preds = %24
  call fastcc void @_ZN3net12_GLOBAL__N_126ReportingDeliveryAgentImpl11SendReportsEv(%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0)
  %26 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl", %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.base::OneShotTimer"*, %"class.base::OneShotTimer"** %27, align 8
  %29 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.11, i64 0, i64 0), i32 204) #12
  %30 = load %"class.net::ReportingContext"*, %"class.net::ReportingContext"** %8, align 8
  %31 = getelementptr inbounds %"class.net::ReportingContext", %"class.net::ReportingContext"* %30, i64 0, i32 0, i32 3, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = ptrtoint %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %0 to i64
  %34 = call i8* @_Znwm(i64 56) #11, !noalias !123
  %35 = bitcast i8* %34 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %35, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvvEJNS0_17UnretainedWrapperIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvvEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !123
  %36 = getelementptr inbounds i8, i8* %34, i64 32
  %37 = bitcast i8* %36 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*)* @_ZN3net12_GLOBAL__N_126ReportingDeliveryAgentImpl12OnTimerFiredEv to i64), i64 0>, <2 x i64>* %37, align 8, !noalias !123
  %38 = getelementptr inbounds i8, i8* %34, i64 48
  %39 = bitcast i8* %38 to i64*
  store i64 %33, i64* %39, align 8, !noalias !123
  %40 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %34, i8** %40, align 8, !alias.scope !123
  %41 = bitcast %"class.base::OneShotTimer"* %28 to void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)***
  %42 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)**, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %42, i64 7
  %44 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %43, align 8
  call void %44(%"class.base::OneShotTimer"* %28, %"class.base::Location"* nonnull dereferenceable(32) %2, i64 %32, %"class.base::OnceCallback"* nonnull %3) #12
  %45 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %45) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  br label %46

46:                                               ; preds = %24, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvvEJNS0_17UnretainedWrapperIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*)**
  %21 = load void (%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*)*, void (%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.net::(anonymous namespace)::ReportingDeliveryAgentImpl"* %12) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvvEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvvEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvvEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvvEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvvEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK4base14WeakPtrFactoryIN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEE10GetWeakPtrEv: argument 0"}
!9 = distinct !{!9, !"_ZNK4base14WeakPtrFactoryIN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEE10GetWeakPtrEv"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvNSt3__16vectorIPKNS3_15ReportingReportENS6_9allocatorISA_EEEENS6_3setIN3url6OriginENS6_4lessISG_EENSB_ISG_EEEEEJNS_7WeakPtrIS5_EESD_EEEDcOT0_DpOT1_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvNSt3__16vectorIPKNS3_15ReportingReportENS6_9allocatorISA_EEEENS6_3setIN3url6OriginENS6_4lessISG_EENSB_ISG_EEEEEJNS_7WeakPtrIS5_EESD_EEEDcOT0_DpOT1_"}
!13 = distinct !{!13, !14, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvNSt3__16vectorIPKNS1_15ReportingReportENS4_9allocatorIS8_EEEENS4_3setIN3url6OriginENS4_4lessISE_EENS9_ISE_EEEEEJNS_7WeakPtrIS3_EESB_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSQ_DpOSR_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvNSt3__16vectorIPKNS1_15ReportingReportENS4_9allocatorIS8_EEEENS4_3setIN3url6OriginENS4_4lessISE_EENS9_ISE_EEEEEJNS_7WeakPtrIS3_EESB_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSQ_DpOSR_"}
!15 = !{!16, !18}
!16 = distinct !{!16, !17, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvvEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!17 = distinct !{!17, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvvEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!18 = distinct !{!18, !19, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvvEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!19 = distinct !{!19, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvvEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNSt3__13tieIJKN3net19NetworkIsolationKeyEKN3url6OriginEK4GURLEEENS_5tupleIJDpRT_EEESC_: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__13tieIJKN3net19NetworkIsolationKeyEKN3url6OriginEK4GURLEEENS_5tupleIJDpRT_EEESC_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNSt3__13tieIJKN3net19NetworkIsolationKeyEKN3url6OriginEK4GURLEEENS_5tupleIJDpRT_EEESC_: argument 0"}
!25 = distinct !{!25, !"_ZNSt3__13tieIJKN3net19NetworkIsolationKeyEKN3url6OriginEK4GURLEEENS_5tupleIJDpRT_EEESC_"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNSt3__13tieIJKN3net19NetworkIsolationKeyEKN3url6OriginEK4GURLEEENS_5tupleIJDpRT_EEESC_: argument 0"}
!28 = distinct !{!28, !"_ZNSt3__13tieIJKN3net19NetworkIsolationKeyEKN3url6OriginEK4GURLEEENS_5tupleIJDpRT_EEESC_"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNSt3__13tieIJKN3net19NetworkIsolationKeyEKN3url6OriginEK4GURLEEENS_5tupleIJDpRT_EEESC_: argument 0"}
!31 = distinct !{!31, !"_ZNSt3__13tieIJKN3net19NetworkIsolationKeyEKN3url6OriginEK4GURLEEENS_5tupleIJDpRT_EEESC_"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNSt3__19make_pairIN3net12_GLOBAL__N_18Delivery6TargetENS_10unique_ptrIS3_NS_14default_deleteIS3_EEEEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSA_IT0_E4typeEEEOSB_OSE_: argument 0"}
!34 = distinct !{!34, !"_ZNSt3__19make_pairIN3net12_GLOBAL__N_18Delivery6TargetENS_10unique_ptrIS3_NS_14default_deleteIS3_EEEEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSA_IT0_E4typeEEEOSB_OSE_"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNSt3__13tieIJKN3net19NetworkIsolationKeyEKN3url6OriginEK4GURLEEENS_5tupleIJDpRT_EEESC_: argument 0"}
!37 = distinct !{!37, !"_ZNSt3__13tieIJKN3net19NetworkIsolationKeyEKN3url6OriginEK4GURLEEENS_5tupleIJDpRT_EEESC_"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNSt3__13tieIJKN3net19NetworkIsolationKeyEKN3url6OriginEK4GURLEEENS_5tupleIJDpRT_EEESC_: argument 0"}
!40 = distinct !{!40, !"_ZNSt3__13tieIJKN3net19NetworkIsolationKeyEKN3url6OriginEK4GURLEEENS_5tupleIJDpRT_EEESC_"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZNSt3__13tieIJKN3net19NetworkIsolationKeyEKN3url6OriginEK4GURLEEENS_5tupleIJDpRT_EEESC_: argument 0"}
!43 = distinct !{!43, !"_ZNSt3__13tieIJKN3net19NetworkIsolationKeyEKN3url6OriginEK4GURLEEENS_5tupleIJDpRT_EEESC_"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNSt3__13tieIJKN3net19NetworkIsolationKeyEKN3url6OriginEK4GURLEEENS_5tupleIJDpRT_EEESC_: argument 0"}
!46 = distinct !{!46, !"_ZNSt3__13tieIJKN3net19NetworkIsolationKeyEKN3url6OriginEK4GURLEEENS_5tupleIJDpRT_EEESC_"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNSt3__16__treeINS_12__value_typeIN3net12_GLOBAL__N_18Delivery6TargetENS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS_9allocatorISA_EEE16__construct_nodeIJNS_4pairIS5_S9_EEEEENS6_INS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSF_ISN_EEEEEEDpOT_: argument 0"}
!49 = distinct !{!49, !"_ZNSt3__16__treeINS_12__value_typeIN3net12_GLOBAL__N_18Delivery6TargetENS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS_9allocatorISA_EEE16__construct_nodeIJNS_4pairIS5_S9_EEEEENS6_INS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSF_ISN_EEEEEEDpOT_"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN3net12_GLOBAL__N_116SerializeReportsERKNSt3__16vectorIPKNS_15ReportingReportENS1_9allocatorIS5_EEEEN4base9TimeTicksE: argument 0"}
!52 = distinct !{!52, !"_ZN3net12_GLOBAL__N_116SerializeReportsERKNSt3__16vectorIPKNS_15ReportingReportENS1_9allocatorIS5_EEEEN4base9TimeTicksE"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZNK4base14WeakPtrFactoryIN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEE10GetWeakPtrEv: argument 0"}
!55 = distinct !{!55, !"_ZNK4base14WeakPtrFactoryIN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEE10GetWeakPtrEv"}
!56 = !{!57, !59}
!57 = distinct !{!57, !58, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvNSt3__110unique_ptrINS4_8DeliveryENS6_14default_deleteIS8_EEEENS3_17ReportingUploader7OutcomeEEJNS_7WeakPtrIS5_EESB_EEEDcOT0_DpOT1_: argument 0"}
!58 = distinct !{!58, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvNSt3__110unique_ptrINS4_8DeliveryENS6_14default_deleteIS8_EEEENS3_17ReportingUploader7OutcomeEEJNS_7WeakPtrIS5_EESB_EEEDcOT0_DpOT1_"}
!59 = distinct !{!59, !60, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvNSt3__110unique_ptrINS2_8DeliveryENS4_14default_deleteIS6_EEEENS1_17ReportingUploader7OutcomeEEJNS_7WeakPtrIS3_EES9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!60 = distinct !{!60, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvNSt3__110unique_ptrINS2_8DeliveryENS4_14default_deleteIS6_EEEENS1_17ReportingUploader7OutcomeEEJNS_7WeakPtrIS3_EES9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZNSt3__16__treeIN3url6OriginENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISC_EEEEEEDpOT_: argument 0"}
!63 = distinct !{!63, !"_ZNSt3__16__treeIN3url6OriginENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISC_EEEEEEDpOT_"}
!64 = !{i8 0, i8 2}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZNSt3__16__treeIPKN3net15ReportingReportENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_: argument 0"}
!67 = distinct !{!67, !"_ZNSt3__16__treeIPKN3net15ReportingReportENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZNSt3__16__treeIN3net25ReportingEndpointGroupKeyENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!70 = distinct !{!70, !"_ZNSt3__16__treeIN3net25ReportingEndpointGroupKeyENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!73 = distinct !{!73, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!74 = !{!75}
!75 = distinct !{!75, !76, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!76 = distinct !{!76, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!79 = distinct !{!79, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!82 = distinct !{!82, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!83 = !{!84}
!84 = distinct !{!84, !85}
!85 = distinct !{!85, !"LVerDomain"}
!86 = !{!87}
!87 = distinct !{!87, !85}
!88 = distinct !{!88, !89}
!89 = !{!"llvm.loop.isvectorized", i32 1}
!90 = distinct !{!90, !91}
!91 = !{!"llvm.loop.unroll.disable"}
!92 = distinct !{!92, !91}
!93 = distinct !{!93, !89}
!94 = !{!95}
!95 = distinct !{!95, !96}
!96 = distinct !{!96, !"LVerDomain"}
!97 = !{!98}
!98 = distinct !{!98, !96}
!99 = distinct !{!99, !89}
!100 = distinct !{!100, !91}
!101 = distinct !{!101, !89}
!102 = !{!103}
!103 = distinct !{!103, !104}
!104 = distinct !{!104, !"LVerDomain"}
!105 = !{!106}
!106 = distinct !{!106, !104}
!107 = distinct !{!107, !89}
!108 = distinct !{!108, !91}
!109 = distinct !{!109, !91}
!110 = distinct !{!110, !89}
!111 = !{!112}
!112 = distinct !{!112, !113}
!113 = distinct !{!113, !"LVerDomain"}
!114 = !{!115}
!115 = distinct !{!115, !113}
!116 = distinct !{!116, !89}
!117 = distinct !{!117, !91}
!118 = distinct !{!118, !91}
!119 = distinct !{!119, !89}
!120 = !{!121}
!121 = distinct !{!121, !122, !"_ZNSt3__16__treeINS_12__value_typeIN3net25ReportingEndpointGroupKeyEiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSG_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS9_ISO_EEEEEEDpOT_: argument 0"}
!122 = distinct !{!122, !"_ZNSt3__16__treeINS_12__value_typeIN3net25ReportingEndpointGroupKeyEiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSG_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS9_ISO_EEEEEEDpOT_"}
!123 = !{!124, !126}
!124 = distinct !{!124, !125, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvvEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!125 = distinct !{!125, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvvEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!126 = distinct !{!126, !127, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvvEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!127 = distinct !{!127, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_126ReportingDeliveryAgentImplEFvvEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
