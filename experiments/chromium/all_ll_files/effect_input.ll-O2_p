; ModuleID = '../../third_party/blink/renderer/core/animation/effect_input.cc'
source_filename = "../../third_party/blink/renderer/core/animation/effect_input.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::LinearTimingFunction" = type { %"class.blink::TimingFunction" }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.23" }
%"struct.std::__1::atomic.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__cxx_atomic_impl.26" }
%"struct.std::__1::__cxx_atomic_impl.26" = type { %"struct.std::__1::__cxx_atomic_base_impl.27" }
%"struct.std::__1::__cxx_atomic_base_impl.27" = type { i32 }
%"struct.absl::nullopt_t" = type { i8 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.742", i32, [4 x i8], %"class.std::__1::unique_ptr.880", %"class.std::__1::unique_ptr.880", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.891", %"class.std::__1::unique_ptr.897", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.909", %"class.std::__1::unique_ptr.915", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.245", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.742" = type { %"class.std::__1::__compressed_pair.743" }
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.744" }
%"struct.std::__1::__compressed_pair_elem.744" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.745", %"class.std::__1::unique_ptr.751", %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.763", %"class.std::__1::unique_ptr.769", %"class.std::__1::unique_ptr.775", %"class.std::__1::unique_ptr.786", %"class.std::__1::unique_ptr.793", %"class.std::__1::unique_ptr.793", %"class.std::__1::unique_ptr.800", %"class.std::__1::unique_ptr.807", %"class.std::__1::unique_ptr.814", %"class.std::__1::unique_ptr.814", %"class.std::__1::unique_ptr.821", %"class.std::__1::unique_ptr.828", %"class.std::__1::unique_ptr.835", %"class.std::__1::unique_ptr.860", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.751" = type { %"class.std::__1::__compressed_pair.752" }
%"class.std::__1::__compressed_pair.752" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"struct.std::__1::__compressed_pair_elem.753" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.769" = type { %"class.std::__1::__compressed_pair.770" }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.771" }
%"struct.std::__1::__compressed_pair_elem.771" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.775" = type { %"class.std::__1::__compressed_pair.776" }
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.777" }
%"struct.std::__1::__compressed_pair_elem.777" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.778" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.778" = type { %"struct.std::__1::__atomic_base.779" }
%"struct.std::__1::__atomic_base.779" = type { %"struct.std::__1::__atomic_base.780" }
%"struct.std::__1::__atomic_base.780" = type { %"struct.std::__1::__cxx_atomic_impl.781" }
%"struct.std::__1::__cxx_atomic_impl.781" = type { %"struct.std::__1::__cxx_atomic_base_impl.782" }
%"struct.std::__1::__cxx_atomic_base_impl.782" = type { i64 }
%"class.std::__1::unique_ptr.786" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"class.blink::Worklist.789"* }
%"class.blink::Worklist.789" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.778" }
%"class.std::__1::unique_ptr.793" = type { %"class.std::__1::__compressed_pair.794" }
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.795" }
%"struct.std::__1::__compressed_pair_elem.795" = type { %"class.blink::Worklist.796"* }
%"class.blink::Worklist.796" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.778" }
%"class.std::__1::unique_ptr.800" = type { %"class.std::__1::__compressed_pair.801" }
%"class.std::__1::__compressed_pair.801" = type { %"struct.std::__1::__compressed_pair_elem.802" }
%"struct.std::__1::__compressed_pair_elem.802" = type { %"class.blink::Worklist.803"* }
%"class.blink::Worklist.803" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.778" }
%"class.std::__1::unique_ptr.807" = type { %"class.std::__1::__compressed_pair.808" }
%"class.std::__1::__compressed_pair.808" = type { %"struct.std::__1::__compressed_pair_elem.809" }
%"struct.std::__1::__compressed_pair_elem.809" = type { %"class.blink::Worklist.810"* }
%"class.blink::Worklist.810" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.778" }
%"class.std::__1::unique_ptr.814" = type { %"class.std::__1::__compressed_pair.815" }
%"class.std::__1::__compressed_pair.815" = type { %"struct.std::__1::__compressed_pair_elem.816" }
%"struct.std::__1::__compressed_pair_elem.816" = type { %"class.blink::Worklist.817"* }
%"class.blink::Worklist.817" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.778" }
%"class.std::__1::unique_ptr.821" = type { %"class.std::__1::__compressed_pair.822" }
%"class.std::__1::__compressed_pair.822" = type { %"struct.std::__1::__compressed_pair_elem.823" }
%"struct.std::__1::__compressed_pair_elem.823" = type { %"class.blink::Worklist.824"* }
%"class.blink::Worklist.824" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.778" }
%"class.std::__1::unique_ptr.828" = type { %"class.std::__1::__compressed_pair.829" }
%"class.std::__1::__compressed_pair.829" = type { %"struct.std::__1::__compressed_pair_elem.830" }
%"struct.std::__1::__compressed_pair_elem.830" = type { %"class.blink::Worklist.831"* }
%"class.blink::Worklist.831" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.778" }
%"class.std::__1::unique_ptr.835" = type { %"class.std::__1::__compressed_pair.836" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.837" }
%"struct.std::__1::__compressed_pair_elem.837" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.838", %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.851", %"class.std::__1::__compressed_pair.853", [4 x i8] }>
%"class.std::__1::unique_ptr.838" = type { %"class.std::__1::__compressed_pair.839" }
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840", %"struct.std::__1::__compressed_pair_elem.841" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.841" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.842" }
%"class.std::__1::__compressed_pair.842" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { i64 }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.847" }
%"struct.std::__1::__compressed_pair_elem.847" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.851" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854" }
%"struct.std::__1::__compressed_pair_elem.854" = type { float }
%"class.std::__1::unique_ptr.860" = type { %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.863", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.863" = type { %"class.std::__1::__compressed_pair.864" }
%"class.std::__1::__compressed_pair.864" = type { %"struct.std::__1::__compressed_pair_elem.865" }
%"struct.std::__1::__compressed_pair_elem.865" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.872" }
%"class.WTF::Vector.872" = type { %"class.WTF::VectorBuffer.873" }
%"class.WTF::VectorBuffer.873" = type { %"class.WTF::VectorBufferBase.874" }
%"class.WTF::VectorBufferBase.874" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.880" = type { %"class.std::__1::__compressed_pair.881" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.888" }
%"class.WTF::VectorBuffer.888" = type { %"class.WTF::VectorBufferBase.889" }
%"class.WTF::VectorBufferBase.889" = type { %"struct.std::__1::pair.890"*, i32, i32 }
%"struct.std::__1::pair.890" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.891" = type { %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.903" }
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.789"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.796"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.803"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.810"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.817"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1761", i64 }
%"class.std::__1::vector.1761" = type { %"class.std::__1::__vector_base.1762" }
%"class.std::__1::__vector_base.1762" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1763" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1763" = type { %"struct.std::__1::__compressed_pair_elem.1764" }
%"struct.std::__1::__compressed_pair_elem.1764" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.915" = type { %"class.std::__1::__compressed_pair.916" }
%"class.std::__1::__compressed_pair.916" = type { %"struct.std::__1::__compressed_pair_elem.917" }
%"struct.std::__1::__compressed_pair_elem.917" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.921 }
%class.scoped_refptr.921 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.245" = type { %"struct.std::__1::__atomic_base.246" }
%"struct.std::__1::__atomic_base.246" = type { %"struct.std::__1::__cxx_atomic_impl.247" }
%"struct.std::__1::__cxx_atomic_impl.247" = type { %"struct.std::__1::__cxx_atomic_base_impl.248" }
%"struct.std::__1::__cxx_atomic_base_impl.248" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.23" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::KeyframeEffectModelBase" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector", %"class.blink::Member.2", %"class.blink::Member.29", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr.22, i8, i8, i8, [5 x i8] }>
%"class.blink::EffectModel" = type { i32 (...)** }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase.2534" }
%"class.blink::MemberBase.2534" = type { %"class.blink::Keyframe"* }
%"class.blink::Keyframe" = type { i32 (...)**, %"class.absl::optional.2481", %"class.absl::optional.2486", %class.scoped_refptr.22 }
%"class.absl::optional.2481" = type { %"class.absl::optional_internal::optional_data.2482" }
%"class.absl::optional_internal::optional_data.2482" = type { %"class.absl::optional_internal::optional_data_base.2483" }
%"class.absl::optional_internal::optional_data_base.2483" = type { %"class.absl::optional_internal::optional_data_dtor_base.2484" }
%"class.absl::optional_internal::optional_data_dtor_base.2484" = type { i8, %union.anon.2485 }
%union.anon.2485 = type { double }
%"class.absl::optional.2486" = type { %"class.absl::optional_internal::optional_data.2487" }
%"class.absl::optional_internal::optional_data.2487" = type { %"class.absl::optional_internal::optional_data_base.2488" }
%"class.absl::optional_internal::optional_data_base.2488" = type { %"class.absl::optional_internal::optional_data_dtor_base.2489" }
%"class.absl::optional_internal::optional_data_dtor_base.2489" = type { i8, %union.anon.2490 }
%union.anon.2490 = type { i32 }
%"class.blink::Member.2" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapHashMap"* }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::PropertyHandle", %"class.blink::Member.8" }
%"class.blink::PropertyHandle" = type { i32, %union.anon, %"class.WTF::AtomicString" }
%union.anon = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* }
%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup" = type { %"class.blink::HeapVector.12" }
%"class.blink::HeapVector.12" = type { %"class.WTF::Vector.15" }
%"class.WTF::Vector.15" = type { %"class.WTF::VectorBuffer.16" }
%"class.WTF::VectorBuffer.16" = type { %"class.WTF::VectorBufferBase.17" }
%"class.WTF::VectorBufferBase.17" = type { %"class.blink::Member.18"*, i32, i32 }
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::Keyframe::PropertySpecificKeyframe"* }
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr.22, i32, [4 x i8] }>
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::InterpolationEffect"* }
%"class.blink::InterpolationEffect" = type { i8, %"class.blink::HeapVector.33" }
%"class.blink::HeapVector.33" = type { %"class.WTF::Vector.36" }
%"class.WTF::Vector.36" = type { %"class.WTF::VectorBuffer.37" }
%"class.WTF::VectorBuffer.37" = type { %"class.WTF::VectorBufferBase.38" }
%"class.WTF::VectorBufferBase.38" = type { %"class.blink::Member.39"*, i32, i32 }
%"class.blink::Member.39" = type { %"class.blink::MemberBase.2527" }
%"class.blink::MemberBase.2527" = type { %"class.blink::InterpolationEffect::InterpolationRecord"* }
%"class.blink::InterpolationEffect::InterpolationRecord" = type { %"class.blink::Member.2530", %class.scoped_refptr.22, double, double, double, double }
%"class.blink::Member.2530" = type { %"class.blink::MemberBase.2531" }
%"class.blink::MemberBase.2531" = type { %"class.blink::Interpolation"* }
%"class.blink::Interpolation" = type { i32 (...)** }
%"class.blink::AnimationTimeDelta" = type { double }
%class.scoped_refptr.22 = type { %"class.blink::TimingFunction"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.51" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.43", %"class.blink::Member.43" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.43", %"class.blink::Member.45", %"class.blink::Member.43", %"class.blink::Member.43", %"class.blink::Member.47" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.45" = type { %"class.blink::MemberBase.46" }
%"class.blink::MemberBase.46" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.68", %"class.blink::Member.70", %"class.blink::Member.45", %"class.blink::Member.72", %"class.blink::Member.72", %"class.blink::Member.96", %"class.blink::Member.98", %"class.blink::Member.100", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.105", %"class.blink::HeapVector.107" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.68" = type { %"class.blink::MemberBase.69" }
%"class.blink::MemberBase.69" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.70" = type { %"class.blink::MemberBase.71" }
%"class.blink::MemberBase.71" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.167", %"class.WTF::Vector.167", i8, i32, %"class.blink::Member.174", %"class.blink::Member.449", %"class.blink::Member.1484", %"class.blink::Member.1486", %"class.blink::Member.1488", %"class.blink::Member.1490", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1498", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1504", %"class.blink::Member.1506", %"class.blink::Member.113", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1509", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.89", %"class.blink::Member.87", %"class.blink::Member.1459", %"class.blink::Member.87", %"class.blink::Member.87", %"class.blink::Member.87", %"class.blink::UserActionElementSet", %"class.blink::Member.1540", double, double, i64, i64, %"class.blink::HeapHashSet.1542", %"class.blink::HeapHashSet.1549", i16, i8, %"class.blink::Member.1556", %"class.blink::Member.1558", %"class.blink::Member.1560", %"class.blink::Member.1562", %"class.blink::TextLinkColors", %"class.blink::Member.1564", i8, [7 x i8], %"class.blink::HeapHashMap.1566", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.87", %"class.WTF::Vector.1573", %"class.blink::Member.1578", %"class.blink::Member.1580", i8, %"class.blink::Member.87", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1582", %"class.blink::HeapVector.1584", %"class.std::__1::unique_ptr.1592", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1598", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1611", %"class.WTF::Vector.1613", i8, i8, %"class.std::__1::unique_ptr.1618", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.89", %"class.blink::HeapVector.1624", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1632", i8, i32, %"class.blink::Member.1634", %"class.blink::Member.1636", %"class.blink::Member.1638", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1640", %"class.WTF::HashMap.1642", %"class.blink::Member.1647", %"class.blink::Member.1649", %"class.blink::Member.1651", %"class.blink::Member.1653", %"class.blink::Member.70", %"class.blink::Member.70", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1655", i8, i32, %"class.blink::Member.1662", %"class.blink::Member.1664", i32, %"class.blink::Member.1666", %"class.blink::Member.1668", %"class.blink::Member.1670", %"class.std::__1::unique_ptr.1672", i64, %"class.std::__1::unique_ptr.1678", i32, i32, %"class.blink::Member.1689", %"class.blink::Member.1691", %"class.blink::Member.1693", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1695", %"class.WTF::Vector.1470", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1697", %"class.blink::Member.1704", %"class.std::__1::unique_ptr.1706", %"class.blink::Member.1712", i8, i8, %"class.WTF::String", %"class.blink::Member.1714", i8, [7 x i8], %"class.blink::HeapHashMap.1716", %"class.blink::HeapObserverSet.1723", %"class.blink::Member.1731", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1733", i32, i8, i8, %"class.blink::WeakMember.1735", %"class.blink::Member.1736" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.160" }
%"class.blink::HeapHashMap.160" = type { %"class.WTF::HashMap.163" }
%"class.WTF::HashMap.163" = type { %"class.WTF::HashTable.164" }
%"class.WTF::HashTable.164" = type <{ %"struct.WTF::KeyValuePair.166"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.166" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.167" = type { %"class.WTF::VectorBuffer.168" }
%"class.WTF::VectorBuffer.168" = type { %"class.WTF::VectorBufferBase.169" }
%"class.WTF::VectorBufferBase.169" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.170 }
%class.scoped_refptr.170 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.171", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.171" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.174" = type { %"class.blink::MemberBase.175" }
%"class.blink::MemberBase.175" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.539", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.547", %"class.blink::Member.70", %"class.blink::Member.549", i8, %"class.blink::Member.551", %"class.blink::Member.553", %"class.blink::Member.555", %"class.blink::Member.555", %"class.blink::Member.555", %"class.blink::Member.555", %"class.blink::Member.555", %"class.blink::Member.555", %"class.blink::Member.557", %"class.blink::Member.559", %"class.blink::Member.561", %"class.blink::Member.563", %"class.blink::Member.565", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.506", %"class.blink::Member.567", %class.scoped_refptr.569, %"class.blink::HeapHashSet.632", %"class.blink::Member.639", %"class.blink::HeapHashMap.652", %"class.std::__1::unique_ptr.659", %"class.blink::Member.671", %"class.blink::Member.1463", %"class.blink::Member.1465", %"class.blink::Member.1467", %"class.WTF::Vector.1470", %"class.util::TokenType", %"class.WTF::HashSet.1475", %"class.WTF::Deque.1479" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.196", %"class.blink::Member.198", %"class.blink::Member.200", %"class.blink::Member.202", i8, %"class.WTF::Vector.204" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.189" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.178" }
%"class.blink::HeapVector.178" = type { %"class.WTF::Vector.181" }
%"class.WTF::Vector.181" = type { %"class.WTF::VectorBuffer.182" }
%"class.WTF::VectorBuffer.182" = type { %"class.WTF::VectorBufferBase.183", [32 x i8] }
%"class.WTF::VectorBufferBase.183" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.184" }
%"class.blink::Member.184" = type { %"class.blink::MemberBase.185" }
%"class.blink::MemberBase.185" = type { %"class.blink::HeapVector.186"* }
%"class.blink::HeapVector.186" = type opaque
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.WTF::Vector.192"* }
%"class.WTF::Vector.192" = type opaque
%"class.blink::Member.196" = type { %"class.blink::MemberBase.197" }
%"class.blink::MemberBase.197" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1772", %"class.blink::Member.1774", %"class.blink::Member.1776", i8, i32, i8, i32, %"class.blink::Member.1778", %"class.blink::Member.198", %"class.blink::FrameLifecycle", %"class.blink::Member.196", %"class.blink::Member.196", %"class.blink::Member.196", %"class.blink::Member.196", %"class.blink::Member.196", %"class.blink::Member.196", %"class.blink::Member.677", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1789", i8, %"class.base::UnguessableToken", %"class.absl::optional.1791", %"class.absl::optional.1796", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.196", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1772" = type { %"class.blink::MemberBase.1773" }
%"class.blink::MemberBase.1773" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1774" = type { %"class.blink::MemberBase.1775" }
%"class.blink::MemberBase.1775" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1776" = type { %"class.blink::MemberBase.1777" }
%"class.blink::MemberBase.1777" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.1778" = type { %"class.blink::MemberBase.1779" }
%"class.blink::MemberBase.1779" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.677" = type { %"class.blink::MemberBase.678" }
%"class.blink::MemberBase.678" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1808", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1816", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1824", %"class.blink::FrameLoader", %"class.blink::Member.1845", %"class.blink::Member.87", %"class.blink::Member.1847", %"class.blink::Member.1849", %"class.blink::Member.1851", %"class.blink::Member.1853", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1857", %class.scoped_refptr.2077, %"class.blink::Member.2078", %"class.blink::Member.2080", %"class.blink::Member.2082", %"class.blink::Member.2084", %"class.blink::Member.2086", %"class.blink::Member.2090", %"class.blink::Member.2092", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.2094", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2097", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2103", %"class.std::__1::unique_ptr.2104", %"class.absl::optional.1796", i32, [4 x i8], %"class.std::__1::unique_ptr.2110", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2118", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2123", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2128", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2131", %"class.blink::Member.2133", %"class.blink::Member.2135", %"class.blink::Member.2137", %"class.mojo::StructPtr.2140", %"class.blink::Member.2149", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2151", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1808" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1809" }
%"class.blink::HeapHashMap.1809" = type { %"class.WTF::HashMap.1812" }
%"class.WTF::HashMap.1812" = type { %"class.WTF::HashTable.1813" }
%"class.WTF::HashTable.1813" = type <{ %"struct.WTF::KeyValuePair.1815"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1815" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1816" = type { %"class.std::__1::__compressed_pair.1817" }
%"class.std::__1::__compressed_pair.1817" = type { %"struct.std::__1::__compressed_pair_elem.1818" }
%"struct.std::__1::__compressed_pair_elem.1818" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.662", %"class.base::WeakPtrFactory.667" }
%"class.WTF::HashMap.662" = type { %"class.WTF::HashTable.663" }
%"class.WTF::HashTable.663" = type <{ %"struct.WTF::KeyValuePair.666"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.666" = type opaque
%"class.base::WeakPtrFactory.667" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.227 }
%class.scoped_refptr.227 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.228", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.228" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.229" }
%"struct.std::__1::atomic.229" = type { %"struct.std::__1::__atomic_base.230" }
%"struct.std::__1::__atomic_base.230" = type { %"struct.std::__1::__atomic_base.231" }
%"struct.std::__1::__atomic_base.231" = type { %"struct.std::__1::__cxx_atomic_impl.232" }
%"struct.std::__1::__cxx_atomic_impl.232" = type { %"struct.std::__1::__cxx_atomic_base_impl.233" }
%"struct.std::__1::__cxx_atomic_base_impl.233" = type { i8 }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1822" }
%"class.blink::Member.1822" = type { %"class.blink::MemberBase.1823" }
%"class.blink::MemberBase.1823" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.675" }
%"class.blink::WeakMember.675" = type { %"class.blink::MemberBase.676" }
%"class.blink::MemberBase.676" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.392" }
%"class.blink::HeapHashSet.392" = type { %"class.WTF::HashSet.395" }
%"class.WTF::HashSet.395" = type { %"class.WTF::HashTable.396" }
%"class.WTF::HashTable.396" = type <{ %"class.blink::WeakMember.398"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.398" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.329", %"class.base::RepeatingCallback.2567", i64, %"class.std::__1::map.2568", i8*, i64, %"class.base::WeakPtrFactory.2577" }
%"class.base::RepeatingCallback.329" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.2567" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2568" = type { %"class.std::__1::__tree.2569" }
%"class.std::__1::__tree.2569" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2570", %"class.std::__1::__compressed_pair.2574" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2570" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.2574" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"class.base::WeakPtrFactory.2577" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1824" = type { %"class.WTF::HashSet.1827" }
%"class.WTF::HashSet.1827" = type { %"class.WTF::HashTable.1828" }
%"class.WTF::HashTable.1828" = type <{ %"class.blink::WeakMember.1830"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1830" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.677", %"class.blink::Member.1831", %"class.blink::Member.1833", %"class.std::__1::unique_ptr.1835", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1841" }
%"class.blink::Member.1831" = type { %"class.blink::MemberBase.1832" }
%"class.blink::MemberBase.1832" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1833" = type { %"class.blink::MemberBase.1834" }
%"class.blink::MemberBase.1834" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1835" = type { %"class.std::__1::__compressed_pair.1836" }
%"class.std::__1::__compressed_pair.1836" = type { %"struct.std::__1::__compressed_pair_elem.1837" }
%"struct.std::__1::__compressed_pair_elem.1837" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.6 }
%"class.WTF::HashSet.1841" = type { %"class.WTF::HashTable.1842" }
%"class.WTF::HashTable.1842" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1845" = type { %"class.blink::MemberBase.1846" }
%"class.blink::MemberBase.1846" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2230", %"class.blink::Member.677", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2235", i8, i32, %"class.blink::Color", %"class.absl::optional.2237", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2242", %"class.blink::Member.2244", %"class.blink::Member.2244", %"class.std::__1::unique_ptr.2247", i32, [4 x i8], %"class.WTF::HashSet.2250", %"class.blink::Member.2257", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2259", %"class.blink::HeapHashSet.2266", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2274", i8, %"class.blink::Member.2280", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2292", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2306", i8, %"class.std::__1::unique_ptr.2312", %"class.std::__1::unique_ptr.2393", %"class.WTF::Vector.2399", i32, %class.scoped_refptr.2404, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2405", %"class.blink::Member.2407", %"class.blink::Member.2409", %"class.blink::HeapHashSet.2411", %"class.blink::HeapHashSet.2418", %"class.std::__1::unique_ptr.2425", %"class.std::__1::unique_ptr.2432", %"class.WTF::Vector.167" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2230" = type { %"class.WTF::HashTable.2231" }
%"class.WTF::HashTable.2231" = type <{ %class.scoped_refptr.2234*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2234 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2235" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2236", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1530, %"class.base::WeakPtrFactory.1531" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.1530 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.210" }>
%"class.base::RefCountedThreadSafe.210" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.1531" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.2236" = type { %"class.blink::MemberBase.1846" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.2237" = type { %"class.absl::optional_internal::optional_data.2238" }
%"class.absl::optional_internal::optional_data.2238" = type { %"class.absl::optional_internal::optional_data_base.2239" }
%"class.absl::optional_internal::optional_data_base.2239" = type { %"class.absl::optional_internal::optional_data_dtor_base.2240" }
%"class.absl::optional_internal::optional_data_dtor_base.2240" = type { i8, %union.anon.2241 }
%union.anon.2241 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2242" = type { %"class.blink::MemberBase.2243" }
%"class.blink::MemberBase.2243" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2244" = type { %"class.blink::MemberBase.2245" }
%"class.blink::MemberBase.2245" = type { %"class.blink::HeapHashSet.2246"* }
%"class.blink::HeapHashSet.2246" = type opaque
%"class.std::__1::unique_ptr.2247" = type { %"class.std::__1::__compressed_pair.2248" }
%"class.std::__1::__compressed_pair.2248" = type { %"struct.std::__1::__compressed_pair_elem.2249" }
%"struct.std::__1::__compressed_pair_elem.2249" = type { %"class.WTF::HashSet.2250"* }
%"class.WTF::HashSet.2250" = type { %"class.WTF::HashTable.2251" }
%"class.WTF::HashTable.2251" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.681, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr.681 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1286", %"class.std::__1::unique_ptr.1288" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.924", %"class.blink::DataRef.1005", %"class.blink::DataRef.1009", %"class.blink::DataRef.1202", %"class.blink::DataRef.1269", %"class.blink::DataRef.1273", %"class.blink::DataRef.1277", %"class.blink::DataRef.1281", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.682 }
%class.scoped_refptr.682 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.683", %"class.blink::DataRef.685", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.683" = type { %"class.base::RefCounted.684" }
%"class.base::RefCounted.684" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.685" = type { %class.scoped_refptr.686 }
%class.scoped_refptr.686 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.687", %"class.blink::Font" }
%"class.WTF::RefCounted.687" = type { %"class.base::RefCounted.688" }
%"class.base::RefCounted.688" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.715 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.690, %class.scoped_refptr.698, %class.scoped_refptr.708, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.714 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.689 }
%class.scoped_refptr.689 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1768", [4 x i8] }>
%"class.WTF::RefCounted.1768" = type { %"class.base::RefCounted.1769" }
%"class.base::RefCounted.1769" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.690 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.696", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.691" }
%"class.WTF::Vector.691" = type { %"class.WTF::VectorBuffer.692" }
%"class.WTF::VectorBuffer.692" = type { %"class.WTF::VectorBufferBase.693" }
%"class.WTF::VectorBufferBase.693" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.699", %"class.WTF::RefCounted.706", [4 x i8] }>
%"class.blink::FontSettings.699" = type { %"class.WTF::Vector.700" }
%"class.WTF::Vector.700" = type { %"class.WTF::VectorBuffer.701" }
%"class.WTF::VectorBuffer.701" = type { %"class.WTF::VectorBufferBase.702" }
%"class.WTF::VectorBufferBase.702" = type { %"class.blink::FontTagValuePair.703"*, i32, i32 }
%"class.blink::FontTagValuePair.703" = type { i32, float }
%"class.WTF::RefCounted.706" = type { %"class.base::RefCounted.707" }
%"class.base::RefCounted.707" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.708 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.709", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.711, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.709" = type { %"class.base::RefCounted.710" }
%"class.base::RefCounted.710" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.213 }
%union.anon.213 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.711 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.712", [4 x i8] }>
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.714 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.715 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.716", %"class.WTF::Vector.718", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr.922" }
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.718" = type { %"class.WTF::VectorBuffer.719" }
%"class.WTF::VectorBuffer.719" = type { %"class.WTF::VectorBufferBase.720", [8 x i8] }
%"class.WTF::VectorBufferBase.720" = type { %class.scoped_refptr.721*, i32, i32 }
%class.scoped_refptr.721 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.722", [4 x i8] }>
%"class.WTF::RefCounted.722" = type { %"class.base::RefCounted.723" }
%"class.base::RefCounted.723" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.732", %class.scoped_refptr.739, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.722" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.726", %"class.absl::optional.726", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.726" = type { %"class.absl::optional_internal::optional_data.727" }
%"class.absl::optional_internal::optional_data.727" = type { %"class.absl::optional_internal::optional_data_base.728" }
%"class.absl::optional_internal::optional_data_base.728" = type { %"class.absl::optional_internal::optional_data_dtor_base.729" }
%"class.absl::optional_internal::optional_data_dtor_base.729" = type { i8, %union.anon.730 }
%union.anon.730 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.731, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.23" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.23" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.229" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.731 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.732" = type { %"class.std::__1::__compressed_pair.733" }
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.734" }
%"struct.std::__1::__compressed_pair_elem.734" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.735, %class.scoped_refptr.735 }
%class.scoped_refptr.735 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.739 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.740", [4 x i8] }>
%"class.WTF::RefCounted.740" = type { %"class.base::RefCounted.741" }
%"class.base::RefCounted.741" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr.922" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.286 }
%class.scoped_refptr.286 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.923, i8, i8, i8, i8 }>
%union.anon.923 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.924" = type { %class.scoped_refptr.925 }
%class.scoped_refptr.925 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.926", [4 x i8], %"class.blink::DataRef.928", %"class.blink::DataRef.970", %"class.WTF::Vector.974", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.978, %class.scoped_refptr.987, %"class.blink::Persistent.995", %"class.blink::Persistent.997", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.926" = type { %"class.base::RefCounted.927" }
%"class.base::RefCounted.927" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.928" = type { %class.scoped_refptr.929 }
%class.scoped_refptr.929 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.930", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.932, %class.scoped_refptr.940, %"class.blink::Persistent.957", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.930" = type { %"class.base::RefCounted.931" }
%"class.base::RefCounted.931" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.932 = type { %"class.base::RefCountedData.933"* }
%"class.base::RefCountedData.933" = type { %"class.base::RefCountedThreadSafe.934", %"class.WTF::Vector.935" }
%"class.base::RefCountedThreadSafe.934" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.935" = type { %"class.WTF::VectorBuffer.936" }
%"class.WTF::VectorBuffer.936" = type { %"class.WTF::VectorBufferBase.937" }
%"class.WTF::VectorBufferBase.937" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.940 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.941", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.941" = type { %"class.base::RefCounted.942" }
%"class.base::RefCounted.942" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.943", %"class.blink::Persistent" }
%"class.WTF::HashMap.943" = type { %"class.WTF::HashTable.944" }
%"class.WTF::HashTable.944" = type <{ %"struct.WTF::KeyValuePair.947"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.947" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2545 }
%class.scoped_refptr.2545 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2546", %"class.WTF::Vector.506", %"class.WTF::Vector.2548", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2546" = type { %"class.base::RefCounted.2547" }
%"class.base::RefCounted.2547" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2548" = type { %"class.WTF::VectorBuffer.2549" }
%"class.WTF::VectorBuffer.2549" = type { %"class.WTF::VectorBufferBase.2550" }
%"class.WTF::VectorBufferBase.2550" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2551 }
%union.anon.2551 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.948" }
%"class.blink::PersistentBase.948" = type { %"class.blink::HeapHashMap.949"*, %"class.blink::PersistentNodePtr.956" }
%"class.blink::HeapHashMap.949" = type { %"class.WTF::HashMap.952" }
%"class.WTF::HashMap.952" = type { %"class.WTF::HashTable.953" }
%"class.WTF::HashTable.953" = type <{ %"struct.WTF::KeyValuePair.955"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.955" = type opaque
%"class.blink::PersistentNodePtr.956" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.957" = type { %"class.blink::PersistentBase.958" }
%"class.blink::PersistentBase.958" = type { %"class.blink::HeapVector.959"*, %"class.blink::PersistentNodePtr.956" }
%"class.blink::HeapVector.959" = type { %"class.WTF::Vector.962" }
%"class.WTF::Vector.962" = type { %"class.WTF::VectorBuffer.963" }
%"class.WTF::VectorBuffer.963" = type { %"class.WTF::VectorBufferBase.964" }
%"class.WTF::VectorBufferBase.964" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.965", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.965" = type { %"class.blink::MemberBase.966" }
%"class.blink::MemberBase.966" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.970" = type { %class.scoped_refptr.971 }
%class.scoped_refptr.971 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.972", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.972" = type { %"class.base::RefCounted.973" }
%"class.base::RefCounted.973" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.974" = type { %"class.WTF::VectorBuffer.975" }
%"class.WTF::VectorBuffer.975" = type { %"class.WTF::VectorBufferBase.66" }
%"class.WTF::VectorBufferBase.66" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.978 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.979", %"class.WTF::Vector.981" }
%"class.WTF::RefCounted.979" = type { %"class.base::RefCounted.980" }
%"class.base::RefCounted.980" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.981" = type { %"class.WTF::VectorBuffer.982" }
%"class.WTF::VectorBuffer.982" = type { %"class.WTF::VectorBufferBase.983" }
%"class.WTF::VectorBufferBase.983" = type { %"struct.std::__1::pair.984"*, i32, i32 }
%"struct.std::__1::pair.984" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.987 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.988", [4 x i8], %"class.WTF::Vector.990" }
%"class.WTF::RefCounted.988" = type { %"class.base::RefCounted.989" }
%"class.base::RefCounted.989" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.990" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.992", [28 x i8] }>
%"class.WTF::VectorBufferBase.992" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.995" = type { %"class.blink::PersistentBase.996" }
%"class.blink::PersistentBase.996" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.956" }
%"class.blink::Persistent.997" = type { %"class.blink::PersistentBase.998" }
%"class.blink::PersistentBase.998" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.956" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.1001", %"class.blink::Member.1003" }
%"class.blink::Member.1001" = type { %"class.blink::MemberBase.1002" }
%"class.blink::MemberBase.1002" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.1003" = type { %"class.blink::MemberBase.1004" }
%"class.blink::MemberBase.1004" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.1005" = type { %class.scoped_refptr.1006 }
%class.scoped_refptr.1006 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.1007", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.1007" = type { %"class.base::RefCounted.1008" }
%"class.base::RefCounted.1008" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.1009" = type { %class.scoped_refptr.1010 }
%class.scoped_refptr.1010 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.1011", [4 x i8], %"class.blink::DataRef.1013", %"class.blink::DataRef.1079", %"class.blink::TransformOperations", %class.scoped_refptr.987, %"class.blink::Persistent.1196", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.1011" = type { %"class.base::RefCounted.1012" }
%"class.base::RefCounted.1012" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1013" = type { %class.scoped_refptr.1014 }
%class.scoped_refptr.1014 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.1015", [4 x i8], %"class.blink::DataRef.1017", %"class.blink::Persistent.1055", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.1015" = type { %"class.base::RefCounted.1016" }
%"class.base::RefCounted.1016" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1017" = type { %class.scoped_refptr.1018 }
%class.scoped_refptr.1018 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.1019", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.1037, %class.scoped_refptr.1040, %class.scoped_refptr.1043, %class.scoped_refptr.1046, %class.scoped_refptr.1047, %class.scoped_refptr.1048, %"class.blink::Persistent.1055", %"class.blink::Persistent.1070", %"class.absl::optional.1074", %"class.absl::optional.1074", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.1019" = type { %"class.base::RefCounted.1020" }
%"class.base::RefCounted.1020" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.1021", %"class.std::__1::unique_ptr.1026" }
%"class.WTF::Vector.1021" = type { %"class.WTF::VectorBuffer.1022" }
%"class.WTF::VectorBuffer.1022" = type { %"class.WTF::VectorBufferBase.1023" }
%"class.WTF::VectorBufferBase.1023" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1026" = type { %"class.std::__1::__compressed_pair.1027" }
%"class.std::__1::__compressed_pair.1027" = type { %"struct.std::__1::__compressed_pair_elem.1028" }
%"struct.std::__1::__compressed_pair_elem.1028" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.1029", %"class.WTF::Vector.1021", i32, i32 }
%"class.WTF::Vector.1029" = type { %"class.WTF::VectorBuffer.1030" }
%"class.WTF::VectorBuffer.1030" = type { %"class.WTF::VectorBufferBase.1031" }
%"class.WTF::VectorBufferBase.1031" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.1037 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1038", [4 x i8] }>
%"class.WTF::RefCounted.1038" = type { %"class.base::RefCounted.1039" }
%"class.base::RefCounted.1039" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1040 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.1041", [4 x i8] }>
%"class.WTF::RefCounted.1041" = type { %"class.base::RefCounted.1042" }
%"class.base::RefCounted.1042" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1043 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1044" }>
%"class.WTF::RefCounted.1044" = type { %"class.base::RefCounted.1045" }
%"class.base::RefCounted.1045" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1046 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.1047 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.1048 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.1049", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.1049" = type { %"class.base::RefCounted.1050" }
%"class.base::RefCounted.1050" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.1051" }
%"class.blink::DataRef.1051" = type { %class.scoped_refptr.1052 }
%class.scoped_refptr.1052 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.995", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.1053" }
%"class.WTF::RefCounted.1053" = type { %"class.base::RefCounted.1054" }
%"class.base::RefCounted.1054" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.1070" = type { %"class.blink::PersistentBase.1071" }
%"class.blink::PersistentBase.1071" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.956" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.1040, %"class.blink::Member.965", i32, [4 x i8] }>
%"class.absl::optional.1074" = type { %"class.absl::optional_internal::optional_data.1075" }
%"class.absl::optional_internal::optional_data.1075" = type { %"class.absl::optional_internal::optional_data_base.1076" }
%"class.absl::optional_internal::optional_data_base.1076" = type { %"class.absl::optional_internal::optional_data_dtor_base.1077" }
%"class.absl::optional_internal::optional_data_dtor_base.1077" = type { i8, [3 x i8], %union.anon.1078 }
%union.anon.1078 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.1055" = type { %"class.blink::PersistentBase.1056" }
%"class.blink::PersistentBase.1056" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.956" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.1059" }
%"class.blink::HeapVector.1059" = type { %"class.WTF::Vector.1062" }
%"class.WTF::Vector.1062" = type { %"class.WTF::VectorBuffer.1063" }
%"class.WTF::VectorBuffer.1063" = type { %"class.WTF::VectorBufferBase.1064" }
%"class.WTF::VectorBufferBase.1064" = type { %"class.blink::Member.1065"*, i32, i32 }
%"class.blink::Member.1065" = type { %"class.blink::MemberBase.1066" }
%"class.blink::MemberBase.1066" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.1079" = type { %class.scoped_refptr.1080 }
%class.scoped_refptr.1080 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.1081", %"class.blink::DataRef.1083", %"class.blink::DataRef.1087", %"class.blink::DataRef.1096", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1115", %"class.std::__1::unique_ptr.1126", %"class.std::__1::unique_ptr.1162", %"class.std::__1::unique_ptr.1173", %"class.std::__1::unique_ptr.1184", %"class.WTF::Vector.506", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.1081" = type { %"class.base::RefCounted.1082" }
%"class.base::RefCounted.1082" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1083" = type { %class.scoped_refptr.1084 }
%class.scoped_refptr.1084 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.1085", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1085" = type { %"class.base::RefCounted.1086" }
%"class.base::RefCounted.1086" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1087" = type { %class.scoped_refptr.1088 }
%class.scoped_refptr.1088 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.1089", [4 x i8], %"class.WTF::Vector.1091", i8, [7 x i8] }>
%"class.WTF::RefCounted.1089" = type { %"class.base::RefCounted.1090" }
%"class.base::RefCounted.1090" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1091" = type { %"class.WTF::VectorBuffer.1092" }
%"class.WTF::VectorBuffer.1092" = type { %"class.WTF::VectorBufferBase.1093" }
%"class.WTF::VectorBufferBase.1093" = type { i32*, i32, i32 }
%"class.blink::DataRef.1096" = type { %class.scoped_refptr.1097 }
%class.scoped_refptr.1097 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.1098", [4 x i8], %"class.WTF::HashMap.1100", %"class.WTF::HashMap.1100", %"class.WTF::HashMap.1100", %"class.WTF::HashMap.1100", %"class.WTF::HashMap.1100", %"class.WTF::HashMap.1100", %"class.WTF::HashMap.1105", %"class.WTF::HashMap.1105", %"class.WTF::HashMap.1105", %"class.WTF::HashMap.1105", %"class.WTF::HashMap.1110", %"class.WTF::Vector.1021", %"class.WTF::Vector.1021", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.1098" = type { %"class.base::RefCounted.1099" }
%"class.base::RefCounted.1099" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.1100" = type { %"class.WTF::HashTable.1101" }
%"class.WTF::HashTable.1101" = type <{ %"struct.WTF::KeyValuePair.1104"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1104" = type { %"class.WTF::String", %"class.WTF::Vector.2535" }
%"class.WTF::Vector.2535" = type { %"class.WTF::VectorBuffer.2536" }
%"class.WTF::VectorBuffer.2536" = type { %"class.WTF::VectorBufferBase.2537" }
%"class.WTF::VectorBufferBase.2537" = type { i64*, i32, i32 }
%"class.WTF::HashMap.1105" = type { %"class.WTF::HashTable.1106" }
%"class.WTF::HashTable.1106" = type <{ %"struct.WTF::KeyValuePair.1109"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1109" = type { i64, %"class.WTF::Vector.506" }
%"class.WTF::HashMap.1110" = type { %"class.WTF::HashTable.1111" }
%"class.WTF::HashTable.1111" = type <{ %"struct.WTF::KeyValuePair.1114"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1114" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1115" = type { %"class.std::__1::__compressed_pair.1116" }
%"class.std::__1::__compressed_pair.1116" = type { %"struct.std::__1::__compressed_pair_elem.1117" }
%"struct.std::__1::__compressed_pair_elem.1117" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1122"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1122" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2540", %"class.absl::optional.2540", %"class.absl::optional.2540" }
%"class.absl::optional.2540" = type { %"class.absl::optional_internal::optional_data.2541" }
%"class.absl::optional_internal::optional_data.2541" = type { %"class.absl::optional_internal::optional_data_base.2542" }
%"class.absl::optional_internal::optional_data_base.2542" = type { %"class.absl::optional_internal::optional_data_dtor_base.2543" }
%"class.absl::optional_internal::optional_data_dtor_base.2543" = type { i8, %union.anon.2544 }
%union.anon.2544 = type { i32 }
%"class.std::__1::unique_ptr.1126" = type { %"class.std::__1::__compressed_pair.1127" }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.1128" }
%"struct.std::__1::__compressed_pair_elem.1128" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.974", %"class.WTF::Vector.1139", %"class.WTF::Vector.1129", %"class.WTF::Vector.1144", %"class.WTF::Vector.1149", %"class.WTF::Vector.1154" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.1129", %"class.WTF::Vector.1129", %"class.WTF::Vector.1134" }
%"class.WTF::Vector.1134" = type { %"class.WTF::VectorBuffer.1135" }
%"class.WTF::VectorBuffer.1135" = type { %"class.WTF::VectorBufferBase.1136" }
%"class.WTF::VectorBufferBase.1136" = type { %class.scoped_refptr.22*, i32, i32 }
%"class.WTF::Vector.1139" = type { %"class.WTF::VectorBuffer.1140" }
%"class.WTF::VectorBuffer.1140" = type { %"class.WTF::VectorBufferBase.1141" }
%"class.WTF::VectorBufferBase.1141" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1129" = type { %"class.WTF::VectorBuffer.1130" }
%"class.WTF::VectorBuffer.1130" = type { %"class.WTF::VectorBufferBase.1131" }
%"class.WTF::VectorBufferBase.1131" = type { double*, i32, i32 }
%"class.WTF::Vector.1144" = type { %"class.WTF::VectorBuffer.1145" }
%"class.WTF::VectorBuffer.1145" = type { %"class.WTF::VectorBufferBase.1146" }
%"class.WTF::VectorBufferBase.1146" = type { i32*, i32, i32 }
%"class.WTF::Vector.1149" = type { %"class.WTF::VectorBuffer.1150" }
%"class.WTF::VectorBuffer.1150" = type { %"class.WTF::VectorBufferBase.1151" }
%"class.WTF::VectorBufferBase.1151" = type { i32*, i32, i32 }
%"class.WTF::Vector.1154" = type { %"class.WTF::VectorBuffer.1155" }
%"class.WTF::VectorBuffer.1155" = type { %"class.WTF::VectorBufferBase.1156" }
%"class.WTF::VectorBufferBase.1156" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1162" = type { %"class.std::__1::__compressed_pair.1163" }
%"class.std::__1::__compressed_pair.1163" = type { %"struct.std::__1::__compressed_pair_elem.1164" }
%"struct.std::__1::__compressed_pair_elem.1164" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1165" }
%"class.WTF::Vector.1165" = type { %"class.WTF::VectorBuffer.1166" }
%"class.WTF::VectorBuffer.1166" = type { %"class.WTF::VectorBufferBase.1167" }
%"class.WTF::VectorBufferBase.1167" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1173" = type { %"class.std::__1::__compressed_pair.1174" }
%"class.std::__1::__compressed_pair.1174" = type { %"struct.std::__1::__compressed_pair_elem.1175" }
%"struct.std::__1::__compressed_pair_elem.1175" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1176" }
%"class.WTF::Vector.1176" = type { %"class.WTF::VectorBuffer.1177" }
%"class.WTF::VectorBuffer.1177" = type { %"class.WTF::VectorBufferBase.1178" }
%"class.WTF::VectorBufferBase.1178" = type { %"class.blink::Persistent.995"*, i32, i32 }
%"class.std::__1::unique_ptr.1184" = type { %"class.std::__1::__compressed_pair.1185" }
%"class.std::__1::__compressed_pair.1185" = type { %"struct.std::__1::__compressed_pair_elem.1186" }
%"struct.std::__1::__compressed_pair_elem.1186" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.995", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1190" }
%"class.WTF::Vector.1190" = type { %"class.WTF::VectorBuffer.1191" }
%"class.WTF::VectorBuffer.1191" = type { %"class.WTF::VectorBufferBase.1192" }
%"class.WTF::VectorBufferBase.1192" = type { %class.scoped_refptr.1193*, i32, i32 }
%class.scoped_refptr.1193 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1044", [4 x i8] }>
%"class.blink::Persistent.1196" = type { %"class.blink::PersistentBase.1197" }
%"class.blink::PersistentBase.1197" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.956" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1200" }
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1202" = type { %class.scoped_refptr.1203 }
%class.scoped_refptr.1203 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1204", [4 x i8], %"class.blink::DataRef.1206", %"class.blink::DataRef.1210", %"class.blink::DataRef.1231", %"class.blink::DataRef.1249", %"class.blink::DataRef.1261", %"class.blink::DataRef.1265", %class.scoped_refptr.1235, i32, [4 x i8] }>
%"class.WTF::RefCounted.1204" = type { %"class.base::RefCounted.1205" }
%"class.base::RefCounted.1205" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1206" = type { %class.scoped_refptr.1207 }
%class.scoped_refptr.1207 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1208", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1208" = type { %"class.base::RefCounted.1209" }
%"class.base::RefCounted.1209" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1210" = type { %class.scoped_refptr.1211 }
%class.scoped_refptr.1211 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1212", %class.scoped_refptr.1214, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1212" = type { %"class.base::RefCounted.1213" }
%"class.base::RefCounted.1213" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1214 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1215", %"class.std::__1::unique_ptr.1221", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1041" }>
%"class.std::__1::unique_ptr.1215" = type { %"class.std::__1::__compressed_pair.1216" }
%"class.std::__1::__compressed_pair.1216" = type { %"struct.std::__1::__compressed_pair_elem.1217" }
%"struct.std::__1::__compressed_pair_elem.1217" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1221" = type { %"class.std::__1::__compressed_pair.1222" }
%"class.std::__1::__compressed_pair.1222" = type { %"struct.std::__1::__compressed_pair_elem.1223" }
%"struct.std::__1::__compressed_pair_elem.1223" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1224, i32, %"struct.std::__1::atomic.229", %"struct.std::__1::atomic.229", i8, i8 }>
%class.sk_sp.1224 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1225, %class.SkTDArray.1226, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.23" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.1225 = type { i8*, i32, i32 }
%class.SkTDArray.1226 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1227 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.23", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1227 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.245", [3 x i8] }
%"class.blink::DataRef.1231" = type { %class.scoped_refptr.1232 }
%class.scoped_refptr.1232 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1233", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1233" = type { %"class.base::RefCounted.1234" }
%"class.base::RefCounted.1234" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1235, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1249" = type { %class.scoped_refptr.1250 }
%class.scoped_refptr.1250 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1251", [4 x i8], %class.scoped_refptr.1253, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1251" = type { %"class.base::RefCounted.1252" }
%"class.base::RefCounted.1252" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1253 = type { %"class.base::RefCountedData.1254"* }
%"class.base::RefCountedData.1254" = type { %"class.base::RefCountedThreadSafe.1255", %"class.WTF::Vector.1256" }
%"class.base::RefCountedThreadSafe.1255" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1256" = type { %"class.WTF::VectorBuffer.1257" }
%"class.WTF::VectorBuffer.1257" = type { %"class.WTF::VectorBufferBase.1258" }
%"class.WTF::VectorBufferBase.1258" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1261" = type { %class.scoped_refptr.1262 }
%class.scoped_refptr.1262 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1263", %class.scoped_refptr.1235, %class.scoped_refptr.1235, %class.scoped_refptr.1235 }
%"class.WTF::RefCounted.1263" = type { %"class.base::RefCounted.1264" }
%"class.base::RefCounted.1264" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1265" = type { %class.scoped_refptr.1266 }
%class.scoped_refptr.1266 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1267", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1267" = type { %"class.base::RefCounted.1268" }
%"class.base::RefCounted.1268" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1235 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1236", %"class.blink::Persistent.1238", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1236" = type { %"class.base::RefCounted.1237" }
%"class.base::RefCounted.1237" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1238" = type { %"class.blink::PersistentBase.1239" }
%"class.blink::PersistentBase.1239" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.956" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.87", %"class.blink::HeapHashMap.1242" }
%"class.blink::HeapHashMap.1242" = type { %"class.WTF::HashMap.1245" }
%"class.WTF::HashMap.1245" = type { %"class.WTF::HashTable.1246" }
%"class.WTF::HashTable.1246" = type <{ %"struct.WTF::KeyValuePair.1248"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1248" = type opaque
%"class.blink::DataRef.1269" = type { %class.scoped_refptr.1270 }
%class.scoped_refptr.1270 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1271", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1271" = type { %"class.base::RefCounted.1272" }
%"class.base::RefCounted.1272" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1273" = type { %class.scoped_refptr.1274 }
%class.scoped_refptr.1274 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1275", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1275" = type { %"class.base::RefCounted.1276" }
%"class.base::RefCounted.1276" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1277" = type { %class.scoped_refptr.1278 }
%class.scoped_refptr.1278 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1279", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1279" = type { %"class.base::RefCounted.1280" }
%"class.base::RefCounted.1280" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1281" = type { %class.scoped_refptr.1282 }
%class.scoped_refptr.1282 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1283", %class.scoped_refptr.1285 }
%"class.WTF::RefCounted.1283" = type { %"class.base::RefCounted.1284" }
%"class.base::RefCounted.1284" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1285 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1759", %"class.blink::StyleVariables", %class.scoped_refptr.1285 }
%"class.WTF::RefCounted.1759" = type { %"class.base::RefCounted.1760" }
%"class.base::RefCounted.1760" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1286" = type { %"class.base::RefCounted.1287" }
%"class.base::RefCounted.1287" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1288" = type { %"class.std::__1::__compressed_pair.1289" }
%"class.std::__1::__compressed_pair.1289" = type { %"struct.std::__1::__compressed_pair_elem.1290" }
%"struct.std::__1::__compressed_pair_elem.1290" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1291" }
%"class.std::__1::unique_ptr.1291" = type { %"class.std::__1::__compressed_pair.1292" }
%"class.std::__1::__compressed_pair.1292" = type { %"struct.std::__1::__compressed_pair_elem.1293" }
%"struct.std::__1::__compressed_pair_elem.1293" = type { %"class.WTF::Vector.1294"* }
%"class.WTF::Vector.1294" = type { %"class.WTF::VectorBuffer.2555" }
%"class.WTF::VectorBuffer.2555" = type { %"class.WTF::VectorBufferBase.2556", [32 x i8] }
%"class.WTF::VectorBufferBase.2556" = type { %class.scoped_refptr.681*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1301" }
%"class.blink::MemberBase.1301" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1302" }
%"class.std::__1::unique_ptr.1302" = type { %"class.std::__1::__compressed_pair.1303" }
%"class.std::__1::__compressed_pair.1303" = type { %"struct.std::__1::__compressed_pair_elem.1304" }
%"struct.std::__1::__compressed_pair_elem.1304" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1305", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1311", %"class.std::__1::unique_ptr.1432", i8, %"class.absl::optional.1438", %class.scoped_refptr.1414, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1443" }
%"class.std::__1::unique_ptr.1305" = type { %"class.std::__1::__compressed_pair.1306" }
%"class.std::__1::__compressed_pair.1306" = type { %"struct.std::__1::__compressed_pair_elem.1307" }
%"struct.std::__1::__compressed_pair_elem.1307" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1311" = type { %"class.std::__1::__compressed_pair.1312" }
%"class.std::__1::__compressed_pair.1312" = type { %"struct.std::__1::__compressed_pair_elem.1313" }
%"struct.std::__1::__compressed_pair_elem.1313" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1314, %class.scoped_refptr.1314, %class.scoped_refptr.1314, %class.scoped_refptr.1314, %class.scoped_refptr.1314, %class.scoped_refptr.1314, %class.scoped_refptr.1349, %class.scoped_refptr.1363, %class.scoped_refptr.1364, %class.scoped_refptr.1364, %class.scoped_refptr.1364, %class.scoped_refptr.1364, %class.scoped_refptr.1364, %class.scoped_refptr.1364, %class.scoped_refptr.1404, %class.scoped_refptr.1405, %class.scoped_refptr.1405, %class.scoped_refptr.1405, %class.scoped_refptr.1405, %class.scoped_refptr.1405, %class.scoped_refptr.1405, %class.scoped_refptr.1405, %class.scoped_refptr.1405, %class.scoped_refptr.1428 }
%class.scoped_refptr.1314 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1331" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1315", i8, i8, %class.scoped_refptr.1317, i32, i32 }
%"class.WTF::RefCounted.1315" = type { %"class.base::RefCounted.1316" }
%"class.base::RefCounted.1316" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1317 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1324, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1325", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1318" }
%"class.std::__1::unique_ptr.1318" = type { %"class.std::__1::__compressed_pair.1319" }
%"class.std::__1::__compressed_pair.1319" = type { %"struct.std::__1::__compressed_pair_elem.1320" }
%"struct.std::__1::__compressed_pair_elem.1320" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.1324 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1350", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1350" = type { %"class.WTF::RefCounted.1351", i8, i8, %class.scoped_refptr.1324, i32, i32 }
%"class.WTF::RefCounted.1351" = type { %"class.base::RefCounted.1352" }
%"class.base::RefCounted.1352" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1353" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1353" = type { %"class.absl::optional_internal::optional_data.1354" }
%"class.absl::optional_internal::optional_data.1354" = type { %"class.absl::optional_internal::optional_data_base.1355" }
%"class.absl::optional_internal::optional_data_base.1355" = type { %"class.absl::optional_internal::optional_data_dtor_base.1356" }
%"class.absl::optional_internal::optional_data_dtor_base.1356" = type { i8, %union.anon.1357 }
%union.anon.1357 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1358" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.1358" = type { %"struct.std::__1::__compressed_pair_elem.1359" }
%"struct.std::__1::__compressed_pair_elem.1359" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1325" = type { %"class.std::__1::__compressed_pair.1326" }
%"class.std::__1::__compressed_pair.1326" = type { %"struct.std::__1::__compressed_pair_elem.1327" }
%"struct.std::__1::__compressed_pair_elem.1327" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1331" = type { %"class.std::__1::__compressed_pair.1332" }
%"class.std::__1::__compressed_pair.1332" = type { %"struct.std::__1::__compressed_pair_elem.1333" }
%"struct.std::__1::__compressed_pair_elem.1333" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1334", %"class.std::__1::unique_ptr.1340", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1334" = type { %"class.std::__1::__compressed_pair.1335" }
%"class.std::__1::__compressed_pair.1335" = type { %"struct.std::__1::__compressed_pair_elem.1336" }
%"struct.std::__1::__compressed_pair_elem.1336" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1340" = type { %"class.std::__1::__compressed_pair.1341" }
%"class.std::__1::__compressed_pair.1341" = type { %"struct.std::__1::__compressed_pair_elem.1342" }
%"struct.std::__1::__compressed_pair_elem.1342" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1349 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1363 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1364 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1365" }
%"class.blink::PaintPropertyNode.1365" = type { %"class.WTF::RefCounted.1366", i8, i8, %class.scoped_refptr.1368, i32, i32 }
%"class.WTF::RefCounted.1366" = type { %"class.base::RefCounted.1367" }
%"class.base::RefCounted.1367" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1368 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1317, %class.scoped_refptr.1369, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1391", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1369 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1406" }
%"class.blink::PaintPropertyNode.1406" = type { %"class.WTF::RefCounted.1407", i8, i8, %class.scoped_refptr.1369, i32, i32 }
%"class.WTF::RefCounted.1407" = type { %"class.base::RefCounted.1408" }
%"class.base::RefCounted.1408" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1370" }
%"class.std::__1::vector.1370" = type { %"class.std::__1::__vector_base.1371" }
%"class.std::__1::__vector_base.1371" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1386" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1372, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1379", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1372 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1373, i32, %"class.absl::optional.1374", i8, i32 }
%class.sk_sp.1373 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1374" = type { %"class.absl::optional_internal::optional_data.1375" }
%"class.absl::optional_internal::optional_data.1375" = type { %"class.absl::optional_internal::optional_data_base.1376" }
%"class.absl::optional_internal::optional_data_base.1376" = type { %"class.absl::optional_internal::optional_data_dtor_base.1377" }
%"class.absl::optional_internal::optional_data_dtor_base.1377" = type { i8, %union.anon.1378 }
%union.anon.1378 = type { %struct.SkRect }
%"class.std::__1::vector.1379" = type { %"class.std::__1::__vector_base.1380" }
%"class.std::__1::__vector_base.1380" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1381" }
%"class.std::__1::__compressed_pair.1381" = type { %"struct.std::__1::__compressed_pair_elem.1382" }
%"struct.std::__1::__compressed_pair_elem.1382" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1386" = type { %"struct.std::__1::__compressed_pair_elem.1387" }
%"struct.std::__1::__compressed_pair_elem.1387" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1391" = type { %"class.std::__1::__compressed_pair.1392" }
%"class.std::__1::__compressed_pair.1392" = type { %"struct.std::__1::__compressed_pair_elem.1393" }
%"struct.std::__1::__compressed_pair_elem.1393" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1397" }
%"class.std::__1::vector.1397" = type { %"class.std::__1::__vector_base.1398" }
%"class.std::__1::__vector_base.1398" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1399" }
%"class.std::__1::__compressed_pair.1399" = type { %"struct.std::__1::__compressed_pair_elem.1400" }
%"struct.std::__1::__compressed_pair_elem.1400" = type { i32* }
%class.scoped_refptr.1404 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1405 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1417" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1317, %"class.absl::optional.1409", %class.scoped_refptr.1414, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1409" = type { %"class.absl::optional_internal::optional_data.1410" }
%"class.absl::optional_internal::optional_data.1410" = type { %"class.absl::optional_internal::optional_data_base.1411" }
%"class.absl::optional_internal::optional_data_base.1411" = type { %"class.absl::optional_internal::optional_data_dtor_base.1412" }
%"class.absl::optional_internal::optional_data_dtor_base.1412" = type { i8, [3 x i8], %union.anon.1413 }
%union.anon.1413 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1417" = type { %"class.std::__1::__compressed_pair.1418" }
%"class.std::__1::__compressed_pair.1418" = type { %"struct.std::__1::__compressed_pair_elem.1419" }
%"struct.std::__1::__compressed_pair_elem.1419" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1420", i32, [4 x i8] }>
%"class.WTF::Vector.1420" = type { %"class.WTF::VectorBuffer.1421" }
%"class.WTF::VectorBuffer.1421" = type { %"class.WTF::VectorBufferBase.1422" }
%"class.WTF::VectorBufferBase.1422" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1428 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1432" = type { %"class.std::__1::__compressed_pair.1433" }
%"class.std::__1::__compressed_pair.1433" = type { %"struct.std::__1::__compressed_pair_elem.1434" }
%"struct.std::__1::__compressed_pair_elem.1434" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1317, %class.scoped_refptr.1369, %class.scoped_refptr.1368 }
%"class.absl::optional.1438" = type { %"class.absl::optional_internal::optional_data.1439" }
%"class.absl::optional_internal::optional_data.1439" = type { %"class.absl::optional_internal::optional_data_base.1440" }
%"class.absl::optional_internal::optional_data_base.1440" = type { %"class.absl::optional_internal::optional_data_dtor_base.1441" }
%"class.absl::optional_internal::optional_data_dtor_base.1441" = type { i8, %union.anon.1442 }
%union.anon.1442 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1414 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1415", [4 x i8] }
%"class.WTF::RefCounted.1415" = type { %"class.base::RefCounted.1416" }
%"class.base::RefCounted.1416" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1443" = type { %"class.std::__1::__compressed_pair.1444" }
%"class.std::__1::__compressed_pair.1444" = type { %"struct.std::__1::__compressed_pair_elem.1445" }
%"struct.std::__1::__compressed_pair_elem.1445" = type { %"class.blink::FragmentData"* }
%"class.blink::Member.2257" = type { %"class.blink::MemberBase.2258" }
%"class.blink::MemberBase.2258" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2259" = type { %"class.WTF::HashSet.2262" }
%"class.WTF::HashSet.2262" = type { %"class.WTF::HashTable.2263" }
%"class.WTF::HashTable.2263" = type <{ %"class.blink::Member.2265"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2265" = type opaque
%"class.blink::HeapHashSet.2266" = type { %"class.WTF::HashSet.2269" }
%"class.WTF::HashSet.2269" = type { %"class.WTF::HashTable.2270" }
%"class.WTF::HashTable.2270" = type <{ %"class.blink::Member.2272"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2272" = type { %"class.blink::MemberBase.2273" }
%"class.blink::MemberBase.2273" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2445", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2456", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.87" }
%"class.blink::Member.2445" = type { %"class.blink::MemberBase.2446" }
%"class.blink::MemberBase.2446" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2447", %"class.blink::Member.2448", %"class.blink::Member.2450", %"class.blink::Member.2452", %"class.blink::Member.2454", %"class.WTF::Vector.167", i16, %class.scoped_refptr.1530 }
%"class.blink::ThreadState::PrefinalizerRegistration.2447" = type { i8 }
%"class.blink::Member.2448" = type { %"class.blink::MemberBase.2449" }
%"class.blink::MemberBase.2449" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2450" = type { %"class.blink::MemberBase.2451" }
%"class.blink::MemberBase.2451" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2452" = type { %"class.blink::MemberBase.2453" }
%"class.blink::MemberBase.2453" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2454" = type { %"class.blink::MemberBase.2455" }
%"class.blink::MemberBase.2455" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.2456" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2457", { i64, i64 } }
%"class.blink::WeakMember.2457" = type { %"class.blink::MemberBase.2273" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.2274" = type { %"class.std::__1::__compressed_pair.2275" }
%"class.std::__1::__compressed_pair.2275" = type { %"struct.std::__1::__compressed_pair_elem.2276" }
%"struct.std::__1::__compressed_pair_elem.2276" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2280" = type { %"class.blink::MemberBase.2281" }
%"class.blink::MemberBase.2281" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2284", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2284" = type { %"class.WTF::HashTable.2285" }
%"class.WTF::HashTable.2285" = type <{ %"struct.WTF::KeyValuePair.2287"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2287" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2288", i32, i32 }
%"class.WTF::Vector.2288" = type { %"class.WTF::VectorBuffer.2289" }
%"class.WTF::VectorBuffer.2289" = type { %"class.WTF::VectorBufferBase.2290" }
%"class.WTF::VectorBufferBase.2290" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2292" = type { %"class.WTF::LinkedHashSet.2295" }
%"class.WTF::LinkedHashSet.2295" = type { %"class.WTF::HashMap.2296", %"class.WTF::VectorBackedLinkedList.2300" }
%"class.WTF::HashMap.2296" = type { %"class.WTF::HashTable.2297" }
%"class.WTF::HashTable.2297" = type <{ %"struct.WTF::KeyValuePair.2299"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2299" = type opaque
%"class.WTF::VectorBackedLinkedList.2300" = type { %"class.WTF::Vector.2301", i32, i32 }
%"class.WTF::Vector.2301" = type { %"class.WTF::VectorBuffer.2302" }
%"class.WTF::VectorBuffer.2302" = type { %"class.WTF::VectorBufferBase.2303" }
%"class.WTF::VectorBufferBase.2303" = type { %"class.WTF::VectorBackedLinkedListNode.2304"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2304" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2306" = type { %"class.std::__1::__compressed_pair.2307" }
%"class.std::__1::__compressed_pair.2307" = type { %"struct.std::__1::__compressed_pair_elem.2308" }
%"struct.std::__1::__compressed_pair_elem.2308" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2312" = type { %"class.std::__1::__compressed_pair.2313" }
%"class.std::__1::__compressed_pair.2313" = type { %"struct.std::__1::__compressed_pair_elem.2314" }
%"struct.std::__1::__compressed_pair_elem.2314" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2315, %class.scoped_refptr.2315, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2370", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2375", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2315 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2316", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2323" }
%"class.WTF::RefCounted.2316" = type { %"class.base::RefCounted.2317" }
%"class.base::RefCounted.2317" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2318", i32, [4 x i8] }>
%"class.WTF::Vector.2318" = type { %"class.WTF::VectorBuffer.2319" }
%"class.WTF::VectorBuffer.2319" = type { %"class.WTF::VectorBufferBase.2320" }
%"class.WTF::VectorBufferBase.2320" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2323" = type { %"class.WTF::VectorBuffer.2324" }
%"class.WTF::VectorBuffer.2324" = type { %"class.WTF::VectorBufferBase.2325" }
%"class.WTF::VectorBufferBase.2325" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2326", %"class.std::__1::unique_ptr.2342", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2326" = type { %"class.std::__1::__compressed_pair.2327" }
%"class.std::__1::__compressed_pair.2327" = type { %"struct.std::__1::__compressed_pair_elem.2328" }
%"struct.std::__1::__compressed_pair_elem.2328" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2329", %"class.WTF::Vector.2334", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2329" = type { %"class.WTF::VectorBuffer.2330" }
%"class.WTF::VectorBuffer.2330" = type { %"class.WTF::VectorBufferBase.2331" }
%"class.WTF::VectorBufferBase.2331" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2334" = type { %"class.WTF::VectorBuffer.2335" }
%"class.WTF::VectorBuffer.2335" = type { %"class.WTF::VectorBufferBase.2336" }
%"class.WTF::VectorBufferBase.2336" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.2342" = type { %"class.std::__1::__compressed_pair.2343" }
%"class.std::__1::__compressed_pair.2343" = type { %"struct.std::__1::__compressed_pair_elem.2344" }
%"struct.std::__1::__compressed_pair_elem.2344" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2345", %"class.absl::optional.2345" }
%"class.absl::optional.2345" = type { %"class.absl::optional_internal::optional_data.2346" }
%"class.absl::optional_internal::optional_data.2346" = type { %"class.absl::optional_internal::optional_data_base.2347" }
%"class.absl::optional_internal::optional_data_base.2347" = type { %"class.absl::optional_internal::optional_data_dtor_base.2348" }
%"class.absl::optional_internal::optional_data_dtor_base.2348" = type { i8, [3 x i8], %union.anon.2349 }
%union.anon.2349 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2323"*, %"class.absl::optional.2355", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2355" = type { %"class.absl::optional_internal::optional_data.2356" }
%"class.absl::optional_internal::optional_data.2356" = type { %"class.absl::optional_internal::optional_data_base.2357" }
%"class.absl::optional_internal::optional_data_base.2357" = type { %"class.absl::optional_internal::optional_data_dtor_base.2358" }
%"class.absl::optional_internal::optional_data_dtor_base.2358" = type { i8, %union.anon.2359 }
%union.anon.2359 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2360", %"class.WTF::Vector.2365" }
%"class.WTF::Vector.2360" = type { %"class.WTF::VectorBuffer.2361" }
%"class.WTF::VectorBuffer.2361" = type { %"class.WTF::VectorBufferBase.2362", [128 x i8] }
%"class.WTF::VectorBufferBase.2362" = type { i32*, i32, i32 }
%"class.WTF::Vector.2365" = type { %"class.WTF::VectorBuffer.2366" }
%"class.WTF::VectorBuffer.2366" = type { %"class.WTF::VectorBufferBase.2367", [128 x i8] }
%"class.WTF::VectorBufferBase.2367" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2370" = type { %"class.WTF::VectorBuffer.2371" }
%"class.WTF::VectorBuffer.2371" = type { %"class.WTF::VectorBufferBase.2372" }
%"class.WTF::VectorBufferBase.2372" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2375" = type { %"class.WTF::HashTable.2376" }
%"class.WTF::HashTable.2376" = type <{ %"struct.WTF::KeyValuePair.2379"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2379" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2380", %"class.WTF::Vector.2385" }
%"class.WTF::HashMap.2380" = type { %"class.WTF::HashTable.2381" }
%"class.WTF::HashTable.2381" = type <{ %"struct.WTF::KeyValuePair.2384"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2384" = type opaque
%"class.WTF::Vector.2385" = type { %"class.WTF::VectorBuffer.2386" }
%"class.WTF::VectorBuffer.2386" = type { %"class.WTF::VectorBufferBase.2387" }
%"class.WTF::VectorBufferBase.2387" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2393" = type { %"class.std::__1::__compressed_pair.2394" }
%"class.std::__1::__compressed_pair.2394" = type { %"struct.std::__1::__compressed_pair_elem.2395" }
%"struct.std::__1::__compressed_pair_elem.2395" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2399" = type { %"class.WTF::VectorBuffer.2400" }
%"class.WTF::VectorBuffer.2400" = type { %"class.WTF::VectorBufferBase.2401" }
%"class.WTF::VectorBufferBase.2401" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2404 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2405" = type { %"class.blink::MemberBase.2406" }
%"class.blink::MemberBase.2406" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2407" = type { %"class.blink::MemberBase.2408" }
%"class.blink::MemberBase.2408" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2409" = type { %"class.blink::MemberBase.2410" }
%"class.blink::MemberBase.2410" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2411" = type { %"class.WTF::HashSet.2414" }
%"class.WTF::HashSet.2414" = type { %"class.WTF::HashTable.2415" }
%"class.WTF::HashTable.2415" = type <{ %"class.blink::WeakMember.2417"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2417" = type opaque
%"class.blink::HeapHashSet.2418" = type { %"class.WTF::HashSet.2421" }
%"class.WTF::HashSet.2421" = type { %"class.WTF::HashTable.2422" }
%"class.WTF::HashTable.2422" = type <{ %"class.blink::WeakMember.2424"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2424" = type opaque
%"class.std::__1::unique_ptr.2425" = type { %"class.std::__1::__compressed_pair.2426" }
%"class.std::__1::__compressed_pair.2426" = type { %"struct.std::__1::__compressed_pair_elem.2427" }
%"struct.std::__1::__compressed_pair_elem.2427" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2428" }
%"class.base::time_internal::TimeBase.2428" = type { i64 }
%"class.std::__1::unique_ptr.2432" = type { %"class.std::__1::__compressed_pair.2433" }
%"class.std::__1::__compressed_pair.2433" = type { %"struct.std::__1::__compressed_pair_elem.2434" }
%"struct.std::__1::__compressed_pair_elem.2434" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2435", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2435" = type { %"class.absl::optional_internal::optional_data.2436" }
%"class.absl::optional_internal::optional_data.2436" = type { %"class.absl::optional_internal::optional_data_base.2437" }
%"class.absl::optional_internal::optional_data_base.2437" = type { %"class.absl::optional_internal::optional_data_dtor_base.2438" }
%"class.absl::optional_internal::optional_data_dtor_base.2438" = type { i8, %union.anon.2439 }
%union.anon.2439 = type { %"class.base::Time" }
%"class.blink::Member.1847" = type { %"class.blink::MemberBase.1848" }
%"class.blink::MemberBase.1848" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1849" = type { %"class.blink::MemberBase.1850" }
%"class.blink::MemberBase.1850" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1851" = type { %"class.blink::MemberBase.1852" }
%"class.blink::MemberBase.1852" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1853" = type { %"class.blink::MemberBase.1854" }
%"class.blink::MemberBase.1854" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type { %"class.blink::Member.677" }
%"class.blink::Member.1857" = type { %"class.blink::MemberBase.1858" }
%"class.blink::MemberBase.1858" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.1868", %"class.blink::HeapListHashSet.1879", %"class.blink::HeapListHashSet.1890", %"class.blink::HeapListHashSet.1901", %"class.blink::HeapListHashSet.1912", %"class.blink::HeapListHashSet.1923", %"class.blink::HeapListHashSet.1934", %"class.blink::HeapListHashSet.1945", %"class.blink::HeapListHashSet.1956", %"class.blink::HeapListHashSet.1967", %"class.blink::HeapListHashSet.1978", %"class.blink::HeapListHashSet.1989", %"class.blink::HeapListHashSet.2000", %"class.blink::HeapListHashSet.2011", %"class.blink::HeapListHashSet.2022", %"class.blink::HeapListHashSet.2033", %"class.blink::HeapListHashSet.2044", %"class.blink::HeapListHashSet.2055", %"class.blink::HeapListHashSet.2066" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1864", %"class.blink::Member.1866", %"class.blink::Member.1866", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1864" = type <{ %"class.blink::Member.1866"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1866" = type { %"class.blink::MemberBase.1867" }
%"class.blink::MemberBase.1867" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.2080", %"class.blink::Member.1866", %"class.blink::Member.1866" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.1868" = type { %"class.WTF::ListHashSet.base.1878", [7 x i8] }
%"class.WTF::ListHashSet.base.1878" = type <{ %"class.WTF::HashTable.1873", %"class.blink::Member.1875", %"class.blink::Member.1875", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1873" = type <{ %"class.blink::Member.1875"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1875" = type { %"class.blink::MemberBase.1876" }
%"class.blink::MemberBase.1876" = type { %"class.blink::HeapListHashSetNode.1877"* }
%"class.blink::HeapListHashSetNode.1877" = type { %"class.blink::Member.2224", %"class.blink::Member.1875", %"class.blink::Member.1875" }
%"class.blink::Member.2224" = type { %"class.blink::MemberBase.2225" }
%"class.blink::MemberBase.2225" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.1879" = type { %"class.WTF::ListHashSet.base.1889", [7 x i8] }
%"class.WTF::ListHashSet.base.1889" = type <{ %"class.WTF::HashTable.1884", %"class.blink::Member.1886", %"class.blink::Member.1886", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1884" = type <{ %"class.blink::Member.1886"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1886" = type { %"class.blink::MemberBase.1887" }
%"class.blink::MemberBase.1887" = type { %"class.blink::HeapListHashSetNode.1888"* }
%"class.blink::HeapListHashSetNode.1888" = type { %"class.blink::Member.2220", %"class.blink::Member.1886", %"class.blink::Member.1886" }
%"class.blink::Member.2220" = type { %"class.blink::MemberBase.2221" }
%"class.blink::MemberBase.2221" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.1890" = type { %"class.WTF::ListHashSet.base.1900", [7 x i8] }
%"class.WTF::ListHashSet.base.1900" = type <{ %"class.WTF::HashTable.1895", %"class.blink::Member.1897", %"class.blink::Member.1897", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1895" = type <{ %"class.blink::Member.1897"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1897" = type { %"class.blink::MemberBase.1898" }
%"class.blink::MemberBase.1898" = type { %"class.blink::HeapListHashSetNode.1899"* }
%"class.blink::HeapListHashSetNode.1899" = type { %"class.blink::Member.2216", %"class.blink::Member.1897", %"class.blink::Member.1897" }
%"class.blink::Member.2216" = type { %"class.blink::MemberBase.2217" }
%"class.blink::MemberBase.2217" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.1901" = type { %"class.WTF::ListHashSet.base.1911", [7 x i8] }
%"class.WTF::ListHashSet.base.1911" = type <{ %"class.WTF::HashTable.1906", %"class.blink::Member.1908", %"class.blink::Member.1908", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1906" = type <{ %"class.blink::Member.1908"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1908" = type { %"class.blink::MemberBase.1909" }
%"class.blink::MemberBase.1909" = type { %"class.blink::HeapListHashSetNode.1910"* }
%"class.blink::HeapListHashSetNode.1910" = type { %"class.blink::Member.2212", %"class.blink::Member.1908", %"class.blink::Member.1908" }
%"class.blink::Member.2212" = type { %"class.blink::MemberBase.2213" }
%"class.blink::MemberBase.2213" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.1912" = type { %"class.WTF::ListHashSet.base.1922", [7 x i8] }
%"class.WTF::ListHashSet.base.1922" = type <{ %"class.WTF::HashTable.1917", %"class.blink::Member.1919", %"class.blink::Member.1919", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1917" = type <{ %"class.blink::Member.1919"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1919" = type { %"class.blink::MemberBase.1920" }
%"class.blink::MemberBase.1920" = type { %"class.blink::HeapListHashSetNode.1921"* }
%"class.blink::HeapListHashSetNode.1921" = type { %"class.blink::Member.2208", %"class.blink::Member.1919", %"class.blink::Member.1919" }
%"class.blink::Member.2208" = type { %"class.blink::MemberBase.2209" }
%"class.blink::MemberBase.2209" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.1923" = type { %"class.WTF::ListHashSet.base.1933", [7 x i8] }
%"class.WTF::ListHashSet.base.1933" = type <{ %"class.WTF::HashTable.1928", %"class.blink::Member.1930", %"class.blink::Member.1930", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1928" = type <{ %"class.blink::Member.1930"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1930" = type { %"class.blink::MemberBase.1931" }
%"class.blink::MemberBase.1931" = type { %"class.blink::HeapListHashSetNode.1932"* }
%"class.blink::HeapListHashSetNode.1932" = type { %"class.blink::Member.2204", %"class.blink::Member.1930", %"class.blink::Member.1930" }
%"class.blink::Member.2204" = type { %"class.blink::MemberBase.2205" }
%"class.blink::MemberBase.2205" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.1934" = type { %"class.WTF::ListHashSet.base.1944", [7 x i8] }
%"class.WTF::ListHashSet.base.1944" = type <{ %"class.WTF::HashTable.1939", %"class.blink::Member.1941", %"class.blink::Member.1941", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1939" = type <{ %"class.blink::Member.1941"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1941" = type { %"class.blink::MemberBase.1942" }
%"class.blink::MemberBase.1942" = type { %"class.blink::HeapListHashSetNode.1943"* }
%"class.blink::HeapListHashSetNode.1943" = type { %"class.blink::Member.2200", %"class.blink::Member.1941", %"class.blink::Member.1941" }
%"class.blink::Member.2200" = type { %"class.blink::MemberBase.2201" }
%"class.blink::MemberBase.2201" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.1945" = type { %"class.WTF::ListHashSet.base.1955", [7 x i8] }
%"class.WTF::ListHashSet.base.1955" = type <{ %"class.WTF::HashTable.1950", %"class.blink::Member.1952", %"class.blink::Member.1952", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1950" = type <{ %"class.blink::Member.1952"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1952" = type { %"class.blink::MemberBase.1953" }
%"class.blink::MemberBase.1953" = type { %"class.blink::HeapListHashSetNode.1954"* }
%"class.blink::HeapListHashSetNode.1954" = type { %"class.blink::Member.2196", %"class.blink::Member.1952", %"class.blink::Member.1952" }
%"class.blink::Member.2196" = type { %"class.blink::MemberBase.2197" }
%"class.blink::MemberBase.2197" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.1956" = type { %"class.WTF::ListHashSet.base.1966", [7 x i8] }
%"class.WTF::ListHashSet.base.1966" = type <{ %"class.WTF::HashTable.1961", %"class.blink::Member.1963", %"class.blink::Member.1963", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1961" = type <{ %"class.blink::Member.1963"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1963" = type { %"class.blink::MemberBase.1964" }
%"class.blink::MemberBase.1964" = type { %"class.blink::HeapListHashSetNode.1965"* }
%"class.blink::HeapListHashSetNode.1965" = type { %"class.blink::Member.2192", %"class.blink::Member.1963", %"class.blink::Member.1963" }
%"class.blink::Member.2192" = type { %"class.blink::MemberBase.2193" }
%"class.blink::MemberBase.2193" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.1967" = type { %"class.WTF::ListHashSet.base.1977", [7 x i8] }
%"class.WTF::ListHashSet.base.1977" = type <{ %"class.WTF::HashTable.1972", %"class.blink::Member.1974", %"class.blink::Member.1974", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1972" = type <{ %"class.blink::Member.1974"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1974" = type { %"class.blink::MemberBase.1975" }
%"class.blink::MemberBase.1975" = type { %"class.blink::HeapListHashSetNode.1976"* }
%"class.blink::HeapListHashSetNode.1976" = type { %"class.blink::Member.2084", %"class.blink::Member.1974", %"class.blink::Member.1974" }
%"class.blink::HeapListHashSet.1978" = type { %"class.WTF::ListHashSet.base.1988", [7 x i8] }
%"class.WTF::ListHashSet.base.1988" = type <{ %"class.WTF::HashTable.1983", %"class.blink::Member.1985", %"class.blink::Member.1985", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1983" = type <{ %"class.blink::Member.1985"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1985" = type { %"class.blink::MemberBase.1986" }
%"class.blink::MemberBase.1986" = type { %"class.blink::HeapListHashSetNode.1987"* }
%"class.blink::HeapListHashSetNode.1987" = type { %"class.blink::Member.2186", %"class.blink::Member.1985", %"class.blink::Member.1985" }
%"class.blink::Member.2186" = type { %"class.blink::MemberBase.2187" }
%"class.blink::MemberBase.2187" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.1989" = type { %"class.WTF::ListHashSet.base.1999", [7 x i8] }
%"class.WTF::ListHashSet.base.1999" = type <{ %"class.WTF::HashTable.1994", %"class.blink::Member.1996", %"class.blink::Member.1996", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1994" = type <{ %"class.blink::Member.1996"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1996" = type { %"class.blink::MemberBase.1997" }
%"class.blink::MemberBase.1997" = type { %"class.blink::HeapListHashSetNode.1998"* }
%"class.blink::HeapListHashSetNode.1998" = type { %"class.blink::Member.2182", %"class.blink::Member.1996", %"class.blink::Member.1996" }
%"class.blink::Member.2182" = type { %"class.blink::MemberBase.2183" }
%"class.blink::MemberBase.2183" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2000" = type { %"class.WTF::ListHashSet.base.2010", [7 x i8] }
%"class.WTF::ListHashSet.base.2010" = type <{ %"class.WTF::HashTable.2005", %"class.blink::Member.2007", %"class.blink::Member.2007", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2005" = type <{ %"class.blink::Member.2007"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2007" = type { %"class.blink::MemberBase.2008" }
%"class.blink::MemberBase.2008" = type { %"class.blink::HeapListHashSetNode.2009"* }
%"class.blink::HeapListHashSetNode.2009" = type { %"class.blink::Member.2178", %"class.blink::Member.2007", %"class.blink::Member.2007" }
%"class.blink::Member.2178" = type { %"class.blink::MemberBase.2179" }
%"class.blink::MemberBase.2179" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2011" = type { %"class.WTF::ListHashSet.base.2021", [7 x i8] }
%"class.WTF::ListHashSet.base.2021" = type <{ %"class.WTF::HashTable.2016", %"class.blink::Member.2018", %"class.blink::Member.2018", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2016" = type <{ %"class.blink::Member.2018"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2018" = type { %"class.blink::MemberBase.2019" }
%"class.blink::MemberBase.2019" = type { %"class.blink::HeapListHashSetNode.2020"* }
%"class.blink::HeapListHashSetNode.2020" = type { %"class.blink::Member.2174", %"class.blink::Member.2018", %"class.blink::Member.2018" }
%"class.blink::Member.2174" = type { %"class.blink::MemberBase.2175" }
%"class.blink::MemberBase.2175" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2022" = type { %"class.WTF::ListHashSet.base.2032", [7 x i8] }
%"class.WTF::ListHashSet.base.2032" = type <{ %"class.WTF::HashTable.2027", %"class.blink::Member.2029", %"class.blink::Member.2029", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2027" = type <{ %"class.blink::Member.2029"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2029" = type { %"class.blink::MemberBase.2030" }
%"class.blink::MemberBase.2030" = type { %"class.blink::HeapListHashSetNode.2031"* }
%"class.blink::HeapListHashSetNode.2031" = type { %"class.blink::Member.2170", %"class.blink::Member.2029", %"class.blink::Member.2029" }
%"class.blink::Member.2170" = type { %"class.blink::MemberBase.2171" }
%"class.blink::MemberBase.2171" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2033" = type { %"class.WTF::ListHashSet.base.2043", [7 x i8] }
%"class.WTF::ListHashSet.base.2043" = type <{ %"class.WTF::HashTable.2038", %"class.blink::Member.2040", %"class.blink::Member.2040", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2038" = type <{ %"class.blink::Member.2040"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2040" = type { %"class.blink::MemberBase.2041" }
%"class.blink::MemberBase.2041" = type { %"class.blink::HeapListHashSetNode.2042"* }
%"class.blink::HeapListHashSetNode.2042" = type { %"class.blink::Member.2166", %"class.blink::Member.2040", %"class.blink::Member.2040" }
%"class.blink::Member.2166" = type { %"class.blink::MemberBase.2167" }
%"class.blink::MemberBase.2167" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2044" = type { %"class.WTF::ListHashSet.base.2054", [7 x i8] }
%"class.WTF::ListHashSet.base.2054" = type <{ %"class.WTF::HashTable.2049", %"class.blink::Member.2051", %"class.blink::Member.2051", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2049" = type <{ %"class.blink::Member.2051"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2051" = type { %"class.blink::MemberBase.2052" }
%"class.blink::MemberBase.2052" = type { %"class.blink::HeapListHashSetNode.2053"* }
%"class.blink::HeapListHashSetNode.2053" = type { %"class.blink::Member.2162", %"class.blink::Member.2051", %"class.blink::Member.2051" }
%"class.blink::Member.2162" = type { %"class.blink::MemberBase.2163" }
%"class.blink::MemberBase.2163" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2055" = type { %"class.WTF::ListHashSet.base.2065", [7 x i8] }
%"class.WTF::ListHashSet.base.2065" = type <{ %"class.WTF::HashTable.2060", %"class.blink::Member.2062", %"class.blink::Member.2062", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2060" = type <{ %"class.blink::Member.2062"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2062" = type { %"class.blink::MemberBase.2063" }
%"class.blink::MemberBase.2063" = type { %"class.blink::HeapListHashSetNode.2064"* }
%"class.blink::HeapListHashSetNode.2064" = type { %"class.blink::Member.2086", %"class.blink::Member.2062", %"class.blink::Member.2062" }
%"class.blink::HeapListHashSet.2066" = type { %"class.WTF::ListHashSet.base.2076", [7 x i8] }
%"class.WTF::ListHashSet.base.2076" = type <{ %"class.WTF::HashTable.2071", %"class.blink::Member.2073", %"class.blink::Member.2073", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2071" = type <{ %"class.blink::Member.2073"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2073" = type { %"class.blink::MemberBase.2074" }
%"class.blink::MemberBase.2074" = type { %"class.blink::HeapListHashSetNode.2075"* }
%"class.blink::HeapListHashSetNode.2075" = type { %"class.blink::Member.2078", %"class.blink::Member.2073", %"class.blink::Member.2073" }
%class.scoped_refptr.2077 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2078" = type { %"class.blink::MemberBase.2079" }
%"class.blink::MemberBase.2079" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2080" = type { %"class.blink::MemberBase.2081" }
%"class.blink::MemberBase.2081" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2082" = type { %"class.blink::MemberBase.2083" }
%"class.blink::MemberBase.2083" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2084" = type { %"class.blink::MemberBase.2085" }
%"class.blink::MemberBase.2085" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2086" = type { %"class.blink::MemberBase.2087" }
%"class.blink::MemberBase.2087" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2090" = type { %"class.blink::MemberBase.2091" }
%"class.blink::MemberBase.2091" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2092" = type { %"class.blink::MemberBase.2093" }
%"class.blink::MemberBase.2093" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.2094" = type { %"class.blink::Member.2095" }
%"class.blink::Member.2095" = type { %"class.blink::MemberBase.2096" }
%"class.blink::MemberBase.2096" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2580" }
%"class.mojo::Remote.2580" = type { %"class.mojo::internal::InterfacePtrState.2581" }
%"class.mojo::internal::InterfacePtrState.2581" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2582" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.207, %"class.std::__1::unique_ptr.326", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.209, i32 }>
%class.scoped_refptr.207 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.209, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.288", %"class.absl::optional.293", %"class.absl::optional.249", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.317", i8, [7 x i8], %class.scoped_refptr.209, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.208" }>
%"class.base::RefCountedThreadSafe.208" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.221", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.209, %"class.std::__1::unique_ptr.234", %"class.absl::optional", %"struct.std::__1::atomic.245", i8, i8, i8, i8, i32, i32, %"class.absl::optional.249", %"class.std::__1::unique_ptr.254", i8, i64, %class.scoped_refptr.284, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.287" }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.209, i8, %"class.mojo::ScopedHandleBase.237", %class.scoped_refptr.238, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.239" }
%"class.mojo::ScopedHandleBase.237" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.238 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.239" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.243 }
%union.anon.243 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.244", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.244" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.257", i8, i64, %class.scoped_refptr.258, %class.scoped_refptr.280 }
%"class.base::RepeatingCallback.257" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.258 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.259", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.269", i8, [7 x i8] }>
%"class.base::RefCounted.259" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.260 }
%class.scoped_refptr.260 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"class.std::__1::map.269" = type { %"class.std::__1::__tree.270" }
%"class.std::__1::__tree.270" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.271", %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%class.scoped_refptr.280 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.284 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.285 }
%class.scoped_refptr.285 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2458", [4 x i8], %"class.base::RepeatingCallback.329", %class.scoped_refptr.209, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2458" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.287" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.288" = type { %"class.absl::optional_internal::optional_data.289" }
%"class.absl::optional_internal::optional_data.289" = type { %"class.absl::optional_internal::optional_data_base.290" }
%"class.absl::optional_internal::optional_data_base.290" = type { %"class.absl::optional_internal::optional_data_dtor_base.291" }
%"class.absl::optional_internal::optional_data_dtor_base.291" = type { i8, %union.anon.292 }
%union.anon.292 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.293" = type { %"class.absl::optional_internal::optional_data.294" }
%"class.absl::optional_internal::optional_data.294" = type { %"class.absl::optional_internal::optional_data_base.295" }
%"class.absl::optional_internal::optional_data_base.295" = type { %"class.absl::optional_internal::optional_data_dtor_base.296" }
%"class.absl::optional_internal::optional_data_dtor_base.296" = type { i8, [7 x i8], %union.anon.297 }
%union.anon.297 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.249" = type { %"class.absl::optional_internal::optional_data.250" }
%"class.absl::optional_internal::optional_data.250" = type { %"class.absl::optional_internal::optional_data_base.251" }
%"class.absl::optional_internal::optional_data_base.251" = type { %"class.absl::optional_internal::optional_data_dtor_base.252" }
%"class.absl::optional_internal::optional_data_dtor_base.252" = type { i8, %union.anon.253 }
%union.anon.253 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.302 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.302 = type { %"class.std::__1::map.305" }
%"class.std::__1::map.305" = type { %"class.std::__1::__tree.306" }
%"class.std::__1::__tree.306" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.307", %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.316"*, i64 }
%"class.std::__1::unique_ptr.316" = type opaque
%"class.std::__1::map.317" = type { %"class.std::__1::__tree.318" }
%"class.std::__1::__tree.318" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.319", %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.329", %"class.base::OnceCallback.330", %"class.absl::optional.331", %"class.absl::optional.336", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.343", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.351", %"class.std::__1::map.362", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.371", i8, %class.scoped_refptr.209, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.372" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.330" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.331" = type { %"class.absl::optional_internal::optional_data.332" }
%"class.absl::optional_internal::optional_data.332" = type { %"class.absl::optional_internal::optional_data_base.333" }
%"class.absl::optional_internal::optional_data_base.333" = type { %"class.absl::optional_internal::optional_data_dtor_base.334" }
%"class.absl::optional_internal::optional_data_dtor_base.334" = type { i8, %union.anon.335 }
%union.anon.335 = type { %"class.base::TimeDelta" }
%"class.absl::optional.336" = type { %"class.absl::optional_internal::optional_data.337" }
%"class.absl::optional_internal::optional_data.337" = type { %"class.absl::optional_internal::optional_data_base.338" }
%"class.absl::optional_internal::optional_data_base.338" = type { %"class.absl::optional_internal::optional_data_dtor_base.339" }
%"class.absl::optional_internal::optional_data_dtor_base.339" = type { i8, %union.anon.340 }
%union.anon.340 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.209, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.341" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.341" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.342 }
%class.scoped_refptr.342 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.346", %class.scoped_refptr.347 }
%"class.base::RepeatingCallback.346" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.347 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.208", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.351" = type { %"class.std::__1::__tree.352" }
%"class.std::__1::__tree.352" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.353", %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"class.std::__1::map.362" = type { %"class.std::__1::__tree.363" }
%"class.std::__1::__tree.363" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.364", %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"class.base::OnceCallback.371" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.372" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.209 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.2582" = type { %"class.std::__1::__compressed_pair.2583" }
%"class.std::__1::__compressed_pair.2583" = type { %"struct.std::__1::__compressed_pair_elem.2584" }
%"struct.std::__1::__compressed_pair_elem.2584" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2097" = type { %"class.std::__1::__compressed_pair.2098" }
%"class.std::__1::__compressed_pair.2098" = type { %"struct.std::__1::__compressed_pair_elem.2099" }
%"struct.std::__1::__compressed_pair_elem.2099" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2103" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2104" = type { %"class.std::__1::__compressed_pair.2105" }
%"class.std::__1::__compressed_pair.2105" = type { %"struct.std::__1::__compressed_pair_elem.2106" }
%"struct.std::__1::__compressed_pair_elem.2106" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.2110" = type { %"class.std::__1::__compressed_pair.2111" }
%"class.std::__1::__compressed_pair.2111" = type { %"struct.std::__1::__compressed_pair_elem.2112" }
%"struct.std::__1::__compressed_pair_elem.2112" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2116" }
%"class.blink::Member.2116" = type { %"class.blink::MemberBase.2117" }
%"class.blink::MemberBase.2117" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2590" }
%"class.mojo::AssociatedRemote.2590" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2591" }
%"class.mojo::internal::AssociatedInterfacePtrState.2591" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2592" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.326", i32 }>
%"class.std::__1::unique_ptr.2592" = type { %"class.std::__1::__compressed_pair.2593" }
%"class.std::__1::__compressed_pair.2593" = type { %"struct.std::__1::__compressed_pair_elem.2594" }
%"struct.std::__1::__compressed_pair_elem.2594" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2118" = type { %"class.blink::Member.2119" }
%"class.blink::Member.2119" = type { %"class.blink::MemberBase.2120" }
%"class.blink::MemberBase.2120" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2600" }
%"class.mojo::AssociatedRemote.2600" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2601" }
%"class.mojo::internal::AssociatedInterfacePtrState.2601" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2602" }
%"class.std::__1::unique_ptr.2602" = type { %"class.std::__1::__compressed_pair.2603" }
%"class.std::__1::__compressed_pair.2603" = type { %"struct.std::__1::__compressed_pair_elem.2604" }
%"struct.std::__1::__compressed_pair_elem.2604" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2121" }
%"class.blink::Member.2121" = type { %"class.blink::MemberBase.2122" }
%"class.blink::MemberBase.2122" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2610", %"class.blink::Member.677", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2610" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2611" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.326" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2611" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2123" = type { %"class.blink::Member.2124" }
%"class.blink::Member.2124" = type { %"class.blink::MemberBase.2125" }
%"class.blink::MemberBase.2125" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2614", %"class.blink::Member.677", %"class.mojo::AssociatedReceiver.2615" }
%"class.blink::ThreadState::PrefinalizerRegistration.2614" = type { i8 }
%"class.mojo::AssociatedReceiver.2615" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2616" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2616" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2126" }
%"class.blink::Member.2126" = type { %"class.blink::MemberBase.2127" }
%"class.blink::MemberBase.2127" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2619", %"class.blink::Member.677", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2619" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.207, %"class.std::__1::unique_ptr.326", %"class.base::WeakPtrFactory.2620" }
%"class.base::WeakPtrFactory.2620" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2128" = type { %"class.blink::Member.2129" }
%"class.blink::Member.2129" = type { %"class.blink::MemberBase.2130" }
%"class.blink::MemberBase.2130" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2623", %"class.blink::Member.677", %"class.mojo::AssociatedReceiver.2624" }
%"class.blink::ThreadState::PrefinalizerRegistration.2623" = type { i8 }
%"class.mojo::AssociatedReceiver.2624" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2625" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2625" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2131" = type { %"class.blink::MemberBase.2132" }
%"class.blink::MemberBase.2132" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2133" = type { %"class.blink::MemberBase.2134" }
%"class.blink::MemberBase.2134" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2135" = type { %"class.blink::MemberBase.2136" }
%"class.blink::MemberBase.2136" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2137" = type { %"class.blink::MemberBase.2138" }
%"class.blink::MemberBase.2138" = type { %"class.blink::HeapHashMap.2139"* }
%"class.blink::HeapHashMap.2139" = type opaque
%"class.mojo::StructPtr.2140" = type { %"class.std::__1::unique_ptr.2141" }
%"class.std::__1::unique_ptr.2141" = type { %"class.std::__1::__compressed_pair.2142" }
%"class.std::__1::__compressed_pair.2142" = type { %"struct.std::__1::__compressed_pair_elem.2143" }
%"struct.std::__1::__compressed_pair_elem.2143" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2144", %"class.mojo::InlinedStructPtr.2145" }
%"class.mojo::InlinedStructPtr.2144" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2145" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2149" = type { %"class.blink::MemberBase.2150" }
%"class.blink::MemberBase.2150" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.2151" = type { %"class.absl::optional_internal::optional_data.2152" }
%"class.absl::optional_internal::optional_data.2152" = type { %"class.absl::optional_internal::optional_data_base.2153" }
%"class.absl::optional_internal::optional_data_base.2153" = type { %"class.absl::optional_internal::optional_data_dtor_base.2154" }
%"class.absl::optional_internal::optional_data_dtor_base.2154" = type { i8, %union.anon.2155 }
%union.anon.2155 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.196", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.1780" }
%"class.base::internal::flat_tree.1780" = type { %"class.std::__1::vector.1781" }
%"class.std::__1::vector.1781" = type { %"class.std::__1::__vector_base.1782" }
%"class.std::__1::__vector_base.1782" = type { %"struct.std::__1::pair.1783"*, %"struct.std::__1::pair.1783"*, %"class.std::__1::__compressed_pair.1784" }
%"struct.std::__1::pair.1783" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1784" = type { %"struct.std::__1::__compressed_pair_elem.1785" }
%"struct.std::__1::__compressed_pair_elem.1785" = type { %"struct.std::__1::pair.1783"* }
%"class.blink::Member.1789" = type { %"class.blink::MemberBase.1790" }
%"class.blink::MemberBase.1790" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.1791" = type { %"class.absl::optional_internal::optional_data.1792" }
%"class.absl::optional_internal::optional_data.1792" = type { %"class.absl::optional_internal::optional_data_base.1793" }
%"class.absl::optional_internal::optional_data_base.1793" = type { %"class.absl::optional_internal::optional_data_dtor_base.1794" }
%"class.absl::optional_internal::optional_data_dtor_base.1794" = type { i8, %union.anon.1795 }
%union.anon.1795 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.1796" = type { %"class.absl::optional_internal::optional_data.1797" }
%"class.absl::optional_internal::optional_data.1797" = type { %"class.absl::optional_internal::optional_data_base.1798" }
%"class.absl::optional_internal::optional_data_base.1798" = type { %"class.absl::optional_internal::optional_data_dtor_base.1799" }
%"class.absl::optional_internal::optional_data_dtor_base.1799" = type { i8, %union.anon.1800 }
%union.anon.1800 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1801" }
%"class.blink::HeapHashSet.1801" = type { %"class.WTF::HashSet.1804" }
%"class.WTF::HashSet.1804" = type { %"class.WTF::HashTable.1805" }
%"class.WTF::HashTable.1805" = type <{ %"class.blink::WeakMember.1807"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1807" = type opaque
%"class.blink::Member.198" = type { %"class.blink::MemberBase.199" }
%"class.blink::MemberBase.199" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.200" = type { %"class.blink::MemberBase.201" }
%"class.blink::MemberBase.201" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.202" = type { %"class.blink::MemberBase.203" }
%"class.blink::MemberBase.203" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.204" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.376" }
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.384", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.455", i32, i8, [3 x i8], %"class.blink::HeapVector.457", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.465", %"class.blink::Member.467", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.476", %"class.blink::Member.535", %"class.blink::Member.537", i8 }>
%"class.blink::Supplementable.384" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.385" }
%"class.blink::HeapHashMap.385" = type { %"class.WTF::HashMap.388" }
%"class.WTF::HashMap.388" = type { %"class.WTF::HashTable.389" }
%"class.WTF::HashTable.389" = type <{ %"struct.WTF::KeyValuePair.391"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.391" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.399" }
%"class.blink::Supplementable.399" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.400" }
%"class.blink::HeapHashMap.400" = type { %"class.WTF::HashMap.403" }
%"class.WTF::HashMap.403" = type { %"class.WTF::HashTable.404" }
%"class.WTF::HashTable.404" = type <{ %"struct.WTF::KeyValuePair.406"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.406" = type { i8*, %"class.blink::Member.2523" }
%"class.blink::Member.2523" = type { %"class.blink::MemberBase.2524" }
%"class.blink::MemberBase.2524" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2525" }
%"class.blink::Member.2525" = type { %"class.blink::MemberBase.2526" }
%"class.blink::MemberBase.2526" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.407, %"class.std::__1::unique_ptr.416", %"class.std::__1::unique_ptr.416", %"class.std::__1::unique_ptr.443", %"class.std::__1::unique_ptr.443", %"class.blink::Member.449", i32, [4 x i8], %"class.WTF::HashSet.451", i32, i32 }
%class.scoped_refptr.407 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.408", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.410", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.415 }
%"class.WTF::RefCounted.408" = type { %"class.base::RefCounted.409" }
%"class.base::RefCounted.409" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.410" = type { %"class.absl::optional_internal::optional_data.411" }
%"class.absl::optional_internal::optional_data.411" = type { %"class.absl::optional_internal::optional_data_base.412" }
%"class.absl::optional_internal::optional_data_base.412" = type { %"class.absl::optional_internal::optional_data_dtor_base.413" }
%"class.absl::optional_internal::optional_data_dtor_base.413" = type { i8, %union.anon.414 }
%union.anon.414 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.415 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.416" = type { %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.419", %"class.std::__1::map.430", %"class.std::__1::map.439"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.410" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map.419" = type { %"class.std::__1::__tree.420" }
%"class.std::__1::__tree.420" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.421", %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"class.std::__1::map.430" = type { %"class.std::__1::__tree.431" }
%"class.std::__1::__tree.431" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.432", %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"class.std::__1::map.439" = type opaque
%"class.std::__1::unique_ptr.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.451" = type { %"class.WTF::HashTable.452" }
%"class.WTF::HashTable.452" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.457" = type { %"class.WTF::Vector.460" }
%"class.WTF::Vector.460" = type { %"class.WTF::VectorBuffer.461" }
%"class.WTF::VectorBuffer.461" = type { %"class.WTF::VectorBufferBase.462" }
%"class.WTF::VectorBufferBase.462" = type { %"class.blink::Member.463"*, i32, i32 }
%"class.blink::Member.463" = type opaque
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.469", i32, i32 }
%"class.blink::HeapHashMap.469" = type { %"class.WTF::HashMap.472" }
%"class.WTF::HashMap.472" = type { %"class.WTF::HashTable.473" }
%"class.WTF::HashTable.473" = type <{ %"struct.WTF::KeyValuePair.475"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.475" = type opaque
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.479" }
%"class.std::__1::unique_ptr.479" = type { %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.482" }
%"class.WTF::Vector.482" = type { %"class.WTF::VectorBuffer.483" }
%"class.WTF::VectorBuffer.483" = type { %"class.WTF::VectorBufferBase.484" }
%"class.WTF::VectorBufferBase.484" = type { %"class.mojo::StructPtr.485"*, i32, i32 }
%"class.mojo::StructPtr.485" = type { %"class.std::__1::unique_ptr.486" }
%"class.std::__1::unique_ptr.486" = type { %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.488" }
%"struct.std::__1::__compressed_pair_elem.488" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.489", %"class.WTF::HashMap.496", %"class.WTF::HashMap.501", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.506", i32, %"class.mojo::StructPtr.511", %"class.WTF::Vector.506" }
%"class.mojo::StructPtr.489" = type { %"class.std::__1::unique_ptr.490" }
%"class.std::__1::unique_ptr.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.496" = type { %"class.WTF::HashTable.497" }
%"class.WTF::HashTable.497" = type <{ %"struct.WTF::KeyValuePair.500"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.500" = type opaque
%"class.WTF::HashMap.501" = type { %"class.WTF::HashTable.502" }
%"class.WTF::HashTable.502" = type <{ %"struct.WTF::KeyValuePair.505"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.505" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.511" = type { %"class.std::__1::unique_ptr.512" }
%"class.std::__1::unique_ptr.512" = type { %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.514" }
%"struct.std::__1::__compressed_pair_elem.514" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.506", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.526" }
%"class.std::__1::unique_ptr.526" = type { %"class.std::__1::__compressed_pair.527" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.528" }
%"struct.std::__1::__compressed_pair_elem.528" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.535" = type { %"class.blink::MemberBase.536" }
%"class.blink::MemberBase.536" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.537" = type { %"class.blink::MemberBase.538" }
%"class.blink::MemberBase.538" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Supplementable.539" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.540" }
%"class.blink::HeapHashMap.540" = type { %"class.WTF::HashMap.543" }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.546"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.546" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.547" = type { %"class.blink::MemberBase.548" }
%"class.blink::MemberBase.548" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.551" = type { %"class.blink::MemberBase.552" }
%"class.blink::MemberBase.552" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.553" = type { %"class.blink::MemberBase.554" }
%"class.blink::MemberBase.554" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.555" = type { %"class.blink::MemberBase.556" }
%"class.blink::MemberBase.556" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.557" = type { %"class.blink::MemberBase.558" }
%"class.blink::MemberBase.558" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.559" = type { %"class.blink::MemberBase.560" }
%"class.blink::MemberBase.560" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.561" = type { %"class.blink::MemberBase.562" }
%"class.blink::MemberBase.562" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.563" = type { %"class.blink::MemberBase.564" }
%"class.blink::MemberBase.564" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.565" = type { %"class.blink::MemberBase.566" }
%"class.blink::MemberBase.566" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.WTF::Vector.506" = type { %"class.WTF::VectorBuffer.507" }
%"class.WTF::VectorBuffer.507" = type { %"class.WTF::VectorBufferBase.508" }
%"class.WTF::VectorBufferBase.508" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.567" = type { %"class.blink::MemberBase.568" }
%"class.blink::MemberBase.568" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.569 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.570", [4 x i8], %"class.std::__1::unique_ptr.572", i64, %"class.WTF::Vector.576", %"class.WTF::Vector.581", %"class.WTF::Vector.587", %"class.WTF::Vector.605", %class.scoped_refptr.407, %"class.WTF::HashMap.611", %"class.WTF::Vector.616", %"class.WTF::Vector.576", %"class.WTF::Vector.622", %"class.WTF::HashMap.627", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.570" = type { %"class.base::RefCountedThreadSafe.571" }
%"class.base::RefCountedThreadSafe.571" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.572" = type { %"class.std::__1::__compressed_pair.573" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.574" = type { i8* }
%"class.WTF::Vector.581" = type { %"class.WTF::VectorBuffer.582" }
%"class.WTF::VectorBuffer.582" = type { %"class.WTF::VectorBufferBase.583", [8 x i8] }
%"class.WTF::VectorBufferBase.583" = type { %class.scoped_refptr.584*, i32, i32 }
%class.scoped_refptr.584 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.587" = type { %"class.WTF::VectorBuffer.588" }
%"class.WTF::VectorBuffer.588" = type { %"class.WTF::VectorBufferBase.589" }
%"class.WTF::VectorBufferBase.589" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.591", %"class.std::__1::unique_ptr.597" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.590 }
%class.scoped_refptr.590 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.591" = type { %"class.std::__1::__compressed_pair.592" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.597" = type { %"class.std::__1::__compressed_pair.598" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.599" }
%"struct.std::__1::__compressed_pair_elem.599" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.608", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.608" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.611" = type { %"class.WTF::HashTable.612" }
%"class.WTF::HashTable.612" = type <{ %"struct.WTF::KeyValuePair.615"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.615" = type opaque
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.mojo::ScopedHandleBase.619"*, i32, i32 }
%"class.mojo::ScopedHandleBase.619" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.576" = type { %"class.WTF::VectorBuffer.577" }
%"class.WTF::VectorBuffer.577" = type { %"class.WTF::VectorBufferBase.578", [16 x i8] }
%"class.WTF::VectorBufferBase.578" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.622" = type { %"class.WTF::VectorBuffer.623" }
%"class.WTF::VectorBuffer.623" = type { %"class.WTF::VectorBufferBase.624" }
%"class.WTF::VectorBufferBase.624" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.627" = type { %"class.WTF::HashTable.628" }
%"class.WTF::HashTable.628" = type <{ %"struct.WTF::KeyValuePair.631"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.631" = type { i8**, %"class.std::__1::unique_ptr.2559" }
%"class.std::__1::unique_ptr.2559" = type { %"class.std::__1::__compressed_pair.2560" }
%"class.std::__1::__compressed_pair.2560" = type { %"struct.std::__1::__compressed_pair_elem.2561" }
%"struct.std::__1::__compressed_pair_elem.2561" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.632" = type { %"class.WTF::HashSet.635" }
%"class.WTF::HashSet.635" = type { %"class.WTF::HashTable.636" }
%"class.WTF::HashTable.636" = type <{ %"class.blink::WeakMember.638"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.638" = type opaque
%"class.blink::Member.639" = type { %"class.blink::MemberBase.640" }
%"class.blink::MemberBase.640" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.646", %"class.blink::Member.646", %"class.blink::Member.648", %"class.blink::Member.650", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.641" }
%"class.absl::optional.641" = type { %"class.absl::optional_internal::optional_data.642" }
%"class.absl::optional_internal::optional_data.642" = type { %"class.absl::optional_internal::optional_data_base.643" }
%"class.absl::optional_internal::optional_data_base.643" = type { %"class.absl::optional_internal::optional_data_dtor_base.644" }
%"class.absl::optional_internal::optional_data_dtor_base.644" = type { i8, %union.anon.645 }
%union.anon.645 = type { i64 }
%"class.blink::Member.646" = type { %"class.blink::MemberBase.647" }
%"class.blink::MemberBase.647" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.648" = type { %"class.blink::MemberBase.649" }
%"class.blink::MemberBase.649" = type { %"class.blink::Event"* }
%"class.blink::Member.650" = type { %"class.blink::MemberBase.651" }
%"class.blink::MemberBase.651" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.652" = type { %"class.WTF::HashMap.655" }
%"class.WTF::HashMap.655" = type { %"class.WTF::HashTable.656" }
%"class.WTF::HashTable.656" = type <{ %"struct.WTF::KeyValuePair.658"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.658" = type opaque
%"class.std::__1::unique_ptr.659" = type { %"class.std::__1::__compressed_pair.660" }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem.661" }
%"struct.std::__1::__compressed_pair_elem.661" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.671" = type { %"class.blink::MemberBase.672" }
%"class.blink::MemberBase.672" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.677", %"class.blink::CachedTextInputInfo", %"class.blink::Member.1459", %"class.blink::Member.1461", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.679", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.1452", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.679" = type { %"class.blink::MemberBase.680" }
%"class.blink::MemberBase.680" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.1452" = type { %"class.WTF::HashMap.1455" }
%"class.WTF::HashMap.1455" = type { %"class.WTF::HashTable.1456" }
%"class.WTF::HashTable.1456" = type <{ %"struct.WTF::KeyValuePair.1458"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1458" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.43", i32, i32 }
%"class.blink::Member.1461" = type { %"class.blink::MemberBase.1462" }
%"class.blink::MemberBase.1462" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.1463" = type { %"class.blink::MemberBase.1464" }
%"class.blink::MemberBase.1464" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.174", %"class.blink::Member.1755", %"class.blink::Member.1757" }
%"class.blink::Member.1755" = type { %"class.blink::MemberBase.1756" }
%"class.blink::MemberBase.1756" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1757" = type { %"class.blink::MemberBase.1758" }
%"class.blink::MemberBase.1758" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.1465" = type { %"class.blink::MemberBase.1466" }
%"class.blink::MemberBase.1466" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.174", %"class.blink::HeapMojoRemote" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1751" }
%"class.blink::Member.1751" = type { %"class.blink::MemberBase.1752" }
%"class.blink::MemberBase.1752" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::HeapHashMap.1469"* }
%"class.blink::HeapHashMap.1469" = type opaque
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.1475" = type { %"class.WTF::HashTable.1476" }
%"class.WTF::HashTable.1476" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.1479" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1482" }
%"class.WTF::VectorBuffer.1482" = type { %"class.WTF::VectorBufferBase.1483" }
%"class.WTF::VectorBufferBase.1483" = type { i64*, i32, i32 }
%"class.blink::Member.449" = type { %"class.blink::MemberBase.450" }
%"class.blink::MemberBase.450" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.384", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.455", i32, i8, [3 x i8], %"class.blink::HeapVector.457", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.465", %"class.blink::Member.467", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.476", %"class.blink::Member.535", %"class.blink::Member.537", i8, [7 x i8] }>
%"class.blink::Member.1484" = type { %"class.blink::MemberBase.1485" }
%"class.blink::MemberBase.1485" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1486" = type { %"class.blink::MemberBase.1487" }
%"class.blink::MemberBase.1487" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1488" = type { %"class.blink::MemberBase.1489" }
%"class.blink::MemberBase.1489" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1490" = type { %"class.blink::MemberBase.1491" }
%"class.blink::MemberBase.1491" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1498" = type { %"class.std::__1::__compressed_pair.1499" }
%"class.std::__1::__compressed_pair.1499" = type { %"struct.std::__1::__compressed_pair_elem.1500" }
%"struct.std::__1::__compressed_pair_elem.1500" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1492" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1492" = type { %"class.std::__1::__compressed_pair.1493" }
%"class.std::__1::__compressed_pair.1493" = type { %"struct.std::__1::__compressed_pair_elem.1494" }
%"struct.std::__1::__compressed_pair_elem.1494" = type { %"class.blink::KURL"* }
%"class.blink::Member.1504" = type { %"class.blink::MemberBase.1505" }
%"class.blink::MemberBase.1505" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1506" = type { %"class.blink::MemberBase.1507" }
%"class.blink::MemberBase.1507" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.115", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.117, %"class.WTF::Vector.131", %"class.WTF::Vector.131", %"class.blink::Member.43", %"class.blink::Member.136", %"class.blink::HeapHashSet", %"class.blink::Member.70", %"class.WTF::HashSet.144", %"class.WTF::TextPosition", %"class.blink::Member.148", %"class.blink::HeapVector.150", %"class.blink::Member.157" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.115" = type { %"class.blink::MemberBase.116" }
%"class.blink::MemberBase.116" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.117 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.118", %"class.WTF::Vector.120" }
%"class.WTF::RefCounted.118" = type { %"class.base::RefCounted.119" }
%"class.base::RefCounted.119" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.120" = type { %"class.WTF::VectorBuffer.121" }
%"class.WTF::VectorBuffer.121" = type { %"class.WTF::VectorBufferBase.122" }
%"class.WTF::VectorBufferBase.122" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.123", %"class.WTF::String" }
%"class.WTF::Vector.123" = type { %"class.WTF::VectorBuffer.124" }
%"class.WTF::VectorBuffer.124" = type { %"class.WTF::VectorBufferBase.125" }
%"class.WTF::VectorBufferBase.125" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type opaque
%"class.WTF::Vector.131" = type { %"class.WTF::VectorBuffer.132" }
%"class.WTF::VectorBuffer.132" = type { %"class.WTF::VectorBufferBase.133" }
%"class.WTF::VectorBufferBase.133" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.136" = type { %"class.blink::MemberBase.137" }
%"class.blink::MemberBase.137" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.138" }
%"class.blink::Member.138" = type { %"class.blink::MemberBase.139" }
%"class.blink::MemberBase.139" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.142" }
%"class.WTF::HashTable.142" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.46" }
%"class.WTF::HashSet.144" = type { %"class.WTF::HashTable.145" }
%"class.WTF::HashTable.145" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.148" = type { %"class.blink::MemberBase.149" }
%"class.blink::MemberBase.149" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.117, %"class.blink::Member.113", %"class.blink::Member.136" }
%"class.blink::HeapVector.150" = type { %"class.WTF::Vector.153" }
%"class.WTF::Vector.153" = type { %"class.WTF::VectorBuffer.154" }
%"class.WTF::VectorBuffer.154" = type { %"class.WTF::VectorBufferBase.155" }
%"class.WTF::VectorBufferBase.155" = type { %"class.blink::Member.136"*, i32, i32 }
%"class.blink::Member.157" = type { %"class.blink::MemberBase.158" }
%"class.blink::MemberBase.158" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1508 }
%class.scoped_refptr.1508 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1509" = type { %"class.WTF::VectorBuffer.1510" }
%"class.WTF::VectorBuffer.1510" = type { %"class.WTF::VectorBufferBase.1511" }
%"class.WTF::VectorBufferBase.1511" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1512 }
%class.scoped_refptr.1512 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1513", i32, i32, %"class.blink::Persistent.1515" }
%"class.WTF::RefCounted.1513" = type { %"class.base::RefCounted.1514" }
%"class.base::RefCounted.1514" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1515" = type { %"class.blink::PersistentBase.1516" }
%"class.blink::PersistentBase.1516" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.956" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1519" }
%"class.blink::HeapHashMap.1519" = type { %"class.WTF::HashMap.1522" }
%"class.WTF::HashMap.1522" = type { %"class.WTF::HashTable.1523" }
%"class.WTF::HashTable.1523" = type <{ %"struct.WTF::KeyValuePair.1525"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1525" = type { %"class.blink::WeakMember.1526", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1526" = type { %"class.blink::MemberBase.1527" }
%"class.blink::MemberBase.1527" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.1459" = type { %"class.blink::MemberBase.1460" }
%"class.blink::MemberBase.1460" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.70", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.43", %"class.blink::Member.43", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1533" }
%"class.blink::HeapHashMap.1533" = type { %"class.WTF::HashMap.1536" }
%"class.WTF::HashMap.1536" = type { %"class.WTF::HashTable.1537" }
%"class.WTF::HashTable.1537" = type <{ %"struct.WTF::KeyValuePair.1539"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1539" = type opaque
%"class.blink::Member.1540" = type { %"class.blink::MemberBase.1541" }
%"class.blink::MemberBase.1541" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1542" = type { %"class.WTF::HashSet.1545" }
%"class.WTF::HashSet.1545" = type { %"class.WTF::HashTable.1546" }
%"class.WTF::HashTable.1546" = type <{ %"class.blink::WeakMember.1548"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1548" = type opaque
%"class.blink::HeapHashSet.1549" = type { %"class.WTF::HashSet.1552" }
%"class.WTF::HashSet.1552" = type { %"class.WTF::HashTable.1553" }
%"class.WTF::HashTable.1553" = type <{ %"class.blink::WeakMember.1555"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1555" = type opaque
%"class.blink::Member.1556" = type { %"class.blink::MemberBase.1557" }
%"class.blink::MemberBase.1557" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1558" = type { %"class.blink::MemberBase.1559" }
%"class.blink::MemberBase.1559" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1560" = type { %"class.blink::MemberBase.1561" }
%"class.blink::MemberBase.1561" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.45", %"class.blink::HeapVector.107" }
%"class.blink::Member.1562" = type { %"class.blink::MemberBase.1563" }
%"class.blink::MemberBase.1563" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1564" = type { %"class.blink::MemberBase.1565" }
%"class.blink::MemberBase.1565" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1566" = type { %"class.WTF::HashMap.1569" }
%"class.WTF::HashMap.1569" = type { %"class.WTF::HashTable.1570" }
%"class.WTF::HashTable.1570" = type <{ %"struct.WTF::KeyValuePair.1572"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1572" = type opaque
%"class.WTF::Vector.1573" = type { %"class.WTF::VectorBuffer.1574" }
%"class.WTF::VectorBuffer.1574" = type { %"class.WTF::VectorBufferBase.1575" }
%"class.WTF::VectorBufferBase.1575" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1578" = type { %"class.blink::MemberBase.1579" }
%"class.blink::MemberBase.1579" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1580" = type { %"class.blink::MemberBase.1581" }
%"class.blink::MemberBase.1581" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.87" = type { %"class.blink::MemberBase.88" }
%"class.blink::MemberBase.88" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1582" = type { %"class.blink::MemberBase.1583" }
%"class.blink::MemberBase.1583" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1584" = type { %"class.WTF::Vector.1587" }
%"class.WTF::Vector.1587" = type { %"class.WTF::VectorBuffer.1588" }
%"class.WTF::VectorBuffer.1588" = type { %"class.WTF::VectorBufferBase.1589" }
%"class.WTF::VectorBufferBase.1589" = type { %"class.blink::Member.1590"*, i32, i32 }
%"class.blink::Member.1590" = type opaque
%"class.std::__1::unique_ptr.1592" = type { %"class.std::__1::__compressed_pair.1593" }
%"class.std::__1::__compressed_pair.1593" = type { %"struct.std::__1::__compressed_pair_elem.1594" }
%"struct.std::__1::__compressed_pair_elem.1594" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1598" = type { %"class.WTF::HashSet.1601" }
%"class.WTF::HashSet.1601" = type { %"class.WTF::HashTable.1602" }
%"class.WTF::HashTable.1602" = type <{ %"class.blink::WeakMember.1604"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1604" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1605", i32, [4 x i8] }>
%"class.WTF::Vector.1605" = type { %"class.WTF::VectorBuffer.1606" }
%"class.WTF::VectorBuffer.1606" = type { %"class.WTF::VectorBufferBase.1607" }
%"class.WTF::VectorBufferBase.1607" = type { %"struct.std::__1::pair.1608"*, i32, i32 }
%"struct.std::__1::pair.1608" = type opaque
%"class.blink::Member.1611" = type { %"class.blink::MemberBase.1612" }
%"class.blink::MemberBase.1612" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1613" = type { %"class.WTF::VectorBuffer.1614" }
%"class.WTF::VectorBuffer.1614" = type { %"class.WTF::VectorBufferBase.1615" }
%"class.WTF::VectorBufferBase.1615" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1618" = type { %"class.std::__1::__compressed_pair.1619" }
%"class.std::__1::__compressed_pair.1619" = type { %"struct.std::__1::__compressed_pair_elem.1620" }
%"struct.std::__1::__compressed_pair_elem.1620" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.89" = type { %"class.WTF::Vector.92" }
%"class.WTF::Vector.92" = type { %"class.WTF::VectorBuffer.93" }
%"class.WTF::VectorBuffer.93" = type { %"class.WTF::VectorBufferBase.94" }
%"class.WTF::VectorBufferBase.94" = type { %"class.blink::Member.87"*, i32, i32 }
%"class.blink::HeapVector.1624" = type { %"class.WTF::Vector.1627" }
%"class.WTF::Vector.1627" = type { %"class.WTF::VectorBuffer.1628" }
%"class.WTF::VectorBuffer.1628" = type { %"class.WTF::VectorBufferBase.1629" }
%"class.WTF::VectorBufferBase.1629" = type { %"class.blink::Member.1630"*, i32, i32 }
%"class.blink::Member.1630" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.70" }
%"class.blink::Member.1632" = type { %"class.blink::MemberBase.1633" }
%"class.blink::MemberBase.1633" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1634" = type { %"class.blink::MemberBase.1635" }
%"class.blink::MemberBase.1635" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1636" = type { %"class.blink::MemberBase.1637" }
%"class.blink::MemberBase.1637" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1638" = type { %"class.blink::MemberBase.1639" }
%"class.blink::MemberBase.1639" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1640" = type { %"class.blink::MemberBase.1641" }
%"class.blink::MemberBase.1641" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1642" = type { %"class.WTF::HashTable.1643" }
%"class.WTF::HashTable.1643" = type <{ %"struct.WTF::KeyValuePair.1646"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1646" = type opaque
%"class.blink::Member.1647" = type { %"class.blink::MemberBase.1648" }
%"class.blink::MemberBase.1648" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1649" = type { %"class.blink::MemberBase.1650" }
%"class.blink::MemberBase.1650" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1651" = type { %"class.blink::MemberBase.1652" }
%"class.blink::MemberBase.1652" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1653" = type { %"class.blink::MemberBase.1654" }
%"class.blink::MemberBase.1654" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1532", { i64, i64 } }
%"class.blink::WeakMember.1532" = type { %"class.blink::MemberBase.71" }
%"class.blink::HeapHashSet.1655" = type { %"class.WTF::HashSet.1658" }
%"class.WTF::HashSet.1658" = type { %"class.WTF::HashTable.1659" }
%"class.WTF::HashTable.1659" = type <{ %"class.blink::Member.1661"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1661" = type opaque
%"class.blink::Member.1662" = type { %"class.blink::MemberBase.1663" }
%"class.blink::MemberBase.1663" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1664" = type { %"class.blink::MemberBase.1665" }
%"class.blink::MemberBase.1665" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1666" = type { %"class.blink::MemberBase.1667" }
%"class.blink::MemberBase.1667" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1668" = type { %"class.blink::MemberBase.1669" }
%"class.blink::MemberBase.1669" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1670" = type { %"class.blink::MemberBase.1671" }
%"class.blink::MemberBase.1671" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1672" = type { %"class.std::__1::__compressed_pair.1673" }
%"class.std::__1::__compressed_pair.1673" = type { %"struct.std::__1::__compressed_pair_elem.1674" }
%"struct.std::__1::__compressed_pair_elem.1674" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1678" = type { %"class.std::__1::__compressed_pair.1679" }
%"class.std::__1::__compressed_pair.1679" = type { %"struct.std::__1::__compressed_pair_elem.1680" }
%"struct.std::__1::__compressed_pair_elem.1680" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.144", %"class.WTF::HashSet.144", %"class.WTF::HashSet.144", %"class.WTF::HashSet.144", %"class.WTF::HashSet.144", %"class.WTF::HashSet.144", i32, [4 x i8], %"class.WTF::HashMap.1681", %"class.WTF::HashMap.1681", %"class.WTF::HashMap.1681", %"class.WTF::HashMap.1681", %"class.WTF::HashMap.1681", %"class.WTF::HashMap.1681", %"class.WTF::HashMap.1681", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1681" = type { %"class.WTF::HashTable.1682" }
%"class.WTF::HashTable.1682" = type <{ %"struct.WTF::KeyValuePair.1685"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1685" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1689" = type { %"class.blink::MemberBase.1690" }
%"class.blink::MemberBase.1690" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1691" = type { %"class.blink::MemberBase.1692" }
%"class.blink::MemberBase.1692" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1693" = type { %"class.blink::MemberBase.1694" }
%"class.blink::MemberBase.1694" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1695" = type { %"class.blink::MemberBase.1696" }
%"class.blink::MemberBase.1696" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1470" = type { %"class.WTF::VectorBuffer.1471" }
%"class.WTF::VectorBuffer.1471" = type { %"class.WTF::VectorBufferBase.1472" }
%"class.WTF::VectorBufferBase.1472" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1697" = type { %"class.WTF::HashMap.1700" }
%"class.WTF::HashMap.1700" = type { %"class.WTF::HashTable.1701" }
%"class.WTF::HashTable.1701" = type <{ %"struct.WTF::KeyValuePair.1703"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1703" = type opaque
%"class.blink::Member.1704" = type { %"class.blink::MemberBase.1705" }
%"class.blink::MemberBase.1705" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1706" = type { %"class.std::__1::__compressed_pair.1707" }
%"class.std::__1::__compressed_pair.1707" = type { %"struct.std::__1::__compressed_pair_elem.1708" }
%"struct.std::__1::__compressed_pair_elem.1708" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1712" = type { %"class.blink::MemberBase.1713" }
%"class.blink::MemberBase.1713" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1714" = type { %"class.blink::MemberBase.1715" }
%"class.blink::MemberBase.1715" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1716" = type { %"class.WTF::HashMap.1719" }
%"class.WTF::HashMap.1719" = type { %"class.WTF::HashTable.1720" }
%"class.WTF::HashTable.1720" = type <{ %"struct.WTF::KeyValuePair.1722"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1722" = type opaque
%"class.blink::HeapObserverSet.1723" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1724" }
%"class.blink::HeapHashSet.1724" = type { %"class.WTF::HashSet.1727" }
%"class.WTF::HashSet.1727" = type { %"class.WTF::HashTable.1728" }
%"class.WTF::HashTable.1728" = type <{ %"class.blink::WeakMember.1730"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1730" = type opaque
%"class.blink::Member.1731" = type { %"class.blink::MemberBase.1732" }
%"class.blink::MemberBase.1732" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1733" = type { %"class.blink::MemberBase.1734" }
%"class.blink::MemberBase.1734" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.70", %"class.blink::HeapHashSet.1740", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1747", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1740" = type { %"class.WTF::HashSet.1743" }
%"class.WTF::HashSet.1743" = type { %"class.WTF::HashTable.1744" }
%"class.WTF::HashTable.1744" = type <{ %"class.blink::Member.1746"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1746" = type opaque
%"class.blink::HeapTaskRunnerTimer.1747" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1748", { i64, i64 } }
%"class.blink::WeakMember.1748" = type { %"class.blink::MemberBase.1734" }
%"class.blink::WeakMember.1735" = type { %"class.blink::MemberBase.44" }
%"class.blink::MemberBase.44" = type { %"class.blink::Node"* }
%"class.blink::Member.1736" = type { %"class.blink::MemberBase.1737" }
%"class.blink::MemberBase.1737" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.72" = type { %"class.blink::MemberBase.73" }
%"class.blink::MemberBase.73" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.76" }
%"class.blink::HeapHashMap.76" = type { %"class.WTF::HashMap.79" }
%"class.WTF::HashMap.79" = type { %"class.WTF::HashTable.80" }
%"class.WTF::HashTable.80" = type <{ %"struct.WTF::KeyValuePair.82"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.82" = type { %"class.WTF::AtomicString", %"class.blink::Member.83" }
%"class.blink::Member.83" = type { %"class.blink::MemberBase.84" }
%"class.blink::MemberBase.84" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.87", i32, %"class.blink::HeapVector.89" }
%"class.blink::Member.96" = type { %"class.blink::MemberBase.97" }
%"class.blink::MemberBase.97" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.98" = type { %"class.blink::MemberBase.99" }
%"class.blink::MemberBase.99" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.100" = type { %"class.blink::MemberBase.101" }
%"class.blink::MemberBase.101" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.102" }
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::HeapHashMap.104"* }
%"class.blink::HeapHashMap.104" = type opaque
%"class.blink::Member.105" = type { %"class.blink::MemberBase.106" }
%"class.blink::MemberBase.106" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.107" = type { %"class.WTF::Vector.110" }
%"class.WTF::Vector.110" = type { %"class.WTF::VectorBuffer.111" }
%"class.WTF::VectorBuffer.111" = type { %"class.WTF::VectorBufferBase.112" }
%"class.WTF::VectorBufferBase.112" = type { %"class.blink::Member.113"*, i32, i32 }
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.43" = type { %"class.blink::MemberBase.44" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.55", %"class.blink::Member.57", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.55" = type { %"class.WTF::SingleThreadedBitField.56" }
%"class.WTF::SingleThreadedBitField.56" = type { i32 }
%"class.blink::Member.57" = type { %"class.blink::MemberBase.58" }
%"class.blink::MemberBase.58" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.61 }
%class.scoped_refptr.61 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.62", %"class.WTF::AtomicString", %"class.WTF::Vector.64" }
%"class.WTF::RefCounted.62" = type { %"class.base::RefCounted.63" }
%"class.base::RefCounted.63" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.64" = type { %"class.WTF::VectorBuffer.65" }
%"class.WTF::VectorBuffer.65" = type { %"class.WTF::VectorBufferBase.66", [32 x i8] }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.2459", %class.scoped_refptr.1512 }
%"class.blink::TraceWrapperV8Reference.2459" = type { %"class.v8::TracedReference.2460" }
%"class.v8::TracedReference.2460" = type { %"class.v8::BasicTracedReference.2461" }
%"class.v8::BasicTracedReference.2461" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.2464, %"class.blink::Member.2465", %"class.blink::SelfKeepAlive", %"class.util::TokenType.2469" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.2464 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.2465" = type { %"class.blink::MemberBase.2466" }
%"class.blink::MemberBase.2466" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.2467" }
%"class.blink::Persistent.2467" = type { %"class.blink::PersistentBase.2468" }
%"class.blink::PersistentBase.2468" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr.956" }
%"class.util::TokenType.2469" = type { %"class.base::StrongAlias.2470" }
%"class.base::StrongAlias.2470" = type { %"class.base::UnguessableToken" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.2459" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::HeapVector.2471" = type { %"class.WTF::Vector.2474" }
%"class.WTF::Vector.2474" = type { %"class.WTF::VectorBuffer.2475" }
%"class.WTF::VectorBuffer.2475" = type { %"class.WTF::VectorBufferBase.2476" }
%"class.WTF::VectorBufferBase.2476" = type { %"class.blink::Member.2477"*, i32, i32 }
%"class.blink::Member.2477" = type { %"class.blink::MemberBase.2478" }
%"class.blink::MemberBase.2478" = type { %"class.blink::StringKeyframe"* }
%"class.blink::StringKeyframe" = type <{ %"class.blink::Keyframe", %"class.blink::HeapHashMap.2491", %"class.blink::Member.2498", %"class.blink::Member.2498", %"class.WTF::HashMap.2514", i8, i8, i8, [5 x i8] }>
%"class.blink::HeapHashMap.2491" = type { %"class.WTF::HashMap.2494" }
%"class.WTF::HashMap.2494" = type { %"class.WTF::HashTable.2495" }
%"class.WTF::HashTable.2495" = type <{ %"struct.WTF::KeyValuePair.2497"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2497" = type opaque
%"class.blink::Member.2498" = type { %"class.blink::MemberBase.2499" }
%"class.blink::MemberBase.2499" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::MutableCSSPropertyValueSet" = type <{ %"class.blink::CSSPropertyValueSet", [4 x i8], %"class.blink::Member.2500", %"class.blink::HeapVector.2502", i8, [7 x i8] }>
%"class.blink::Member.2500" = type { %"class.blink::MemberBase.2501" }
%"class.blink::MemberBase.2501" = type { %"class.blink::PropertySetCSSStyleDeclaration"* }
%"class.blink::PropertySetCSSStyleDeclaration" = type { %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::Member.2498" }
%"class.blink::AbstractPropertySetCSSStyleDeclaration" = type { %"class.blink::CSSStyleDeclaration" }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2520" }
%"class.blink::WeakMember.2520" = type { %"class.blink::MemberBase.450" }
%"class.blink::HeapVector.2502" = type { %"class.WTF::Vector.2505" }
%"class.WTF::Vector.2505" = type { %"class.WTF::VectorBuffer.2506" }
%"class.WTF::VectorBuffer.2506" = type { %"class.WTF::VectorBufferBase.2507", [96 x i8] }
%"class.WTF::VectorBufferBase.2507" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member.2508" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.blink::Member.2508" = type { %"class.blink::MemberBase.2509" }
%"class.blink::MemberBase.2509" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.WTF::HashMap.2514" = type { %"class.WTF::HashTable.2515" }
%"class.WTF::HashTable.2515" = type <{ %"struct.WTF::KeyValuePair.2518"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2518" = type { %"class.blink::QualifiedName"*, %"class.WTF::String" }
%"class.blink::KeyframeEffectModel" = type { %"class.blink::KeyframeEffectModelBase.base", [5 x i8] }
%"class.blink::KeyframeEffectModelBase.base" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector", %"class.blink::Member.2", %"class.blink::Member.29", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr.22, i8, i8, i8 }>
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::Local.2521" = type { %"class.v8::Object"* }
%"class.v8::Object" = type { i8 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapVector.2864" = type { %"class.WTF::Vector.2867" }
%"class.WTF::Vector.2867" = type { %"class.WTF::VectorBuffer.2868" }
%"class.WTF::VectorBuffer.2868" = type { %"class.WTF::VectorBufferBase.2869" }
%"class.WTF::VectorBufferBase.2869" = type { %"class.blink::Member.2870"*, i32, i32 }
%"class.blink::Member.2870" = type { %"class.blink::MemberBase.2871" }
%"class.blink::MemberBase.2871" = type { %"class.blink::BaseKeyframe"* }
%"class.blink::BaseKeyframe" = type { %"class.blink::IDLDictionaryBase", i8, %"class.WTF::String", %"class.WTF::String", double }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.WTF::Vector.2873" = type { %"class.WTF::VectorBuffer.2874" }
%"class.WTF::VectorBuffer.2874" = type { %"class.WTF::VectorBufferBase.2875" }
%"class.WTF::VectorBufferBase.2875" = type { %"class.WTF::Vector.981"*, i32, i32 }
%"class.blink::ScriptIterator" = type { %"class.v8::Isolate"*, %"class.v8::Local.2521", %"class.v8::Local", %"class.v8::Local.2522", %"class.v8::Local.2522", i8, %"class.v8::MaybeLocal" }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.v8::Value" = type { i8 }
%"class.v8::Local.2522" = type { %"class.v8::String"* }
%"class.v8::String" = type { i8 }
%"class.v8::MaybeLocal" = type { %"class.v8::Value"* }
%"struct.std::__1::__less.2856" = type { i8 }
%"class.blink::StringOrStringSequence" = type { i32, %"class.WTF::String", %"class.WTF::Vector.506" }
%"class.WTF::Vector.2662" = type { %"class.WTF::VectorBuffer.2663" }
%"class.WTF::VectorBuffer.2663" = type { %"class.WTF::VectorBufferBase.2664" }
%"class.WTF::VectorBufferBase.2664" = type { %"class.absl::optional.2486"*, i32, i32 }
%"class.WTF::Vector.2657" = type { %"class.WTF::VectorBuffer.2658" }
%"class.WTF::VectorBuffer.2658" = type { %"class.WTF::VectorBufferBase.2659" }
%"class.WTF::VectorBufferBase.2659" = type { %"class.absl::optional.2481"*, i32, i32 }
%"class.blink::HeapHashMap.2667" = type { %"class.WTF::HashMap.2670" }
%"class.WTF::HashMap.2670" = type { %"class.WTF::HashTable.2671" }
%"class.WTF::HashTable.2671" = type <{ %"struct.WTF::KeyValuePair.2673"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2673" = type { double, %"class.blink::Member.2477" }
%"class.WTF::HashSet.2903" = type { %"class.WTF::HashTable.2904" }
%"class.WTF::HashTable.2904" = type <{ %"class.blink::PropertyHandle"*, i32, i32, i32, [4 x i8] }>
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.2627", %"class.blink::Member.2629", %"class.blink::Member.2631", %"class.blink::Member.2650", %"class.blink::Member.2652" }
%"class.blink::Member.2627" = type { %"class.blink::MemberBase.2628" }
%"class.blink::MemberBase.2628" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.681 }
%"class.blink::Member.2629" = type { %"class.blink::MemberBase.2630" }
%"class.blink::MemberBase.2630" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.2631" = type { %"class.blink::MemberBase.2632" }
%"class.blink::MemberBase.2632" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.2635", %"class.blink::HeapHashSet.2644" }
%"class.blink::HeapVector.2635" = type { %"class.WTF::Vector.2638" }
%"class.WTF::Vector.2638" = type { %"class.WTF::VectorBuffer.2639" }
%"class.WTF::VectorBuffer.2639" = type { %"class.WTF::VectorBufferBase.2640" }
%"class.WTF::VectorBufferBase.2640" = type { %"class.blink::Member.2641"*, i32, i32 }
%"class.blink::Member.2641" = type { %"class.blink::MemberBase.2642" }
%"class.blink::MemberBase.2642" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.2644" = type { %"class.WTF::HashSet.2647" }
%"class.WTF::HashSet.2647" = type { %"class.WTF::HashTable.2648" }
%"class.WTF::HashTable.2648" = type <{ %"class.blink::Member.2641"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2650" = type { %"class.blink::MemberBase.2651" }
%"class.blink::MemberBase.2651" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.2652" = type { %"class.blink::MemberBase.2653" }
%"class.blink::MemberBase.2653" = type { %"class.blink::HeapHashSet.2654"* }
%"class.blink::HeapHashSet.2654" = type opaque
%"class.blink::BasePropertyIndexedKeyframe" = type { %"class.blink::IDLDictionaryBase", %"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::StringOrStringSequence", %"class.blink::DoubleOrDoubleOrNullSequence" }
%"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence" = type { i32, %"class.WTF::String", %"class.WTF::Vector.506" }
%"class.blink::DoubleOrDoubleOrNullSequence" = type { i32, double, %"class.WTF::Vector.2657" }
%"class.WTF::ConditionalDestructor.985" = type { i8 }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.2846", %"class.WTF::String" }
%"class.WTF::StringAppend.2846" = type { %"class.WTF::StringAppend.2847", i8* }
%"class.WTF::StringAppend.2847" = type { i8*, %"class.WTF::String" }
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.2829", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.2841", %"class.WTF::Vector.2842" }
%"class.std::__1::unique_ptr.2829" = type { %"class.std::__1::__compressed_pair.2830" }
%"class.std::__1::__compressed_pair.2830" = type { %"struct.std::__1::__compressed_pair_elem.2831" }
%"struct.std::__1::__compressed_pair_elem.2831" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.2832", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2832" = type { %"class.std::__1::__compressed_pair.2833" }
%"class.std::__1::__compressed_pair.2833" = type { %"struct.std::__1::__compressed_pair_elem.2834" }
%"struct.std::__1::__compressed_pair_elem.2834" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.2841" = type { %"class.blink::MemberBase.678" }
%"class.WTF::Vector.2842" = type { %"class.WTF::VectorBuffer.2843" }
%"class.WTF::VectorBuffer.2843" = type { %"class.WTF::VectorBufferBase.2362" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.2705", %"class.WTF::HashMap.2705", %"class.WTF::HashMap.2710", %"class.std::__1::unique_ptr.2715", %"class.std::__1::unique_ptr.2762", %"class.blink::Persistent.2467", i8, i8, i8, %"class.WTF::Vector.167", %"class.std::__1::unique_ptr.2768", %"class.blink::Persistent.2774", %"class.blink::Persistent.2778", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.2687", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.2693", %"class.std::__1::unique_ptr.2699", i32, i32 }
%"class.std::__1::unique_ptr.2687" = type { %"class.std::__1::__compressed_pair.2688" }
%"class.std::__1::__compressed_pair.2688" = type { %"struct.std::__1::__compressed_pair_elem.2689" }
%"struct.std::__1::__compressed_pair_elem.2689" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.2693" = type { %"class.std::__1::__compressed_pair.2694" }
%"class.std::__1::__compressed_pair.2694" = type { %"struct.std::__1::__compressed_pair_elem.2695" }
%"struct.std::__1::__compressed_pair_elem.2695" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.2699" = type { %"class.std::__1::__compressed_pair.2700" }
%"class.std::__1::__compressed_pair.2700" = type { %"struct.std::__1::__compressed_pair_elem.2701" }
%"struct.std::__1::__compressed_pair_elem.2701" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.2705" = type { %"class.WTF::HashTable.2706" }
%"class.WTF::HashTable.2706" = type <{ %"struct.WTF::KeyValuePair.2709"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2709" = type opaque
%"class.WTF::HashMap.2710" = type { %"class.WTF::HashTable.2711" }
%"class.WTF::HashTable.2711" = type <{ %"struct.WTF::KeyValuePair.2714"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2714" = type opaque
%"class.std::__1::unique_ptr.2715" = type { %"class.std::__1::__compressed_pair.2716" }
%"class.std::__1::__compressed_pair.2716" = type { %"struct.std::__1::__compressed_pair_elem.2717" }
%"struct.std::__1::__compressed_pair_elem.2717" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.2723", %class.scoped_refptr.6 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.2718", i8* }
%"class.WTF::HashMap.2718" = type { %"class.WTF::HashTable.2719" }
%"class.WTF::HashTable.2719" = type <{ %"struct.WTF::KeyValuePair.2722"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2722" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.2723" = type { %"class.v8::PersistentValueMapBase.2724" }
%"class.v8::PersistentValueMapBase.2724" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.2725", i8* }
%"class.WTF::HashMap.2725" = type { %"class.WTF::HashTable.2726" }
%"class.WTF::HashTable.2726" = type <{ %"struct.WTF::KeyValuePair.2729"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2729" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.2730", %"class.WTF::String", %"class.std::__1::unique_ptr.2732" }
%"class.WTF::RefCounted.2730" = type { %"class.base::RefCounted.2731" }
%"class.base::RefCounted.2731" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2732" = type { %"class.std::__1::__compressed_pair.2733" }
%"class.std::__1::__compressed_pair.2733" = type { %"struct.std::__1::__compressed_pair_elem.2734" }
%"struct.std::__1::__compressed_pair_elem.2734" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.2735", %"class.std::__1::unique_ptr.2746", %"class.WTF::Vector.2752", i8, i32 }
%"class.std::__1::unique_ptr.2735" = type { %"class.std::__1::__compressed_pair.2736" }
%"class.std::__1::__compressed_pair.2736" = type { %"struct.std::__1::__compressed_pair_elem.2737" }
%"struct.std::__1::__compressed_pair_elem.2737" = type { %"class.WTF::Vector.2738"* }
%"class.WTF::Vector.2738" = type { %"class.WTF::VectorBuffer.2739" }
%"class.WTF::VectorBuffer.2739" = type { %"class.WTF::VectorBufferBase.2740" }
%"class.WTF::VectorBufferBase.2740" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.2746" = type { %"class.std::__1::__compressed_pair.2747" }
%"class.std::__1::__compressed_pair.2747" = type { %"struct.std::__1::__compressed_pair_elem.2748" }
%"struct.std::__1::__compressed_pair_elem.2748" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.2752" = type { %"class.WTF::VectorBuffer.2753" }
%"class.WTF::VectorBuffer.2753" = type { %"class.WTF::VectorBufferBase.2740", [32 x i8] }
%"class.std::__1::unique_ptr.2762" = type { %"class.std::__1::__compressed_pair.2763" }
%"class.std::__1::__compressed_pair.2763" = type { %"struct.std::__1::__compressed_pair_elem.2764" }
%"struct.std::__1::__compressed_pair_elem.2764" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.std::__1::unique_ptr.2768" = type { %"class.std::__1::__compressed_pair.2769" }
%"class.std::__1::__compressed_pair.2769" = type { %"struct.std::__1::__compressed_pair_elem.2770" }
%"struct.std::__1::__compressed_pair_elem.2770" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.2774" = type { %"class.blink::PersistentBase.2775" }
%"class.blink::PersistentBase.2775" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr.956" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.2778" = type { %"class.blink::PersistentBase.2779" }
%"class.blink::PersistentBase.2779" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr.956" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.2782", i64 }
%"class.blink::HeapVector.2782" = type { %"class.WTF::Vector.2785" }
%"class.WTF::Vector.2785" = type { %"class.WTF::VectorBuffer.2786" }
%"class.WTF::VectorBuffer.2786" = type { %"class.WTF::VectorBufferBase.2787" }
%"class.WTF::VectorBufferBase.2787" = type { %"struct.std::__1::pair.2788"*, i32, i32 }
%"struct.std::__1::pair.2788" = type { %"class.blink::UntracedMember.2789", %"class.blink::Member.2791" }
%"class.blink::UntracedMember.2789" = type { %"class.blink::MemberBase.2790" }
%"class.blink::MemberBase.2790" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2791" = type { %"class.blink::MemberBase.2792" }
%"class.blink::MemberBase.2792" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::StringTypeAdapter.2848" = type { %"class.WTF::StringTypeAdapter.2849" }
%"class.WTF::StringTypeAdapter.2849" = type { %"class.WTF::StringView" }
%"class.WTF::StringTypeAdapter.2851" = type <{ i8*, i32, [4 x i8] }>
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::V8StringResource" = type { %"class.v8::Local", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.2878" }
%"class.std::__1::unique_ptr.2878" = type { %"class.std::__1::__compressed_pair.2879" }
%"class.std::__1::__compressed_pair.2879" = type { %"struct.std::__1::__compressed_pair_elem.2880" }
%"struct.std::__1::__compressed_pair_elem.2880" = type { i8* }
%"class.v8::Int32" = type { i8 }
%"class.blink::HeapVectorBacking.2895" = type { i8 }
%"class.blink::HeapVector.2915" = type { %"class.WTF::Vector.2918" }
%"class.WTF::Vector.2918" = type { %"class.WTF::VectorBuffer.2919" }
%"class.WTF::VectorBuffer.2919" = type { %"class.WTF::VectorBufferBase.2920" }
%"class.WTF::VectorBufferBase.2920" = type { %"class.blink::Member.2530"*, i32, i32 }
%"class.blink::HeapVectorBacking.2926" = type { i8 }

$_ZN5blink20LinearTimingFunction6SharedEv = comdat any

$_ZN3WTF6VectorIN4absl8optionalIdEELj0ENS_18PartitionAllocatorEEaSERKS5_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_ = comdat any

$_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_ = comdat any

$_ZN3WTF6VectorIN4absl8optionalIdEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKNS1_9nullopt_tEEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4absl8optionalIdEEEEmm = comdat any

$_ZN3WTF6VectorIN4absl8optionalIdEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIdEEvOT_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4absl8optionalIN5blink11EffectModel18CompositeOperationEEEEEmm = comdat any

$_ZN3WTF6VectorIN4absl8optionalIN5blink11EffectModel18CompositeOperationEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS6_EEvOT_ = comdat any

$_ZNSt3__16__sortIRPFbRKN3WTF6StringES4_EPS2_EEvT0_S9_T_ = comdat any

$_ZNSt3__17__sort4IRPFbRKN3WTF6StringES4_EPS2_EEjT0_S9_S9_S9_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRPFbRKN3WTF6StringES4_EPS2_EEvT0_S9_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRPFbRKN3WTF6StringES4_EPS2_EEbT0_S9_T_ = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN3WTF9HashTableIdNS_12KeyValuePairIdN5blink6MemberINS2_14StringKeyframeEEEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERdDnEENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIdNS_12KeyValuePairIdN5blink6MemberINS2_14StringKeyframeEEEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIdNS_12KeyValuePairIdN5blink6MemberINS2_14StringKeyframeEEEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6RehashEjPS6_ = comdat any

$_ZN3WTF9HashTableIdNS_12KeyValuePairIdN5blink6MemberINS2_14StringKeyframeEEEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb = comdat any

$_ZN3WTF9HashTableIdNS_12KeyValuePairIdN5blink6MemberINS2_14StringKeyframeEEEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIdEENS4_IN5blink6MemberINS6_14StringKeyframeEEEEEEENS6_13HeapAllocatorENS_12KeyValuePairIdS9_EEEEvRT1_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIdNS2_12KeyValuePairIdNS_6MemberINS_14StringKeyframeEEEEENS2_24KeyValuePairKeyExtractorENS2_9FloatHashIdEENS2_18HashMapValueTraitsINS2_10HashTraitsIdEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIdNS1_12KeyValuePairIdNS_6MemberINS_14StringKeyframeEEEEENS1_24KeyValuePairKeyExtractorENS1_9FloatHashIdEENS1_18HashMapValueTraitsINS1_10HashTraitsIdEENSC_IS6_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIdNS2_12KeyValuePairIdNS_6MemberINS_14StringKeyframeEEEEENS2_24KeyValuePairKeyExtractorENS2_9FloatHashIdEENS2_18HashMapValueTraitsINS2_10HashTraitsIdEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIdNS2_12KeyValuePairIdNS_6MemberINS_14StringKeyframeEEEEENS2_24KeyValuePairKeyExtractorENS2_9FloatHashIdEENS2_18HashMapValueTraitsINS2_10HashTraitsIdEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIdNS_12KeyValuePairIdN5blink6MemberINS4_14StringKeyframeEEEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSD_IS7_EEEESE_NS4_13HeapAllocatorEEEE5TraceEPNS4_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_14StringKeyframeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIdNS_12KeyValuePairIdN5blink6MemberINS2_14StringKeyframeEEEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE16LookupForWritingERKd = comdat any

$_ZN5blink14StringKeyframeC2Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_8KeyframeEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_8KeyframeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8KeyframeEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8KeyframeEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_19CSSPropertyValueSetEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_19CSSPropertyValueSetEE7GetNameEPKv = comdat any

$_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS8_INS8_IPKcNS7_6StringEEESA_EESB_EEEEEPS1_DpOT_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EcvS3_Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKdEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm = comdat any

$_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN4absl8optionalIdEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN4absl8optionalIN5blink11EffectModel18CompositeOperationEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14StringKeyframeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__14pairINS_6StringES4_EELj0ENS_18PartitionAllocatorEEELb0EED2Ev = comdat any

$_ZN5blink17NativeValueTraitsINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringES4_EEEEmm = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_12BaseKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_12BaseKeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_12BaseKeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_12BaseKeyframeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_12BaseKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberIKNS_12BaseKeyframeEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_12BaseKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_12BaseKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_12BaseKeyframeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorINS0_INSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEELj0ES5_E14AppendSlowCaseIRS6_EEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEC2ERKS6_ = comdat any

$_ZN3WTF6VectorINS0_INSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEELj0ES5_E16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorINSt3__14pairINS_6StringES5_EELj0ES0_EEEEmm = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_12BaseKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINS0_INSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEELj0ES5_E2atEj = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS2_SF_EENS_18HashTableAddResultISA_S2_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSB_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS6_S8_S9_EES2_EENSt3__14pairIPS2_bEERKT0_ = comdat any

$_ZNK3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS6_S8_S9_EES2_EEPKS2_RKT0_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_19KeyframeEffectModelINS_14StringKeyframeEEEE4CallIJRNS_10HeapVectorINS_6MemberIS2_EELj0EEERNS_11EffectModel18CompositeOperationEPNS_20LinearTimingFunctionEEEEPS3_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11EffectModelEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_11EffectModelEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_11EffectModelEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_11EffectModelEE7GetNameEPKv = comdat any

$_ZN5blink23KeyframeEffectModelBaseD2Ev = comdat any

$_ZN5blink19KeyframeEffectModelINS_14StringKeyframeEED0Ev = comdat any

$_ZNK5blink23KeyframeEffectModelBase7AffectsERKNS_14PropertyHandleE = comdat any

$_ZNK5blink23KeyframeEffectModelBase30AffectedByUnderlyingAnimationsEv = comdat any

$_ZNK5blink23KeyframeEffectModelBase21IsKeyframeEffectModelEv = comdat any

$_ZN5blink23KeyframeEffectModelBase20GetComputedKeyframesEPNS_7ElementE = comdat any

$_ZNK5blink19KeyframeEffectModelINS_14StringKeyframeEE27IsStringKeyframeEffectModelEv = comdat any

$_ZNK5blink19KeyframeEffectModelINS_14StringKeyframeEE31IsTransitionKeyframeEffectModelEv = comdat any

$_ZN5blink19KeyframeEffectModelINS_14StringKeyframeEE5CloneEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_19InterpolationEffectEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_19InterpolationEffectEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_19InterpolationEffectEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE6AppendINS2_INS1_14StringKeyframeEEEEEvPKT_j = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8KeyframeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EES2_EEPKS8_RKT0_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEEC2ERKS6_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_19KeyframeEffectModelINS_14StringKeyframeEEEE4CallIJRNS_10HeapVectorINS_6MemberIS2_EELj0EEERNS_11EffectModel18CompositeOperationER13scoped_refptrINS_14TimingFunctionEEEEEPS3_DpOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZZN5blink20LinearTimingFunction6SharedEvE6linear = comdat any

$_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear = comdat any

$_ZN4absl39AbslInternalInlineVariableHoldernulloptIvE9kInstanceE = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIdNS2_12KeyValuePairIdNS_6MemberINS_14StringKeyframeEEEEENS2_24KeyValuePairKeyExtractorENS2_9FloatHashIdEENS2_18HashMapValueTraitsINS2_10HashTraitsIdEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIdNS2_12KeyValuePairIdNS_6MemberINS_14StringKeyframeEEEEENS2_24KeyValuePairKeyExtractorENS2_9FloatHashIdEENS2_18HashMapValueTraitsINS2_10HashTraitsIdEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_8KeyframeEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8KeyframeEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_12BaseKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_12BaseKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_11EffectModelEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11EffectModelEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink19KeyframeEffectModelINS_14StringKeyframeEEE = comdat any

$_ZZN5blink11GCInfoTraitINS_19InterpolationEffectEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_19InterpolationEffectEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [37 x i8] c"Partial keyframes are not supported.\00", align 1
@_ZZN5blink20LinearTimingFunction6SharedEvE6linear = linkonce_odr hidden local_unnamed_addr global %"class.blink::LinearTimingFunction"* null, comdat, align 8
@_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear = linkonce_odr hidden global i64 0, comdat, align 8
@.str.1 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@_ZTVN5blink20LinearTimingFunctionE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase30is_web_animations_api_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase29is_animation_worklet_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN4absl39AbslInternalInlineVariableHoldernulloptIvE9kInstanceE = linkonce_odr hidden constant %"struct.absl::nullopt_t" undef, comdat, align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"offset\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"composite\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"easing\00", align 1
@.str.7 = private unnamed_addr constant [45 x i8] c"Offsets must be montonically non-decreasing.\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"Offsets must be null or in the range [0,1].\00", align 1
@.str.9 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.10 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.11 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.12 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4absl8optionalIdEEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = absl::optional<double>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4absl8optionalIN5blink11EffectModel18CompositeOperationEEEEEPKcv = private unnamed_addr constant [102 x i8] c"const char *WTF::GetStringWithTypeName() [T = absl::optional<blink::EffectModel::CompositeOperation>]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.13 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.14 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.15 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.16 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@.str.17 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.18 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIdNS2_12KeyValuePairIdNS_6MemberINS_14StringKeyframeEEEEENS2_24KeyValuePairKeyExtractorENS2_9FloatHashIdEENS2_18HashMapValueTraitsINS2_10HashTraitsIdEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIdNS2_12KeyValuePairIdNS_6MemberINS_14StringKeyframeEEEEENS2_24KeyValuePairKeyExtractorENS2_9FloatHashIdEENS2_18HashMapValueTraitsINS2_10HashTraitsIdEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIdNS2_12KeyValuePairIdNS_6MemberINS_14StringKeyframeEEEEENS2_24KeyValuePairKeyExtractorENS2_9FloatHashIdEENS2_18HashMapValueTraitsINS2_10HashTraitsIdEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIdNS2_12KeyValuePairIdNS_6MemberINS_14StringKeyframeEEEEENS2_24KeyValuePairKeyExtractorENS2_9FloatHashIdEENS2_18HashMapValueTraitsINS2_10HashTraitsIdEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.19 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableIdNS_12KeyValuePairIdNS1_6MemberINS1_14StringKeyframeEEEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSD_IS7_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [375 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<double, WTF::KeyValuePair<double, blink::Member<blink::StringKeyframe> >, WTF::KeyValuePairKeyExtractor, WTF::FloatHash<double>, WTF::HashMapValueTraits<WTF::HashTraits<double>, WTF::HashTraits<blink::Member<blink::StringKeyframe> > >, WTF::HashTraits<double>, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8KeyframeEEEPKcv = private unnamed_addr constant [63 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Keyframe]\00", align 1
@_ZZN5blink11GCInfoTraitINS_8KeyframeEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8KeyframeEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8KeyframeEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8KeyframeEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8KeyframeEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink14StringKeyframeE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZTVN5blink8KeyframeE = external unnamed_addr constant { [11 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19CSSPropertyValueSetEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSPropertyValueSet]\00", align 1
@_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_19CSSPropertyValueSetEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_19CSSPropertyValueSetEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.20 = private unnamed_addr constant [37 x i8] c"Invalid keyframe value for property \00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c": \00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ConsoleMessage]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.22 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.23 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.24 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.25 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv = private unnamed_addr constant [54 x i8] c"const char *WTF::GetStringWithTypeName() [T = double]\00", align 1
@.str.26 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.27 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14StringKeyframeEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [169 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::StringKeyframe>, WTF::VectorTraits<blink::Member<blink::StringKeyframe> > >]\00", align 1
@.str.28 = private unnamed_addr constant [48 x i8] c"Keyframes must be objects, or null or undefined\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringES3_EEEEPKcv = private unnamed_addr constant [88 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<WTF::String, WTF::String>]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_12BaseKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_12BaseKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_12BaseKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_12BaseKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberIKNS1_12BaseKeyframeEEENS_12VectorTraitsIS6_EEEEEEPKcv = private unnamed_addr constant [177 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<const blink::BaseKeyframe>, WTF::VectorTraits<blink::Member<const blink::BaseKeyframe> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINSt3__14pairINS_6StringES4_EELj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [129 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<std::__1::pair<WTF::String, WTF::String>, 0, WTF::PartitionAllocator>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14PropertyHandleEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::PropertyHandle]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11EffectModelEEEPKcv = private unnamed_addr constant [66 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::EffectModel]\00", align 1
@_ZZN5blink11GCInfoTraitINS_11EffectModelEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11EffectModelEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_11EffectModelEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11EffectModelEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11EffectModelEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink19KeyframeEffectModelINS_14StringKeyframeEEE = linkonce_odr hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::KeyframeEffectModelBase"*)* @_ZN5blink23KeyframeEffectModelBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::KeyframeEffectModel"*)* @_ZN5blink19KeyframeEffectModelINS_14StringKeyframeEED0Ev to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*, i32, double, double, %"class.blink::HeapVector.2915"*)* @_ZNK5blink23KeyframeEffectModelBase6SampleEidNS_18AnimationTimeDeltaERNS_10HeapVectorINS_6MemberINS_13InterpolationEEELj0EEE to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)* @_ZNK5blink23KeyframeEffectModelBase7AffectsERKNS_14PropertyHandleE to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*)* @_ZNK5blink23KeyframeEffectModelBase30AffectedByUnderlyingAnimationsEv to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*)* @_ZNK5blink23KeyframeEffectModelBase24IsTransformRelatedEffectEv to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*)* @_ZNK5blink23KeyframeEffectModelBase21IsKeyframeEffectModelEv to i8*), i8* bitcast (void (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::Visitor"*)* @_ZNK5blink23KeyframeEffectModelBase5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HeapVector"*, %"class.blink::KeyframeEffectModelBase"*, %"class.blink::Element"*)* @_ZN5blink23KeyframeEffectModelBase20GetComputedKeyframesEPNS_7ElementE to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModel"*)* @_ZNK5blink19KeyframeEffectModelINS_14StringKeyframeEE27IsStringKeyframeEffectModelEv to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModel"*)* @_ZNK5blink19KeyframeEffectModelINS_14StringKeyframeEE31IsTransitionKeyframeEffectModelEv to i8*), i8* bitcast (%"class.blink::KeyframeEffectModelBase"* (%"class.blink::KeyframeEffectModel"*)* @_ZN5blink19KeyframeEffectModelINS_14StringKeyframeEE5CloneEv to i8*)] }, comdat, align 8
@_ZTVN5blink23KeyframeEffectModelBaseE = external unnamed_addr constant { [14 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19InterpolationEffectEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::InterpolationEffect]\00", align 1
@_ZZN5blink11GCInfoTraitINS_19InterpolationEffectEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_19InterpolationEffectEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_19InterpolationEffectEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_19InterpolationEffectEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.29 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8KeyframeEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [157 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Keyframe>, WTF::VectorTraits<blink::Member<blink::Keyframe> > >]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::KeyframeEffectModelBase"* @_ZN5blink11EffectInput7ConvertEPNS_7ElementERKNS_11ScriptValueENS_11EffectModel18CompositeOperationEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::Element"*, %"class.blink::ScriptValue"* dereferenceable(24), i32, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca %"class.blink::HeapVector.2471", align 8
  %8 = alloca %"class.blink::LinearTimingFunction"*, align 8
  store i32 %2, i32* %6, align 4
  %9 = bitcast %"class.blink::HeapVector.2471"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = bitcast %"class.blink::HeapVector.2471"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  call void @_ZN5blink11EffectInput22ParseKeyframesArgumentEPNS_7ElementERKNS_11ScriptValueEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::HeapVector.2471"* nonnull sret %7, %"class.blink::Element"* %0, %"class.blink::ScriptValue"* dereferenceable(24) %1, %"class.blink::ScriptState"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %48

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.blink::HeapVector.2471", %"class.blink::HeapVector.2471"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::HeapVector.2471", %"class.blink::HeapVector.2471"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %17 = load %"class.blink::Member.2477"*, %"class.blink::Member.2477"** %15, align 8
  %18 = load i32, i32* %16, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.blink::Member.2477", %"class.blink::Member.2477"* %17, i64 %19
  %21 = icmp eq i32 %18, 0
  %22 = icmp eq i32 %2, 0
  %23 = or i1 %22, %21
  br i1 %23, label %42, label %24

24:                                               ; preds = %14
  %25 = add i32 %2, -1
  %26 = icmp ugt i32 %25, 1
  br label %27

27:                                               ; preds = %39, %24
  %28 = phi %"class.blink::Member.2477"* [ %40, %39 ], [ %17, %24 ]
  %29 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase29is_animation_worklet_enabled_E, align 1, !range !2
  %30 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_web_animations_api_enabled_E, align 1
  %31 = or i8 %30, %29
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %39

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.blink::Member.2477", %"class.blink::Member.2477"* %28, i64 0, i32 0, i32 0
  %35 = load %"class.blink::StringKeyframe"*, %"class.blink::StringKeyframe"** %34, align 8
  %36 = tail call zeroext i1 @_ZNK5blink14StringKeyframe14HasCssPropertyEv(%"class.blink::StringKeyframe"* %35) #10
  %37 = xor i1 %36, true
  %38 = or i1 %26, %37
  br i1 %38, label %39, label %42

39:                                               ; preds = %33, %27
  %40 = getelementptr inbounds %"class.blink::Member.2477", %"class.blink::Member.2477"* %28, i64 1
  %41 = icmp eq %"class.blink::Member.2477"* %40, %20
  br i1 %41, label %42, label %27

42:                                               ; preds = %33, %39, %14
  %43 = phi i32 [ %2, %14 ], [ %2, %39 ], [ 0, %33 ]
  store i32 %43, i32* %6, align 4
  %44 = bitcast %"class.blink::LinearTimingFunction"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #10
  %45 = tail call %"class.blink::LinearTimingFunction"* @_ZN5blink20LinearTimingFunction6SharedEv()
  store %"class.blink::LinearTimingFunction"* %45, %"class.blink::LinearTimingFunction"** %8, align 8
  %46 = call %"class.blink::KeyframeEffectModel"* @_ZN5blink25MakeGarbageCollectedTraitINS_19KeyframeEffectModelINS_14StringKeyframeEEEE4CallIJRNS_10HeapVectorINS_6MemberIS2_EELj0EEERNS_11EffectModel18CompositeOperationEPNS_20LinearTimingFunctionEEEEPS3_DpOT_(%"class.blink::HeapVector.2471"* nonnull dereferenceable(16) %7, i32* nonnull dereferenceable(4) %6, %"class.blink::LinearTimingFunction"** nonnull dereferenceable(8) %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #10
  %47 = bitcast %"class.blink::KeyframeEffectModel"* %46 to %"class.blink::KeyframeEffectModelBase"*
  br label %48

48:                                               ; preds = %5, %42
  %49 = phi %"class.blink::KeyframeEffectModelBase"* [ %47, %42 ], [ null, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  ret %"class.blink::KeyframeEffectModelBase"* %49
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11EffectInput22ParseKeyframesArgumentEPNS_7ElementERKNS_11ScriptValueEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::HeapVector.2471"* noalias nocapture sret, %"class.blink::Element"*, %"class.blink::ScriptValue"* dereferenceable(24), %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, align 8
  %15 = alloca %"class.v8::Local.2521", align 8
  %16 = alloca %"class.WTF::Vector.506", align 8
  %17 = alloca %"class.v8::TryCatch", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = alloca %"struct.std::__1::pair.984", align 8
  %20 = alloca %"class.logging::CheckError", align 8
  %21 = alloca %"class.blink::HeapVector.2864", align 8
  %22 = alloca %"class.WTF::Vector.2873", align 8
  %23 = alloca %"class.blink::BaseKeyframe"*, align 8
  %24 = alloca %"class.WTF::Vector.981", align 8
  %25 = alloca %"class.blink::HeapVector.2471", align 8
  %26 = alloca %"class.blink::StringKeyframe"*, align 8
  %27 = alloca %"class.blink::ScriptIterator", align 8
  %28 = alloca %"class.logging::CheckError", align 8
  %29 = alloca %"struct.std::__1::__less.2856", align 1
  %30 = alloca %"class.v8::TryCatch", align 8
  %31 = alloca %"class.WTF::StringView", align 8
  %32 = alloca %"class.blink::StringOrStringSequence", align 8
  %33 = alloca %"class.WTF::StringView", align 8
  %34 = alloca %"class.WTF::StringView", align 8
  %35 = alloca %"class.WTF::StringView", align 8
  %36 = alloca %"class.WTF::StringView", align 8
  %37 = alloca %"class.WTF::StringView", align 8
  %38 = alloca %"class.WTF::StringView", align 8
  %39 = alloca %"class.WTF::StringView", align 8
  %40 = alloca %"class.WTF::StringView", align 8
  %41 = alloca i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, align 8
  %42 = alloca %"class.WTF::Vector.2662", align 8
  %43 = alloca i64, align 8
  %44 = alloca %"class.WTF::Vector.2657", align 8
  %45 = alloca double, align 8
  %46 = alloca %"class.WTF::Vector.506", align 8
  %47 = alloca %"class.WTF::Vector.2662", align 8
  %48 = alloca %"class.WTF::Vector.506", align 8
  %49 = alloca %"class.blink::HeapHashMap.2667", align 8
  %50 = alloca %"class.WTF::Vector.506", align 8
  %51 = alloca double, align 8
  %52 = alloca i8*, align 8
  %53 = alloca %"class.WTF::Vector.1129", align 8
  %54 = alloca %"class.blink::HeapVector.2471", align 8
  %55 = alloca %"class.blink::StringKeyframe"*, align 8
  %56 = alloca %"class.blink::PropertyHandle", align 8
  %57 = alloca %"class.blink::PropertyHandle", align 8
  %58 = alloca %"class.WTF::Vector.1129", align 8
  %59 = alloca %"class.WTF::HashSet.2903", align 8
  %60 = alloca %"class.WTF::HashSet.2903", align 8
  %61 = alloca %"class.WTF::HashSet.2903", align 8
  %62 = alloca %"class.v8::Local.2521", align 8
  %63 = alloca %"class.blink::ScriptIterator", align 8
  %64 = alloca %"class.blink::HeapVector.2471", align 8
  %65 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %2) #10
  %66 = bitcast %"class.v8::Value"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = and i64 %67, 3
  %69 = icmp eq i64 %68, 1
  br i1 %69, label %70, label %88

70:                                               ; preds = %5
  %71 = add i64 %67, -1
  %72 = inttoptr i64 %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = and i64 %67, -4294967296
  %75 = zext i32 %73 to i64
  %76 = or i64 %74, %75
  %77 = add i64 %76, 7
  %78 = inttoptr i64 %77 to i16*
  %79 = load i16, i16* %78, align 2
  %80 = icmp eq i16 %79, 67
  br i1 %80, label %81, label %88

81:                                               ; preds = %70
  %82 = add i64 %67, 23
  %83 = inttoptr i64 %82 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = ashr i32 %84, 1
  switch i32 %85, label %88 [
    i32 5, label %86
    i32 3, label %86
  ]

86:                                               ; preds = %81, %81
  %87 = bitcast %"class.blink::HeapVector.2471"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 16, i1 false)
  br label %2072

88:                                               ; preds = %81, %70, %5
  %89 = bitcast %"class.v8::Local.2521"* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #10
  %90 = getelementptr inbounds %"class.v8::Local.2521", %"class.v8::Local.2521"* %62, i64 0, i32 0
  %91 = bitcast %"class.v8::Value"* %65 to %"class.v8::Object"*
  %92 = bitcast %"class.v8::Local.2521"* %62 to %"class.v8::Value"**
  store %"class.v8::Value"* %65, %"class.v8::Value"** %92, align 8
  %93 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %3, i64 0, i32 0
  %94 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %93, align 8
  %95 = bitcast %"class.blink::ScriptIterator"* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %95) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 -86, i64 56, i1 false)
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %63, %"class.v8::Isolate"* %94, %"class.v8::Object"* %91, %"class.blink::ExceptionState"* dereferenceable(72) %4) #10
  %96 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %101, label %99

99:                                               ; preds = %88
  %100 = bitcast %"class.blink::HeapVector.2471"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 16, i1 false)
  br label %2071

101:                                              ; preds = %88
  %102 = icmp eq %"class.blink::Element"* %1, null
  br i1 %102, label %103, label %106

103:                                              ; preds = %101
  %104 = call %"class.blink::LocalDOMWindow"* @_ZN5blink14LocalDOMWindow4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %3) #10
  %105 = call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %104) #10
  br label %158

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %108 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %108, i64 0, i32 2, i32 0, i32 0
  %110 = load %"class.blink::Document"*, %"class.blink::Document"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %112 = load i32, i32* %111, align 8
  %113 = and i32 %112, 12
  %114 = icmp eq i32 %113, 0
  %115 = and i32 %112, 1
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %114, label %118, label %129

118:                                              ; preds = %106
  br i1 %116, label %125, label %119

119:                                              ; preds = %118
  %120 = bitcast %"class.blink::NodeData"** %117 to %"class.blink::NodeRareData"**
  %121 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %121, i64 0, i32 1, i32 0, i32 0
  %123 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %122, align 8
  %124 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %123, i64 0, i32 2, i32 0
  br label %144

125:                                              ; preds = %118
  %126 = bitcast %"class.blink::NodeData"** %117 to %"class.blink::NodeRenderingData"**
  %127 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %126, align 8
  %128 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %127, i64 0, i32 2, i32 0
  br label %144

129:                                              ; preds = %106
  br i1 %116, label %134, label %130

130:                                              ; preds = %129
  %131 = bitcast %"class.blink::NodeData"** %117 to %"class.blink::NodeRareData"**
  %132 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %131, align 8
  %133 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %132, i64 0, i32 1, i32 0, i32 0
  br label %136

134:                                              ; preds = %129
  %135 = bitcast %"class.blink::NodeData"** %117 to %"class.blink::NodeRenderingData"**
  br label %136

136:                                              ; preds = %134, %130
  %137 = phi %"class.blink::NodeRenderingData"** [ %133, %130 ], [ %135, %134 ]
  %138 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %137, align 8
  %139 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %138, i64 0, i32 1
  %140 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %139, align 8
  %141 = icmp eq %"class.blink::LayoutObject"* %140, null
  br i1 %141, label %158, label %142

142:                                              ; preds = %136
  %143 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %140, i64 0, i32 5, i32 0
  br label %144

144:                                              ; preds = %142, %125, %119
  %145 = phi %"class.blink::ComputedStyle"** [ %143, %142 ], [ %124, %119 ], [ %128, %125 ]
  %146 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %145, align 8
  %147 = icmp eq %"class.blink::ComputedStyle"* %146, null
  br i1 %147, label %158, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %146, i64 0, i32 0, i32 9
  %150 = bitcast [20 x i8]* %149 to i160*
  %151 = load i160, i160* %150, align 8
  %152 = lshr i160 %151, 115
  %153 = trunc i160 %152 to i8
  %154 = and i8 %153, 1
  %155 = lshr i160 %151, 102
  %156 = trunc i160 %155 to i8
  %157 = and i8 %156, 3
  br label %158

158:                                              ; preds = %144, %136, %103, %148
  %159 = phi i8 [ %154, %148 ], [ 0, %144 ], [ 0, %103 ], [ 0, %136 ]
  %160 = phi %"class.blink::Document"* [ %110, %148 ], [ %110, %144 ], [ %105, %103 ], [ %110, %136 ]
  %161 = phi i8 [ %157, %148 ], [ 0, %144 ], [ 0, %103 ], [ 0, %136 ]
  %162 = bitcast %"class.blink::HeapVector.2471"* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %162) #10
  %163 = getelementptr inbounds %"class.blink::HeapVector.2471", %"class.blink::HeapVector.2471"* %64, i64 0, i32 0, i32 0, i32 0, i32 1
  %164 = getelementptr inbounds %"class.blink::HeapVector.2471", %"class.blink::HeapVector.2471"* %64, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %162, i8 0, i64 16, i1 false) #10
  %165 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %63, i64 0, i32 1, i32 0
  %166 = load %"class.v8::Object"*, %"class.v8::Object"** %165, align 8
  %167 = icmp eq %"class.v8::Object"* %166, null
  br i1 %167, label %168, label %1065

168:                                              ; preds = %158
  %169 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %93, align 8, !noalias !3
  %170 = load %"class.v8::Value"*, %"class.v8::Value"** %92, align 8, !noalias !3
  %171 = call %"class.blink::BasePropertyIndexedKeyframe"* @_ZN5blink17NativeValueTraitsINS_27BasePropertyIndexedKeyframeEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %169, %"class.v8::Value"* %170, %"class.blink::ExceptionState"* dereferenceable(72) %4) #10, !noalias !3
  %172 = load i32, i32* %96, align 8, !noalias !3
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %1048

174:                                              ; preds = %168
  %175 = bitcast %"class.WTF::Vector.2657"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %175) #10, !noalias !3
  %176 = getelementptr inbounds %"class.WTF::Vector.2657", %"class.WTF::Vector.2657"* %44, i64 0, i32 0, i32 0, i32 0
  %177 = getelementptr inbounds %"class.WTF::Vector.2657", %"class.WTF::Vector.2657"* %44, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %175, i8 0, i64 16, i1 false) #10, !noalias !3
  %178 = getelementptr inbounds %"class.blink::BasePropertyIndexedKeyframe", %"class.blink::BasePropertyIndexedKeyframe"* %171, i64 0, i32 3
  %179 = getelementptr inbounds %"class.blink::DoubleOrDoubleOrNullSequence", %"class.blink::DoubleOrDoubleOrNullSequence"* %178, i64 0, i32 0
  %180 = load i32, i32* %179, align 8, !noalias !3
  switch i32 %180, label %185 [
    i32 0, label %181
    i32 1, label %182
  ]

181:                                              ; preds = %174
  call void @_ZN3WTF6VectorIN4absl8optionalIdEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKNS1_9nullopt_tEEEvOT_(%"class.WTF::Vector.2657"* nonnull %44, %"struct.absl::nullopt_t"* nonnull dereferenceable(1) @_ZN4absl39AbslInternalInlineVariableHoldernulloptIvE9kInstanceE) #10, !noalias !3
  br label %188

182:                                              ; preds = %174
  %183 = bitcast double* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %183) #10, !noalias !3
  %184 = call double @_ZNK5blink28DoubleOrDoubleOrNullSequence11GetAsDoubleEv(%"class.blink::DoubleOrDoubleOrNullSequence"* %178) #10, !noalias !3
  store double %184, double* %45, align 8, !noalias !3
  call void @_ZN3WTF6VectorIN4absl8optionalIdEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIdEEvOT_(%"class.WTF::Vector.2657"* nonnull %44, double* nonnull dereferenceable(8) %45) #10, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #10, !noalias !3
  br label %188

185:                                              ; preds = %174
  %186 = call dereferenceable(16) %"class.WTF::Vector.2657"* @_ZNK5blink28DoubleOrDoubleOrNullSequence25GetAsDoubleOrNullSequenceEv(%"class.blink::DoubleOrDoubleOrNullSequence"* %178) #10, !noalias !3
  %187 = call dereferenceable(16) %"class.WTF::Vector.2657"* @_ZN3WTF6VectorIN4absl8optionalIdEELj0ENS_18PartitionAllocatorEEaSERKS5_(%"class.WTF::Vector.2657"* nonnull %44, %"class.WTF::Vector.2657"* dereferenceable(16) %186) #10, !noalias !3
  br label %188

188:                                              ; preds = %185, %182, %181
  %189 = bitcast %"class.WTF::Vector.506"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %189) #10, !noalias !3
  %190 = getelementptr inbounds %"class.WTF::Vector.506", %"class.WTF::Vector.506"* %46, i64 0, i32 0, i32 0, i32 0
  %191 = getelementptr inbounds %"class.WTF::Vector.506", %"class.WTF::Vector.506"* %46, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %189, i8 0, i64 16, i1 false) #10, !noalias !3
  %192 = getelementptr inbounds %"class.blink::BasePropertyIndexedKeyframe", %"class.blink::BasePropertyIndexedKeyframe"* %171, i64 0, i32 2
  %193 = getelementptr inbounds %"class.blink::StringOrStringSequence", %"class.blink::StringOrStringSequence"* %192, i64 0, i32 0
  %194 = load i32, i32* %193, align 8, !noalias !3
  %195 = icmp eq i32 %194, 1
  br i1 %195, label %196, label %230

196:                                              ; preds = %188
  %197 = getelementptr inbounds %"class.WTF::Vector.506", %"class.WTF::Vector.506"* %46, i64 0, i32 0, i32 0, i32 1
  %198 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink22StringOrStringSequence11GetAsStringEv(%"class.blink::StringOrStringSequence"* %192) #10, !noalias !3
  %199 = load i32, i32* %191, align 4, !noalias !3
  %200 = load i32, i32* %197, align 8, !noalias !3
  %201 = icmp eq i32 %199, %200
  br i1 %201, label %229, label %202, !prof !6

202:                                              ; preds = %196
  %203 = load %"class.WTF::String"*, %"class.WTF::String"** %190, align 8, !noalias !3
  %204 = zext i32 %199 to i64
  %205 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %198, i64 0, i32 0, i32 0
  %206 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %205, align 8, !noalias !3
  %207 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %203, i64 %204, i32 0, i32 0
  store %"class.WTF::StringImpl"* %206, %"class.WTF::StringImpl"** %207, align 8, !noalias !3
  %208 = icmp eq %"class.WTF::StringImpl"* %206, null
  br i1 %208, label %226, label %209

209:                                              ; preds = %202
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %206, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4, !noalias !3
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %226

214:                                              ; preds = %209
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %206, i64 0, i32 0
  %216 = load i32, i32* %215, align 4, !noalias !3
  %217 = zext i32 %216 to i33
  %218 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %217, i33 1) #10
  %219 = extractvalue { i33, i1 } %218, 1
  %220 = extractvalue { i33, i1 } %218, 0
  %221 = icmp slt i33 %220, 0
  %222 = or i1 %219, %221
  br i1 %222, label %223, label %224, !prof !6

223:                                              ; preds = %214
  call void @llvm.trap() #10, !noalias !3
  unreachable

224:                                              ; preds = %214
  %225 = trunc i33 %220 to i32
  store i32 %225, i32* %215, align 4, !noalias !3
  br label %226

226:                                              ; preds = %224, %209, %202
  %227 = load i32, i32* %191, align 4, !noalias !3
  %228 = add i32 %227, 1
  store i32 %228, i32* %191, align 4, !noalias !3
  br label %233

229:                                              ; preds = %196
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.506"* nonnull %46, %"class.WTF::String"* dereferenceable(8) %198) #10, !noalias !3
  br label %233

230:                                              ; preds = %188
  %231 = call dereferenceable(16) %"class.WTF::Vector.506"* @_ZNK5blink22StringOrStringSequence19GetAsStringSequenceEv(%"class.blink::StringOrStringSequence"* %192) #10, !noalias !3
  %232 = call dereferenceable(16) %"class.WTF::Vector.506"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector.506"* nonnull %46, %"class.WTF::Vector.506"* dereferenceable(16) %231) #10, !noalias !3
  br label %233

233:                                              ; preds = %230, %229, %226
  %234 = bitcast %"class.WTF::Vector.2662"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %234) #10, !noalias !3
  %235 = getelementptr inbounds %"class.WTF::Vector.2662", %"class.WTF::Vector.2662"* %47, i64 0, i32 0, i32 0, i32 0
  %236 = getelementptr inbounds %"class.WTF::Vector.2662", %"class.WTF::Vector.2662"* %47, i64 0, i32 0, i32 0, i32 1
  %237 = getelementptr inbounds %"class.WTF::Vector.2662", %"class.WTF::Vector.2662"* %47, i64 0, i32 0, i32 0, i32 2
  %238 = bitcast i64* %43 to %"class.absl::optional.2486"*
  %239 = getelementptr inbounds %"class.blink::BasePropertyIndexedKeyframe", %"class.blink::BasePropertyIndexedKeyframe"* %171, i64 0, i32 1
  %240 = getelementptr inbounds %"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %239, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %234, i8 -86, i64 16, i1 false) #10, !noalias !3
  %241 = load i32, i32* %240, align 8, !noalias !7
  %242 = icmp eq i32 %241, 1
  br i1 %242, label %243, label %255

243:                                              ; preds = %233
  %244 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink58CompositeOperationOrAutoOrCompositeOperationOrAutoSequence29GetAsCompositeOperationOrAutoEv(%"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %239) #10, !noalias !7
  %245 = call i64 @_ZN5blink11EffectModel26StringToCompositeOperationERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %244) #10, !noalias !7
  %246 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 8) #10, !noalias !7
  %247 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %246, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4absl8optionalIN5blink11EffectModel18CompositeOperationEEEEEPKcv, i64 0, i64 0)) #10, !noalias !7
  %248 = ptrtoint i8* %247 to i64
  %249 = bitcast %"class.WTF::Vector.2662"* %47 to i64*
  store atomic i64 %248, i64* %249 monotonic, align 8, !alias.scope !10, !noalias !3
  %250 = lshr i64 %246, 3
  %251 = trunc i64 %250 to i32
  store i32 %251, i32* %236, align 8, !alias.scope !10, !noalias !3
  store i32 1, i32* %237, align 4, !alias.scope !10, !noalias !3
  %252 = icmp eq i8* %247, null
  br i1 %252, label %300, label %253, !prof !6

253:                                              ; preds = %243
  %254 = bitcast i8* %247 to i64*
  store i64 %245, i64* %254, align 4, !noalias !7
  br label %300

255:                                              ; preds = %233
  %256 = bitcast %"class.WTF::Vector.2662"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %256) #10, !noalias !7
  %257 = getelementptr inbounds %"class.WTF::Vector.2662", %"class.WTF::Vector.2662"* %42, i64 0, i32 0, i32 0, i32 0
  %258 = getelementptr inbounds %"class.WTF::Vector.2662", %"class.WTF::Vector.2662"* %42, i64 0, i32 0, i32 0, i32 1
  %259 = getelementptr inbounds %"class.WTF::Vector.2662", %"class.WTF::Vector.2662"* %42, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %256, i8 0, i64 16, i1 false) #10, !noalias !7
  %260 = call dereferenceable(16) %"class.WTF::Vector.506"* @_ZNK5blink58CompositeOperationOrAutoOrCompositeOperationOrAutoSequence37GetAsCompositeOperationOrAutoSequenceEv(%"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %239) #10, !noalias !7
  %261 = getelementptr inbounds %"class.WTF::Vector.506", %"class.WTF::Vector.506"* %260, i64 0, i32 0, i32 0, i32 0
  %262 = load %"class.WTF::String"*, %"class.WTF::String"** %261, align 8, !noalias !7
  %263 = getelementptr inbounds %"class.WTF::Vector.506", %"class.WTF::Vector.506"* %260, i64 0, i32 0, i32 0, i32 2
  %264 = load i32, i32* %263, align 4, !noalias !7
  %265 = zext i32 %264 to i64
  %266 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %262, i64 %265
  %267 = icmp eq i32 %264, 0
  br i1 %267, label %268, label %270

268:                                              ; preds = %255
  %269 = bitcast %"class.WTF::Vector.2662"* %42 to i64*
  br label %277

270:                                              ; preds = %255
  %271 = bitcast i64* %43 to i8*
  br label %283

272:                                              ; preds = %297
  %273 = bitcast %"class.WTF::Vector.2662"* %42 to i64*
  %274 = load i64, i64* %273, align 8, !noalias !7
  %275 = load i32, i32* %258, align 8, !noalias !7
  %276 = load i32, i32* %259, align 4, !noalias !7
  br label %277

277:                                              ; preds = %272, %268
  %278 = phi i64* [ %269, %268 ], [ %273, %272 ]
  %279 = phi i32 [ 0, %268 ], [ %276, %272 ]
  %280 = phi i32 [ 0, %268 ], [ %275, %272 ]
  %281 = phi i64 [ 0, %268 ], [ %274, %272 ]
  %282 = bitcast %"class.WTF::Vector.2662"* %47 to i64*
  store i64 0, i64* %282, align 8, !alias.scope !10, !noalias !3
  store atomic i64 0, i64* %278 monotonic, align 8, !noalias !7
  store atomic i64 %281, i64* %282 monotonic, align 8, !alias.scope !10, !noalias !3
  store i32 %280, i32* %236, align 8, !alias.scope !10, !noalias !3
  store i32 %279, i32* %237, align 4, !alias.scope !10, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %256) #10, !noalias !7
  br label %300

283:                                              ; preds = %297, %270
  %284 = phi %"class.WTF::String"* [ %262, %270 ], [ %298, %297 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %271) #10, !noalias !7
  %285 = call i64 @_ZN5blink11EffectModel26StringToCompositeOperationERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %284) #10, !noalias !7
  store i64 %285, i64* %43, align 8, !noalias !7
  %286 = load i32, i32* %259, align 4, !noalias !7
  %287 = load i32, i32* %258, align 8, !noalias !7
  %288 = icmp eq i32 %286, %287
  br i1 %288, label %296, label %289, !prof !6

289:                                              ; preds = %283
  %290 = load %"class.absl::optional.2486"*, %"class.absl::optional.2486"** %257, align 8, !noalias !7
  %291 = zext i32 %286 to i64
  %292 = getelementptr inbounds %"class.absl::optional.2486", %"class.absl::optional.2486"* %290, i64 %291, i32 0, i32 0, i32 0, i32 0
  %293 = bitcast i8* %292 to i64*
  store i64 %285, i64* %293, align 4, !noalias !7
  %294 = load i32, i32* %259, align 4, !noalias !7
  %295 = add i32 %294, 1
  store i32 %295, i32* %259, align 4, !noalias !7
  br label %297

296:                                              ; preds = %283
  call void @_ZN3WTF6VectorIN4absl8optionalIN5blink11EffectModel18CompositeOperationEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS6_EEvOT_(%"class.WTF::Vector.2662"* nonnull %42, %"class.absl::optional.2486"* nonnull dereferenceable(8) %238) #10, !noalias !7
  br label %297

297:                                              ; preds = %296, %289
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %271) #10, !noalias !7
  %298 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %284, i64 1
  %299 = icmp eq %"class.WTF::String"* %298, %266
  br i1 %299, label %272, label %283

300:                                              ; preds = %277, %253, %243
  %301 = bitcast %"class.WTF::Vector.506"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %301) #10, !noalias !3
  %302 = getelementptr inbounds %"class.WTF::Vector.506", %"class.WTF::Vector.506"* %48, i64 0, i32 0, i32 0, i32 0
  %303 = getelementptr inbounds %"class.WTF::Vector.506", %"class.WTF::Vector.506"* %48, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %301, i8 -86, i64 16, i1 false) #10, !noalias !3
  %304 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %93, align 8, !noalias !3
  call void @_ZN5blink19GetOwnPropertyNamesEPN2v87IsolateERKNS0_5LocalINS0_6ObjectEEERNS_14ExceptionStateE(%"class.WTF::Vector.506"* nonnull sret %48, %"class.v8::Isolate"* %304, %"class.v8::Local.2521"* nonnull dereferenceable(8) %62, %"class.blink::ExceptionState"* dereferenceable(72) %4) #10, !noalias !3
  %305 = load i32, i32* %96, align 8, !noalias !3
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %954

307:                                              ; preds = %300
  %308 = bitcast %"class.blink::HeapHashMap.2667"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %308) #10, !noalias !3
  %309 = getelementptr inbounds %"class.blink::HeapHashMap.2667", %"class.blink::HeapHashMap.2667"* %49, i64 0, i32 0, i32 0, i32 0
  %310 = getelementptr inbounds %"class.blink::HeapHashMap.2667", %"class.blink::HeapHashMap.2667"* %49, i64 0, i32 0, i32 0, i32 1
  %311 = getelementptr inbounds %"class.blink::HeapHashMap.2667", %"class.blink::HeapHashMap.2667"* %49, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %308, i8 -86, i64 24, i1 false) #10, !noalias !3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %308, i8 0, i64 20, i1 false) #10, !noalias !3
  %312 = load %"class.WTF::String"*, %"class.WTF::String"** %302, align 8, !noalias !3
  %313 = load i32, i32* %303, align 4, !noalias !3
  %314 = zext i32 %313 to i64
  %315 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %312, i64 %314
  %316 = bitcast i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %316) #10, !noalias !3
  store i1 (%"class.WTF::String"*, %"class.WTF::String"*)* @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %41, align 8, !noalias !3
  call void @_ZNSt3__16__sortIRPFbRKN3WTF6StringES4_EPS2_EEvT0_S9_T_(%"class.WTF::String"* %312, %"class.WTF::String"* %315, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** nonnull dereferenceable(8) %41) #10, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %316) #10, !noalias !3
  %317 = load %"class.WTF::String"*, %"class.WTF::String"** %302, align 8, !noalias !3
  %318 = load i32, i32* %303, align 4, !noalias !3
  %319 = zext i32 %318 to i64
  %320 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %317, i64 %319
  %321 = icmp eq i32 %318, 0
  br i1 %321, label %611, label %322

322:                                              ; preds = %307
  %323 = bitcast %"class.WTF::StringView"* %39 to i8*
  %324 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %39, i64 0, i32 0
  %325 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %39, i64 0, i32 1
  %326 = bitcast i8** %325 to %"class.WTF::StringImpl"**
  %327 = bitcast %"class.WTF::StringView"* %39 to i64*
  %328 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %39, i64 0, i32 2
  %329 = bitcast %"class.WTF::StringView"* %40 to i8*
  %330 = bitcast %"class.WTF::StringView"* %40 to i64*
  %331 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %40, i64 0, i32 1
  %332 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %40, i64 0, i32 2
  %333 = bitcast %"class.WTF::StringView"* %37 to i8*
  %334 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %37, i64 0, i32 0
  %335 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %37, i64 0, i32 1
  %336 = bitcast i8** %335 to %"class.WTF::StringImpl"**
  %337 = bitcast %"class.WTF::StringView"* %37 to i64*
  %338 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %37, i64 0, i32 2
  %339 = bitcast %"class.WTF::StringView"* %38 to i8*
  %340 = bitcast %"class.WTF::StringView"* %38 to i64*
  %341 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %38, i64 0, i32 1
  %342 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %38, i64 0, i32 2
  %343 = bitcast %"class.WTF::StringView"* %35 to i8*
  %344 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %35, i64 0, i32 0
  %345 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %35, i64 0, i32 1
  %346 = bitcast i8** %345 to %"class.WTF::StringImpl"**
  %347 = bitcast %"class.WTF::StringView"* %35 to i64*
  %348 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %35, i64 0, i32 2
  %349 = bitcast %"class.WTF::StringView"* %36 to i8*
  %350 = bitcast %"class.WTF::StringView"* %36 to i64*
  %351 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %36, i64 0, i32 1
  %352 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %36, i64 0, i32 2
  %353 = bitcast %"class.WTF::StringView"* %33 to i8*
  %354 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %33, i64 0, i32 0
  %355 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %33, i64 0, i32 1
  %356 = bitcast i8** %355 to %"class.WTF::StringImpl"**
  %357 = bitcast %"class.WTF::StringView"* %33 to i64*
  %358 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %33, i64 0, i32 2
  %359 = bitcast %"class.WTF::StringView"* %34 to i8*
  %360 = bitcast %"class.WTF::StringView"* %34 to i64*
  %361 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %34, i64 0, i32 1
  %362 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %34, i64 0, i32 2
  %363 = bitcast %"class.WTF::Vector.506"* %50 to i8*
  %364 = getelementptr inbounds %"class.WTF::Vector.506", %"class.WTF::Vector.506"* %50, i64 0, i32 0, i32 0, i32 0
  %365 = getelementptr inbounds %"class.WTF::Vector.506", %"class.WTF::Vector.506"* %50, i64 0, i32 0, i32 0, i32 1
  %366 = getelementptr inbounds %"class.WTF::Vector.506", %"class.WTF::Vector.506"* %50, i64 0, i32 0, i32 0, i32 2
  %367 = bitcast %"class.v8::TryCatch"* %30 to i8*
  %368 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %369 = bitcast %"class.blink::ScriptState"* %3 to %"class.v8::internal::Isolate"**
  %370 = bitcast %"class.WTF::StringView"* %31 to i8*
  %371 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %31, i64 0, i32 0
  %372 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %31, i64 0, i32 1
  %373 = bitcast i8** %372 to %"class.WTF::StringImpl"**
  %374 = bitcast %"class.WTF::StringView"* %31 to i64*
  %375 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %31, i64 0, i32 2
  %376 = bitcast %"class.blink::StringOrStringSequence"* %32 to i8*
  %377 = getelementptr inbounds %"class.blink::StringOrStringSequence", %"class.blink::StringOrStringSequence"* %32, i64 0, i32 0
  %378 = bitcast double* %51 to i8*
  %379 = bitcast i8** %52 to i8*
  %380 = getelementptr inbounds %"class.blink::HeapHashMap.2667", %"class.blink::HeapHashMap.2667"* %49, i64 0, i32 0, i32 0
  %381 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %382 = bitcast %"class.WTF::Vector.506"* %50 to i8**
  br label %383

383:                                              ; preds = %608, %322
  %384 = phi %"class.WTF::String"* [ %317, %322 ], [ %609, %608 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %323) #10, !noalias !3
  %385 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %384, i64 0, i32 0, i32 0
  %386 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %385, align 8, !noalias !3
  %387 = icmp eq %"class.WTF::StringImpl"* %386, null
  br i1 %387, label %388, label %390

388:                                              ; preds = %383
  store i8* null, i8** %325, align 8, !noalias !3
  %389 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !3
  store i64 %389, i64* %327, align 8, !noalias !3
  br label %395

390:                                              ; preds = %383
  store %"class.WTF::StringImpl"* %386, %"class.WTF::StringImpl"** %324, align 8, !noalias !3
  %391 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %386, i64 0, i32 1
  %392 = load i32, i32* %391, align 4, !noalias !3
  %393 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %386, i64 1
  store %"class.WTF::StringImpl"* %393, %"class.WTF::StringImpl"** %326, align 8, !noalias !3
  %394 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !3
  br label %395

395:                                              ; preds = %390, %388
  %396 = phi i64 [ %394, %390 ], [ %389, %388 ]
  %397 = phi i32 [ %392, %390 ], [ 0, %388 ]
  store i32 %397, i32* %328, align 8, !noalias !3
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %329) #10, !noalias !3
  store i64 %396, i64* %330, align 8, !noalias !3
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i8** %331, align 8, !noalias !3
  store i32 6, i32* %332, align 8, !noalias !3
  %398 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %39, %"class.WTF::StringView"* nonnull dereferenceable(24) %40) #10, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %329) #10, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %323) #10, !noalias !3
  br i1 %398, label %608, label %399

399:                                              ; preds = %395
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %333) #10, !noalias !3
  %400 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %385, align 8, !noalias !3
  %401 = icmp eq %"class.WTF::StringImpl"* %400, null
  br i1 %401, label %402, label %404

402:                                              ; preds = %399
  store i8* null, i8** %335, align 8, !noalias !3
  %403 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !3
  store i64 %403, i64* %337, align 8, !noalias !3
  br label %409

404:                                              ; preds = %399
  store %"class.WTF::StringImpl"* %400, %"class.WTF::StringImpl"** %334, align 8, !noalias !3
  %405 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %400, i64 0, i32 1
  %406 = load i32, i32* %405, align 4, !noalias !3
  %407 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %400, i64 1
  store %"class.WTF::StringImpl"* %407, %"class.WTF::StringImpl"** %336, align 8, !noalias !3
  %408 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !3
  br label %409

409:                                              ; preds = %404, %402
  %410 = phi i64 [ %408, %404 ], [ %403, %402 ]
  %411 = phi i32 [ %406, %404 ], [ 0, %402 ]
  store i32 %411, i32* %338, align 8, !noalias !3
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %339) #10, !noalias !3
  store i64 %410, i64* %340, align 8, !noalias !3
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i8** %341, align 8, !noalias !3
  store i32 5, i32* %342, align 8, !noalias !3
  %412 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %37, %"class.WTF::StringView"* nonnull dereferenceable(24) %38) #10, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %339) #10, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %333) #10, !noalias !3
  br i1 %412, label %608, label %413

413:                                              ; preds = %409
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %343) #10, !noalias !3
  %414 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %385, align 8, !noalias !3
  %415 = icmp eq %"class.WTF::StringImpl"* %414, null
  br i1 %415, label %416, label %418

416:                                              ; preds = %413
  store i8* null, i8** %345, align 8, !noalias !3
  %417 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !3
  store i64 %417, i64* %347, align 8, !noalias !3
  br label %423

418:                                              ; preds = %413
  store %"class.WTF::StringImpl"* %414, %"class.WTF::StringImpl"** %344, align 8, !noalias !3
  %419 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %414, i64 0, i32 1
  %420 = load i32, i32* %419, align 4, !noalias !3
  %421 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %414, i64 1
  store %"class.WTF::StringImpl"* %421, %"class.WTF::StringImpl"** %346, align 8, !noalias !3
  %422 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !3
  br label %423

423:                                              ; preds = %418, %416
  %424 = phi i64 [ %422, %418 ], [ %417, %416 ]
  %425 = phi i32 [ %420, %418 ], [ 0, %416 ]
  store i32 %425, i32* %348, align 8, !noalias !3
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %349) #10, !noalias !3
  store i64 %424, i64* %350, align 8, !noalias !3
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i8** %351, align 8, !noalias !3
  store i32 9, i32* %352, align 8, !noalias !3
  %426 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %35, %"class.WTF::StringView"* nonnull dereferenceable(24) %36) #10, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %349) #10, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %343) #10, !noalias !3
  br i1 %426, label %608, label %427

427:                                              ; preds = %423
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %353) #10, !noalias !3
  %428 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %385, align 8, !noalias !3
  %429 = icmp eq %"class.WTF::StringImpl"* %428, null
  br i1 %429, label %430, label %432

430:                                              ; preds = %427
  store i8* null, i8** %355, align 8, !noalias !3
  %431 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !3
  store i64 %431, i64* %357, align 8, !noalias !3
  br label %437

432:                                              ; preds = %427
  store %"class.WTF::StringImpl"* %428, %"class.WTF::StringImpl"** %354, align 8, !noalias !3
  %433 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %428, i64 0, i32 1
  %434 = load i32, i32* %433, align 4, !noalias !3
  %435 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %428, i64 1
  store %"class.WTF::StringImpl"* %435, %"class.WTF::StringImpl"** %356, align 8, !noalias !3
  %436 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !3
  br label %437

437:                                              ; preds = %432, %430
  %438 = phi i64 [ %436, %432 ], [ %431, %430 ]
  %439 = phi i32 [ %434, %432 ], [ 0, %430 ]
  store i32 %439, i32* %358, align 8, !noalias !3
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %359) #10, !noalias !3
  store i64 %438, i64* %360, align 8, !noalias !3
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i8** %361, align 8, !noalias !3
  store i32 6, i32* %362, align 8, !noalias !3
  %440 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %33, %"class.WTF::StringView"* nonnull dereferenceable(24) %34) #10, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %359) #10, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %353) #10, !noalias !3
  br i1 %440, label %608, label %441

441:                                              ; preds = %437
  %442 = call i32 @_ZN5blink21AnimationInputHelpers30KeyframeAttributeToCSSPropertyERKN3WTF6StringERKNS_8DocumentE(%"class.WTF::String"* dereferenceable(8) %384, %"class.blink::Document"* dereferenceable(2848) %160) #10, !noalias !3
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %447, label %444

444:                                              ; preds = %441
  %445 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %442) #10, !noalias !3
  %446 = call zeroext i1 @_ZN5blink13CSSAnimations28IsAnimationAffectingPropertyERKNS_11CSSPropertyE(%"class.blink::CSSProperty"* dereferenceable(24) %445) #10, !noalias !3
  br i1 %446, label %608, label %453

447:                                              ; preds = %441
  %448 = call i32 @_ZN5blink21AnimationInputHelpers40KeyframeAttributeToPresentationAttributeERKN3WTF6StringEPKNS_7ElementE(%"class.WTF::String"* dereferenceable(8) %384, %"class.blink::Element"* %1) #10, !noalias !3
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %450, label %453

450:                                              ; preds = %447
  %451 = call %"class.blink::QualifiedName"* @_ZN5blink21AnimationInputHelpers31KeyframeAttributeToSVGAttributeERKN3WTF6StringEPNS_7ElementE(%"class.WTF::String"* dereferenceable(8) %384, %"class.blink::Element"* %1) #10, !noalias !3
  %452 = icmp eq %"class.blink::QualifiedName"* %451, null
  br i1 %452, label %608, label %453

453:                                              ; preds = %450, %447, %444
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %363) #10, !noalias !3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %363, i8 0, i64 16, i1 false) #10, !noalias !3
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %367) #10, !noalias !3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %367, i8 -86, i64 48, i1 false) #10, !noalias !3
  %454 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %93, align 8, !noalias !3
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %30, %"class.v8::Isolate"* %454) #10, !noalias !3
  %455 = load %"class.v8::Context"*, %"class.v8::Context"** %368, align 8, !noalias !3
  %456 = icmp eq %"class.v8::Context"* %455, null
  br i1 %456, label %463, label %457

457:                                              ; preds = %453
  %458 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %369, align 8, !noalias !3
  %459 = bitcast %"class.v8::Context"* %455 to i64*
  %460 = load i64, i64* %459, align 8, !noalias !3
  %461 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %458, i64 %460) #10, !noalias !3
  %462 = bitcast i64* %461 to %"class.v8::Context"*
  br label %463

463:                                              ; preds = %457, %453
  %464 = phi %"class.v8::Context"* [ %462, %457 ], [ null, %453 ]
  %465 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %93, align 8, !noalias !3
  %466 = load %"class.v8::Object"*, %"class.v8::Object"** %90, align 8, !noalias !3
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %370) #10, !noalias !3
  %467 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %385, align 8, !noalias !3
  %468 = icmp eq %"class.WTF::StringImpl"* %467, null
  br i1 %468, label %469, label %471

469:                                              ; preds = %463
  store i8* null, i8** %372, align 8, !noalias !3
  %470 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !3
  store i64 %470, i64* %374, align 8, !noalias !3
  br label %475

471:                                              ; preds = %463
  store %"class.WTF::StringImpl"* %467, %"class.WTF::StringImpl"** %371, align 8, !noalias !3
  %472 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %467, i64 0, i32 1
  %473 = load i32, i32* %472, align 4, !noalias !3
  %474 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %467, i64 1
  store %"class.WTF::StringImpl"* %474, %"class.WTF::StringImpl"** %373, align 8, !noalias !3
  br label %475

475:                                              ; preds = %471, %469
  %476 = phi i32 [ %473, %471 ], [ 0, %469 ]
  store i32 %476, i32* %375, align 8, !noalias !3
  %477 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %465, %"class.WTF::StringView"* nonnull dereferenceable(24) %31) #10, !noalias !3
  %478 = bitcast %"class.v8::String"* %477 to %"class.v8::Value"*
  %479 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %466, %"class.v8::Context"* %464, %"class.v8::Value"* %478) #10, !noalias !3
  %480 = icmp eq %"class.v8::Value"* %479, null
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %370) #10, !noalias !3
  br i1 %480, label %481, label %486

481:                                              ; preds = %475
  %482 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %30) #10, !noalias !3
  %483 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %381, align 8, !noalias !3
  %484 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %483, i64 5
  %485 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %484, align 8, !noalias !3
  call void %485(%"class.blink::ExceptionState"* %4, %"class.v8::Value"* %482) #10, !noalias !3
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %30) #10, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %367) #10, !noalias !3
  br label %570

486:                                              ; preds = %475
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %376) #10, !noalias !3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %376, i8 -86, i64 32, i1 false) #10, !noalias !3
  call void @_ZN5blink22StringOrStringSequenceC1Ev(%"class.blink::StringOrStringSequence"* nonnull %32) #10, !noalias !3
  %487 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %93, align 8, !noalias !3
  call void @_ZN5blink24V8StringOrStringSequence6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_22StringOrStringSequenceENS_23UnionTypeConversionModeERNS_14ExceptionStateE(%"class.v8::Isolate"* %487, %"class.v8::Value"* nonnull %479, %"class.blink::StringOrStringSequence"* nonnull dereferenceable(32) %32, i32 1, %"class.blink::ExceptionState"* dereferenceable(72) %4) #10, !noalias !3
  %488 = load i32, i32* %96, align 8, !noalias !3
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %490, label %537

490:                                              ; preds = %486
  %491 = load i32, i32* %377, align 8, !noalias !3
  %492 = icmp eq i32 %491, 1
  br i1 %492, label %493, label %526

493:                                              ; preds = %490
  %494 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink22StringOrStringSequence11GetAsStringEv(%"class.blink::StringOrStringSequence"* nonnull %32) #10, !noalias !3
  %495 = load i32, i32* %366, align 4, !noalias !3
  %496 = load i32, i32* %365, align 8, !noalias !3
  %497 = icmp eq i32 %495, %496
  br i1 %497, label %525, label %498, !prof !6

498:                                              ; preds = %493
  %499 = load %"class.WTF::String"*, %"class.WTF::String"** %364, align 8, !noalias !3
  %500 = zext i32 %495 to i64
  %501 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %494, i64 0, i32 0, i32 0
  %502 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %501, align 8, !noalias !3
  %503 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %499, i64 %500, i32 0, i32 0
  store %"class.WTF::StringImpl"* %502, %"class.WTF::StringImpl"** %503, align 8, !noalias !3
  %504 = icmp eq %"class.WTF::StringImpl"* %502, null
  br i1 %504, label %522, label %505

505:                                              ; preds = %498
  %506 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %502, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %507 = load atomic i32, i32* %506 monotonic, align 4, !noalias !3
  %508 = and i32 %507, 2
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %510, label %522

510:                                              ; preds = %505
  %511 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %502, i64 0, i32 0
  %512 = load i32, i32* %511, align 4, !noalias !3
  %513 = zext i32 %512 to i33
  %514 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %513, i33 1) #10
  %515 = extractvalue { i33, i1 } %514, 1
  %516 = extractvalue { i33, i1 } %514, 0
  %517 = icmp slt i33 %516, 0
  %518 = or i1 %515, %517
  br i1 %518, label %519, label %520, !prof !6

519:                                              ; preds = %510
  call void @llvm.trap() #10, !noalias !3
  unreachable

520:                                              ; preds = %510
  %521 = trunc i33 %516 to i32
  store i32 %521, i32* %511, align 4, !noalias !3
  br label %522

522:                                              ; preds = %520, %505, %498
  %523 = load i32, i32* %366, align 4, !noalias !3
  %524 = add i32 %523, 1
  store i32 %524, i32* %366, align 4, !noalias !3
  br label %529

525:                                              ; preds = %493
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.506"* nonnull %50, %"class.WTF::String"* dereferenceable(8) %494) #10, !noalias !3
  br label %529

526:                                              ; preds = %490
  %527 = call dereferenceable(16) %"class.WTF::Vector.506"* @_ZNK5blink22StringOrStringSequence19GetAsStringSequenceEv(%"class.blink::StringOrStringSequence"* nonnull %32) #10, !noalias !3
  %528 = call dereferenceable(16) %"class.WTF::Vector.506"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector.506"* nonnull %50, %"class.WTF::Vector.506"* dereferenceable(16) %527) #10, !noalias !3
  br label %529

529:                                              ; preds = %526, %525, %522
  call void @_ZN5blink22StringOrStringSequenceD1Ev(%"class.blink::StringOrStringSequence"* nonnull %32) #10, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %376) #10, !noalias !3
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %30) #10, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %367) #10, !noalias !3
  %530 = load i32, i32* %366, align 4, !noalias !3
  %531 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %3) #10, !noalias !3
  %532 = icmp eq i32 %530, 0
  br i1 %532, label %570, label %533

533:                                              ; preds = %529
  %534 = icmp eq i32 %530, 1
  %535 = add i32 %530, -1
  %536 = uitofp i32 %535 to double
  br label %538

537:                                              ; preds = %486
  call void @_ZN5blink22StringOrStringSequenceD1Ev(%"class.blink::StringOrStringSequence"* nonnull %32) #10, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %376) #10, !noalias !3
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %30) #10, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %367) #10, !noalias !3
  br label %570

538:                                              ; preds = %564, %533
  %539 = phi i32 [ 0, %533 ], [ %568, %564 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %378) #10, !noalias !3
  store double 0xFFFFFFFFFFFFFFFF, double* %51, align 8, !noalias !3
  br i1 %534, label %543, label %540

540:                                              ; preds = %538
  %541 = uitofp i32 %539 to double
  %542 = fdiv double %541, %536
  br label %543

543:                                              ; preds = %540, %538
  %544 = phi double [ %542, %540 ], [ 1.000000e+00, %538 ]
  store double %544, double* %51, align 8, !noalias !3
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %379) #10, !noalias !3
  store i8* null, i8** %52, align 8, !noalias !3
  %545 = call { %"struct.WTF::KeyValuePair.2673"*, i8 } @_ZN3WTF9HashTableIdNS_12KeyValuePairIdN5blink6MemberINS2_14StringKeyframeEEEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERdDnEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.2671"* nonnull %380, double* nonnull dereferenceable(8) %51, i8** nonnull dereferenceable(8) %52) #10, !noalias !3
  %546 = extractvalue { %"struct.WTF::KeyValuePair.2673"*, i8 } %545, 0
  %547 = extractvalue { %"struct.WTF::KeyValuePair.2673"*, i8 } %545, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %379) #10, !noalias !3
  %548 = and i8 %547, 1
  %549 = icmp eq i8 %548, 0
  br i1 %549, label %564, label %550

550:                                              ; preds = %543
  %551 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_8KeyframeEEEPhm(i64 112) #10, !noalias !3
  %552 = bitcast i8* %551 to %"class.blink::StringKeyframe"*
  call void @_ZN5blink14StringKeyframeC2Ev(%"class.blink::StringKeyframe"* %552) #10, !noalias !3
  %553 = getelementptr inbounds i8, i8* %551, i64 -4
  %554 = bitcast i8* %553 to i16*
  %555 = load atomic i16, i16* %554 monotonic, align 2, !noalias !3
  %556 = or i16 %555, 1
  store atomic i16 %556, i16* %554 release, align 2, !noalias !3
  %557 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %546, i64 0, i32 1
  %558 = ptrtoint i8* %551 to i64
  %559 = bitcast %"class.blink::Member.2477"* %557 to i64*
  store atomic i64 %558, i64* %559 monotonic, align 8, !noalias !3
  %560 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4, !noalias !3
  %561 = icmp eq i32 %560, 0
  br i1 %561, label %564, label %562

562:                                              ; preds = %550
  %563 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %551) #10, !noalias !3
  br label %564

564:                                              ; preds = %562, %550, %543
  %565 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %546, i64 0, i32 1, i32 0, i32 0
  %566 = load %"class.blink::StringKeyframe"*, %"class.blink::StringKeyframe"** %565, align 8, !noalias !3
  %567 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.506"* nonnull %50, i32 %539) #10, !noalias !3
  call fastcc void @_ZN5blink12_GLOBAL__N_116SetKeyframeValueEPNS_7ElementERNS_8DocumentERNS_14StringKeyframeERKN3WTF6StringESA_PNS_16ExecutionContextE(%"class.blink::Element"* %1, %"class.blink::Document"* dereferenceable(2848) %160, %"class.blink::StringKeyframe"* dereferenceable(112) %566, %"class.WTF::String"* dereferenceable(8) %384, %"class.WTF::String"* dereferenceable(8) %567, %"class.blink::ExecutionContext"* %531) #10, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %378) #10, !noalias !3
  %568 = add nuw i32 %539, 1
  %569 = icmp eq i32 %568, %530
  br i1 %569, label %570, label %538

570:                                              ; preds = %564, %481, %537, %529
  %571 = phi i32 [ 0, %529 ], [ 1, %537 ], [ 1, %481 ], [ 0, %564 ]
  %572 = load %"class.WTF::String"*, %"class.WTF::String"** %364, align 8, !noalias !3
  %573 = icmp eq %"class.WTF::String"* %572, null
  br i1 %573, label %606, label %574, !prof !11

574:                                              ; preds = %570
  %575 = bitcast %"class.WTF::String"* %572 to i8*
  %576 = load i32, i32* %366, align 4, !noalias !3
  %577 = icmp eq i32 %576, 0
  br i1 %577, label %604, label %578, !prof !6

578:                                              ; preds = %574
  %579 = zext i32 %576 to i64
  %580 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %572, i64 %579
  br label %581

581:                                              ; preds = %599, %578
  %582 = phi %"class.WTF::String"* [ %600, %599 ], [ %572, %578 ]
  %583 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %582, i64 0, i32 0, i32 0
  %584 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %583, align 8, !noalias !3
  %585 = icmp eq %"class.WTF::StringImpl"* %584, null
  br i1 %585, label %599, label %586

586:                                              ; preds = %581
  %587 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %584, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %588 = load atomic i32, i32* %587 monotonic, align 4, !noalias !3
  %589 = and i32 %588, 2
  %590 = icmp eq i32 %589, 0
  %591 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %584, i64 0, i32 0
  %592 = load i32, i32* %591, align 4, !noalias !3
  br i1 %590, label %593, label %595

593:                                              ; preds = %586
  %594 = add i32 %592, -1
  store i32 %594, i32* %591, align 4, !noalias !3
  br label %595

595:                                              ; preds = %593, %586
  %596 = phi i32 [ %594, %593 ], [ %592, %586 ]
  %597 = icmp eq i32 %596, 0
  br i1 %597, label %598, label %599

598:                                              ; preds = %595
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %584) #10, !noalias !3
  br label %599

599:                                              ; preds = %598, %595, %581
  %600 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %582, i64 1
  %601 = icmp eq %"class.WTF::String"* %600, %580
  br i1 %601, label %602, label %581

602:                                              ; preds = %599
  store i32 0, i32* %366, align 4, !noalias !3
  %603 = load i8*, i8** %382, align 8, !noalias !3
  br label %604

604:                                              ; preds = %602, %574
  %605 = phi i8* [ %603, %602 ], [ %575, %574 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %605) #10, !noalias !3
  store %"class.WTF::String"* null, %"class.WTF::String"** %364, align 8, !noalias !3
  br label %606

606:                                              ; preds = %604, %570
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %363) #10, !noalias !3
  %607 = icmp eq i32 %571, 0
  br i1 %607, label %608, label %950

608:                                              ; preds = %606, %450, %444, %437, %423, %409, %395
  %609 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %384, i64 1
  %610 = icmp eq %"class.WTF::String"* %609, %320
  br i1 %610, label %611, label %383

611:                                              ; preds = %608, %307
  %612 = bitcast %"class.WTF::Vector.1129"* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %612) #10, !noalias !3
  %613 = getelementptr inbounds %"class.WTF::Vector.1129", %"class.WTF::Vector.1129"* %53, i64 0, i32 0, i32 0, i32 0
  %614 = getelementptr inbounds %"class.WTF::Vector.1129", %"class.WTF::Vector.1129"* %53, i64 0, i32 0, i32 0, i32 1
  %615 = getelementptr inbounds %"class.WTF::Vector.1129", %"class.WTF::Vector.1129"* %53, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %612, i8 0, i64 16, i1 false) #10, !noalias !3
  %616 = load i32, i32* %311, align 4, !noalias !3
  %617 = icmp eq i32 %616, 0
  %618 = load %"struct.WTF::KeyValuePair.2673"*, %"struct.WTF::KeyValuePair.2673"** %309, align 8, !noalias !3
  %619 = load i32, i32* %310, align 8, !noalias !3
  %620 = zext i32 %619 to i64
  %621 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %618, i64 %620
  br i1 %617, label %640, label %622

622:                                              ; preds = %611
  %623 = icmp eq i32 %619, 0
  br i1 %623, label %634, label %624

624:                                              ; preds = %622, %631
  %625 = phi %"struct.WTF::KeyValuePair.2673"* [ %632, %631 ], [ %618, %622 ]
  %626 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %625, i64 0, i32 0
  %627 = load double, double* %626, align 8, !noalias !3
  %628 = fcmp oeq double %627, 0x7FF0000000000000
  %629 = fcmp oeq double %627, 0xFFF0000000000000
  %630 = or i1 %628, %629
  br i1 %630, label %631, label %634

631:                                              ; preds = %624
  %632 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %625, i64 1
  %633 = icmp eq %"struct.WTF::KeyValuePair.2673"* %632, %621
  br i1 %633, label %640, label %624

634:                                              ; preds = %624, %622
  %635 = phi %"struct.WTF::KeyValuePair.2673"* [ %618, %622 ], [ %625, %624 ]
  %636 = icmp eq %"struct.WTF::KeyValuePair.2673"* %635, %621
  br i1 %636, label %640, label %658

637:                                              ; preds = %687, %674, %684
  %638 = load double*, double** %613, align 8, !noalias !3
  %639 = load i32, i32* %615, align 4, !noalias !3
  br label %640

640:                                              ; preds = %631, %637, %634, %611
  %641 = phi i32 [ %639, %637 ], [ 0, %634 ], [ 0, %611 ], [ 0, %631 ]
  %642 = phi double* [ %638, %637 ], [ null, %634 ], [ null, %611 ], [ null, %631 ]
  %643 = zext i32 %641 to i64
  %644 = getelementptr inbounds double, double* %642, i64 %643
  %645 = getelementptr inbounds %"struct.std::__1::__less.2856", %"struct.std::__1::__less.2856"* %29, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %645) #10, !noalias !3
  call void @_ZNSt3__16__sortIRNS_6__lessIddEEPdEEvT0_S5_T_(double* %642, double* %644, %"struct.std::__1::__less.2856"* nonnull dereferenceable(1) %29) #10, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %645) #10, !noalias !3
  %646 = bitcast %"class.blink::HeapVector.2471"* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %646) #10, !noalias !3
  %647 = getelementptr inbounds %"class.blink::HeapVector.2471", %"class.blink::HeapVector.2471"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %648 = getelementptr inbounds %"class.blink::HeapVector.2471", %"class.blink::HeapVector.2471"* %54, i64 0, i32 0, i32 0, i32 0, i32 1
  %649 = getelementptr inbounds %"class.blink::HeapVector.2471", %"class.blink::HeapVector.2471"* %54, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %646, i8 0, i64 16, i1 false) #10, !noalias !3
  %650 = load i32, i32* %615, align 4, !noalias !3
  %651 = icmp eq i32 %650, 0
  br i1 %651, label %893, label %652

652:                                              ; preds = %640
  %653 = bitcast %"class.blink::StringKeyframe"** %55 to i8*
  %654 = bitcast %"class.blink::StringKeyframe"** %55 to %"class.blink::Keyframe"**
  %655 = bitcast %"class.logging::CheckError"* %28 to i8*
  %656 = bitcast %"class.blink::StringKeyframe"** %55 to i64*
  %657 = getelementptr inbounds %"class.blink::HeapVector.2471", %"class.blink::HeapVector.2471"* %54, i64 0, i32 0
  br label %692

658:                                              ; preds = %634, %689
  %659 = phi i32 [ %691, %689 ], [ 0, %634 ]
  %660 = phi i32 [ %690, %689 ], [ 0, %634 ]
  %661 = phi %"struct.WTF::KeyValuePair.2673"* [ %678, %689 ], [ %635, %634 ]
  %662 = icmp eq i32 %660, %659
  br i1 %662, label %672, label %663, !prof !6

663:                                              ; preds = %658
  %664 = load double*, double** %613, align 8, !noalias !3
  %665 = zext i32 %660 to i64
  %666 = getelementptr inbounds double, double* %664, i64 %665
  %667 = bitcast %"struct.WTF::KeyValuePair.2673"* %661 to i64*
  %668 = load i64, i64* %667, align 8, !noalias !3
  %669 = bitcast double* %666 to i64*
  store i64 %668, i64* %669, align 8, !noalias !3
  %670 = load i32, i32* %615, align 4, !noalias !3
  %671 = add i32 %670, 1
  store i32 %671, i32* %615, align 4, !noalias !3
  br label %674

672:                                              ; preds = %658
  %673 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %661, i64 0, i32 0
  call void @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKdEEvOT_(%"class.WTF::Vector.1129"* nonnull %53, double* dereferenceable(8) %673) #10, !noalias !3
  br label %674

674:                                              ; preds = %672, %663
  %675 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %661, i64 1
  %676 = icmp eq %"struct.WTF::KeyValuePair.2673"* %675, %621
  br i1 %676, label %637, label %677

677:                                              ; preds = %674, %684
  %678 = phi %"struct.WTF::KeyValuePair.2673"* [ %685, %684 ], [ %675, %674 ]
  %679 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %678, i64 0, i32 0
  %680 = load double, double* %679, align 8, !noalias !3
  %681 = fcmp oeq double %680, 0x7FF0000000000000
  %682 = fcmp oeq double %680, 0xFFF0000000000000
  %683 = or i1 %681, %682
  br i1 %683, label %684, label %687

684:                                              ; preds = %677
  %685 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %678, i64 1
  %686 = icmp eq %"struct.WTF::KeyValuePair.2673"* %685, %621
  br i1 %686, label %637, label %677

687:                                              ; preds = %677
  %688 = icmp eq %"struct.WTF::KeyValuePair.2673"* %678, %621
  br i1 %688, label %637, label %689

689:                                              ; preds = %687
  %690 = load i32, i32* %615, align 4, !noalias !3
  %691 = load i32, i32* %614, align 8, !noalias !3
  br label %658

692:                                              ; preds = %884, %652
  %693 = phi i32 [ 0, %652 ], [ %885, %884 ]
  %694 = phi double [ 0.000000e+00, %652 ], [ %787, %884 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %653) #10, !noalias !3
  store %"class.blink::StringKeyframe"* inttoptr (i64 -6148914691236517206 to %"class.blink::StringKeyframe"*), %"class.blink::StringKeyframe"** %55, align 8, !noalias !3
  %695 = call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1129"* nonnull %53, i32 %693) #10, !noalias !3
  %696 = load %"struct.WTF::KeyValuePair.2673"*, %"struct.WTF::KeyValuePair.2673"** %309, align 8, !noalias !3
  %697 = icmp eq %"struct.WTF::KeyValuePair.2673"* %696, null
  br i1 %697, label %764, label %698

698:                                              ; preds = %692
  %699 = load i32, i32* %310, align 8, !noalias !3
  %700 = add i32 %699, -1
  %701 = zext i32 %700 to i64
  %702 = bitcast double* %695 to i64*
  %703 = load i64, i64* %702, align 8, !noalias !3
  %704 = shl i64 %703, 32
  %705 = xor i64 %704, -1
  %706 = add i64 %703, %705
  %707 = lshr i64 %706, 22
  %708 = xor i64 %707, %706
  %709 = shl i64 %708, 13
  %710 = xor i64 %709, -1
  %711 = add i64 %708, %710
  %712 = lshr i64 %711, 8
  %713 = xor i64 %712, %711
  %714 = mul i64 %713, 9
  %715 = lshr i64 %714, 15
  %716 = xor i64 %715, %714
  %717 = shl i64 %716, 27
  %718 = xor i64 %717, -1
  %719 = add i64 %716, %718
  %720 = lshr i64 %719, 31
  %721 = xor i64 %720, %719
  %722 = trunc i64 %721 to i32
  %723 = and i32 %700, %722
  %724 = zext i32 %723 to i64
  %725 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %696, i64 %724
  %726 = bitcast %"struct.WTF::KeyValuePair.2673"* %725 to i64*
  %727 = load i64, i64* %726, align 8, !noalias !3
  %728 = icmp eq i64 %727, %703
  br i1 %728, label %758, label %729

729:                                              ; preds = %698
  %730 = xor i32 %722, -1
  %731 = lshr i32 %722, 23
  %732 = add i32 %731, %730
  %733 = shl i32 %732, 12
  %734 = xor i32 %733, %732
  %735 = lshr i32 %734, 7
  %736 = xor i32 %735, %734
  %737 = shl i32 %736, 2
  %738 = xor i32 %737, %736
  %739 = lshr i32 %738, 20
  %740 = xor i32 %739, %738
  %741 = or i32 %740, 1
  %742 = zext i32 %741 to i64
  br label %743

743:                                              ; preds = %749, %729
  %744 = phi i64 [ %724, %729 ], [ %753, %749 ]
  %745 = phi i64 [ 0, %729 ], [ %751, %749 ]
  %746 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %696, i64 %744, i32 0
  %747 = load double, double* %746, align 8, !noalias !3
  %748 = fcmp oeq double %747, 0x7FF0000000000000
  br i1 %748, label %764, label %749

749:                                              ; preds = %743
  %750 = icmp eq i64 %745, 0
  %751 = select i1 %750, i64 %742, i64 %745
  %752 = add i64 %751, %744
  %753 = and i64 %752, %701
  %754 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %696, i64 %753
  %755 = bitcast %"struct.WTF::KeyValuePair.2673"* %754 to i64*
  %756 = load i64, i64* %755, align 8, !noalias !3
  %757 = icmp eq i64 %756, %703
  br i1 %757, label %758, label %743

758:                                              ; preds = %749, %698
  %759 = phi %"struct.WTF::KeyValuePair.2673"* [ %725, %698 ], [ %754, %749 ]
  %760 = icmp eq %"struct.WTF::KeyValuePair.2673"* %759, null
  br i1 %760, label %764, label %761

761:                                              ; preds = %758
  %762 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %759, i64 0, i32 1, i32 0, i32 0
  %763 = load %"class.blink::StringKeyframe"*, %"class.blink::StringKeyframe"** %762, align 8, !noalias !3
  br label %764

764:                                              ; preds = %743, %761, %758, %692
  %765 = phi %"class.blink::StringKeyframe"* [ %763, %761 ], [ null, %758 ], [ null, %692 ], [ null, %743 ]
  store %"class.blink::StringKeyframe"* %765, %"class.blink::StringKeyframe"** %55, align 8, !noalias !3
  %766 = load i32, i32* %177, align 4, !noalias !3
  %767 = icmp ult i32 %693, %766
  br i1 %767, label %768, label %786

768:                                              ; preds = %764
  %769 = call dereferenceable(16) %"class.absl::optional.2481"* @_ZN3WTF6VectorIN4absl8optionalIdEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2657"* nonnull %44, i32 %693) #10, !noalias !3
  %770 = getelementptr inbounds %"class.absl::optional.2481", %"class.absl::optional.2481"* %769, i64 0, i32 0, i32 0, i32 0, i32 0
  %771 = load i8, i8* %770, align 8, !noalias !3
  %772 = getelementptr inbounds %"class.absl::optional.2481", %"class.absl::optional.2481"* %769, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %773 = load double, double* %772, align 8, !noalias !3
  %774 = icmp eq i8 %771, 0
  br i1 %774, label %781, label %775

775:                                              ; preds = %768
  %776 = fcmp olt double %773, %694
  br i1 %776, label %888, label %777

777:                                              ; preds = %775
  %778 = fcmp olt double %773, 0.000000e+00
  %779 = fcmp ogt double %773, 1.000000e+00
  %780 = or i1 %778, %779
  br i1 %780, label %888, label %781

781:                                              ; preds = %777, %768
  %782 = phi double [ %694, %768 ], [ %773, %777 ]
  %783 = load %"class.blink::Keyframe"*, %"class.blink::Keyframe"** %654, align 8, !noalias !3
  %784 = getelementptr inbounds %"class.blink::Keyframe", %"class.blink::Keyframe"* %783, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 %771, i8* %784, align 8, !noalias !3
  %785 = getelementptr inbounds %"class.blink::Keyframe", %"class.blink::Keyframe"* %783, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  store double %773, double* %785, align 8, !noalias !3
  br label %786

786:                                              ; preds = %781, %764
  %787 = phi double [ %782, %781 ], [ %694, %764 ]
  %788 = load i32, i32* %191, align 4, !noalias !3
  %789 = icmp eq i32 %788, 0
  br i1 %789, label %833, label %790

790:                                              ; preds = %786
  %791 = urem i32 %693, %788
  %792 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.506"* nonnull %46, i32 %791) #10, !noalias !3
  %793 = call %"class.blink::TimingFunction"* @_ZN5blink21AnimationInputHelpers19ParseTimingFunctionERKN3WTF6StringEPNS_8DocumentERNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8) %792, %"class.blink::Document"* %160, %"class.blink::ExceptionState"* dereferenceable(72) %4) #10, !noalias !3
  %794 = icmp eq %"class.blink::TimingFunction"* %793, null
  br i1 %794, label %890, label %795

795:                                              ; preds = %790
  %796 = load %"class.blink::Keyframe"*, %"class.blink::Keyframe"** %654, align 8, !noalias !3
  %797 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %793, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %798 = atomicrmw add i32* %797, i32 1 monotonic, !noalias !3
  %799 = icmp sgt i32 %798, 0
  br i1 %799, label %802, label %800

800:                                              ; preds = %795
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %655) #10, !noalias !3
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %28, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0)) #10, !noalias !3
  %801 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %28) #10, !noalias !3
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %28) #10, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %655) #10, !noalias !3
  br label %802

802:                                              ; preds = %795, %800
  %803 = ptrtoint %"class.blink::TimingFunction"* %793 to i64
  %804 = getelementptr inbounds %"class.blink::Keyframe", %"class.blink::Keyframe"* %796, i64 0, i32 3
  %805 = bitcast %class.scoped_refptr.22* %804 to i64*
  %806 = getelementptr inbounds %class.scoped_refptr.22, %class.scoped_refptr.22* %804, i64 0, i32 0
  %807 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %806, align 8
  store i64 %803, i64* %805, align 8
  %808 = icmp eq %"class.blink::TimingFunction"* %807, null
  br i1 %808, label %821, label %809

809:                                              ; preds = %802
  %810 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %807, i64 0, i32 1, i32 0
  %811 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %810, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %812 = atomicrmw sub i32* %811, i32 1 acq_rel
  %813 = icmp eq i32 %812, 1
  br i1 %813, label %814, label %821

814:                                              ; preds = %809
  %815 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %810, i64 -2
  %816 = bitcast %"class.base::RefCountedThreadSafe"* %815 to %"class.blink::TimingFunction"*
  %817 = bitcast %"class.base::RefCountedThreadSafe"* %815 to void (%"class.blink::TimingFunction"*)***
  %818 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %817, align 8
  %819 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %818, i64 1
  %820 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %819, align 8
  call void %820(%"class.blink::TimingFunction"* nonnull %816) #10
  br label %821

821:                                              ; preds = %802, %809, %814
  %822 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %793, i64 0, i32 1, i32 0
  %823 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %822, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %824 = atomicrmw sub i32* %823, i32 1 acq_rel, !noalias !3
  %825 = icmp eq i32 %824, 1
  br i1 %825, label %826, label %833

826:                                              ; preds = %821
  %827 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %822, i64 -2
  %828 = bitcast %"class.base::RefCountedThreadSafe"* %827 to %"class.blink::TimingFunction"*
  %829 = bitcast %"class.base::RefCountedThreadSafe"* %827 to void (%"class.blink::TimingFunction"*)***
  %830 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %829, align 8, !noalias !3
  %831 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %830, i64 1
  %832 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %831, align 8, !noalias !3
  call void %832(%"class.blink::TimingFunction"* nonnull %828) #10, !noalias !3
  br label %833

833:                                              ; preds = %826, %821, %786
  %834 = load i32, i32* %237, align 4, !noalias !3
  %835 = icmp eq i32 %834, 0
  br i1 %835, label %865, label %836

836:                                              ; preds = %833
  %837 = urem i32 %693, %834
  %838 = call dereferenceable(8) %"class.absl::optional.2486"* @_ZN3WTF6VectorIN4absl8optionalIN5blink11EffectModel18CompositeOperationEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2662"* nonnull %47, i32 %837) #10, !noalias !3
  %839 = bitcast %"class.absl::optional.2486"* %838 to i64*
  %840 = load i64, i64* %839, align 4, !noalias !3
  %841 = trunc i64 %840 to i8
  %842 = lshr i64 %840, 32
  %843 = trunc i64 %842 to i32
  %844 = icmp eq i8 %841, 0
  br i1 %844, label %865, label %845

845:                                              ; preds = %836
  %846 = load %"class.blink::Keyframe"*, %"class.blink::Keyframe"** %654, align 8, !noalias !3
  %847 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase29is_animation_worklet_enabled_E, align 1, !range !2, !noalias !3
  %848 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_web_animations_api_enabled_E, align 1, !noalias !3
  %849 = or i8 %848, %847
  %850 = icmp eq i8 %849, 0
  br i1 %850, label %851, label %858

851:                                              ; preds = %845
  %852 = bitcast %"class.blink::Keyframe"* %846 to %"class.blink::StringKeyframe"*
  %853 = add i32 %843, -1
  %854 = icmp ugt i32 %853, 1
  %855 = call zeroext i1 @_ZNK5blink14StringKeyframe14HasCssPropertyEv(%"class.blink::StringKeyframe"* %852) #10, !noalias !3
  %856 = xor i1 %855, true
  %857 = or i1 %854, %856
  br i1 %857, label %858, label %859

858:                                              ; preds = %851, %845
  br label %859

859:                                              ; preds = %858, %851
  %860 = phi i64 [ %842, %858 ], [ 0, %851 ]
  %861 = getelementptr inbounds %"class.blink::Keyframe", %"class.blink::Keyframe"* %846, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %862 = bitcast i8* %861 to i64*
  %863 = shl nuw i64 %860, 32
  %864 = or i64 %863, 1
  store i64 %864, i64* %862, align 8, !noalias !3
  br label %865

865:                                              ; preds = %859, %836, %833
  %866 = load i32, i32* %649, align 4, !noalias !3
  %867 = load i32, i32* %648, align 8, !noalias !3
  %868 = icmp eq i32 %866, %867
  br i1 %868, label %883, label %869, !prof !6

869:                                              ; preds = %865
  %870 = load %"class.blink::Member.2477"*, %"class.blink::Member.2477"** %647, align 8, !noalias !3
  %871 = zext i32 %866 to i64
  %872 = getelementptr inbounds %"class.blink::Member.2477", %"class.blink::Member.2477"* %870, i64 %871
  %873 = load i64, i64* %656, align 8, !noalias !3
  %874 = bitcast %"class.blink::Member.2477"* %872 to i64*
  store atomic i64 %873, i64* %874 monotonic, align 8, !noalias !3
  %875 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4, !noalias !3
  %876 = icmp eq i32 %875, 0
  br i1 %876, label %880, label %877

877:                                              ; preds = %869
  %878 = inttoptr i64 %873 to i8*
  %879 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %878) #10, !noalias !3
  br label %880

880:                                              ; preds = %877, %869
  %881 = load i32, i32* %649, align 4, !noalias !3
  %882 = add i32 %881, 1
  store i32 %882, i32* %649, align 4, !noalias !3
  br label %884

883:                                              ; preds = %865
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.2474"* nonnull %657, %"class.blink::StringKeyframe"** nonnull dereferenceable(8) %55) #10, !noalias !3
  br label %884

884:                                              ; preds = %883, %880
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %653) #10, !noalias !3
  %885 = add nuw i32 %693, 1
  %886 = load i32, i32* %615, align 4, !noalias !3
  %887 = icmp ult i32 %885, %886
  br i1 %887, label %692, label %891

888:                                              ; preds = %777, %775
  %889 = phi i8* [ getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7, i64 0, i64 0), %775 ], [ getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), %777 ]
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* %889) #10, !noalias !3
  br label %890

890:                                              ; preds = %790, %888
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %653) #10, !noalias !3
  br label %937

891:                                              ; preds = %884
  %892 = load i32, i32* %649, align 4, !noalias !3
  br label %893

893:                                              ; preds = %891, %640
  %894 = phi i32 [ %892, %891 ], [ 0, %640 ]
  %895 = load i32, i32* %191, align 4, !noalias !3
  %896 = icmp ult i32 %894, %895
  br i1 %896, label %897, label %920

897:                                              ; preds = %893, %914
  %898 = phi i32 [ %915, %914 ], [ %894, %893 ]
  %899 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.506"* nonnull %46, i32 %898) #10, !noalias !3
  %900 = call %"class.blink::TimingFunction"* @_ZN5blink21AnimationInputHelpers19ParseTimingFunctionERKN3WTF6StringEPNS_8DocumentERNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8) %899, %"class.blink::Document"* %160, %"class.blink::ExceptionState"* dereferenceable(72) %4) #10, !noalias !3
  %901 = icmp eq %"class.blink::TimingFunction"* %900, null
  br i1 %901, label %937, label %902

902:                                              ; preds = %897
  %903 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %900, i64 0, i32 1, i32 0
  %904 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %903, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %905 = atomicrmw sub i32* %904, i32 1 acq_rel, !noalias !3
  %906 = icmp eq i32 %905, 1
  br i1 %906, label %907, label %914

907:                                              ; preds = %902
  %908 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %903, i64 -2
  %909 = bitcast %"class.base::RefCountedThreadSafe"* %908 to %"class.blink::TimingFunction"*
  %910 = bitcast %"class.base::RefCountedThreadSafe"* %908 to void (%"class.blink::TimingFunction"*)***
  %911 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %910, align 8, !noalias !3
  %912 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %911, i64 1
  %913 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %912, align 8, !noalias !3
  call void %913(%"class.blink::TimingFunction"* nonnull %909) #10, !noalias !3
  br label %914

914:                                              ; preds = %907, %902
  %915 = add nuw i32 %898, 1
  %916 = load i32, i32* %191, align 4, !noalias !3
  %917 = icmp ult i32 %915, %916
  br i1 %917, label %897, label %918

918:                                              ; preds = %914
  %919 = load i32, i32* %649, align 4, !noalias !3
  br label %920

920:                                              ; preds = %918, %893
  %921 = phi i32 [ %919, %918 ], [ %894, %893 ]
  %922 = bitcast %"class.blink::HeapVector.2471"* %54 to i64*
  %923 = load i64, i64* %922, align 8, !noalias !3
  store atomic i64 0, i64* %922 monotonic, align 8, !noalias !3
  %924 = load i32, i32* %648, align 8, !noalias !3
  store i32 0, i32* %648, align 8, !noalias !3
  store i32 0, i32* %649, align 4, !noalias !3
  %925 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4, !noalias !3
  %926 = icmp eq i32 %925, 0
  br i1 %926, label %930, label %927

927:                                              ; preds = %920
  %928 = inttoptr i64 %923 to i8*
  %929 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %928) #10, !noalias !3
  br label %930

930:                                              ; preds = %927, %920
  %931 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4, !noalias !3
  %932 = icmp eq i32 %931, 0
  br i1 %932, label %937, label %933

933:                                              ; preds = %930
  %934 = bitcast %"class.blink::HeapVector.2471"* %54 to i8**
  %935 = load i8*, i8** %934, align 8, !noalias !3
  %936 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %935) #10, !noalias !3
  br label %937

937:                                              ; preds = %897, %933, %930, %890
  %938 = phi i64 [ %923, %930 ], [ %923, %933 ], [ 0, %890 ], [ 0, %897 ]
  %939 = phi i32 [ %924, %930 ], [ %924, %933 ], [ 0, %890 ], [ 0, %897 ]
  %940 = phi i32 [ %921, %930 ], [ %921, %933 ], [ 0, %890 ], [ 0, %897 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %646) #10, !noalias !3
  %941 = load double*, double** %613, align 8, !noalias !3
  %942 = icmp eq double* %941, null
  %943 = bitcast double* %941 to i8*
  br i1 %942, label %949, label %944, !prof !11

944:                                              ; preds = %937
  %945 = load i32, i32* %615, align 4, !noalias !3
  %946 = icmp eq i32 %945, 0
  br i1 %946, label %948, label %947, !prof !6

947:                                              ; preds = %944
  store i32 0, i32* %615, align 4, !noalias !3
  br label %948

948:                                              ; preds = %947, %944
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %943) #10, !noalias !3
  store double* null, double** %613, align 8, !noalias !3
  br label %949

949:                                              ; preds = %948, %937
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %612) #10, !noalias !3
  br label %950

950:                                              ; preds = %606, %949
  %951 = phi i64 [ %938, %949 ], [ 0, %606 ]
  %952 = phi i32 [ %939, %949 ], [ 0, %606 ]
  %953 = phi i32 [ %940, %949 ], [ 0, %606 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %308) #10, !noalias !3
  br label %954

954:                                              ; preds = %300, %950
  %955 = phi i64 [ %951, %950 ], [ 0, %300 ]
  %956 = phi i32 [ %952, %950 ], [ 0, %300 ]
  %957 = phi i32 [ %953, %950 ], [ 0, %300 ]
  %958 = load %"class.WTF::String"*, %"class.WTF::String"** %302, align 8, !noalias !3
  %959 = icmp eq %"class.WTF::String"* %958, null
  br i1 %959, label %993, label %960, !prof !11

960:                                              ; preds = %954
  %961 = bitcast %"class.WTF::String"* %958 to i8*
  %962 = load i32, i32* %303, align 4, !noalias !3
  %963 = icmp eq i32 %962, 0
  br i1 %963, label %991, label %964, !prof !6

964:                                              ; preds = %960
  %965 = zext i32 %962 to i64
  %966 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %958, i64 %965
  br label %967

967:                                              ; preds = %985, %964
  %968 = phi %"class.WTF::String"* [ %986, %985 ], [ %958, %964 ]
  %969 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %968, i64 0, i32 0, i32 0
  %970 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %969, align 8, !noalias !3
  %971 = icmp eq %"class.WTF::StringImpl"* %970, null
  br i1 %971, label %985, label %972

972:                                              ; preds = %967
  %973 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %970, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %974 = load atomic i32, i32* %973 monotonic, align 4, !noalias !3
  %975 = and i32 %974, 2
  %976 = icmp eq i32 %975, 0
  %977 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %970, i64 0, i32 0
  %978 = load i32, i32* %977, align 4, !noalias !3
  br i1 %976, label %979, label %981

979:                                              ; preds = %972
  %980 = add i32 %978, -1
  store i32 %980, i32* %977, align 4, !noalias !3
  br label %981

981:                                              ; preds = %979, %972
  %982 = phi i32 [ %980, %979 ], [ %978, %972 ]
  %983 = icmp eq i32 %982, 0
  br i1 %983, label %984, label %985

984:                                              ; preds = %981
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %970) #10, !noalias !3
  br label %985

985:                                              ; preds = %984, %981, %967
  %986 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %968, i64 1
  %987 = icmp eq %"class.WTF::String"* %986, %966
  br i1 %987, label %988, label %967

988:                                              ; preds = %985
  store i32 0, i32* %303, align 4, !noalias !3
  %989 = bitcast %"class.WTF::Vector.506"* %48 to i8**
  %990 = load i8*, i8** %989, align 8, !noalias !3
  br label %991

991:                                              ; preds = %988, %960
  %992 = phi i8* [ %990, %988 ], [ %961, %960 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %992) #10, !noalias !3
  store %"class.WTF::String"* null, %"class.WTF::String"** %302, align 8, !noalias !3
  br label %993

993:                                              ; preds = %991, %954
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %301) #10, !noalias !3
  %994 = load %"class.absl::optional.2486"*, %"class.absl::optional.2486"** %235, align 8, !noalias !3
  %995 = icmp eq %"class.absl::optional.2486"* %994, null
  br i1 %995, label %1002, label %996, !prof !11

996:                                              ; preds = %993
  %997 = load i32, i32* %237, align 4, !noalias !3
  %998 = icmp eq i32 %997, 0
  br i1 %998, label %1000, label %999, !prof !6

999:                                              ; preds = %996
  store i32 0, i32* %237, align 4, !noalias !3
  br label %1000

1000:                                             ; preds = %999, %996
  %1001 = getelementptr inbounds %"class.absl::optional.2486", %"class.absl::optional.2486"* %994, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1001) #10, !noalias !3
  store %"class.absl::optional.2486"* null, %"class.absl::optional.2486"** %235, align 8, !noalias !3
  br label %1002

1002:                                             ; preds = %1000, %993
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %234) #10, !noalias !3
  %1003 = load %"class.WTF::String"*, %"class.WTF::String"** %190, align 8, !noalias !3
  %1004 = icmp eq %"class.WTF::String"* %1003, null
  br i1 %1004, label %1038, label %1005, !prof !11

1005:                                             ; preds = %1002
  %1006 = bitcast %"class.WTF::String"* %1003 to i8*
  %1007 = load i32, i32* %191, align 4, !noalias !3
  %1008 = icmp eq i32 %1007, 0
  br i1 %1008, label %1036, label %1009, !prof !6

1009:                                             ; preds = %1005
  %1010 = zext i32 %1007 to i64
  %1011 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1003, i64 %1010
  br label %1012

1012:                                             ; preds = %1030, %1009
  %1013 = phi %"class.WTF::String"* [ %1031, %1030 ], [ %1003, %1009 ]
  %1014 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1013, i64 0, i32 0, i32 0
  %1015 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1014, align 8, !noalias !3
  %1016 = icmp eq %"class.WTF::StringImpl"* %1015, null
  br i1 %1016, label %1030, label %1017

1017:                                             ; preds = %1012
  %1018 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1015, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1019 = load atomic i32, i32* %1018 monotonic, align 4, !noalias !3
  %1020 = and i32 %1019, 2
  %1021 = icmp eq i32 %1020, 0
  %1022 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1015, i64 0, i32 0
  %1023 = load i32, i32* %1022, align 4, !noalias !3
  br i1 %1021, label %1024, label %1026

1024:                                             ; preds = %1017
  %1025 = add i32 %1023, -1
  store i32 %1025, i32* %1022, align 4, !noalias !3
  br label %1026

1026:                                             ; preds = %1024, %1017
  %1027 = phi i32 [ %1025, %1024 ], [ %1023, %1017 ]
  %1028 = icmp eq i32 %1027, 0
  br i1 %1028, label %1029, label %1030

1029:                                             ; preds = %1026
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1015) #10, !noalias !3
  br label %1030

1030:                                             ; preds = %1029, %1026, %1012
  %1031 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1013, i64 1
  %1032 = icmp eq %"class.WTF::String"* %1031, %1011
  br i1 %1032, label %1033, label %1012

1033:                                             ; preds = %1030
  store i32 0, i32* %191, align 4, !noalias !3
  %1034 = bitcast %"class.WTF::Vector.506"* %46 to i8**
  %1035 = load i8*, i8** %1034, align 8, !noalias !3
  br label %1036

1036:                                             ; preds = %1033, %1005
  %1037 = phi i8* [ %1035, %1033 ], [ %1006, %1005 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1037) #10, !noalias !3
  store %"class.WTF::String"* null, %"class.WTF::String"** %190, align 8, !noalias !3
  br label %1038

1038:                                             ; preds = %1036, %1002
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %189) #10, !noalias !3
  %1039 = load %"class.absl::optional.2481"*, %"class.absl::optional.2481"** %176, align 8, !noalias !3
  %1040 = icmp eq %"class.absl::optional.2481"* %1039, null
  br i1 %1040, label %1047, label %1041, !prof !11

1041:                                             ; preds = %1038
  %1042 = load i32, i32* %177, align 4, !noalias !3
  %1043 = icmp eq i32 %1042, 0
  br i1 %1043, label %1045, label %1044, !prof !6

1044:                                             ; preds = %1041
  store i32 0, i32* %177, align 4, !noalias !3
  br label %1045

1045:                                             ; preds = %1044, %1041
  %1046 = getelementptr inbounds %"class.absl::optional.2481", %"class.absl::optional.2481"* %1039, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1046) #10, !noalias !3
  store %"class.absl::optional.2481"* null, %"class.absl::optional.2481"** %176, align 8, !noalias !3
  br label %1047

1047:                                             ; preds = %1045, %1038
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %175) #10, !noalias !3
  br label %1048

1048:                                             ; preds = %168, %1047
  %1049 = phi i64 [ %955, %1047 ], [ 0, %168 ]
  %1050 = phi i32 [ %956, %1047 ], [ 0, %168 ]
  %1051 = phi i32 [ %957, %1047 ], [ 0, %168 ]
  %1052 = bitcast %"class.blink::HeapVector.2471"* %64 to i64*
  %1053 = bitcast %"class.blink::HeapVector.2471"* %64 to i8**
  %1054 = load i8*, i8** %1053, align 8
  store atomic i64 %1049, i64* %1052 monotonic, align 8
  store i32 %1050, i32* %163, align 8
  store i32 %1051, i32* %164, align 4
  %1055 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1056 = icmp eq i32 %1055, 0
  br i1 %1056, label %1060, label %1057

1057:                                             ; preds = %1048
  %1058 = inttoptr i64 %1049 to i8*
  %1059 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1058) #10
  br label %1060

1060:                                             ; preds = %1057, %1048
  %1061 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1062 = icmp eq i32 %1061, 0
  br i1 %1062, label %1755, label %1063

1063:                                             ; preds = %1060
  %1064 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1054) #10
  br label %1755

1065:                                             ; preds = %158
  %1066 = bitcast %"class.blink::ScriptIterator"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1066)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1066, i8* nonnull align 8 %95, i64 56, i1 false)
  %1067 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %93, align 8, !noalias !12
  %1068 = bitcast %"class.blink::HeapVector.2864"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1068) #10, !noalias !12
  %1069 = getelementptr inbounds %"class.blink::HeapVector.2864", %"class.blink::HeapVector.2864"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %1070 = getelementptr inbounds %"class.blink::HeapVector.2864", %"class.blink::HeapVector.2864"* %21, i64 0, i32 0, i32 0, i32 0, i32 1
  %1071 = getelementptr inbounds %"class.blink::HeapVector.2864", %"class.blink::HeapVector.2864"* %21, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1068, i8 0, i64 16, i1 false) #10, !noalias !12
  %1072 = bitcast %"class.WTF::Vector.2873"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1072) #10, !noalias !12
  %1073 = getelementptr inbounds %"class.WTF::Vector.2873", %"class.WTF::Vector.2873"* %22, i64 0, i32 0, i32 0, i32 0
  %1074 = getelementptr inbounds %"class.WTF::Vector.2873", %"class.WTF::Vector.2873"* %22, i64 0, i32 0, i32 0, i32 1
  %1075 = getelementptr inbounds %"class.WTF::Vector.2873", %"class.WTF::Vector.2873"* %22, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1072, i8 0, i64 16, i1 false) #10, !noalias !12
  %1076 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %3) #10, !noalias !12
  %1077 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %27, %"class.blink::ExecutionContext"* %1076, %"class.blink::ExceptionState"* dereferenceable(72) %4, %"class.v8::Value"* null) #10, !noalias !12
  %1078 = load i32, i32* %96, align 8, !noalias !12
  %1079 = icmp ne i32 %1078, 0
  br i1 %1077, label %1080, label %1501

1080:                                             ; preds = %1065
  %1081 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %27, i64 0, i32 6, i32 0
  %1082 = bitcast %"class.blink::BaseKeyframe"** %23 to i8*
  %1083 = bitcast %"class.WTF::Vector.981"* %24 to i8*
  %1084 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %24, i64 0, i32 0, i32 0, i32 0
  %1085 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %24, i64 0, i32 0, i32 0, i32 1
  %1086 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %24, i64 0, i32 0, i32 0, i32 2
  %1087 = bitcast %"class.v8::Local.2521"* %15 to i8*
  %1088 = getelementptr inbounds %"class.v8::Local.2521", %"class.v8::Local.2521"* %15, i64 0, i32 0
  %1089 = bitcast %"class.v8::Local.2521"* %15 to %"class.v8::Value"**
  %1090 = bitcast %"class.WTF::Vector.506"* %16 to i8*
  %1091 = getelementptr inbounds %"class.WTF::Vector.506", %"class.WTF::Vector.506"* %16, i64 0, i32 0, i32 0, i32 0
  %1092 = getelementptr inbounds %"class.WTF::Vector.506", %"class.WTF::Vector.506"* %16, i64 0, i32 0, i32 0, i32 2
  %1093 = bitcast i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %14 to i8*
  %1094 = bitcast %"class.v8::TryCatch"* %17 to i8*
  %1095 = bitcast %"class.WTF::StringView"* %12 to i8*
  %1096 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  %1097 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %1098 = bitcast i8** %1097 to %"class.WTF::StringImpl"**
  %1099 = bitcast %"class.WTF::StringView"* %12 to i64*
  %1100 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  %1101 = bitcast %"class.WTF::StringView"* %13 to i8*
  %1102 = bitcast %"class.WTF::StringView"* %13 to i64*
  %1103 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %1104 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  %1105 = bitcast %"class.WTF::StringView"* %10 to i8*
  %1106 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  %1107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %1108 = bitcast i8** %1107 to %"class.WTF::StringImpl"**
  %1109 = bitcast %"class.WTF::StringView"* %10 to i64*
  %1110 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  %1111 = bitcast %"class.WTF::StringView"* %11 to i8*
  %1112 = bitcast %"class.WTF::StringView"* %11 to i64*
  %1113 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %1114 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  %1115 = bitcast %"class.WTF::StringView"* %8 to i8*
  %1116 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  %1117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %1118 = bitcast i8** %1117 to %"class.WTF::StringImpl"**
  %1119 = bitcast %"class.WTF::StringView"* %8 to i64*
  %1120 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  %1121 = bitcast %"class.WTF::StringView"* %9 to i8*
  %1122 = bitcast %"class.WTF::StringView"* %9 to i64*
  %1123 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %1124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  %1125 = bitcast %"class.WTF::StringView"* %6 to i8*
  %1126 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  %1127 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %1128 = bitcast i8** %1127 to %"class.WTF::StringImpl"**
  %1129 = bitcast %"class.WTF::StringView"* %6 to i64*
  %1130 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %1131 = bitcast %"class.WTF::StringView"* %7 to i8*
  %1132 = bitcast %"class.WTF::StringView"* %7 to i64*
  %1133 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %1134 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %1135 = bitcast %"class.WTF::StringView"* %18 to i8*
  %1136 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 0
  %1137 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  %1138 = bitcast i8** %1137 to %"class.WTF::StringImpl"**
  %1139 = bitcast %"class.WTF::StringView"* %18 to i64*
  %1140 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  %1141 = bitcast %"struct.std::__1::pair.984"* %19 to i8*
  %1142 = getelementptr inbounds %"struct.std::__1::pair.984", %"struct.std::__1::pair.984"* %19, i64 0, i32 0, i32 0, i32 0
  %1143 = getelementptr inbounds %"struct.std::__1::pair.984", %"struct.std::__1::pair.984"* %19, i64 0, i32 1, i32 0, i32 0
  %1144 = getelementptr inbounds %"struct.std::__1::pair.984", %"struct.std::__1::pair.984"* %19, i64 0, i32 1
  %1145 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1144, i64 0, i32 0, i32 0
  %1146 = bitcast %"class.WTF::String"* %1144 to i64*
  %1147 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1148 = bitcast %"class.WTF::Vector.506"* %16 to i8**
  %1149 = bitcast %"class.blink::BaseKeyframe"** %23 to i64*
  %1150 = getelementptr inbounds %"class.blink::HeapVector.2864", %"class.blink::HeapVector.2864"* %21, i64 0, i32 0
  %1151 = bitcast %"class.WTF::Vector.981"* %24 to %"class.WTF::ConditionalDestructor.985"*
  br label %1152

1152:                                             ; preds = %1497, %1080
  %1153 = phi i1 [ %1079, %1080 ], [ %1500, %1497 ]
  br i1 %1153, label %1718, label %1154

1154:                                             ; preds = %1152
  %1155 = load %"class.v8::Value"*, %"class.v8::Value"** %1081, align 8, !noalias !12
  %1156 = icmp eq %"class.v8::Value"* %1155, null
  br i1 %1156, label %1157, label %1158, !prof !6

1157:                                             ; preds = %1154
  call void @_ZN2v82V812ToLocalEmptyEv() #10, !noalias !12
  br label %1158

1158:                                             ; preds = %1157, %1154
  %1159 = call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %1155) #10, !noalias !12
  br i1 %1159, label %1182, label %1160

1160:                                             ; preds = %1158
  %1161 = bitcast %"class.v8::Value"* %1155 to i64*
  %1162 = load i64, i64* %1161, align 8, !noalias !12
  %1163 = and i64 %1162, 3
  %1164 = icmp eq i64 %1163, 1
  br i1 %1164, label %1165, label %1181

1165:                                             ; preds = %1160
  %1166 = add i64 %1162, -1
  %1167 = inttoptr i64 %1166 to i32*
  %1168 = load i32, i32* %1167, align 4, !noalias !12
  %1169 = and i64 %1162, -4294967296
  %1170 = zext i32 %1168 to i64
  %1171 = or i64 %1169, %1170
  %1172 = add i64 %1171, 7
  %1173 = inttoptr i64 %1172 to i16*
  %1174 = load i16, i16* %1173, align 2, !noalias !12
  %1175 = icmp eq i16 %1174, 67
  br i1 %1175, label %1176, label %1181

1176:                                             ; preds = %1165
  %1177 = add i64 %1162, 23
  %1178 = inttoptr i64 %1177 to i32*
  %1179 = load i32, i32* %1178, align 4, !noalias !12
  %1180 = ashr i32 %1179, 1
  switch i32 %1180, label %1181 [
    i32 5, label %1182
    i32 3, label %1182
  ]

1181:                                             ; preds = %1176, %1165, %1160
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.28, i64 0, i64 0)) #10, !noalias !12
  br label %1718

1182:                                             ; preds = %1176, %1176, %1158
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1082) #10, !noalias !12
  store %"class.blink::BaseKeyframe"* inttoptr (i64 -6148914691236517206 to %"class.blink::BaseKeyframe"*), %"class.blink::BaseKeyframe"** %23, align 8, !noalias !12
  %1183 = call %"class.blink::BaseKeyframe"* @_ZN5blink17NativeValueTraitsINS_12BaseKeyframeEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1067, %"class.v8::Value"* %1155, %"class.blink::ExceptionState"* dereferenceable(72) %4) #10, !noalias !12
  store %"class.blink::BaseKeyframe"* %1183, %"class.blink::BaseKeyframe"** %23, align 8, !noalias !12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1083) #10, !noalias !12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1083, i8 0, i64 16, i1 false) #10, !noalias !12
  %1184 = load i32, i32* %96, align 8, !noalias !12
  %1185 = icmp eq i32 %1184, 0
  br i1 %1185, label %1187, label %1186

1186:                                             ; preds = %1182
  call void @_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__14pairINS_6StringES4_EELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.985"* nonnull %1151) #10, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1083) #10, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1082) #10, !noalias !12
  br label %1718

1187:                                             ; preds = %1182
  %1188 = bitcast %"class.v8::Value"* %1155 to i64*
  %1189 = load i64, i64* %1188, align 8, !noalias !12
  %1190 = and i64 %1189, 3
  %1191 = icmp eq i64 %1190, 1
  br i1 %1191, label %1192, label %1208

1192:                                             ; preds = %1187
  %1193 = add i64 %1189, -1
  %1194 = inttoptr i64 %1193 to i32*
  %1195 = load i32, i32* %1194, align 4, !noalias !12
  %1196 = and i64 %1189, -4294967296
  %1197 = zext i32 %1195 to i64
  %1198 = or i64 %1196, %1197
  %1199 = add i64 %1198, 7
  %1200 = inttoptr i64 %1199 to i16*
  %1201 = load i16, i16* %1200, align 2, !noalias !12
  %1202 = icmp eq i16 %1201, 67
  br i1 %1202, label %1203, label %1208

1203:                                             ; preds = %1192
  %1204 = add i64 %1189, 23
  %1205 = inttoptr i64 %1204 to i32*
  %1206 = load i32, i32* %1205, align 4, !noalias !12
  %1207 = ashr i32 %1206, 1
  switch i32 %1207, label %1208 [
    i32 5, label %1467
    i32 3, label %1467
  ]

1208:                                             ; preds = %1203, %1192, %1187
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1087) #10, !noalias !12
  store %"class.v8::Value"* %1155, %"class.v8::Value"** %1089, align 8, !noalias !12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1090) #10, !noalias !12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1090, i8 -86, i64 16, i1 false) #10, !noalias !12
  call void @_ZN5blink19GetOwnPropertyNamesEPN2v87IsolateERKNS0_5LocalINS0_6ObjectEEERNS_14ExceptionStateE(%"class.WTF::Vector.506"* nonnull sret %16, %"class.v8::Isolate"* %1067, %"class.v8::Local.2521"* nonnull dereferenceable(8) %15, %"class.blink::ExceptionState"* dereferenceable(72) %4) #10, !noalias !12
  %1209 = load i32, i32* %96, align 8, !noalias !12
  %1210 = icmp eq i32 %1209, 0
  br i1 %1210, label %1211, label %1428

1211:                                             ; preds = %1208
  %1212 = load %"class.WTF::String"*, %"class.WTF::String"** %1091, align 8, !noalias !12
  %1213 = load i32, i32* %1092, align 4, !noalias !12
  %1214 = zext i32 %1213 to i64
  %1215 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1212, i64 %1214
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1093) #10, !noalias !12
  store i1 (%"class.WTF::String"*, %"class.WTF::String"*)* @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %14, align 8, !noalias !12
  call void @_ZNSt3__16__sortIRPFbRKN3WTF6StringES4_EPS2_EEvT0_S9_T_(%"class.WTF::String"* %1212, %"class.WTF::String"* %1215, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** nonnull dereferenceable(8) %14) #10, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1093) #10, !noalias !12
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %1094) #10, !noalias !12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1094, i8 -86, i64 48, i1 false) #10, !noalias !12
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %17, %"class.v8::Isolate"* %1067) #10, !noalias !12
  %1216 = load %"class.WTF::String"*, %"class.WTF::String"** %1091, align 8, !noalias !12
  %1217 = load i32, i32* %1092, align 4, !noalias !12
  %1218 = zext i32 %1217 to i64
  %1219 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1216, i64 %1218
  %1220 = icmp eq i32 %1217, 0
  br i1 %1220, label %1427, label %1221

1221:                                             ; preds = %1211, %1424
  %1222 = phi %"class.WTF::String"* [ %1425, %1424 ], [ %1216, %1211 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1095) #10, !noalias !12
  %1223 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1222, i64 0, i32 0, i32 0
  %1224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1223, align 8, !noalias !12
  %1225 = icmp eq %"class.WTF::StringImpl"* %1224, null
  br i1 %1225, label %1226, label %1228

1226:                                             ; preds = %1221
  store i8* null, i8** %1097, align 8, !noalias !12
  %1227 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !12
  store i64 %1227, i64* %1099, align 8, !noalias !12
  br label %1233

1228:                                             ; preds = %1221
  store %"class.WTF::StringImpl"* %1224, %"class.WTF::StringImpl"** %1096, align 8, !noalias !12
  %1229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1224, i64 0, i32 1
  %1230 = load i32, i32* %1229, align 4, !noalias !12
  %1231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1224, i64 1
  store %"class.WTF::StringImpl"* %1231, %"class.WTF::StringImpl"** %1098, align 8, !noalias !12
  %1232 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !12
  br label %1233

1233:                                             ; preds = %1228, %1226
  %1234 = phi i64 [ %1232, %1228 ], [ %1227, %1226 ]
  %1235 = phi i32 [ %1230, %1228 ], [ 0, %1226 ]
  store i32 %1235, i32* %1100, align 8, !noalias !12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1101) #10, !noalias !12
  store i64 %1234, i64* %1102, align 8, !noalias !12
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i8** %1103, align 8, !noalias !12
  store i32 6, i32* %1104, align 8, !noalias !12
  %1236 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #10, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1101) #10, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1095) #10, !noalias !12
  br i1 %1236, label %1424, label %1237

1237:                                             ; preds = %1233
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1105) #10, !noalias !12
  %1238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1223, align 8, !noalias !12
  %1239 = icmp eq %"class.WTF::StringImpl"* %1238, null
  br i1 %1239, label %1240, label %1242

1240:                                             ; preds = %1237
  store i8* null, i8** %1107, align 8, !noalias !12
  %1241 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !12
  store i64 %1241, i64* %1109, align 8, !noalias !12
  br label %1247

1242:                                             ; preds = %1237
  store %"class.WTF::StringImpl"* %1238, %"class.WTF::StringImpl"** %1106, align 8, !noalias !12
  %1243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1238, i64 0, i32 1
  %1244 = load i32, i32* %1243, align 4, !noalias !12
  %1245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1238, i64 1
  store %"class.WTF::StringImpl"* %1245, %"class.WTF::StringImpl"** %1108, align 8, !noalias !12
  %1246 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !12
  br label %1247

1247:                                             ; preds = %1242, %1240
  %1248 = phi i64 [ %1246, %1242 ], [ %1241, %1240 ]
  %1249 = phi i32 [ %1244, %1242 ], [ 0, %1240 ]
  store i32 %1249, i32* %1110, align 8, !noalias !12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1111) #10, !noalias !12
  store i64 %1248, i64* %1112, align 8, !noalias !12
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i8** %1113, align 8, !noalias !12
  store i32 5, i32* %1114, align 8, !noalias !12
  %1250 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #10, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1111) #10, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1105) #10, !noalias !12
  br i1 %1250, label %1424, label %1251

1251:                                             ; preds = %1247
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1115) #10, !noalias !12
  %1252 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1223, align 8, !noalias !12
  %1253 = icmp eq %"class.WTF::StringImpl"* %1252, null
  br i1 %1253, label %1254, label %1256

1254:                                             ; preds = %1251
  store i8* null, i8** %1117, align 8, !noalias !12
  %1255 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !12
  store i64 %1255, i64* %1119, align 8, !noalias !12
  br label %1261

1256:                                             ; preds = %1251
  store %"class.WTF::StringImpl"* %1252, %"class.WTF::StringImpl"** %1116, align 8, !noalias !12
  %1257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1252, i64 0, i32 1
  %1258 = load i32, i32* %1257, align 4, !noalias !12
  %1259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1252, i64 1
  store %"class.WTF::StringImpl"* %1259, %"class.WTF::StringImpl"** %1118, align 8, !noalias !12
  %1260 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !12
  br label %1261

1261:                                             ; preds = %1256, %1254
  %1262 = phi i64 [ %1260, %1256 ], [ %1255, %1254 ]
  %1263 = phi i32 [ %1258, %1256 ], [ 0, %1254 ]
  store i32 %1263, i32* %1120, align 8, !noalias !12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1121) #10, !noalias !12
  store i64 %1262, i64* %1122, align 8, !noalias !12
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i8** %1123, align 8, !noalias !12
  store i32 9, i32* %1124, align 8, !noalias !12
  %1264 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #10, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1121) #10, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1115) #10, !noalias !12
  br i1 %1264, label %1424, label %1265

1265:                                             ; preds = %1261
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1125) #10, !noalias !12
  %1266 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1223, align 8, !noalias !12
  %1267 = icmp eq %"class.WTF::StringImpl"* %1266, null
  br i1 %1267, label %1268, label %1270

1268:                                             ; preds = %1265
  store i8* null, i8** %1127, align 8, !noalias !12
  %1269 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !12
  store i64 %1269, i64* %1129, align 8, !noalias !12
  br label %1275

1270:                                             ; preds = %1265
  store %"class.WTF::StringImpl"* %1266, %"class.WTF::StringImpl"** %1126, align 8, !noalias !12
  %1271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1266, i64 0, i32 1
  %1272 = load i32, i32* %1271, align 4, !noalias !12
  %1273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1266, i64 1
  store %"class.WTF::StringImpl"* %1273, %"class.WTF::StringImpl"** %1128, align 8, !noalias !12
  %1274 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !12
  br label %1275

1275:                                             ; preds = %1270, %1268
  %1276 = phi i64 [ %1274, %1270 ], [ %1269, %1268 ]
  %1277 = phi i32 [ %1272, %1270 ], [ 0, %1268 ]
  store i32 %1277, i32* %1130, align 8, !noalias !12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1131) #10, !noalias !12
  store i64 %1276, i64* %1132, align 8, !noalias !12
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i8** %1133, align 8, !noalias !12
  store i32 6, i32* %1134, align 8, !noalias !12
  %1278 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #10, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1131) #10, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1125) #10, !noalias !12
  br i1 %1278, label %1424, label %1279

1279:                                             ; preds = %1275
  %1280 = call i32 @_ZN5blink21AnimationInputHelpers30KeyframeAttributeToCSSPropertyERKN3WTF6StringERKNS_8DocumentE(%"class.WTF::String"* dereferenceable(8) %1222, %"class.blink::Document"* dereferenceable(2848) %160) #10, !noalias !12
  %1281 = icmp eq i32 %1280, 0
  br i1 %1281, label %1285, label %1282

1282:                                             ; preds = %1279
  %1283 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %1280) #10, !noalias !12
  %1284 = call zeroext i1 @_ZN5blink13CSSAnimations28IsAnimationAffectingPropertyERKNS_11CSSPropertyE(%"class.blink::CSSProperty"* dereferenceable(24) %1283) #10, !noalias !12
  br i1 %1284, label %1424, label %1291

1285:                                             ; preds = %1279
  %1286 = call i32 @_ZN5blink21AnimationInputHelpers40KeyframeAttributeToPresentationAttributeERKN3WTF6StringEPKNS_7ElementE(%"class.WTF::String"* dereferenceable(8) %1222, %"class.blink::Element"* %1) #10, !noalias !12
  %1287 = icmp eq i32 %1286, 0
  br i1 %1287, label %1288, label %1291

1288:                                             ; preds = %1285
  %1289 = call %"class.blink::QualifiedName"* @_ZN5blink21AnimationInputHelpers31KeyframeAttributeToSVGAttributeERKN3WTF6StringEPNS_7ElementE(%"class.WTF::String"* dereferenceable(8) %1222, %"class.blink::Element"* %1) #10, !noalias !12
  %1290 = icmp eq %"class.blink::QualifiedName"* %1289, null
  br i1 %1290, label %1424, label %1291

1291:                                             ; preds = %1288, %1285, %1282
  %1292 = load %"class.v8::Object"*, %"class.v8::Object"** %1088, align 8, !noalias !12
  %1293 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1067) #10, !noalias !12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1135) #10, !noalias !12
  %1294 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1223, align 8, !noalias !12
  %1295 = icmp eq %"class.WTF::StringImpl"* %1294, null
  br i1 %1295, label %1296, label %1298

1296:                                             ; preds = %1291
  store i8* null, i8** %1137, align 8, !noalias !12
  %1297 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !12
  store i64 %1297, i64* %1139, align 8, !noalias !12
  br label %1302

1298:                                             ; preds = %1291
  store %"class.WTF::StringImpl"* %1294, %"class.WTF::StringImpl"** %1136, align 8, !noalias !12
  %1299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1294, i64 0, i32 1
  %1300 = load i32, i32* %1299, align 4, !noalias !12
  %1301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1294, i64 1
  store %"class.WTF::StringImpl"* %1301, %"class.WTF::StringImpl"** %1138, align 8, !noalias !12
  br label %1302

1302:                                             ; preds = %1298, %1296
  %1303 = phi i32 [ %1300, %1298 ], [ 0, %1296 ]
  store i32 %1303, i32* %1140, align 8, !noalias !12
  %1304 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %1067, %"class.WTF::StringView"* nonnull dereferenceable(24) %18) #10, !noalias !12
  %1305 = bitcast %"class.v8::String"* %1304 to %"class.v8::Value"*
  %1306 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1292, %"class.v8::Context"* %1293, %"class.v8::Value"* %1305) #10, !noalias !12
  %1307 = icmp eq %"class.v8::Value"* %1306, null
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1135) #10, !noalias !12
  br i1 %1307, label %1308, label %1313

1308:                                             ; preds = %1302
  %1309 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %17) #10, !noalias !12
  %1310 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1147, align 8, !noalias !12
  %1311 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1310, i64 5
  %1312 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1311, align 8, !noalias !12
  call void %1312(%"class.blink::ExceptionState"* %4, %"class.v8::Value"* %1309) #10, !noalias !12
  br label %1427

1313:                                             ; preds = %1302
  %1314 = call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* nonnull %1306) #10, !noalias !12
  br i1 %1314, label %1424, label %1315

1315:                                             ; preds = %1313
  %1316 = call %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1067, %"class.v8::Value"* nonnull %1306, %"class.blink::ExceptionState"* dereferenceable(72) %4) #10, !noalias !12
  %1317 = load i32, i32* %96, align 8, !noalias !12
  %1318 = icmp eq i32 %1317, 0
  br i1 %1318, label %1319, label %1406

1319:                                             ; preds = %1315
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1141) #10, !noalias !12
  %1320 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1223, align 8, !noalias !12
  %1321 = icmp eq %"class.WTF::StringImpl"* %1320, null
  br i1 %1321, label %1339, label %1322

1322:                                             ; preds = %1319
  %1323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1320, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1324 = load atomic i32, i32* %1323 monotonic, align 4, !noalias !12
  %1325 = and i32 %1324, 2
  %1326 = icmp eq i32 %1325, 0
  br i1 %1326, label %1327, label %1339

1327:                                             ; preds = %1322
  %1328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1320, i64 0, i32 0
  %1329 = load i32, i32* %1328, align 4, !noalias !12
  %1330 = zext i32 %1329 to i33
  %1331 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1330, i33 1) #10
  %1332 = extractvalue { i33, i1 } %1331, 1
  %1333 = extractvalue { i33, i1 } %1331, 0
  %1334 = icmp slt i33 %1333, 0
  %1335 = or i1 %1332, %1334
  br i1 %1335, label %1336, label %1337, !prof !6

1336:                                             ; preds = %1327
  call void @llvm.trap() #10, !noalias !12
  unreachable

1337:                                             ; preds = %1327
  %1338 = trunc i33 %1333 to i32
  store i32 %1338, i32* %1328, align 4, !noalias !12
  br label %1339

1339:                                             ; preds = %1337, %1322, %1319
  %1340 = icmp eq %"class.WTF::StringImpl"* %1316, null
  br i1 %1340, label %1358, label %1341

1341:                                             ; preds = %1339
  %1342 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1316, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1343 = load atomic i32, i32* %1342 monotonic, align 4, !noalias !12
  %1344 = and i32 %1343, 2
  %1345 = icmp eq i32 %1344, 0
  br i1 %1345, label %1346, label %1358

1346:                                             ; preds = %1341
  %1347 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1316, i64 0, i32 0
  %1348 = load i32, i32* %1347, align 4, !noalias !12
  %1349 = zext i32 %1348 to i33
  %1350 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1349, i33 1) #10
  %1351 = extractvalue { i33, i1 } %1350, 1
  %1352 = extractvalue { i33, i1 } %1350, 0
  %1353 = icmp slt i33 %1352, 0
  %1354 = or i1 %1351, %1353
  br i1 %1354, label %1355, label %1356, !prof !6

1355:                                             ; preds = %1346
  call void @llvm.trap() #10, !noalias !12
  unreachable

1356:                                             ; preds = %1346
  %1357 = trunc i33 %1352 to i32
  store i32 %1357, i32* %1347, align 4, !noalias !12
  br label %1358

1358:                                             ; preds = %1356, %1341, %1339
  store %"class.WTF::StringImpl"* %1320, %"class.WTF::StringImpl"** %1142, align 8, !noalias !12
  store %"class.WTF::StringImpl"* %1316, %"class.WTF::StringImpl"** %1143, align 8, !noalias !12
  %1359 = load i32, i32* %1086, align 4, !noalias !12
  %1360 = load i32, i32* %1085, align 8, !noalias !12
  %1361 = icmp eq i32 %1359, %1360
  br i1 %1361, label %1373, label %1362, !prof !6

1362:                                             ; preds = %1358
  %1363 = ptrtoint %"class.WTF::StringImpl"* %1320 to i64
  %1364 = load %"struct.std::__1::pair.984"*, %"struct.std::__1::pair.984"** %1084, align 8, !noalias !12
  %1365 = zext i32 %1359 to i64
  %1366 = getelementptr inbounds %"struct.std::__1::pair.984", %"struct.std::__1::pair.984"* %1364, i64 %1365
  %1367 = bitcast %"struct.std::__1::pair.984"* %1366 to i64*
  store i64 %1363, i64* %1367, align 8, !noalias !12
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1142, align 8, !noalias !12
  %1368 = getelementptr inbounds %"struct.std::__1::pair.984", %"struct.std::__1::pair.984"* %1364, i64 %1365, i32 1
  %1369 = load i64, i64* %1146, align 8, !noalias !12
  %1370 = bitcast %"class.WTF::String"* %1368 to i64*
  store i64 %1369, i64* %1370, align 8, !noalias !12
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1145, align 8, !noalias !12
  %1371 = load i32, i32* %1086, align 4, !noalias !12
  %1372 = add i32 %1371, 1
  store i32 %1372, i32* %1086, align 4, !noalias !12
  br label %1389

1373:                                             ; preds = %1358
  call void @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.981"* nonnull %24, %"struct.std::__1::pair.984"* nonnull dereferenceable(16) %19) #10, !noalias !12
  %1374 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1143, align 8, !noalias !12
  %1375 = icmp eq %"class.WTF::StringImpl"* %1374, null
  br i1 %1375, label %1389, label %1376

1376:                                             ; preds = %1373
  %1377 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1374, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1378 = load atomic i32, i32* %1377 monotonic, align 4, !noalias !12
  %1379 = and i32 %1378, 2
  %1380 = icmp eq i32 %1379, 0
  %1381 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1374, i64 0, i32 0
  %1382 = load i32, i32* %1381, align 4, !noalias !12
  br i1 %1380, label %1383, label %1385

1383:                                             ; preds = %1376
  %1384 = add i32 %1382, -1
  store i32 %1384, i32* %1381, align 4, !noalias !12
  br label %1385

1385:                                             ; preds = %1383, %1376
  %1386 = phi i32 [ %1384, %1383 ], [ %1382, %1376 ]
  %1387 = icmp eq i32 %1386, 0
  br i1 %1387, label %1388, label %1389

1388:                                             ; preds = %1385
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1374) #10, !noalias !12
  br label %1389

1389:                                             ; preds = %1388, %1385, %1373, %1362
  %1390 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1142, align 8, !noalias !12
  %1391 = icmp eq %"class.WTF::StringImpl"* %1390, null
  br i1 %1391, label %1405, label %1392

1392:                                             ; preds = %1389
  %1393 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1390, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1394 = load atomic i32, i32* %1393 monotonic, align 4, !noalias !12
  %1395 = and i32 %1394, 2
  %1396 = icmp eq i32 %1395, 0
  %1397 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1390, i64 0, i32 0
  %1398 = load i32, i32* %1397, align 4, !noalias !12
  br i1 %1396, label %1399, label %1401

1399:                                             ; preds = %1392
  %1400 = add i32 %1398, -1
  store i32 %1400, i32* %1397, align 4, !noalias !12
  br label %1401

1401:                                             ; preds = %1399, %1392
  %1402 = phi i32 [ %1400, %1399 ], [ %1398, %1392 ]
  %1403 = icmp eq i32 %1402, 0
  br i1 %1403, label %1404, label %1405

1404:                                             ; preds = %1401
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1390) #10, !noalias !12
  br label %1405

1405:                                             ; preds = %1404, %1401, %1389
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1141) #10, !noalias !12
  br label %1406

1406:                                             ; preds = %1405, %1315
  %1407 = phi i32 [ 0, %1405 ], [ 1, %1315 ]
  %1408 = icmp eq %"class.WTF::StringImpl"* %1316, null
  br i1 %1408, label %1422, label %1409

1409:                                             ; preds = %1406
  %1410 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1316, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1411 = load atomic i32, i32* %1410 monotonic, align 4, !noalias !12
  %1412 = and i32 %1411, 2
  %1413 = icmp eq i32 %1412, 0
  %1414 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1316, i64 0, i32 0
  %1415 = load i32, i32* %1414, align 4, !noalias !12
  br i1 %1413, label %1416, label %1418

1416:                                             ; preds = %1409
  %1417 = add i32 %1415, -1
  store i32 %1417, i32* %1414, align 4, !noalias !12
  br label %1418

1418:                                             ; preds = %1416, %1409
  %1419 = phi i32 [ %1417, %1416 ], [ %1415, %1409 ]
  %1420 = icmp eq i32 %1419, 0
  br i1 %1420, label %1421, label %1422

1421:                                             ; preds = %1418
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1316) #10, !noalias !12
  br label %1422

1422:                                             ; preds = %1421, %1418, %1406
  %1423 = icmp eq i32 %1407, 0
  br i1 %1423, label %1424, label %1427

1424:                                             ; preds = %1422, %1313, %1288, %1282, %1275, %1261, %1247, %1233
  %1425 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1222, i64 1
  %1426 = icmp eq %"class.WTF::String"* %1425, %1219
  br i1 %1426, label %1427, label %1221

1427:                                             ; preds = %1424, %1422, %1308, %1211
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %17) #10, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1094) #10, !noalias !12
  br label %1428

1428:                                             ; preds = %1427, %1208
  %1429 = load %"class.WTF::String"*, %"class.WTF::String"** %1091, align 8, !noalias !12
  %1430 = icmp eq %"class.WTF::String"* %1429, null
  br i1 %1430, label %1463, label %1431, !prof !11

1431:                                             ; preds = %1428
  %1432 = bitcast %"class.WTF::String"* %1429 to i8*
  %1433 = load i32, i32* %1092, align 4, !noalias !12
  %1434 = icmp eq i32 %1433, 0
  br i1 %1434, label %1461, label %1435, !prof !6

1435:                                             ; preds = %1431
  %1436 = zext i32 %1433 to i64
  %1437 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1429, i64 %1436
  br label %1438

1438:                                             ; preds = %1456, %1435
  %1439 = phi %"class.WTF::String"* [ %1457, %1456 ], [ %1429, %1435 ]
  %1440 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1439, i64 0, i32 0, i32 0
  %1441 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1440, align 8, !noalias !12
  %1442 = icmp eq %"class.WTF::StringImpl"* %1441, null
  br i1 %1442, label %1456, label %1443

1443:                                             ; preds = %1438
  %1444 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1441, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1445 = load atomic i32, i32* %1444 monotonic, align 4, !noalias !12
  %1446 = and i32 %1445, 2
  %1447 = icmp eq i32 %1446, 0
  %1448 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1441, i64 0, i32 0
  %1449 = load i32, i32* %1448, align 4, !noalias !12
  br i1 %1447, label %1450, label %1452

1450:                                             ; preds = %1443
  %1451 = add i32 %1449, -1
  store i32 %1451, i32* %1448, align 4, !noalias !12
  br label %1452

1452:                                             ; preds = %1450, %1443
  %1453 = phi i32 [ %1451, %1450 ], [ %1449, %1443 ]
  %1454 = icmp eq i32 %1453, 0
  br i1 %1454, label %1455, label %1456

1455:                                             ; preds = %1452
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1441) #10, !noalias !12
  br label %1456

1456:                                             ; preds = %1455, %1452, %1438
  %1457 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1439, i64 1
  %1458 = icmp eq %"class.WTF::String"* %1457, %1437
  br i1 %1458, label %1459, label %1438

1459:                                             ; preds = %1456
  store i32 0, i32* %1092, align 4, !noalias !12
  %1460 = load i8*, i8** %1148, align 8, !noalias !12
  br label %1461

1461:                                             ; preds = %1459, %1431
  %1462 = phi i8* [ %1460, %1459 ], [ %1432, %1431 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1462) #10, !noalias !12
  store %"class.WTF::String"* null, %"class.WTF::String"** %1091, align 8, !noalias !12
  br label %1463

1463:                                             ; preds = %1461, %1428
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1090) #10, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1087) #10, !noalias !12
  %1464 = load i32, i32* %96, align 8, !noalias !12
  %1465 = icmp eq i32 %1464, 0
  br i1 %1465, label %1467, label %1466

1466:                                             ; preds = %1463
  call void @_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__14pairINS_6StringES4_EELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.985"* nonnull %1151) #10, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1083) #10, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1082) #10, !noalias !12
  br label %1718

1467:                                             ; preds = %1463, %1203, %1203
  %1468 = load i32, i32* %1071, align 4, !noalias !12
  %1469 = load i32, i32* %1070, align 8, !noalias !12
  %1470 = icmp eq i32 %1468, %1469
  br i1 %1470, label %1485, label %1471, !prof !6

1471:                                             ; preds = %1467
  %1472 = load %"class.blink::Member.2870"*, %"class.blink::Member.2870"** %1069, align 8, !noalias !12
  %1473 = zext i32 %1468 to i64
  %1474 = getelementptr inbounds %"class.blink::Member.2870", %"class.blink::Member.2870"* %1472, i64 %1473
  %1475 = load i64, i64* %1149, align 8, !noalias !12
  %1476 = bitcast %"class.blink::Member.2870"* %1474 to i64*
  store atomic i64 %1475, i64* %1476 monotonic, align 8, !noalias !12
  %1477 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4, !noalias !12
  %1478 = icmp eq i32 %1477, 0
  br i1 %1478, label %1482, label %1479

1479:                                             ; preds = %1471
  %1480 = inttoptr i64 %1475 to i8*
  %1481 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1480) #10, !noalias !12
  br label %1482

1482:                                             ; preds = %1479, %1471
  %1483 = load i32, i32* %1071, align 4, !noalias !12
  %1484 = add i32 %1483, 1
  store i32 %1484, i32* %1071, align 4, !noalias !12
  br label %1486

1485:                                             ; preds = %1467
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_12BaseKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.2867"* nonnull %1150, %"class.blink::BaseKeyframe"** nonnull dereferenceable(8) %23) #10, !noalias !12
  br label %1486

1486:                                             ; preds = %1485, %1482
  %1487 = load i32, i32* %1075, align 4, !noalias !12
  %1488 = load i32, i32* %1074, align 8, !noalias !12
  %1489 = icmp eq i32 %1487, %1488
  br i1 %1489, label %1496, label %1490, !prof !6

1490:                                             ; preds = %1486
  %1491 = load %"class.WTF::Vector.981"*, %"class.WTF::Vector.981"** %1073, align 8, !noalias !12
  %1492 = zext i32 %1487 to i64
  %1493 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %1491, i64 %1492
  call void @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEC2ERKS6_(%"class.WTF::Vector.981"* %1493, %"class.WTF::Vector.981"* nonnull dereferenceable(16) %24) #10, !noalias !12
  %1494 = load i32, i32* %1075, align 4, !noalias !12
  %1495 = add i32 %1494, 1
  store i32 %1495, i32* %1075, align 4, !noalias !12
  br label %1497

1496:                                             ; preds = %1486
  call void @_ZN3WTF6VectorINS0_INSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEELj0ES5_E14AppendSlowCaseIRS6_EEvOT_(%"class.WTF::Vector.2873"* nonnull %22, %"class.WTF::Vector.981"* nonnull dereferenceable(16) %24) #10, !noalias !12
  br label %1497

1497:                                             ; preds = %1496, %1490
  call void @_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__14pairINS_6StringES4_EELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.985"* nonnull %1151) #10, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1083) #10, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1082) #10, !noalias !12
  %1498 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %27, %"class.blink::ExecutionContext"* %1076, %"class.blink::ExceptionState"* dereferenceable(72) %4, %"class.v8::Value"* null) #10, !noalias !12
  %1499 = load i32, i32* %96, align 8, !noalias !12
  %1500 = icmp ne i32 %1499, 0
  br i1 %1498, label %1152, label %1501

1501:                                             ; preds = %1497, %1065
  %1502 = phi i1 [ %1079, %1065 ], [ %1500, %1497 ]
  br i1 %1502, label %1718, label %1503

1503:                                             ; preds = %1501
  %1504 = getelementptr inbounds %"class.blink::HeapVector.2864", %"class.blink::HeapVector.2864"* %21, i64 0, i32 0
  %1505 = load i32, i32* %1071, align 4, !noalias !12
  %1506 = icmp eq i32 %1505, 0
  br i1 %1506, label %1549, label %1507

1507:                                             ; preds = %1503, %1524
  %1508 = phi i32 [ %1526, %1524 ], [ 0, %1503 ]
  %1509 = phi double [ %1525, %1524 ], [ 0xFFF0000000000000, %1503 ]
  %1510 = call dereferenceable(8) %"class.blink::Member.2870"* @_ZN3WTF6VectorIN5blink6MemberIKNS1_12BaseKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2867"* nonnull %1504, i32 %1508) #10, !noalias !12
  %1511 = getelementptr inbounds %"class.blink::Member.2870", %"class.blink::Member.2870"* %1510, i64 0, i32 0, i32 0
  %1512 = load %"class.blink::BaseKeyframe"*, %"class.blink::BaseKeyframe"** %1511, align 8, !noalias !12
  %1513 = getelementptr inbounds %"class.blink::BaseKeyframe", %"class.blink::BaseKeyframe"* %1512, i64 0, i32 1
  %1514 = load i8, i8* %1513, align 8, !range !2, !noalias !12
  %1515 = icmp eq i8 %1514, 0
  br i1 %1515, label %1524, label %1516

1516:                                             ; preds = %1507
  %1517 = call dereferenceable(8) %"class.blink::Member.2870"* @_ZN3WTF6VectorIN5blink6MemberIKNS1_12BaseKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2867"* nonnull %1504, i32 %1508) #10, !noalias !12
  %1518 = getelementptr inbounds %"class.blink::Member.2870", %"class.blink::Member.2870"* %1517, i64 0, i32 0, i32 0
  %1519 = load %"class.blink::BaseKeyframe"*, %"class.blink::BaseKeyframe"** %1518, align 8, !noalias !12
  %1520 = getelementptr inbounds %"class.blink::BaseKeyframe", %"class.blink::BaseKeyframe"* %1519, i64 0, i32 4
  %1521 = load double, double* %1520, align 8, !noalias !12
  %1522 = fcmp olt double %1521, %1509
  br i1 %1522, label %1523, label %1524

1523:                                             ; preds = %1516
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7, i64 0, i64 0)) #10, !noalias !12
  br label %1718

1524:                                             ; preds = %1516, %1507
  %1525 = phi double [ %1509, %1507 ], [ %1521, %1516 ]
  %1526 = add nuw i32 %1508, 1
  %1527 = icmp eq i32 %1526, %1505
  br i1 %1527, label %1528, label %1507

1528:                                             ; preds = %1524, %1545
  %1529 = phi i32 [ %1546, %1545 ], [ 0, %1524 ]
  %1530 = call dereferenceable(8) %"class.blink::Member.2870"* @_ZN3WTF6VectorIN5blink6MemberIKNS1_12BaseKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2867"* nonnull %1504, i32 %1529) #10, !noalias !12
  %1531 = getelementptr inbounds %"class.blink::Member.2870", %"class.blink::Member.2870"* %1530, i64 0, i32 0, i32 0
  %1532 = load %"class.blink::BaseKeyframe"*, %"class.blink::BaseKeyframe"** %1531, align 8, !noalias !12
  %1533 = getelementptr inbounds %"class.blink::BaseKeyframe", %"class.blink::BaseKeyframe"* %1532, i64 0, i32 1
  %1534 = load i8, i8* %1533, align 8, !range !2, !noalias !12
  %1535 = icmp eq i8 %1534, 0
  br i1 %1535, label %1545, label %1536

1536:                                             ; preds = %1528
  %1537 = call dereferenceable(8) %"class.blink::Member.2870"* @_ZN3WTF6VectorIN5blink6MemberIKNS1_12BaseKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2867"* nonnull %1504, i32 %1529) #10, !noalias !12
  %1538 = getelementptr inbounds %"class.blink::Member.2870", %"class.blink::Member.2870"* %1537, i64 0, i32 0, i32 0
  %1539 = load %"class.blink::BaseKeyframe"*, %"class.blink::BaseKeyframe"** %1538, align 8, !noalias !12
  %1540 = getelementptr inbounds %"class.blink::BaseKeyframe", %"class.blink::BaseKeyframe"* %1539, i64 0, i32 4
  %1541 = load double, double* %1540, align 8, !noalias !12
  %1542 = fcmp olt double %1541, 0.000000e+00
  %1543 = fcmp ogt double %1541, 1.000000e+00
  %1544 = or i1 %1542, %1543
  br i1 %1544, label %1548, label %1545

1545:                                             ; preds = %1536, %1528
  %1546 = add nuw i32 %1529, 1
  %1547 = icmp eq i32 %1546, %1505
  br i1 %1547, label %1549, label %1528

1548:                                             ; preds = %1536
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0)) #10, !noalias !12
  br label %1718

1549:                                             ; preds = %1545, %1503
  %1550 = bitcast %"class.blink::HeapVector.2471"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1550) #10, !noalias !12
  %1551 = getelementptr inbounds %"class.blink::HeapVector.2471", %"class.blink::HeapVector.2471"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %1552 = getelementptr inbounds %"class.blink::HeapVector.2471", %"class.blink::HeapVector.2471"* %25, i64 0, i32 0, i32 0, i32 0, i32 1
  %1553 = getelementptr inbounds %"class.blink::HeapVector.2471", %"class.blink::HeapVector.2471"* %25, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1550, i8 0, i64 16, i1 false) #10, !noalias !12
  br i1 %1506, label %1554, label %1556

1554:                                             ; preds = %1549
  %1555 = bitcast %"class.blink::HeapVector.2471"* %25 to i64*
  br label %1697

1556:                                             ; preds = %1549
  %1557 = bitcast %"class.blink::StringKeyframe"** %26 to i8*
  %1558 = bitcast %"class.blink::StringKeyframe"** %26 to i8**
  %1559 = bitcast %"class.blink::StringKeyframe"** %26 to %"class.blink::Keyframe"**
  %1560 = bitcast %"class.logging::CheckError"* %20 to i8*
  %1561 = bitcast %"class.blink::StringKeyframe"** %26 to i64*
  %1562 = getelementptr inbounds %"class.blink::HeapVector.2471", %"class.blink::HeapVector.2471"* %25, i64 0, i32 0
  br label %1563

1563:                                             ; preds = %1688, %1556
  %1564 = phi i32 [ 0, %1556 ], [ %1689, %1688 ]
  %1565 = call dereferenceable(8) %"class.blink::Member.2870"* @_ZN3WTF6VectorIN5blink6MemberIKNS1_12BaseKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2867"* nonnull %1504, i32 %1564) #10, !noalias !12
  %1566 = getelementptr inbounds %"class.blink::Member.2870", %"class.blink::Member.2870"* %1565, i64 0, i32 0, i32 0
  %1567 = load %"class.blink::BaseKeyframe"*, %"class.blink::BaseKeyframe"** %1566, align 8, !noalias !12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1557) #10, !noalias !12
  store %"class.blink::StringKeyframe"* inttoptr (i64 -6148914691236517206 to %"class.blink::StringKeyframe"*), %"class.blink::StringKeyframe"** %26, align 8, !noalias !12
  %1568 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_8KeyframeEEEPhm(i64 112) #10, !noalias !12
  %1569 = bitcast i8* %1568 to %"class.blink::StringKeyframe"*
  call void @_ZN5blink14StringKeyframeC2Ev(%"class.blink::StringKeyframe"* %1569) #10, !noalias !12
  %1570 = getelementptr inbounds i8, i8* %1568, i64 -4
  %1571 = bitcast i8* %1570 to i16*
  %1572 = load atomic i16, i16* %1571 monotonic, align 2, !noalias !12
  %1573 = or i16 %1572, 1
  store atomic i16 %1573, i16* %1571 release, align 2, !noalias !12
  store i8* %1568, i8** %1558, align 8, !noalias !12
  %1574 = getelementptr inbounds %"class.blink::BaseKeyframe", %"class.blink::BaseKeyframe"* %1567, i64 0, i32 1
  %1575 = load i8, i8* %1574, align 8, !range !2, !noalias !12
  %1576 = icmp eq i8 %1575, 0
  br i1 %1576, label %1584, label %1577

1577:                                             ; preds = %1563
  %1578 = getelementptr inbounds %"class.blink::BaseKeyframe", %"class.blink::BaseKeyframe"* %1567, i64 0, i32 4
  %1579 = bitcast double* %1578 to i64*
  %1580 = load i64, i64* %1579, align 8, !noalias !12
  %1581 = getelementptr inbounds i8, i8* %1568, i64 8
  store i8 1, i8* %1581, align 8, !noalias !12
  %1582 = getelementptr inbounds i8, i8* %1568, i64 16
  %1583 = bitcast i8* %1582 to i64*
  store i64 %1580, i64* %1583, align 8, !noalias !12
  br label %1584

1584:                                             ; preds = %1577, %1563
  %1585 = call dereferenceable(16) %"class.WTF::Vector.981"* @_ZN3WTF6VectorINS0_INSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.2873"* nonnull %22, i32 %1564) #10, !noalias !12
  %1586 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %1585, i64 0, i32 0, i32 0, i32 0
  %1587 = load %"struct.std::__1::pair.984"*, %"struct.std::__1::pair.984"** %1586, align 8, !noalias !12
  %1588 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %1585, i64 0, i32 0, i32 0, i32 2
  %1589 = load i32, i32* %1588, align 4, !noalias !12
  %1590 = zext i32 %1589 to i64
  %1591 = getelementptr inbounds %"struct.std::__1::pair.984", %"struct.std::__1::pair.984"* %1587, i64 %1590
  %1592 = icmp eq i32 %1589, 0
  br i1 %1592, label %1593, label %1600

1593:                                             ; preds = %1600, %1584
  %1594 = getelementptr inbounds %"class.blink::BaseKeyframe", %"class.blink::BaseKeyframe"* %1567, i64 0, i32 2
  %1595 = call i64 @_ZN5blink11EffectModel26StringToCompositeOperationERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %1594) #10, !noalias !12
  %1596 = trunc i64 %1595 to i8
  %1597 = lshr i64 %1595, 32
  %1598 = trunc i64 %1597 to i32
  %1599 = icmp eq i8 %1596, 0
  br i1 %1599, label %1627, label %1607

1600:                                             ; preds = %1584, %1600
  %1601 = phi %"struct.std::__1::pair.984"* [ %1605, %1600 ], [ %1587, %1584 ]
  %1602 = load %"class.blink::StringKeyframe"*, %"class.blink::StringKeyframe"** %26, align 8, !noalias !12
  %1603 = getelementptr inbounds %"struct.std::__1::pair.984", %"struct.std::__1::pair.984"* %1601, i64 0, i32 0
  %1604 = getelementptr inbounds %"struct.std::__1::pair.984", %"struct.std::__1::pair.984"* %1601, i64 0, i32 1
  call fastcc void @_ZN5blink12_GLOBAL__N_116SetKeyframeValueEPNS_7ElementERNS_8DocumentERNS_14StringKeyframeERKN3WTF6StringESA_PNS_16ExecutionContextE(%"class.blink::Element"* %1, %"class.blink::Document"* dereferenceable(2848) %160, %"class.blink::StringKeyframe"* dereferenceable(112) %1602, %"class.WTF::String"* dereferenceable(8) %1603, %"class.WTF::String"* dereferenceable(8) %1604, %"class.blink::ExecutionContext"* %1076) #10, !noalias !12
  %1605 = getelementptr inbounds %"struct.std::__1::pair.984", %"struct.std::__1::pair.984"* %1601, i64 1
  %1606 = icmp eq %"struct.std::__1::pair.984"* %1605, %1591
  br i1 %1606, label %1593, label %1600

1607:                                             ; preds = %1593
  %1608 = load %"class.blink::Keyframe"*, %"class.blink::Keyframe"** %1559, align 8, !noalias !12
  %1609 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase29is_animation_worklet_enabled_E, align 1, !range !2, !noalias !12
  %1610 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_web_animations_api_enabled_E, align 1, !noalias !12
  %1611 = or i8 %1610, %1609
  %1612 = icmp eq i8 %1611, 0
  br i1 %1612, label %1613, label %1620

1613:                                             ; preds = %1607
  %1614 = bitcast %"class.blink::Keyframe"* %1608 to %"class.blink::StringKeyframe"*
  %1615 = add i32 %1598, -1
  %1616 = icmp ugt i32 %1615, 1
  %1617 = call zeroext i1 @_ZNK5blink14StringKeyframe14HasCssPropertyEv(%"class.blink::StringKeyframe"* %1614) #10, !noalias !12
  %1618 = xor i1 %1617, true
  %1619 = or i1 %1616, %1618
  br i1 %1619, label %1620, label %1621

1620:                                             ; preds = %1613, %1607
  br label %1621

1621:                                             ; preds = %1620, %1613
  %1622 = phi i64 [ %1597, %1620 ], [ 0, %1613 ]
  %1623 = getelementptr inbounds %"class.blink::Keyframe", %"class.blink::Keyframe"* %1608, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1624 = bitcast i8* %1623 to i64*
  %1625 = shl nuw i64 %1622, 32
  %1626 = or i64 %1625, 1
  store i64 %1626, i64* %1624, align 8, !noalias !12
  br label %1627

1627:                                             ; preds = %1621, %1593
  %1628 = getelementptr inbounds %"class.blink::BaseKeyframe", %"class.blink::BaseKeyframe"* %1567, i64 0, i32 3
  %1629 = call %"class.blink::TimingFunction"* @_ZN5blink21AnimationInputHelpers19ParseTimingFunctionERKN3WTF6StringEPNS_8DocumentERNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8) %1628, %"class.blink::Document"* %160, %"class.blink::ExceptionState"* dereferenceable(72) %4) #10, !noalias !12
  %1630 = icmp eq %"class.blink::TimingFunction"* %1629, null
  br i1 %1630, label %1691, label %1631

1631:                                             ; preds = %1627
  %1632 = load %"class.blink::Keyframe"*, %"class.blink::Keyframe"** %1559, align 8, !noalias !12
  %1633 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %1629, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1634 = atomicrmw add i32* %1633, i32 1 monotonic, !noalias !12
  %1635 = icmp sgt i32 %1634, 0
  br i1 %1635, label %1638, label %1636

1636:                                             ; preds = %1631
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1560) #10, !noalias !12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %20, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0)) #10, !noalias !12
  %1637 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %20) #10, !noalias !12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %20) #10, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1560) #10, !noalias !12
  br label %1638

1638:                                             ; preds = %1631, %1636
  %1639 = ptrtoint %"class.blink::TimingFunction"* %1629 to i64
  %1640 = getelementptr inbounds %"class.blink::Keyframe", %"class.blink::Keyframe"* %1632, i64 0, i32 3
  %1641 = bitcast %class.scoped_refptr.22* %1640 to i64*
  %1642 = getelementptr inbounds %class.scoped_refptr.22, %class.scoped_refptr.22* %1640, i64 0, i32 0
  %1643 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %1642, align 8
  store i64 %1639, i64* %1641, align 8
  %1644 = icmp eq %"class.blink::TimingFunction"* %1643, null
  br i1 %1644, label %1657, label %1645

1645:                                             ; preds = %1638
  %1646 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %1643, i64 0, i32 1, i32 0
  %1647 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %1646, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1648 = atomicrmw sub i32* %1647, i32 1 acq_rel
  %1649 = icmp eq i32 %1648, 1
  br i1 %1649, label %1650, label %1657

1650:                                             ; preds = %1645
  %1651 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %1646, i64 -2
  %1652 = bitcast %"class.base::RefCountedThreadSafe"* %1651 to %"class.blink::TimingFunction"*
  %1653 = bitcast %"class.base::RefCountedThreadSafe"* %1651 to void (%"class.blink::TimingFunction"*)***
  %1654 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %1653, align 8
  %1655 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %1654, i64 1
  %1656 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %1655, align 8
  call void %1656(%"class.blink::TimingFunction"* nonnull %1652) #10
  br label %1657

1657:                                             ; preds = %1638, %1645, %1650
  %1658 = load i32, i32* %1553, align 4, !noalias !12
  %1659 = load i32, i32* %1552, align 8, !noalias !12
  %1660 = icmp eq i32 %1658, %1659
  br i1 %1660, label %1675, label %1661, !prof !6

1661:                                             ; preds = %1657
  %1662 = load %"class.blink::Member.2477"*, %"class.blink::Member.2477"** %1551, align 8, !noalias !12
  %1663 = zext i32 %1658 to i64
  %1664 = getelementptr inbounds %"class.blink::Member.2477", %"class.blink::Member.2477"* %1662, i64 %1663
  %1665 = load i64, i64* %1561, align 8, !noalias !12
  %1666 = bitcast %"class.blink::Member.2477"* %1664 to i64*
  store atomic i64 %1665, i64* %1666 monotonic, align 8, !noalias !12
  %1667 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4, !noalias !12
  %1668 = icmp eq i32 %1667, 0
  br i1 %1668, label %1672, label %1669

1669:                                             ; preds = %1661
  %1670 = inttoptr i64 %1665 to i8*
  %1671 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1670) #10, !noalias !12
  br label %1672

1672:                                             ; preds = %1669, %1661
  %1673 = load i32, i32* %1553, align 4, !noalias !12
  %1674 = add i32 %1673, 1
  store i32 %1674, i32* %1553, align 4, !noalias !12
  br label %1676

1675:                                             ; preds = %1657
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.2474"* nonnull %1562, %"class.blink::StringKeyframe"** nonnull dereferenceable(8) %26) #10, !noalias !12
  br label %1676

1676:                                             ; preds = %1675, %1672
  %1677 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %1629, i64 0, i32 1, i32 0
  %1678 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %1677, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1679 = atomicrmw sub i32* %1678, i32 1 acq_rel, !noalias !12
  %1680 = icmp eq i32 %1679, 1
  br i1 %1680, label %1681, label %1688

1681:                                             ; preds = %1676
  %1682 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %1677, i64 -2
  %1683 = bitcast %"class.base::RefCountedThreadSafe"* %1682 to %"class.blink::TimingFunction"*
  %1684 = bitcast %"class.base::RefCountedThreadSafe"* %1682 to void (%"class.blink::TimingFunction"*)***
  %1685 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %1684, align 8, !noalias !12
  %1686 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %1685, i64 1
  %1687 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %1686, align 8, !noalias !12
  call void %1687(%"class.blink::TimingFunction"* nonnull %1683) #10, !noalias !12
  br label %1688

1688:                                             ; preds = %1681, %1676
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1557) #10, !noalias !12
  %1689 = add nuw i32 %1564, 1
  %1690 = icmp eq i32 %1689, %1505
  br i1 %1690, label %1692, label %1563

1691:                                             ; preds = %1627
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1557) #10, !noalias !12
  br label %1714

1692:                                             ; preds = %1688
  %1693 = bitcast %"class.blink::HeapVector.2471"* %25 to i64*
  %1694 = load i64, i64* %1693, align 8, !noalias !12
  %1695 = load i32, i32* %1552, align 8, !noalias !12
  %1696 = load i32, i32* %1553, align 4, !noalias !12
  br label %1697

1697:                                             ; preds = %1692, %1554
  %1698 = phi i64* [ %1555, %1554 ], [ %1693, %1692 ]
  %1699 = phi i32 [ 0, %1554 ], [ %1696, %1692 ]
  %1700 = phi i32 [ 0, %1554 ], [ %1695, %1692 ]
  %1701 = phi i64 [ 0, %1554 ], [ %1694, %1692 ]
  store atomic i64 0, i64* %1698 monotonic, align 8, !noalias !12
  store i32 0, i32* %1552, align 8, !noalias !12
  store i32 0, i32* %1553, align 4, !noalias !12
  %1702 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4, !noalias !12
  %1703 = icmp eq i32 %1702, 0
  br i1 %1703, label %1707, label %1704

1704:                                             ; preds = %1697
  %1705 = inttoptr i64 %1701 to i8*
  %1706 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1705) #10, !noalias !12
  br label %1707

1707:                                             ; preds = %1704, %1697
  %1708 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4, !noalias !12
  %1709 = icmp eq i32 %1708, 0
  br i1 %1709, label %1714, label %1710

1710:                                             ; preds = %1707
  %1711 = bitcast %"class.blink::HeapVector.2471"* %25 to i8**
  %1712 = load i8*, i8** %1711, align 8, !noalias !12
  %1713 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1712) #10, !noalias !12
  br label %1714

1714:                                             ; preds = %1710, %1707, %1691
  %1715 = phi i64 [ %1701, %1707 ], [ %1701, %1710 ], [ 0, %1691 ]
  %1716 = phi i32 [ %1700, %1707 ], [ %1700, %1710 ], [ 0, %1691 ]
  %1717 = phi i32 [ %1699, %1707 ], [ %1699, %1710 ], [ 0, %1691 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1550) #10, !noalias !12
  br label %1718

1718:                                             ; preds = %1152, %1501, %1714, %1548, %1523, %1466, %1186, %1181
  %1719 = phi i64 [ %1715, %1714 ], [ 0, %1548 ], [ 0, %1523 ], [ 0, %1466 ], [ 0, %1186 ], [ 0, %1181 ], [ 0, %1501 ], [ 0, %1152 ]
  %1720 = phi i32 [ %1716, %1714 ], [ 0, %1548 ], [ 0, %1523 ], [ 0, %1466 ], [ 0, %1186 ], [ 0, %1181 ], [ 0, %1501 ], [ 0, %1152 ]
  %1721 = phi i32 [ %1717, %1714 ], [ 0, %1548 ], [ 0, %1523 ], [ 0, %1466 ], [ 0, %1186 ], [ 0, %1181 ], [ 0, %1501 ], [ 0, %1152 ]
  %1722 = load %"class.WTF::Vector.981"*, %"class.WTF::Vector.981"** %1073, align 8, !noalias !12
  %1723 = icmp eq %"class.WTF::Vector.981"* %1722, null
  br i1 %1723, label %1741, label %1724, !prof !11

1724:                                             ; preds = %1718
  %1725 = bitcast %"class.WTF::Vector.981"* %1722 to i8*
  %1726 = load i32, i32* %1075, align 4, !noalias !12
  %1727 = icmp eq i32 %1726, 0
  br i1 %1727, label %1739, label %1728, !prof !6

1728:                                             ; preds = %1724
  %1729 = zext i32 %1726 to i64
  %1730 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %1722, i64 %1729
  br label %1731

1731:                                             ; preds = %1731, %1728
  %1732 = phi %"class.WTF::Vector.981"* [ %1734, %1731 ], [ %1722, %1728 ]
  %1733 = bitcast %"class.WTF::Vector.981"* %1732 to %"class.WTF::ConditionalDestructor.985"*
  call void @_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__14pairINS_6StringES4_EELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.985"* %1733) #10, !noalias !12
  %1734 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %1732, i64 1
  %1735 = icmp eq %"class.WTF::Vector.981"* %1734, %1730
  br i1 %1735, label %1736, label %1731

1736:                                             ; preds = %1731
  store i32 0, i32* %1075, align 4, !noalias !12
  %1737 = bitcast %"class.WTF::Vector.2873"* %22 to i8**
  %1738 = load i8*, i8** %1737, align 8, !noalias !12
  br label %1739

1739:                                             ; preds = %1736, %1724
  %1740 = phi i8* [ %1738, %1736 ], [ %1725, %1724 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1740) #10, !noalias !12
  store %"class.WTF::Vector.981"* null, %"class.WTF::Vector.981"** %1073, align 8, !noalias !12
  br label %1741

1741:                                             ; preds = %1718, %1739
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1072) #10, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1068) #10, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1066)
  %1742 = bitcast %"class.blink::HeapVector.2471"* %64 to i64*
  %1743 = bitcast %"class.blink::HeapVector.2471"* %64 to i8**
  %1744 = load i8*, i8** %1743, align 8
  store atomic i64 %1719, i64* %1742 monotonic, align 8
  store i32 %1720, i32* %163, align 8
  store i32 %1721, i32* %164, align 4
  %1745 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1746 = icmp eq i32 %1745, 0
  br i1 %1746, label %1750, label %1747

1747:                                             ; preds = %1741
  %1748 = inttoptr i64 %1719 to i8*
  %1749 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1748) #10
  br label %1750

1750:                                             ; preds = %1747, %1741
  %1751 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1752 = icmp eq i32 %1751, 0
  br i1 %1752, label %1755, label %1753

1753:                                             ; preds = %1750
  %1754 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1744) #10
  br label %1755

1755:                                             ; preds = %1753, %1750, %1063, %1060
  %1756 = getelementptr inbounds %"class.blink::HeapVector.2471", %"class.blink::HeapVector.2471"* %64, i64 0, i32 0
  %1757 = load i32, i32* %164, align 4
  %1758 = icmp eq i32 %1757, 0
  br i1 %1758, label %1759, label %2038

1759:                                             ; preds = %2038, %1755
  %1760 = phi i32 [ 0, %1755 ], [ %2045, %2038 ]
  %1761 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase29is_animation_worklet_enabled_E, align 1, !range !2
  %1762 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_web_animations_api_enabled_E, align 1
  %1763 = or i8 %1762, %1761
  %1764 = icmp eq i8 %1763, 0
  br i1 %1764, label %1765, label %2049

1765:                                             ; preds = %1759
  %1766 = bitcast %"class.WTF::Vector.1129"* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1766) #10
  %1767 = getelementptr inbounds %"class.WTF::Vector.1129", %"class.WTF::Vector.1129"* %58, i64 0, i32 0, i32 0, i32 0
  %1768 = getelementptr inbounds %"class.WTF::Vector.1129", %"class.WTF::Vector.1129"* %58, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1766, i8 -86, i64 16, i1 false) #10
  call void @_ZN5blink23KeyframeEffectModelBase18GetComputedOffsetsINS_6MemberINS_14StringKeyframeEEEEEN3WTF6VectorIdLj0ENS5_18PartitionAllocatorEEERKNS_10HeapVectorIT_Lj0EEE(%"class.WTF::Vector.1129"* nonnull sret %58, %"class.blink::HeapVector.2471"* nonnull dereferenceable(16) %64) #10
  %1769 = bitcast %"class.WTF::HashSet.2903"* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1769) #10
  %1770 = getelementptr inbounds %"class.WTF::HashSet.2903", %"class.WTF::HashSet.2903"* %59, i64 0, i32 0, i32 0
  %1771 = getelementptr inbounds %"class.WTF::HashSet.2903", %"class.WTF::HashSet.2903"* %59, i64 0, i32 0, i32 1
  %1772 = getelementptr inbounds %"class.WTF::HashSet.2903", %"class.WTF::HashSet.2903"* %59, i64 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1769, i8 -86, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1769, i8 0, i64 20, i1 false) #10
  %1773 = bitcast %"class.WTF::HashSet.2903"* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1773) #10
  %1774 = getelementptr inbounds %"class.WTF::HashSet.2903", %"class.WTF::HashSet.2903"* %60, i64 0, i32 0, i32 0
  %1775 = getelementptr inbounds %"class.WTF::HashSet.2903", %"class.WTF::HashSet.2903"* %60, i64 0, i32 0, i32 1
  %1776 = getelementptr inbounds %"class.WTF::HashSet.2903", %"class.WTF::HashSet.2903"* %60, i64 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1773, i8 -86, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1773, i8 0, i64 20, i1 false) #10
  %1777 = load i32, i32* %164, align 4
  %1778 = icmp eq i32 %1777, 0
  br i1 %1778, label %1951, label %1779

1779:                                             ; preds = %1765
  %1780 = bitcast %"class.WTF::HashSet.2903"* %61 to i8*
  %1781 = getelementptr inbounds %"class.WTF::HashSet.2903", %"class.WTF::HashSet.2903"* %61, i64 0, i32 0, i32 2
  %1782 = getelementptr inbounds %"class.WTF::HashSet.2903", %"class.WTF::HashSet.2903"* %61, i64 0, i32 0, i32 0
  %1783 = getelementptr inbounds %"class.WTF::HashSet.2903", %"class.WTF::HashSet.2903"* %61, i64 0, i32 0, i32 1
  %1784 = bitcast %"class.blink::PropertyHandle"* %57 to i8*
  %1785 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %57, i64 0, i32 0
  %1786 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %57, i64 0, i32 1
  %1787 = bitcast %union.anon* %1786 to i8*
  %1788 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %57, i64 0, i32 2, i32 0, i32 0, i32 0
  %1789 = getelementptr inbounds %"class.WTF::HashSet.2903", %"class.WTF::HashSet.2903"* %59, i64 0, i32 0
  %1790 = getelementptr inbounds %"class.WTF::HashSet.2903", %"class.WTF::HashSet.2903"* %60, i64 0, i32 0
  %1791 = bitcast %"class.blink::PropertyHandle"* %56 to i8*
  %1792 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %56, i64 0, i32 0
  %1793 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %56, i64 0, i32 1
  %1794 = bitcast %union.anon* %1793 to i8*
  %1795 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %56, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %1799

1796:                                             ; preds = %1945
  %1797 = load i32, i32* %164, align 4
  %1798 = icmp ult i32 %1947, %1797
  br i1 %1798, label %1799, label %1948

1799:                                             ; preds = %1796, %1779
  %1800 = phi i32 [ 0, %1779 ], [ %1947, %1796 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1780) #10
  %1801 = call dereferenceable(8) %"class.blink::Member.2477"* @_ZNK3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2474"* nonnull %1756, i32 %1800) #10
  %1802 = getelementptr inbounds %"class.blink::Member.2477", %"class.blink::Member.2477"* %1801, i64 0, i32 0, i32 0
  %1803 = load %"class.blink::StringKeyframe"*, %"class.blink::StringKeyframe"** %1802, align 8
  %1804 = bitcast %"class.blink::StringKeyframe"* %1803 to void (%"class.WTF::HashSet.2903"*, %"class.blink::StringKeyframe"*)***
  %1805 = load void (%"class.WTF::HashSet.2903"*, %"class.blink::StringKeyframe"*)**, void (%"class.WTF::HashSet.2903"*, %"class.blink::StringKeyframe"*)*** %1804, align 8
  %1806 = getelementptr inbounds void (%"class.WTF::HashSet.2903"*, %"class.blink::StringKeyframe"*)*, void (%"class.WTF::HashSet.2903"*, %"class.blink::StringKeyframe"*)** %1805, i64 2
  %1807 = load void (%"class.WTF::HashSet.2903"*, %"class.blink::StringKeyframe"*)*, void (%"class.WTF::HashSet.2903"*, %"class.blink::StringKeyframe"*)** %1806, align 8
  call void %1807(%"class.WTF::HashSet.2903"* nonnull sret %61, %"class.blink::StringKeyframe"* %1803) #10
  %1808 = load i32, i32* %1781, align 4
  %1809 = icmp eq i32 %1808, 0
  %1810 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %1782, align 8
  %1811 = load i32, i32* %1783, align 8
  %1812 = zext i32 %1811 to i64
  %1813 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1810, i64 %1812
  br i1 %1809, label %1846, label %1814

1814:                                             ; preds = %1799
  %1815 = icmp eq i32 %1811, 0
  br i1 %1815, label %1846, label %1816

1816:                                             ; preds = %1814, %1839
  %1817 = phi %"class.blink::PropertyHandle"* [ %1840, %1839 ], [ %1810, %1814 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1784) #10
  store i32 0, i32* %1785, align 8, !alias.scope !15
  call void @llvm.memset.p0i8.i64(i8* align 8 %1787, i8 0, i64 16, i1 false) #10, !alias.scope !15
  %1818 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %1817, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %57) #10
  %1819 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1788, align 8
  %1820 = icmp eq %"class.WTF::StringImpl"* %1819, null
  br i1 %1820, label %1834, label %1821

1821:                                             ; preds = %1816
  %1822 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1819, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1823 = load atomic i32, i32* %1822 monotonic, align 4
  %1824 = and i32 %1823, 2
  %1825 = icmp eq i32 %1824, 0
  %1826 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1819, i64 0, i32 0
  %1827 = load i32, i32* %1826, align 4
  br i1 %1825, label %1828, label %1830

1828:                                             ; preds = %1821
  %1829 = add i32 %1827, -1
  store i32 %1829, i32* %1826, align 4
  br label %1830

1830:                                             ; preds = %1828, %1821
  %1831 = phi i32 [ %1829, %1828 ], [ %1827, %1821 ]
  %1832 = icmp eq i32 %1831, 0
  br i1 %1832, label %1833, label %1834

1833:                                             ; preds = %1830
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1819) #10
  br label %1834

1834:                                             ; preds = %1833, %1830, %1816
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1784) #10
  %1835 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1817, i64 0, i32 0
  %1836 = load i32, i32* %1835, align 8
  %1837 = icmp eq i32 %1836, 1
  %1838 = or i1 %1818, %1837
  br i1 %1838, label %1839, label %1842

1839:                                             ; preds = %1834
  %1840 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1817, i64 1
  %1841 = icmp eq %"class.blink::PropertyHandle"* %1840, %1813
  br i1 %1841, label %1842, label %1816

1842:                                             ; preds = %1839, %1834
  %1843 = phi %"class.blink::PropertyHandle"* [ %1813, %1839 ], [ %1817, %1834 ]
  %1844 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %1782, align 8
  %1845 = load i32, i32* %1783, align 8
  br label %1846

1846:                                             ; preds = %1842, %1814, %1799
  %1847 = phi i32 [ %1811, %1799 ], [ 0, %1814 ], [ %1845, %1842 ]
  %1848 = phi %"class.blink::PropertyHandle"* [ %1810, %1799 ], [ %1810, %1814 ], [ %1844, %1842 ]
  %1849 = phi %"class.blink::PropertyHandle"* [ %1813, %1799 ], [ %1810, %1814 ], [ %1843, %1842 ]
  %1850 = zext i32 %1847 to i64
  %1851 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1848, i64 %1850
  %1852 = icmp eq %"class.blink::PropertyHandle"* %1849, %1851
  br i1 %1852, label %1909, label %1853

1853:                                             ; preds = %1846, %1903
  %1854 = phi %"class.blink::PropertyHandle"* [ %1904, %1903 ], [ %1849, %1846 ]
  %1855 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1854, i64 0, i32 0
  %1856 = load i32, i32* %1855, align 8
  %1857 = or i32 %1856, 1
  %1858 = icmp eq i32 %1857, 3
  br i1 %1858, label %1859, label %1874

1859:                                             ; preds = %1853
  %1860 = call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1129"* nonnull %58, i32 %1800) #10
  %1861 = load double, double* %1860, align 8
  %1862 = fcmp oeq double %1861, 0.000000e+00
  br i1 %1862, label %1863, label %1865

1863:                                             ; preds = %1859
  %1864 = call { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS2_SF_EENS_18HashTableAddResultISA_S2_EEOT0_OT1_(%"class.WTF::HashTable.2904"* nonnull %1789, %"class.blink::PropertyHandle"* dereferenceable(24) %1854, %"class.blink::PropertyHandle"* dereferenceable(24) %1854) #10
  br label %1874

1865:                                             ; preds = %1859
  %1866 = call %"class.blink::PropertyHandle"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS6_S8_S9_EES2_EEPKS2_RKT0_(%"class.WTF::HashTable.2904"* nonnull %1789, %"class.blink::PropertyHandle"* dereferenceable(24) %1854) #10
  %1867 = icmp eq %"class.blink::PropertyHandle"* %1866, null
  br i1 %1867, label %1906, label %1868

1868:                                             ; preds = %1865
  %1869 = call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1129"* nonnull %58, i32 %1800) #10
  %1870 = load double, double* %1869, align 8
  %1871 = fcmp oeq double %1870, 1.000000e+00
  br i1 %1871, label %1872, label %1874

1872:                                             ; preds = %1868
  %1873 = call { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS2_SF_EENS_18HashTableAddResultISA_S2_EEOT0_OT1_(%"class.WTF::HashTable.2904"* nonnull %1790, %"class.blink::PropertyHandle"* dereferenceable(24) %1854, %"class.blink::PropertyHandle"* dereferenceable(24) %1854) #10
  br label %1874

1874:                                             ; preds = %1872, %1868, %1863, %1853
  %1875 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1854, i64 1
  %1876 = icmp eq %"class.blink::PropertyHandle"* %1875, %1813
  br i1 %1876, label %1903, label %1877

1877:                                             ; preds = %1874, %1900
  %1878 = phi %"class.blink::PropertyHandle"* [ %1901, %1900 ], [ %1875, %1874 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1791) #10
  store i32 0, i32* %1792, align 8, !alias.scope !20
  call void @llvm.memset.p0i8.i64(i8* align 8 %1794, i8 0, i64 16, i1 false) #10, !alias.scope !20
  %1879 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %1878, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %56) #10
  %1880 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1795, align 8
  %1881 = icmp eq %"class.WTF::StringImpl"* %1880, null
  br i1 %1881, label %1895, label %1882

1882:                                             ; preds = %1877
  %1883 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1880, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1884 = load atomic i32, i32* %1883 monotonic, align 4
  %1885 = and i32 %1884, 2
  %1886 = icmp eq i32 %1885, 0
  %1887 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1880, i64 0, i32 0
  %1888 = load i32, i32* %1887, align 4
  br i1 %1886, label %1889, label %1891

1889:                                             ; preds = %1882
  %1890 = add i32 %1888, -1
  store i32 %1890, i32* %1887, align 4
  br label %1891

1891:                                             ; preds = %1889, %1882
  %1892 = phi i32 [ %1890, %1889 ], [ %1888, %1882 ]
  %1893 = icmp eq i32 %1892, 0
  br i1 %1893, label %1894, label %1895

1894:                                             ; preds = %1891
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1880) #10
  br label %1895

1895:                                             ; preds = %1894, %1891, %1877
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1791) #10
  %1896 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1878, i64 0, i32 0
  %1897 = load i32, i32* %1896, align 8
  %1898 = icmp eq i32 %1897, 1
  %1899 = or i1 %1879, %1898
  br i1 %1899, label %1900, label %1903

1900:                                             ; preds = %1895
  %1901 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1878, i64 1
  %1902 = icmp eq %"class.blink::PropertyHandle"* %1901, %1813
  br i1 %1902, label %1903, label %1877

1903:                                             ; preds = %1900, %1895, %1874
  %1904 = phi %"class.blink::PropertyHandle"* [ %1813, %1874 ], [ %1813, %1900 ], [ %1878, %1895 ]
  %1905 = icmp eq %"class.blink::PropertyHandle"* %1904, %1851
  br i1 %1905, label %1906, label %1853

1906:                                             ; preds = %1903, %1865
  %1907 = phi i32 [ 5, %1903 ], [ 1, %1865 ]
  %1908 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %1782, align 8
  br label %1909

1909:                                             ; preds = %1906, %1846
  %1910 = phi %"class.blink::PropertyHandle"* [ %1848, %1846 ], [ %1908, %1906 ]
  %1911 = phi i32 [ 5, %1846 ], [ %1907, %1906 ]
  %1912 = icmp eq %"class.blink::PropertyHandle"* %1910, null
  br i1 %1912, label %1945, label %1913, !prof !11

1913:                                             ; preds = %1909
  %1914 = load i32, i32* %1783, align 8
  %1915 = icmp eq i32 %1914, 0
  br i1 %1915, label %1943, label %1916

1916:                                             ; preds = %1913
  %1917 = zext i32 %1914 to i64
  br label %1918

1918:                                             ; preds = %1940, %1916
  %1919 = phi i64 [ 0, %1916 ], [ %1941, %1940 ]
  %1920 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1910, i64 %1919, i32 0
  %1921 = load i32, i32* %1920, align 8
  %1922 = icmp eq i32 %1921, 1
  br i1 %1922, label %1940, label %1923

1923:                                             ; preds = %1918
  %1924 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1910, i64 %1919, i32 2, i32 0, i32 0, i32 0
  %1925 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1924, align 8
  %1926 = icmp eq %"class.WTF::StringImpl"* %1925, null
  br i1 %1926, label %1940, label %1927

1927:                                             ; preds = %1923
  %1928 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1925, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1929 = load atomic i32, i32* %1928 monotonic, align 4
  %1930 = and i32 %1929, 2
  %1931 = icmp eq i32 %1930, 0
  %1932 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1925, i64 0, i32 0
  %1933 = load i32, i32* %1932, align 4
  br i1 %1931, label %1934, label %1936

1934:                                             ; preds = %1927
  %1935 = add i32 %1933, -1
  store i32 %1935, i32* %1932, align 4
  br label %1936

1936:                                             ; preds = %1934, %1927
  %1937 = phi i32 [ %1935, %1934 ], [ %1933, %1927 ]
  %1938 = icmp eq i32 %1937, 0
  br i1 %1938, label %1939, label %1940

1939:                                             ; preds = %1936
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1925) #10
  br label %1940

1940:                                             ; preds = %1939, %1936, %1923, %1918
  %1941 = add nuw nsw i64 %1919, 1
  %1942 = icmp eq i64 %1941, %1917
  br i1 %1942, label %1943, label %1918

1943:                                             ; preds = %1940, %1913
  %1944 = bitcast %"class.blink::PropertyHandle"* %1910 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1944) #10
  store %"class.blink::PropertyHandle"* null, %"class.blink::PropertyHandle"** %1782, align 8
  br label %1945

1945:                                             ; preds = %1943, %1909
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1780) #10
  %1946 = icmp eq i32 %1911, 5
  %1947 = add nuw i32 %1800, 1
  br i1 %1946, label %1796, label %1955

1948:                                             ; preds = %1796
  %1949 = load i32, i32* %1772, align 4
  %1950 = load i32, i32* %1776, align 4
  br label %1951

1951:                                             ; preds = %1948, %1765
  %1952 = phi i32 [ %1950, %1948 ], [ 0, %1765 ]
  %1953 = phi i32 [ %1949, %1948 ], [ 0, %1765 ]
  %1954 = icmp eq i32 %1953, %1952
  br label %1955

1955:                                             ; preds = %1945, %1951
  %1956 = phi i1 [ %1954, %1951 ], [ false, %1945 ]
  %1957 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %1774, align 8
  %1958 = icmp eq %"class.blink::PropertyHandle"* %1957, null
  br i1 %1958, label %1991, label %1959, !prof !11

1959:                                             ; preds = %1955
  %1960 = load i32, i32* %1775, align 8
  %1961 = icmp eq i32 %1960, 0
  br i1 %1961, label %1989, label %1962

1962:                                             ; preds = %1959
  %1963 = zext i32 %1960 to i64
  br label %1964

1964:                                             ; preds = %1986, %1962
  %1965 = phi i64 [ 0, %1962 ], [ %1987, %1986 ]
  %1966 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1957, i64 %1965, i32 0
  %1967 = load i32, i32* %1966, align 8
  %1968 = icmp eq i32 %1967, 1
  br i1 %1968, label %1986, label %1969

1969:                                             ; preds = %1964
  %1970 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1957, i64 %1965, i32 2, i32 0, i32 0, i32 0
  %1971 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1970, align 8
  %1972 = icmp eq %"class.WTF::StringImpl"* %1971, null
  br i1 %1972, label %1986, label %1973

1973:                                             ; preds = %1969
  %1974 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1971, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1975 = load atomic i32, i32* %1974 monotonic, align 4
  %1976 = and i32 %1975, 2
  %1977 = icmp eq i32 %1976, 0
  %1978 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1971, i64 0, i32 0
  %1979 = load i32, i32* %1978, align 4
  br i1 %1977, label %1980, label %1982

1980:                                             ; preds = %1973
  %1981 = add i32 %1979, -1
  store i32 %1981, i32* %1978, align 4
  br label %1982

1982:                                             ; preds = %1980, %1973
  %1983 = phi i32 [ %1981, %1980 ], [ %1979, %1973 ]
  %1984 = icmp eq i32 %1983, 0
  br i1 %1984, label %1985, label %1986

1985:                                             ; preds = %1982
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1971) #10
  br label %1986

1986:                                             ; preds = %1985, %1982, %1969, %1964
  %1987 = add nuw nsw i64 %1965, 1
  %1988 = icmp eq i64 %1987, %1963
  br i1 %1988, label %1989, label %1964

1989:                                             ; preds = %1986, %1959
  %1990 = bitcast %"class.blink::PropertyHandle"* %1957 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1990) #10
  store %"class.blink::PropertyHandle"* null, %"class.blink::PropertyHandle"** %1774, align 8
  br label %1991

1991:                                             ; preds = %1989, %1955
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1773) #10
  %1992 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %1770, align 8
  %1993 = icmp eq %"class.blink::PropertyHandle"* %1992, null
  br i1 %1993, label %2026, label %1994, !prof !11

1994:                                             ; preds = %1991
  %1995 = load i32, i32* %1771, align 8
  %1996 = icmp eq i32 %1995, 0
  br i1 %1996, label %2024, label %1997

1997:                                             ; preds = %1994
  %1998 = zext i32 %1995 to i64
  br label %1999

1999:                                             ; preds = %2021, %1997
  %2000 = phi i64 [ 0, %1997 ], [ %2022, %2021 ]
  %2001 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1992, i64 %2000, i32 0
  %2002 = load i32, i32* %2001, align 8
  %2003 = icmp eq i32 %2002, 1
  br i1 %2003, label %2021, label %2004

2004:                                             ; preds = %1999
  %2005 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1992, i64 %2000, i32 2, i32 0, i32 0, i32 0
  %2006 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2005, align 8
  %2007 = icmp eq %"class.WTF::StringImpl"* %2006, null
  br i1 %2007, label %2021, label %2008

2008:                                             ; preds = %2004
  %2009 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2006, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2010 = load atomic i32, i32* %2009 monotonic, align 4
  %2011 = and i32 %2010, 2
  %2012 = icmp eq i32 %2011, 0
  %2013 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2006, i64 0, i32 0
  %2014 = load i32, i32* %2013, align 4
  br i1 %2012, label %2015, label %2017

2015:                                             ; preds = %2008
  %2016 = add i32 %2014, -1
  store i32 %2016, i32* %2013, align 4
  br label %2017

2017:                                             ; preds = %2015, %2008
  %2018 = phi i32 [ %2016, %2015 ], [ %2014, %2008 ]
  %2019 = icmp eq i32 %2018, 0
  br i1 %2019, label %2020, label %2021

2020:                                             ; preds = %2017
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2006) #10
  br label %2021

2021:                                             ; preds = %2020, %2017, %2004, %1999
  %2022 = add nuw nsw i64 %2000, 1
  %2023 = icmp eq i64 %2022, %1998
  br i1 %2023, label %2024, label %1999

2024:                                             ; preds = %2021, %1994
  %2025 = bitcast %"class.blink::PropertyHandle"* %1992 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %2025) #10
  store %"class.blink::PropertyHandle"* null, %"class.blink::PropertyHandle"** %1770, align 8
  br label %2026

2026:                                             ; preds = %2024, %1991
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1769) #10
  %2027 = load double*, double** %1767, align 8
  %2028 = icmp eq double* %2027, null
  %2029 = bitcast double* %2027 to i8*
  br i1 %2028, label %2035, label %2030, !prof !11

2030:                                             ; preds = %2026
  %2031 = load i32, i32* %1768, align 4
  %2032 = icmp eq i32 %2031, 0
  br i1 %2032, label %2034, label %2033, !prof !6

2033:                                             ; preds = %2030
  store i32 0, i32* %1768, align 4
  br label %2034

2034:                                             ; preds = %2033, %2030
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %2029) #10
  store double* null, double** %1767, align 8
  br label %2035

2035:                                             ; preds = %2026, %2034
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1766) #10
  br i1 %1956, label %2036, label %2047

2036:                                             ; preds = %2035
  %2037 = load i32, i32* %164, align 4
  br label %2049

2038:                                             ; preds = %1755, %2038
  %2039 = phi i32 [ %2044, %2038 ], [ 0, %1755 ]
  %2040 = call dereferenceable(8) %"class.blink::Member.2477"* @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2474"* nonnull %1756, i32 %2039) #10
  %2041 = getelementptr inbounds %"class.blink::Member.2477", %"class.blink::Member.2477"* %2040, i64 0, i32 0, i32 0
  %2042 = load %"class.blink::StringKeyframe"*, %"class.blink::StringKeyframe"** %2041, align 8
  %2043 = call zeroext i1 @_ZN5blink14StringKeyframe35SetLogicalPropertyResolutionContextENS_13TextDirectionENS_11WritingModeE(%"class.blink::StringKeyframe"* %2042, i8 zeroext %159, i8 zeroext %161) #10
  %2044 = add nuw i32 %2039, 1
  %2045 = load i32, i32* %164, align 4
  %2046 = icmp ult i32 %2044, %2045
  br i1 %2046, label %2038, label %1759

2047:                                             ; preds = %2035
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 9, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0)) #10
  %2048 = bitcast %"class.blink::HeapVector.2471"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2048, i8 0, i64 16, i1 false)
  br label %2070

2049:                                             ; preds = %2036, %1759
  %2050 = phi i32 [ %2037, %2036 ], [ %1760, %1759 ]
  %2051 = getelementptr inbounds %"class.blink::HeapVector.2471", %"class.blink::HeapVector.2471"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %2052 = getelementptr inbounds %"class.blink::HeapVector.2471", %"class.blink::HeapVector.2471"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %2053 = bitcast %"class.blink::HeapVector.2471"* %64 to i64*
  %2054 = bitcast %"class.blink::HeapVector.2471"* %0 to i64*
  store i64 0, i64* %2054, align 8
  %2055 = load i64, i64* %2053, align 8
  %2056 = bitcast %"class.blink::HeapVector.2471"* %0 to i64*
  store atomic i64 0, i64* %2053 monotonic, align 8
  store atomic i64 %2055, i64* %2056 monotonic, align 8
  %2057 = load i32, i32* %163, align 8
  store i32 %2057, i32* %2051, align 8
  store i32 0, i32* %163, align 8
  store i32 %2050, i32* %2052, align 4
  store i32 0, i32* %164, align 4
  %2058 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %2059 = icmp eq i32 %2058, 0
  br i1 %2059, label %2063, label %2060

2060:                                             ; preds = %2049
  %2061 = inttoptr i64 %2055 to i8*
  %2062 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %2061) #10
  br label %2063

2063:                                             ; preds = %2060, %2049
  %2064 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %2065 = icmp eq i32 %2064, 0
  br i1 %2065, label %2070, label %2066

2066:                                             ; preds = %2063
  %2067 = bitcast %"class.blink::HeapVector.2471"* %64 to i8**
  %2068 = load i8*, i8** %2067, align 8
  %2069 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %2068) #10
  br label %2070

2070:                                             ; preds = %2066, %2063, %2047
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %162) #10
  br label %2071

2071:                                             ; preds = %2070, %99
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %95) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #10
  br label %2072

2072:                                             ; preds = %2071, %86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink11EffectInput25ResolveCompositeOperationENS_11EffectModel18CompositeOperationERKNS_10HeapVectorINS_6MemberINS_14StringKeyframeEEELj0EEE(i32, %"class.blink::HeapVector.2471"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HeapVector.2471", %"class.blink::HeapVector.2471"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Member.2477"*, %"class.blink::Member.2477"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HeapVector.2471", %"class.blink::HeapVector.2471"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.blink::Member.2477", %"class.blink::Member.2477"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  %10 = icmp eq i32 %0, 0
  %11 = or i1 %10, %9
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = add i32 %0, -1
  %14 = icmp ugt i32 %13, 1
  br label %15

15:                                               ; preds = %12, %27
  %16 = phi %"class.blink::Member.2477"* [ %28, %27 ], [ %4, %12 ]
  %17 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase29is_animation_worklet_enabled_E, align 1, !range !2
  %18 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_web_animations_api_enabled_E, align 1
  %19 = or i8 %18, %17
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %27

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.blink::Member.2477", %"class.blink::Member.2477"* %16, i64 0, i32 0, i32 0
  %23 = load %"class.blink::StringKeyframe"*, %"class.blink::StringKeyframe"** %22, align 8
  %24 = tail call zeroext i1 @_ZNK5blink14StringKeyframe14HasCssPropertyEv(%"class.blink::StringKeyframe"* %23) #10
  %25 = xor i1 %24, true
  %26 = or i1 %14, %25
  br i1 %26, label %27, label %30

27:                                               ; preds = %15, %21
  %28 = getelementptr inbounds %"class.blink::Member.2477", %"class.blink::Member.2477"* %16, i64 1
  %29 = icmp eq %"class.blink::Member.2477"* %28, %8
  br i1 %29, label %30, label %15

30:                                               ; preds = %21, %27, %2
  %31 = phi i32 [ %0, %2 ], [ 0, %21 ], [ %0, %27 ]
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LinearTimingFunction"* @_ZN5blink20LinearTimingFunction6SharedEv() local_unnamed_addr #0 comdat align 2 {
  %1 = alloca %"class.logging::CheckError", align 8
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %31, !prof !25

4:                                                ; preds = %0
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %31, label %7

7:                                                ; preds = %4
  %8 = tail call noalias i8* @malloc(i64 16) #10
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 1, i32* %10, align 4
  %11 = bitcast i8* %8 to i32 (...)***
  %12 = getelementptr inbounds i8, i8* %8, i64 12
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink20LinearTimingFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %14 = icmp eq i8* %8, null
  br i1 %14, label %30, label %15

15:                                               ; preds = %7
  %16 = atomicrmw add i32* %10, i32 1 monotonic
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = bitcast %"class.logging::CheckError"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0)) #10
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %1) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %1) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  br label %21

21:                                               ; preds = %18, %15
  %22 = atomicrmw sub i32* %10, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %21
  %25 = bitcast i8* %8 to %"class.blink::TimingFunction"*
  %26 = bitcast i8* %8 to void (%"class.blink::TimingFunction"*)***
  %27 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %27, i64 1
  %29 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %28, align 8
  call void %29(%"class.blink::TimingFunction"* nonnull %25) #10
  br label %30

30:                                               ; preds = %7, %21, %24
  store i8* %8, i8** bitcast (%"class.blink::LinearTimingFunction"** @_ZZN5blink20LinearTimingFunction6SharedEvE6linear to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear) #10
  br label %31

31:                                               ; preds = %4, %30, %0
  %32 = load %"class.blink::LinearTimingFunction"*, %"class.blink::LinearTimingFunction"** @_ZZN5blink20LinearTimingFunction6SharedEvE6linear, align 8
  ret %"class.blink::LinearTimingFunction"* %32
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* sret, %"class.v8::Isolate"*, %"class.v8::Object"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink14LocalDOMWindow4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #2

declare %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14StringKeyframe35SetLogicalPropertyResolutionContextENS_13TextDirectionENS_11WritingModeE(%"class.blink::StringKeyframe"*, i8 zeroext, i8 zeroext) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare %"class.blink::BasePropertyIndexedKeyframe"* @_ZN5blink17NativeValueTraitsINS_27BasePropertyIndexedKeyframeEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare double @_ZNK5blink28DoubleOrDoubleOrNullSequence11GetAsDoubleEv(%"class.blink::DoubleOrDoubleOrNullSequence"*) local_unnamed_addr #2

declare dereferenceable(16) %"class.WTF::Vector.2657"* @_ZNK5blink28DoubleOrDoubleOrNullSequence25GetAsDoubleOrNullSequenceEv(%"class.blink::DoubleOrDoubleOrNullSequence"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.2657"* @_ZN3WTF6VectorIN4absl8optionalIdEELj0ENS_18PartitionAllocatorEEaSERKS5_(%"class.WTF::Vector.2657"*, %"class.WTF::Vector.2657"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.2657"* %1, %0
  br i1 %3, label %91, label %4, !prof !6

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2657", %"class.WTF::Vector.2657"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.2657", %"class.WTF::Vector.2657"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  store i32 %8, i32* %5, align 4
  br label %61

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::Vector.2657", %"class.WTF::Vector.2657"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ugt i32 %8, %13
  br i1 %14, label %15, label %61

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %27, label %17

17:                                               ; preds = %15
  %18 = icmp eq i32 %6, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  store i32 0, i32* %5, align 4
  br label %20

20:                                               ; preds = %19, %17
  %21 = getelementptr inbounds %"class.WTF::Vector.2657", %"class.WTF::Vector.2657"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.absl::optional.2481"*, %"class.absl::optional.2481"** %21, align 8
  %23 = bitcast %"class.WTF::Vector.2657"* %0 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  store i32 0, i32* %12, align 8
  %24 = getelementptr inbounds %"class.absl::optional.2481", %"class.absl::optional.2481"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %24) #10
  %25 = load i32, i32* %7, align 4
  %26 = load i32, i32* %12, align 8
  br label %27

27:                                               ; preds = %15, %20
  %28 = phi i32 [ 0, %15 ], [ %26, %20 ]
  %29 = phi i32 [ %8, %15 ], [ %25, %20 ]
  %30 = icmp ult i32 %28, %29
  br i1 %30, label %31, label %61, !prof !11

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::Vector.2657", %"class.WTF::Vector.2657"* %0, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.absl::optional.2481"*, %"class.absl::optional.2481"** %32, align 8
  %34 = icmp eq %"class.absl::optional.2481"* %33, null
  %35 = zext i32 %29 to i64
  %36 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4absl8optionalIdEEEEmm(i64 %35) #10
  %37 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %36, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4absl8optionalIdEEEEPKcv, i64 0, i64 0)) #10
  br i1 %34, label %38, label %43

38:                                               ; preds = %31
  %39 = ptrtoint i8* %37 to i64
  %40 = bitcast %"class.WTF::Vector.2657"* %0 to i64*
  store atomic i64 %39, i64* %40 monotonic, align 8
  %41 = lshr i64 %36, 4
  %42 = trunc i64 %41 to i32
  store i32 %42, i32* %12, align 8
  br label %61

43:                                               ; preds = %31
  %44 = lshr i64 %36, 4
  %45 = ptrtoint i8* %37 to i64
  %46 = load %"class.absl::optional.2481"*, %"class.absl::optional.2481"** %32, align 8
  %47 = icmp ne i8* %37, null
  %48 = icmp ne %"class.absl::optional.2481"* %46, null
  %49 = and i1 %47, %48
  br i1 %49, label %50, label %56, !prof !11

50:                                               ; preds = %43
  %51 = load i32, i32* %5, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"class.absl::optional.2481", %"class.absl::optional.2481"* %46, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = shl nuw nsw i64 %52, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 8 %53, i64 %54, i1 false) #10
  %55 = load %"class.absl::optional.2481"*, %"class.absl::optional.2481"** %32, align 8
  br label %56

56:                                               ; preds = %50, %43
  %57 = phi %"class.absl::optional.2481"* [ %46, %43 ], [ %55, %50 ]
  %58 = getelementptr inbounds %"class.absl::optional.2481", %"class.absl::optional.2481"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %58) #10
  %59 = bitcast %"class.WTF::Vector.2657"* %0 to i64*
  store atomic i64 %45, i64* %59 monotonic, align 8
  %60 = trunc i64 %44 to i32
  store i32 %60, i32* %12, align 8
  br label %61

61:                                               ; preds = %56, %38, %27, %11, %10
  %62 = getelementptr inbounds %"class.WTF::Vector.2657", %"class.WTF::Vector.2657"* %1, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.absl::optional.2481"*, %"class.absl::optional.2481"** %62, align 8
  %64 = load i32, i32* %5, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"class.WTF::Vector.2657", %"class.WTF::Vector.2657"* %0, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.absl::optional.2481"*, %"class.absl::optional.2481"** %66, align 8
  %68 = getelementptr inbounds %"class.absl::optional.2481", %"class.absl::optional.2481"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.absl::optional.2481", %"class.absl::optional.2481"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = shl nuw nsw i64 %65, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 %70, i1 false) #10
  %71 = load %"class.absl::optional.2481"*, %"class.absl::optional.2481"** %62, align 8
  %72 = load i32, i32* %5, align 4
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds %"class.absl::optional.2481", %"class.absl::optional.2481"* %71, i64 %73
  %75 = load %"class.absl::optional.2481"*, %"class.absl::optional.2481"** %66, align 8
  %76 = getelementptr inbounds %"class.absl::optional.2481", %"class.absl::optional.2481"* %75, i64 %73
  %77 = icmp ne %"class.absl::optional.2481"* %76, null
  %78 = icmp ne %"class.absl::optional.2481"* %74, null
  %79 = and i1 %78, %77
  br i1 %79, label %80, label %89, !prof !11

80:                                               ; preds = %61
  %81 = load i32, i32* %7, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.absl::optional.2481", %"class.absl::optional.2481"* %71, i64 %82
  %84 = getelementptr inbounds %"class.absl::optional.2481", %"class.absl::optional.2481"* %76, i64 0, i32 0, i32 0, i32 0, i32 0
  %85 = getelementptr inbounds %"class.absl::optional.2481", %"class.absl::optional.2481"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %86 = ptrtoint %"class.absl::optional.2481"* %83 to i64
  %87 = ptrtoint %"class.absl::optional.2481"* %74 to i64
  %88 = sub i64 %86, %87
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 %88, i1 false) #10
  br label %89

89:                                               ; preds = %61, %80
  %90 = load i32, i32* %7, align 4
  store i32 %90, i32* %5, align 4
  br label %91

91:                                               ; preds = %2, %89
  ret %"class.WTF::Vector.2657"* %0
}

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink22StringOrStringSequence11GetAsStringEv(%"class.blink::StringOrStringSequence"*) local_unnamed_addr #2

declare dereferenceable(16) %"class.WTF::Vector.506"* @_ZNK5blink22StringOrStringSequence19GetAsStringSequenceEv(%"class.blink::StringOrStringSequence"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.506"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector.506"*, %"class.WTF::Vector.506"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.506"* %1, %0
  br i1 %3, label %219, label %4, !prof !6

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.506", %"class.WTF::Vector.506"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.506", %"class.WTF::Vector.506"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %39

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector.506", %"class.WTF::Vector.506"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %15
  br label %17

17:                                               ; preds = %35, %10
  %18 = phi %"class.WTF::String"* [ %36, %35 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #10
  br label %35

35:                                               ; preds = %34, %31, %17
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 1
  %37 = icmp eq %"class.WTF::String"* %36, %14
  br i1 %37, label %38, label %17

38:                                               ; preds = %35
  store i32 %8, i32* %5, align 4
  br label %116

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.WTF::Vector.506", %"class.WTF::Vector.506"* %0, i64 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp ugt i32 %8, %41
  br i1 %42, label %43, label %114

43:                                               ; preds = %39
  %44 = icmp eq i32 %41, 0
  br i1 %44, label %80, label %45

45:                                               ; preds = %43
  %46 = icmp eq i32 %6, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.WTF::Vector.506", %"class.WTF::Vector.506"* %0, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = zext i32 %6 to i64
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %50
  br label %52

52:                                               ; preds = %70, %47
  %53 = phi %"class.WTF::String"* [ %71, %70 ], [ %49, %47 ]
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #10
  br label %70

70:                                               ; preds = %69, %66, %52
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 1
  %72 = icmp eq %"class.WTF::String"* %71, %51
  br i1 %72, label %73, label %52

73:                                               ; preds = %70
  store i32 0, i32* %5, align 4
  br label %74

74:                                               ; preds = %73, %45
  %75 = bitcast %"class.WTF::Vector.506"* %0 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = bitcast %"class.WTF::Vector.506"* %0 to i64*
  store atomic i64 0, i64* %77 monotonic, align 8
  store i32 0, i32* %40, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #10
  %78 = load i32, i32* %7, align 4
  %79 = load i32, i32* %40, align 8
  br label %80

80:                                               ; preds = %43, %74
  %81 = phi i32 [ 0, %43 ], [ %79, %74 ]
  %82 = phi i32 [ %8, %43 ], [ %78, %74 ]
  %83 = icmp ult i32 %81, %82
  br i1 %83, label %84, label %114, !prof !11

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::Vector.506", %"class.WTF::Vector.506"* %0, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %87 = icmp eq %"class.WTF::String"* %86, null
  %88 = zext i32 %82 to i64
  %89 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %88) #10
  %90 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %89, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  br i1 %87, label %91, label %96

91:                                               ; preds = %84
  %92 = ptrtoint i8* %90 to i64
  %93 = bitcast %"class.WTF::Vector.506"* %0 to i64*
  store atomic i64 %92, i64* %93 monotonic, align 8
  %94 = lshr i64 %89, 3
  %95 = trunc i64 %94 to i32
  store i32 %95, i32* %40, align 8
  br label %114

96:                                               ; preds = %84
  %97 = lshr i64 %89, 3
  %98 = ptrtoint i8* %90 to i64
  %99 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %100 = icmp ne i8* %90, null
  %101 = icmp ne %"class.WTF::String"* %99, null
  %102 = and i1 %100, %101
  %103 = bitcast %"class.WTF::String"* %99 to i8*
  br i1 %102, label %104, label %110, !prof !11

104:                                              ; preds = %96
  %105 = load i32, i32* %5, align 4
  %106 = zext i32 %105 to i64
  %107 = shl nuw nsw i64 %106, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* nonnull align 8 %103, i64 %107, i1 false) #10
  %108 = bitcast %"class.WTF::Vector.506"* %0 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %110

110:                                              ; preds = %104, %96
  %111 = phi i8* [ %109, %104 ], [ %103, %96 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %111) #10
  %112 = bitcast %"class.WTF::Vector.506"* %0 to i64*
  store atomic i64 %98, i64* %112 monotonic, align 8
  %113 = trunc i64 %97 to i32
  store i32 %113, i32* %40, align 8
  br label %114

114:                                              ; preds = %39, %80, %91, %110
  %115 = load i32, i32* %5, align 4
  br label %116

116:                                              ; preds = %114, %38
  %117 = phi i32 [ %115, %114 ], [ %8, %38 ]
  %118 = getelementptr inbounds %"class.WTF::Vector.506", %"class.WTF::Vector.506"* %1, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::String"*, %"class.WTF::String"** %118, align 8
  %120 = zext i32 %117 to i64
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 %120
  %122 = getelementptr inbounds %"class.WTF::Vector.506", %"class.WTF::Vector.506"* %0, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  %124 = icmp eq i32 %117, 0
  br i1 %124, label %175, label %125

125:                                              ; preds = %116, %167
  %126 = phi %"class.WTF::String"* [ %169, %167 ], [ %123, %116 ]
  %127 = phi %"class.WTF::String"* [ %168, %167 ], [ %119, %116 ]
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %148, label %131

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %148

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = zext i32 %138 to i33
  %140 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %139, i33 1) #10
  %141 = extractvalue { i33, i1 } %140, 1
  %142 = extractvalue { i33, i1 } %140, 0
  %143 = icmp slt i33 %142, 0
  %144 = or i1 %141, %143
  br i1 %144, label %145, label %146, !prof !6

145:                                              ; preds = %136
  tail call void @llvm.trap() #10
  unreachable

146:                                              ; preds = %136
  %147 = trunc i33 %142 to i32
  store i32 %147, i32* %137, align 4
  br label %148

148:                                              ; preds = %146, %131, %125
  %149 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %150 = bitcast %"class.WTF::String"* %126 to i64*
  %151 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 0, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  store i64 %149, i64* %150, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #10
  br label %167

167:                                              ; preds = %166, %163, %148
  %168 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 1
  %169 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 1
  %170 = icmp eq %"class.WTF::String"* %168, %121
  br i1 %170, label %171, label %125

171:                                              ; preds = %167
  %172 = load %"class.WTF::String"*, %"class.WTF::String"** %118, align 8
  %173 = load i32, i32* %5, align 4
  %174 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  br label %175

175:                                              ; preds = %171, %116
  %176 = phi %"class.WTF::String"* [ %174, %171 ], [ %123, %116 ]
  %177 = phi i32 [ %173, %171 ], [ 0, %116 ]
  %178 = phi %"class.WTF::String"* [ %172, %171 ], [ %119, %116 ]
  %179 = zext i32 %177 to i64
  %180 = load i32, i32* %7, align 4
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %181
  %183 = icmp eq i32 %177, %180
  br i1 %183, label %217, label %184

184:                                              ; preds = %175
  %185 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %176, i64 %179
  %186 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %179
  br label %187

187:                                              ; preds = %184, %211
  %188 = phi %"class.WTF::String"* [ %212, %211 ], [ %185, %184 ]
  %189 = phi %"class.WTF::String"* [ %213, %211 ], [ %186, %184 ]
  %190 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 0, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %191, %"class.WTF::StringImpl"** %192, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %193, label %211, label %194

194:                                              ; preds = %187
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %211

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i33
  %203 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %202, i33 1) #10
  %204 = extractvalue { i33, i1 } %203, 1
  %205 = extractvalue { i33, i1 } %203, 0
  %206 = icmp slt i33 %205, 0
  %207 = or i1 %204, %206
  br i1 %207, label %208, label %209, !prof !6

208:                                              ; preds = %199
  tail call void @llvm.trap() #10
  unreachable

209:                                              ; preds = %199
  %210 = trunc i33 %205 to i32
  store i32 %210, i32* %200, align 4
  br label %211

211:                                              ; preds = %209, %194, %187
  %212 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 1
  %213 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 1
  %214 = icmp eq %"class.WTF::String"* %213, %182
  br i1 %214, label %215, label %187

215:                                              ; preds = %211
  %216 = load i32, i32* %7, align 4
  br label %217

217:                                              ; preds = %215, %175
  %218 = phi i32 [ %216, %215 ], [ %177, %175 ]
  store i32 %218, i32* %5, align 4
  br label %219

219:                                              ; preds = %2, %217
  ret %"class.WTF::Vector.506"* %0
}

declare void @_ZN5blink19GetOwnPropertyNamesEPN2v87IsolateERKNS0_5LocalINS0_6ObjectEEERNS_14ExceptionStateE(%"class.WTF::Vector.506"* sret, %"class.v8::Isolate"*, %"class.v8::Local.2521"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) #7 comdat {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %4, null
  %8 = icmp ne %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %9, label %15

9:                                                ; preds = %2
  br i1 %8, label %10, label %168

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp ne i32 %12, 0
  %14 = sext i1 %13 to i32
  br label %168

15:                                               ; preds = %2
  br i1 %8, label %21, label %16

16:                                               ; preds = %15
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp ne i32 %18, 0
  %20 = zext i1 %19 to i32
  br label %168

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 1
  %29 = icmp ne i32 %28, 0
  br i1 %25, label %94, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp ult i32 %32, %34
  %36 = select i1 %35, i32 %32, i32 %34
  %37 = icmp eq i32 %36, 0
  br i1 %29, label %38, label %64

38:                                               ; preds = %30
  br i1 %37, label %59, label %39

39:                                               ; preds = %38
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %51, %39
  %45 = phi i32 [ %54, %51 ], [ 0, %39 ]
  %46 = phi i8* [ %53, %51 ], [ %41, %39 ]
  %47 = phi i8* [ %52, %51 ], [ %43, %39 ]
  %48 = load i8, i8* %47, align 1
  %49 = load i8, i8* %46, align 1
  %50 = icmp eq i8 %48, %49
  br i1 %50, label %51, label %56

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %47, i64 1
  %53 = getelementptr inbounds i8, i8* %46, i64 1
  %54 = add nuw i32 %45, 1
  %55 = icmp ult i32 %54, %36
  br i1 %55, label %44, label %59

56:                                               ; preds = %44
  %57 = icmp ugt i8 %48, %49
  %58 = select i1 %57, i32 1, i32 -1
  br label %168

59:                                               ; preds = %51, %38
  %60 = icmp eq i32 %32, %34
  br i1 %60, label %168, label %61

61:                                               ; preds = %59
  %62 = icmp ugt i32 %32, %34
  %63 = select i1 %62, i32 1, i32 -1
  br label %168

64:                                               ; preds = %30
  br i1 %37, label %89, label %65

65:                                               ; preds = %64
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %67 = bitcast %"class.WTF::StringImpl"* %66 to i16*
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %69 = bitcast %"class.WTF::StringImpl"* %68 to i8*
  br label %70

70:                                               ; preds = %79, %65
  %71 = phi i32 [ %82, %79 ], [ 0, %65 ]
  %72 = phi i16* [ %81, %79 ], [ %67, %65 ]
  %73 = phi i8* [ %80, %79 ], [ %69, %65 ]
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = load i16, i16* %72, align 2
  %77 = zext i16 %76 to i32
  %78 = icmp eq i32 %75, %77
  br i1 %78, label %79, label %84

79:                                               ; preds = %70
  %80 = getelementptr inbounds i8, i8* %73, i64 1
  %81 = getelementptr inbounds i16, i16* %72, i64 1
  %82 = add nuw i32 %71, 1
  %83 = icmp ult i32 %82, %36
  br i1 %83, label %70, label %89

84:                                               ; preds = %70
  %85 = zext i8 %74 to i32
  %86 = zext i16 %76 to i32
  %87 = icmp ugt i32 %85, %86
  %88 = select i1 %87, i32 1, i32 -1
  br label %168

89:                                               ; preds = %79, %64
  %90 = icmp eq i32 %32, %34
  br i1 %90, label %168, label %91

91:                                               ; preds = %89
  %92 = icmp ugt i32 %32, %34
  %93 = select i1 %92, i32 1, i32 -1
  br label %168

94:                                               ; preds = %21
  br i1 %29, label %95, label %135

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp ult i32 %97, %99
  %101 = select i1 %100, i32 %97, i32 %99
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %127, label %103

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %105 = bitcast %"class.WTF::StringImpl"* %104 to i16*
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %107 = bitcast %"class.WTF::StringImpl"* %106 to i8*
  br label %108

108:                                              ; preds = %117, %103
  %109 = phi i32 [ %120, %117 ], [ 0, %103 ]
  %110 = phi i16* [ %119, %117 ], [ %105, %103 ]
  %111 = phi i8* [ %118, %117 ], [ %107, %103 ]
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = load i16, i16* %110, align 2
  %115 = zext i16 %114 to i32
  %116 = icmp eq i32 %113, %115
  br i1 %116, label %117, label %122

117:                                              ; preds = %108
  %118 = getelementptr inbounds i8, i8* %111, i64 1
  %119 = getelementptr inbounds i16, i16* %110, i64 1
  %120 = add nuw i32 %109, 1
  %121 = icmp ult i32 %120, %101
  br i1 %121, label %108, label %127

122:                                              ; preds = %108
  %123 = zext i8 %112 to i32
  %124 = zext i16 %114 to i32
  %125 = icmp ugt i32 %123, %124
  %126 = select i1 %125, i32 1, i32 -1
  br label %132

127:                                              ; preds = %117, %95
  %128 = icmp eq i32 %97, %99
  br i1 %128, label %132, label %129

129:                                              ; preds = %127
  %130 = icmp ugt i32 %97, %99
  %131 = select i1 %130, i32 1, i32 -1
  br label %132

132:                                              ; preds = %129, %127, %122
  %133 = phi i32 [ %126, %122 ], [ %131, %129 ], [ 0, %127 ]
  %134 = sub nsw i32 0, %133
  br label %168

135:                                              ; preds = %94
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = icmp ult i32 %137, %139
  %141 = select i1 %140, i32 %137, i32 %139
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %163, label %143

143:                                              ; preds = %135
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %145 = bitcast %"class.WTF::StringImpl"* %144 to i16*
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %147 = bitcast %"class.WTF::StringImpl"* %146 to i16*
  br label %148

148:                                              ; preds = %155, %143
  %149 = phi i32 [ %158, %155 ], [ 0, %143 ]
  %150 = phi i16* [ %157, %155 ], [ %145, %143 ]
  %151 = phi i16* [ %156, %155 ], [ %147, %143 ]
  %152 = load i16, i16* %151, align 2
  %153 = load i16, i16* %150, align 2
  %154 = icmp eq i16 %152, %153
  br i1 %154, label %155, label %160

155:                                              ; preds = %148
  %156 = getelementptr inbounds i16, i16* %151, i64 1
  %157 = getelementptr inbounds i16, i16* %150, i64 1
  %158 = add nuw i32 %149, 1
  %159 = icmp ult i32 %158, %141
  br i1 %159, label %148, label %163

160:                                              ; preds = %148
  %161 = icmp ugt i16 %152, %153
  %162 = select i1 %161, i32 1, i32 -1
  br label %168

163:                                              ; preds = %155, %135
  %164 = icmp eq i32 %137, %139
  br i1 %164, label %168, label %165

165:                                              ; preds = %163
  %166 = icmp ugt i32 %137, %139
  %167 = select i1 %166, i32 1, i32 -1
  br label %168

168:                                              ; preds = %9, %10, %16, %56, %59, %61, %84, %89, %91, %132, %160, %163, %165
  %169 = phi i32 [ %20, %16 ], [ 0, %9 ], [ %14, %10 ], [ %134, %132 ], [ %58, %56 ], [ %63, %61 ], [ 0, %59 ], [ %88, %84 ], [ %93, %91 ], [ 0, %89 ], [ %162, %160 ], [ %167, %165 ], [ 0, %163 ]
  %170 = icmp slt i32 %169, 0
  ret i1 %170
}

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_116SetKeyframeValueEPNS_7ElementERNS_8DocumentERNS_14StringKeyframeERKN3WTF6StringESA_PNS_16ExecutionContextE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::StringKeyframe"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::ExecutionContext"* readnone) unnamed_addr #0 {
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.WTF::StringAppend", align 8
  %11 = alloca %"class.WTF::StringAppend.2846", align 8
  %12 = tail call dereferenceable(192) %"class.blink::CSSStyleSheet"* @_ZN5blink8Document12ElementSheetEv(%"class.blink::Document"* %1) #10
  %13 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %12, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %13, align 8
  %15 = tail call i32 @_ZN5blink21AnimationInputHelpers30KeyframeAttributeToCSSPropertyERKN3WTF6StringERKNS_8DocumentE(%"class.WTF::String"* dereferenceable(8) %3, %"class.blink::Document"* dereferenceable(2848) %1) #10
  %16 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %1) #10
  %17 = icmp eq %"class.blink::ExecutionContext"* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %6
  %19 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %1) #10
  %20 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %19, i64 0, i32 6, i32 11
  %21 = load i32, i32* %20, align 8
  br label %22

22:                                               ; preds = %6, %18
  %23 = phi i32 [ %21, %18 ], [ 0, %6 ]
  switch i32 %15, label %52 [
    i32 0, label %275
    i32 1, label %24
  ]

24:                                               ; preds = %22
  %25 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #10
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %54, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 acquire, align 4
  %32 = and i32 %31, 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %50, label %34

34:                                               ; preds = %29
  %35 = load atomic i32, i32* %30 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %54

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #10
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !6

47:                                               ; preds = %38
  tail call void @llvm.trap() #10
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %54

50:                                               ; preds = %29
  %51 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %27) #10
  br label %54

52:                                               ; preds = %22
  %53 = tail call i16 @_ZN5blink14StringKeyframe19SetCSSPropertyValueENS_13CSSPropertyIDERKN3WTF6StringENS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::StringKeyframe"* %2, i32 %15, %"class.WTF::String"* dereferenceable(8) %4, i32 %23, %"class.blink::StyleSheetContents"* %14) #10
  br label %76

54:                                               ; preds = %50, %48, %34, %24
  %55 = phi %"class.WTF::StringImpl"* [ %51, %50 ], [ %27, %34 ], [ %27, %48 ], [ null, %24 ]
  %56 = ptrtoint %"class.WTF::StringImpl"* %55 to i64
  %57 = bitcast %"class.WTF::AtomicString"* %7 to i64*
  store i64 %56, i64* %57, align 8
  %58 = call i16 @_ZN5blink14StringKeyframe19SetCSSPropertyValueERKN3WTF12AtomicStringERKNS1_6StringENS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::StringKeyframe"* %2, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7, %"class.WTF::String"* dereferenceable(8) %4, i32 %23, %"class.blink::StyleSheetContents"* %14) #10
  %59 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %54
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #10
  br label %75

75:                                               ; preds = %54, %71, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #10
  br label %76

76:                                               ; preds = %52, %75
  %77 = phi i16 [ %53, %52 ], [ %58, %75 ]
  %78 = and i16 %77, 1
  %79 = icmp eq i16 %78, 0
  %80 = icmp ne %"class.blink::ExecutionContext"* %5, null
  %81 = and i1 %80, %79
  br i1 %81, label %82, label %284

82:                                               ; preds = %76
  %83 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %1) #10
  %84 = icmp eq %"class.blink::LocalFrame"* %83, null
  br i1 %84, label %284, label %85

85:                                               ; preds = %82
  %86 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %1) #10
  %87 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %86, i64 0, i32 16, i32 0, i32 0
  %88 = load %"class.blink::FrameConsole"*, %"class.blink::FrameConsole"** %87, align 8
  %89 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %89) #10
  store i32 1, i32* %8, align 4
  %90 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %90) #10
  store i32 2, i32* %9, align 4
  %91 = bitcast %"class.WTF::StringAppend"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %91) #10
  %92 = bitcast %"class.WTF::StringAppend.2846"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #10
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %171, label %96

96:                                               ; preds = %85
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %113

103:                                              ; preds = %96
  %104 = zext i32 %102 to i33
  %105 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %104, i33 1) #10
  %106 = extractvalue { i33, i1 } %105, 1
  %107 = extractvalue { i33, i1 } %105, 0
  %108 = icmp slt i33 %107, 0
  %109 = or i1 %106, %108
  br i1 %109, label %110, label %111, !prof !6

110:                                              ; preds = %103
  call void @llvm.trap() #10
  unreachable

111:                                              ; preds = %103
  %112 = trunc i33 %107 to i32
  store i32 %112, i32* %101, align 4
  br label %113

113:                                              ; preds = %111, %96
  %114 = phi i32 [ %112, %111 ], [ %102, %96 ]
  %115 = load atomic i32, i32* %97 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %128

118:                                              ; preds = %113
  %119 = zext i32 %114 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #10
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !6

125:                                              ; preds = %118
  call void @llvm.trap() #10
  unreachable

126:                                              ; preds = %118
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %101, align 4
  br label %128

128:                                              ; preds = %126, %113
  %129 = phi i32 [ %127, %126 ], [ %114, %113 ]
  %130 = load atomic i32, i32* %97 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %135

133:                                              ; preds = %128
  %134 = add i32 %129, -1
  store i32 %134, i32* %101, align 4
  br label %135

135:                                              ; preds = %133, %128
  %136 = phi i32 [ %134, %133 ], [ %129, %128 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #10
  br label %139

139:                                              ; preds = %135, %138
  %140 = load atomic i32, i32* %97 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %154

143:                                              ; preds = %139
  %144 = load i32, i32* %101, align 4
  %145 = zext i32 %144 to i33
  %146 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %145, i33 1) #10
  %147 = extractvalue { i33, i1 } %146, 1
  %148 = extractvalue { i33, i1 } %146, 0
  %149 = icmp slt i33 %148, 0
  %150 = or i1 %147, %149
  br i1 %150, label %151, label %152, !prof !6

151:                                              ; preds = %143
  call void @llvm.trap() #10
  unreachable

152:                                              ; preds = %143
  %153 = trunc i33 %148 to i32
  store i32 %153, i32* %101, align 4
  br label %154

154:                                              ; preds = %139, %152
  %155 = bitcast %"class.WTF::StringAppend.2846"* %11 to i64*
  store i64 ptrtoint ([37 x i8]* @.str.20 to i64), i64* %155, align 8
  %156 = getelementptr inbounds %"class.WTF::StringAppend.2846", %"class.WTF::StringAppend.2846"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %94, %"class.WTF::StringImpl"** %156, align 8
  %157 = load atomic i32, i32* %97 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %175

160:                                              ; preds = %154
  %161 = load i32, i32* %101, align 4
  %162 = zext i32 %161 to i33
  %163 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %162, i33 1) #10
  %164 = extractvalue { i33, i1 } %163, 1
  %165 = extractvalue { i33, i1 } %163, 0
  %166 = icmp slt i33 %165, 0
  %167 = or i1 %164, %166
  br i1 %167, label %168, label %169, !prof !6

168:                                              ; preds = %160
  call void @llvm.trap() #10
  unreachable

169:                                              ; preds = %160
  %170 = trunc i33 %165 to i32
  store i32 %170, i32* %101, align 4
  br label %175

171:                                              ; preds = %85
  %172 = bitcast %"class.WTF::StringAppend.2846"* %11 to i64*
  store i64 ptrtoint ([37 x i8]* @.str.20 to i64), i64* %172, align 8
  %173 = getelementptr inbounds %"class.WTF::StringAppend.2846", %"class.WTF::StringAppend.2846"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %173, align 8
  %174 = getelementptr inbounds %"class.WTF::StringAppend.2846", %"class.WTF::StringAppend.2846"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i8** %174, align 8
  br label %187

175:                                              ; preds = %169, %154
  %176 = getelementptr inbounds %"class.WTF::StringAppend.2846", %"class.WTF::StringAppend.2846"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i8** %176, align 8
  %177 = load atomic i32, i32* %97 monotonic, align 4
  %178 = and i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = load i32, i32* %101, align 4
  br i1 %179, label %181, label %183

181:                                              ; preds = %175
  %182 = add i32 %180, -1
  store i32 %182, i32* %101, align 4
  br label %183

183:                                              ; preds = %181, %175
  %184 = phi i32 [ %182, %181 ], [ %180, %175 ]
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %183
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #10
  br label %187

187:                                              ; preds = %171, %183, %186
  %188 = phi %"class.WTF::StringImpl"** [ %173, %171 ], [ %156, %183 ], [ %156, %186 ]
  %189 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %189, align 8
  %191 = icmp eq %"class.WTF::StringImpl"* %190, null
  br i1 %191, label %209, label %192

192:                                              ; preds = %187
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load atomic i32, i32* %193 monotonic, align 4
  %195 = and i32 %194, 2
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %209

197:                                              ; preds = %192
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 0
  %199 = load i32, i32* %198, align 4
  %200 = zext i32 %199 to i33
  %201 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %200, i33 1) #10
  %202 = extractvalue { i33, i1 } %201, 1
  %203 = extractvalue { i33, i1 } %201, 0
  %204 = icmp slt i33 %203, 0
  %205 = or i1 %202, %204
  br i1 %205, label %206, label %207, !prof !6

206:                                              ; preds = %197
  call void @llvm.trap() #10
  unreachable

207:                                              ; preds = %197
  %208 = trunc i33 %203 to i32
  store i32 %208, i32* %198, align 4
  br label %209

209:                                              ; preds = %187, %192, %207
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend"* nonnull sret %10, %"class.WTF::StringAppend.2846"* nonnull dereferenceable(24) %11, %"class.WTF::StringImpl"* %190)
  %210 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS8_INS8_IPKcNS7_6StringEEESA_EESB_EEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %8, i32* nonnull dereferenceable(4) %9, %"class.WTF::StringAppend"* nonnull dereferenceable(32) %10) #10
  call void @_ZN5blink12FrameConsole10AddMessageEPNS_14ConsoleMessageEb(%"class.blink::FrameConsole"* %88, %"class.blink::ConsoleMessage"* %210, i1 zeroext false) #10
  %211 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 1, i32 0, i32 0
  %212 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %211, align 8
  %213 = icmp eq %"class.WTF::StringImpl"* %212, null
  br i1 %213, label %227, label %214

214:                                              ; preds = %209
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = and i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 0
  %220 = load i32, i32* %219, align 4
  br i1 %218, label %221, label %223

221:                                              ; preds = %214
  %222 = add i32 %220, -1
  store i32 %222, i32* %219, align 4
  br label %223

223:                                              ; preds = %221, %214
  %224 = phi i32 [ %222, %221 ], [ %220, %214 ]
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %223
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %212) #10
  br label %227

227:                                              ; preds = %226, %223, %209
  %228 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %229 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %228, align 8
  %230 = icmp eq %"class.WTF::StringImpl"* %229, null
  br i1 %230, label %244, label %231

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = load atomic i32, i32* %232 monotonic, align 4
  %234 = and i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 0
  %237 = load i32, i32* %236, align 4
  br i1 %235, label %238, label %240

238:                                              ; preds = %231
  %239 = add i32 %237, -1
  store i32 %239, i32* %236, align 4
  br label %240

240:                                              ; preds = %238, %231
  %241 = phi i32 [ %239, %238 ], [ %237, %231 ]
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %244

243:                                              ; preds = %240
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %229) #10
  br label %244

244:                                              ; preds = %227, %240, %243
  %245 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %188, align 8
  %246 = icmp eq %"class.WTF::StringImpl"* %245, null
  br i1 %246, label %260, label %247

247:                                              ; preds = %244
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = load atomic i32, i32* %248 monotonic, align 4
  %250 = and i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 0
  %253 = load i32, i32* %252, align 4
  br i1 %251, label %254, label %256

254:                                              ; preds = %247
  %255 = add i32 %253, -1
  store i32 %255, i32* %252, align 4
  br label %256

256:                                              ; preds = %254, %247
  %257 = phi i32 [ %255, %254 ], [ %253, %247 ]
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %260

259:                                              ; preds = %256
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %245) #10
  br label %260

260:                                              ; preds = %244, %256, %259
  br i1 %95, label %274, label %261

261:                                              ; preds = %260
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = load atomic i32, i32* %262 monotonic, align 4
  %264 = and i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %267 = load i32, i32* %266, align 4
  br i1 %265, label %268, label %270

268:                                              ; preds = %261
  %269 = add i32 %267, -1
  store i32 %269, i32* %266, align 4
  br label %270

270:                                              ; preds = %268, %261
  %271 = phi i32 [ %269, %268 ], [ %267, %261 ]
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %274

273:                                              ; preds = %270
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #10
  br label %274

274:                                              ; preds = %260, %270, %273
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %91) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %90) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89) #10
  br label %284

275:                                              ; preds = %22
  %276 = tail call i32 @_ZN5blink21AnimationInputHelpers40KeyframeAttributeToPresentationAttributeERKN3WTF6StringEPKNS_7ElementE(%"class.WTF::String"* dereferenceable(8) %3, %"class.blink::Element"* %0) #10
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %280, label %278

278:                                              ; preds = %275
  %279 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %276) #10
  tail call void @_ZN5blink14StringKeyframe29SetPresentationAttributeValueERKNS_11CSSPropertyERKN3WTF6StringENS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::StringKeyframe"* %2, %"class.blink::CSSProperty"* dereferenceable(24) %279, %"class.WTF::String"* dereferenceable(8) %4, i32 %23, %"class.blink::StyleSheetContents"* %14) #10
  br label %284

280:                                              ; preds = %275
  %281 = tail call %"class.blink::QualifiedName"* @_ZN5blink21AnimationInputHelpers31KeyframeAttributeToSVGAttributeERKN3WTF6StringEPNS_7ElementE(%"class.WTF::String"* dereferenceable(8) %3, %"class.blink::Element"* %0) #10
  %282 = icmp eq %"class.blink::QualifiedName"* %281, null
  br i1 %282, label %284, label %283

283:                                              ; preds = %280
  tail call void @_ZN5blink14StringKeyframe20SetSVGAttributeValueERKNS_13QualifiedNameERKN3WTF6StringE(%"class.blink::StringKeyframe"* %2, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %281, %"class.WTF::String"* dereferenceable(8) %4) #10
  br label %284

284:                                              ; preds = %283, %280, %76, %274, %82, %278
  ret void
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

declare %"class.blink::TimingFunction"* @_ZN5blink21AnimationInputHelpers19ParseTimingFunctionERKN3WTF6StringEPNS_8DocumentERNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8), %"class.blink::Document"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4absl8optionalIdEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKNS1_9nullopt_tEEEvOT_(%"class.WTF::Vector.2657"*, %"struct.absl::nullopt_t"* dereferenceable(1)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2657", %"class.WTF::Vector.2657"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2657", %"class.WTF::Vector.2657"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.2657", %"class.WTF::Vector.2657"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.absl::optional.2481"*, %"class.absl::optional.2481"** %16, align 8
  br i1 %15, label %18, label %45, !prof !11

18:                                               ; preds = %2
  %19 = icmp eq %"class.absl::optional.2481"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4absl8optionalIdEEEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4absl8optionalIdEEEEPKcv, i64 0, i64 0)) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.2657"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.absl::optional.2481"*, %"class.absl::optional.2481"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.absl::optional.2481"* %27, null
  %30 = and i1 %28, %29
  br i1 %30, label %31, label %37, !prof !11

31:                                               ; preds = %26
  %32 = load i32, i32* %3, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.absl::optional.2481", %"class.absl::optional.2481"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = shl nuw nsw i64 %33, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 %34, i64 %35, i1 false) #10
  %36 = load %"class.absl::optional.2481"*, %"class.absl::optional.2481"** %16, align 8
  br label %37

37:                                               ; preds = %31, %26
  %38 = phi %"class.absl::optional.2481"* [ %27, %26 ], [ %36, %31 ]
  %39 = getelementptr inbounds %"class.absl::optional.2481", %"class.absl::optional.2481"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  %40 = bitcast %"class.WTF::Vector.2657"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %37, %24
  %42 = lshr i64 %21, 4
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.absl::optional.2481"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.absl::optional.2481"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.absl::optional.2481", %"class.absl::optional.2481"* %46, i64 %48, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %49, align 8
  %50 = load i32, i32* %3, align 4
  %51 = add i32 %50, 1
  store i32 %51, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4absl8optionalIdEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.12, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4absl8optionalIdEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIdEEvOT_(%"class.WTF::Vector.2657"*, double* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2657", %"class.WTF::Vector.2657"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2657", %"class.WTF::Vector.2657"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.2657", %"class.WTF::Vector.2657"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.absl::optional.2481"*, %"class.absl::optional.2481"** %16, align 8
  br i1 %15, label %18, label %45, !prof !11

18:                                               ; preds = %2
  %19 = icmp eq %"class.absl::optional.2481"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4absl8optionalIdEEEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4absl8optionalIdEEEEPKcv, i64 0, i64 0)) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.2657"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.absl::optional.2481"*, %"class.absl::optional.2481"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.absl::optional.2481"* %27, null
  %30 = and i1 %28, %29
  br i1 %30, label %31, label %37, !prof !11

31:                                               ; preds = %26
  %32 = load i32, i32* %3, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.absl::optional.2481", %"class.absl::optional.2481"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = shl nuw nsw i64 %33, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 %34, i64 %35, i1 false) #10
  %36 = load %"class.absl::optional.2481"*, %"class.absl::optional.2481"** %16, align 8
  br label %37

37:                                               ; preds = %31, %26
  %38 = phi %"class.absl::optional.2481"* [ %27, %26 ], [ %36, %31 ]
  %39 = getelementptr inbounds %"class.absl::optional.2481", %"class.absl::optional.2481"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  %40 = bitcast %"class.WTF::Vector.2657"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %37, %24
  %42 = lshr i64 %21, 4
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.absl::optional.2481"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.absl::optional.2481"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.absl::optional.2481", %"class.absl::optional.2481"* %46, i64 %48, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %49, align 8
  %50 = getelementptr inbounds i8, i8* %49, i64 8
  %51 = bitcast double* %1 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast i8* %50 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.506"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.506", %"class.WTF::Vector.506"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.506", %"class.WTF::Vector.506"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.506", %"class.WTF::Vector.506"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !11

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.506"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !11

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #10
  %47 = bitcast %"class.WTF::Vector.506"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  %51 = bitcast %"class.WTF::Vector.506"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.506", %"class.WTF::Vector.506"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !11

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #10
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.506"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !11

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #10
  %87 = bitcast %"class.WTF::Vector.506"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #10
  %91 = bitcast %"class.WTF::Vector.506"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #10
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !6

122:                                              ; preds = %113
  tail call void @llvm.trap() #10
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %99, %108, %123
  %126 = load i32, i32* %3, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.12, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare i64 @_ZN5blink11EffectModel26StringToCompositeOperationERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink58CompositeOperationOrAutoOrCompositeOperationOrAutoSequence29GetAsCompositeOperationOrAutoEv(%"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence"*) local_unnamed_addr #2

declare dereferenceable(16) %"class.WTF::Vector.506"* @_ZNK5blink58CompositeOperationOrAutoOrCompositeOperationOrAutoSequence37GetAsCompositeOperationOrAutoSequenceEv(%"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4absl8optionalIN5blink11EffectModel18CompositeOperationEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.12, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4absl8optionalIN5blink11EffectModel18CompositeOperationEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS6_EEvOT_(%"class.WTF::Vector.2662"*, %"class.absl::optional.2486"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2662", %"class.WTF::Vector.2662"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2662", %"class.WTF::Vector.2662"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.absl::optional.2486"*, %"class.absl::optional.2486"** %6, align 8
  %8 = icmp ugt %"class.absl::optional.2486"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.absl::optional.2486", %"class.absl::optional.2486"* %7, i64 %10
  %12 = icmp ugt %"class.absl::optional.2486"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2662", %"class.WTF::Vector.2662"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !11

24:                                               ; preds = %13
  %25 = icmp eq %"class.absl::optional.2486"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4absl8optionalIN5blink11EffectModel18CompositeOperationEEEEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4absl8optionalIN5blink11EffectModel18CompositeOperationEEEEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.2662"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.absl::optional.2486"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.absl::optional.2486"*, %"class.absl::optional.2486"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.absl::optional.2486"* %38, null
  %41 = and i1 %39, %40
  br i1 %41, label %42, label %48, !prof !11

42:                                               ; preds = %35
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.absl::optional.2486", %"class.absl::optional.2486"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = shl nuw nsw i64 %44, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* align 4 %45, i64 %46, i1 false) #10
  %47 = load %"class.absl::optional.2486"*, %"class.absl::optional.2486"** %6, align 8
  br label %48

48:                                               ; preds = %42, %35
  %49 = phi %"class.absl::optional.2486"* [ %38, %35 ], [ %47, %42 ]
  %50 = getelementptr inbounds %"class.absl::optional.2486", %"class.absl::optional.2486"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  %51 = bitcast %"class.WTF::Vector.2662"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.absl::optional.2486"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.absl::optional.2486"* %1 to i64
  %56 = ptrtoint %"class.absl::optional.2486"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.2662", %"class.WTF::Vector.2662"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !11

69:                                               ; preds = %54
  %70 = icmp eq %"class.absl::optional.2486"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4absl8optionalIN5blink11EffectModel18CompositeOperationEEEEEmm(i64 %71) #10
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4absl8optionalIN5blink11EffectModel18CompositeOperationEEEEEPKcv, i64 0, i64 0)) #10
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.2662"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.absl::optional.2486"*, %"class.absl::optional.2486"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.absl::optional.2486"* %78, null
  %81 = and i1 %79, %80
  br i1 %81, label %82, label %88, !prof !11

82:                                               ; preds = %77
  %83 = load i32, i32* %3, align 4
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds %"class.absl::optional.2486", %"class.absl::optional.2486"* %78, i64 0, i32 0, i32 0, i32 0, i32 0
  %86 = shl nuw nsw i64 %84, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* align 4 %85, i64 %86, i1 false) #10
  %87 = load %"class.absl::optional.2486"*, %"class.absl::optional.2486"** %6, align 8
  br label %88

88:                                               ; preds = %82, %77
  %89 = phi %"class.absl::optional.2486"* [ %78, %77 ], [ %87, %82 ]
  %90 = getelementptr inbounds %"class.absl::optional.2486", %"class.absl::optional.2486"* %89, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #10
  %91 = bitcast %"class.WTF::Vector.2662"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %88, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.absl::optional.2486"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.absl::optional.2486"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.absl::optional.2486", %"class.absl::optional.2486"* %97, i64 %58
  br label %99

99:                                               ; preds = %48, %29, %13, %96
  %100 = phi %"class.absl::optional.2486"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %48 ]
  %101 = phi %"class.absl::optional.2486"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %48 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.absl::optional.2486", %"class.absl::optional.2486"* %100, i64 %103, i32 0, i32 0, i32 0, i32 0
  %105 = bitcast %"class.absl::optional.2486"* %101 to i64*
  %106 = bitcast i8* %104 to i64*
  %107 = load i64, i64* %105, align 4
  store i64 %107, i64* %106, align 4
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRPFbRKN3WTF6StringES4_EPS2_EEvT0_S9_T_(%"class.WTF::String"*, %"class.WTF::String"*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %285, %3
  %5 = phi %"class.WTF::String"* [ %1, %3 ], [ %266, %285 ]
  %6 = phi %"class.WTF::String"* [ %0, %3 ], [ %18, %285 ]
  %7 = ptrtoint %"class.WTF::String"* %5 to i64
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 -1
  %9 = bitcast %"class.WTF::String"* %8 to i64*
  %10 = bitcast %"class.WTF::String"* %8 to i64*
  %11 = bitcast %"class.WTF::String"* %8 to i64*
  %12 = bitcast %"class.WTF::String"* %8 to i64*
  %13 = bitcast %"class.WTF::String"* %8 to i64*
  %14 = ptrtoint %"class.WTF::String"* %5 to i64
  br label %15

15:                                               ; preds = %294, %4
  %16 = phi %"class.WTF::String"* [ %6, %4 ], [ %295, %294 ]
  br label %17

17:                                               ; preds = %216, %15
  %18 = phi %"class.WTF::String"* [ %16, %15 ], [ %207, %216 ]
  %19 = ptrtoint %"class.WTF::String"* %18 to i64
  %20 = sub i64 %7, %19
  %21 = ashr exact i64 %20, 3
  switch i64 %21, label %105 [
    i64 0, label %298
    i64 1, label %298
    i64 2, label %22
    i64 3, label %31
    i64 4, label %66
    i64 5, label %71
  ]

22:                                               ; preds = %17
  %23 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 -1
  %25 = tail call zeroext i1 %23(%"class.WTF::String"* dereferenceable(8) %24, %"class.WTF::String"* dereferenceable(8) %18) #10
  br i1 %25, label %26, label %298

26:                                               ; preds = %22
  %27 = bitcast %"class.WTF::String"* %18 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.WTF::String"* %24 to i64*
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %27, align 8
  store i64 %28, i64* %29, align 8
  br label %298

31:                                               ; preds = %17
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 1
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 -1
  %34 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %35 = tail call zeroext i1 %34(%"class.WTF::String"* dereferenceable(8) %32, %"class.WTF::String"* dereferenceable(8) %18) #10
  %36 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %37 = tail call zeroext i1 %36(%"class.WTF::String"* dereferenceable(8) %33, %"class.WTF::String"* dereferenceable(8) %32) #10
  br i1 %35, label %51, label %38

38:                                               ; preds = %31
  br i1 %37, label %39, label %298

39:                                               ; preds = %38
  %40 = bitcast %"class.WTF::String"* %32 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.WTF::String"* %33 to i64*
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %40, align 8
  store i64 %41, i64* %42, align 8
  %44 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %45 = tail call zeroext i1 %44(%"class.WTF::String"* dereferenceable(8) %32, %"class.WTF::String"* dereferenceable(8) %18) #10
  br i1 %45, label %46, label %298

46:                                               ; preds = %39
  %47 = bitcast %"class.WTF::String"* %18 to <2 x i64>*
  %48 = load <2 x i64>, <2 x i64>* %47, align 8
  %49 = shufflevector <2 x i64> %48, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %50 = bitcast %"class.WTF::String"* %18 to <2 x i64>*
  store <2 x i64> %49, <2 x i64>* %50, align 8
  br label %298

51:                                               ; preds = %31
  %52 = bitcast %"class.WTF::String"* %18 to i64*
  %53 = load i64, i64* %52, align 8
  br i1 %37, label %54, label %57

54:                                               ; preds = %51
  %55 = bitcast %"class.WTF::String"* %33 to i64*
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %52, align 8
  store i64 %53, i64* %55, align 8
  br label %298

57:                                               ; preds = %51
  %58 = bitcast %"class.WTF::String"* %32 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %52, align 8
  store i64 %53, i64* %58, align 8
  %60 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %61 = tail call zeroext i1 %60(%"class.WTF::String"* dereferenceable(8) %33, %"class.WTF::String"* dereferenceable(8) %32) #10
  br i1 %61, label %62, label %298

62:                                               ; preds = %57
  %63 = load i64, i64* %58, align 8
  %64 = bitcast %"class.WTF::String"* %33 to i64*
  %65 = load i64, i64* %64, align 8
  store i64 %65, i64* %58, align 8
  store i64 %63, i64* %64, align 8
  br label %298

66:                                               ; preds = %17
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 1
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 2
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 -1
  %70 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN3WTF6StringES4_EPS2_EEjT0_S9_S9_S9_T_(%"class.WTF::String"* %18, %"class.WTF::String"* %67, %"class.WTF::String"* %68, %"class.WTF::String"* %69, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** dereferenceable(8) %2)
  br label %298

71:                                               ; preds = %17
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 1
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 2
  %74 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 3
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 -1
  %76 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN3WTF6StringES4_EPS2_EEjT0_S9_S9_S9_T_(%"class.WTF::String"* %18, %"class.WTF::String"* %72, %"class.WTF::String"* %73, %"class.WTF::String"* %74, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** dereferenceable(8) %2) #10
  %77 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %78 = tail call zeroext i1 %77(%"class.WTF::String"* dereferenceable(8) %75, %"class.WTF::String"* dereferenceable(8) %74) #10
  br i1 %78, label %79, label %298

79:                                               ; preds = %71
  %80 = bitcast %"class.WTF::String"* %74 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.WTF::String"* %75 to i64*
  %83 = load i64, i64* %82, align 8
  store i64 %83, i64* %80, align 8
  store i64 %81, i64* %82, align 8
  %84 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %85 = tail call zeroext i1 %84(%"class.WTF::String"* dereferenceable(8) %74, %"class.WTF::String"* dereferenceable(8) %73) #10
  br i1 %85, label %86, label %298

86:                                               ; preds = %79
  %87 = bitcast %"class.WTF::String"* %73 to <2 x i64>*
  %88 = load <2 x i64>, <2 x i64>* %87, align 8
  %89 = shufflevector <2 x i64> %88, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %90 = bitcast %"class.WTF::String"* %73 to <2 x i64>*
  store <2 x i64> %89, <2 x i64>* %90, align 8
  %91 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %92 = tail call zeroext i1 %91(%"class.WTF::String"* dereferenceable(8) %73, %"class.WTF::String"* dereferenceable(8) %72) #10
  br i1 %92, label %93, label %298

93:                                               ; preds = %86
  %94 = bitcast %"class.WTF::String"* %72 to <2 x i64>*
  %95 = load <2 x i64>, <2 x i64>* %94, align 8
  %96 = shufflevector <2 x i64> %95, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %97 = bitcast %"class.WTF::String"* %72 to <2 x i64>*
  store <2 x i64> %96, <2 x i64>* %97, align 8
  %98 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %99 = tail call zeroext i1 %98(%"class.WTF::String"* dereferenceable(8) %72, %"class.WTF::String"* dereferenceable(8) %18) #10
  br i1 %99, label %100, label %298

100:                                              ; preds = %93
  %101 = bitcast %"class.WTF::String"* %18 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8
  %103 = shufflevector <2 x i64> %102, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %104 = bitcast %"class.WTF::String"* %18 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %104, align 8
  br label %298

105:                                              ; preds = %17
  %106 = icmp slt i64 %20, 56
  br i1 %106, label %107, label %108

107:                                              ; preds = %105
  tail call void @_ZNSt3__118__insertion_sort_3IRPFbRKN3WTF6StringES4_EPS2_EEvT0_S9_T_(%"class.WTF::String"* %18, %"class.WTF::String"* %5, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** dereferenceable(8) %2)
  br label %298

108:                                              ; preds = %105
  %109 = icmp sgt i64 %20, 7992
  %110 = sdiv i64 %21, 2
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 %110
  br i1 %109, label %112, label %145

112:                                              ; preds = %108
  %113 = sdiv i64 %21, 4
  %114 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 %113
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %111, i64 %113
  %116 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN3WTF6StringES4_EPS2_EEjT0_S9_S9_S9_T_(%"class.WTF::String"* %18, %"class.WTF::String"* %114, %"class.WTF::String"* %111, %"class.WTF::String"* %115, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** dereferenceable(8) %2) #10
  %117 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %118 = tail call zeroext i1 %117(%"class.WTF::String"* dereferenceable(8) %8, %"class.WTF::String"* dereferenceable(8) %115) #10
  br i1 %118, label %119, label %174

119:                                              ; preds = %112
  %120 = bitcast %"class.WTF::String"* %115 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = load i64, i64* %12, align 8
  store i64 %122, i64* %120, align 8
  store i64 %121, i64* %12, align 8
  %123 = add i32 %116, 1
  %124 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %125 = tail call zeroext i1 %124(%"class.WTF::String"* dereferenceable(8) %115, %"class.WTF::String"* dereferenceable(8) %111) #10
  br i1 %125, label %126, label %174

126:                                              ; preds = %119
  %127 = bitcast %"class.WTF::String"* %111 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = load i64, i64* %120, align 8
  store i64 %129, i64* %127, align 8
  store i64 %128, i64* %120, align 8
  %130 = add i32 %116, 2
  %131 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %132 = tail call zeroext i1 %131(%"class.WTF::String"* dereferenceable(8) %111, %"class.WTF::String"* dereferenceable(8) %114) #10
  br i1 %132, label %133, label %174

133:                                              ; preds = %126
  %134 = bitcast %"class.WTF::String"* %114 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = load i64, i64* %127, align 8
  store i64 %136, i64* %134, align 8
  store i64 %135, i64* %127, align 8
  %137 = add i32 %116, 3
  %138 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %139 = tail call zeroext i1 %138(%"class.WTF::String"* dereferenceable(8) %114, %"class.WTF::String"* dereferenceable(8) %18) #10
  br i1 %139, label %140, label %174

140:                                              ; preds = %133
  %141 = bitcast %"class.WTF::String"* %18 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = load i64, i64* %134, align 8
  store i64 %143, i64* %141, align 8
  store i64 %142, i64* %134, align 8
  %144 = add i32 %116, 4
  br label %174

145:                                              ; preds = %108
  %146 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %147 = tail call zeroext i1 %146(%"class.WTF::String"* dereferenceable(8) %111, %"class.WTF::String"* dereferenceable(8) %18) #10
  %148 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %149 = tail call zeroext i1 %148(%"class.WTF::String"* dereferenceable(8) %8, %"class.WTF::String"* dereferenceable(8) %111) #10
  br i1 %147, label %161, label %150

150:                                              ; preds = %145
  br i1 %149, label %151, label %174

151:                                              ; preds = %150
  %152 = bitcast %"class.WTF::String"* %111 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = load i64, i64* %9, align 8
  store i64 %154, i64* %152, align 8
  store i64 %153, i64* %9, align 8
  %155 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %156 = tail call zeroext i1 %155(%"class.WTF::String"* dereferenceable(8) %111, %"class.WTF::String"* dereferenceable(8) %18) #10
  br i1 %156, label %157, label %174

157:                                              ; preds = %151
  %158 = bitcast %"class.WTF::String"* %18 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = load i64, i64* %152, align 8
  store i64 %160, i64* %158, align 8
  store i64 %159, i64* %152, align 8
  br label %174

161:                                              ; preds = %145
  %162 = bitcast %"class.WTF::String"* %18 to i64*
  %163 = load i64, i64* %162, align 8
  br i1 %149, label %164, label %166

164:                                              ; preds = %161
  %165 = load i64, i64* %11, align 8
  store i64 %165, i64* %162, align 8
  store i64 %163, i64* %11, align 8
  br label %174

166:                                              ; preds = %161
  %167 = bitcast %"class.WTF::String"* %111 to i64*
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  store i64 %163, i64* %167, align 8
  %169 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %170 = tail call zeroext i1 %169(%"class.WTF::String"* dereferenceable(8) %8, %"class.WTF::String"* dereferenceable(8) %111) #10
  br i1 %170, label %171, label %174

171:                                              ; preds = %166
  %172 = load i64, i64* %167, align 8
  %173 = load i64, i64* %10, align 8
  store i64 %173, i64* %167, align 8
  store i64 %172, i64* %10, align 8
  br label %174

174:                                              ; preds = %171, %166, %164, %157, %151, %150, %140, %133, %126, %119, %112
  %175 = phi i32 [ %144, %140 ], [ %137, %133 ], [ %130, %126 ], [ %123, %119 ], [ %116, %112 ], [ 1, %164 ], [ 0, %150 ], [ 2, %157 ], [ 1, %151 ], [ 2, %171 ], [ 1, %166 ]
  %176 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %177 = tail call zeroext i1 %176(%"class.WTF::String"* dereferenceable(8) %18, %"class.WTF::String"* dereferenceable(8) %111) #10
  br i1 %177, label %232, label %178

178:                                              ; preds = %174, %223
  %179 = phi %"class.WTF::String"* [ %180, %223 ], [ %8, %174 ]
  %180 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %179, i64 -1
  %181 = icmp eq %"class.WTF::String"* %18, %180
  br i1 %181, label %182, label %223

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 1
  %184 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %185 = tail call zeroext i1 %184(%"class.WTF::String"* dereferenceable(8) %18, %"class.WTF::String"* dereferenceable(8) %8) #10
  br i1 %185, label %200, label %186

186:                                              ; preds = %182
  %187 = icmp eq %"class.WTF::String"* %183, %8
  br i1 %187, label %298, label %188

188:                                              ; preds = %186, %197
  %189 = phi %"class.WTF::String"* [ %198, %197 ], [ %183, %186 ]
  %190 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %191 = tail call zeroext i1 %190(%"class.WTF::String"* dereferenceable(8) %18, %"class.WTF::String"* dereferenceable(8) %189) #10
  br i1 %191, label %192, label %197

192:                                              ; preds = %188
  %193 = bitcast %"class.WTF::String"* %189 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = load i64, i64* %13, align 8
  store i64 %195, i64* %193, align 8
  store i64 %194, i64* %13, align 8
  %196 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 1
  br label %200

197:                                              ; preds = %188
  %198 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 1
  %199 = icmp eq %"class.WTF::String"* %198, %8
  br i1 %199, label %298, label %188

200:                                              ; preds = %192, %182
  %201 = phi %"class.WTF::String"* [ %183, %182 ], [ %196, %192 ]
  %202 = icmp eq %"class.WTF::String"* %201, %8
  br i1 %202, label %298, label %203

203:                                              ; preds = %200, %218
  %204 = phi %"class.WTF::String"* [ %210, %218 ], [ %201, %200 ]
  %205 = phi %"class.WTF::String"* [ %214, %218 ], [ %8, %200 ]
  br label %206

206:                                              ; preds = %206, %203
  %207 = phi %"class.WTF::String"* [ %204, %203 ], [ %210, %206 ]
  %208 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %209 = tail call zeroext i1 %208(%"class.WTF::String"* dereferenceable(8) %18, %"class.WTF::String"* dereferenceable(8) %207) #10
  %210 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %207, i64 1
  br i1 %209, label %211, label %206

211:                                              ; preds = %206, %211
  %212 = phi %"class.WTF::String"* [ %214, %211 ], [ %205, %206 ]
  %213 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %214 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %212, i64 -1
  %215 = tail call zeroext i1 %213(%"class.WTF::String"* dereferenceable(8) %18, %"class.WTF::String"* dereferenceable(8) %214) #10
  br i1 %215, label %211, label %216

216:                                              ; preds = %211
  %217 = icmp ult %"class.WTF::String"* %207, %214
  br i1 %217, label %218, label %17

218:                                              ; preds = %216
  %219 = bitcast %"class.WTF::String"* %207 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = bitcast %"class.WTF::String"* %214 to i64*
  %222 = load i64, i64* %221, align 8
  store i64 %222, i64* %219, align 8
  store i64 %220, i64* %221, align 8
  br label %203

223:                                              ; preds = %178
  %224 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %225 = tail call zeroext i1 %224(%"class.WTF::String"* dereferenceable(8) %180, %"class.WTF::String"* dereferenceable(8) %111) #10
  br i1 %225, label %226, label %178

226:                                              ; preds = %223
  %227 = bitcast %"class.WTF::String"* %18 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = bitcast %"class.WTF::String"* %180 to i64*
  %230 = load i64, i64* %229, align 8
  store i64 %230, i64* %227, align 8
  store i64 %228, i64* %229, align 8
  %231 = add i32 %175, 1
  br label %232

232:                                              ; preds = %174, %226
  %233 = phi i32 [ %231, %226 ], [ %175, %174 ]
  %234 = phi %"class.WTF::String"* [ %180, %226 ], [ %8, %174 ]
  %235 = ptrtoint %"class.WTF::String"* %18 to i64
  %236 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 1
  %237 = icmp ult %"class.WTF::String"* %236, %234
  br i1 %237, label %238, label %263

238:                                              ; preds = %232, %255
  %239 = phi %"class.WTF::String"* [ %262, %255 ], [ %111, %232 ]
  %240 = phi i32 [ %260, %255 ], [ %233, %232 ]
  %241 = phi %"class.WTF::String"* [ %247, %255 ], [ %236, %232 ]
  %242 = phi %"class.WTF::String"* [ %251, %255 ], [ %234, %232 ]
  br label %243

243:                                              ; preds = %243, %238
  %244 = phi %"class.WTF::String"* [ %241, %238 ], [ %247, %243 ]
  %245 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %246 = tail call zeroext i1 %245(%"class.WTF::String"* dereferenceable(8) %244, %"class.WTF::String"* dereferenceable(8) %239) #10
  %247 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %244, i64 1
  br i1 %246, label %243, label %248

248:                                              ; preds = %243, %248
  %249 = phi %"class.WTF::String"* [ %251, %248 ], [ %242, %243 ]
  %250 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %251 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %249, i64 -1
  %252 = tail call zeroext i1 %250(%"class.WTF::String"* dereferenceable(8) %251, %"class.WTF::String"* dereferenceable(8) %239) #10
  br i1 %252, label %253, label %248

253:                                              ; preds = %248
  %254 = icmp ugt %"class.WTF::String"* %244, %251
  br i1 %254, label %263, label %255

255:                                              ; preds = %253
  %256 = bitcast %"class.WTF::String"* %244 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = bitcast %"class.WTF::String"* %251 to i64*
  %259 = load i64, i64* %258, align 8
  store i64 %259, i64* %256, align 8
  store i64 %257, i64* %258, align 8
  %260 = add i32 %240, 1
  %261 = icmp eq %"class.WTF::String"* %239, %244
  %262 = select i1 %261, %"class.WTF::String"* %251, %"class.WTF::String"* %239
  br label %238

263:                                              ; preds = %253, %232
  %264 = phi %"class.WTF::String"* [ %111, %232 ], [ %239, %253 ]
  %265 = phi i32 [ %233, %232 ], [ %240, %253 ]
  %266 = phi %"class.WTF::String"* [ %236, %232 ], [ %244, %253 ]
  %267 = icmp eq %"class.WTF::String"* %266, %264
  br i1 %267, label %277, label %268

268:                                              ; preds = %263
  %269 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %270 = tail call zeroext i1 %269(%"class.WTF::String"* dereferenceable(8) %264, %"class.WTF::String"* dereferenceable(8) %266) #10
  br i1 %270, label %271, label %277

271:                                              ; preds = %268
  %272 = bitcast %"class.WTF::String"* %266 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = bitcast %"class.WTF::String"* %264 to i64*
  %275 = load i64, i64* %274, align 8
  store i64 %275, i64* %272, align 8
  store i64 %273, i64* %274, align 8
  %276 = add i32 %265, 1
  br label %277

277:                                              ; preds = %263, %271, %268
  %278 = phi i32 [ %276, %271 ], [ %265, %268 ], [ %265, %263 ]
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %287

280:                                              ; preds = %277
  %281 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN3WTF6StringES4_EPS2_EEbT0_S9_T_(%"class.WTF::String"* %18, %"class.WTF::String"* %266, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** dereferenceable(8) %2)
  %282 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %266, i64 1
  %283 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN3WTF6StringES4_EPS2_EEbT0_S9_T_(%"class.WTF::String"* %282, %"class.WTF::String"* %5, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** dereferenceable(8) %2)
  br i1 %283, label %284, label %286

284:                                              ; preds = %280
  br i1 %281, label %298, label %285

285:                                              ; preds = %284, %296
  br label %4

286:                                              ; preds = %280
  br i1 %281, label %294, label %287

287:                                              ; preds = %286, %277
  %288 = ptrtoint %"class.WTF::String"* %266 to i64
  %289 = sub i64 %288, %235
  %290 = sub i64 %14, %288
  %291 = icmp slt i64 %289, %290
  br i1 %291, label %292, label %296

292:                                              ; preds = %287
  tail call void @_ZNSt3__16__sortIRPFbRKN3WTF6StringES4_EPS2_EEvT0_S9_T_(%"class.WTF::String"* %18, %"class.WTF::String"* %266, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** dereferenceable(8) %2)
  %293 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %266, i64 1
  br label %294

294:                                              ; preds = %292, %286
  %295 = phi %"class.WTF::String"* [ %282, %286 ], [ %293, %292 ]
  br label %15

296:                                              ; preds = %287
  %297 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %266, i64 1
  tail call void @_ZNSt3__16__sortIRPFbRKN3WTF6StringES4_EPS2_EEvT0_S9_T_(%"class.WTF::String"* %297, %"class.WTF::String"* %5, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** dereferenceable(8) %2)
  br label %285

298:                                              ; preds = %284, %200, %17, %17, %186, %197, %100, %93, %86, %79, %71, %62, %57, %54, %46, %39, %38, %22, %26, %66, %107
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRPFbRKN3WTF6StringES4_EPS2_EEjT0_S9_S9_S9_T_(%"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %4, align 8
  %7 = tail call zeroext i1 %6(%"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %0) #10
  %8 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %4, align 8
  %9 = tail call zeroext i1 %8(%"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %1) #10
  br i1 %7, label %22, label %10

10:                                               ; preds = %5
  br i1 %9, label %11, label %37

11:                                               ; preds = %10
  %12 = bitcast %"class.WTF::String"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.WTF::String"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 %13, i64* %14, align 8
  %16 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %4, align 8
  %17 = tail call zeroext i1 %16(%"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %0) #10
  br i1 %17, label %18, label %37

18:                                               ; preds = %11
  %19 = bitcast %"class.WTF::String"* %0 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = load i64, i64* %12, align 8
  store i64 %21, i64* %19, align 8
  store i64 %20, i64* %12, align 8
  br label %37

22:                                               ; preds = %5
  %23 = bitcast %"class.WTF::String"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  br i1 %9, label %25, label %28

25:                                               ; preds = %22
  %26 = bitcast %"class.WTF::String"* %2 to i64*
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %23, align 8
  store i64 %24, i64* %26, align 8
  br label %37

28:                                               ; preds = %22
  %29 = bitcast %"class.WTF::String"* %1 to i64*
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %23, align 8
  store i64 %24, i64* %29, align 8
  %31 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %4, align 8
  %32 = tail call zeroext i1 %31(%"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %1) #10
  br i1 %32, label %33, label %37

33:                                               ; preds = %28
  %34 = load i64, i64* %29, align 8
  %35 = bitcast %"class.WTF::String"* %2 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %29, align 8
  store i64 %34, i64* %35, align 8
  br label %37

37:                                               ; preds = %10, %11, %18, %25, %28, %33
  %38 = phi i32 [ 1, %25 ], [ 0, %10 ], [ 2, %18 ], [ 1, %11 ], [ 2, %33 ], [ 1, %28 ]
  %39 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %4, align 8
  %40 = tail call zeroext i1 %39(%"class.WTF::String"* dereferenceable(8) %3, %"class.WTF::String"* dereferenceable(8) %2) #10
  br i1 %40, label %41, label %61

41:                                               ; preds = %37
  %42 = bitcast %"class.WTF::String"* %2 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.WTF::String"* %3 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  store i64 %43, i64* %44, align 8
  %46 = add nuw nsw i32 %38, 1
  %47 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %4, align 8
  %48 = tail call zeroext i1 %47(%"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %1) #10
  br i1 %48, label %49, label %61

49:                                               ; preds = %41
  %50 = bitcast %"class.WTF::String"* %1 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = load i64, i64* %42, align 8
  store i64 %52, i64* %50, align 8
  store i64 %51, i64* %42, align 8
  %53 = add nuw nsw i32 %38, 2
  %54 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %4, align 8
  %55 = tail call zeroext i1 %54(%"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %0) #10
  br i1 %55, label %56, label %61

56:                                               ; preds = %49
  %57 = bitcast %"class.WTF::String"* %0 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = load i64, i64* %50, align 8
  store i64 %59, i64* %57, align 8
  store i64 %58, i64* %50, align 8
  %60 = add nuw nsw i32 %38, 3
  br label %61

61:                                               ; preds = %41, %56, %49, %37
  %62 = phi i32 [ %60, %56 ], [ %53, %49 ], [ %46, %41 ], [ %38, %37 ]
  ret i32 %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRPFbRKN3WTF6StringES4_EPS2_EEvT0_S9_T_(%"class.WTF::String"*, %"class.WTF::String"*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 2
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 1
  %7 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %8 = tail call zeroext i1 %7(%"class.WTF::String"* dereferenceable(8) %6, %"class.WTF::String"* dereferenceable(8) %0) #10
  %9 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %10 = tail call zeroext i1 %9(%"class.WTF::String"* dereferenceable(8) %5, %"class.WTF::String"* dereferenceable(8) %6) #10
  br i1 %8, label %24, label %11

11:                                               ; preds = %3
  br i1 %10, label %12, label %40

12:                                               ; preds = %11
  %13 = bitcast %"class.WTF::String"* %6 to <2 x i64>*
  %14 = load <2 x i64>, <2 x i64>* %13, align 8
  %15 = shufflevector <2 x i64> %14, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %16 = bitcast %"class.WTF::String"* %6 to <2 x i64>*
  store <2 x i64> %15, <2 x i64>* %16, align 8
  %17 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %18 = tail call zeroext i1 %17(%"class.WTF::String"* dereferenceable(8) %6, %"class.WTF::String"* dereferenceable(8) %0) #10
  br i1 %18, label %19, label %40

19:                                               ; preds = %12
  %20 = bitcast %"class.WTF::String"* %0 to <2 x i64>*
  %21 = load <2 x i64>, <2 x i64>* %20, align 8
  %22 = shufflevector <2 x i64> %21, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %23 = bitcast %"class.WTF::String"* %0 to <2 x i64>*
  store <2 x i64> %22, <2 x i64>* %23, align 8
  br label %40

24:                                               ; preds = %3
  %25 = bitcast %"class.WTF::String"* %0 to i64*
  %26 = load i64, i64* %25, align 8
  br i1 %10, label %27, label %30

27:                                               ; preds = %24
  %28 = bitcast %"class.WTF::String"* %5 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %25, align 8
  store i64 %26, i64* %28, align 8
  br label %40

30:                                               ; preds = %24
  %31 = bitcast %"class.WTF::String"* %6 to i64*
  %32 = load i64, i64* %31, align 8
  store i64 %32, i64* %25, align 8
  store i64 %26, i64* %31, align 8
  %33 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %34 = tail call zeroext i1 %33(%"class.WTF::String"* dereferenceable(8) %5, %"class.WTF::String"* dereferenceable(8) %6) #10
  br i1 %34, label %35, label %40

35:                                               ; preds = %30
  %36 = bitcast %"class.WTF::String"* %6 to <2 x i64>*
  %37 = load <2 x i64>, <2 x i64>* %36, align 8
  %38 = shufflevector <2 x i64> %37, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %39 = bitcast %"class.WTF::String"* %6 to <2 x i64>*
  store <2 x i64> %38, <2 x i64>* %39, align 8
  br label %40

40:                                               ; preds = %11, %12, %19, %27, %30, %35
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 3
  %42 = icmp eq %"class.WTF::String"* %41, %1
  br i1 %42, label %47, label %43

43:                                               ; preds = %40
  %44 = bitcast %"class.WTF::String"* %4 to i8*
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %46 = bitcast %"class.WTF::String"* %4 to i64*
  br label %48

47:                                               ; preds = %123, %40
  ret void

48:                                               ; preds = %43, %123
  %49 = phi %"class.WTF::String"* [ %41, %43 ], [ %124, %123 ]
  %50 = phi %"class.WTF::String"* [ %5, %43 ], [ %49, %123 ]
  %51 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %52 = call zeroext i1 %51(%"class.WTF::String"* dereferenceable(8) %49, %"class.WTF::String"* dereferenceable(8) %50) #10
  br i1 %52, label %53, label %123

53:                                               ; preds = %48
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #10
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 0, i32 0, i32 0
  %55 = bitcast %"class.WTF::String"* %49 to i64*
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %46, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %54, align 8
  br label %57

57:                                               ; preds = %82, %53
  %58 = phi %"class.WTF::String"* [ %49, %53 ], [ %59, %82 ]
  %59 = phi %"class.WTF::String"* [ %50, %53 ], [ %84, %82 ]
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %59, i64 0, i32 0, i32 0
  %61 = bitcast %"class.WTF::String"* %59 to i64*
  %62 = load i64, i64* %61, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %60, align 8
  %63 = bitcast %"class.WTF::String"* %58 to i64*
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %58, i64 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  store i64 %62, i64* %63, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %57
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #10
  br label %80

80:                                               ; preds = %57, %76, %79
  %81 = icmp eq %"class.WTF::String"* %59, %0
  br i1 %81, label %86, label %82

82:                                               ; preds = %80
  %83 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %84 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %59, i64 -1
  %85 = call zeroext i1 %83(%"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %84) #10
  br i1 %85, label %57, label %86

86:                                               ; preds = %80, %82
  %87 = phi %"class.WTF::String"* [ %59, %82 ], [ %0, %80 ]
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %87, i64 0, i32 0, i32 0
  %89 = bitcast %"class.WTF::String"* %87 to i64*
  %90 = load i64, i64* %46, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %45, align 8
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  store i64 %90, i64* %89, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %86
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #10
  br label %106

106:                                              ; preds = %86, %102, %105
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #10
  br label %122

122:                                              ; preds = %106, %118, %121
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #10
  br label %123

123:                                              ; preds = %122, %48
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 1
  %125 = icmp eq %"class.WTF::String"* %124, %1
  br i1 %125, label %47, label %48
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN3WTF6StringES4_EPS2_EEbT0_S9_T_(%"class.WTF::String"*, %"class.WTF::String"*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::String", align 8
  %5 = ptrtoint %"class.WTF::String"* %1 to i64
  %6 = ptrtoint %"class.WTF::String"* %0 to i64
  %7 = sub i64 %5, %6
  %8 = ashr exact i64 %7, 3
  switch i64 %8, label %92 [
    i64 0, label %220
    i64 1, label %220
    i64 2, label %9
    i64 3, label %18
    i64 4, label %53
    i64 5, label %58
  ]

9:                                                ; preds = %3
  %10 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 -1
  %12 = tail call zeroext i1 %10(%"class.WTF::String"* dereferenceable(8) %11, %"class.WTF::String"* dereferenceable(8) %0) #10
  br i1 %12, label %13, label %220

13:                                               ; preds = %9
  %14 = bitcast %"class.WTF::String"* %0 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.WTF::String"* %11 to i64*
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %14, align 8
  store i64 %15, i64* %16, align 8
  br label %220

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 1
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 -1
  %21 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %22 = tail call zeroext i1 %21(%"class.WTF::String"* dereferenceable(8) %19, %"class.WTF::String"* dereferenceable(8) %0) #10
  %23 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %24 = tail call zeroext i1 %23(%"class.WTF::String"* dereferenceable(8) %20, %"class.WTF::String"* dereferenceable(8) %19) #10
  br i1 %22, label %38, label %25

25:                                               ; preds = %18
  br i1 %24, label %26, label %220

26:                                               ; preds = %25
  %27 = bitcast %"class.WTF::String"* %19 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.WTF::String"* %20 to i64*
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %27, align 8
  store i64 %28, i64* %29, align 8
  %31 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %32 = tail call zeroext i1 %31(%"class.WTF::String"* dereferenceable(8) %19, %"class.WTF::String"* dereferenceable(8) %0) #10
  br i1 %32, label %33, label %220

33:                                               ; preds = %26
  %34 = bitcast %"class.WTF::String"* %0 to <2 x i64>*
  %35 = load <2 x i64>, <2 x i64>* %34, align 8
  %36 = shufflevector <2 x i64> %35, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %37 = bitcast %"class.WTF::String"* %0 to <2 x i64>*
  store <2 x i64> %36, <2 x i64>* %37, align 8
  br label %220

38:                                               ; preds = %18
  %39 = bitcast %"class.WTF::String"* %0 to i64*
  %40 = load i64, i64* %39, align 8
  br i1 %24, label %41, label %44

41:                                               ; preds = %38
  %42 = bitcast %"class.WTF::String"* %20 to i64*
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %39, align 8
  store i64 %40, i64* %42, align 8
  br label %220

44:                                               ; preds = %38
  %45 = bitcast %"class.WTF::String"* %19 to i64*
  %46 = load i64, i64* %45, align 8
  store i64 %46, i64* %39, align 8
  store i64 %40, i64* %45, align 8
  %47 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %48 = tail call zeroext i1 %47(%"class.WTF::String"* dereferenceable(8) %20, %"class.WTF::String"* dereferenceable(8) %19) #10
  br i1 %48, label %49, label %220

49:                                               ; preds = %44
  %50 = load i64, i64* %45, align 8
  %51 = bitcast %"class.WTF::String"* %20 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %45, align 8
  store i64 %50, i64* %51, align 8
  br label %220

53:                                               ; preds = %3
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 1
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 2
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 -1
  %57 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN3WTF6StringES4_EPS2_EEjT0_S9_S9_S9_T_(%"class.WTF::String"* %0, %"class.WTF::String"* %54, %"class.WTF::String"* %55, %"class.WTF::String"* %56, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** dereferenceable(8) %2)
  br label %220

58:                                               ; preds = %3
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 1
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 2
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 3
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 -1
  %63 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN3WTF6StringES4_EPS2_EEjT0_S9_S9_S9_T_(%"class.WTF::String"* %0, %"class.WTF::String"* %59, %"class.WTF::String"* %60, %"class.WTF::String"* %61, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** dereferenceable(8) %2) #10
  %64 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %65 = tail call zeroext i1 %64(%"class.WTF::String"* dereferenceable(8) %62, %"class.WTF::String"* dereferenceable(8) %61) #10
  br i1 %65, label %66, label %220

66:                                               ; preds = %58
  %67 = bitcast %"class.WTF::String"* %61 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.WTF::String"* %62 to i64*
  %70 = load i64, i64* %69, align 8
  store i64 %70, i64* %67, align 8
  store i64 %68, i64* %69, align 8
  %71 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %72 = tail call zeroext i1 %71(%"class.WTF::String"* dereferenceable(8) %61, %"class.WTF::String"* dereferenceable(8) %60) #10
  br i1 %72, label %73, label %220

73:                                               ; preds = %66
  %74 = bitcast %"class.WTF::String"* %60 to <2 x i64>*
  %75 = load <2 x i64>, <2 x i64>* %74, align 8
  %76 = shufflevector <2 x i64> %75, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %77 = bitcast %"class.WTF::String"* %60 to <2 x i64>*
  store <2 x i64> %76, <2 x i64>* %77, align 8
  %78 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %79 = tail call zeroext i1 %78(%"class.WTF::String"* dereferenceable(8) %60, %"class.WTF::String"* dereferenceable(8) %59) #10
  br i1 %79, label %80, label %220

80:                                               ; preds = %73
  %81 = bitcast %"class.WTF::String"* %59 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8
  %83 = shufflevector <2 x i64> %82, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %84 = bitcast %"class.WTF::String"* %59 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %84, align 8
  %85 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %86 = tail call zeroext i1 %85(%"class.WTF::String"* dereferenceable(8) %59, %"class.WTF::String"* dereferenceable(8) %0) #10
  br i1 %86, label %87, label %220

87:                                               ; preds = %80
  %88 = bitcast %"class.WTF::String"* %0 to <2 x i64>*
  %89 = load <2 x i64>, <2 x i64>* %88, align 8
  %90 = shufflevector <2 x i64> %89, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %91 = bitcast %"class.WTF::String"* %0 to <2 x i64>*
  store <2 x i64> %90, <2 x i64>* %91, align 8
  br label %220

92:                                               ; preds = %3
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 2
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 1
  %95 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %96 = tail call zeroext i1 %95(%"class.WTF::String"* dereferenceable(8) %94, %"class.WTF::String"* dereferenceable(8) %0) #10
  %97 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %98 = tail call zeroext i1 %97(%"class.WTF::String"* dereferenceable(8) %93, %"class.WTF::String"* dereferenceable(8) %94) #10
  br i1 %96, label %112, label %99

99:                                               ; preds = %92
  br i1 %98, label %100, label %128

100:                                              ; preds = %99
  %101 = bitcast %"class.WTF::String"* %94 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8
  %103 = shufflevector <2 x i64> %102, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %104 = bitcast %"class.WTF::String"* %94 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %104, align 8
  %105 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %106 = tail call zeroext i1 %105(%"class.WTF::String"* dereferenceable(8) %94, %"class.WTF::String"* dereferenceable(8) %0) #10
  br i1 %106, label %107, label %128

107:                                              ; preds = %100
  %108 = bitcast %"class.WTF::String"* %0 to <2 x i64>*
  %109 = load <2 x i64>, <2 x i64>* %108, align 8
  %110 = shufflevector <2 x i64> %109, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %111 = bitcast %"class.WTF::String"* %0 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %111, align 8
  br label %128

112:                                              ; preds = %92
  %113 = bitcast %"class.WTF::String"* %0 to i64*
  %114 = load i64, i64* %113, align 8
  br i1 %98, label %115, label %118

115:                                              ; preds = %112
  %116 = bitcast %"class.WTF::String"* %93 to i64*
  %117 = load i64, i64* %116, align 8
  store i64 %117, i64* %113, align 8
  store i64 %114, i64* %116, align 8
  br label %128

118:                                              ; preds = %112
  %119 = bitcast %"class.WTF::String"* %94 to i64*
  %120 = load i64, i64* %119, align 8
  store i64 %120, i64* %113, align 8
  store i64 %114, i64* %119, align 8
  %121 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %122 = tail call zeroext i1 %121(%"class.WTF::String"* dereferenceable(8) %93, %"class.WTF::String"* dereferenceable(8) %94) #10
  br i1 %122, label %123, label %128

123:                                              ; preds = %118
  %124 = bitcast %"class.WTF::String"* %94 to <2 x i64>*
  %125 = load <2 x i64>, <2 x i64>* %124, align 8
  %126 = shufflevector <2 x i64> %125, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %127 = bitcast %"class.WTF::String"* %94 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %127, align 8
  br label %128

128:                                              ; preds = %99, %100, %107, %115, %118, %123
  %129 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 3
  %130 = icmp eq %"class.WTF::String"* %129, %1
  br i1 %130, label %220, label %131

131:                                              ; preds = %128
  %132 = bitcast %"class.WTF::String"* %4 to i8*
  %133 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %134 = bitcast %"class.WTF::String"* %4 to i64*
  br label %135

135:                                              ; preds = %131, %213
  %136 = phi %"class.WTF::String"* [ %129, %131 ], [ %215, %213 ]
  %137 = phi i32 [ 0, %131 ], [ %214, %213 ]
  %138 = phi %"class.WTF::String"* [ %93, %131 ], [ %136, %213 ]
  %139 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %140 = call zeroext i1 %139(%"class.WTF::String"* dereferenceable(8) %136, %"class.WTF::String"* dereferenceable(8) %138) #10
  br i1 %140, label %141, label %213

141:                                              ; preds = %135
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #10
  %142 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %136, i64 0, i32 0, i32 0
  %143 = bitcast %"class.WTF::String"* %136 to i64*
  %144 = load i64, i64* %143, align 8
  store i64 %144, i64* %134, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %142, align 8
  br label %145

145:                                              ; preds = %170, %141
  %146 = phi %"class.WTF::String"* [ %136, %141 ], [ %147, %170 ]
  %147 = phi %"class.WTF::String"* [ %138, %141 ], [ %172, %170 ]
  %148 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %147, i64 0, i32 0, i32 0
  %149 = bitcast %"class.WTF::String"* %147 to i64*
  %150 = load i64, i64* %149, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %148, align 8
  %151 = bitcast %"class.WTF::String"* %146 to i64*
  %152 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %146, i64 0, i32 0, i32 0
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  store i64 %150, i64* %151, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %168, label %155

155:                                              ; preds = %145
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %153) #10
  br label %168

168:                                              ; preds = %145, %164, %167
  %169 = icmp eq %"class.WTF::String"* %147, %0
  br i1 %169, label %174, label %170

170:                                              ; preds = %168
  %171 = load i1 (%"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.WTF::String"*, %"class.WTF::String"*)** %2, align 8
  %172 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %147, i64 -1
  %173 = call zeroext i1 %171(%"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %172) #10
  br i1 %173, label %145, label %174

174:                                              ; preds = %168, %170
  %175 = phi %"class.WTF::String"* [ %147, %170 ], [ %0, %168 ]
  %176 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %175, i64 0, i32 0, i32 0
  %177 = bitcast %"class.WTF::String"* %175 to i64*
  %178 = load i64, i64* %134, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %133, align 8
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  store i64 %178, i64* %177, align 8
  %180 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %180, label %194, label %181

181:                                              ; preds = %174
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  br i1 %185, label %188, label %190

188:                                              ; preds = %181
  %189 = add i32 %187, -1
  store i32 %189, i32* %186, align 4
  br label %190

190:                                              ; preds = %188, %181
  %191 = phi i32 [ %189, %188 ], [ %187, %181 ]
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %190
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #10
  br label %194

194:                                              ; preds = %174, %190, %193
  %195 = add i32 %137, 1
  %196 = icmp eq i32 %195, 8
  %197 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %198 = icmp eq %"class.WTF::StringImpl"* %197, null
  br i1 %198, label %212, label %199

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  br i1 %203, label %206, label %208

206:                                              ; preds = %199
  %207 = add i32 %205, -1
  store i32 %207, i32* %204, align 4
  br label %208

208:                                              ; preds = %206, %199
  %209 = phi i32 [ %207, %206 ], [ %205, %199 ]
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %208
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %197) #10
  br label %212

212:                                              ; preds = %194, %208, %211
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #10
  br i1 %196, label %217, label %213

213:                                              ; preds = %212, %135
  %214 = phi i32 [ %195, %212 ], [ %137, %135 ]
  %215 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %136, i64 1
  %216 = icmp eq %"class.WTF::String"* %215, %1
  br i1 %216, label %220, label %135

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %136, i64 1
  %219 = icmp eq %"class.WTF::String"* %218, %1
  br label %220

220:                                              ; preds = %213, %217, %128, %87, %80, %73, %66, %58, %49, %44, %41, %33, %26, %25, %9, %13, %3, %3, %53
  %221 = phi i1 [ true, %53 ], [ true, %3 ], [ true, %3 ], [ true, %13 ], [ true, %9 ], [ true, %25 ], [ true, %26 ], [ true, %33 ], [ true, %41 ], [ true, %44 ], [ true, %49 ], [ true, %58 ], [ true, %66 ], [ true, %73 ], [ true, %80 ], [ true, %87 ], [ true, %128 ], [ %219, %217 ], [ true, %213 ]
  ret i1 %221
}

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare i32 @_ZN5blink21AnimationInputHelpers30KeyframeAttributeToCSSPropertyERKN3WTF6StringERKNS_8DocumentE(%"class.WTF::String"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13CSSAnimations28IsAnimationAffectingPropertyERKNS_11CSSPropertyE(%"class.blink::CSSProperty"* dereferenceable(24)) local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32) local_unnamed_addr #2

declare i32 @_ZN5blink21AnimationInputHelpers40KeyframeAttributeToPresentationAttributeERKN3WTF6StringEPKNS_7ElementE(%"class.WTF::String"* dereferenceable(8), %"class.blink::Element"*) local_unnamed_addr #2

declare %"class.blink::QualifiedName"* @_ZN5blink21AnimationInputHelpers31KeyframeAttributeToSVGAttributeERKN3WTF6StringEPNS_7ElementE(%"class.WTF::String"* dereferenceable(8), %"class.blink::Element"*) local_unnamed_addr #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #7 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #10
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #10
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #10
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !6

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #10
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #10
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !6

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #10
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

declare void @_ZN5blink22StringOrStringSequenceC1Ev(%"class.blink::StringOrStringSequence"*) unnamed_addr #2

declare void @_ZN5blink24V8StringOrStringSequence6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_22StringOrStringSequenceENS_23UnionTypeConversionModeERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::StringOrStringSequence"* dereferenceable(32), i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink22StringOrStringSequenceD1Ev(%"class.blink::StringOrStringSequence"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #4

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2673"*, i8 } @_ZN3WTF9HashTableIdNS_12KeyValuePairIdN5blink6MemberINS2_14StringKeyframeEEEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERdDnEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.2671"*, double* dereferenceable(8), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2671", %"class.WTF::HashTable.2671"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.2673"*, %"struct.WTF::KeyValuePair.2673"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.2673"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.2673"* @_ZN3WTF9HashTableIdNS_12KeyValuePairIdN5blink6MemberINS2_14StringKeyframeEEEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.2671"* %0, %"struct.WTF::KeyValuePair.2673"* null)
  %9 = load %"struct.WTF::KeyValuePair.2673"*, %"struct.WTF::KeyValuePair.2673"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.2673"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2671", %"class.WTF::HashTable.2671"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast double* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %39, i64 0, i32 0
  %41 = load double, double* %40, align 8
  %42 = fcmp oeq double %41, 0x7FF0000000000000
  br i1 %42, label %87, label %43

43:                                               ; preds = %10
  %44 = xor i32 %36, -1
  %45 = lshr i32 %36, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %66
  %58 = phi double [ %41, %43 ], [ %75, %66 ]
  %59 = phi %"struct.WTF::KeyValuePair.2673"* [ %39, %43 ], [ %73, %66 ]
  %60 = phi %"struct.WTF::KeyValuePair.2673"* [ null, %43 ], [ %68, %66 ]
  %61 = phi i64 [ %38, %43 ], [ %72, %66 ]
  %62 = phi i64 [ 0, %43 ], [ %70, %66 ]
  %63 = bitcast %"struct.WTF::KeyValuePair.2673"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, %17
  br i1 %65, label %140, label %66

66:                                               ; preds = %57
  %67 = fcmp oeq double %58, 0xFFF0000000000000
  %68 = select i1 %67, %"struct.WTF::KeyValuePair.2673"* %59, %"struct.WTF::KeyValuePair.2673"* %60
  %69 = icmp eq i64 %62, 0
  %70 = select i1 %69, i64 %56, i64 %62
  %71 = add i64 %70, %61
  %72 = and i64 %71, %15
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %11, i64 %72
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %73, i64 0, i32 0
  %75 = load double, double* %74, align 8
  %76 = fcmp oeq double %75, 0x7FF0000000000000
  br i1 %76, label %77, label %57

77:                                               ; preds = %66
  %78 = icmp eq %"struct.WTF::KeyValuePair.2673"* %68, null
  br i1 %78, label %87, label %79

79:                                               ; preds = %77
  tail call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIdEENS4_IN5blink6MemberINS6_14StringKeyframeEEEEEEENS6_13HeapAllocatorENS_12KeyValuePairIdS9_EEEEvRT1_(%"struct.WTF::KeyValuePair.2673"* nonnull dereferenceable(16) %68) #10
  %80 = getelementptr inbounds %"class.WTF::HashTable.2671", %"class.WTF::HashTable.2671"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %77, %79
  %88 = phi i64 [ %86, %79 ], [ %17, %77 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.2673"* [ %68, %79 ], [ %73, %77 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair.2673"* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %89, i64 0, i32 1
  %92 = bitcast %"class.blink::Member.2477"* %91 to i64*
  store atomic i64 0, i64* %92 monotonic, align 8
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %128, label %95

95:                                               ; preds = %87
  %96 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %97 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %96, i64 0, i32 1
  %98 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %97) #10
  %99 = icmp eq i8* %98, null
  br i1 %99, label %100, label %102, !prof !6

100:                                              ; preds = %95
  %101 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %97, i8* %101) #10
  br label %102

102:                                              ; preds = %100, %95
  %103 = phi i8* [ %101, %100 ], [ %98, %95 ]
  %104 = bitcast i8* %103 to %"class.blink::ThreadState"**
  %105 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %105, i64 0, i32 9
  %107 = load i8, i8* %106, align 1, !range !2
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %128, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %105, i64 0, i32 13
  %111 = load i64, i64* %110, align 8
  %112 = add i64 %111, 1
  store i64 %112, i64* %110, align 8
  %113 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %105, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %114 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %113, align 8
  %115 = load atomic i64, i64* %92 monotonic, align 8
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %125, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %114, i64 0, i32 0, i32 0
  %119 = inttoptr i64 %115 to i8*
  %120 = bitcast %"class.blink::MarkingVisitor"* %114 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %121 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %121, i64 5
  %123 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %122, align 8
  tail call void %123(%"class.blink::Visitor"* %118, i8* nonnull %119, i8* %119, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14StringKeyframeEE5TraceEPNS_7VisitorEPKv) #10
  %124 = load i64, i64* %110, align 8
  br label %125

125:                                              ; preds = %117, %109
  %126 = phi i64 [ %112, %109 ], [ %124, %117 ]
  %127 = add i64 %126, -1
  store i64 %127, i64* %110, align 8
  br label %128

128:                                              ; preds = %87, %102, %125
  %129 = getelementptr inbounds %"class.WTF::HashTable.2671", %"class.WTF::HashTable.2671"* %0, i64 0, i32 2
  %130 = load i32, i32* %129, align 4
  %131 = add i32 %130, 1
  store i32 %131, i32* %129, align 4
  %132 = getelementptr inbounds %"class.WTF::HashTable.2671", %"class.WTF::HashTable.2671"* %0, i64 0, i32 3
  %133 = load i32, i32* %132, align 8
  %134 = add i32 %133, %131
  %135 = shl i32 %134, 1
  %136 = load i32, i32* %12, align 8
  %137 = icmp ult i32 %135, %136
  br i1 %137, label %140, label %138

138:                                              ; preds = %128
  %139 = tail call %"struct.WTF::KeyValuePair.2673"* @_ZN3WTF9HashTableIdNS_12KeyValuePairIdN5blink6MemberINS2_14StringKeyframeEEEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.2671"* %0, %"struct.WTF::KeyValuePair.2673"* %89)
  br label %140

140:                                              ; preds = %57, %128, %138
  %141 = phi i8 [ 1, %128 ], [ 1, %138 ], [ 0, %57 ]
  %142 = phi %"struct.WTF::KeyValuePair.2673"* [ %89, %128 ], [ %139, %138 ], [ %59, %57 ]
  %143 = insertvalue { %"struct.WTF::KeyValuePair.2673"*, i8 } undef, %"struct.WTF::KeyValuePair.2673"* %142, 0
  %144 = insertvalue { %"struct.WTF::KeyValuePair.2673"*, i8 } %143, i8 %141, 1
  ret { %"struct.WTF::KeyValuePair.2673"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2673"* @_ZN3WTF9HashTableIdNS_12KeyValuePairIdN5blink6MemberINS2_14StringKeyframeEEEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.2671"*, %"struct.WTF::KeyValuePair.2673"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2671", %"class.WTF::HashTable.2671"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2671", %"class.WTF::HashTable.2671"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.14, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = call %"struct.WTF::KeyValuePair.2673"* @_ZN3WTF9HashTableIdNS_12KeyValuePairIdN5blink6MemberINS2_14StringKeyframeEEEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6RehashEjPS6_(%"class.WTF::HashTable.2671"* %0, i32 %32, %"struct.WTF::KeyValuePair.2673"* %1)
  ret %"struct.WTF::KeyValuePair.2673"* %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2673"* @_ZN3WTF9HashTableIdNS_12KeyValuePairIdN5blink6MemberINS2_14StringKeyframeEEEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6RehashEjPS6_(%"class.WTF::HashTable.2671"*, i32, %"struct.WTF::KeyValuePair.2673"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"class.WTF::HashTable.2671", %"class.WTF::HashTable.2671"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp ult i32 %6, %1
  br i1 %7, label %8, label %16

8:                                                ; preds = %3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  store i8 -86, i8* %4, align 1
  %9 = call %"struct.WTF::KeyValuePair.2673"* @_ZN3WTF9HashTableIdNS_12KeyValuePairIdN5blink6MemberINS2_14StringKeyframeEEEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.2671"* %0, i32 %1, %"struct.WTF::KeyValuePair.2673"* %2, i8* nonnull dereferenceable(1) %4)
  %10 = load i8, i8* %4, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  br i1 %11, label %12, label %32

12:                                               ; preds = %8
  %13 = zext i32 %1 to i64
  %14 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIdNS2_12KeyValuePairIdNS_6MemberINS_14StringKeyframeEEEEENS2_24KeyValuePairKeyExtractorENS2_9FloatHashIdEENS2_18HashMapValueTraitsINS2_10HashTraitsIdEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %13) #10
  %15 = bitcast %"class.blink::HeapHashTableBacking"* %14 to %"struct.WTF::KeyValuePair.2673"*
  br label %21

16:                                               ; preds = %3
  %17 = zext i32 %1 to i64
  %18 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIdNS2_12KeyValuePairIdNS_6MemberINS_14StringKeyframeEEEEENS2_24KeyValuePairKeyExtractorENS2_9FloatHashIdEENS2_18HashMapValueTraitsINS2_10HashTraitsIdEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %17) #10
  %19 = bitcast %"class.blink::HeapHashTableBacking"* %18 to %"struct.WTF::KeyValuePair.2673"*
  %20 = icmp eq i32 %1, 0
  br i1 %20, label %29, label %21

21:                                               ; preds = %12, %16
  %22 = phi %"struct.WTF::KeyValuePair.2673"* [ %15, %12 ], [ %19, %16 ]
  %23 = phi i64 [ %13, %12 ], [ %17, %16 ]
  br label %24

24:                                               ; preds = %21, %24
  %25 = phi i64 [ %27, %24 ], [ 0, %21 ]
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %22, i64 %25
  call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIdEENS4_IN5blink6MemberINS6_14StringKeyframeEEEEEEENS6_13HeapAllocatorENS_12KeyValuePairIdS9_EEEEvRT1_(%"struct.WTF::KeyValuePair.2673"* dereferenceable(16) %26) #10
  %27 = add nuw nsw i64 %25, 1
  %28 = icmp eq i64 %27, %23
  br i1 %28, label %29, label %24

29:                                               ; preds = %24, %16
  %30 = phi %"struct.WTF::KeyValuePair.2673"* [ %19, %16 ], [ %22, %24 ]
  %31 = call %"struct.WTF::KeyValuePair.2673"* @_ZN3WTF9HashTableIdNS_12KeyValuePairIdN5blink6MemberINS2_14StringKeyframeEEEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.2671"* %0, %"struct.WTF::KeyValuePair.2673"* %30, i32 %1, %"struct.WTF::KeyValuePair.2673"* %2)
  br label %32

32:                                               ; preds = %8, %29
  %33 = phi %"struct.WTF::KeyValuePair.2673"* [ %31, %29 ], [ %9, %8 ]
  ret %"struct.WTF::KeyValuePair.2673"* %33
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2673"* @_ZN3WTF9HashTableIdNS_12KeyValuePairIdN5blink6MemberINS2_14StringKeyframeEEEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.2671"*, i32, %"struct.WTF::KeyValuePair.2673"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #10
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !6

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #10
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.14, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0)) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.2671", %"class.WTF::HashTable.2671"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.2673"*, %"struct.WTF::KeyValuePair.2673"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.2673"* %32, null
  br i1 %33, label %94, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.2673"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #10
  br i1 %38, label %39, label %94

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.2671", %"class.WTF::HashTable.2671"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.2673"*, %"struct.WTF::KeyValuePair.2673"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIdNS2_12KeyValuePairIdNS_6MemberINS_14StringKeyframeEEEEENS2_24KeyValuePairKeyExtractorENS2_9FloatHashIdEENS2_18HashMapValueTraitsINS2_10HashTraitsIdEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #10
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair.2673"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %39, %47
  %48 = phi i64 [ %50, %47 ], [ 0, %39 ]
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %45, i64 %48
  call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIdEENS4_IN5blink6MemberINS6_14StringKeyframeEEEEEEENS6_13HeapAllocatorENS_12KeyValuePairIdS9_EEEEvRT1_(%"struct.WTF::KeyValuePair.2673"* dereferenceable(16) %49) #10
  %50 = add nuw nsw i64 %48, 1
  %51 = icmp eq i64 %50, %43
  br i1 %51, label %52, label %47

52:                                               ; preds = %47
  br i1 %46, label %53, label %63

53:                                               ; preds = %84, %39, %52
  %54 = phi %"struct.WTF::KeyValuePair.2673"* [ null, %52 ], [ null, %39 ], [ %70, %84 ]
  %55 = bitcast %"class.WTF::HashTable.2671"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %55, align 8
  %56 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %60 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %59) #10
  br label %61

61:                                               ; preds = %53, %58
  %62 = icmp eq i32 %1, 0
  br i1 %62, label %87, label %89

63:                                               ; preds = %52, %84
  %64 = phi i64 [ %85, %84 ], [ 0, %52 ]
  %65 = phi %"struct.WTF::KeyValuePair.2673"* [ %70, %84 ], [ null, %52 ]
  %66 = load %"struct.WTF::KeyValuePair.2673"*, %"struct.WTF::KeyValuePair.2673"** %31, align 8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %66, i64 %64
  %68 = icmp eq %"struct.WTF::KeyValuePair.2673"* %67, %2
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %45, i64 %64
  %70 = select i1 %68, %"struct.WTF::KeyValuePair.2673"* %69, %"struct.WTF::KeyValuePair.2673"* %65
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %67, i64 0, i32 0
  %72 = load double, double* %71, align 8
  %73 = fcmp oeq double %72, 0x7FF0000000000000
  %74 = fcmp oeq double %72, 0xFFF0000000000000
  %75 = or i1 %73, %74
  br i1 %75, label %76, label %77

76:                                               ; preds = %63
  call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIdEENS4_IN5blink6MemberINS6_14StringKeyframeEEEEEEENS6_13HeapAllocatorENS_12KeyValuePairIdS9_EEEEvRT1_(%"struct.WTF::KeyValuePair.2673"* dereferenceable(16) %69) #10
  br label %84

77:                                               ; preds = %63
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %69, i64 0, i32 0
  store double %72, double* %78, align 8
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %45, i64 %64, i32 1
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %66, i64 %64, i32 1
  %81 = bitcast %"class.blink::Member.2477"* %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.blink::Member.2477"* %79 to i64*
  store i64 %82, i64* %83, align 8
  br label %84

84:                                               ; preds = %76, %77
  %85 = add nuw nsw i64 %64, 1
  %86 = icmp eq i64 %85, %43
  br i1 %86, label %53, label %63

87:                                               ; preds = %89, %61
  %88 = call %"struct.WTF::KeyValuePair.2673"* @_ZN3WTF9HashTableIdNS_12KeyValuePairIdN5blink6MemberINS2_14StringKeyframeEEEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.2671"* %0, %"struct.WTF::KeyValuePair.2673"* %42, i32 %1, %"struct.WTF::KeyValuePair.2673"* %54)
  br label %94

89:                                               ; preds = %61, %89
  %90 = phi i64 [ %92, %89 ], [ 0, %61 ]
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %42, i64 %90
  call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIdEENS4_IN5blink6MemberINS6_14StringKeyframeEEEEEEENS6_13HeapAllocatorENS_12KeyValuePairIdS9_EEEEvRT1_(%"struct.WTF::KeyValuePair.2673"* dereferenceable(16) %91) #10
  %92 = add nuw nsw i64 %90, 1
  %93 = icmp eq i64 %92, %35
  br i1 %93, label %87, label %89

94:                                               ; preds = %34, %30, %87
  %95 = phi %"struct.WTF::KeyValuePair.2673"* [ %88, %87 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.2673"* %95
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2673"* @_ZN3WTF9HashTableIdNS_12KeyValuePairIdN5blink6MemberINS2_14StringKeyframeEEEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.2671"*, %"struct.WTF::KeyValuePair.2673"*, i32, %"struct.WTF::KeyValuePair.2673"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2671", align 8
  %6 = bitcast %"class.WTF::HashTable.2671"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable.2671", %"class.WTF::HashTable.2671"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2671", %"class.WTF::HashTable.2671"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2671", %"class.WTF::HashTable.2671"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2671", %"class.WTF::HashTable.2671"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2671"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.2673"* %1, %"struct.WTF::KeyValuePair.2673"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2671", %"class.WTF::HashTable.2671"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.2673"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.2673"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.2671", %"class.WTF::HashTable.2671"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.2673"*, %"struct.WTF::KeyValuePair.2673"** %19, align 8
  br label %57

21:                                               ; preds = %85
  %22 = bitcast %"class.WTF::HashTable.2671"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %86, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.2673"* [ null, %15 ], [ %88, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.2671"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #10
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.2671"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.2671"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #10
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %52) #10
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable.2671", %"class.WTF::HashTable.2671"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"struct.WTF::KeyValuePair.2673"* %29

57:                                               ; preds = %18, %85
  %58 = phi i32 [ %13, %18 ], [ %86, %85 ]
  %59 = phi %"struct.WTF::KeyValuePair.2673"* [ %20, %18 ], [ %87, %85 ]
  %60 = phi %"struct.WTF::KeyValuePair.2673"* [ null, %18 ], [ %88, %85 ]
  %61 = phi i32 [ 0, %18 ], [ %89, %85 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %59, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %63, i64 0, i32 0
  %65 = load double, double* %64, align 8
  %66 = fcmp oeq double %65, 0x7FF0000000000000
  %67 = fcmp oeq double %65, 0xFFF0000000000000
  %68 = or i1 %66, %67
  br i1 %68, label %85, label %69

69:                                               ; preds = %57
  %70 = call { %"struct.WTF::KeyValuePair.2673"*, i8 } @_ZN3WTF9HashTableIdNS_12KeyValuePairIdN5blink6MemberINS2_14StringKeyframeEEEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE16LookupForWritingERKd(%"class.WTF::HashTable.2671"* nonnull %5, double* dereferenceable(8) %64) #10
  %71 = extractvalue { %"struct.WTF::KeyValuePair.2673"*, i8 } %70, 0
  %72 = bitcast %"struct.WTF::KeyValuePair.2673"* %63 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"struct.WTF::KeyValuePair.2673"* %71 to i64*
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %71, i64 0, i32 1
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %59, i64 %62, i32 1
  %77 = bitcast %"class.blink::Member.2477"* %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.blink::Member.2477"* %75 to i64*
  store i64 %78, i64* %79, align 8
  %80 = load %"struct.WTF::KeyValuePair.2673"*, %"struct.WTF::KeyValuePair.2673"** %19, align 8
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %80, i64 %62
  %82 = icmp eq %"struct.WTF::KeyValuePair.2673"* %81, %3
  %83 = select i1 %82, %"struct.WTF::KeyValuePair.2673"* %71, %"struct.WTF::KeyValuePair.2673"* %60
  %84 = load i32, i32* %12, align 8
  br label %85

85:                                               ; preds = %57, %69
  %86 = phi i32 [ %58, %57 ], [ %84, %69 ]
  %87 = phi %"struct.WTF::KeyValuePair.2673"* [ %59, %57 ], [ %80, %69 ]
  %88 = phi %"struct.WTF::KeyValuePair.2673"* [ %60, %57 ], [ %83, %69 ]
  %89 = add i32 %61, 1
  %90 = icmp eq i32 %89, %86
  br i1 %90, label %21, label %57
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIdEENS4_IN5blink6MemberINS6_14StringKeyframeEEEEEEENS6_13HeapAllocatorENS_12KeyValuePairIdS9_EEEEvRT1_(%"struct.WTF::KeyValuePair.2673"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::Member.2477"* %2 to i64*
  %4 = bitcast %"struct.WTF::KeyValuePair.2673"* %0 to <2 x i64>*
  store <2 x i64> <i64 9218868437227405312, i64 0>, <2 x i64>* %4, align 8
  %5 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %40, label %7

7:                                                ; preds = %1
  %8 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %9 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %8, i64 0, i32 1
  %10 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %9) #10
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %14, !prof !6

12:                                               ; preds = %7
  %13 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %9, i8* %13) #10
  br label %14

14:                                               ; preds = %12, %7
  %15 = phi i8* [ %13, %12 ], [ %10, %7 ]
  %16 = bitcast i8* %15 to %"class.blink::ThreadState"**
  %17 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %17, i64 0, i32 9
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %40, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %17, i64 0, i32 13
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 1
  store i64 %24, i64* %22, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %17, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %26 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %25, align 8
  %27 = load atomic i64, i64* %3 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %37, label %29

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %26, i64 0, i32 0, i32 0
  %31 = inttoptr i64 %27 to i8*
  %32 = bitcast %"class.blink::MarkingVisitor"* %26 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, i64 5
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, align 8
  tail call void %35(%"class.blink::Visitor"* %30, i8* nonnull %31, i8* %31, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14StringKeyframeEE5TraceEPNS_7VisitorEPKv) #10
  %36 = load i64, i64* %22, align 8
  br label %37

37:                                               ; preds = %29, %21
  %38 = phi i64 [ %24, %21 ], [ %36, %29 ]
  %39 = add i64 %38, -1
  store i64 %39, i64* %22, align 8
  br label %40

40:                                               ; preds = %1, %14, %37
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIdNS2_12KeyValuePairIdNS_6MemberINS_14StringKeyframeEEEEENS2_24KeyValuePairKeyExtractorENS2_9FloatHashIdEENS2_18HashMapValueTraitsINS2_10HashTraitsIdEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.16, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIdNS1_12KeyValuePairIdNS_6MemberINS_14StringKeyframeEEEEENS1_24KeyValuePairKeyExtractorENS1_9FloatHashIdEENS1_18HashMapValueTraitsINS1_10HashTraitsIdEENSC_IS6_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIdNS1_12KeyValuePairIdNS_6MemberINS_14StringKeyframeEEEEENS1_24KeyValuePairKeyExtractorENS1_9FloatHashIdEENS1_18HashMapValueTraitsINS1_10HashTraitsIdEENSC_IS6_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIdNS2_12KeyValuePairIdNS_6MemberINS_14StringKeyframeEEEEENS2_24KeyValuePairKeyExtractorENS2_9FloatHashIdEENS2_18HashMapValueTraitsINS2_10HashTraitsIdEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIdNS2_12KeyValuePairIdNS_6MemberINS_14StringKeyframeEEEEENS2_24KeyValuePairKeyExtractorENS2_9FloatHashIdEENS2_18HashMapValueTraitsINS2_10HashTraitsIdEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIdNS2_12KeyValuePairIdNS_6MemberINS_14StringKeyframeEEEEENS2_24KeyValuePairKeyExtractorENS2_9FloatHashIdEENS2_18HashMapValueTraitsINS2_10HashTraitsIdEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([375 x i8], [375 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableIdNS_12KeyValuePairIdNS1_6MemberINS1_14StringKeyframeEEEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSD_IS7_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !6

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIdNS2_12KeyValuePairIdNS_6MemberINS_14StringKeyframeEEEEENS2_24KeyValuePairKeyExtractorENS2_9FloatHashIdEENS2_18HashMapValueTraitsINS2_10HashTraitsIdEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIdNS2_12KeyValuePairIdNS_6MemberINS_14StringKeyframeEEEEENS2_24KeyValuePairKeyExtractorENS2_9FloatHashIdEENS2_18HashMapValueTraitsINS2_10HashTraitsIdEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #10
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIdNS_12KeyValuePairIdN5blink6MemberINS4_14StringKeyframeEEEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSD_IS7_EEEESE_NS4_13HeapAllocatorEEEE5TraceEPNS4_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #10
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIdNS2_12KeyValuePairIdNS_6MemberINS_14StringKeyframeEEEEENS2_24KeyValuePairKeyExtractorENS2_9FloatHashIdEENS2_18HashMapValueTraitsINS2_10HashTraitsIdEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIdNS_12KeyValuePairIdN5blink6MemberINS4_14StringKeyframeEEEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSD_IS7_EEEESE_NS4_13HeapAllocatorEEEE5TraceEPNS4_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.2673"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !6

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #10
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %69, %20
  ret void

33:                                               ; preds = %69, %30
  %34 = phi i64 [ 0, %30 ], [ %70, %69 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %3, i64 %34
  br i1 %28, label %36, label %53

36:                                               ; preds = %33
  %37 = bitcast %"struct.WTF::KeyValuePair.2673"* %35 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = bitcast i64 %38 to double
  %40 = fcmp oeq double %39, 0x7FF0000000000000
  %41 = fcmp oeq double %39, 0xFFF0000000000000
  %42 = or i1 %40, %41
  br i1 %42, label %69, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %3, i64 %34, i32 1
  %45 = bitcast %"class.blink::Member.2477"* %44 to i64*
  %46 = load atomic i64, i64* %45 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %69, label %48

48:                                               ; preds = %43
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14StringKeyframeEE5TraceEPNS_7VisitorEPKv) #10
  br label %69

53:                                               ; preds = %33
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %35, i64 0, i32 0
  %55 = load double, double* %54, align 8
  %56 = fcmp oeq double %55, 0x7FF0000000000000
  %57 = fcmp oeq double %55, 0xFFF0000000000000
  %58 = or i1 %56, %57
  br i1 %58, label %69, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %3, i64 %34, i32 1
  %61 = bitcast %"class.blink::Member.2477"* %60 to i64*
  %62 = load atomic i64, i64* %61 monotonic, align 8
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %69, label %64

64:                                               ; preds = %59
  %65 = inttoptr i64 %62 to i8*
  %66 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %67 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %66, i64 5
  %68 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %67, align 8
  tail call void %68(%"class.blink::Visitor"* %0, i8* nonnull %65, i8* nonnull %65, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14StringKeyframeEE5TraceEPNS_7VisitorEPKv) #10
  br label %69

69:                                               ; preds = %64, %59, %36, %43, %48, %53
  %70 = add nuw nsw i64 %34, 1
  %71 = icmp eq i64 %70, %23
  br i1 %71, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14StringKeyframeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StringKeyframe"*
  %4 = bitcast i8* %1 to void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)**, void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)** %5, i64 7
  %7 = load void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::StringKeyframe"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2673"*, i8 } @_ZN3WTF9HashTableIdNS_12KeyValuePairIdN5blink6MemberINS2_14StringKeyframeEEEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE16LookupForWritingERKd(%"class.WTF::HashTable.2671"*, double* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2671", %"class.WTF::HashTable.2671"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2673"*, %"struct.WTF::KeyValuePair.2673"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2671", %"class.WTF::HashTable.2671"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast double* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.2673"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %32, i64 0, i32 0
  %35 = load double, double* %34, align 8
  %36 = fcmp oeq double %35, 0x7FF0000000000000
  br i1 %36, label %54, label %37

37:                                               ; preds = %2
  %38 = xor i32 %29, -1
  %39 = lshr i32 %29, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %60

51:                                               ; preds = %70
  %52 = ptrtoint %"struct.WTF::KeyValuePair.2673"* %77 to i64
  %53 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair.2673"*
  br label %54

54:                                               ; preds = %51, %2
  %55 = phi i64 [ %52, %51 ], [ %33, %2 ]
  %56 = phi %"struct.WTF::KeyValuePair.2673"* [ %53, %51 ], [ null, %2 ]
  %57 = icmp eq %"struct.WTF::KeyValuePair.2673"* %56, null
  %58 = ptrtoint %"struct.WTF::KeyValuePair.2673"* %56 to i64
  %59 = select i1 %57, i64 %55, i64 %58
  br label %82

60:                                               ; preds = %70, %37
  %61 = phi i64 [ 0, %37 ], [ %72, %70 ]
  %62 = phi double [ %35, %37 ], [ %80, %70 ]
  %63 = phi i64 [ %33, %37 ], [ %78, %70 ]
  %64 = phi %"struct.WTF::KeyValuePair.2673"* [ %32, %37 ], [ %77, %70 ]
  %65 = phi i64 [ %31, %37 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %37 ], [ %74, %70 ]
  %67 = bitcast %"struct.WTF::KeyValuePair.2673"* %64 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %68, %10
  br i1 %69, label %82, label %70

70:                                               ; preds = %60
  %71 = fcmp oeq double %62, 0xFFF0000000000000
  %72 = select i1 %71, i64 %63, i64 %61
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %50, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.2673"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.2673", %"struct.WTF::KeyValuePair.2673"* %77, i64 0, i32 0
  %80 = load double, double* %79, align 8
  %81 = fcmp oeq double %80, 0x7FF0000000000000
  br i1 %81, label %51, label %60

82:                                               ; preds = %60, %54
  %83 = phi i64 [ %59, %54 ], [ %63, %60 ]
  %84 = phi i8 [ 0, %54 ], [ 1, %60 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.2673"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.2673"*, i8 } undef, %"struct.WTF::KeyValuePair.2673"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.2673"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.2673"*, i8 } %87
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14StringKeyframeC2Ev(%"class.blink::StringKeyframe"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink8KeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %5, align 4
  %6 = tail call %"class.blink::LinearTimingFunction"* @_ZN5blink20LinearTimingFunction6SharedEv() #10
  %7 = getelementptr inbounds %"class.blink::LinearTimingFunction", %"class.blink::LinearTimingFunction"* %6, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 0, i32 3, i32 0
  store %"class.blink::TimingFunction"* %7, %"class.blink::TimingFunction"** %8, align 8
  %9 = icmp eq %"class.blink::LinearTimingFunction"* %6, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::LinearTimingFunction", %"class.blink::LinearTimingFunction"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0)) #10
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  br label %17

17:                                               ; preds = %1, %10, %14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink14StringKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %18 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 1
  %19 = bitcast %"class.blink::HeapHashMap.2491"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 20, i1 false) #10
  %20 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::MutableCSSPropertyValueSet"* null, %"class.blink::MutableCSSPropertyValueSet"** %20, align 8
  %21 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64 136) #10
  %22 = bitcast i8* %21 to %"class.blink::MutableCSSPropertyValueSet"*
  call void @_ZN5blink26MutableCSSPropertyValueSetC1ENS_13CSSParserModeE(%"class.blink::MutableCSSPropertyValueSet"* %22, i8 zeroext 0) #10
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  %27 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 3, i32 0, i32 0
  %28 = bitcast %"class.blink::MutableCSSPropertyValueSet"** %27 to i8**
  store i8* %21, i8** %28, align 8
  %29 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 4
  %30 = bitcast %"class.WTF::HashMap.2514"* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 20, i1 false) #10
  %31 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 5
  store i8 0, i8* %31, align 8
  %32 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 6
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 7
  store i8 0, i8* %33, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_8KeyframeEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8KeyframeEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8KeyframeEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8KeyframeEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8KeyframeEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8KeyframeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Keyframe"*
  %4 = bitcast i8* %1 to void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)**, void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)** %5, i64 7
  %7 = load void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Keyframe"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8KeyframeEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::Keyframe"*
  %3 = bitcast i8* %0 to void (%"class.blink::Keyframe"*)***
  %4 = load void (%"class.blink::Keyframe"*)**, void (%"class.blink::Keyframe"*)*** %3, align 8
  %5 = load void (%"class.blink::Keyframe"*)*, void (%"class.blink::Keyframe"*)** %4, align 8
  tail call void %5(%"class.blink::Keyframe"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8KeyframeEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink26MutableCSSPropertyValueSetC1ENS_13CSSParserModeE(%"class.blink::MutableCSSPropertyValueSet"*, i8 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19CSSPropertyValueSetEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSPropertyValueSet"*
  tail call void @_ZNK5blink19CSSPropertyValueSet5TraceEPNS_7VisitorE(%"class.blink::CSSPropertyValueSet"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_19CSSPropertyValueSetEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSPropertyValueSet"*
  tail call void @_ZN5blink19CSSPropertyValueSet30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSPropertyValueSet"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_19CSSPropertyValueSetEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink19CSSPropertyValueSet5TraceEPNS_7VisitorE(%"class.blink::CSSPropertyValueSet"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare void @_ZN5blink19CSSPropertyValueSet30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #2

declare dereferenceable(192) %"class.blink::CSSStyleSheet"* @_ZN5blink8Document12ElementSheetEv(%"class.blink::Document"*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #2

declare i16 @_ZN5blink14StringKeyframe19SetCSSPropertyValueERKN3WTF12AtomicStringERKNS1_6StringENS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::StringKeyframe"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i32, %"class.blink::StyleSheetContents"*) local_unnamed_addr #2

declare i16 @_ZN5blink14StringKeyframe19SetCSSPropertyValueENS_13CSSPropertyIDERKN3WTF6StringENS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::StringKeyframe"*, i32, %"class.WTF::String"* dereferenceable(8), i32, %"class.blink::StyleSheetContents"*) local_unnamed_addr #2

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #2

declare void @_ZN5blink12FrameConsole10AddMessageEPNS_14ConsoleMessageEb(%"class.blink::FrameConsole"*, %"class.blink::ConsoleMessage"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend"* noalias sret, %"class.WTF::StringAppend.2846"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.2846", align 8
  %5 = bitcast %"class.WTF::StringAppend.2846"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.2846"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2846", %"class.WTF::StringAppend.2846"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2846", %"class.WTF::StringAppend.2846"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #10
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !6

26:                                               ; preds = %17
  tail call void @llvm.trap() #10
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2846", %"class.WTF::StringAppend.2846"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.2846", %"class.WTF::StringAppend.2846"* %1, i64 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #10
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !6

50:                                               ; preds = %41
  tail call void @llvm.trap() #10
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %54

53:                                               ; preds = %29
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringAppend.2846"* nonnull byval(%"class.WTF::StringAppend.2846") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %66

54:                                               ; preds = %36, %51
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringAppend.2846"* nonnull byval(%"class.WTF::StringAppend.2846") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %54
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i32 [ %61, %60 ], [ %59, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #10
  br label %66

66:                                               ; preds = %53, %62, %65
  ret void
}

declare void @_ZN5blink14StringKeyframe29SetPresentationAttributeValueERKNS_11CSSPropertyERKN3WTF6StringENS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::StringKeyframe"*, %"class.blink::CSSProperty"* dereferenceable(24), %"class.WTF::String"* dereferenceable(8), i32, %"class.blink::StyleSheetContents"*) local_unnamed_addr #2

declare void @_ZN5blink14StringKeyframe20SetSVGAttributeValueERKNS_13QualifiedNameERKN3WTF6StringE(%"class.blink::StringKeyframe"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS8_INS8_IPKcNS7_6StringEEESA_EESB_EEEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), %"class.WTF::StringAppend"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #10
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EcvS3_Ev(%"class.WTF::StringAppend"* %2)
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #10
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %12) #10
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #10
  br label %28

28:                                               ; preds = %3, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %29 = getelementptr inbounds i8, i8* %5, i64 -4
  %30 = bitcast i8* %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2848", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2848", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2851", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2851", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %11 = bitcast %"class.WTF::StringTypeAdapter.2851"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #10
  %13 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2851"* nonnull %5, i8* %13) #10
  %14 = bitcast %"class.WTF::StringTypeAdapter.2851"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #10
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2851"* nonnull %4, i8* %16) #10
  %17 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %21 = select i1 %19, %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"* %18
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #10
  br i1 %25, label %92, label %26

26:                                               ; preds = %1
  %27 = icmp eq %"class.WTF::StringImpl"* %9, null
  %28 = select i1 %27, %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"* %9
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %92, label %33

33:                                               ; preds = %26
  %34 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %35 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %36 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %35, i8** nonnull dereferenceable(8) %6) #10
  %37 = load i8*, i8** %6, align 8
  %38 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %39 = bitcast %"class.WTF::StringTypeAdapter.2848"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #10
  %40 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2848", %"class.WTF::StringTypeAdapter.2848"* %3, i64 0, i32 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2848", %"class.WTF::StringTypeAdapter.2848"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 24, i1 false) #10
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %33
  %45 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %52

46:                                               ; preds = %33
  %47 = ptrtoint %"class.WTF::StringImpl"* %42 to i64
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 1
  %51 = bitcast %"class.WTF::StringImpl"* %50 to i8*
  br label %52

52:                                               ; preds = %44, %46
  %53 = phi i8* [ null, %44 ], [ %51, %46 ]
  %54 = phi i64 [ %45, %44 ], [ %47, %46 ]
  %55 = phi i32 [ 0, %44 ], [ %49, %46 ]
  %56 = bitcast %"class.WTF::StringTypeAdapter.2848"* %3 to i64*
  store i64 %54, i64* %56, align 8
  store i8* %53, i8** %40, align 8
  store i32 %55, i32* %41, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.2846"* %38, i8* %37) #10
  %57 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2848", %"class.WTF::StringTypeAdapter.2848"* %3, i64 0, i32 0
  %58 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2846"* %38) #10
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %37, i64 %59
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2849"* nonnull %57, i8* %60) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #10
  %61 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %61, label %151, label %62

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %79

69:                                               ; preds = %62
  %70 = zext i32 %68 to i33
  %71 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %70, i33 1) #10
  %72 = extractvalue { i33, i1 } %71, 1
  %73 = extractvalue { i33, i1 } %71, 0
  %74 = icmp slt i33 %73, 0
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %77, !prof !6

76:                                               ; preds = %69
  call void @llvm.trap() #10
  unreachable

77:                                               ; preds = %69
  %78 = trunc i33 %73 to i32
  store i32 %78, i32* %67, align 4
  br label %79

79:                                               ; preds = %62, %77
  %80 = phi i32 [ %78, %77 ], [ %68, %62 ]
  %81 = ptrtoint %"class.WTF::StringImpl"* %36 to i64
  %82 = load atomic i32, i32* %63 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %87 = add i32 %80, -1
  store i32 %87, i32* %86, align 4
  br label %88

88:                                               ; preds = %85, %79
  %89 = phi i32 [ %87, %85 ], [ %80, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %151

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #10
  br label %151

92:                                               ; preds = %26, %1
  %93 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #10
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %94 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %95 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %94, i16** nonnull dereferenceable(8) %7) #10
  %96 = load i16*, i16** %7, align 8
  %97 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %98 = bitcast %"class.WTF::StringTypeAdapter.2848"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #10
  %99 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2848", %"class.WTF::StringTypeAdapter.2848"* %2, i64 0, i32 0, i32 0, i32 1
  %100 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2848", %"class.WTF::StringTypeAdapter.2848"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 -86, i64 24, i1 false) #10
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %103, label %105

103:                                              ; preds = %92
  %104 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %111

105:                                              ; preds = %92
  %106 = ptrtoint %"class.WTF::StringImpl"* %101 to i64
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 1
  %110 = bitcast %"class.WTF::StringImpl"* %109 to i8*
  br label %111

111:                                              ; preds = %103, %105
  %112 = phi i8* [ null, %103 ], [ %110, %105 ]
  %113 = phi i64 [ %104, %103 ], [ %106, %105 ]
  %114 = phi i32 [ 0, %103 ], [ %108, %105 ]
  %115 = bitcast %"class.WTF::StringTypeAdapter.2848"* %2 to i64*
  store i64 %113, i64* %115, align 8
  store i8* %112, i8** %99, align 8
  store i32 %114, i32* %100, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.2846"* %97, i16* %96) #10
  %116 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2848", %"class.WTF::StringTypeAdapter.2848"* %2, i64 0, i32 0
  %117 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2846"* %97) #10
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds i16, i16* %96, i64 %118
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2849"* nonnull %116, i16* %119) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #10
  %120 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %120, label %151, label %121

121:                                              ; preds = %111
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %138

128:                                              ; preds = %121
  %129 = zext i32 %127 to i33
  %130 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %129, i33 1) #10
  %131 = extractvalue { i33, i1 } %130, 1
  %132 = extractvalue { i33, i1 } %130, 0
  %133 = icmp slt i33 %132, 0
  %134 = or i1 %131, %133
  br i1 %134, label %135, label %136, !prof !6

135:                                              ; preds = %128
  call void @llvm.trap() #10
  unreachable

136:                                              ; preds = %128
  %137 = trunc i33 %132 to i32
  store i32 %137, i32* %126, align 4
  br label %138

138:                                              ; preds = %121, %136
  %139 = phi i32 [ %137, %136 ], [ %127, %121 ]
  %140 = ptrtoint %"class.WTF::StringImpl"* %95 to i64
  %141 = load atomic i32, i32* %122 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %147

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %146 = add i32 %139, -1
  store i32 %146, i32* %145, align 4
  br label %147

147:                                              ; preds = %144, %138
  %148 = phi i32 [ %146, %144 ], [ %139, %138 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #10
  br label %151

151:                                              ; preds = %150, %147, %111, %91, %88, %52
  %152 = phi i8* [ %34, %52 ], [ %34, %88 ], [ %34, %91 ], [ %93, %111 ], [ %93, %147 ], [ %93, %150 ]
  %153 = phi i64 [ 0, %52 ], [ %81, %88 ], [ %81, %91 ], [ 0, %111 ], [ %140, %147 ], [ %140, %150 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #10
  %154 = inttoptr i64 %153 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %154
}

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2846"* %8) #10
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2846"* %8) #10
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #10
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %26, i8* %27) #10
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #10
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #10
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #10
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %41, i8* %42) #10
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #10
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #10
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  ret i32 %18
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2851"*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2846"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2851", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2846", %"class.WTF::StringAppend.2846"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2851"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2851", %"class.WTF::StringTypeAdapter.2851"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.2846", %"class.WTF::StringAppend.2846"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2851"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2851"* nonnull %4, i8* %14) #10
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2847"* %9) #10
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2847"* %9) #10
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #10
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %25, i8* %26) #10
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #10
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #10
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %41, i8* %42) #10
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #10
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #10
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2847"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2851", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.2851"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2851", %"class.WTF::StringTypeAdapter.2851"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.2847", %"class.WTF::StringAppend.2847"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.2851"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2851"* nonnull %4, i8* %13) #10
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2847", %"class.WTF::StringAppend.2847"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %30, i8* %31) #10
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #10
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %45, i8* %46) #10
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #10
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #10
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2849"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.2846"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2851", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2848", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2851", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2846", %"class.WTF::StringAppend.2846"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2851"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2846", %"class.WTF::StringAppend.2846"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2851"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2851"* nonnull %5, i8* %10) #10
  %11 = bitcast %"class.WTF::StringTypeAdapter.2851"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2851", %"class.WTF::StringTypeAdapter.2851"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.2846", %"class.WTF::StringAppend.2846"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #10
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2851"* nonnull %3, i8* %14) #10
  %15 = bitcast %"class.WTF::StringTypeAdapter.2848"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2848", %"class.WTF::StringTypeAdapter.2848"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2848", %"class.WTF::StringTypeAdapter.2848"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.2846", %"class.WTF::StringAppend.2846"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #10
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2848"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2851"* nonnull %3, i8* %1) #10
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2848", %"class.WTF::StringTypeAdapter.2848"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2849"* nonnull %34, i8* %37) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #10
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2847"* %6) #10
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2851"* nonnull %5, i8* %40) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2851"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2849"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.2846"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2851", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2848", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2851", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2846", %"class.WTF::StringAppend.2846"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2851"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2846", %"class.WTF::StringAppend.2846"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2851"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2851"* nonnull %5, i8* %10) #10
  %11 = bitcast %"class.WTF::StringTypeAdapter.2851"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2851", %"class.WTF::StringTypeAdapter.2851"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.2846", %"class.WTF::StringAppend.2846"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #10
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2851"* nonnull %3, i8* %14) #10
  %15 = bitcast %"class.WTF::StringTypeAdapter.2848"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2848", %"class.WTF::StringTypeAdapter.2848"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2848", %"class.WTF::StringTypeAdapter.2848"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.2846", %"class.WTF::StringAppend.2846"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #10
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2848"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2851"* nonnull %3, i16* %1) #10
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2848", %"class.WTF::StringTypeAdapter.2848"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2849"* nonnull %34, i16* %37) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #10
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2847"* %6) #10
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2851"* nonnull %5, i16* %40) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2851"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend"*, %"class.WTF::StringAppend.2846"* byval(%"class.WTF::StringAppend.2846") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.2846"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2846", %"class.WTF::StringAppend.2846"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #10
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !6

25:                                               ; preds = %16
  tail call void @llvm.trap() #10
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %3, %11, %26
  %29 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2846", %"class.WTF::StringAppend.2846"* %1, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #10
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !6

50:                                               ; preds = %43
  tail call void @llvm.trap() #10
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %36, %51
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %60 = add i32 %54, -1
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i32 [ %60, %58 ], [ %54, %53 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #10
  br label %65

65:                                               ; preds = %28, %61, %64
  br i1 %10, label %79, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #10
  br label %79

79:                                               ; preds = %65, %75, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.506"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.506", %"class.WTF::Vector.506"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.506", %"class.WTF::Vector.506"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKdEEvOT_(%"class.WTF::Vector.1129"*, double* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1129", %"class.WTF::Vector.1129"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1129", %"class.WTF::Vector.1129"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load double*, double** %6, align 8
  %8 = icmp ugt double* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds double, double* %7, i64 %10
  %12 = icmp ugt double* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1129", %"class.WTF::Vector.1129"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !11

24:                                               ; preds = %13
  %25 = icmp eq double* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1129"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to double*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load double*, double** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne double* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast double* %38 to i8*
  br i1 %41, label %43, label %49, !prof !11

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #10
  %47 = bitcast %"class.WTF::Vector.1129"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  %51 = bitcast %"class.WTF::Vector.1129"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to double*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint double* %1 to i64
  %56 = ptrtoint double* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.1129", %"class.WTF::Vector.1129"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !11

69:                                               ; preds = %54
  %70 = icmp eq double* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64 %71) #10
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv, i64 0, i64 0)) #10
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1129"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load double*, double** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne double* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast double* %78 to i8*
  br i1 %81, label %83, label %89, !prof !11

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #10
  %87 = bitcast %"class.WTF::Vector.1129"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #10
  %91 = bitcast %"class.WTF::Vector.1129"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to double*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi double* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds double, double* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi double* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi double* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds double, double* %100, i64 %103
  %105 = bitcast double* %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast double* %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.12, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZNSt3__16__sortIRNS_6__lessIddEEPdEEvT0_S5_T_(double*, double*, %"struct.std::__1::__less.2856"* dereferenceable(1)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1129"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1129", %"class.WTF::Vector.1129"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.1129", %"class.WTF::Vector.1129"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load double*, double** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds double, double* %24, i64 %25
  ret double* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.absl::optional.2481"* @_ZN3WTF6VectorIN4absl8optionalIdEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2657"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2657", %"class.WTF::Vector.2657"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.2657", %"class.WTF::Vector.2657"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.absl::optional.2481"*, %"class.absl::optional.2481"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.absl::optional.2481", %"class.absl::optional.2481"* %24, i64 %25
  ret %"class.absl::optional.2481"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.absl::optional.2486"* @_ZN3WTF6VectorIN4absl8optionalIN5blink11EffectModel18CompositeOperationEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2662"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2662", %"class.WTF::Vector.2662"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.2662", %"class.WTF::Vector.2662"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.absl::optional.2486"*, %"class.absl::optional.2486"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.absl::optional.2486", %"class.absl::optional.2486"* %24, i64 %25
  ret %"class.absl::optional.2486"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.2474"*, %"class.blink::StringKeyframe"** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2474", %"class.WTF::Vector.2474"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2474", %"class.WTF::Vector.2474"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2474"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.2474", %"class.WTF::Vector.2474"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.2477"*, %"class.blink::Member.2477"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.2477", %"class.blink::Member.2477"* %16, i64 %18
  %20 = bitcast %"class.blink::StringKeyframe"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.2477"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2474"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2474", %"class.WTF::Vector.2474"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.2474", %"class.WTF::Vector.2474"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.2477"*, %"class.blink::Member.2477"** %8, align 8
  %10 = icmp eq %"class.blink::Member.2477"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14StringKeyframeEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.2474"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.2477"*, %"class.blink::Member.2477"** %8, align 8
  %26 = icmp eq %"class.blink::Member.2477"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.2477"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !6

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2474"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2474"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.2474"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2474", %"class.WTF::Vector.2474"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.2474"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.2474", %"class.WTF::Vector.2474"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14StringKeyframeEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.2474", %"class.WTF::Vector.2474"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.2477"*, %"class.blink::Member.2477"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.2474", %"class.WTF::Vector.2474"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.2477"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.2477"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !11

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.2474"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.2474"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.2474"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.2474", %"class.WTF::Vector.2474"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14StringKeyframeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.26, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.27, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([169 x i8], [169 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14StringKeyframeEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.2477"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !6

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.2477", %"class.blink::Member.2477"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.2477"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14StringKeyframeEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"*, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72), %"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.blink::BaseKeyframe"* @_ZN5blink17NativeValueTraitsINS_12BaseKeyframeEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__14pairINS_6StringES4_EELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.985"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.WTF::ConditionalDestructor.985"* %0 to %"struct.std::__1::pair.984"**
  %3 = load %"struct.std::__1::pair.984"*, %"struct.std::__1::pair.984"** %2, align 8
  %4 = icmp eq %"struct.std::__1::pair.984"* %3, null
  br i1 %4, label %57, label %5, !prof !11

5:                                                ; preds = %1
  %6 = bitcast %"struct.std::__1::pair.984"* %3 to i8*
  %7 = getelementptr inbounds %"class.WTF::ConditionalDestructor.985", %"class.WTF::ConditionalDestructor.985"* %0, i64 12
  %8 = bitcast %"class.WTF::ConditionalDestructor.985"* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %55, label %11, !prof !6

11:                                               ; preds = %5
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"struct.std::__1::pair.984", %"struct.std::__1::pair.984"* %3, i64 %12
  br label %14

14:                                               ; preds = %11, %49
  %15 = phi %"struct.std::__1::pair.984"* [ %50, %49 ], [ %3, %11 ]
  %16 = getelementptr inbounds %"struct.std::__1::pair.984", %"struct.std::__1::pair.984"* %15, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #10
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"struct.std::__1::pair.984", %"struct.std::__1::pair.984"* %15, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #10
  br label %49

49:                                               ; preds = %48, %45, %32
  %50 = getelementptr inbounds %"struct.std::__1::pair.984", %"struct.std::__1::pair.984"* %15, i64 1
  %51 = icmp eq %"struct.std::__1::pair.984"* %50, %13
  br i1 %51, label %52, label %14

52:                                               ; preds = %49
  store i32 0, i32* %8, align 4
  %53 = bitcast %"class.WTF::ConditionalDestructor.985"* %0 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %52, %5
  %56 = phi i8* [ %54, %52 ], [ %6, %5 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %56) #10
  store %"struct.std::__1::pair.984"* null, %"struct.std::__1::pair.984"** %2, align 8
  br label %57

57:                                               ; preds = %1, %55
  ret void
}

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::TryCatch", align 8
  %5 = alloca %"class.blink::V8StringResource", align 8
  %6 = bitcast %"class.blink::V8StringResource"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 152, i1 false)
  %7 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1, %"class.v8::Value"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 1
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1
  %11 = bitcast %"class.std::__1::unique_ptr.2878"* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %5) #10
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.v8::TryCatch"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 48, i1 false) #10
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %4, %"class.v8::Isolate"* %0) #10
  %15 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %16 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #10
  %17 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %15, %"class.v8::Context"* %16) #10
  %18 = ptrtoint %"class.v8::String"* %17 to i64
  %19 = bitcast %"class.blink::V8StringResource"* %5 to i64*
  store i64 %18, i64* %19, align 8
  %20 = icmp eq %"class.v8::String"* %17, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %13
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #10
  br label %28

22:                                               ; preds = %13
  %23 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %4) #10
  %24 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %25 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %25, i64 5
  %27 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %26, align 8
  call void %27(%"class.blink::ExceptionState"* %2, %"class.v8::Value"* %23) #10
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #10
  br label %55

28:                                               ; preds = %3, %21
  %29 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %30 = icmp eq %"class.v8::Value"* %29, null
  br i1 %30, label %35, label %31, !prof !6

31:                                               ; preds = %28
  %32 = bitcast %"class.v8::Value"* %29 to %"class.v8::String"*
  %33 = load i32, i32* %8, align 8
  %34 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %32, i32 %33) #10
  br label %55

35:                                               ; preds = %28
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #10
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !6

52:                                               ; preds = %43
  call void @llvm.trap() #10
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %53, %38, %35, %31, %22
  %56 = phi %"class.WTF::StringImpl"* [ null, %22 ], [ %34, %31 ], [ null, %35 ], [ %36, %38 ], [ %36, %53 ]
  %57 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  store i8* null, i8** %57, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %61, label %60

60:                                               ; preds = %55
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %58) #10
  br label %61

61:                                               ; preds = %60, %55
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #10
  br label %77

77:                                               ; preds = %61, %73, %76
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %6) #10
  ret %"class.WTF::StringImpl"* %56
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !26

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !11

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #10
  br i1 %22, label %23, label %80, !prof !11

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #10
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #10
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #10
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !6

44:                                               ; preds = %35
  tail call void @llvm.trap() #10
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #10
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #10
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #2

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.981"*, %"struct.std::__1::pair.984"* dereferenceable(16)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.984"*, %"struct.std::__1::pair.984"** %6, align 8
  %8 = icmp ugt %"struct.std::__1::pair.984"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.std::__1::pair.984", %"struct.std::__1::pair.984"* %7, i64 %10
  %12 = icmp ugt %"struct.std::__1::pair.984"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !11

24:                                               ; preds = %13
  %25 = icmp eq %"struct.std::__1::pair.984"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringES4_EEEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringES3_EEEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.981"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.std::__1::pair.984"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 4
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.std::__1::pair.984"*, %"struct.std::__1::pair.984"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.std::__1::pair.984"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.std::__1::pair.984"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !11

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #10
  %47 = bitcast %"class.WTF::Vector.981"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  %51 = bitcast %"class.WTF::Vector.981"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.std::__1::pair.984"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.std::__1::pair.984"* %1 to i64
  %56 = ptrtoint %"struct.std::__1::pair.984"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 4
  %59 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !11

69:                                               ; preds = %54
  %70 = icmp eq %"struct.std::__1::pair.984"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringES4_EEEEmm(i64 %71) #10
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringES3_EEEEPKcv, i64 0, i64 0)) #10
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.981"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.std::__1::pair.984"*, %"struct.std::__1::pair.984"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.std::__1::pair.984"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.std::__1::pair.984"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !11

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #10
  %87 = bitcast %"class.WTF::Vector.981"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #10
  %91 = bitcast %"class.WTF::Vector.981"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 4
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.std::__1::pair.984"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.std::__1::pair.984"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.std::__1::pair.984", %"struct.std::__1::pair.984"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.std::__1::pair.984"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.std::__1::pair.984"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.std::__1::pair.984", %"struct.std::__1::pair.984"* %100, i64 %103
  %105 = getelementptr inbounds %"struct.std::__1::pair.984", %"struct.std::__1::pair.984"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"struct.std::__1::pair.984"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"struct.std::__1::pair.984"* %104 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair.984", %"struct.std::__1::pair.984"* %100, i64 %103, i32 1
  %110 = getelementptr inbounds %"struct.std::__1::pair.984", %"struct.std::__1::pair.984"* %101, i64 0, i32 1
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %110, i64 0, i32 0, i32 0
  %112 = bitcast %"class.WTF::String"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.WTF::String"* %109 to i64*
  store i64 %113, i64* %114, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %111, align 8
  %115 = load i32, i32* %3, align 4
  %116 = add i32 %115, 1
  store i32 %116, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringES4_EEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.12, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_12BaseKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.2867"*, %"class.blink::BaseKeyframe"** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2867", %"class.WTF::Vector.2867"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2867", %"class.WTF::Vector.2867"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_12BaseKeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2867"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.2867", %"class.WTF::Vector.2867"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.2870"*, %"class.blink::Member.2870"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.2870", %"class.blink::Member.2870"* %16, i64 %18
  %20 = bitcast %"class.blink::BaseKeyframe"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.2870"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_12BaseKeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2867"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2867", %"class.WTF::Vector.2867"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.2867", %"class.WTF::Vector.2867"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.2870"*, %"class.blink::Member.2870"** %8, align 8
  %10 = icmp eq %"class.blink::Member.2870"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_12BaseKeyframeEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.2895"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_12BaseKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking.2895"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.2867"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.2895", %"class.blink::HeapVectorBacking.2895"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.2870"*, %"class.blink::Member.2870"** %8, align 8
  %26 = icmp eq %"class.blink::Member.2870"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.2870"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !6

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_12BaseKeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2867"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_12BaseKeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2867"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.2867"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2867", %"class.WTF::Vector.2867"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.2867"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.2867", %"class.WTF::Vector.2867"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_12BaseKeyframeEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.2895"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_12BaseKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking.2895"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.2867", %"class.WTF::Vector.2867"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.2870"*, %"class.blink::Member.2870"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.2867", %"class.WTF::Vector.2867"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.2895"* %17, null
  %23 = icmp ne %"class.blink::Member.2870"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.2870"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !11

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.2867"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.2895", %"class.blink::HeapVectorBacking.2895"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.2867"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.2867"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.2867", %"class.WTF::Vector.2867"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.2895", %"class.blink::HeapVectorBacking.2895"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_12BaseKeyframeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.26, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.2895"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_12BaseKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.27, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_12BaseKeyframeEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.2895"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.2895"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_12BaseKeyframeEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_12BaseKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_12BaseKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_12BaseKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([177 x i8], [177 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberIKNS1_12BaseKeyframeEEENS_12VectorTraitsIS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_12BaseKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.2870"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !6

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.2870", %"class.blink::Member.2870"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.2870"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12BaseKeyframeEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_12BaseKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12BaseKeyframeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::BaseKeyframe"*
  %4 = bitcast i8* %1 to void (%"class.blink::BaseKeyframe"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::BaseKeyframe"*, %"class.blink::Visitor"*)**, void (%"class.blink::BaseKeyframe"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::BaseKeyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::BaseKeyframe"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::BaseKeyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::BaseKeyframe"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::BaseKeyframe"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS0_INSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEELj0ES5_E14AppendSlowCaseIRS6_EEvOT_(%"class.WTF::Vector.2873"*, %"class.WTF::Vector.981"* dereferenceable(16)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2873", %"class.WTF::Vector.2873"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2873", %"class.WTF::Vector.2873"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::Vector.981"*, %"class.WTF::Vector.981"** %6, align 8
  %8 = icmp ugt %"class.WTF::Vector.981"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::Vector.981"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2873", %"class.WTF::Vector.2873"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !11

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::Vector.981"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorINSt3__14pairINS_6StringES5_EELj0ES0_EEEEmm(i64 %27) #10
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([129 x i8], [129 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINSt3__14pairINS_6StringES4_EELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #10
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.2873"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.WTF::Vector.981"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorINS0_INSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEELj0ES5_E16ReallocateBufferEj(%"class.WTF::Vector.2873"* %0, i32 %22) #10
  %36 = load %"class.WTF::Vector.981"*, %"class.WTF::Vector.981"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.WTF::Vector.981"* %1 to i64
  %39 = ptrtoint %"class.WTF::Vector.981"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 4
  %42 = getelementptr inbounds %"class.WTF::Vector.2873", %"class.WTF::Vector.2873"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !11

52:                                               ; preds = %37
  %53 = icmp eq %"class.WTF::Vector.981"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorINSt3__14pairINS_6StringES5_EELj0ES0_EEEEmm(i64 %55) #10
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([129 x i8], [129 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINSt3__14pairINS_6StringES4_EELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #10
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.2873"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 4
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.WTF::Vector.981"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorINS0_INSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEELj0ES5_E16ReallocateBufferEj(%"class.WTF::Vector.2873"* %0, i32 %50) #10
  %64 = load %"class.WTF::Vector.981"*, %"class.WTF::Vector.981"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.WTF::Vector.981"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.WTF::Vector.981"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.WTF::Vector.981"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %69, i64 %72
  tail call void @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEC2ERKS6_(%"class.WTF::Vector.981"* %73, %"class.WTF::Vector.981"* dereferenceable(16) %70) #10
  %74 = load i32, i32* %3, align 4
  %75 = add i32 %74, 1
  store i32 %75, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEC2ERKS6_(%"class.WTF::Vector.981"*, %"class.WTF::Vector.981"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %0, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::pair.984"* null, %"struct.std::__1::pair.984"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringES4_EEEEmm(i64 %9) #10
  %11 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %10, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringES3_EEEEPKcv, i64 0, i64 0)) #10
  %12 = ptrtoint i8* %11 to i64
  %13 = bitcast %"class.WTF::Vector.981"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = lshr i64 %10, 4
  %15 = trunc i64 %14 to i32
  store i32 %15, i32* %6, align 8
  %16 = bitcast i8* %11 to %"struct.std::__1::pair.984"*
  br label %17

17:                                               ; preds = %2, %8
  %18 = phi %"struct.std::__1::pair.984"* [ null, %2 ], [ %16, %8 ]
  %19 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %1, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::pair.984"*, %"struct.std::__1::pair.984"** %22, align 8
  %24 = load i32, i32* %19, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.std::__1::pair.984", %"struct.std::__1::pair.984"* %23, i64 %25
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %78, label %28

28:                                               ; preds = %17, %74
  %29 = phi %"struct.std::__1::pair.984"* [ %75, %74 ], [ %18, %17 ]
  %30 = phi %"struct.std::__1::pair.984"* [ %76, %74 ], [ %23, %17 ]
  %31 = getelementptr inbounds %"struct.std::__1::pair.984", %"struct.std::__1::pair.984"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair.984", %"struct.std::__1::pair.984"* %29, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #10
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !6

49:                                               ; preds = %40
  tail call void @llvm.trap() #10
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %50, %35, %28
  %53 = getelementptr inbounds %"struct.std::__1::pair.984", %"struct.std::__1::pair.984"* %30, i64 0, i32 1, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = getelementptr inbounds %"struct.std::__1::pair.984", %"struct.std::__1::pair.984"* %29, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %55, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %56, label %74, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i33
  %66 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %65, i33 1) #10
  %67 = extractvalue { i33, i1 } %66, 1
  %68 = extractvalue { i33, i1 } %66, 0
  %69 = icmp slt i33 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %72, !prof !6

71:                                               ; preds = %62
  tail call void @llvm.trap() #10
  unreachable

72:                                               ; preds = %62
  %73 = trunc i33 %68 to i32
  store i32 %73, i32* %63, align 4
  br label %74

74:                                               ; preds = %72, %57, %52
  %75 = getelementptr inbounds %"struct.std::__1::pair.984", %"struct.std::__1::pair.984"* %29, i64 1
  %76 = getelementptr inbounds %"struct.std::__1::pair.984", %"struct.std::__1::pair.984"* %30, i64 1
  %77 = icmp eq %"struct.std::__1::pair.984"* %76, %26
  br i1 %77, label %78, label %28

78:                                               ; preds = %74, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS0_INSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEELj0ES5_E16ReallocateBufferEj(%"class.WTF::Vector.2873"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %35

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2873", %"class.WTF::Vector.2873"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::Vector.981"*, %"class.WTF::Vector.981"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2873", %"class.WTF::Vector.2873"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.2873"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.2873", %"class.WTF::Vector.2873"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %33, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"class.WTF::Vector.981"* [ %31, %14 ], [ %6, %4 ]
  %16 = phi %"class.WTF::Vector.981"* [ %30, %14 ], [ null, %4 ]
  %17 = bitcast %"class.WTF::Vector.981"* %16 to i8*
  %18 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %16, i64 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %16, i64 0, i32 0, i32 0, i32 2
  %20 = bitcast %"class.WTF::Vector.981"* %15 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #10
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.WTF::Vector.981"* %16 to i64*
  store atomic i64 0, i64* %20 monotonic, align 8
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %15, i64 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %18, align 4
  %25 = load i32, i32* %23, align 4
  store i32 %25, i32* %18, align 4
  store i32 %24, i32* %23, align 4
  %26 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %15, i64 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %19, align 4
  %28 = load i32, i32* %26, align 4
  store i32 %28, i32* %19, align 4
  store i32 %27, i32* %26, align 4
  %29 = bitcast %"class.WTF::Vector.981"* %15 to %"class.WTF::ConditionalDestructor.985"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__14pairINS_6StringES4_EELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.985"* %29) #10
  %30 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %16, i64 1
  %31 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %15, i64 1
  %32 = icmp eq %"class.WTF::Vector.981"* %31, %10
  br i1 %32, label %33, label %14

33:                                               ; preds = %14, %4
  %34 = bitcast %"class.WTF::Vector.981"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %34) #10
  br label %79

35:                                               ; preds = %2
  %36 = zext i32 %1 to i64
  %37 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorINSt3__14pairINS_6StringES5_EELj0ES0_EEEEmm(i64 %36) #10
  %38 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %37, i8* getelementptr inbounds ([129 x i8], [129 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINSt3__14pairINS_6StringES4_EELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #10
  %39 = lshr i64 %37, 4
  %40 = ptrtoint i8* %38 to i64
  %41 = getelementptr inbounds %"class.WTF::Vector.2873", %"class.WTF::Vector.2873"* %0, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::Vector.981"*, %"class.WTF::Vector.981"** %41, align 8
  %43 = getelementptr inbounds %"class.WTF::Vector.2873", %"class.WTF::Vector.2873"* %0, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %42, i64 %45
  %47 = icmp eq i32 %44, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %35
  %49 = bitcast %"class.WTF::Vector.981"* %42 to i8*
  br label %74

50:                                               ; preds = %35
  %51 = bitcast i8* %38 to %"class.WTF::Vector.981"*
  br label %52

52:                                               ; preds = %50, %52
  %53 = phi %"class.WTF::Vector.981"* [ %69, %52 ], [ %42, %50 ]
  %54 = phi %"class.WTF::Vector.981"* [ %68, %52 ], [ %51, %50 ]
  %55 = bitcast %"class.WTF::Vector.981"* %54 to i8*
  %56 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %54, i64 0, i32 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %54, i64 0, i32 0, i32 0, i32 2
  %58 = bitcast %"class.WTF::Vector.981"* %53 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false) #10
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.WTF::Vector.981"* %54 to i64*
  store atomic i64 0, i64* %58 monotonic, align 8
  store atomic i64 %59, i64* %60 monotonic, align 8
  %61 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %53, i64 0, i32 0, i32 0, i32 1
  %62 = load i32, i32* %56, align 4
  %63 = load i32, i32* %61, align 4
  store i32 %63, i32* %56, align 4
  store i32 %62, i32* %61, align 4
  %64 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %53, i64 0, i32 0, i32 0, i32 2
  %65 = load i32, i32* %57, align 4
  %66 = load i32, i32* %64, align 4
  store i32 %66, i32* %57, align 4
  store i32 %65, i32* %64, align 4
  %67 = bitcast %"class.WTF::Vector.981"* %53 to %"class.WTF::ConditionalDestructor.985"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__14pairINS_6StringES4_EELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.985"* %67) #10
  %68 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %54, i64 1
  %69 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %53, i64 1
  %70 = icmp eq %"class.WTF::Vector.981"* %69, %46
  br i1 %70, label %71, label %52

71:                                               ; preds = %52
  %72 = bitcast %"class.WTF::Vector.2873"* %0 to i8**
  %73 = load i8*, i8** %72, align 8
  br label %74

74:                                               ; preds = %48, %71
  %75 = phi i8* [ %73, %71 ], [ %49, %48 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %75) #10
  %76 = bitcast %"class.WTF::Vector.2873"* %0 to i64*
  store atomic i64 %40, i64* %76 monotonic, align 8
  %77 = trunc i64 %39 to i32
  %78 = getelementptr inbounds %"class.WTF::Vector.2873", %"class.WTF::Vector.2873"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %77, i32* %78, align 8
  br label %79

79:                                               ; preds = %74, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorINSt3__14pairINS_6StringES5_EELj0ES0_EEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.12, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.2870"* @_ZN3WTF6VectorIN5blink6MemberIKNS1_12BaseKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2867"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2867", %"class.WTF::Vector.2867"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.2867", %"class.WTF::Vector.2867"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.2870"*, %"class.blink::Member.2870"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.2870", %"class.blink::Member.2870"* %24, i64 %25
  ret %"class.blink::Member.2870"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.981"* @_ZN3WTF6VectorINS0_INSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.2873"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2873", %"class.WTF::Vector.2873"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.2873", %"class.WTF::Vector.2873"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::Vector.981"*, %"class.WTF::Vector.981"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::Vector.981", %"class.WTF::Vector.981"* %24, i64 %25
  ret %"class.WTF::Vector.981"* %26
}

declare void @_ZN5blink23KeyframeEffectModelBase18GetComputedOffsetsINS_6MemberINS_14StringKeyframeEEEEEN3WTF6VectorIdLj0ENS5_18PartitionAllocatorEEERKNS_10HeapVectorIT_Lj0EEE(%"class.WTF::Vector.1129"* sret, %"class.blink::HeapVector.2471"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.2477"* @_ZNK3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2474"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2474", %"class.WTF::Vector.2474"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.2474", %"class.WTF::Vector.2474"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.2477"*, %"class.blink::Member.2477"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.2477", %"class.blink::Member.2477"* %24, i64 %25
  ret %"class.blink::Member.2477"* %26
}

declare zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS2_SF_EENS_18HashTableAddResultISA_S2_EEOT0_OT1_(%"class.WTF::HashTable.2904"*, %"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2904", %"class.WTF::HashTable.2904"* %0, i64 0, i32 0
  %6 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %5, align 8
  %7 = icmp eq %"class.blink::PropertyHandle"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.2904"* %0, %"class.blink::PropertyHandle"* null)
  %10 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"class.blink::PropertyHandle"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable.2904", %"class.WTF::HashTable.2904"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #10
  %18 = and i32 %17, %15
  %19 = zext i32 %18 to i64
  %20 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  %21 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 0
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 1
  %23 = bitcast %union.anon* %22 to i8*
  %24 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %25 = xor i32 %17, -1
  %26 = lshr i32 %17, 23
  %27 = add i32 %26, %25
  %28 = shl i32 %27, 12
  %29 = xor i32 %28, %27
  %30 = lshr i32 %29, 7
  %31 = xor i32 %30, %29
  %32 = shl i32 %31, 2
  %33 = xor i32 %32, %31
  %34 = lshr i32 %33, 20
  %35 = xor i32 %34, %33
  %36 = or i32 %35, 1
  %37 = zext i32 %36 to i64
  br label %38

38:                                               ; preds = %62, %11
  %39 = phi i64 [ 0, %11 ], [ %68, %62 ]
  %40 = phi i64 [ %19, %11 ], [ %70, %62 ]
  %41 = phi %"class.blink::PropertyHandle"* [ null, %11 ], [ %66, %62 ]
  %42 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %12, i64 %40
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #10
  store i32 0, i32* %21, align 8, !alias.scope !27
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #10, !alias.scope !27
  %43 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %42, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4) #10
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #10
  br label %59

59:                                               ; preds = %38, %55, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #10
  br i1 %43, label %71, label %60

60:                                               ; preds = %59
  %61 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %42, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  br i1 %61, label %139, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %42, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 1
  %66 = select i1 %65, %"class.blink::PropertyHandle"* %42, %"class.blink::PropertyHandle"* %41
  %67 = icmp eq i64 %39, 0
  %68 = select i1 %67, i64 %37, i64 %39
  %69 = add i64 %68, %40
  %70 = and i64 %69, %16
  br label %38

71:                                               ; preds = %59
  %72 = icmp eq %"class.blink::PropertyHandle"* %41, null
  br i1 %72, label %73, label %75

73:                                               ; preds = %71
  %74 = bitcast %"class.blink::PropertyHandle"* %42 to i8*
  br label %83

75:                                               ; preds = %71
  %76 = bitcast %"class.blink::PropertyHandle"* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 24, i1 false) #10
  %77 = getelementptr inbounds %"class.WTF::HashTable.2904", %"class.WTF::HashTable.2904"* %0, i64 0, i32 3
  %78 = load i32, i32* %77, align 8
  %79 = add i32 %78, 2147483647
  %80 = and i32 %79, 2147483647
  %81 = and i32 %78, -2147483648
  %82 = or i32 %80, %81
  store i32 %82, i32* %77, align 8
  br label %83

83:                                               ; preds = %73, %75
  %84 = phi i8* [ %74, %73 ], [ %76, %75 ]
  %85 = phi %"class.blink::PropertyHandle"* [ %42, %73 ], [ %41, %75 ]
  %86 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %86, i64 16, i1 false) #10
  %87 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %85, i64 0, i32 2
  %88 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %108, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %108

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = zext i32 %98 to i33
  %100 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %99, i33 1) #10
  %101 = extractvalue { i33, i1 } %100, 1
  %102 = extractvalue { i33, i1 } %100, 0
  %103 = icmp slt i33 %102, 0
  %104 = or i1 %101, %103
  br i1 %104, label %105, label %106, !prof !6

105:                                              ; preds = %96
  call void @llvm.trap() #10
  unreachable

106:                                              ; preds = %96
  %107 = trunc i33 %102 to i32
  store i32 %107, i32* %97, align 4
  br label %108

108:                                              ; preds = %106, %91, %83
  %109 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %110 = bitcast %"class.WTF::AtomicString"* %87 to i64*
  %111 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %87, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  store i64 %109, i64* %110, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %127, label %114

114:                                              ; preds = %108
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  br i1 %118, label %121, label %123

121:                                              ; preds = %114
  %122 = add i32 %120, -1
  store i32 %122, i32* %119, align 4
  br label %123

123:                                              ; preds = %121, %114
  %124 = phi i32 [ %122, %121 ], [ %120, %114 ]
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #10
  br label %127

127:                                              ; preds = %108, %123, %126
  %128 = getelementptr inbounds %"class.WTF::HashTable.2904", %"class.WTF::HashTable.2904"* %0, i64 0, i32 2
  %129 = load i32, i32* %128, align 4
  %130 = add i32 %129, 1
  store i32 %130, i32* %128, align 4
  %131 = getelementptr inbounds %"class.WTF::HashTable.2904", %"class.WTF::HashTable.2904"* %0, i64 0, i32 3
  %132 = load i32, i32* %131, align 8
  %133 = add i32 %132, %130
  %134 = shl i32 %133, 1
  %135 = load i32, i32* %13, align 8
  %136 = icmp ult i32 %134, %135
  br i1 %136, label %139, label %137

137:                                              ; preds = %127
  %138 = call %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.2904"* %0, %"class.blink::PropertyHandle"* %85)
  br label %139

139:                                              ; preds = %60, %127, %137
  %140 = phi i8 [ 1, %127 ], [ 1, %137 ], [ 0, %60 ]
  %141 = phi %"class.blink::PropertyHandle"* [ %85, %127 ], [ %138, %137 ], [ %42, %60 ]
  %142 = insertvalue { %"class.blink::PropertyHandle"*, i8 } undef, %"class.blink::PropertyHandle"* %141, 0
  %143 = insertvalue { %"class.blink::PropertyHandle"*, i8 } %142, i8 %140, 1
  ret { %"class.blink::PropertyHandle"*, i8 } %143
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.2904"*, %"class.blink::PropertyHandle"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2904", %"class.WTF::HashTable.2904"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2904", %"class.WTF::HashTable.2904"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.14, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14PropertyHandleEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"class.blink::PropertyHandle"*
  %37 = call %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSB_(%"class.WTF::HashTable.2904"* %0, %"class.blink::PropertyHandle"* %36, i32 %32, %"class.blink::PropertyHandle"* %1) #10
  ret %"class.blink::PropertyHandle"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSB_(%"class.WTF::HashTable.2904"*, %"class.blink::PropertyHandle"*, i32, %"class.blink::PropertyHandle"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::PropertyHandle", align 8
  %6 = alloca %"class.WTF::HashTable.2904", align 8
  %7 = bitcast %"class.WTF::HashTable.2904"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::HashTable.2904", %"class.WTF::HashTable.2904"* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.2904", %"class.WTF::HashTable.2904"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::HashTable.2904", %"class.WTF::HashTable.2904"* %6, i64 0, i32 2
  %11 = getelementptr inbounds %"class.WTF::HashTable.2904", %"class.WTF::HashTable.2904"* %6, i64 0, i32 3
  %12 = bitcast %"class.WTF::HashTable.2904"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  store %"class.blink::PropertyHandle"* %1, %"class.blink::PropertyHandle"** %8, align 8
  store i32 %2, i32* %9, align 8
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 8
  %13 = getelementptr inbounds %"class.WTF::HashTable.2904", %"class.WTF::HashTable.2904"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::HashTable.2904", %"class.WTF::HashTable.2904"* %0, i64 0, i32 0
  br i1 %15, label %17, label %20

17:                                               ; preds = %4
  %18 = ptrtoint %"class.blink::PropertyHandle"* %1 to i64
  %19 = bitcast %"class.WTF::HashTable.2904"* %6 to i64*
  br label %29

20:                                               ; preds = %4
  %21 = bitcast %"class.blink::PropertyHandle"* %5 to i8*
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 0
  %23 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 1
  %24 = bitcast %union.anon* %23 to i8*
  %25 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %73

26:                                               ; preds = %134
  %27 = bitcast %"class.WTF::HashTable.2904"* %6 to i64*
  %28 = load i64, i64* %27, align 8
  br label %29

29:                                               ; preds = %17, %26
  %30 = phi i64* [ %19, %17 ], [ %27, %26 ]
  %31 = phi i64 [ %18, %17 ], [ %28, %26 ]
  %32 = phi %"class.blink::PropertyHandle"* [ null, %17 ], [ %135, %26 ]
  %33 = phi i32 [ 0, %17 ], [ %136, %26 ]
  %34 = bitcast %"class.WTF::HashTable.2904"* %0 to i64*
  %35 = load i64, i64* %34, align 8
  store atomic i64 %31, i64* %34 monotonic, align 8
  store i32 %2, i32* %13, align 8
  store i64 %35, i64* %30, align 8
  store i32 %33, i32* %9, align 8
  %36 = inttoptr i64 %35 to %"class.blink::PropertyHandle"*
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %69, label %38

38:                                               ; preds = %29
  %39 = icmp eq i32 %33, 0
  br i1 %39, label %67, label %40

40:                                               ; preds = %38
  %41 = zext i32 %33 to i64
  br label %42

42:                                               ; preds = %64, %40
  %43 = phi i64 [ 0, %40 ], [ %65, %64 ]
  %44 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %36, i64 %43, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %36, i64 %43, i32 2, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #10
  br label %64

64:                                               ; preds = %63, %60, %47, %42
  %65 = add nuw nsw i64 %43, 1
  %66 = icmp eq i64 %65, %41
  br i1 %66, label %67, label %42

67:                                               ; preds = %64, %38
  %68 = inttoptr i64 %35 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %68) #10
  store atomic i64 0, i64* %30 monotonic, align 8
  store i32 0, i32* %9, align 8
  store i32 0, i32* %10, align 4
  br label %69

69:                                               ; preds = %29, %67
  %70 = getelementptr inbounds %"class.WTF::HashTable.2904", %"class.WTF::HashTable.2904"* %0, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = and i32 %71, -2147483648
  store i32 %72, i32* %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  ret %"class.blink::PropertyHandle"* %32

73:                                               ; preds = %20, %134
  %74 = phi %"class.blink::PropertyHandle"* [ null, %20 ], [ %135, %134 ]
  %75 = phi i32 [ 0, %20 ], [ %136, %134 ]
  %76 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %16, align 8
  %77 = zext i32 %75 to i64
  %78 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %76, i64 %77
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #10
  store i32 0, i32* %22, align 8, !alias.scope !32
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #10, !alias.scope !32
  %79 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %78, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %5) #10
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %73
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #10
  br label %95

95:                                               ; preds = %73, %91, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #10
  %96 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %78, i64 0, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, 1
  %99 = or i1 %79, %98
  br i1 %99, label %134, label %100

100:                                              ; preds = %95
  %101 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %16, align 8
  %102 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %101, i64 %77
  %103 = call { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS6_S8_S9_EES2_EENSt3__14pairIPS2_bEERKT0_(%"class.WTF::HashTable.2904"* nonnull %6, %"class.blink::PropertyHandle"* dereferenceable(24) %102) #10
  %104 = extractvalue { %"class.blink::PropertyHandle"*, i8 } %103, 0
  %105 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %104, i64 0, i32 2, i32 0, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %121, label %108

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %117

115:                                              ; preds = %108
  %116 = add i32 %114, -1
  store i32 %116, i32* %113, align 4
  br label %117

117:                                              ; preds = %115, %108
  %118 = phi i32 [ %116, %115 ], [ %114, %108 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #10
  br label %121

121:                                              ; preds = %100, %117, %120
  %122 = bitcast %"class.blink::PropertyHandle"* %104 to i8*
  %123 = bitcast %"class.blink::PropertyHandle"* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 8 %123, i64 16, i1 false) #10
  %124 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %104, i64 0, i32 2
  %125 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %101, i64 %77, i32 2
  %126 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = bitcast %"class.WTF::AtomicString"* %125 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.WTF::AtomicString"* %124 to i64*
  store i64 %128, i64* %129, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %126, align 8
  %130 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %16, align 8
  %131 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %130, i64 %77
  %132 = icmp eq %"class.blink::PropertyHandle"* %131, %3
  %133 = select i1 %132, %"class.blink::PropertyHandle"* %104, %"class.blink::PropertyHandle"* %74
  br label %134

134:                                              ; preds = %95, %121
  %135 = phi %"class.blink::PropertyHandle"* [ %74, %95 ], [ %133, %121 ]
  %136 = add i32 %75, 1
  %137 = load i32, i32* %13, align 8
  %138 = icmp eq i32 %136, %137
  br i1 %138, label %26, label %73
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS6_S8_S9_EES2_EENSt3__14pairIPS2_bEERKT0_(%"class.WTF::HashTable.2904"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #7 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.2904", %"class.WTF::HashTable.2904"* %0, i64 0, i32 0
  %5 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2904", %"class.WTF::HashTable.2904"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -1
  %9 = zext i32 %8 to i64
  %10 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #10
  %11 = and i32 %10, %8
  %12 = zext i32 %11 to i64
  %13 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %14 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %16 = bitcast %union.anon* %15 to i8*
  %17 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %18 = xor i32 %10, -1
  %19 = lshr i32 %10, 23
  %20 = add i32 %19, %18
  %21 = shl i32 %20, 12
  %22 = xor i32 %21, %20
  %23 = lshr i32 %22, 7
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 2
  %26 = xor i32 %25, %24
  %27 = lshr i32 %26, 20
  %28 = xor i32 %27, %26
  %29 = or i32 %28, 1
  %30 = zext i32 %29 to i64
  br label %31

31:                                               ; preds = %60, %2
  %32 = phi i64 [ 0, %2 ], [ %64, %60 ]
  %33 = phi i64 [ 0, %2 ], [ %66, %60 ]
  %34 = phi i64 [ %12, %2 ], [ %68, %60 ]
  %35 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 %34
  %36 = ptrtoint %"class.blink::PropertyHandle"* %35 to i64
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #10
  store i32 0, i32* %14, align 8, !alias.scope !37
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #10, !alias.scope !37
  %37 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %35, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #10
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #10
  br label %53

53:                                               ; preds = %31, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #10
  br i1 %37, label %54, label %58

54:                                               ; preds = %53
  %55 = ptrtoint %"class.blink::PropertyHandle"* %35 to i64
  %56 = icmp eq i64 %32, 0
  %57 = select i1 %56, i64 %55, i64 %32
  br label %71

58:                                               ; preds = %53
  %59 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %35, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  br i1 %59, label %69, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %35, i64 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 1
  %64 = select i1 %63, i64 %36, i64 %32
  %65 = icmp eq i64 %33, 0
  %66 = select i1 %65, i64 %30, i64 %33
  %67 = add i64 %66, %34
  %68 = and i64 %67, %9
  br label %31

69:                                               ; preds = %58
  %70 = ptrtoint %"class.blink::PropertyHandle"* %35 to i64
  br label %71

71:                                               ; preds = %69, %54
  %72 = phi i64 [ %57, %54 ], [ %70, %69 ]
  %73 = phi i8 [ 0, %54 ], [ 1, %69 ]
  %74 = inttoptr i64 %72 to %"class.blink::PropertyHandle"*
  %75 = insertvalue { %"class.blink::PropertyHandle"*, i8 } undef, %"class.blink::PropertyHandle"* %74, 0
  %76 = insertvalue { %"class.blink::PropertyHandle"*, i8 } %75, i8 %73, 1
  ret { %"class.blink::PropertyHandle"*, i8 } %76
}

declare i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::PropertyHandle"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS6_S8_S9_EES2_EEPKS2_RKT0_(%"class.WTF::HashTable.2904"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #7 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.2904", %"class.WTF::HashTable.2904"* %0, i64 0, i32 0
  %5 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %4, align 8
  %6 = icmp eq %"class.blink::PropertyHandle"* %5, null
  br i1 %6, label %64, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::HashTable.2904", %"class.WTF::HashTable.2904"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = zext i32 %10 to i64
  %12 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #10
  %13 = and i32 %12, %10
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 %14
  %16 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %15, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  br i1 %16, label %64, label %17

17:                                               ; preds = %7
  %18 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %19 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %20 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %21 = bitcast %union.anon* %20 to i8*
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %23 = xor i32 %12, -1
  %24 = lshr i32 %12, 23
  %25 = add i32 %24, %23
  %26 = shl i32 %25, 12
  %27 = xor i32 %26, %25
  %28 = lshr i32 %27, 7
  %29 = xor i32 %28, %27
  %30 = shl i32 %29, 2
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 20
  %33 = xor i32 %32, %31
  %34 = or i32 %33, 1
  %35 = zext i32 %34 to i64
  br label %36

36:                                               ; preds = %17, %57
  %37 = phi %"class.blink::PropertyHandle"* [ %15, %17 ], [ %62, %57 ]
  %38 = phi i64 [ %14, %17 ], [ %61, %57 ]
  %39 = phi i64 [ 0, %17 ], [ %59, %57 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #10
  store i32 0, i32* %19, align 8, !alias.scope !42
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #10, !alias.scope !42
  %40 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %37, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #10
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #10
  br label %56

56:                                               ; preds = %36, %52, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #10
  br i1 %40, label %64, label %57

57:                                               ; preds = %56
  %58 = icmp eq i64 %39, 0
  %59 = select i1 %58, i64 %35, i64 %39
  %60 = add i64 %59, %38
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 %61
  %63 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %62, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  br i1 %63, label %64, label %36

64:                                               ; preds = %57, %56, %7, %2
  %65 = phi %"class.blink::PropertyHandle"* [ null, %2 ], [ %15, %7 ], [ %62, %57 ], [ null, %56 ]
  ret %"class.blink::PropertyHandle"* %65
}

declare zeroext i1 @_ZNK5blink14StringKeyframe14HasCssPropertyEv(%"class.blink::StringKeyframe"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::KeyframeEffectModel"* @_ZN5blink25MakeGarbageCollectedTraitINS_19KeyframeEffectModelINS_14StringKeyframeEEEE4CallIJRNS_10HeapVectorINS_6MemberIS2_EELj0EEERNS_11EffectModel18CompositeOperationEPNS_20LinearTimingFunctionEEEEPS3_DpOT_(%"class.blink::HeapVector.2471"* dereferenceable(16), i32* dereferenceable(4), %"class.blink::LinearTimingFunction"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_11EffectModelEEEPhm(i64 88) #10
  %6 = bitcast i8* %5 to %"class.blink::KeyframeEffectModel"*
  %7 = load i32, i32* %1, align 4
  %8 = bitcast %"class.blink::LinearTimingFunction"** %2 to %"class.blink::TimingFunction"**
  %9 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %8, align 8
  %10 = icmp eq %"class.blink::TimingFunction"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 1 monotonic
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0)) #10
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %18

18:                                               ; preds = %3, %11, %15
  %19 = ptrtoint %"class.blink::TimingFunction"* %9 to i64
  %20 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink23KeyframeEffectModelBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds i8, i8* %5, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #10
  %22 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_19InterpolationEffectEEEPhm(i64 24) #10
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #10
  %24 = getelementptr inbounds i8, i8* %22, i64 -4
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  store atomic i16 %27, i16* %25 release, align 2
  %28 = getelementptr inbounds i8, i8* %5, i64 32
  %29 = bitcast i8* %28 to i8**
  store i8* %22, i8** %29, align 8
  %30 = getelementptr inbounds i8, i8* %5, i64 40
  %31 = bitcast i8* %30 to i32*
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds i8, i8* %5, i64 48
  %33 = bitcast i8* %32 to <2 x double>*
  store <2 x double> <double 0x7FF8000000000000, double 0.000000e+00>, <2 x double>* %33, align 8
  %34 = getelementptr inbounds i8, i8* %5, i64 64
  %35 = bitcast i8* %34 to i32*
  store i32 %7, i32* %35, align 8
  %36 = getelementptr inbounds i8, i8* %5, i64 72
  %37 = bitcast i8* %36 to i64*
  store i64 %19, i64* %37, align 8
  %38 = getelementptr inbounds i8, i8* %5, i64 80
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds i8, i8* %5, i64 81
  store i8 1, i8* %39, align 1
  %40 = getelementptr inbounds i8, i8* %5, i64 82
  store i8 0, i8* %40, align 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink19KeyframeEffectModelINS_14StringKeyframeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %41 = bitcast i8* %21 to %"class.WTF::Vector"*
  %42 = getelementptr inbounds %"class.blink::HeapVector.2471", %"class.blink::HeapVector.2471"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::Member.2477"*, %"class.blink::Member.2477"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::HeapVector.2471", %"class.blink::HeapVector.2471"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE6AppendINS2_INS1_14StringKeyframeEEEEEvPKT_j(%"class.WTF::Vector"* %41, %"class.blink::Member.2477"* %43, i32 %45) #10
  %46 = getelementptr inbounds i8, i8* %5, i64 -4
  %47 = bitcast i8* %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = or i16 %48, 1
  store atomic i16 %49, i16* %47 release, align 2
  ret %"class.blink::KeyframeEffectModel"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11EffectModelEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11EffectModelEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11EffectModelEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11EffectModelEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11EffectModelEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11EffectModelEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::EffectModel"*
  %4 = bitcast i8* %1 to void (%"class.blink::EffectModel"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::EffectModel"*, %"class.blink::Visitor"*)**, void (%"class.blink::EffectModel"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::EffectModel"*, %"class.blink::Visitor"*)*, void (%"class.blink::EffectModel"*, %"class.blink::Visitor"*)** %5, i64 7
  %7 = load void (%"class.blink::EffectModel"*, %"class.blink::Visitor"*)*, void (%"class.blink::EffectModel"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::EffectModel"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_11EffectModelEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::EffectModel"*
  %3 = bitcast i8* %0 to void (%"class.blink::EffectModel"*)***
  %4 = load void (%"class.blink::EffectModel"*)**, void (%"class.blink::EffectModel"*)*** %3, align 8
  %5 = load void (%"class.blink::EffectModel"*)*, void (%"class.blink::EffectModel"*)** %4, align 8
  tail call void %5(%"class.blink::EffectModel"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11EffectModelEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i8 1 }
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23KeyframeEffectModelBaseD2Ev(%"class.blink::KeyframeEffectModelBase"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink23KeyframeEffectModelBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 10, i32 0
  %4 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %3, align 8
  %5 = icmp eq %"class.blink::TimingFunction"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.blink::TimingFunction"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.blink::TimingFunction"*)***
  %15 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %15, i64 1
  %17 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %16, align 8
  tail call void %17(%"class.blink::TimingFunction"* nonnull %13) #10
  br label %18

18:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19KeyframeEffectModelINS_14StringKeyframeEED0Ev(%"class.blink::KeyframeEffectModel"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::KeyframeEffectModel", %"class.blink::KeyframeEffectModel"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink23KeyframeEffectModelBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::KeyframeEffectModel", %"class.blink::KeyframeEffectModel"* %0, i64 0, i32 0, i32 10, i32 0
  %4 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %3, align 8
  %5 = icmp eq %"class.blink::TimingFunction"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.blink::TimingFunction"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.blink::TimingFunction"*)***
  %15 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %15, i64 1
  %17 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %16, align 8
  tail call void %17(%"class.blink::TimingFunction"* nonnull %13) #10
  br label %18

18:                                               ; preds = %1, %6, %11
  ret void
}

declare zeroext i1 @_ZNK5blink23KeyframeEffectModelBase6SampleEidNS_18AnimationTimeDeltaERNS_10HeapVectorINS_6MemberINS_13InterpolationEEELj0EEE(%"class.blink::KeyframeEffectModelBase"*, i32, double, double, %"class.blink::HeapVector.2915"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink23KeyframeEffectModelBase7AffectsERKNS_14PropertyHandleE(%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  tail call void @_ZNK5blink23KeyframeEffectModelBase20EnsureKeyframeGroupsEv(%"class.blink::KeyframeEffectModelBase"* %0) #10
  %3 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::HeapHashMap"*, %"class.blink::HeapHashMap"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %4, i64 0, i32 0, i32 0
  %6 = tail call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EES2_EEPKS8_RKT0_(%"class.WTF::HashTable"* %5, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  %7 = icmp ne %"struct.WTF::KeyValuePair"* %6, null
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink23KeyframeEffectModelBase30AffectedByUnderlyingAnimationsEv(%"class.blink::KeyframeEffectModelBase"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call zeroext i1 @_ZNK5blink23KeyframeEffectModelBase13IsReplaceOnlyEv(%"class.blink::KeyframeEffectModelBase"* %0) #10
  %3 = xor i1 %2, true
  ret i1 %3
}

declare zeroext i1 @_ZNK5blink23KeyframeEffectModelBase24IsTransformRelatedEffectEv(%"class.blink::KeyframeEffectModelBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink23KeyframeEffectModelBase21IsKeyframeEffectModelEv(%"class.blink::KeyframeEffectModelBase"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZNK5blink23KeyframeEffectModelBase5TraceEPNS_7VisitorE(%"class.blink::KeyframeEffectModelBase"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23KeyframeEffectModelBase20GetComputedKeyframesEPNS_7ElementE(%"class.blink::HeapVector"* noalias sret, %"class.blink::KeyframeEffectModelBase"*, %"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %1, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector"* %4, %"class.WTF::Vector"* dereferenceable(16) %5) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19KeyframeEffectModelINS_14StringKeyframeEE27IsStringKeyframeEffectModelEv(%"class.blink::KeyframeEffectModel"*) unnamed_addr #7 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19KeyframeEffectModelINS_14StringKeyframeEE31IsTransitionKeyframeEffectModelEv(%"class.blink::KeyframeEffectModel"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::KeyframeEffectModelBase"* @_ZN5blink19KeyframeEffectModelINS_14StringKeyframeEE5CloneEv(%"class.blink::KeyframeEffectModel"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::HeapVector.2471", align 8
  %3 = alloca %"class.blink::StringKeyframe"*, align 8
  %4 = bitcast %"class.blink::HeapVector.2471"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.blink::HeapVector.2471", %"class.blink::HeapVector.2471"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::HeapVector.2471", %"class.blink::HeapVector.2471"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.blink::HeapVector.2471", %"class.blink::HeapVector.2471"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false) #10
  %8 = getelementptr inbounds %"class.blink::KeyframeEffectModel", %"class.blink::KeyframeEffectModel"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::KeyframeEffectModel", %"class.blink::KeyframeEffectModel"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::StringKeyframe"** %3 to i8*
  %17 = bitcast %"class.blink::StringKeyframe"** %3 to %"class.blink::Keyframe"**
  %18 = getelementptr inbounds %"class.blink::HeapVector.2471", %"class.blink::HeapVector.2471"* %2, i64 0, i32 0
  br label %24

19:                                               ; preds = %51, %1
  %20 = getelementptr inbounds %"class.blink::KeyframeEffectModel", %"class.blink::KeyframeEffectModel"* %0, i64 0, i32 0, i32 8
  %21 = getelementptr inbounds %"class.blink::KeyframeEffectModel", %"class.blink::KeyframeEffectModel"* %0, i64 0, i32 0, i32 10
  %22 = call %"class.blink::KeyframeEffectModel"* @_ZN5blink25MakeGarbageCollectedTraitINS_19KeyframeEffectModelINS_14StringKeyframeEEEE4CallIJRNS_10HeapVectorINS_6MemberIS2_EELj0EEERNS_11EffectModel18CompositeOperationER13scoped_refptrINS_14TimingFunctionEEEEEPS3_DpOT_(%"class.blink::HeapVector.2471"* nonnull dereferenceable(16) %2, i32* dereferenceable(4) %20, %class.scoped_refptr.22* dereferenceable(8) %21) #10
  %23 = bitcast %"class.blink::KeyframeEffectModel"* %22 to %"class.blink::KeyframeEffectModelBase"*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #10
  ret %"class.blink::KeyframeEffectModelBase"* %23

24:                                               ; preds = %15, %51
  %25 = phi %"class.blink::Member"* [ %9, %15 ], [ %52, %51 ]
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.blink::Keyframe"*, %"class.blink::Keyframe"** %26, align 8
  %28 = bitcast %"class.blink::Keyframe"* %27 to %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)***
  %29 = load %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)**, %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)*, %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)** %29, i64 3
  %31 = load %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)*, %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)** %30, align 8
  %32 = call %"class.blink::Keyframe"* %31(%"class.blink::Keyframe"* %27) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  store %"class.blink::Keyframe"* %32, %"class.blink::Keyframe"** %17, align 8
  %33 = load i32, i32* %7, align 4
  %34 = load i32, i32* %6, align 8
  %35 = icmp eq i32 %33, %34
  br i1 %35, label %50, label %36, !prof !6

36:                                               ; preds = %24
  %37 = ptrtoint %"class.blink::Keyframe"* %32 to i64
  %38 = load %"class.blink::Member.2477"*, %"class.blink::Member.2477"** %5, align 8
  %39 = zext i32 %33 to i64
  %40 = getelementptr inbounds %"class.blink::Member.2477", %"class.blink::Member.2477"* %38, i64 %39
  %41 = bitcast %"class.blink::Member.2477"* %40 to i64*
  store atomic i64 %37, i64* %41 monotonic, align 8
  %42 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %36
  %45 = bitcast %"class.blink::Keyframe"* %32 to i8*
  %46 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %45) #10
  br label %47

47:                                               ; preds = %44, %36
  %48 = load i32, i32* %7, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %7, align 4
  br label %51

50:                                               ; preds = %24
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2474"* nonnull %18, %"class.blink::StringKeyframe"** nonnull dereferenceable(8) %3) #10
  br label %51

51:                                               ; preds = %47, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  %52 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %25, i64 1
  %53 = icmp eq %"class.blink::Member"* %52, %13
  br i1 %53, label %19, label %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_19InterpolationEffectEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_19InterpolationEffectEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_19InterpolationEffectEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_19InterpolationEffectEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19InterpolationEffectEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19InterpolationEffectEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InterpolationEffect"*
  tail call void @_ZNK5blink19InterpolationEffect5TraceEPNS_7VisitorE(%"class.blink::InterpolationEffect"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_19InterpolationEffectEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink19InterpolationEffect5TraceEPNS_7VisitorE(%"class.blink::InterpolationEffect"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE6AppendINS2_INS1_14StringKeyframeEEEEEvPKT_j(%"class.WTF::Vector"*, %"class.blink::Member.2477"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %22

13:                                               ; preds = %3
  %14 = lshr i32 %11, 2
  %15 = add nuw i32 %11, 1
  %16 = add i32 %15, %14
  %17 = icmp ugt i32 %16, 4
  %18 = select i1 %17, i32 %16, i32 4
  %19 = icmp ugt i32 %18, %9
  %20 = select i1 %19, i32 %18, i32 %9
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %20) #10
  %21 = load i32, i32* %7, align 4
  br label %22

22:                                               ; preds = %13, %3
  %23 = phi i32 [ %21, %13 ], [ %8, %3 ]
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %9, %23
  br i1 %27, label %29, label %28

28:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %22
  %30 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0), i8* %30, i8* %31) #10
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #10
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  %39 = zext i32 %2 to i64
  %40 = getelementptr inbounds %"class.blink::Member.2477", %"class.blink::Member.2477"* %1, i64 %39
  %41 = icmp eq i32 %2, 0
  br i1 %41, label %63, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::Member"*, %"class.blink::Member"** %43, align 8
  %45 = load i32, i32* %7, align 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %44, i64 %46
  br label %48

48:                                               ; preds = %42, %59
  %49 = phi %"class.blink::Member"* [ %60, %59 ], [ %47, %42 ]
  %50 = phi %"class.blink::Member.2477"* [ %61, %59 ], [ %1, %42 ]
  %51 = bitcast %"class.blink::Member.2477"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.blink::Member"* %49 to i64*
  store atomic i64 %52, i64* %53 monotonic, align 8
  %54 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %48
  %57 = inttoptr i64 %52 to i8*
  %58 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %57) #10
  br label %59

59:                                               ; preds = %56, %48
  %60 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %49, i64 1
  %61 = getelementptr inbounds %"class.blink::Member.2477", %"class.blink::Member.2477"* %50, i64 1
  %62 = icmp eq %"class.blink::Member.2477"* %61, %40
  br i1 %62, label %63, label %48

63:                                               ; preds = %59, %38
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8KeyframeEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.2926"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking.2926"* %15 to i64
  %17 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.2926", %"class.blink::HeapVectorBacking.2926"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !6

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8KeyframeEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.2926"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking.2926"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.2926"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !11

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.2926", %"class.blink::HeapVectorBacking.2926"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.2926", %"class.blink::HeapVectorBacking.2926"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8KeyframeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.26, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.2926"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.27, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.2926"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.2926"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([157 x i8], [157 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8KeyframeEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !6

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8KeyframeEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink23KeyframeEffectModelBase20EnsureKeyframeGroupsEv(%"class.blink::KeyframeEffectModelBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EES2_EEPKS8_RKT0_(%"class.WTF::HashTable"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #7 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %66, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = zext i32 %10 to i64
  %12 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #10
  %13 = and i32 %12, %10
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %14
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 0
  %17 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %16, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  br i1 %17, label %66, label %18

18:                                               ; preds = %7
  %19 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %20 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %22 = bitcast %union.anon* %21 to i8*
  %23 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %24 = xor i32 %12, -1
  %25 = lshr i32 %12, 23
  %26 = add i32 %25, %24
  %27 = shl i32 %26, 12
  %28 = xor i32 %27, %26
  %29 = lshr i32 %28, 7
  %30 = xor i32 %29, %28
  %31 = shl i32 %30, 2
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 20
  %34 = xor i32 %33, %32
  %35 = or i32 %34, 1
  %36 = zext i32 %35 to i64
  br label %37

37:                                               ; preds = %18, %58
  %38 = phi %"class.blink::PropertyHandle"* [ %16, %18 ], [ %64, %58 ]
  %39 = phi i64 [ %14, %18 ], [ %62, %58 ]
  %40 = phi i64 [ 0, %18 ], [ %60, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #10
  store i32 0, i32* %20, align 8, !alias.scope !47
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #10, !alias.scope !47
  %41 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %38, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #10
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #10
  br label %57

57:                                               ; preds = %37, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #10
  br i1 %41, label %66, label %58

58:                                               ; preds = %57
  %59 = icmp eq i64 %40, 0
  %60 = select i1 %59, i64 %36, i64 %40
  %61 = add i64 %60, %39
  %62 = and i64 %61, %11
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 0
  %65 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %64, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  br i1 %65, label %66, label %37

66:                                               ; preds = %58, %57, %7, %2
  %67 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %15, %7 ], [ %63, %58 ], [ null, %57 ]
  ret %"struct.WTF::KeyValuePair"* %67
}

declare zeroext i1 @_ZNK5blink23KeyframeEffectModelBase13IsReplaceOnlyEv(%"class.blink::KeyframeEffectModelBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Member"* null, %"class.blink::Member"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8KeyframeEEEEEmm(i64 %9) #10
  %11 = lshr i64 %10, 3
  %12 = tail call %"class.blink::HeapVectorBacking.2926"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %11) #10
  %13 = ptrtoint %"class.blink::HeapVectorBacking.2926"* %12 to i64
  %14 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = trunc i64 %11 to i32
  store i32 %15, i32* %6, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  %18 = bitcast %"class.blink::HeapVectorBacking.2926"* %12 to %"class.blink::Member"*
  br i1 %17, label %23, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::HeapVectorBacking.2926", %"class.blink::HeapVectorBacking.2926"* %12, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #10
  %22 = load %"class.blink::Member"*, %"class.blink::Member"** %5, align 8
  br label %23

23:                                               ; preds = %2, %8, %19
  %24 = phi %"class.blink::Member"* [ null, %2 ], [ %18, %8 ], [ %22, %19 ]
  %25 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member"*, %"class.blink::Member"** %28, align 8
  %30 = icmp ne %"class.blink::Member"* %24, null
  %31 = icmp ne %"class.blink::Member"* %29, null
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %53, !prof !11

33:                                               ; preds = %23
  %34 = load i32, i32* %25, align 4
  %35 = zext i32 %34 to i64
  %36 = bitcast %"class.blink::Member"* %24 to i8*
  %37 = bitcast %"class.blink::Member"* %29 to i8*
  %38 = shl nuw nsw i64 %35, 3
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %36, i8* nonnull %37, i64 %38) #10
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %53, label %40

40:                                               ; preds = %33, %50
  %41 = phi i64 [ %43, %50 ], [ %35, %33 ]
  %42 = phi %"class.blink::Member"* [ %51, %50 ], [ %24, %33 ]
  %43 = add nsw i64 %41, -1
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::Member"* %42 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %46, %40
  %51 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %42, i64 1
  %52 = icmp eq i64 %43, 0
  br i1 %52, label %53, label %40

53:                                               ; preds = %50, %23, %33
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2474"*, %"class.blink::StringKeyframe"** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2474", %"class.WTF::Vector.2474"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2474", %"class.WTF::Vector.2474"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2474"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.2474", %"class.WTF::Vector.2474"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.2477"*, %"class.blink::Member.2477"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.2477", %"class.blink::Member.2477"* %16, i64 %18
  %20 = bitcast %"class.blink::StringKeyframe"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.2477"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::KeyframeEffectModel"* @_ZN5blink25MakeGarbageCollectedTraitINS_19KeyframeEffectModelINS_14StringKeyframeEEEE4CallIJRNS_10HeapVectorINS_6MemberIS2_EELj0EEERNS_11EffectModel18CompositeOperationER13scoped_refptrINS_14TimingFunctionEEEEEPS3_DpOT_(%"class.blink::HeapVector.2471"* dereferenceable(16), i32* dereferenceable(4), %class.scoped_refptr.22* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_11EffectModelEEEPhm(i64 88) #10
  %6 = bitcast i8* %5 to %"class.blink::KeyframeEffectModel"*
  %7 = load i32, i32* %1, align 4
  %8 = getelementptr inbounds %class.scoped_refptr.22, %class.scoped_refptr.22* %2, i64 0, i32 0
  %9 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %8, align 8
  %10 = icmp eq %"class.blink::TimingFunction"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 1 monotonic
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0)) #10
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %18

18:                                               ; preds = %3, %11, %15
  %19 = ptrtoint %"class.blink::TimingFunction"* %9 to i64
  %20 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink23KeyframeEffectModelBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds i8, i8* %5, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #10
  %22 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_19InterpolationEffectEEEPhm(i64 24) #10
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #10
  %24 = getelementptr inbounds i8, i8* %22, i64 -4
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  store atomic i16 %27, i16* %25 release, align 2
  %28 = getelementptr inbounds i8, i8* %5, i64 32
  %29 = bitcast i8* %28 to i8**
  store i8* %22, i8** %29, align 8
  %30 = getelementptr inbounds i8, i8* %5, i64 40
  %31 = bitcast i8* %30 to i32*
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds i8, i8* %5, i64 48
  %33 = bitcast i8* %32 to <2 x double>*
  store <2 x double> <double 0x7FF8000000000000, double 0.000000e+00>, <2 x double>* %33, align 8
  %34 = getelementptr inbounds i8, i8* %5, i64 64
  %35 = bitcast i8* %34 to i32*
  store i32 %7, i32* %35, align 8
  %36 = getelementptr inbounds i8, i8* %5, i64 72
  %37 = bitcast i8* %36 to i64*
  store i64 %19, i64* %37, align 8
  %38 = getelementptr inbounds i8, i8* %5, i64 80
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds i8, i8* %5, i64 81
  store i8 1, i8* %39, align 1
  %40 = getelementptr inbounds i8, i8* %5, i64 82
  store i8 0, i8* %40, align 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink19KeyframeEffectModelINS_14StringKeyframeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %41 = bitcast i8* %21 to %"class.WTF::Vector"*
  %42 = getelementptr inbounds %"class.blink::HeapVector.2471", %"class.blink::HeapVector.2471"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::Member.2477"*, %"class.blink::Member.2477"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::HeapVector.2471", %"class.blink::HeapVector.2471"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE6AppendINS2_INS1_14StringKeyframeEEEEEvPKT_j(%"class.WTF::Vector"* %41, %"class.blink::Member.2477"* %43, i32 %45) #10
  %46 = getelementptr inbounds i8, i8* %5, i64 -4
  %47 = bitcast i8* %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = or i16 %48, 1
  store atomic i16 %49, i16* %47 release, align 2
  ret %"class.blink::KeyframeEffectModel"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.2477"* @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2474"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2474", %"class.WTF::Vector.2474"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.2474", %"class.WTF::Vector.2474"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.2477"*, %"class.blink::Member.2477"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.2477", %"class.blink::Member.2477"* %24, i64 %25
  ret %"class.blink::Member.2477"* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink12_GLOBAL__N_117ConvertObjectFormEPNS_7ElementERNS_8DocumentERKN2v85LocalINS5_6ObjectEEEPNS_11ScriptStateERNS_14ExceptionStateE: argument 0"}
!5 = distinct !{!5, !"_ZN5blink12_GLOBAL__N_117ConvertObjectFormEPNS_7ElementERNS_8DocumentERKN2v85LocalINS5_6ObjectEEEPNS_11ScriptStateERNS_14ExceptionStateE"}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = !{!8, !4}
!8 = distinct !{!8, !9, !"_ZN5blink12_GLOBAL__N_122ParseCompositePropertyEPKNS_27BasePropertyIndexedKeyframeE: argument 0"}
!9 = distinct !{!9, !"_ZN5blink12_GLOBAL__N_122ParseCompositePropertyEPKNS_27BasePropertyIndexedKeyframeE"}
!10 = !{!8}
!11 = !{!"branch_weights", i32 2000, i32 1}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN5blink12_GLOBAL__N_116ConvertArrayFormEPNS_7ElementERNS_8DocumentENS_14ScriptIteratorEPNS_11ScriptStateERNS_14ExceptionStateE: argument 0"}
!14 = distinct !{!14, !"_ZN5blink12_GLOBAL__N_116ConvertArrayFormEPNS_7ElementERNS_8DocumentENS_14ScriptIteratorEPNS_11ScriptStateERNS_14ExceptionStateE"}
!15 = !{!16, !18}
!16 = distinct !{!16, !17, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!17 = distinct !{!17, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!18 = distinct !{!18, !19, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!19 = distinct !{!19, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!20 = !{!21, !23}
!21 = distinct !{!21, !22, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!22 = distinct !{!22, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!23 = distinct !{!23, !24, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!24 = distinct !{!24, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!25 = !{!"branch_weights", i32 1, i32 1048575}
!26 = !{!"branch_weights", i32 2146410443, i32 1073205}
!27 = !{!28, !30}
!28 = distinct !{!28, !29, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!29 = distinct !{!29, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!30 = distinct !{!30, !31, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!31 = distinct !{!31, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!32 = !{!33, !35}
!33 = distinct !{!33, !34, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!34 = distinct !{!34, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!35 = distinct !{!35, !36, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!36 = distinct !{!36, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!37 = !{!38, !40}
!38 = distinct !{!38, !39, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!39 = distinct !{!39, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!40 = distinct !{!40, !41, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!41 = distinct !{!41, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!42 = !{!43, !45}
!43 = distinct !{!43, !44, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!44 = distinct !{!44, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!45 = distinct !{!45, !46, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!46 = distinct !{!46, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!47 = !{!48, !50}
!48 = distinct !{!48, !49, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!49 = distinct !{!49, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!50 = distinct !{!50, !51, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!51 = distinct !{!51, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
