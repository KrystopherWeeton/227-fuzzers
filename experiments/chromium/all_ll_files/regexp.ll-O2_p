; ModuleID = '../../third_party/re2/src/re2/regexp.cc'
source_filename = "../../third_party/re2/src/re2/regexp.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.re2::Mutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.std::__1::map" = type { %"class.std::__1::__tree.15" }
%"class.std::__1::__tree.15" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i64 }
%"struct.std::__1::once_flag" = type { i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"class.re2::Regexp" = type { i8, i8, i16, i16, i16, %union.anon, %"class.re2::Regexp"*, %union.anon.0 }
%union.anon = type { %"class.re2::Regexp"** }
%union.anon.0 = type { %struct.anon.1 }
%struct.anon.1 = type { i32, %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.2 }
%union.anon.2 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.re2::CharClassBuilder" = type { i32, i32, i32, %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%class.LogMessage = type { i8, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.3 }
%struct.anon.3 = type { i8 }
%"class.re2::CharClass" = type <{ i8, [3 x i8], i32, %"struct.re2::RuneRange"*, i32, [4 x i8] }>
%"struct.re2::RuneRange" = type { i32, i32 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.re2::RuneRange", [4 x i8] }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.std::__1::__tree_node.107" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type.104" }
%"struct.std::__1::__value_type.104" = type { %"struct.std::__1::pair.105" }
%"struct.std::__1::pair.105" = type <{ %"class.re2::Regexp"*, i32, [4 x i8] }>
%"class.std::__1::tuple.115" = type { %"struct.std::__1::__tuple_impl.116" }
%"struct.std::__1::__tuple_impl.116" = type { %"class.std::__1::__tuple_leaf.117" }
%"class.std::__1::__tuple_leaf.117" = type { %class.anon* }
%class.anon = type { i8 }
%"class.std::__1::__call_once_param" = type { %"class.std::__1::tuple.115"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.re2::Regexp"**, %"class.re2::Regexp"**, %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.re2::Regexp"** }
%"class.std::__1::__vector_base_common" = type { i8 }
%struct.anon = type { i32, i32 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.re2::RegexpStatus" = type { i32, %"class.re2::StringPiece", %"class.std::__1::basic_string"* }
%"class.re2::StringPiece" = type { i8*, i64 }
%"class.re2::NumCapturesWalker" = type <{ %"class.re2::Regexp::Walker", i32, [4 x i8] }>
%"class.re2::Regexp::Walker" = type { i32 (...)**, %"class.std::__1::stack", i8, i32 }
%"class.std::__1::stack" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.34" }
%"struct.std::__1::__split_buffer" = type { %"struct.re2::WalkState"**, %"struct.re2::WalkState"**, %"struct.re2::WalkState"**, %"class.std::__1::__compressed_pair.29" }
%"struct.re2::WalkState" = type { %"class.re2::Regexp"*, i32, i32, i32, i32, i32* }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.re2::WalkState"** }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::map.38" = type { %"class.std::__1::__tree.39" }
%"class.std::__1::__tree.39" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.40", %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.re2::NamedCapturesWalker" = type { %"class.re2::Regexp::Walker", %"class.std::__1::map.38"* }
%"class.std::__1::__tree_node.68" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.69" }
%"struct.std::__1::pair.69" = type <{ %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::map.49" = type { %"class.std::__1::__tree.50" }
%"class.std::__1::__tree.50" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.51", %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.re2::CaptureNamesWalker" = type { %"class.re2::Regexp::Walker", %"class.std::__1::map.49"* }
%"class.std::__1::__tree_node.88" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.86" }
%"struct.std::__1::__value_type.86" = type { %"struct.std::__1::pair.87" }
%"struct.std::__1::pair.87" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"struct.re2::RuneRange"*, %"struct.re2::RuneRange"*, %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.re2::RuneRange"* }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::tuple.73" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%union.pthread_rwlockattr_t = type { i64 }
%"struct.std::__1::__split_buffer.123" = type { %"struct.re2::WalkState"**, %"struct.re2::WalkState"**, %"struct.re2::WalkState"**, %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.30", %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.std::__1::allocator.32"* }
%"class.std::__1::allocator.32" = type { i8 }

$_ZN10LogMessageD2Ev = comdat any

$_ZN3re26Regexp6WalkerIiED2Ev = comdat any

$_ZN3re219NamedCapturesWalkerD2Ev = comdat any

$_ZN3re218CaptureNamesWalkerD2Ev = comdat any

$_ZNSt3__16__treeIN3re29RuneRangeENS1_13RuneRangeLessENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZN3re217NumCapturesWalkerD0Ev = comdat any

$_ZN3re217NumCapturesWalker8PreVisitEPNS_6RegexpEiPb = comdat any

$_ZN3re26Regexp6WalkerIiE9PostVisitEPS0_iiPii = comdat any

$_ZN3re26Regexp6WalkerIiE4CopyEi = comdat any

$_ZN3re217NumCapturesWalker10ShortVisitEPNS_6RegexpEi = comdat any

$_ZN3re26Regexp6WalkerIiED0Ev = comdat any

$_ZN3re26Regexp6WalkerIiE8PreVisitEPS0_iPb = comdat any

$_ZN3re26Regexp6WalkerIiE5ResetEv = comdat any

$_ZN3re219NamedCapturesWalkerD0Ev = comdat any

$_ZN3re219NamedCapturesWalker8PreVisitEPNS_6RegexpEiPb = comdat any

$_ZN3re219NamedCapturesWalker10ShortVisitEPNS_6RegexpEi = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZN3re218CaptureNamesWalkerD0Ev = comdat any

$_ZN3re218CaptureNamesWalker8PreVisitEPNS_6RegexpEiPb = comdat any

$_ZN3re218CaptureNamesWalker10ShortVisitEPNS_6RegexpEi = comdat any

$_ZNSt3__16__treeINS_12__value_typeIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorIPN3re26RegexpENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZN3re26Regexp6WalkerIiE12WalkInternalEPS0_ib = comdat any

$_ZNSt3__15dequeIN3re29WalkStateIiEENS_9allocatorIS3_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPN3re29WalkStateIiEENS_9allocatorIS4_EEE9push_backEOS4_ = comdat any

$_ZNSt3__114__split_bufferIPN3re29WalkStateIiEENS_9allocatorIS4_EEE10push_frontEOS4_ = comdat any

$_ZNSt3__114__split_bufferIPN3re29WalkStateIiEERNS_9allocatorIS4_EEE10push_frontERKS4_ = comdat any

$_ZTVN3re217NumCapturesWalkerE = comdat any

$_ZTVN3re26Regexp6WalkerIiEE = comdat any

$_ZTVN3re219NamedCapturesWalkerE = comdat any

$_ZTVN3re218CaptureNamesWalkerE = comdat any

@.str = private unnamed_addr constant [40 x i8] c"../../third_party/re2/src/re2/regexp.cc\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"Regexp not destroyed.\00", align 1
@_ZN3re2L9ref_mutexE = internal unnamed_addr global %"class.re2::Mutex"* null, align 8
@_ZN3re2L7ref_mapE = internal unnamed_addr global %"class.std::__1::map"* null, align 8
@_ZZN3re26Regexp6IncrefEvE8ref_once = internal global %"struct.std::__1::once_flag" zeroinitializer, align 8
@.str.2 = private unnamed_addr constant [21 x i8] c"Bad reference count \00", align 1
@_ZN3re2L13kErrorStringsE = internal unnamed_addr constant [15 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.21, i32 0, i32 0)], align 16
@.str.3 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c":\00", align 1
@_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@.str.5 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@stderr = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.6 = private unnamed_addr constant [33 x i8] c"Unexpected op in Regexp::Equal: \00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"no error\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"unexpected error\00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"invalid escape sequence\00", align 1
@.str.10 = private unnamed_addr constant [24 x i8] c"invalid character class\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"invalid character class range\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"missing ]\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"missing )\00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"unexpected )\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"trailing \5C\00", align 1
@.str.16 = private unnamed_addr constant [36 x i8] c"no argument for repetition operator\00", align 1
@.str.17 = private unnamed_addr constant [24 x i8] c"invalid repetition size\00", align 1
@.str.18 = private unnamed_addr constant [24 x i8] c"bad repetition operator\00", align 1
@.str.19 = private unnamed_addr constant [22 x i8] c"invalid perl operator\00", align 1
@.str.20 = private unnamed_addr constant [14 x i8] c"invalid UTF-8\00", align 1
@.str.21 = private unnamed_addr constant [28 x i8] c"invalid named capture group\00", align 1
@_ZTVN3re217NumCapturesWalkerE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.re2::Regexp::Walker"*)* @_ZN3re26Regexp6WalkerIiED2Ev to i8*), i8* bitcast (void (%"class.re2::NumCapturesWalker"*)* @_ZN3re217NumCapturesWalkerD0Ev to i8*), i8* bitcast (i32 (%"class.re2::NumCapturesWalker"*, %"class.re2::Regexp"*, i32, i8*)* @_ZN3re217NumCapturesWalker8PreVisitEPNS_6RegexpEiPb to i8*), i8* bitcast (i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i32, i32*, i32)* @_ZN3re26Regexp6WalkerIiE9PostVisitEPS0_iiPii to i8*), i8* bitcast (i32 (%"class.re2::Regexp::Walker"*, i32)* @_ZN3re26Regexp6WalkerIiE4CopyEi to i8*), i8* bitcast (i32 (%"class.re2::NumCapturesWalker"*, %"class.re2::Regexp"*, i32)* @_ZN3re217NumCapturesWalker10ShortVisitEPNS_6RegexpEi to i8*)] }, comdat, align 8
@_ZTVN3re26Regexp6WalkerIiEE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.re2::Regexp::Walker"*)* @_ZN3re26Regexp6WalkerIiED2Ev to i8*), i8* bitcast (void (%"class.re2::Regexp::Walker"*)* @_ZN3re26Regexp6WalkerIiED0Ev to i8*), i8* bitcast (i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i8*)* @_ZN3re26Regexp6WalkerIiE8PreVisitEPS0_iPb to i8*), i8* bitcast (i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i32, i32*, i32)* @_ZN3re26Regexp6WalkerIiE9PostVisitEPS0_iiPii to i8*), i8* bitcast (i32 (%"class.re2::Regexp::Walker"*, i32)* @_ZN3re26Regexp6WalkerIiE4CopyEi to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.22 = private unnamed_addr constant [43 x i8] c"../../third_party/re2/src/re2/walker-inl.h\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"Stack not empty.\00", align 1
@.str.24 = private unnamed_addr constant [37 x i8] c"NumCapturesWalker::ShortVisit called\00", align 1
@_ZTVN3re219NamedCapturesWalkerE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.re2::NamedCapturesWalker"*)* @_ZN3re219NamedCapturesWalkerD2Ev to i8*), i8* bitcast (void (%"class.re2::NamedCapturesWalker"*)* @_ZN3re219NamedCapturesWalkerD0Ev to i8*), i8* bitcast (i32 (%"class.re2::NamedCapturesWalker"*, %"class.re2::Regexp"*, i32, i8*)* @_ZN3re219NamedCapturesWalker8PreVisitEPNS_6RegexpEiPb to i8*), i8* bitcast (i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i32, i32*, i32)* @_ZN3re26Regexp6WalkerIiE9PostVisitEPS0_iiPii to i8*), i8* bitcast (i32 (%"class.re2::Regexp::Walker"*, i32)* @_ZN3re26Regexp6WalkerIiE4CopyEi to i8*), i8* bitcast (i32 (%"class.re2::NamedCapturesWalker"*, %"class.re2::Regexp"*, i32)* @_ZN3re219NamedCapturesWalker10ShortVisitEPNS_6RegexpEi to i8*)] }, comdat, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@.str.26 = private unnamed_addr constant [39 x i8] c"NamedCapturesWalker::ShortVisit called\00", align 1
@_ZTVN3re218CaptureNamesWalkerE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.re2::CaptureNamesWalker"*)* @_ZN3re218CaptureNamesWalkerD2Ev to i8*), i8* bitcast (void (%"class.re2::CaptureNamesWalker"*)* @_ZN3re218CaptureNamesWalkerD0Ev to i8*), i8* bitcast (i32 (%"class.re2::CaptureNamesWalker"*, %"class.re2::Regexp"*, i32, i8*)* @_ZN3re218CaptureNamesWalker8PreVisitEPNS_6RegexpEiPb to i8*), i8* bitcast (i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i32, i32*, i32)* @_ZN3re26Regexp6WalkerIiE9PostVisitEPS0_iiPii to i8*), i8* bitcast (i32 (%"class.re2::Regexp::Walker"*, i32)* @_ZN3re26Regexp6WalkerIiE4CopyEi to i8*), i8* bitcast (i32 (%"class.re2::CaptureNamesWalker"*, %"class.re2::Regexp"*, i32)* @_ZN3re218CaptureNamesWalker10ShortVisitEPNS_6RegexpEi to i8*)] }, comdat, align 8
@.str.27 = private unnamed_addr constant [38 x i8] c"CaptureNamesWalker::ShortVisit called\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.28 = private unnamed_addr constant [10 x i8] c"Walk NULL\00", align 1

@_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE = hidden unnamed_addr alias void (%"class.re2::Regexp"*, i32, i32), void (%"class.re2::Regexp"*, i32, i32)* @_ZN3re26RegexpC2ENS_8RegexpOpENS0_10ParseFlagsE
@_ZN3re26RegexpD1Ev = hidden unnamed_addr alias void (%"class.re2::Regexp"*), void (%"class.re2::Regexp"*)* @_ZN3re26RegexpD2Ev
@_ZN3re216CharClassBuilderC1Ev = hidden unnamed_addr alias void (%"class.re2::CharClassBuilder"*), void (%"class.re2::CharClassBuilder"*)* @_ZN3re216CharClassBuilderC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re26RegexpC2ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nocapture, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 0
  %5 = trunc i32 %1 to i8
  store i8 %5, i8* %4, align 8
  %6 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 1
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 2
  %8 = trunc i32 %2 to i16
  store i16 %8, i16* %7, align 2
  %9 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 3
  store i16 1, i16* %9, align 4
  %10 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 4
  %11 = bitcast i16* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 2 %11, i8 0, i64 34, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re26RegexpD2Ev(%"class.re2::Regexp"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %class.LogMessage, align 8
  %3 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 4
  %4 = load i16, i16* %3, align 2
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %45, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %7) #18
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1
  %9 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %8, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  %11 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 1
  %12 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_ostringstream"* %8 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %16 = bitcast %"class.std::__1::basic_ostringstream"* %8 to i8**
  %17 = inttoptr i64 %13 to i8*
  %18 = getelementptr i8, i8* %17, i64 -24
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::basic_ostringstream"* %8 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 %20
  %23 = bitcast i8* %22 to i64*
  store i64 %15, i64* %23, align 8
  %24 = load i8*, i8** %16, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %21, i64 %27
  %29 = bitcast i8* %28 to %"class.std::__1::ios_base"*
  %30 = bitcast %"class.std::__1::basic_stringbuf"* %11 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %29, i8* %30) #18
  %31 = getelementptr inbounds i8, i8* %28, i64 136
  %32 = bitcast i8* %31 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %32, align 8
  %33 = getelementptr inbounds i8, i8* %28, i64 144
  %34 = bitcast i8* %33 to i32*
  store i32 -1, i32* %34, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %12) #18
  %35 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 1, i32 1
  %37 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 1, i32 3
  %38 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 32, i1 false) #18
  store i32 16, i32* %37, align 8
  %39 = bitcast %"class.std::__1::basic_ostringstream"* %8 to %"class.std::__1::basic_ostream"*
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %39, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i64 39) #18
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #18
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %41, i32 48) #18
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %42, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2) #18
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %39, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i64 21) #18
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %7) #18
  br label %45

45:                                               ; preds = %1, %6
  %46 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 0
  %47 = load i8, i8* %46, align 8
  switch i8 %47, label %87 [
    i8 11, label %48
    i8 4, label %62
    i8 20, label %69
  ]

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 7, i32 0, i32 1
  %50 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %49, align 8
  %51 = icmp eq %"class.std::__1::basic_string"* %50, null
  br i1 %51, label %87, label %52

52:                                               ; preds = %48
  %53 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %59) #19
  br label %60

60:                                               ; preds = %52, %57
  %61 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  call void @_ZdlPv(i8* %61) #19
  br label %87

62:                                               ; preds = %45
  %63 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 7, i32 0, i32 1
  %64 = bitcast %"class.std::__1::basic_string"** %63 to i32**
  %65 = load i32*, i32** %64, align 8
  %66 = icmp eq i32* %65, null
  br i1 %66, label %87, label %67

67:                                               ; preds = %62
  %68 = bitcast i32* %65 to i8*
  call void @_ZdaPv(i8* %68) #19
  br label %87

69:                                               ; preds = %45
  %70 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 7
  %71 = bitcast %union.anon.0* %70 to %"class.re2::CharClass"**
  %72 = load %"class.re2::CharClass"*, %"class.re2::CharClass"** %71, align 8
  %73 = icmp eq %"class.re2::CharClass"* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.re2::CharClass", %"class.re2::CharClass"* %72, i64 0, i32 0
  call void @_ZdaPv(i8* %75) #19
  br label %76

76:                                               ; preds = %69, %74
  %77 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 7, i32 0, i32 1
  %78 = bitcast %"class.std::__1::basic_string"** %77 to %"class.re2::CharClassBuilder"**
  %79 = load %"class.re2::CharClassBuilder"*, %"class.re2::CharClassBuilder"** %78, align 8
  %80 = icmp eq %"class.re2::CharClassBuilder"* %79, null
  br i1 %80, label %87, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %79, i64 0, i32 3, i32 0
  %83 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %79, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %84 = bitcast %"class.std::__1::__tree_end_node"* %83 to %"class.std::__1::__tree_node"**
  %85 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %84, align 8
  call void @_ZNSt3__16__treeIN3re29RuneRangeENS1_13RuneRangeLessENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %82, %"class.std::__1::__tree_node"* %85) #18
  %86 = bitcast %"class.re2::CharClassBuilder"* %79 to i8*
  call void @_ZdlPv(i8* %86) #19
  br label %87

87:                                               ; preds = %76, %81, %62, %67, %48, %60, %45
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10LogMessageD2Ev(%class.LogMessage*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %30

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_ostringstream"* %7 to %"class.std::__1::basic_ostream"*
  %9 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i64 1) #18
  %10 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #18
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false) #18
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %2, %"class.std::__1::basic_stringbuf"* %13) #18
  %14 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = load i64, i64* %12, align 8
  %19 = load i8*, i8** %11, align 8
  %20 = zext i8 %16 to i64
  %21 = select i1 %17, i64 %18, i64 %20
  %22 = select i1 %17, i8* %19, i8* %10
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %24 = call i64 @fwrite(i8* %22, i64 1, i64 %21, %struct._IO_FILE* %23) #20
  store i8 1, i8* %3, align 8
  %25 = load i8, i8* %15, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %6
  %28 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %28) #19
  br label %29

29:                                               ; preds = %6, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #18
  br label %30

30:                                               ; preds = %1, %29
  %31 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1
  %32 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %33 = bitcast %"class.std::__1::basic_ostringstream"* %31 to i64*
  store i64 %32, i64* %33, align 8
  %34 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %35 = inttoptr i64 %32 to i8*
  %36 = getelementptr i8, i8* %35, i64 -24
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::basic_ostringstream"* %31 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 %38
  %41 = bitcast i8* %40 to i64*
  store i64 %34, i64* %41, align 8
  %42 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1, i32 1
  %43 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %42, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1, i32 1, i32 1
  %45 = bitcast %"class.std::__1::basic_string"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %30
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %51) #19
  br label %52

52:                                               ; preds = %30, %49
  %53 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %42, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %53) #18
  %54 = bitcast %"class.std::__1::basic_ostringstream"* %31 to %"class.std::__1::basic_ostream"*
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %54, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #18
  %55 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1, i32 2
  %56 = bitcast %"class.std::__1::basic_ios.base"* %55 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %56) #18
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re29CharClass6DeleteEv(%"class.re2::CharClass"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.re2::CharClass"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.re2::CharClass", %"class.re2::CharClass"* %0, i64 0, i32 0
  tail call void @_ZdaPv(i8* %4) #19
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3re26Regexp12QuickDestroyEv(%"class.re2::Regexp"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 4
  %3 = load i16, i16* %2, align 2
  %4 = icmp eq i16 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = icmp eq %"class.re2::Regexp"* %0, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %5
  tail call void @_ZN3re26RegexpD2Ev(%"class.re2::Regexp"* nonnull %0) #18
  %8 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 0
  tail call void @_ZdlPv(i8* %8) #19
  br label %9

9:                                                ; preds = %1, %5, %7
  %10 = phi i1 [ true, %7 ], [ true, %5 ], [ false, %1 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3re26Regexp3RefEv(%"class.re2::Regexp"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 3
  %3 = load i16, i16* %2, align 4
  %4 = icmp eq i16 %3, -1
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = zext i16 %3 to i32
  br label %90

7:                                                ; preds = %1
  %8 = load %"class.re2::Mutex"*, %"class.re2::Mutex"** @_ZN3re2L9ref_mutexE, align 8
  %9 = getelementptr inbounds %"class.re2::Mutex", %"class.re2::Mutex"* %8, i64 0, i32 0
  %10 = tail call i32 @pthread_rwlock_wrlock(%union.pthread_rwlock_t* %9) #18
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void @abort() #21
  unreachable

13:                                               ; preds = %7
  %14 = load %"class.std::__1::map"*, %"class.std::__1::map"** @_ZN3re2L7ref_mapE, align 8
  %15 = ptrtoint %"class.re2::Regexp"* %0 to i64
  %16 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node.107"**
  %18 = load %"class.std::__1::__tree_node.107"*, %"class.std::__1::__tree_node.107"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node.107"* %18, null
  br i1 %19, label %48, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %14, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %22

22:                                               ; preds = %44, %20
  %23 = phi %"class.std::__1::__tree_node.107"* [ %47, %44 ], [ %18, %20 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %46, %44 ], [ %21, %20 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %23, i64 0, i32 2, i32 0, i32 0
  %26 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %25, align 8
  %27 = icmp ugt %"class.re2::Regexp"* %26, %0
  br i1 %27, label %28, label %34

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %23, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, null
  br i1 %31, label %32, label %44

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %23, i64 0, i32 0, i32 0
  br label %50

34:                                               ; preds = %22
  %35 = icmp ult %"class.re2::Regexp"* %26, %0
  br i1 %35, label %36, label %42

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %23, i64 0, i32 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_node_base"* %38, null
  br i1 %39, label %40, label %44

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %23, i64 0, i32 0, i32 0
  br label %50

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %23, i64 0, i32 0, i32 0
  br label %50

44:                                               ; preds = %36, %28
  %45 = phi %"class.std::__1::__tree_node_base"* [ %30, %28 ], [ %38, %36 ]
  %46 = phi %"class.std::__1::__tree_node_base"** [ %29, %28 ], [ %37, %36 ]
  %47 = bitcast %"class.std::__1::__tree_node_base"* %45 to %"class.std::__1::__tree_node.107"*
  br label %22

48:                                               ; preds = %13
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  br label %50

50:                                               ; preds = %48, %42, %40, %32
  %51 = phi %"class.std::__1::__tree_end_node"* [ %16, %48 ], [ %33, %32 ], [ %41, %40 ], [ %43, %42 ]
  %52 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %29, %32 ], [ %37, %40 ], [ %24, %42 ]
  %53 = bitcast %"class.std::__1::__tree_node_base"** %52 to %"class.std::__1::__tree_node.107"**
  %54 = load %"class.std::__1::__tree_node.107"*, %"class.std::__1::__tree_node.107"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node.107"* %54, null
  br i1 %55, label %56, label %83

56:                                               ; preds = %50
  %57 = tail call i8* @_Znwm(i64 48) #19, !noalias !3
  %58 = getelementptr inbounds i8, i8* %57, i64 32
  %59 = bitcast i8* %58 to i64*
  store i64 %15, i64* %59, align 8, !noalias !3
  %60 = getelementptr inbounds i8, i8* %57, i64 40
  %61 = bitcast i8* %60 to i32*
  store i32 0, i32* %61, align 8, !noalias !3
  %62 = bitcast i8* %57 to %"class.std::__1::__tree_node.107"*
  %63 = bitcast i8* %57 to %"class.std::__1::__tree_node_base"*
  %64 = getelementptr inbounds i8, i8* %57, i64 16
  %65 = bitcast i8* %64 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 16, i1 false) #18
  store %"class.std::__1::__tree_end_node"* %51, %"class.std::__1::__tree_end_node"** %65, align 8
  %66 = bitcast %"class.std::__1::__tree_node_base"** %52 to i8**
  store i8* %57, i8** %66, align 8
  %67 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %14, i64 0, i32 0, i32 0
  %68 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %68, i64 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node_base"* %70, null
  br i1 %71, label %76, label %72

72:                                               ; preds = %56
  %73 = ptrtoint %"class.std::__1::__tree_node_base"* %70 to i64
  %74 = bitcast %"class.std::__1::map"* %14 to i64*
  store i64 %73, i64* %74, align 8
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  br label %76

76:                                               ; preds = %72, %56
  %77 = phi %"class.std::__1::__tree_node_base"* [ %63, %56 ], [ %75, %72 ]
  %78 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %14, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %79, %"class.std::__1::__tree_node_base"* %77) #18
  %80 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = add i64 %81, 1
  store i64 %82, i64* %80, align 8
  br label %83

83:                                               ; preds = %50, %76
  %84 = phi %"class.std::__1::__tree_node.107"* [ %62, %76 ], [ %54, %50 ]
  %85 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %84, i64 0, i32 2, i32 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = tail call i32 @pthread_rwlock_unlock(%union.pthread_rwlock_t* %9) #18
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %90, label %89

89:                                               ; preds = %83
  tail call void @abort() #21
  unreachable

90:                                               ; preds = %83, %5
  %91 = phi i32 [ %6, %5 ], [ %86, %83 ]
  ret i32 %91
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* returned) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::tuple.115", align 8
  %3 = alloca %"class.std::__1::__call_once_param", align 8
  %4 = alloca %class.anon, align 1
  %5 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 3
  %6 = load i16, i16* %5, align 4
  %7 = icmp ugt i16 %6, -3
  br i1 %7, label %8, label %172

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.anon, %class.anon* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #18
  %10 = load atomic i64, i64* getelementptr inbounds (%"struct.std::__1::once_flag", %"struct.std::__1::once_flag"* @_ZZN3re26Regexp6IncrefEvE8ref_once, i64 0, i32 0) acquire, align 8
  %11 = icmp eq i64 %10, -1
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.std::__1::tuple.115"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #18
  %14 = getelementptr inbounds %"class.std::__1::tuple.115", %"class.std::__1::tuple.115"* %2, i64 0, i32 0, i32 0, i32 0
  store %class.anon* %4, %class.anon** %14, align 8
  %15 = bitcast %"class.std::__1::__call_once_param"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #18
  %16 = getelementptr inbounds %"class.std::__1::__call_once_param", %"class.std::__1::__call_once_param"* %3, i64 0, i32 0
  store %"class.std::__1::tuple.115"* %2, %"class.std::__1::tuple.115"** %16, align 8
  call void @_ZNSt3__111__call_onceERVmPvPFvS2_E(i64* dereferenceable(8) getelementptr inbounds (%"struct.std::__1::once_flag", %"struct.std::__1::once_flag"* @_ZZN3re26Regexp6IncrefEvE8ref_once, i64 0, i32 0), i8* nonnull %15, void (i8*)* nonnull @"_ZNSt3__117__call_once_proxyINS_5tupleIJOZN3re26Regexp6IncrefEvE3$_0EEEEEvPv") #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #18
  br label %17

17:                                               ; preds = %8, %12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #18
  %18 = load %"class.re2::Mutex"*, %"class.re2::Mutex"** @_ZN3re2L9ref_mutexE, align 8
  %19 = getelementptr inbounds %"class.re2::Mutex", %"class.re2::Mutex"* %18, i64 0, i32 0
  %20 = call i32 @pthread_rwlock_wrlock(%union.pthread_rwlock_t* %19) #18
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %17
  call void @abort() #21
  unreachable

23:                                               ; preds = %17
  %24 = load i16, i16* %5, align 4
  %25 = icmp eq i16 %24, -1
  %26 = load %"class.std::__1::map"*, %"class.std::__1::map"** @_ZN3re2L7ref_mapE, align 8
  %27 = ptrtoint %"class.re2::Regexp"* %0 to i64
  %28 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %26, i64 0, i32 0, i32 1, i32 0, i32 0
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.std::__1::__tree_node.107"**
  %30 = load %"class.std::__1::__tree_node.107"*, %"class.std::__1::__tree_node.107"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node.107"* %30, null
  br i1 %25, label %32, label %101

32:                                               ; preds = %23
  br i1 %31, label %61, label %33

33:                                               ; preds = %32
  %34 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %26, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %35

35:                                               ; preds = %57, %33
  %36 = phi %"class.std::__1::__tree_node.107"* [ %60, %57 ], [ %30, %33 ]
  %37 = phi %"class.std::__1::__tree_node_base"** [ %59, %57 ], [ %34, %33 ]
  %38 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %36, i64 0, i32 2, i32 0, i32 0
  %39 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %38, align 8
  %40 = icmp ugt %"class.re2::Regexp"* %39, %0
  br i1 %40, label %41, label %47

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %36, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node_base"* %43, null
  br i1 %44, label %45, label %57

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %36, i64 0, i32 0, i32 0
  br label %63

47:                                               ; preds = %35
  %48 = icmp ult %"class.re2::Regexp"* %39, %0
  br i1 %48, label %49, label %55

49:                                               ; preds = %47
  %50 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %36, i64 0, i32 0, i32 1
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  %52 = icmp eq %"class.std::__1::__tree_node_base"* %51, null
  br i1 %52, label %53, label %57

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %36, i64 0, i32 0, i32 0
  br label %63

55:                                               ; preds = %47
  %56 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %36, i64 0, i32 0, i32 0
  br label %63

57:                                               ; preds = %49, %41
  %58 = phi %"class.std::__1::__tree_node_base"* [ %43, %41 ], [ %51, %49 ]
  %59 = phi %"class.std::__1::__tree_node_base"** [ %42, %41 ], [ %50, %49 ]
  %60 = bitcast %"class.std::__1::__tree_node_base"* %58 to %"class.std::__1::__tree_node.107"*
  br label %35

61:                                               ; preds = %32
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 0, i32 0
  br label %63

63:                                               ; preds = %61, %55, %53, %45
  %64 = phi %"class.std::__1::__tree_end_node"* [ %28, %61 ], [ %46, %45 ], [ %54, %53 ], [ %56, %55 ]
  %65 = phi %"class.std::__1::__tree_node_base"** [ %62, %61 ], [ %42, %45 ], [ %50, %53 ], [ %37, %55 ]
  %66 = bitcast %"class.std::__1::__tree_node_base"** %65 to %"class.std::__1::__tree_node.107"**
  %67 = load %"class.std::__1::__tree_node.107"*, %"class.std::__1::__tree_node.107"** %66, align 8
  %68 = icmp eq %"class.std::__1::__tree_node.107"* %67, null
  br i1 %68, label %69, label %96

69:                                               ; preds = %63
  %70 = call i8* @_Znwm(i64 48) #19, !noalias !6
  %71 = getelementptr inbounds i8, i8* %70, i64 32
  %72 = bitcast i8* %71 to i64*
  store i64 %27, i64* %72, align 8, !noalias !6
  %73 = getelementptr inbounds i8, i8* %70, i64 40
  %74 = bitcast i8* %73 to i32*
  store i32 0, i32* %74, align 8, !noalias !6
  %75 = bitcast i8* %70 to %"class.std::__1::__tree_node.107"*
  %76 = bitcast i8* %70 to %"class.std::__1::__tree_node_base"*
  %77 = getelementptr inbounds i8, i8* %70, i64 16
  %78 = bitcast i8* %77 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 0, i64 16, i1 false) #18
  store %"class.std::__1::__tree_end_node"* %64, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = bitcast %"class.std::__1::__tree_node_base"** %65 to i8**
  store i8* %70, i8** %79, align 8
  %80 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %26, i64 0, i32 0, i32 0
  %81 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %80, align 8
  %82 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %81, i64 0, i32 0
  %83 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %82, align 8
  %84 = icmp eq %"class.std::__1::__tree_node_base"* %83, null
  br i1 %84, label %89, label %85

85:                                               ; preds = %69
  %86 = ptrtoint %"class.std::__1::__tree_node_base"* %83 to i64
  %87 = bitcast %"class.std::__1::map"* %26 to i64*
  store i64 %86, i64* %87, align 8
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  br label %89

89:                                               ; preds = %85, %69
  %90 = phi %"class.std::__1::__tree_node_base"* [ %76, %69 ], [ %88, %85 ]
  %91 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %26, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %91, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %92, %"class.std::__1::__tree_node_base"* %90) #18
  %93 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %26, i64 0, i32 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, 1
  store i64 %95, i64* %93, align 8
  br label %96

96:                                               ; preds = %63, %89
  %97 = phi %"class.std::__1::__tree_node.107"* [ %75, %89 ], [ %67, %63 ]
  %98 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %97, i64 0, i32 2, i32 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = add nsw i32 %99, 1
  store i32 %100, i32* %98, align 4
  br label %168

101:                                              ; preds = %23
  br i1 %31, label %130, label %102

102:                                              ; preds = %101
  %103 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %26, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %104

104:                                              ; preds = %126, %102
  %105 = phi %"class.std::__1::__tree_node.107"* [ %129, %126 ], [ %30, %102 ]
  %106 = phi %"class.std::__1::__tree_node_base"** [ %128, %126 ], [ %103, %102 ]
  %107 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %105, i64 0, i32 2, i32 0, i32 0
  %108 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %107, align 8
  %109 = icmp ugt %"class.re2::Regexp"* %108, %0
  br i1 %109, label %110, label %116

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %105, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %111, align 8
  %113 = icmp eq %"class.std::__1::__tree_node_base"* %112, null
  br i1 %113, label %114, label %126

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %105, i64 0, i32 0, i32 0
  br label %132

116:                                              ; preds = %104
  %117 = icmp ult %"class.re2::Regexp"* %108, %0
  br i1 %117, label %118, label %124

118:                                              ; preds = %116
  %119 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %105, i64 0, i32 0, i32 1
  %120 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %119, align 8
  %121 = icmp eq %"class.std::__1::__tree_node_base"* %120, null
  br i1 %121, label %122, label %126

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %105, i64 0, i32 0, i32 0
  br label %132

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %105, i64 0, i32 0, i32 0
  br label %132

126:                                              ; preds = %118, %110
  %127 = phi %"class.std::__1::__tree_node_base"* [ %112, %110 ], [ %120, %118 ]
  %128 = phi %"class.std::__1::__tree_node_base"** [ %111, %110 ], [ %119, %118 ]
  %129 = bitcast %"class.std::__1::__tree_node_base"* %127 to %"class.std::__1::__tree_node.107"*
  br label %104

130:                                              ; preds = %101
  %131 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 0, i32 0
  br label %132

132:                                              ; preds = %130, %124, %122, %114
  %133 = phi %"class.std::__1::__tree_end_node"* [ %28, %130 ], [ %115, %114 ], [ %123, %122 ], [ %125, %124 ]
  %134 = phi %"class.std::__1::__tree_node_base"** [ %131, %130 ], [ %111, %114 ], [ %119, %122 ], [ %106, %124 ]
  %135 = bitcast %"class.std::__1::__tree_node_base"** %134 to %"class.std::__1::__tree_node.107"**
  %136 = load %"class.std::__1::__tree_node.107"*, %"class.std::__1::__tree_node.107"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node.107"* %136, null
  br i1 %137, label %138, label %165

138:                                              ; preds = %132
  %139 = call i8* @_Znwm(i64 48) #19, !noalias !9
  %140 = getelementptr inbounds i8, i8* %139, i64 32
  %141 = bitcast i8* %140 to i64*
  store i64 %27, i64* %141, align 8, !noalias !9
  %142 = getelementptr inbounds i8, i8* %139, i64 40
  %143 = bitcast i8* %142 to i32*
  store i32 0, i32* %143, align 8, !noalias !9
  %144 = bitcast i8* %139 to %"class.std::__1::__tree_node.107"*
  %145 = bitcast i8* %139 to %"class.std::__1::__tree_node_base"*
  %146 = getelementptr inbounds i8, i8* %139, i64 16
  %147 = bitcast i8* %146 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %139, i8 0, i64 16, i1 false) #18
  store %"class.std::__1::__tree_end_node"* %133, %"class.std::__1::__tree_end_node"** %147, align 8
  %148 = bitcast %"class.std::__1::__tree_node_base"** %134 to i8**
  store i8* %139, i8** %148, align 8
  %149 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %26, i64 0, i32 0, i32 0
  %150 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %149, align 8
  %151 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %150, i64 0, i32 0
  %152 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %151, align 8
  %153 = icmp eq %"class.std::__1::__tree_node_base"* %152, null
  br i1 %153, label %158, label %154

154:                                              ; preds = %138
  %155 = ptrtoint %"class.std::__1::__tree_node_base"* %152 to i64
  %156 = bitcast %"class.std::__1::map"* %26 to i64*
  store i64 %155, i64* %156, align 8
  %157 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %134, align 8
  br label %158

158:                                              ; preds = %154, %138
  %159 = phi %"class.std::__1::__tree_node_base"* [ %145, %138 ], [ %157, %154 ]
  %160 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %26, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %161 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %160, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %161, %"class.std::__1::__tree_node_base"* %159) #18
  %162 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %26, i64 0, i32 0, i32 2, i32 0, i32 0
  %163 = load i64, i64* %162, align 8
  %164 = add i64 %163, 1
  store i64 %164, i64* %162, align 8
  br label %165

165:                                              ; preds = %132, %158
  %166 = phi %"class.std::__1::__tree_node.107"* [ %144, %158 ], [ %136, %132 ]
  %167 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %166, i64 0, i32 2, i32 0, i32 1
  store i32 65535, i32* %167, align 4
  store i16 -1, i16* %5, align 4
  br label %168

168:                                              ; preds = %165, %96
  %169 = call i32 @pthread_rwlock_unlock(%union.pthread_rwlock_t* %19) #18
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %174, label %171

171:                                              ; preds = %168
  call void @abort() #21
  unreachable

172:                                              ; preds = %1
  %173 = add nuw i16 %6, 1
  store i16 %173, i16* %5, align 4
  br label %174

174:                                              ; preds = %168, %172
  ret %"class.re2::Regexp"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 3
  %3 = load i16, i16* %2, align 4
  %4 = icmp eq i16 %3, -1
  br i1 %4, label %5, label %234

5:                                                ; preds = %1
  %6 = load %"class.re2::Mutex"*, %"class.re2::Mutex"** @_ZN3re2L9ref_mutexE, align 8
  %7 = getelementptr inbounds %"class.re2::Mutex", %"class.re2::Mutex"* %6, i64 0, i32 0
  %8 = tail call i32 @pthread_rwlock_wrlock(%union.pthread_rwlock_t* %7) #18
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  tail call void @abort() #21
  unreachable

11:                                               ; preds = %5
  %12 = load %"class.std::__1::map"*, %"class.std::__1::map"** @_ZN3re2L7ref_mapE, align 8
  %13 = ptrtoint %"class.re2::Regexp"* %0 to i64
  %14 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  %15 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.std::__1::__tree_node.107"**
  %16 = load %"class.std::__1::__tree_node.107"*, %"class.std::__1::__tree_node.107"** %15, align 8
  %17 = icmp eq %"class.std::__1::__tree_node.107"* %16, null
  br i1 %17, label %46, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %12, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %20

20:                                               ; preds = %42, %18
  %21 = phi %"class.std::__1::__tree_node.107"* [ %45, %42 ], [ %16, %18 ]
  %22 = phi %"class.std::__1::__tree_node_base"** [ %44, %42 ], [ %19, %18 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %21, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %23, align 8
  %25 = icmp ugt %"class.re2::Regexp"* %24, %0
  br i1 %25, label %26, label %32

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %21, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %29, label %30, label %42

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %21, i64 0, i32 0, i32 0
  br label %48

32:                                               ; preds = %20
  %33 = icmp ult %"class.re2::Regexp"* %24, %0
  br i1 %33, label %34, label %40

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %21, i64 0, i32 0, i32 1
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %38, label %42

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %21, i64 0, i32 0, i32 0
  br label %48

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %21, i64 0, i32 0, i32 0
  br label %48

42:                                               ; preds = %34, %26
  %43 = phi %"class.std::__1::__tree_node_base"* [ %28, %26 ], [ %36, %34 ]
  %44 = phi %"class.std::__1::__tree_node_base"** [ %27, %26 ], [ %35, %34 ]
  %45 = bitcast %"class.std::__1::__tree_node_base"* %43 to %"class.std::__1::__tree_node.107"*
  br label %20

46:                                               ; preds = %11
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 0, i32 0
  br label %48

48:                                               ; preds = %46, %40, %38, %30
  %49 = phi %"class.std::__1::__tree_end_node"* [ %14, %46 ], [ %31, %30 ], [ %39, %38 ], [ %41, %40 ]
  %50 = phi %"class.std::__1::__tree_node_base"** [ %47, %46 ], [ %27, %30 ], [ %35, %38 ], [ %22, %40 ]
  %51 = bitcast %"class.std::__1::__tree_node_base"** %50 to %"class.std::__1::__tree_node.107"**
  %52 = load %"class.std::__1::__tree_node.107"*, %"class.std::__1::__tree_node.107"** %51, align 8
  %53 = icmp eq %"class.std::__1::__tree_node.107"* %52, null
  br i1 %53, label %54, label %81

54:                                               ; preds = %48
  %55 = tail call i8* @_Znwm(i64 48) #19, !noalias !12
  %56 = getelementptr inbounds i8, i8* %55, i64 32
  %57 = bitcast i8* %56 to i64*
  store i64 %13, i64* %57, align 8, !noalias !12
  %58 = getelementptr inbounds i8, i8* %55, i64 40
  %59 = bitcast i8* %58 to i32*
  store i32 0, i32* %59, align 8, !noalias !12
  %60 = bitcast i8* %55 to %"class.std::__1::__tree_node.107"*
  %61 = bitcast i8* %55 to %"class.std::__1::__tree_node_base"*
  %62 = getelementptr inbounds i8, i8* %55, i64 16
  %63 = bitcast i8* %62 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 16, i1 false) #18
  store %"class.std::__1::__tree_end_node"* %49, %"class.std::__1::__tree_end_node"** %63, align 8
  %64 = bitcast %"class.std::__1::__tree_node_base"** %50 to i8**
  store i8* %55, i8** %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %12, i64 0, i32 0, i32 0
  %66 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %65, align 8
  %67 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %66, i64 0, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  %69 = icmp eq %"class.std::__1::__tree_node_base"* %68, null
  br i1 %69, label %74, label %70

70:                                               ; preds = %54
  %71 = ptrtoint %"class.std::__1::__tree_node_base"* %68 to i64
  %72 = bitcast %"class.std::__1::map"* %12 to i64*
  store i64 %71, i64* %72, align 8
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  br label %74

74:                                               ; preds = %70, %54
  %75 = phi %"class.std::__1::__tree_node_base"* [ %61, %54 ], [ %73, %70 ]
  %76 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %12, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %77 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %76, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %77, %"class.std::__1::__tree_node_base"* %75) #18
  %78 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* %78, align 8
  br label %81

81:                                               ; preds = %48, %74
  %82 = phi %"class.std::__1::__tree_node.107"* [ %60, %74 ], [ %52, %48 ]
  %83 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %82, i64 0, i32 2, i32 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = add nsw i32 %84, -1
  %86 = icmp slt i32 %84, 65536
  br i1 %86, label %87, label %158

87:                                               ; preds = %81
  %88 = trunc i32 %85 to i16
  store i16 %88, i16* %2, align 4
  %89 = load %"class.std::__1::map"*, %"class.std::__1::map"** @_ZN3re2L7ref_mapE, align 8
  %90 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %89, i64 0, i32 0, i32 1, i32 0, i32 0
  %91 = bitcast %"class.std::__1::__tree_end_node"* %90 to %"class.std::__1::__tree_node.107"**
  %92 = load %"class.std::__1::__tree_node.107"*, %"class.std::__1::__tree_node.107"** %91, align 8
  %93 = icmp eq %"class.std::__1::__tree_node.107"* %92, null
  %94 = bitcast %"class.std::__1::__tree_node.107"* %92 to %"class.std::__1::__tree_node_base"*
  br i1 %93, label %230, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.std::__1::__tree_end_node"* [ %106, %95 ], [ %90, %87 ]
  %97 = phi %"class.std::__1::__tree_node.107"* [ %107, %95 ], [ %92, %87 ]
  %98 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %97, i64 0, i32 2, i32 0, i32 0
  %99 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %98, align 8
  %100 = icmp ult %"class.re2::Regexp"* %99, %0
  %101 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %97, i64 0, i32 0, i32 1
  %102 = bitcast %"class.std::__1::__tree_node_base"** %101 to %"class.std::__1::__tree_node.107"**
  %103 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %97, i64 0, i32 0, i32 0
  %104 = bitcast %"class.std::__1::__tree_node.107"* %97 to %"class.std::__1::__tree_node.107"**
  %105 = select i1 %100, %"class.std::__1::__tree_node.107"** %102, %"class.std::__1::__tree_node.107"** %104
  %106 = select i1 %100, %"class.std::__1::__tree_end_node"* %96, %"class.std::__1::__tree_end_node"* %103
  %107 = load %"class.std::__1::__tree_node.107"*, %"class.std::__1::__tree_node.107"** %105, align 8
  %108 = icmp eq %"class.std::__1::__tree_node.107"* %107, null
  br i1 %108, label %109, label %95

109:                                              ; preds = %95
  %110 = icmp eq %"class.std::__1::__tree_end_node"* %106, %90
  br i1 %110, label %230, label %111

111:                                              ; preds = %109
  %112 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %106, i64 4
  %113 = bitcast %"class.std::__1::__tree_end_node"* %112 to %"class.re2::Regexp"**
  %114 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %113, align 8
  %115 = icmp ugt %"class.re2::Regexp"* %114, %0
  br i1 %115, label %230, label %116

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %106, i64 1, i32 0
  %118 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  %119 = icmp eq %"class.std::__1::__tree_node_base"* %118, null
  br i1 %119, label %120, label %128

120:                                              ; preds = %116
  %121 = bitcast %"class.std::__1::__tree_end_node"* %106 to %"class.std::__1::__tree_node_base"*
  %122 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %106, i64 2
  %123 = bitcast %"class.std::__1::__tree_end_node"* %122 to %"class.std::__1::__tree_end_node"**
  %124 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %125 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %124, i64 0, i32 0
  %126 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %125, align 8
  %127 = icmp eq %"class.std::__1::__tree_node_base"* %126, %121
  br i1 %127, label %144, label %135

128:                                              ; preds = %116, %128
  %129 = phi %"class.std::__1::__tree_node_base"* [ %131, %128 ], [ %118, %116 ]
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %133, label %128

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  br label %144

135:                                              ; preds = %120, %135
  %136 = phi %"class.std::__1::__tree_end_node"** [ %139, %135 ], [ %123, %120 ]
  %137 = bitcast %"class.std::__1::__tree_end_node"** %136 to %"class.std::__1::__tree_node_base"**
  %138 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %137, align 8
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %138, i64 0, i32 2
  %140 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %139, align 8
  %141 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %140, i64 0, i32 0
  %142 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %141, align 8
  %143 = icmp eq %"class.std::__1::__tree_node_base"* %142, %138
  br i1 %143, label %144, label %135

144:                                              ; preds = %135, %133, %120
  %145 = phi %"class.std::__1::__tree_end_node"* [ %134, %133 ], [ %124, %120 ], [ %140, %135 ]
  %146 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %89, i64 0, i32 0, i32 0
  %147 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %146, align 8
  %148 = icmp eq %"class.std::__1::__tree_end_node"* %147, %106
  br i1 %148, label %149, label %152

149:                                              ; preds = %144
  %150 = ptrtoint %"class.std::__1::__tree_end_node"* %145 to i64
  %151 = bitcast %"class.std::__1::map"* %89 to i64*
  store i64 %150, i64* %151, align 8
  br label %152

152:                                              ; preds = %149, %144
  %153 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %89, i64 0, i32 0, i32 2, i32 0, i32 0
  %154 = load i64, i64* %153, align 8
  %155 = add i64 %154, -1
  store i64 %155, i64* %153, align 8
  %156 = bitcast %"class.std::__1::__tree_end_node"* %106 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %94, %"class.std::__1::__tree_node_base"* %156) #18
  %157 = bitcast %"class.std::__1::__tree_end_node"* %106 to i8*
  tail call void @_ZdlPv(i8* %157) #19
  br label %230

158:                                              ; preds = %81
  %159 = load %"class.std::__1::map"*, %"class.std::__1::map"** @_ZN3re2L7ref_mapE, align 8
  %160 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %159, i64 0, i32 0, i32 1, i32 0, i32 0
  %161 = bitcast %"class.std::__1::__tree_end_node"* %160 to %"class.std::__1::__tree_node.107"**
  %162 = load %"class.std::__1::__tree_node.107"*, %"class.std::__1::__tree_node.107"** %161, align 8
  %163 = icmp eq %"class.std::__1::__tree_node.107"* %162, null
  br i1 %163, label %192, label %164

164:                                              ; preds = %158
  %165 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %159, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %166

166:                                              ; preds = %188, %164
  %167 = phi %"class.std::__1::__tree_node.107"* [ %191, %188 ], [ %162, %164 ]
  %168 = phi %"class.std::__1::__tree_node_base"** [ %190, %188 ], [ %165, %164 ]
  %169 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %167, i64 0, i32 2, i32 0, i32 0
  %170 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %169, align 8
  %171 = icmp ugt %"class.re2::Regexp"* %170, %0
  br i1 %171, label %172, label %178

172:                                              ; preds = %166
  %173 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %167, i64 0, i32 0, i32 0, i32 0
  %174 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %173, align 8
  %175 = icmp eq %"class.std::__1::__tree_node_base"* %174, null
  br i1 %175, label %176, label %188

176:                                              ; preds = %172
  %177 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %167, i64 0, i32 0, i32 0
  br label %194

178:                                              ; preds = %166
  %179 = icmp ult %"class.re2::Regexp"* %170, %0
  br i1 %179, label %180, label %186

180:                                              ; preds = %178
  %181 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %167, i64 0, i32 0, i32 1
  %182 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %181, align 8
  %183 = icmp eq %"class.std::__1::__tree_node_base"* %182, null
  br i1 %183, label %184, label %188

184:                                              ; preds = %180
  %185 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %167, i64 0, i32 0, i32 0
  br label %194

186:                                              ; preds = %178
  %187 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %167, i64 0, i32 0, i32 0
  br label %194

188:                                              ; preds = %180, %172
  %189 = phi %"class.std::__1::__tree_node_base"* [ %174, %172 ], [ %182, %180 ]
  %190 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %181, %180 ]
  %191 = bitcast %"class.std::__1::__tree_node_base"* %189 to %"class.std::__1::__tree_node.107"*
  br label %166

192:                                              ; preds = %158
  %193 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %160, i64 0, i32 0
  br label %194

194:                                              ; preds = %192, %186, %184, %176
  %195 = phi %"class.std::__1::__tree_end_node"* [ %160, %192 ], [ %177, %176 ], [ %185, %184 ], [ %187, %186 ]
  %196 = phi %"class.std::__1::__tree_node_base"** [ %193, %192 ], [ %173, %176 ], [ %181, %184 ], [ %168, %186 ]
  %197 = bitcast %"class.std::__1::__tree_node_base"** %196 to %"class.std::__1::__tree_node.107"**
  %198 = load %"class.std::__1::__tree_node.107"*, %"class.std::__1::__tree_node.107"** %197, align 8
  %199 = icmp eq %"class.std::__1::__tree_node.107"* %198, null
  br i1 %199, label %200, label %227

200:                                              ; preds = %194
  %201 = tail call i8* @_Znwm(i64 48) #19, !noalias !15
  %202 = getelementptr inbounds i8, i8* %201, i64 32
  %203 = bitcast i8* %202 to i64*
  store i64 %13, i64* %203, align 8, !noalias !15
  %204 = getelementptr inbounds i8, i8* %201, i64 40
  %205 = bitcast i8* %204 to i32*
  store i32 0, i32* %205, align 8, !noalias !15
  %206 = bitcast i8* %201 to %"class.std::__1::__tree_node.107"*
  %207 = bitcast i8* %201 to %"class.std::__1::__tree_node_base"*
  %208 = getelementptr inbounds i8, i8* %201, i64 16
  %209 = bitcast i8* %208 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %201, i8 0, i64 16, i1 false) #18
  store %"class.std::__1::__tree_end_node"* %195, %"class.std::__1::__tree_end_node"** %209, align 8
  %210 = bitcast %"class.std::__1::__tree_node_base"** %196 to i8**
  store i8* %201, i8** %210, align 8
  %211 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %159, i64 0, i32 0, i32 0
  %212 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %211, align 8
  %213 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %212, i64 0, i32 0
  %214 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %213, align 8
  %215 = icmp eq %"class.std::__1::__tree_node_base"* %214, null
  br i1 %215, label %220, label %216

216:                                              ; preds = %200
  %217 = ptrtoint %"class.std::__1::__tree_node_base"* %214 to i64
  %218 = bitcast %"class.std::__1::map"* %159 to i64*
  store i64 %217, i64* %218, align 8
  %219 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %196, align 8
  br label %220

220:                                              ; preds = %216, %200
  %221 = phi %"class.std::__1::__tree_node_base"* [ %207, %200 ], [ %219, %216 ]
  %222 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %159, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %223 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %222, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %223, %"class.std::__1::__tree_node_base"* %221) #18
  %224 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %159, i64 0, i32 0, i32 2, i32 0, i32 0
  %225 = load i64, i64* %224, align 8
  %226 = add i64 %225, 1
  store i64 %226, i64* %224, align 8
  br label %227

227:                                              ; preds = %194, %220
  %228 = phi %"class.std::__1::__tree_node.107"* [ %206, %220 ], [ %198, %194 ]
  %229 = getelementptr inbounds %"class.std::__1::__tree_node.107", %"class.std::__1::__tree_node.107"* %228, i64 0, i32 2, i32 0, i32 1
  store i32 %85, i32* %229, align 4
  br label %230

230:                                              ; preds = %152, %111, %109, %87, %227
  %231 = tail call i32 @pthread_rwlock_unlock(%union.pthread_rwlock_t* %7) #18
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %238, label %233

233:                                              ; preds = %230
  tail call void @abort() #21
  unreachable

234:                                              ; preds = %1
  %235 = add i16 %3, -1
  store i16 %235, i16* %2, align 4
  %236 = icmp eq i16 %235, 0
  br i1 %236, label %237, label %238

237:                                              ; preds = %234
  tail call void @_ZN3re26Regexp7DestroyEv(%"class.re2::Regexp"* %0)
  br label %238

238:                                              ; preds = %230, %237, %234
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re26Regexp7DestroyEv(%"class.re2::Regexp"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.LogMessage, align 8
  %3 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 4
  %4 = load i16, i16* %3, align 2
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = icmp eq %"class.re2::Regexp"* %0, null
  br i1 %7, label %120, label %8

8:                                                ; preds = %6
  tail call void @_ZN3re26RegexpD2Ev(%"class.re2::Regexp"* nonnull %0) #18
  %9 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 0
  tail call void @_ZdlPv(i8* %9) #19
  br label %120

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 6
  store %"class.re2::Regexp"* null, %"class.re2::Regexp"** %11, align 8
  %12 = icmp eq %"class.re2::Regexp"* %0, null
  br i1 %12, label %120, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 0
  %15 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1
  %16 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 2, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %15, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 1
  %19 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %18, i64 0, i32 0
  %20 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %21 = bitcast %"class.std::__1::basic_ostringstream"* %15 to i64*
  %22 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %23 = bitcast %"class.std::__1::basic_ostringstream"* %15 to i8**
  %24 = inttoptr i64 %20 to i8*
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = bitcast %"class.std::__1::basic_ostringstream"* %15 to i8*
  %28 = bitcast %"class.std::__1::basic_stringbuf"* %18 to i8*
  %29 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %18, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 1, i32 1
  %31 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 1, i32 3
  %32 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  %33 = bitcast %"class.std::__1::basic_ostringstream"* %15 to %"class.std::__1::basic_ostream"*
  br label %34

34:                                               ; preds = %117, %13
  %35 = phi %"class.re2::Regexp"* [ null, %13 ], [ %119, %117 ]
  %36 = phi %"class.re2::Regexp"* [ %0, %13 ], [ %114, %117 ]
  %37 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %36, i64 0, i32 3
  %38 = load i16, i16* %37, align 4
  %39 = icmp eq i16 %38, 0
  br i1 %39, label %61, label %40

40:                                               ; preds = %34
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %14) #18
  store i8 0, i8* %14, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %16, align 8
  store i64 %20, i64* %21, align 8
  %41 = load i64, i64* %26, align 8
  %42 = getelementptr inbounds i8, i8* %27, i64 %41
  %43 = bitcast i8* %42 to i64*
  store i64 %22, i64* %43, align 8
  %44 = load i8*, i8** %23, align 8
  %45 = getelementptr i8, i8* %44, i64 -24
  %46 = bitcast i8* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds i8, i8* %27, i64 %47
  %49 = bitcast i8* %48 to %"class.std::__1::ios_base"*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %49, i8* %28) #18
  %50 = getelementptr inbounds i8, i8* %48, i64 136
  %51 = bitcast i8* %50 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %51, align 8
  %52 = getelementptr inbounds i8, i8* %48, i64 144
  %53 = bitcast i8* %52 to i32*
  store i32 -1, i32* %53, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %17, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %16, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %19) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 32, i1 false) #18
  store i32 16, i32* %31, align 8
  %54 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %33, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i64 39) #18
  %55 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %54, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #18
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %55, i32 147) #18
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %56, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2) #18
  %58 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %33, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), i64 20) #18
  %59 = load i16, i16* %37, align 4
  %60 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEt(%"class.std::__1::basic_ostream"* %58, i16 zeroext %59) #18
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %14) #18
  br label %61

61:                                               ; preds = %34, %40
  %62 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %36, i64 0, i32 4
  %63 = load i16, i16* %62, align 2
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %113, label %65

65:                                               ; preds = %61
  %66 = icmp eq i16 %63, 1
  %67 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %36, i64 0, i32 5
  br i1 %66, label %68, label %70

68:                                               ; preds = %65
  %69 = bitcast %union.anon* %67 to %"class.re2::Regexp"**
  br label %73

70:                                               ; preds = %65
  %71 = getelementptr inbounds %union.anon, %union.anon* %67, i64 0, i32 0
  %72 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %71, align 8
  br label %73

73:                                               ; preds = %70, %68
  %74 = phi %"class.re2::Regexp"** [ %69, %68 ], [ %72, %70 ]
  br label %79

75:                                               ; preds = %104
  %76 = icmp ult i16 %107, 2
  %77 = icmp eq %"class.re2::Regexp"** %74, null
  %78 = or i1 %77, %76
  br i1 %78, label %112, label %110

79:                                               ; preds = %73, %104
  %80 = phi i64 [ 0, %73 ], [ %106, %104 ]
  %81 = phi %"class.re2::Regexp"* [ %35, %73 ], [ %105, %104 ]
  %82 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %74, i64 %80
  %83 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %82, align 8
  %84 = icmp eq %"class.re2::Regexp"* %83, null
  br i1 %84, label %104, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %83, i64 0, i32 3
  %87 = load i16, i16* %86, align 4
  %88 = icmp eq i16 %87, -1
  br i1 %88, label %89, label %91

89:                                               ; preds = %85
  call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* nonnull %83)
  %90 = load i16, i16* %86, align 4
  br label %93

91:                                               ; preds = %85
  %92 = add i16 %87, -1
  store i16 %92, i16* %86, align 4
  br label %93

93:                                               ; preds = %91, %89
  %94 = phi i16 [ %92, %91 ], [ %90, %89 ]
  %95 = icmp eq i16 %94, 0
  br i1 %95, label %96, label %104

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %83, i64 0, i32 4
  %98 = load i16, i16* %97, align 2
  %99 = icmp eq i16 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %96
  call void @_ZN3re26RegexpD2Ev(%"class.re2::Regexp"* nonnull %83) #18
  %101 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %83, i64 0, i32 0
  call void @_ZdlPv(i8* %101) #19
  br label %104

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %83, i64 0, i32 6
  store %"class.re2::Regexp"* %81, %"class.re2::Regexp"** %103, align 8
  br label %104

104:                                              ; preds = %100, %93, %102, %79
  %105 = phi %"class.re2::Regexp"* [ %81, %79 ], [ %83, %102 ], [ %81, %93 ], [ %81, %100 ]
  %106 = add nuw nsw i64 %80, 1
  %107 = load i16, i16* %62, align 2
  %108 = zext i16 %107 to i64
  %109 = icmp ult i64 %106, %108
  br i1 %109, label %79, label %75

110:                                              ; preds = %75
  %111 = bitcast %"class.re2::Regexp"** %74 to i8*
  call void @_ZdaPv(i8* %111) #19
  br label %112

112:                                              ; preds = %75, %110
  store i16 0, i16* %62, align 2
  br label %113

113:                                              ; preds = %112, %61
  %114 = phi %"class.re2::Regexp"* [ %105, %112 ], [ %35, %61 ]
  call void @_ZN3re26RegexpD2Ev(%"class.re2::Regexp"* nonnull %36) #18
  %115 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %36, i64 0, i32 0
  call void @_ZdlPv(i8* %115) #19
  %116 = icmp eq %"class.re2::Regexp"* %114, null
  br i1 %116, label %120, label %117

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %114, i64 0, i32 6
  %119 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %118, align 8
  br label %34

120:                                              ; preds = %113, %10, %6, %8
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEt(%"class.std::__1::basic_ostream"*, i16 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re26Regexp15AddRuneToStringEi(%"class.re2::Regexp"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = tail call i8* @_Znam(i64 32) #19
  %8 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 7, i32 0, i32 1
  %9 = bitcast %"class.std::__1::basic_string"** %8 to i8**
  store i8* %7, i8** %9, align 8
  br label %47

10:                                               ; preds = %2
  %11 = icmp sgt i32 %4, 7
  %12 = tail call i32 @llvm.ctpop.i32(i32 %4), !range !18
  %13 = icmp ult i32 %12, 2
  %14 = and i1 %11, %13
  br i1 %14, label %15, label %47

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 7, i32 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"** %16 to i32**
  %18 = load i32*, i32** %17, align 8
  %19 = shl nsw i32 %4, 1
  %20 = sext i32 %19 to i64
  %21 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %20, i64 4)
  %22 = extractvalue { i64, i1 } %21, 1
  %23 = extractvalue { i64, i1 } %21, 0
  %24 = select i1 %22, i64 -1, i64 %23
  %25 = tail call i8* @_Znam(i64 %24) #19
  %26 = bitcast %"class.std::__1::basic_string"** %16 to i8**
  store i8* %25, i8** %26, align 8
  %27 = bitcast i8* %25 to i32*
  %28 = load i32, i32* %18, align 4
  store i32 %28, i32* %27, align 4
  %29 = load i32, i32* %3, align 8
  %30 = icmp sgt i32 %29, 1
  br i1 %30, label %34, label %31

31:                                               ; preds = %34, %15
  %32 = phi i32 [ %29, %15 ], [ %41, %34 ]
  %33 = icmp eq i32* %18, null
  br i1 %33, label %47, label %44

34:                                               ; preds = %15, %34
  %35 = phi i64 [ %40, %34 ], [ 1, %15 ]
  %36 = load i32*, i32** %17, align 8
  %37 = getelementptr inbounds i32, i32* %18, i64 %35
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds i32, i32* %36, i64 %35
  store i32 %38, i32* %39, align 4
  %40 = add nuw nsw i64 %35, 1
  %41 = load i32, i32* %3, align 8
  %42 = sext i32 %41 to i64
  %43 = icmp slt i64 %40, %42
  br i1 %43, label %34, label %31

44:                                               ; preds = %31
  %45 = bitcast i32* %18 to i8*
  tail call void @_ZdaPv(i8* %45) #19
  %46 = load i32, i32* %3, align 8
  br label %47

47:                                               ; preds = %31, %44, %10, %6
  %48 = phi i32 [ %32, %31 ], [ %46, %44 ], [ %4, %10 ], [ 0, %6 ]
  %49 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 7, i32 0, i32 1
  %50 = bitcast %"class.std::__1::basic_string"** %49 to i32**
  %51 = load i32*, i32** %50, align 8
  %52 = add nsw i32 %48, 1
  store i32 %52, i32* %3, align 8
  %53 = sext i32 %48 to i64
  %54 = getelementptr inbounds i32, i32* %51, i64 %53
  store i32 %1, i32* %54, align 4
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #5

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.re2::Regexp"* @_ZN3re26Regexp9HaveMatchEiNS0_10ParseFlagsE(i32, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 40) #19
  %4 = bitcast i8* %3 to %"class.re2::Regexp"*
  store i8 21, i8* %3, align 8
  %5 = getelementptr inbounds i8, i8* %3, i64 1
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds i8, i8* %3, i64 2
  %7 = bitcast i8* %6 to i16*
  %8 = trunc i32 %1 to i16
  store i16 %8, i16* %7, align 2
  %9 = getelementptr inbounds i8, i8* %3, i64 4
  %10 = bitcast i8* %9 to i16*
  store i16 1, i16* %10, align 4
  %11 = getelementptr inbounds i8, i8* %3, i64 6
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %11, i8 0, i64 34, i1 false) #18
  %12 = getelementptr inbounds i8, i8* %3, i64 24
  %13 = bitcast i8* %12 to i32*
  store i32 %0, i32* %13, align 8
  ret %"class.re2::Regexp"* %4
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Regexp"* @_ZN3re26Regexp15StarPlusOrQuestENS_8RegexpOpEPS0_NS0_10ParseFlagsE(i32, %"class.re2::Regexp"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 0
  %5 = load i8, i8* %4, align 8
  %6 = zext i8 %5 to i32
  %7 = icmp eq i32 %6, %0
  br i1 %7, label %8, label %13

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 2
  %10 = load i16, i16* %9, align 2
  %11 = zext i16 %10 to i32
  %12 = icmp eq i32 %11, %2
  br i1 %12, label %65, label %13

13:                                               ; preds = %8, %3
  %14 = icmp eq i8 %5, 7
  %15 = add nsw i32 %6, -7
  %16 = icmp ult i32 %15, 3
  br i1 %16, label %17, label %50

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 2
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = icmp eq i32 %20, %2
  br i1 %21, label %22, label %50

22:                                               ; preds = %17
  br i1 %14, label %65, label %23

23:                                               ; preds = %22
  %24 = tail call i8* @_Znwm(i64 40) #19
  %25 = bitcast i8* %24 to %"class.re2::Regexp"*
  store i8 7, i8* %24, align 8
  %26 = getelementptr inbounds i8, i8* %24, i64 1
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds i8, i8* %24, i64 2
  %28 = bitcast i8* %27 to i16*
  %29 = trunc i32 %2 to i16
  store i16 %29, i16* %28, align 2
  %30 = getelementptr inbounds i8, i8* %24, i64 4
  %31 = bitcast i8* %30 to i16*
  store i16 1, i16* %31, align 4
  %32 = getelementptr inbounds i8, i8* %24, i64 6
  %33 = bitcast i8* %32 to i16*
  %34 = getelementptr inbounds i8, i8* %24, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %34, i8 0, i64 32, i1 false) #18
  store i16 1, i16* %33, align 2
  %35 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 4
  %36 = load i16, i16* %35, align 2
  %37 = icmp ult i16 %36, 2
  %38 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 5
  br i1 %37, label %39, label %41

39:                                               ; preds = %23
  %40 = bitcast %union.anon* %38 to %"class.re2::Regexp"**
  br label %44

41:                                               ; preds = %23
  %42 = getelementptr inbounds %union.anon, %union.anon* %38, i64 0, i32 0
  %43 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %42, align 8
  br label %44

44:                                               ; preds = %39, %41
  %45 = phi %"class.re2::Regexp"** [ %40, %39 ], [ %43, %41 ]
  %46 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %45, align 8
  %47 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %46)
  %48 = getelementptr inbounds i8, i8* %24, i64 8
  %49 = bitcast i8* %48 to %"class.re2::Regexp"**
  store %"class.re2::Regexp"* %47, %"class.re2::Regexp"** %49, align 8
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %1)
  br label %65

50:                                               ; preds = %13, %17
  %51 = tail call i8* @_Znwm(i64 40) #19
  %52 = bitcast i8* %51 to %"class.re2::Regexp"*
  %53 = trunc i32 %0 to i8
  store i8 %53, i8* %51, align 8
  %54 = getelementptr inbounds i8, i8* %51, i64 1
  store i8 0, i8* %54, align 1
  %55 = getelementptr inbounds i8, i8* %51, i64 2
  %56 = bitcast i8* %55 to i16*
  %57 = trunc i32 %2 to i16
  store i16 %57, i16* %56, align 2
  %58 = getelementptr inbounds i8, i8* %51, i64 4
  %59 = bitcast i8* %58 to i16*
  store i16 1, i16* %59, align 4
  %60 = getelementptr inbounds i8, i8* %51, i64 6
  %61 = bitcast i8* %60 to i16*
  %62 = getelementptr inbounds i8, i8* %51, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %62, i8 0, i64 24, i1 false) #18
  store i16 1, i16* %61, align 2
  %63 = getelementptr inbounds i8, i8* %51, i64 8
  %64 = bitcast i8* %63 to %"class.re2::Regexp"**
  store %"class.re2::Regexp"* %1, %"class.re2::Regexp"** %64, align 8
  br label %65

65:                                               ; preds = %22, %8, %50, %44
  %66 = phi %"class.re2::Regexp"* [ %25, %44 ], [ %52, %50 ], [ %1, %8 ], [ %1, %22 ]
  ret %"class.re2::Regexp"* %66
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Regexp"* @_ZN3re26Regexp4PlusEPS0_NS0_10ParseFlagsE(%"class.re2::Regexp"*, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp15StarPlusOrQuestENS_8RegexpOpEPS0_NS0_10ParseFlagsE(i32 8, %"class.re2::Regexp"* %0, i32 %1)
  ret %"class.re2::Regexp"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Regexp"* @_ZN3re26Regexp4StarEPS0_NS0_10ParseFlagsE(%"class.re2::Regexp"*, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp15StarPlusOrQuestENS_8RegexpOpEPS0_NS0_10ParseFlagsE(i32 7, %"class.re2::Regexp"* %0, i32 %1)
  ret %"class.re2::Regexp"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Regexp"* @_ZN3re26Regexp5QuestEPS0_NS0_10ParseFlagsE(%"class.re2::Regexp"*, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp15StarPlusOrQuestENS_8RegexpOpEPS0_NS0_10ParseFlagsE(i32 9, %"class.re2::Regexp"* %0, i32 %1)
  ret %"class.re2::Regexp"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Regexp"* @_ZN3re26Regexp17ConcatOrAlternateENS_8RegexpOpEPPS0_iNS0_10ParseFlagsEb(i32, %"class.re2::Regexp"**, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  switch i32 %2, label %28 [
    i32 1, label %6
    i32 0, label %8
  ]

6:                                                ; preds = %5
  %7 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %1, align 8
  br label %308

8:                                                ; preds = %5
  %9 = icmp eq i32 %0, 6
  %10 = tail call i8* @_Znwm(i64 40) #19
  %11 = bitcast i8* %10 to %"class.re2::Regexp"*
  br i1 %9, label %12, label %20

12:                                               ; preds = %8
  store i8 1, i8* %10, align 8
  %13 = getelementptr inbounds i8, i8* %10, i64 1
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds i8, i8* %10, i64 2
  %15 = bitcast i8* %14 to i16*
  %16 = trunc i32 %3 to i16
  store i16 %16, i16* %15, align 2
  %17 = getelementptr inbounds i8, i8* %10, i64 4
  %18 = bitcast i8* %17 to i16*
  store i16 1, i16* %18, align 4
  %19 = getelementptr inbounds i8, i8* %10, i64 6
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %19, i8 0, i64 34, i1 false) #18
  br label %308

20:                                               ; preds = %8
  store i8 2, i8* %10, align 8
  %21 = getelementptr inbounds i8, i8* %10, i64 1
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds i8, i8* %10, i64 2
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %3 to i16
  store i16 %24, i16* %23, align 2
  %25 = getelementptr inbounds i8, i8* %10, i64 4
  %26 = bitcast i8* %25 to i16*
  store i16 1, i16* %26, align 4
  %27 = getelementptr inbounds i8, i8* %10, i64 6
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %27, i8 0, i64 34, i1 false) #18
  br label %308

28:                                               ; preds = %5
  %29 = icmp ne i32 %0, 6
  %30 = xor i1 %4, true
  %31 = or i1 %29, %30
  br i1 %31, label %46, label %32

32:                                               ; preds = %28
  %33 = icmp slt i32 %2, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %32
  tail call void @abort() #21
  unreachable

35:                                               ; preds = %32
  %36 = sext i32 %2 to i64
  %37 = shl nsw i64 %36, 3
  %38 = tail call i8* @_Znwm(i64 %37) #19
  %39 = ptrtoint i8* %38 to i64
  %40 = bitcast i8* %38 to %"class.re2::Regexp"**
  %41 = bitcast %"class.re2::Regexp"** %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 8 %41, i64 %37, i1 false)
  %42 = tail call i32 @_ZN3re26Regexp17FactorAlternationEPPS0_iNS0_10ParseFlagsE(%"class.re2::Regexp"** nonnull %40, i32 %2, i32 %3) #18
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %46

44:                                               ; preds = %35
  %45 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %40, align 8
  br label %304

46:                                               ; preds = %28, %35
  %47 = phi i64 [ 0, %28 ], [ %39, %35 ]
  %48 = phi i32 [ %2, %28 ], [ %42, %35 ]
  %49 = phi %"class.re2::Regexp"** [ %1, %28 ], [ %40, %35 ]
  %50 = icmp sgt i32 %48, 65535
  br i1 %50, label %51, label %113

51:                                               ; preds = %46
  %52 = add nuw nsw i32 %48, 65534
  %53 = sdiv i32 %52, 65535
  %54 = tail call i8* @_Znwm(i64 40) #19
  %55 = bitcast i8* %54 to %"class.re2::Regexp"*
  %56 = trunc i32 %0 to i8
  store i8 %56, i8* %54, align 8
  %57 = getelementptr inbounds i8, i8* %54, i64 1
  store i8 0, i8* %57, align 1
  %58 = getelementptr inbounds i8, i8* %54, i64 2
  %59 = bitcast i8* %58 to i16*
  %60 = trunc i32 %3 to i16
  store i16 %60, i16* %59, align 2
  %61 = getelementptr inbounds i8, i8* %54, i64 4
  %62 = bitcast i8* %61 to i16*
  store i16 1, i16* %62, align 4
  %63 = getelementptr inbounds i8, i8* %54, i64 6
  %64 = bitcast i8* %63 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %63, i8 0, i64 34, i1 false) #18
  %65 = icmp sgt i32 %52, 131069
  br i1 %65, label %66, label %73

66:                                               ; preds = %51
  %67 = sext i32 %53 to i64
  %68 = shl nuw nsw i64 %67, 3
  %69 = tail call i8* @_Znam(i64 %68) #19
  %70 = getelementptr inbounds i8, i8* %54, i64 8
  %71 = bitcast i8* %70 to i8**
  store i8* %69, i8** %71, align 8
  %72 = bitcast i8* %69 to %"class.re2::Regexp"**
  br label %73

73:                                               ; preds = %51, %66
  %74 = phi %"class.re2::Regexp"** [ null, %51 ], [ %72, %66 ]
  %75 = trunc i32 %53 to i16
  store i16 %75, i16* %64, align 2
  %76 = icmp ult i16 %75, 2
  %77 = getelementptr inbounds i8, i8* %54, i64 8
  %78 = bitcast i8* %77 to %"class.re2::Regexp"**
  %79 = select i1 %76, %"class.re2::Regexp"** %78, %"class.re2::Regexp"** %74
  %80 = add nsw i32 %53, -1
  %81 = icmp sgt i32 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %73
  %83 = zext i32 %80 to i64
  br label %92

84:                                               ; preds = %92, %73
  %85 = mul nsw i32 %80, 65535
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %49, i64 %86
  %88 = sub nsw i32 %48, %85
  %89 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp17ConcatOrAlternateENS_8RegexpOpEPPS0_iNS0_10ParseFlagsEb(i32 %0, %"class.re2::Regexp"** %87, i32 %88, i32 %3, i1 zeroext false)
  %90 = sext i32 %80 to i64
  %91 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %79, i64 %90
  store %"class.re2::Regexp"* %89, %"class.re2::Regexp"** %91, align 8
  br label %301

92:                                               ; preds = %92, %82
  %93 = phi i64 [ 0, %82 ], [ %111, %92 ]
  %94 = mul nuw nsw i64 %93, 65535
  %95 = getelementptr %"class.re2::Regexp"*, %"class.re2::Regexp"** %49, i64 %94
  %96 = bitcast %"class.re2::Regexp"** %95 to i8*
  %97 = tail call i8* @_Znwm(i64 40) #19
  store i8 %56, i8* %97, align 8
  %98 = getelementptr inbounds i8, i8* %97, i64 1
  store i8 0, i8* %98, align 1
  %99 = getelementptr inbounds i8, i8* %97, i64 2
  %100 = bitcast i8* %99 to i16*
  store i16 %60, i16* %100, align 2
  %101 = getelementptr inbounds i8, i8* %97, i64 4
  %102 = bitcast i8* %101 to i16*
  store i16 1, i16* %102, align 4
  %103 = getelementptr inbounds i8, i8* %97, i64 6
  %104 = bitcast i8* %103 to i16*
  %105 = getelementptr inbounds i8, i8* %97, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %105, i8 0, i64 24, i1 false) #18
  %106 = tail call i8* @_Znam(i64 524280) #19
  %107 = getelementptr inbounds i8, i8* %97, i64 8
  %108 = bitcast i8* %107 to i8**
  store i8* %106, i8** %108, align 8
  store i16 -1, i16* %104, align 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %106, i8* align 8 %96, i64 524280, i1 false)
  %109 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %79, i64 %93
  %110 = bitcast %"class.re2::Regexp"** %109 to i8**
  store i8* %97, i8** %110, align 8
  %111 = add nuw nsw i64 %93, 1
  %112 = icmp eq i64 %111, %83
  br i1 %112, label %84, label %92

113:                                              ; preds = %46
  %114 = tail call i8* @_Znwm(i64 40) #19
  %115 = bitcast i8* %114 to %"class.re2::Regexp"*
  %116 = trunc i32 %0 to i8
  store i8 %116, i8* %114, align 8
  %117 = getelementptr inbounds i8, i8* %114, i64 1
  store i8 0, i8* %117, align 1
  %118 = getelementptr inbounds i8, i8* %114, i64 2
  %119 = bitcast i8* %118 to i16*
  %120 = trunc i32 %3 to i16
  store i16 %120, i16* %119, align 2
  %121 = getelementptr inbounds i8, i8* %114, i64 4
  %122 = bitcast i8* %121 to i16*
  store i16 1, i16* %122, align 4
  %123 = getelementptr inbounds i8, i8* %114, i64 6
  %124 = bitcast i8* %123 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %123, i8 0, i64 34, i1 false) #18
  %125 = icmp sgt i32 %48, 1
  br i1 %125, label %126, label %133

126:                                              ; preds = %113
  %127 = sext i32 %48 to i64
  %128 = shl nuw nsw i64 %127, 3
  %129 = tail call i8* @_Znam(i64 %128) #19
  %130 = getelementptr inbounds i8, i8* %114, i64 8
  %131 = bitcast i8* %130 to i8**
  store i8* %129, i8** %131, align 8
  %132 = bitcast i8* %129 to %"class.re2::Regexp"**
  br label %133

133:                                              ; preds = %113, %126
  %134 = phi %"class.re2::Regexp"** [ null, %113 ], [ %132, %126 ]
  %135 = trunc i32 %48 to i16
  store i16 %135, i16* %124, align 2
  %136 = icmp ult i16 %135, 2
  %137 = getelementptr inbounds i8, i8* %114, i64 8
  %138 = bitcast i8* %137 to %"class.re2::Regexp"**
  %139 = select i1 %136, %"class.re2::Regexp"** %138, %"class.re2::Regexp"** %134
  %140 = icmp sgt i32 %48, 0
  br i1 %140, label %141, label %301

141:                                              ; preds = %133
  %142 = zext i32 %48 to i64
  %143 = icmp ult i32 %48, 4
  br i1 %143, label %229, label %144

144:                                              ; preds = %141
  %145 = getelementptr %"class.re2::Regexp"*, %"class.re2::Regexp"** %139, i64 %142
  %146 = getelementptr %"class.re2::Regexp"*, %"class.re2::Regexp"** %49, i64 %142
  %147 = icmp ult %"class.re2::Regexp"** %139, %146
  %148 = icmp ult %"class.re2::Regexp"** %49, %145
  %149 = and i1 %147, %148
  br i1 %149, label %229, label %150

150:                                              ; preds = %144
  %151 = and i64 %142, 4294967292
  %152 = add nsw i64 %151, -4
  %153 = lshr exact i64 %152, 2
  %154 = add nuw nsw i64 %153, 1
  %155 = and i64 %154, 3
  %156 = icmp ult i64 %152, 12
  br i1 %156, label %208, label %157

157:                                              ; preds = %150
  %158 = sub nsw i64 %154, %155
  br label %159

159:                                              ; preds = %159, %157
  %160 = phi i64 [ 0, %157 ], [ %205, %159 ]
  %161 = phi i64 [ %158, %157 ], [ %206, %159 ]
  %162 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %49, i64 %160
  %163 = bitcast %"class.re2::Regexp"** %162 to <2 x i64>*
  %164 = load <2 x i64>, <2 x i64>* %163, align 8, !alias.scope !19
  %165 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %162, i64 2
  %166 = bitcast %"class.re2::Regexp"** %165 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 8, !alias.scope !19
  %168 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %139, i64 %160
  %169 = bitcast %"class.re2::Regexp"** %168 to <2 x i64>*
  store <2 x i64> %164, <2 x i64>* %169, align 8, !alias.scope !22, !noalias !19
  %170 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %168, i64 2
  %171 = bitcast %"class.re2::Regexp"** %170 to <2 x i64>*
  store <2 x i64> %167, <2 x i64>* %171, align 8, !alias.scope !22, !noalias !19
  %172 = or i64 %160, 4
  %173 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %49, i64 %172
  %174 = bitcast %"class.re2::Regexp"** %173 to <2 x i64>*
  %175 = load <2 x i64>, <2 x i64>* %174, align 8, !alias.scope !19
  %176 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %173, i64 2
  %177 = bitcast %"class.re2::Regexp"** %176 to <2 x i64>*
  %178 = load <2 x i64>, <2 x i64>* %177, align 8, !alias.scope !19
  %179 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %139, i64 %172
  %180 = bitcast %"class.re2::Regexp"** %179 to <2 x i64>*
  store <2 x i64> %175, <2 x i64>* %180, align 8, !alias.scope !22, !noalias !19
  %181 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %179, i64 2
  %182 = bitcast %"class.re2::Regexp"** %181 to <2 x i64>*
  store <2 x i64> %178, <2 x i64>* %182, align 8, !alias.scope !22, !noalias !19
  %183 = or i64 %160, 8
  %184 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %49, i64 %183
  %185 = bitcast %"class.re2::Regexp"** %184 to <2 x i64>*
  %186 = load <2 x i64>, <2 x i64>* %185, align 8, !alias.scope !19
  %187 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %184, i64 2
  %188 = bitcast %"class.re2::Regexp"** %187 to <2 x i64>*
  %189 = load <2 x i64>, <2 x i64>* %188, align 8, !alias.scope !19
  %190 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %139, i64 %183
  %191 = bitcast %"class.re2::Regexp"** %190 to <2 x i64>*
  store <2 x i64> %186, <2 x i64>* %191, align 8, !alias.scope !22, !noalias !19
  %192 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %190, i64 2
  %193 = bitcast %"class.re2::Regexp"** %192 to <2 x i64>*
  store <2 x i64> %189, <2 x i64>* %193, align 8, !alias.scope !22, !noalias !19
  %194 = or i64 %160, 12
  %195 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %49, i64 %194
  %196 = bitcast %"class.re2::Regexp"** %195 to <2 x i64>*
  %197 = load <2 x i64>, <2 x i64>* %196, align 8, !alias.scope !19
  %198 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %195, i64 2
  %199 = bitcast %"class.re2::Regexp"** %198 to <2 x i64>*
  %200 = load <2 x i64>, <2 x i64>* %199, align 8, !alias.scope !19
  %201 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %139, i64 %194
  %202 = bitcast %"class.re2::Regexp"** %201 to <2 x i64>*
  store <2 x i64> %197, <2 x i64>* %202, align 8, !alias.scope !22, !noalias !19
  %203 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %201, i64 2
  %204 = bitcast %"class.re2::Regexp"** %203 to <2 x i64>*
  store <2 x i64> %200, <2 x i64>* %204, align 8, !alias.scope !22, !noalias !19
  %205 = add i64 %160, 16
  %206 = add i64 %161, -4
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %208, label %159, !llvm.loop !24

208:                                              ; preds = %159, %150
  %209 = phi i64 [ 0, %150 ], [ %205, %159 ]
  %210 = icmp eq i64 %155, 0
  br i1 %210, label %227, label %211

211:                                              ; preds = %208, %211
  %212 = phi i64 [ %224, %211 ], [ %209, %208 ]
  %213 = phi i64 [ %225, %211 ], [ %155, %208 ]
  %214 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %49, i64 %212
  %215 = bitcast %"class.re2::Regexp"** %214 to <2 x i64>*
  %216 = load <2 x i64>, <2 x i64>* %215, align 8, !alias.scope !19
  %217 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %214, i64 2
  %218 = bitcast %"class.re2::Regexp"** %217 to <2 x i64>*
  %219 = load <2 x i64>, <2 x i64>* %218, align 8, !alias.scope !19
  %220 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %139, i64 %212
  %221 = bitcast %"class.re2::Regexp"** %220 to <2 x i64>*
  store <2 x i64> %216, <2 x i64>* %221, align 8, !alias.scope !22, !noalias !19
  %222 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %220, i64 2
  %223 = bitcast %"class.re2::Regexp"** %222 to <2 x i64>*
  store <2 x i64> %219, <2 x i64>* %223, align 8, !alias.scope !22, !noalias !19
  %224 = add i64 %212, 4
  %225 = add i64 %213, -1
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %227, label %211, !llvm.loop !26

227:                                              ; preds = %211, %208
  %228 = icmp eq i64 %151, %142
  br i1 %228, label %301, label %229

229:                                              ; preds = %227, %144, %141
  %230 = phi i64 [ 0, %144 ], [ 0, %141 ], [ %151, %227 ]
  %231 = sub nsw i64 %142, %230
  %232 = xor i64 %230, -1
  %233 = add nsw i64 %232, %142
  %234 = and i64 %231, 7
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %247, label %236

236:                                              ; preds = %229, %236
  %237 = phi i64 [ %244, %236 ], [ %230, %229 ]
  %238 = phi i64 [ %245, %236 ], [ %234, %229 ]
  %239 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %49, i64 %237
  %240 = bitcast %"class.re2::Regexp"** %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %139, i64 %237
  %243 = bitcast %"class.re2::Regexp"** %242 to i64*
  store i64 %241, i64* %243, align 8
  %244 = add nuw nsw i64 %237, 1
  %245 = add i64 %238, -1
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %247, label %236, !llvm.loop !28

247:                                              ; preds = %236, %229
  %248 = phi i64 [ %230, %229 ], [ %244, %236 ]
  %249 = icmp ult i64 %233, 7
  br i1 %249, label %301, label %250

250:                                              ; preds = %247, %250
  %251 = phi i64 [ %299, %250 ], [ %248, %247 ]
  %252 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %49, i64 %251
  %253 = bitcast %"class.re2::Regexp"** %252 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %139, i64 %251
  %256 = bitcast %"class.re2::Regexp"** %255 to i64*
  store i64 %254, i64* %256, align 8
  %257 = add nuw nsw i64 %251, 1
  %258 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %49, i64 %257
  %259 = bitcast %"class.re2::Regexp"** %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %139, i64 %257
  %262 = bitcast %"class.re2::Regexp"** %261 to i64*
  store i64 %260, i64* %262, align 8
  %263 = add nuw nsw i64 %251, 2
  %264 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %49, i64 %263
  %265 = bitcast %"class.re2::Regexp"** %264 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %139, i64 %263
  %268 = bitcast %"class.re2::Regexp"** %267 to i64*
  store i64 %266, i64* %268, align 8
  %269 = add nuw nsw i64 %251, 3
  %270 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %49, i64 %269
  %271 = bitcast %"class.re2::Regexp"** %270 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %139, i64 %269
  %274 = bitcast %"class.re2::Regexp"** %273 to i64*
  store i64 %272, i64* %274, align 8
  %275 = add nuw nsw i64 %251, 4
  %276 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %49, i64 %275
  %277 = bitcast %"class.re2::Regexp"** %276 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %139, i64 %275
  %280 = bitcast %"class.re2::Regexp"** %279 to i64*
  store i64 %278, i64* %280, align 8
  %281 = add nuw nsw i64 %251, 5
  %282 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %49, i64 %281
  %283 = bitcast %"class.re2::Regexp"** %282 to i64*
  %284 = load i64, i64* %283, align 8
  %285 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %139, i64 %281
  %286 = bitcast %"class.re2::Regexp"** %285 to i64*
  store i64 %284, i64* %286, align 8
  %287 = add nuw nsw i64 %251, 6
  %288 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %49, i64 %287
  %289 = bitcast %"class.re2::Regexp"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %139, i64 %287
  %292 = bitcast %"class.re2::Regexp"** %291 to i64*
  store i64 %290, i64* %292, align 8
  %293 = add nuw nsw i64 %251, 7
  %294 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %49, i64 %293
  %295 = bitcast %"class.re2::Regexp"** %294 to i64*
  %296 = load i64, i64* %295, align 8
  %297 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %139, i64 %293
  %298 = bitcast %"class.re2::Regexp"** %297 to i64*
  store i64 %296, i64* %298, align 8
  %299 = add nuw nsw i64 %251, 8
  %300 = icmp eq i64 %299, %142
  br i1 %300, label %301, label %250, !llvm.loop !29

301:                                              ; preds = %247, %250, %227, %133, %84
  %302 = phi %"class.re2::Regexp"* [ %55, %84 ], [ %115, %133 ], [ %115, %227 ], [ %115, %250 ], [ %115, %247 ]
  %303 = icmp eq i64 %47, 0
  br i1 %303, label %308, label %304

304:                                              ; preds = %44, %301
  %305 = phi %"class.re2::Regexp"* [ %45, %44 ], [ %302, %301 ]
  %306 = phi i64 [ %39, %44 ], [ %47, %301 ]
  %307 = inttoptr i64 %306 to i8*
  tail call void @_ZdlPv(i8* %307) #19
  br label %308

308:                                              ; preds = %304, %301, %20, %12, %6
  %309 = phi %"class.re2::Regexp"* [ %7, %6 ], [ %11, %12 ], [ %11, %20 ], [ %302, %301 ], [ %305, %304 ]
  ret %"class.re2::Regexp"* %309
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @_ZN3re26Regexp17FactorAlternationEPPS0_iNS0_10ParseFlagsE(%"class.re2::Regexp"**, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Regexp"* @_ZN3re26Regexp6ConcatEPPS0_iNS0_10ParseFlagsE(%"class.re2::Regexp"**, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp17ConcatOrAlternateENS_8RegexpOpEPPS0_iNS0_10ParseFlagsEb(i32 5, %"class.re2::Regexp"** %0, i32 %1, i32 %2, i1 zeroext false)
  ret %"class.re2::Regexp"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Regexp"* @_ZN3re26Regexp9AlternateEPPS0_iNS0_10ParseFlagsE(%"class.re2::Regexp"**, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp17ConcatOrAlternateENS_8RegexpOpEPPS0_iNS0_10ParseFlagsEb(i32 6, %"class.re2::Regexp"** %0, i32 %1, i32 %2, i1 zeroext true)
  ret %"class.re2::Regexp"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Regexp"* @_ZN3re26Regexp17AlternateNoFactorEPPS0_iNS0_10ParseFlagsE(%"class.re2::Regexp"**, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp17ConcatOrAlternateENS_8RegexpOpEPPS0_iNS0_10ParseFlagsEb(i32 6, %"class.re2::Regexp"** %0, i32 %1, i32 %2, i1 zeroext false)
  ret %"class.re2::Regexp"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.re2::Regexp"* @_ZN3re26Regexp7CaptureEPS0_NS0_10ParseFlagsEi(%"class.re2::Regexp"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 40) #19
  %5 = bitcast i8* %4 to %"class.re2::Regexp"*
  store i8 11, i8* %4, align 8
  %6 = getelementptr inbounds i8, i8* %4, i64 1
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds i8, i8* %4, i64 2
  %8 = bitcast i8* %7 to i16*
  %9 = trunc i32 %1 to i16
  store i16 %9, i16* %8, align 2
  %10 = getelementptr inbounds i8, i8* %4, i64 4
  %11 = bitcast i8* %10 to i16*
  store i16 1, i16* %11, align 4
  %12 = getelementptr inbounds i8, i8* %4, i64 6
  %13 = bitcast i8* %12 to i16*
  %14 = getelementptr inbounds i8, i8* %4, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %14, i8 0, i64 24, i1 false) #18
  store i16 1, i16* %13, align 2
  %15 = getelementptr inbounds i8, i8* %4, i64 8
  %16 = bitcast i8* %15 to %"class.re2::Regexp"**
  store %"class.re2::Regexp"* %0, %"class.re2::Regexp"** %16, align 8
  %17 = getelementptr inbounds i8, i8* %4, i64 24
  %18 = bitcast i8* %17 to i32*
  store i32 %2, i32* %18, align 8
  ret %"class.re2::Regexp"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.re2::Regexp"* @_ZN3re26Regexp6RepeatEPS0_NS0_10ParseFlagsEii(%"class.re2::Regexp"*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = tail call i8* @_Znwm(i64 40) #19
  %6 = bitcast i8* %5 to %"class.re2::Regexp"*
  store i8 10, i8* %5, align 8
  %7 = getelementptr inbounds i8, i8* %5, i64 1
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds i8, i8* %5, i64 2
  %9 = bitcast i8* %8 to i16*
  %10 = trunc i32 %1 to i16
  store i16 %10, i16* %9, align 2
  %11 = getelementptr inbounds i8, i8* %5, i64 4
  %12 = bitcast i8* %11 to i16*
  store i16 1, i16* %12, align 4
  %13 = getelementptr inbounds i8, i8* %5, i64 6
  %14 = bitcast i8* %13 to i16*
  %15 = getelementptr inbounds i8, i8* %5, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %15, i8 0, i64 24, i1 false) #18
  store i16 1, i16* %14, align 2
  %16 = getelementptr inbounds i8, i8* %5, i64 8
  %17 = bitcast i8* %16 to %"class.re2::Regexp"**
  store %"class.re2::Regexp"* %0, %"class.re2::Regexp"** %17, align 8
  %18 = getelementptr inbounds i8, i8* %5, i64 24
  %19 = getelementptr inbounds i8, i8* %5, i64 28
  %20 = bitcast i8* %19 to i32*
  store i32 %2, i32* %20, align 4
  %21 = bitcast i8* %18 to i32*
  store i32 %3, i32* %21, align 8
  ret %"class.re2::Regexp"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.re2::Regexp"* @_ZN3re26Regexp10NewLiteralEiNS0_10ParseFlagsE(i32, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 40) #19
  %4 = bitcast i8* %3 to %"class.re2::Regexp"*
  store i8 3, i8* %3, align 8
  %5 = getelementptr inbounds i8, i8* %3, i64 1
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds i8, i8* %3, i64 2
  %7 = bitcast i8* %6 to i16*
  %8 = trunc i32 %1 to i16
  store i16 %8, i16* %7, align 2
  %9 = getelementptr inbounds i8, i8* %3, i64 4
  %10 = bitcast i8* %9 to i16*
  store i16 1, i16* %10, align 4
  %11 = getelementptr inbounds i8, i8* %3, i64 6
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %11, i8 0, i64 34, i1 false) #18
  %12 = getelementptr inbounds i8, i8* %3, i64 24
  %13 = bitcast i8* %12 to i32*
  store i32 %0, i32* %13, align 8
  ret %"class.re2::Regexp"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.re2::Regexp"* @_ZN3re26Regexp13LiteralStringEPiiNS0_10ParseFlagsE(i32* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %15

5:                                                ; preds = %3
  %6 = tail call i8* @_Znwm(i64 40) #19
  %7 = bitcast i8* %6 to %"class.re2::Regexp"*
  store i8 2, i8* %6, align 8
  %8 = getelementptr inbounds i8, i8* %6, i64 1
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds i8, i8* %6, i64 2
  %10 = bitcast i8* %9 to i16*
  %11 = trunc i32 %2 to i16
  store i16 %11, i16* %10, align 2
  %12 = getelementptr inbounds i8, i8* %6, i64 4
  %13 = bitcast i8* %12 to i16*
  store i16 1, i16* %13, align 4
  %14 = getelementptr inbounds i8, i8* %6, i64 6
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %14, i8 0, i64 34, i1 false) #18
  br label %47

15:                                               ; preds = %3
  %16 = icmp eq i32 %1, 1
  br i1 %16, label %17, label %30

17:                                               ; preds = %15
  %18 = load i32, i32* %0, align 4
  %19 = tail call i8* @_Znwm(i64 40) #19
  %20 = bitcast i8* %19 to %"class.re2::Regexp"*
  store i8 3, i8* %19, align 8
  %21 = getelementptr inbounds i8, i8* %19, i64 1
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds i8, i8* %19, i64 2
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %2 to i16
  store i16 %24, i16* %23, align 2
  %25 = getelementptr inbounds i8, i8* %19, i64 4
  %26 = bitcast i8* %25 to i16*
  store i16 1, i16* %26, align 4
  %27 = getelementptr inbounds i8, i8* %19, i64 6
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %27, i8 0, i64 34, i1 false) #18
  %28 = getelementptr inbounds i8, i8* %19, i64 24
  %29 = bitcast i8* %28 to i32*
  store i32 %18, i32* %29, align 8
  br label %47

30:                                               ; preds = %15
  %31 = tail call i8* @_Znwm(i64 40) #19
  %32 = bitcast i8* %31 to %"class.re2::Regexp"*
  store i8 4, i8* %31, align 8
  %33 = getelementptr inbounds i8, i8* %31, i64 1
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds i8, i8* %31, i64 2
  %35 = bitcast i8* %34 to i16*
  %36 = trunc i32 %2 to i16
  store i16 %36, i16* %35, align 2
  %37 = getelementptr inbounds i8, i8* %31, i64 4
  %38 = bitcast i8* %37 to i16*
  store i16 1, i16* %38, align 4
  %39 = getelementptr inbounds i8, i8* %31, i64 6
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %39, i8 0, i64 34, i1 false) #18
  %40 = zext i32 %1 to i64
  br label %41

41:                                               ; preds = %41, %30
  %42 = phi i64 [ 0, %30 ], [ %45, %41 ]
  %43 = getelementptr inbounds i32, i32* %0, i64 %42
  %44 = load i32, i32* %43, align 4
  tail call void @_ZN3re26Regexp15AddRuneToStringEi(%"class.re2::Regexp"* nonnull %32, i32 %44)
  %45 = add nuw nsw i64 %42, 1
  %46 = icmp eq i64 %45, %40
  br i1 %46, label %47, label %41

47:                                               ; preds = %41, %17, %5
  %48 = phi %"class.re2::Regexp"* [ %7, %5 ], [ %20, %17 ], [ %32, %41 ]
  ret %"class.re2::Regexp"* %48
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.re2::Regexp"* @_ZN3re26Regexp12NewCharClassEPNS_9CharClassENS0_10ParseFlagsE(%"class.re2::CharClass"*, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 40) #19
  %4 = bitcast i8* %3 to %"class.re2::Regexp"*
  store i8 20, i8* %3, align 8
  %5 = getelementptr inbounds i8, i8* %3, i64 1
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds i8, i8* %3, i64 2
  %7 = bitcast i8* %6 to i16*
  %8 = trunc i32 %1 to i16
  store i16 %8, i16* %7, align 2
  %9 = getelementptr inbounds i8, i8* %3, i64 4
  %10 = bitcast i8* %9 to i16*
  store i16 1, i16* %10, align 4
  %11 = getelementptr inbounds i8, i8* %3, i64 6
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %11, i8 0, i64 34, i1 false) #18
  %12 = getelementptr inbounds i8, i8* %3, i64 24
  %13 = bitcast i8* %12 to %"class.re2::CharClass"**
  store %"class.re2::CharClass"* %0, %"class.re2::CharClass"** %13, align 8
  ret %"class.re2::Regexp"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re26Regexp4SwapEPS0_(%"class.re2::Regexp"* nocapture, %"class.re2::Regexp"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca [40 x i8], align 16
  %4 = getelementptr inbounds [40 x i8], [40 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4)
  %5 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %4, i8* align 1 %5, i64 40, i1 false)
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 40, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* nonnull align 16 %4, i64 40, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3re26Regexp5EqualEPS0_S1_(%"class.re2::Regexp"* readonly, %"class.re2::Regexp"* readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = icmp eq %"class.re2::Regexp"* %0, null
  %5 = icmp eq %"class.re2::Regexp"* %1, null
  %6 = or i1 %4, %5
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = icmp eq %"class.re2::Regexp"* %0, %1
  br label %238

9:                                                ; preds = %2
  %10 = tail call fastcc zeroext i1 @_ZN3re2L8TopEqualEPNS_6RegexpES1_(%"class.re2::Regexp"* nonnull %0, %"class.re2::Regexp"* nonnull %1)
  br i1 %10, label %11, label %238

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 0
  %13 = load i8, i8* %12, align 8
  %14 = zext i8 %13 to i32
  %15 = add nsw i32 %14, -5
  %16 = icmp ult i32 %15, 7
  br i1 %16, label %17, label %238

17:                                               ; preds = %11
  %18 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #18
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #18
  %22 = bitcast %"class.re2::Regexp"*** %20 to i64*
  %23 = bitcast %"class.std::__1::vector"* %3 to i64*
  %24 = bitcast %"class.re2::Regexp"*** %21 to i64*
  br label %25

25:                                               ; preds = %223, %17
  %26 = phi i8 [ %13, %17 ], [ %227, %223 ]
  %27 = phi %"class.re2::Regexp"* [ %0, %17 ], [ %224, %223 ]
  %28 = phi %"class.re2::Regexp"* [ %1, %17 ], [ %225, %223 ]
  switch i8 %26, label %204 [
    i8 6, label %29
    i8 5, label %29
    i8 7, label %178
    i8 8, label %178
    i8 9, label %178
    i8 10, label %178
    i8 11, label %178
  ]

29:                                               ; preds = %25, %25
  %30 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %27, i64 0, i32 4
  %31 = load i16, i16* %30, align 2
  %32 = icmp eq i16 %31, 0
  br i1 %32, label %204, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %27, i64 0, i32 5
  %35 = getelementptr inbounds %union.anon, %union.anon* %34, i64 0, i32 0
  %36 = bitcast %union.anon* %34 to %"class.re2::Regexp"**
  %37 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %28, i64 0, i32 4
  %38 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %28, i64 0, i32 5
  %39 = getelementptr inbounds %union.anon, %union.anon* %38, i64 0, i32 0
  %40 = bitcast %union.anon* %38 to %"class.re2::Regexp"**
  br label %41

41:                                               ; preds = %33, %173
  %42 = phi i64 [ 0, %33 ], [ %174, %173 ]
  %43 = phi i16 [ %31, %33 ], [ %175, %173 ]
  %44 = icmp ult i16 %43, 2
  br i1 %44, label %47, label %45

45:                                               ; preds = %41
  %46 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %35, align 8
  br label %47

47:                                               ; preds = %41, %45
  %48 = phi %"class.re2::Regexp"** [ %46, %45 ], [ %36, %41 ]
  %49 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %48, i64 %42
  %50 = bitcast %"class.re2::Regexp"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = load i16, i16* %37, align 2
  %53 = icmp ult i16 %52, 2
  br i1 %53, label %56, label %54

54:                                               ; preds = %47
  %55 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %39, align 8
  br label %56

56:                                               ; preds = %47, %54
  %57 = phi %"class.re2::Regexp"** [ %55, %54 ], [ %40, %47 ]
  %58 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %57, i64 %42
  %59 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %58, align 8
  %60 = ptrtoint %"class.re2::Regexp"* %59 to i64
  %61 = inttoptr i64 %51 to %"class.re2::Regexp"*
  %62 = call fastcc zeroext i1 @_ZN3re2L8TopEqualEPNS_6RegexpES1_(%"class.re2::Regexp"* %61, %"class.re2::Regexp"* %59)
  br i1 %62, label %63, label %221

63:                                               ; preds = %56
  %64 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %20, align 8
  %65 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %21, align 8
  %66 = icmp eq %"class.re2::Regexp"** %64, %65
  %67 = ptrtoint %"class.re2::Regexp"** %65 to i64
  br i1 %66, label %72, label %68

68:                                               ; preds = %63
  %69 = bitcast %"class.re2::Regexp"** %64 to i64*
  store i64 %51, i64* %69, align 8
  %70 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %64, i64 1
  %71 = ptrtoint %"class.re2::Regexp"** %70 to i64
  store i64 %71, i64* %22, align 8
  br label %118

72:                                               ; preds = %63
  %73 = ptrtoint %"class.re2::Regexp"** %64 to i64
  %74 = load i64, i64* %23, align 8
  %75 = sub i64 %73, %74
  %76 = ashr exact i64 %75, 3
  %77 = add nsw i64 %76, 1
  %78 = icmp ugt i64 %77, 2305843009213693951
  br i1 %78, label %79, label %81

79:                                               ; preds = %72
  %80 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %80) #21
  unreachable

81:                                               ; preds = %72
  %82 = sub i64 %67, %74
  %83 = ashr exact i64 %82, 3
  %84 = icmp ult i64 %83, 1152921504606846975
  br i1 %84, label %85, label %93

85:                                               ; preds = %81
  %86 = ashr exact i64 %82, 2
  %87 = icmp ult i64 %86, %77
  %88 = select i1 %87, i64 %77, i64 %86
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %98, label %90

90:                                               ; preds = %85
  %91 = icmp ugt i64 %88, 2305843009213693951
  br i1 %91, label %92, label %93

92:                                               ; preds = %90
  call void @abort() #21
  unreachable

93:                                               ; preds = %90, %81
  %94 = phi i64 [ %88, %90 ], [ 2305843009213693951, %81 ]
  %95 = shl i64 %94, 3
  %96 = call i8* @_Znwm(i64 %95) #19
  %97 = bitcast i8* %96 to %"class.re2::Regexp"**
  br label %98

98:                                               ; preds = %93, %85
  %99 = phi i64 [ %94, %93 ], [ 0, %85 ]
  %100 = phi i8* [ %96, %93 ], [ null, %85 ]
  %101 = phi %"class.re2::Regexp"** [ %97, %93 ], [ null, %85 ]
  %102 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %101, i64 %76
  %103 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %101, i64 %99
  %104 = ptrtoint %"class.re2::Regexp"** %103 to i64
  %105 = bitcast %"class.re2::Regexp"** %102 to i64*
  store i64 %51, i64* %105, align 8
  %106 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %102, i64 1
  %107 = ptrtoint %"class.re2::Regexp"** %106 to i64
  %108 = ptrtoint %"class.re2::Regexp"** %101 to i64
  %109 = icmp sgt i64 %75, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %98
  %111 = inttoptr i64 %74 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %111, i64 %75, i1 false) #18
  br label %112

112:                                              ; preds = %110, %98
  store i64 %108, i64* %23, align 8
  store i64 %107, i64* %22, align 8
  store i64 %104, i64* %24, align 8
  %113 = icmp eq i64 %74, 0
  br i1 %113, label %118, label %114

114:                                              ; preds = %112
  %115 = inttoptr i64 %74 to i8*
  call void @_ZdlPv(i8* %115) #19
  %116 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %20, align 8
  %117 = ptrtoint %"class.re2::Regexp"** %116 to i64
  br label %118

118:                                              ; preds = %68, %112, %114
  %119 = phi i64 [ %71, %68 ], [ %107, %112 ], [ %117, %114 ]
  %120 = phi %"class.re2::Regexp"** [ %70, %68 ], [ %106, %112 ], [ %116, %114 ]
  %121 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %21, align 8
  %122 = icmp eq %"class.re2::Regexp"** %120, %121
  br i1 %122, label %127, label %123

123:                                              ; preds = %118
  %124 = bitcast %"class.re2::Regexp"** %120 to i64*
  store i64 %60, i64* %124, align 8
  %125 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %120, i64 1
  %126 = ptrtoint %"class.re2::Regexp"** %125 to i64
  store i64 %126, i64* %22, align 8
  br label %173

127:                                              ; preds = %118
  %128 = ptrtoint %"class.re2::Regexp"** %121 to i64
  %129 = load i64, i64* %23, align 8
  %130 = sub i64 %128, %129
  %131 = ashr exact i64 %130, 3
  %132 = add nsw i64 %131, 1
  %133 = icmp ugt i64 %132, 2305843009213693951
  br i1 %133, label %134, label %136

134:                                              ; preds = %127
  %135 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %135) #21
  unreachable

136:                                              ; preds = %127
  %137 = icmp ult i64 %131, 1152921504606846975
  br i1 %137, label %138, label %146

138:                                              ; preds = %136
  %139 = ashr exact i64 %130, 2
  %140 = icmp ult i64 %139, %132
  %141 = select i1 %140, i64 %132, i64 %139
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %151, label %143

143:                                              ; preds = %138
  %144 = icmp ugt i64 %141, 2305843009213693951
  br i1 %144, label %145, label %146

145:                                              ; preds = %143
  call void @abort() #21
  unreachable

146:                                              ; preds = %143, %136
  %147 = phi i64 [ %141, %143 ], [ 2305843009213693951, %136 ]
  %148 = shl i64 %147, 3
  %149 = call i8* @_Znwm(i64 %148) #19
  %150 = bitcast i8* %149 to %"class.re2::Regexp"**
  br label %151

151:                                              ; preds = %146, %138
  %152 = phi i64 [ %147, %146 ], [ 0, %138 ]
  %153 = phi %"class.re2::Regexp"** [ %150, %146 ], [ null, %138 ]
  %154 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %153, i64 %131
  %155 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %153, i64 %152
  %156 = ptrtoint %"class.re2::Regexp"** %155 to i64
  %157 = bitcast %"class.re2::Regexp"** %154 to i64*
  store i64 %60, i64* %157, align 8
  %158 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %154, i64 1
  %159 = ptrtoint %"class.re2::Regexp"** %158 to i64
  %160 = sub i64 %119, %129
  %161 = ashr exact i64 %160, 3
  %162 = sub nsw i64 0, %161
  %163 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %154, i64 %162
  %164 = ptrtoint %"class.re2::Regexp"** %163 to i64
  %165 = icmp sgt i64 %160, 0
  br i1 %165, label %166, label %169

166:                                              ; preds = %151
  %167 = bitcast %"class.re2::Regexp"** %163 to i8*
  %168 = inttoptr i64 %129 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 %160, i1 false) #18
  br label %169

169:                                              ; preds = %166, %151
  store i64 %164, i64* %23, align 8
  store i64 %159, i64* %22, align 8
  store i64 %156, i64* %24, align 8
  %170 = icmp eq i64 %129, 0
  br i1 %170, label %173, label %171

171:                                              ; preds = %169
  %172 = inttoptr i64 %129 to i8*
  call void @_ZdlPv(i8* %172) #19
  br label %173

173:                                              ; preds = %123, %169, %171
  %174 = add nuw nsw i64 %42, 1
  %175 = load i16, i16* %30, align 2
  %176 = zext i16 %175 to i64
  %177 = icmp ult i64 %174, %176
  br i1 %177, label %41, label %204

178:                                              ; preds = %25, %25, %25, %25, %25
  %179 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %27, i64 0, i32 4
  %180 = load i16, i16* %179, align 2
  %181 = icmp ult i16 %180, 2
  %182 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %27, i64 0, i32 5
  br i1 %181, label %183, label %185

183:                                              ; preds = %178
  %184 = bitcast %union.anon* %182 to %"class.re2::Regexp"**
  br label %188

185:                                              ; preds = %178
  %186 = getelementptr inbounds %union.anon, %union.anon* %182, i64 0, i32 0
  %187 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %186, align 8
  br label %188

188:                                              ; preds = %183, %185
  %189 = phi %"class.re2::Regexp"** [ %184, %183 ], [ %187, %185 ]
  %190 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %189, align 8
  %191 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %28, i64 0, i32 4
  %192 = load i16, i16* %191, align 2
  %193 = icmp ult i16 %192, 2
  %194 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %28, i64 0, i32 5
  br i1 %193, label %195, label %197

195:                                              ; preds = %188
  %196 = bitcast %union.anon* %194 to %"class.re2::Regexp"**
  br label %200

197:                                              ; preds = %188
  %198 = getelementptr inbounds %union.anon, %union.anon* %194, i64 0, i32 0
  %199 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %198, align 8
  br label %200

200:                                              ; preds = %195, %197
  %201 = phi %"class.re2::Regexp"** [ %196, %195 ], [ %199, %197 ]
  %202 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %201, align 8
  %203 = call fastcc zeroext i1 @_ZN3re2L8TopEqualEPNS_6RegexpES1_(%"class.re2::Regexp"* %190, %"class.re2::Regexp"* %202)
  br i1 %203, label %223, label %221

204:                                              ; preds = %173, %29, %25
  %205 = load i64, i64* %22, align 8
  %206 = load i64, i64* %23, align 8
  %207 = sub i64 %205, %206
  %208 = ashr exact i64 %207, 3
  %209 = icmp eq i64 %207, 0
  %210 = inttoptr i64 %206 to %"class.re2::Regexp"**
  br i1 %209, label %228, label %211

211:                                              ; preds = %204
  %212 = add nsw i64 %208, -2
  %213 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %210, i64 %212
  %214 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %213, align 8
  %215 = add nsw i64 %208, -1
  %216 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %210, i64 %215
  %217 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %216, align 8
  %218 = icmp ult i64 %208, 2
  br i1 %218, label %219, label %220

219:                                              ; preds = %211
  call void @_ZNSt3__16vectorIPN3re26RegexpENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector"* nonnull %3, i64 -2) #18
  br label %223

220:                                              ; preds = %211
  store %"class.re2::Regexp"** %213, %"class.re2::Regexp"*** %20, align 8
  br label %223

221:                                              ; preds = %200, %56
  %222 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %19, align 8
  br label %230

223:                                              ; preds = %200, %220, %219
  %224 = phi %"class.re2::Regexp"* [ %214, %219 ], [ %214, %220 ], [ %190, %200 ]
  %225 = phi %"class.re2::Regexp"* [ %217, %219 ], [ %217, %220 ], [ %202, %200 ]
  %226 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %224, i64 0, i32 0
  %227 = load i8, i8* %226, align 8
  br label %25

228:                                              ; preds = %204
  %229 = inttoptr i64 %206 to %"class.re2::Regexp"**
  br label %230

230:                                              ; preds = %228, %221
  %231 = phi %"class.re2::Regexp"** [ %222, %221 ], [ %229, %228 ]
  %232 = phi i1 [ false, %221 ], [ true, %228 ]
  %233 = icmp eq %"class.re2::Regexp"** %231, null
  br i1 %233, label %237, label %234

234:                                              ; preds = %230
  %235 = ptrtoint %"class.re2::Regexp"** %231 to i64
  store i64 %235, i64* %22, align 8
  %236 = bitcast %"class.re2::Regexp"** %231 to i8*
  call void @_ZdlPv(i8* %236) #19
  br label %237

237:                                              ; preds = %230, %234
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #18
  br label %238

238:                                              ; preds = %11, %9, %237, %7
  %239 = phi i1 [ %8, %7 ], [ %232, %237 ], [ false, %9 ], [ true, %11 ]
  ret i1 %239
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN3re2L8TopEqualEPNS_6RegexpES1_(%"class.re2::Regexp"* nocapture readonly, %"class.re2::Regexp"* nocapture readonly) unnamed_addr #0 {
  %3 = alloca %class.LogMessage, align 8
  %4 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 0
  %5 = load i8, i8* %4, align 8
  %6 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 0
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %5, %7
  br i1 %8, label %9, label %186

9:                                                ; preds = %2
  switch i8 %5, label %144 [
    i8 1, label %186
    i8 2, label %186
    i8 12, label %186
    i8 13, label %186
    i8 14, label %186
    i8 15, label %186
    i8 16, label %186
    i8 17, label %186
    i8 18, label %186
    i8 19, label %10
    i8 3, label %18
    i8 4, label %32
    i8 6, label %57
    i8 5, label %57
    i8 7, label %63
    i8 8, label %63
    i8 9, label %63
    i8 10, label %71
    i8 11, label %95
    i8 21, label %107
    i8 20, label %113
  ]

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 2
  %12 = load i16, i16* %11, align 2
  %13 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 2
  %14 = load i16, i16* %13, align 2
  %15 = xor i16 %14, %12
  %16 = and i16 %15, 8192
  %17 = icmp eq i16 %16, 0
  br label %186

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 7, i32 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7, i32 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %20, %22
  br i1 %23, label %24, label %186

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 2
  %26 = load i16, i16* %25, align 2
  %27 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 2
  %28 = load i16, i16* %27, align 2
  %29 = xor i16 %28, %26
  %30 = and i16 %29, 1
  %31 = icmp eq i16 %30, 0
  br label %186

32:                                               ; preds = %9
  %33 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 7, i32 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %34, %36
  br i1 %37, label %38, label %186

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 2
  %40 = load i16, i16* %39, align 2
  %41 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 2
  %42 = load i16, i16* %41, align 2
  %43 = xor i16 %42, %40
  %44 = and i16 %43, 1
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %46, label %186

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 7, i32 0, i32 1
  %48 = bitcast %"class.std::__1::basic_string"** %47 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7, i32 0, i32 1
  %51 = bitcast %"class.std::__1::basic_string"** %50 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = sext i32 %34 to i64
  %54 = shl nsw i64 %53, 2
  %55 = tail call i32 @bcmp(i8* %49, i8* %52, i64 %54)
  %56 = icmp eq i32 %55, 0
  br label %186

57:                                               ; preds = %9, %9
  %58 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 4
  %59 = load i16, i16* %58, align 2
  %60 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 4
  %61 = load i16, i16* %60, align 2
  %62 = icmp eq i16 %59, %61
  br label %186

63:                                               ; preds = %9, %9, %9
  %64 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 2
  %65 = load i16, i16* %64, align 2
  %66 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 2
  %67 = load i16, i16* %66, align 2
  %68 = xor i16 %67, %65
  %69 = and i16 %68, 64
  %70 = icmp eq i16 %69, 0
  br label %186

71:                                               ; preds = %9
  %72 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 2
  %73 = load i16, i16* %72, align 2
  %74 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 2
  %75 = load i16, i16* %74, align 2
  %76 = xor i16 %75, %73
  %77 = and i16 %76, 64
  %78 = icmp eq i16 %77, 0
  br i1 %78, label %79, label %186

79:                                               ; preds = %71
  %80 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 7
  %81 = bitcast %union.anon.0* %80 to %struct.anon*
  %82 = getelementptr inbounds %struct.anon, %struct.anon* %81, i64 0, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7
  %85 = bitcast %union.anon.0* %84 to %struct.anon*
  %86 = getelementptr inbounds %struct.anon, %struct.anon* %85, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %83, %87
  br i1 %88, label %89, label %186

89:                                               ; preds = %79
  %90 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 7, i32 0, i32 0
  %91 = load i32, i32* %90, align 8
  %92 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7, i32 0, i32 0
  %93 = load i32, i32* %92, align 8
  %94 = icmp eq i32 %91, %93
  br label %186

95:                                               ; preds = %9
  %96 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 7, i32 0, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7, i32 0, i32 0
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %97, %99
  br i1 %100, label %101, label %186

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 7, i32 0, i32 1
  %103 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %102, align 8
  %104 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7, i32 0, i32 1
  %105 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %104, align 8
  %106 = icmp eq %"class.std::__1::basic_string"* %103, %105
  br label %186

107:                                              ; preds = %9
  %108 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 7, i32 0, i32 0
  %109 = load i32, i32* %108, align 8
  %110 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7, i32 0, i32 0
  %111 = load i32, i32* %110, align 8
  %112 = icmp eq i32 %109, %111
  br label %186

113:                                              ; preds = %9
  %114 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 7
  %115 = bitcast %union.anon.0* %114 to %"class.re2::CharClass"**
  %116 = load %"class.re2::CharClass"*, %"class.re2::CharClass"** %115, align 8
  %117 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7
  %118 = bitcast %union.anon.0* %117 to %"class.re2::CharClass"**
  %119 = load %"class.re2::CharClass"*, %"class.re2::CharClass"** %118, align 8
  %120 = getelementptr inbounds %"class.re2::CharClass", %"class.re2::CharClass"* %116, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = getelementptr inbounds %"class.re2::CharClass", %"class.re2::CharClass"* %119, i64 0, i32 2
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %121, %123
  br i1 %124, label %125, label %186

125:                                              ; preds = %113
  %126 = getelementptr inbounds %"class.re2::CharClass", %"class.re2::CharClass"* %116, i64 0, i32 4
  %127 = load i32, i32* %126, align 8
  %128 = sext i32 %127 to i64
  %129 = shl nuw nsw i64 %128, 3
  %130 = getelementptr inbounds %"class.re2::CharClass", %"class.re2::CharClass"* %119, i64 0, i32 4
  %131 = load i32, i32* %130, align 8
  %132 = sext i32 %131 to i64
  %133 = shl nuw nsw i64 %132, 3
  %134 = icmp eq i64 %129, %133
  br i1 %134, label %135, label %186

135:                                              ; preds = %125
  %136 = getelementptr inbounds %"class.re2::CharClass", %"class.re2::CharClass"* %119, i64 0, i32 3
  %137 = bitcast %"struct.re2::RuneRange"** %136 to i8**
  %138 = load i8*, i8** %137, align 8
  %139 = getelementptr inbounds %"class.re2::CharClass", %"class.re2::CharClass"* %116, i64 0, i32 3
  %140 = bitcast %"struct.re2::RuneRange"** %139 to i8**
  %141 = load i8*, i8** %140, align 8
  %142 = tail call i32 @bcmp(i8* %141, i8* %138, i64 %129)
  %143 = icmp eq i32 %142, 0
  br label %186

144:                                              ; preds = %9
  %145 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %145) #18
  store i8 0, i8* %145, align 8
  %146 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %3, i64 0, i32 1
  %147 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %3, i64 0, i32 1, i32 2, i32 0, i32 0
  %148 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %146, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %147, align 8
  %149 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %3, i64 0, i32 1, i32 1
  %150 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %149, i64 0, i32 0
  %151 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %152 = bitcast %"class.std::__1::basic_ostringstream"* %146 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %154 = bitcast %"class.std::__1::basic_ostringstream"* %146 to i8**
  %155 = inttoptr i64 %151 to i8*
  %156 = getelementptr i8, i8* %155, i64 -24
  %157 = bitcast i8* %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.std::__1::basic_ostringstream"* %146 to i8*
  %160 = getelementptr inbounds i8, i8* %159, i64 %158
  %161 = bitcast i8* %160 to i64*
  store i64 %153, i64* %161, align 8
  %162 = load i8*, i8** %154, align 8
  %163 = getelementptr i8, i8* %162, i64 -24
  %164 = bitcast i8* %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds i8, i8* %159, i64 %165
  %167 = bitcast i8* %166 to %"class.std::__1::ios_base"*
  %168 = bitcast %"class.std::__1::basic_stringbuf"* %149 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %167, i8* %168) #18
  %169 = getelementptr inbounds i8, i8* %166, i64 136
  %170 = bitcast i8* %169 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %170, align 8
  %171 = getelementptr inbounds i8, i8* %166, i64 144
  %172 = bitcast i8* %171 to i32*
  store i32 -1, i32* %172, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %148, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %147, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %150) #18
  %173 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %149, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %173, align 8
  %174 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %3, i64 0, i32 1, i32 1, i32 1
  %175 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %3, i64 0, i32 1, i32 1, i32 3
  %176 = bitcast %"class.std::__1::basic_string"* %174 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %176, i8 0, i64 32, i1 false) #18
  store i32 16, i32* %175, align 8
  %177 = bitcast %"class.std::__1::basic_ostringstream"* %146 to %"class.std::__1::basic_ostream"*
  %178 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %177, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i64 39) #18
  %179 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %178, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #18
  %180 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %179, i32 408) #18
  %181 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %180, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2) #18
  %182 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %177, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0), i64 32) #18
  %183 = load i8, i8* %4, align 8
  %184 = zext i8 %183 to i32
  %185 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %182, i32 %184) #18
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %145) #18
  br label %186

186:                                              ; preds = %113, %125, %135, %95, %101, %71, %79, %89, %32, %38, %46, %18, %24, %9, %9, %9, %9, %9, %9, %9, %9, %9, %2, %144, %107, %63, %57, %10
  %187 = phi i1 [ false, %144 ], [ %112, %107 ], [ %70, %63 ], [ %62, %57 ], [ %17, %10 ], [ false, %2 ], [ true, %9 ], [ true, %9 ], [ true, %9 ], [ true, %9 ], [ true, %9 ], [ true, %9 ], [ true, %9 ], [ true, %9 ], [ true, %9 ], [ false, %18 ], [ %31, %24 ], [ false, %38 ], [ false, %32 ], [ %56, %46 ], [ false, %79 ], [ false, %71 ], [ %94, %89 ], [ false, %95 ], [ %106, %101 ], [ false, %125 ], [ false, %113 ], [ %143, %135 ]
  ret i1 %187
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re212RegexpStatus8CodeTextENS_16RegexpStatusCodeE(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp ugt i32 %1, 14
  %4 = select i1 %3, i32 1, i32 %1
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds [15 x i8*], [15 x i8*]* @_ZN3re2L13kErrorStringsE, i64 0, i64 %5
  %7 = load i8*, i8** %6, align 8
  %8 = tail call i64 @strlen(i8* %7) #18
  %9 = icmp ugt i64 %8, -17
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #21
  unreachable

12:                                               ; preds = %2
  %13 = icmp ult i64 %8, 23
  br i1 %13, label %22, label %14

14:                                               ; preds = %12
  %15 = add nuw i64 %8, 16
  %16 = and i64 %15, -16
  %17 = tail call i8* @_Znwm(i64 %16) #19
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %17, i8** %18, align 8
  %19 = or i64 %16, -9223372036854775808
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %8, i64* %21, align 8
  br label %28

22:                                               ; preds = %12
  %23 = trunc i64 %8 to i8
  %24 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  store i8 %23, i8* %25, align 1
  %26 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %27 = icmp eq i64 %8, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %22, %14
  %29 = phi i8* [ %17, %14 ], [ %26, %22 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %7, i64 %8, i1 false) #18
  br label %30

30:                                               ; preds = %22, %28
  %31 = phi i8* [ %26, %22 ], [ %29, %28 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %8
  store i8 0, i8* %32, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3re212RegexpStatus4TextEv(%"class.std::__1::basic_string"* noalias sret, %"class.re2::RegexpStatus"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %1, i64 0, i32 1, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %41

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp ugt i32 %10, 14
  %12 = select i1 %11, i32 1, i32 %10
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds [15 x i8*], [15 x i8*]* @_ZN3re2L13kErrorStringsE, i64 0, i64 %13
  %15 = load i8*, i8** %14, align 8, !noalias !30
  %16 = tail call i64 @strlen(i8* %15) #18, !noalias !30
  %17 = icmp ugt i64 %16, -17
  br i1 %17, label %18, label %20

18:                                               ; preds = %8
  %19 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %19) #21
  unreachable

20:                                               ; preds = %8
  %21 = icmp ult i64 %16, 23
  br i1 %21, label %30, label %22

22:                                               ; preds = %20
  %23 = add nuw i64 %16, 16
  %24 = and i64 %23, -16
  %25 = tail call i8* @_Znwm(i64 %24) #19
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %25, i8** %26, align 8, !alias.scope !30
  %27 = or i64 %24, -9223372036854775808
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %27, i64* %28, align 8, !alias.scope !30
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %16, i64* %29, align 8, !alias.scope !30
  br label %36

30:                                               ; preds = %20
  %31 = trunc i64 %16 to i8
  %32 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  store i8 %31, i8* %33, align 1, !alias.scope !30
  %34 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %35 = icmp eq i64 %16, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %30, %22
  %37 = phi i8* [ %25, %22 ], [ %34, %30 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 1 %15, i64 %16, i1 false) #18
  br label %38

38:                                               ; preds = %30, %36
  %39 = phi i8* [ %34, %30 ], [ %37, %36 ]
  %40 = getelementptr inbounds i8, i8* %39, i64 %16
  store i8 0, i8* %40, align 1
  br label %100

41:                                               ; preds = %2
  %42 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 24, i1 false) #18
  %43 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #18
  %44 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %1, i64 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp ugt i32 %45, 14
  %47 = select i1 %46, i32 1, i32 %45
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds [15 x i8*], [15 x i8*]* @_ZN3re2L13kErrorStringsE, i64 0, i64 %48
  %50 = load i8*, i8** %49, align 8, !noalias !33
  %51 = tail call i64 @strlen(i8* %50) #18, !noalias !33
  %52 = icmp ugt i64 %51, -17
  br i1 %52, label %53, label %55

53:                                               ; preds = %41
  %54 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %54) #21
  unreachable

55:                                               ; preds = %41
  %56 = icmp ult i64 %51, 23
  br i1 %56, label %66, label %57

57:                                               ; preds = %55
  %58 = add nuw i64 %51, 16
  %59 = and i64 %58, -16
  %60 = tail call i8* @_Znwm(i64 %59) #19
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %60, i8** %61, align 8, !alias.scope !33
  %62 = or i64 %59, -9223372036854775808
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %62, i64* %63, align 8, !alias.scope !33
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %51, i64* %64, align 8, !alias.scope !33
  %65 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %71

66:                                               ; preds = %55
  %67 = trunc i64 %51 to i8
  %68 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  store i8 %67, i8* %69, align 1, !alias.scope !33
  %70 = icmp eq i64 %51, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %66, %57
  %72 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %68, %66 ], [ %65, %57 ]
  %73 = phi i8* [ %43, %66 ], [ %60, %57 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %73, i8* align 1 %50, i64 %51, i1 false) #18
  br label %74

74:                                               ; preds = %66, %71
  %75 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %68, %66 ], [ %72, %71 ]
  %76 = phi i8* [ %43, %66 ], [ %73, %71 ]
  %77 = getelementptr inbounds i8, i8* %76, i64 %51
  store i8 0, i8* %77, align 1
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = zext i8 %79 to i64
  %86 = select i1 %80, i8* %82, i8* %43
  %87 = select i1 %80, i64 %84, i64 %85
  %88 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %86, i64 %87) #18
  %89 = load i8, i8* %78, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %74
  %92 = load i8*, i8** %81, align 8
  call void @_ZdlPv(i8* %92) #19
  br label %93

93:                                               ; preds = %91, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #18
  %94 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0)) #18
  %95 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %1, i64 0, i32 1, i32 0
  %96 = load i8*, i8** %95, align 8
  %97 = load i64, i64* %5, align 8
  %98 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %96, i64 %97) #18
  %99 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* nonnull align 8 %42, i64 24, i1 false) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #18
  br label %100

100:                                              ; preds = %93, %38
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re212RegexpStatus4CopyERKS0_(%"class.re2::RegexpStatus"* nocapture, %"class.re2::RegexpStatus"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %0, i64 0, i32 1
  %8 = bitcast %"class.re2::StringPiece"* %7 to i8*
  %9 = bitcast %"class.re2::StringPiece"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3re26Regexp11NumCapturesEv(%"class.re2::Regexp"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.re2::NumCapturesWalker", align 8
  %3 = bitcast %"class.re2::NumCapturesWalker"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %3) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 72, i1 false)
  %4 = getelementptr inbounds %"class.re2::NumCapturesWalker", %"class.re2::NumCapturesWalker"* %2, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.re2::NumCapturesWalker", %"class.re2::NumCapturesWalker"* %2, i64 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::stack"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 49, i1 false) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3re217NumCapturesWalkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = getelementptr inbounds %"class.re2::NumCapturesWalker", %"class.re2::NumCapturesWalker"* %2, i64 0, i32 1
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.re2::NumCapturesWalker", %"class.re2::NumCapturesWalker"* %2, i64 0, i32 0
  %9 = getelementptr inbounds %"class.re2::NumCapturesWalker", %"class.re2::NumCapturesWalker"* %2, i64 0, i32 0, i32 3
  store i32 1000000, i32* %9, align 4
  %10 = call i32 @_ZN3re26Regexp6WalkerIiE12WalkInternalEPS0_ib(%"class.re2::Regexp::Walker"* nonnull %8, %"class.re2::Regexp"* %0, i32 0, i1 zeroext true) #18
  %11 = load i32, i32* %7, align 8
  call void @_ZN3re26Regexp6WalkerIiED2Ev(%"class.re2::Regexp::Walker"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %3) #18
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3re26Regexp6WalkerIiED2Ev(%"class.re2::Regexp::Walker"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3re26Regexp6WalkerIiEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN3re26Regexp6WalkerIiE5ResetEv(%"class.re2::Regexp::Walker"* %0)
  %3 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %4 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %5 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %6, 7
  %8 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %4, i64 %7
  %9 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %10 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %9, align 8
  %11 = icmp eq %"struct.re2::WalkState"** %10, %4
  %12 = ptrtoint %"struct.re2::WalkState"** %10 to i64
  %13 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  br i1 %11, label %14, label %16

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %29

16:                                               ; preds = %1
  %17 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %8, align 8
  %18 = and i64 %6, 127
  %19 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %17, i64 %18
  %20 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %6
  %23 = lshr i64 %22, 7
  %24 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %4, i64 %23
  %25 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %24, align 8
  %26 = and i64 %22, 127
  %27 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %25, i64 %26
  %28 = icmp eq %"struct.re2::WalkState"* %27, %19
  br i1 %28, label %29, label %35

29:                                               ; preds = %48, %16, %14
  %30 = phi i64* [ %15, %14 ], [ %20, %16 ], [ %20, %48 ]
  store i64 0, i64* %30, align 8
  %31 = bitcast %"struct.re2::WalkState"*** %9 to i64*
  %32 = sub i64 %12, %13
  %33 = ashr exact i64 %32, 3
  %34 = icmp ugt i64 %33, 2
  br i1 %34, label %53, label %66

35:                                               ; preds = %16, %48
  %36 = phi %"struct.re2::WalkState"* [ %51, %48 ], [ %19, %16 ]
  %37 = phi %"struct.re2::WalkState"** [ %50, %48 ], [ %8, %16 ]
  %38 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %36, i64 1
  %39 = ptrtoint %"struct.re2::WalkState"* %38 to i64
  %40 = bitcast %"struct.re2::WalkState"** %37 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = icmp eq i64 %42, 4096
  br i1 %43, label %44, label %48

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %37, i64 1
  %46 = bitcast %"struct.re2::WalkState"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  br label %48

48:                                               ; preds = %44, %35
  %49 = phi i64 [ %47, %44 ], [ %39, %35 ]
  %50 = phi %"struct.re2::WalkState"** [ %45, %44 ], [ %37, %35 ]
  %51 = inttoptr i64 %49 to %"struct.re2::WalkState"*
  %52 = icmp eq %"struct.re2::WalkState"* %27, %51
  br i1 %52, label %29, label %35

53:                                               ; preds = %29, %53
  %54 = phi %"struct.re2::WalkState"** [ %58, %53 ], [ %4, %29 ]
  %55 = bitcast %"struct.re2::WalkState"** %54 to i8**
  %56 = load i8*, i8** %55, align 8
  tail call void @_ZdlPv(i8* %56) #19
  %57 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %58 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %57, i64 1
  store %"struct.re2::WalkState"** %58, %"struct.re2::WalkState"*** %3, align 8
  %59 = load i64, i64* %31, align 8
  %60 = ptrtoint %"struct.re2::WalkState"** %58 to i64
  %61 = sub i64 %59, %60
  %62 = ashr exact i64 %61, 3
  %63 = icmp ugt i64 %62, 2
  br i1 %63, label %53, label %64

64:                                               ; preds = %53
  %65 = inttoptr i64 %59 to %"struct.re2::WalkState"**
  br label %66

66:                                               ; preds = %64, %29
  %67 = phi %"struct.re2::WalkState"** [ %10, %29 ], [ %65, %64 ]
  %68 = phi %"struct.re2::WalkState"** [ %4, %29 ], [ %58, %64 ]
  %69 = phi i64 [ %33, %29 ], [ %62, %64 ]
  switch i64 %69, label %73 [
    i64 1, label %71
    i64 2, label %70
  ]

70:                                               ; preds = %66
  br label %71

71:                                               ; preds = %66, %70
  %72 = phi i64 [ 128, %70 ], [ 64, %66 ]
  store i64 %72, i64* %5, align 8
  br label %73

73:                                               ; preds = %71, %66
  %74 = icmp eq %"struct.re2::WalkState"** %68, %67
  br i1 %74, label %93, label %75

75:                                               ; preds = %73, %75
  %76 = phi %"struct.re2::WalkState"** [ %79, %75 ], [ %68, %73 ]
  %77 = bitcast %"struct.re2::WalkState"** %76 to i8**
  %78 = load i8*, i8** %77, align 8
  tail call void @_ZdlPv(i8* %78) #19
  %79 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %76, i64 1
  %80 = icmp eq %"struct.re2::WalkState"** %79, %67
  br i1 %80, label %81, label %75

81:                                               ; preds = %75
  %82 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %83 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %9, align 8
  %84 = icmp eq %"struct.re2::WalkState"** %83, %82
  br i1 %84, label %93, label %85

85:                                               ; preds = %81
  %86 = ptrtoint %"struct.re2::WalkState"** %82 to i64
  %87 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %83, i64 -1
  %88 = ptrtoint %"struct.re2::WalkState"** %87 to i64
  %89 = sub i64 %88, %86
  %90 = lshr i64 %89, 3
  %91 = xor i64 %90, -1
  %92 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %83, i64 %91
  store %"struct.re2::WalkState"** %92, %"struct.re2::WalkState"*** %9, align 8
  br label %93

93:                                               ; preds = %85, %81, %73
  %94 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %95 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %94, align 8
  %96 = icmp eq %"struct.re2::WalkState"** %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %93
  %98 = bitcast %"struct.re2::WalkState"** %95 to i8*
  tail call void @_ZdlPv(i8* %98) #19
  br label %99

99:                                               ; preds = %93, %97
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.std::__1::map.38"* @_ZN3re26Regexp13NamedCapturesEv(%"class.re2::Regexp"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.re2::NamedCapturesWalker", align 8
  %3 = bitcast %"class.re2::NamedCapturesWalker"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %3) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 72, i1 false)
  %4 = getelementptr inbounds %"class.re2::NamedCapturesWalker", %"class.re2::NamedCapturesWalker"* %2, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.re2::NamedCapturesWalker", %"class.re2::NamedCapturesWalker"* %2, i64 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::stack"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 49, i1 false) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3re219NamedCapturesWalkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = getelementptr inbounds %"class.re2::NamedCapturesWalker", %"class.re2::NamedCapturesWalker"* %2, i64 0, i32 1
  store %"class.std::__1::map.38"* null, %"class.std::__1::map.38"** %7, align 8
  %8 = getelementptr inbounds %"class.re2::NamedCapturesWalker", %"class.re2::NamedCapturesWalker"* %2, i64 0, i32 0
  %9 = getelementptr inbounds %"class.re2::NamedCapturesWalker", %"class.re2::NamedCapturesWalker"* %2, i64 0, i32 0, i32 3
  store i32 1000000, i32* %9, align 4
  %10 = call i32 @_ZN3re26Regexp6WalkerIiE12WalkInternalEPS0_ib(%"class.re2::Regexp::Walker"* nonnull %8, %"class.re2::Regexp"* %0, i32 0, i1 zeroext true) #18
  %11 = load %"class.std::__1::map.38"*, %"class.std::__1::map.38"** %7, align 8
  store %"class.std::__1::map.38"* null, %"class.std::__1::map.38"** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3re219NamedCapturesWalkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  call void @_ZN3re26Regexp6WalkerIiED2Ev(%"class.re2::Regexp::Walker"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %3) #18
  ret %"class.std::__1::map.38"* %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3re219NamedCapturesWalkerD2Ev(%"class.re2::NamedCapturesWalker"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.re2::NamedCapturesWalker", %"class.re2::NamedCapturesWalker"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3re219NamedCapturesWalkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.re2::NamedCapturesWalker", %"class.re2::NamedCapturesWalker"* %0, i64 0, i32 1
  %4 = load %"class.std::__1::map.38"*, %"class.std::__1::map.38"** %3, align 8
  %5 = icmp eq %"class.std::__1::map.38"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::map.38", %"class.std::__1::map.38"* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::map.38", %"class.std::__1::map.38"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node.68"**
  %10 = load %"class.std::__1::__tree_node.68"*, %"class.std::__1::__tree_node.68"** %9, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.39"* %7, %"class.std::__1::__tree_node.68"* %10) #18
  %11 = bitcast %"class.std::__1::map.38"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #19
  br label %12

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.re2::NamedCapturesWalker", %"class.re2::NamedCapturesWalker"* %0, i64 0, i32 0
  tail call void @_ZN3re26Regexp6WalkerIiED2Ev(%"class.re2::Regexp::Walker"* %13) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.std::__1::map.49"* @_ZN3re26Regexp12CaptureNamesEv(%"class.re2::Regexp"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.re2::CaptureNamesWalker", align 8
  %3 = bitcast %"class.re2::CaptureNamesWalker"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %3) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 72, i1 false)
  %4 = getelementptr inbounds %"class.re2::CaptureNamesWalker", %"class.re2::CaptureNamesWalker"* %2, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.re2::CaptureNamesWalker", %"class.re2::CaptureNamesWalker"* %2, i64 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::stack"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 49, i1 false) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3re218CaptureNamesWalkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = getelementptr inbounds %"class.re2::CaptureNamesWalker", %"class.re2::CaptureNamesWalker"* %2, i64 0, i32 1
  store %"class.std::__1::map.49"* null, %"class.std::__1::map.49"** %7, align 8
  %8 = getelementptr inbounds %"class.re2::CaptureNamesWalker", %"class.re2::CaptureNamesWalker"* %2, i64 0, i32 0
  %9 = getelementptr inbounds %"class.re2::CaptureNamesWalker", %"class.re2::CaptureNamesWalker"* %2, i64 0, i32 0, i32 3
  store i32 1000000, i32* %9, align 4
  %10 = call i32 @_ZN3re26Regexp6WalkerIiE12WalkInternalEPS0_ib(%"class.re2::Regexp::Walker"* nonnull %8, %"class.re2::Regexp"* %0, i32 0, i1 zeroext true) #18
  %11 = load %"class.std::__1::map.49"*, %"class.std::__1::map.49"** %7, align 8
  store %"class.std::__1::map.49"* null, %"class.std::__1::map.49"** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3re218CaptureNamesWalkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  call void @_ZN3re26Regexp6WalkerIiED2Ev(%"class.re2::Regexp::Walker"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %3) #18
  ret %"class.std::__1::map.49"* %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3re218CaptureNamesWalkerD2Ev(%"class.re2::CaptureNamesWalker"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.re2::CaptureNamesWalker", %"class.re2::CaptureNamesWalker"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3re218CaptureNamesWalkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.re2::CaptureNamesWalker", %"class.re2::CaptureNamesWalker"* %0, i64 0, i32 1
  %4 = load %"class.std::__1::map.49"*, %"class.std::__1::map.49"** %3, align 8
  %5 = icmp eq %"class.std::__1::map.49"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::map.49", %"class.std::__1::map.49"* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::map.49", %"class.std::__1::map.49"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node.88"**
  %10 = load %"class.std::__1::__tree_node.88"*, %"class.std::__1::__tree_node.88"** %9, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.50"* %7, %"class.std::__1::__tree_node.88"* %10) #18
  %11 = bitcast %"class.std::__1::map.49"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #19
  br label %12

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.re2::CaptureNamesWalker", %"class.re2::CaptureNamesWalker"* %0, i64 0, i32 0
  tail call void @_ZN3re26Regexp6WalkerIiED2Ev(%"class.re2::Regexp::Walker"* %13) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re219ConvertRunesToBytesEbPiiPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(i1 zeroext, i32*, i32, %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  br i1 %0, label %5, label %37

5:                                                ; preds = %4
  %6 = sext i32 %2 to i64
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %3, i64 %6, i8 signext 0) #18
  %7 = icmp sgt i32 %2, 0
  br i1 %7, label %8, label %170

8:                                                ; preds = %5
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = zext i32 %2 to i64
  %14 = and i64 %13, 1
  %15 = icmp eq i32 %2, 1
  br i1 %15, label %156, label %16

16:                                               ; preds = %8
  %17 = sub nsw i64 %13, %14
  br label %18

18:                                               ; preds = %173, %16
  %19 = phi i64 [ 0, %16 ], [ %176, %173 ]
  %20 = phi i64 [ %17, %16 ], [ %177, %173 ]
  %21 = getelementptr inbounds i32, i32* %1, i64 %19
  %22 = load i32, i32* %21, align 4
  %23 = trunc i32 %22 to i8
  %24 = load i8, i8* %10, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %18
  %27 = load i8*, i8** %12, align 8
  br label %28

28:                                               ; preds = %18, %26
  %29 = phi i8* [ %27, %26 ], [ %11, %18 ]
  %30 = getelementptr inbounds i8, i8* %29, i64 %19
  store i8 %23, i8* %30, align 1
  %31 = or i64 %19, 1
  %32 = getelementptr inbounds i32, i32* %1, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = trunc i32 %33 to i8
  %35 = load i8, i8* %10, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %171, label %173

37:                                               ; preds = %4
  %38 = shl nsw i32 %2, 2
  %39 = sext i32 %38 to i64
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %3, i64 %39, i8 signext 0) #18
  %40 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  br label %49

47:                                               ; preds = %37
  %48 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  br label %49

49:                                               ; preds = %44, %47
  %50 = phi i8* [ %46, %44 ], [ %48, %47 ]
  %51 = icmp sgt i32 %2, 0
  br i1 %51, label %52, label %56

52:                                               ; preds = %49
  %53 = zext i32 %2 to i64
  br label %147

54:                                               ; preds = %147
  %55 = load i8, i8* %41, align 1
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8 [ %42, %49 ], [ %55, %54 ]
  %58 = phi i8* [ %50, %49 ], [ %153, %54 ]
  %59 = icmp slt i8 %57, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  br label %65

63:                                               ; preds = %56
  %64 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  br label %65

65:                                               ; preds = %60, %63
  %66 = phi i8* [ %62, %60 ], [ %64, %63 ]
  %67 = ptrtoint i8* %58 to i64
  %68 = ptrtoint i8* %66 to i64
  %69 = sub i64 %67, %68
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %3, i64 %69, i8 signext 0) #18
  %70 = load i8, i8* %41, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  br label %77

75:                                               ; preds = %65
  %76 = zext i8 %70 to i64
  br label %77

77:                                               ; preds = %75, %72
  %78 = phi i64 [ %74, %72 ], [ %76, %75 ]
  %79 = icmp ult i64 %78, 23
  br i1 %79, label %84, label %80

80:                                               ; preds = %77
  %81 = add i64 %78, 16
  %82 = and i64 %81, -16
  %83 = add i64 %82, -1
  br label %84

84:                                               ; preds = %80, %77
  %85 = phi i64 [ %83, %80 ], [ 22, %77 ]
  br i1 %71, label %86, label %91

86:                                               ; preds = %84
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %88 = load i64, i64* %87, align 8
  %89 = and i64 %88, 9223372036854775807
  %90 = add nsw i64 %89, -1
  br label %91

91:                                               ; preds = %86, %84
  %92 = phi i64 [ %90, %86 ], [ 22, %84 ]
  %93 = icmp eq i64 %85, %92
  br i1 %93, label %170, label %94

94:                                               ; preds = %91
  br i1 %71, label %95, label %98

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = load i64, i64* %96, align 8
  br label %100

98:                                               ; preds = %94
  %99 = zext i8 %70 to i64
  br label %100

100:                                              ; preds = %98, %95
  %101 = phi i64 [ %97, %95 ], [ %99, %98 ]
  %102 = icmp eq i64 %85, 22
  br i1 %102, label %111, label %103

103:                                              ; preds = %100
  %104 = add i64 %85, 1
  %105 = tail call i8* @_Znwm(i64 %104) #19
  br i1 %71, label %106, label %109

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8
  br label %115

109:                                              ; preds = %103
  %110 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  br label %121

111:                                              ; preds = %100
  %112 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  br i1 %71, label %115, label %121

115:                                              ; preds = %111, %106
  %116 = phi i1 [ true, %106 ], [ false, %111 ]
  %117 = phi i8* [ %108, %106 ], [ %114, %111 ]
  %118 = phi i8* [ %105, %106 ], [ %112, %111 ]
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %120 = load i64, i64* %119, align 8
  br label %127

121:                                              ; preds = %111, %109
  %122 = phi i1 [ true, %109 ], [ false, %111 ]
  %123 = phi i1 [ false, %109 ], [ true, %111 ]
  %124 = phi i8* [ %110, %109 ], [ %114, %111 ]
  %125 = phi i8* [ %105, %109 ], [ %112, %111 ]
  %126 = zext i8 %70 to i64
  br label %127

127:                                              ; preds = %121, %115
  %128 = phi i1 [ %116, %115 ], [ %122, %121 ]
  %129 = phi i1 [ true, %115 ], [ %123, %121 ]
  %130 = phi i8* [ %117, %115 ], [ %124, %121 ]
  %131 = phi i8* [ %118, %115 ], [ %125, %121 ]
  %132 = phi i64 [ %120, %115 ], [ %126, %121 ]
  %133 = add i64 %132, 1
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %136, label %135

135:                                              ; preds = %127
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %131, i8* align 1 %130, i64 %133, i1 false) #18
  br label %136

136:                                              ; preds = %135, %127
  br i1 %129, label %137, label %138

137:                                              ; preds = %136
  tail call void @_ZdlPv(i8* %130) #19
  br label %138

138:                                              ; preds = %137, %136
  br i1 %128, label %139, label %145

139:                                              ; preds = %138
  %140 = add i64 %85, 1
  %141 = or i64 %140, -9223372036854775808
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %141, i64* %142, align 8
  %143 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %101, i64* %143, align 8
  %144 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %131, i8** %144, align 8
  br label %170

145:                                              ; preds = %138
  %146 = trunc i64 %101 to i8
  store i8 %146, i8* %41, align 1
  br label %170

147:                                              ; preds = %147, %52
  %148 = phi i64 [ 0, %52 ], [ %154, %147 ]
  %149 = phi i8* [ %50, %52 ], [ %153, %147 ]
  %150 = getelementptr inbounds i32, i32* %1, i64 %148
  %151 = tail call i32 @_ZN3re210runetocharEPcPKi(i8* %149, i32* %150) #18
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds i8, i8* %149, i64 %152
  %154 = add nuw nsw i64 %148, 1
  %155 = icmp eq i64 %154, %53
  br i1 %155, label %54, label %147

156:                                              ; preds = %173, %8
  %157 = phi i64 [ 0, %8 ], [ %176, %173 ]
  %158 = icmp eq i64 %14, 0
  br i1 %158, label %170, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds i32, i32* %1, i64 %157
  %161 = load i32, i32* %160, align 4
  %162 = trunc i32 %161 to i8
  %163 = load i8, i8* %10, align 1
  %164 = icmp slt i8 %163, 0
  br i1 %164, label %165, label %167

165:                                              ; preds = %159
  %166 = load i8*, i8** %12, align 8
  br label %167

167:                                              ; preds = %165, %159
  %168 = phi i8* [ %166, %165 ], [ %11, %159 ]
  %169 = getelementptr inbounds i8, i8* %168, i64 %157
  store i8 %162, i8* %169, align 1
  br label %170

170:                                              ; preds = %167, %156, %5, %91, %139, %145
  ret void

171:                                              ; preds = %28
  %172 = load i8*, i8** %12, align 8
  br label %173

173:                                              ; preds = %171, %28
  %174 = phi i8* [ %172, %171 ], [ %11, %28 ]
  %175 = getelementptr inbounds i8, i8* %174, i64 %31
  store i8 %34, i8* %175, align 1
  %176 = add nuw nsw i64 %19, 2
  %177 = add i64 %20, -2
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %156, label %18
}

declare i32 @_ZN3re210runetocharEPcPKi(i8*, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3re26Regexp14RequiredPrefixEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPbPPS0_(%"class.re2::Regexp"*, %"class.std::__1::basic_string"*, i8* nocapture, %"class.re2::Regexp"** nocapture) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %12, align 8
  br label %15

13:                                               ; preds = %4
  %14 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  store i8 0, i8* %14, align 1
  store i8 0, i8* %6, align 1
  br label %15

15:                                               ; preds = %9, %13
  store i8 0, i8* %2, align 1
  store %"class.re2::Regexp"* null, %"class.re2::Regexp"** %3, align 8
  %16 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 0
  %17 = load i8, i8* %16, align 8
  %18 = icmp eq i8 %17, 5
  br i1 %18, label %19, label %128

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 4
  %21 = load i16, i16* %20, align 2
  %22 = zext i16 %21 to i32
  %23 = icmp eq i16 %21, 0
  br i1 %23, label %128, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 5
  %26 = getelementptr inbounds %union.anon, %union.anon* %25, i64 0, i32 0
  %27 = bitcast %union.anon* %25 to %"class.re2::Regexp"**
  %28 = icmp eq i16 %21, 1
  %29 = zext i16 %21 to i64
  br label %30

30:                                               ; preds = %24, %41
  %31 = phi i64 [ 0, %24 ], [ %42, %41 ]
  br i1 %28, label %34, label %32

32:                                               ; preds = %30
  %33 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %26, align 8
  br label %34

34:                                               ; preds = %30, %32
  %35 = phi %"class.re2::Regexp"** [ %33, %32 ], [ %27, %30 ]
  %36 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %35, i64 %31
  %37 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %36, align 8
  %38 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %37, i64 0, i32 0
  %39 = load i8, i8* %38, align 8
  %40 = icmp eq i8 %39, 18
  br i1 %40, label %41, label %44

41:                                               ; preds = %34
  %42 = add nuw nsw i64 %31, 1
  %43 = icmp ult i64 %42, %29
  br i1 %43, label %30, label %128

44:                                               ; preds = %34
  %45 = trunc i64 %31 to i32
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %128, label %47

47:                                               ; preds = %44
  %48 = icmp ult i16 %21, 2
  %49 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 5
  br i1 %48, label %50, label %52

50:                                               ; preds = %47
  %51 = bitcast %union.anon* %49 to %"class.re2::Regexp"**
  br label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %union.anon, %union.anon* %49, i64 0, i32 0
  %54 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %53, align 8
  br label %55

55:                                               ; preds = %50, %52
  %56 = phi %"class.re2::Regexp"** [ %51, %50 ], [ %54, %52 ]
  %57 = and i64 %31, 4294967295
  %58 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %56, i64 %57
  %59 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %58, align 8
  %60 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %59, i64 0, i32 0
  %61 = load i8, i8* %60, align 8
  %62 = add i8 %61, -3
  %63 = icmp ult i8 %62, 2
  br i1 %63, label %64, label %128

64:                                               ; preds = %55
  %65 = add nuw nsw i32 %45, 1
  %66 = icmp ult i32 %65, %22
  br i1 %66, label %67, label %95

67:                                               ; preds = %64
  %68 = getelementptr inbounds %union.anon, %union.anon* %49, i64 0, i32 0
  %69 = bitcast %union.anon* %49 to %"class.re2::Regexp"**
  br label %70

70:                                               ; preds = %67, %90
  %71 = phi i16 [ %21, %67 ], [ %94, %90 ]
  %72 = phi i64 [ %57, %67 ], [ %73, %90 ]
  %73 = add i64 %72, 1
  %74 = zext i16 %71 to i64
  %75 = icmp ult i64 %73, %74
  %76 = icmp ult i16 %71, 2
  br i1 %76, label %79, label %77

77:                                               ; preds = %70
  %78 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %68, align 8
  br label %79

79:                                               ; preds = %70, %77
  %80 = phi %"class.re2::Regexp"** [ %78, %77 ], [ %69, %70 ]
  br i1 %75, label %90, label %81

81:                                               ; preds = %79
  %82 = zext i16 %71 to i32
  %83 = zext i32 %65 to i64
  %84 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %80, i64 %83
  %85 = sub nsw i32 %82, %65
  %86 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 2
  %87 = load i16, i16* %86, align 2
  %88 = zext i16 %87 to i32
  %89 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp17ConcatOrAlternateENS_8RegexpOpEPPS0_iNS0_10ParseFlagsEb(i32 5, %"class.re2::Regexp"** %84, i32 %85, i32 %88, i1 zeroext false) #18
  store %"class.re2::Regexp"* %89, %"class.re2::Regexp"** %3, align 8
  br label %106

90:                                               ; preds = %79
  %91 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %80, i64 %73
  %92 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %91, align 8
  %93 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %92)
  %94 = load i16, i16* %20, align 2
  br label %70

95:                                               ; preds = %64
  %96 = tail call i8* @_Znwm(i64 40) #19
  %97 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 2
  %98 = load i16, i16* %97, align 2
  store i8 2, i8* %96, align 8
  %99 = getelementptr inbounds i8, i8* %96, i64 1
  store i8 0, i8* %99, align 1
  %100 = getelementptr inbounds i8, i8* %96, i64 2
  %101 = bitcast i8* %100 to i16*
  store i16 %98, i16* %101, align 2
  %102 = getelementptr inbounds i8, i8* %96, i64 4
  %103 = bitcast i8* %102 to i16*
  store i16 1, i16* %103, align 4
  %104 = getelementptr inbounds i8, i8* %96, i64 6
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %104, i8 0, i64 34, i1 false) #18
  %105 = bitcast %"class.re2::Regexp"** %3 to i8**
  store i8* %96, i8** %105, align 8
  br label %106

106:                                              ; preds = %95, %81
  %107 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %59, i64 0, i32 2
  %108 = load i16, i16* %107, align 2
  %109 = and i16 %108, 32
  %110 = icmp ne i16 %109, 0
  %111 = load i8, i8* %60, align 8
  %112 = icmp eq i8 %111, 3
  %113 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %59, i64 0, i32 7
  br i1 %112, label %114, label %116

114:                                              ; preds = %106
  %115 = getelementptr inbounds %union.anon.0, %union.anon.0* %113, i64 0, i32 0, i32 0
  br label %122

116:                                              ; preds = %106
  %117 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %59, i64 0, i32 7, i32 0, i32 1
  %118 = bitcast %"class.std::__1::basic_string"** %117 to i32**
  %119 = load i32*, i32** %118, align 8
  %120 = getelementptr inbounds %union.anon.0, %union.anon.0* %113, i64 0, i32 0, i32 0
  %121 = load i32, i32* %120, align 8
  br label %122

122:                                              ; preds = %114, %116
  %123 = phi i32* [ %119, %116 ], [ %115, %114 ]
  %124 = phi i32 [ %121, %116 ], [ 1, %114 ]
  tail call void @_ZN3re219ConvertRunesToBytesEbPiiPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(i1 zeroext %110, i32* %123, i32 %124, %"class.std::__1::basic_string"* %1)
  %125 = load i16, i16* %107, align 2
  %126 = trunc i16 %125 to i8
  %127 = and i8 %126, 1
  store i8 %127, i8* %2, align 1
  br label %128

128:                                              ; preds = %41, %19, %44, %55, %122, %15
  %129 = phi i1 [ false, %15 ], [ false, %44 ], [ true, %122 ], [ false, %55 ], [ false, %19 ], [ false, %41 ]
  ret i1 %129
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3re26Regexp22RequiredPrefixForAccelEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPb(%"class.re2::Regexp"*, %"class.std::__1::basic_string"*, i8* nocapture) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %11, align 8
  br label %14

12:                                               ; preds = %3
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  store i8 0, i8* %13, align 1
  store i8 0, i8* %5, align 1
  br label %14

14:                                               ; preds = %8, %12
  store i8 0, i8* %2, align 1
  %15 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 0
  %16 = load i8, i8* %15, align 8
  %17 = icmp eq i8 %16, 5
  br i1 %17, label %18, label %33

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 4
  %20 = load i16, i16* %19, align 2
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %33, label %22

22:                                               ; preds = %18
  %23 = icmp eq i16 %20, 1
  %24 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 5
  br i1 %23, label %25, label %27

25:                                               ; preds = %22
  %26 = bitcast %union.anon* %24 to %"class.re2::Regexp"**
  br label %30

27:                                               ; preds = %22
  %28 = getelementptr inbounds %union.anon, %union.anon* %24, i64 0, i32 0
  %29 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %28, align 8
  br label %30

30:                                               ; preds = %25, %27
  %31 = phi %"class.re2::Regexp"** [ %26, %25 ], [ %29, %27 ]
  %32 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %31, align 8
  br label %33

33:                                               ; preds = %18, %14, %30
  %34 = phi %"class.re2::Regexp"* [ %0, %14 ], [ %0, %18 ], [ %32, %30 ]
  br label %35

35:                                               ; preds = %59, %33
  %36 = phi %"class.re2::Regexp"* [ %34, %33 ], [ %60, %59 ]
  %37 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %36, i64 0, i32 0
  %38 = load i8, i8* %37, align 8
  switch i8 %38, label %93 [
    i8 11, label %39
    i8 3, label %72
    i8 4, label %72
  ]

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %36, i64 0, i32 4
  %41 = load i16, i16* %40, align 2
  %42 = icmp ult i16 %41, 2
  %43 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %36, i64 0, i32 5
  br i1 %42, label %44, label %46

44:                                               ; preds = %39
  %45 = bitcast %union.anon* %43 to %"class.re2::Regexp"**
  br label %49

46:                                               ; preds = %39
  %47 = getelementptr inbounds %union.anon, %union.anon* %43, i64 0, i32 0
  %48 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %47, align 8
  br label %49

49:                                               ; preds = %44, %46
  %50 = phi %"class.re2::Regexp"** [ %45, %44 ], [ %48, %46 ]
  %51 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %50, align 8
  %52 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %51, i64 0, i32 0
  %53 = load i8, i8* %52, align 8
  %54 = icmp eq i8 %53, 5
  br i1 %54, label %55, label %59

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %51, i64 0, i32 4
  %57 = load i16, i16* %56, align 2
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %55, %69, %49
  %60 = phi %"class.re2::Regexp"* [ %71, %69 ], [ %51, %55 ], [ %51, %49 ]
  br label %35

61:                                               ; preds = %55
  %62 = icmp eq i16 %57, 1
  %63 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %51, i64 0, i32 5
  br i1 %62, label %64, label %66

64:                                               ; preds = %61
  %65 = bitcast %union.anon* %63 to %"class.re2::Regexp"**
  br label %69

66:                                               ; preds = %61
  %67 = getelementptr inbounds %union.anon, %union.anon* %63, i64 0, i32 0
  %68 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %67, align 8
  br label %69

69:                                               ; preds = %64, %66
  %70 = phi %"class.re2::Regexp"** [ %65, %64 ], [ %68, %66 ]
  %71 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %70, align 8
  br label %59

72:                                               ; preds = %35, %35
  %73 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %36, i64 0, i32 2
  %74 = load i16, i16* %73, align 2
  %75 = and i16 %74, 32
  %76 = icmp ne i16 %75, 0
  %77 = icmp eq i8 %38, 3
  %78 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %36, i64 0, i32 7
  br i1 %77, label %79, label %81

79:                                               ; preds = %72
  %80 = getelementptr inbounds %union.anon.0, %union.anon.0* %78, i64 0, i32 0, i32 0
  br label %87

81:                                               ; preds = %72
  %82 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %36, i64 0, i32 7, i32 0, i32 1
  %83 = bitcast %"class.std::__1::basic_string"** %82 to i32**
  %84 = load i32*, i32** %83, align 8
  %85 = getelementptr inbounds %union.anon.0, %union.anon.0* %78, i64 0, i32 0, i32 0
  %86 = load i32, i32* %85, align 8
  br label %87

87:                                               ; preds = %79, %81
  %88 = phi i32* [ %84, %81 ], [ %80, %79 ]
  %89 = phi i32 [ %86, %81 ], [ 1, %79 ]
  tail call void @_ZN3re219ConvertRunesToBytesEbPiiPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(i1 zeroext %76, i32* %88, i32 %89, %"class.std::__1::basic_string"* %1)
  %90 = load i16, i16* %73, align 2
  %91 = trunc i16 %90 to i8
  %92 = and i8 %91, 1
  store i8 %92, i8* %2, align 1
  br label %93

93:                                               ; preds = %35, %87
  %94 = phi i1 [ true, %87 ], [ false, %35 ]
  ret i1 %94
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re216CharClassBuilderC2Ev(%"class.re2::CharClassBuilder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %4 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_node_base"** %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #18
  store %"class.std::__1::__tree_end_node"* %3, %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 2
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 0
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 1
  store i32 0, i32* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3re216CharClassBuilder8AddRangeEii(%"class.re2::CharClassBuilder"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp slt i32 %2, %1
  br i1 %4, label %392, label %5

5:                                                ; preds = %3
  %6 = icmp slt i32 %1, 123
  %7 = icmp sgt i32 %2, 64
  %8 = and i1 %6, %7
  br i1 %8, label %9, label %41

9:                                                ; preds = %5
  %10 = icmp sgt i32 %1, 65
  %11 = select i1 %10, i32 %1, i32 65
  %12 = icmp slt i32 %2, 90
  %13 = select i1 %12, i32 %2, i32 90
  %14 = icmp slt i32 %13, %11
  br i1 %14, label %25, label %15

15:                                               ; preds = %9
  %16 = sub nsw i32 1, %11
  %17 = add nsw i32 %16, %13
  %18 = shl nsw i32 -1, %17
  %19 = xor i32 %18, -1
  %20 = add nsw i32 %11, -65
  %21 = shl i32 %19, %20
  %22 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = or i32 %23, %21
  store i32 %24, i32* %22, align 8
  br label %25

25:                                               ; preds = %9, %15
  %26 = icmp sgt i32 %1, 97
  %27 = select i1 %26, i32 %1, i32 97
  %28 = icmp slt i32 %2, 122
  %29 = select i1 %28, i32 %2, i32 122
  %30 = icmp slt i32 %29, %27
  br i1 %30, label %41, label %31

31:                                               ; preds = %25
  %32 = sub nsw i32 1, %27
  %33 = add nsw i32 %32, %29
  %34 = shl nsw i32 -1, %33
  %35 = xor i32 %34, -1
  %36 = add nsw i32 %27, -97
  %37 = shl i32 %35, %36
  %38 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = or i32 %39, %37
  store i32 %40, i32* %38, align 4
  br label %41

41:                                               ; preds = %31, %25, %5
  %42 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 3
  %43 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %44 = bitcast %"class.std::__1::__tree_end_node"* %43 to %"class.std::__1::__tree_node"**
  %45 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node"* %45, null
  %47 = bitcast %"class.std::__1::__tree_node"* %45 to %"class.std::__1::__tree_node_base"*
  br i1 %46, label %74, label %48

48:                                               ; preds = %41, %48
  %49 = phi %"class.std::__1::__tree_end_node"* [ %59, %48 ], [ %43, %41 ]
  %50 = phi %"class.std::__1::__tree_node"* [ %60, %48 ], [ %45, %41 ]
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %50, i64 0, i32 1, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %52, %1
  %54 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %50, i64 0, i32 0, i32 1
  %55 = bitcast %"class.std::__1::__tree_node_base"** %54 to %"class.std::__1::__tree_node"**
  %56 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %50, i64 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::__tree_node"* %50 to %"class.std::__1::__tree_node"**
  %58 = select i1 %53, %"class.std::__1::__tree_node"** %55, %"class.std::__1::__tree_node"** %57
  %59 = select i1 %53, %"class.std::__1::__tree_end_node"* %49, %"class.std::__1::__tree_end_node"* %56
  %60 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %58, align 8
  %61 = icmp eq %"class.std::__1::__tree_node"* %60, null
  br i1 %61, label %62, label %48

62:                                               ; preds = %48
  %63 = icmp eq %"class.std::__1::__tree_end_node"* %59, %43
  br i1 %63, label %74, label %64

64:                                               ; preds = %62
  %65 = bitcast %"class.std::__1::__tree_end_node"* %59 to %"class.std::__1::__tree_node"*
  %66 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %65, i64 0, i32 1, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp sgt i32 %67, %1
  br i1 %68, label %74, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %59, i64 4
  %71 = bitcast %"class.std::__1::__tree_end_node"* %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = icmp slt i32 %72, %2
  br i1 %73, label %74, label %392

74:                                               ; preds = %64, %62, %41, %69
  %75 = icmp sgt i32 %1, 0
  br i1 %75, label %76, label %154

76:                                               ; preds = %74
  %77 = add nsw i32 %1, -1
  br i1 %46, label %154, label %78

78:                                               ; preds = %76, %78
  %79 = phi %"class.std::__1::__tree_end_node"* [ %89, %78 ], [ %43, %76 ]
  %80 = phi %"class.std::__1::__tree_node"* [ %90, %78 ], [ %45, %76 ]
  %81 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %80, i64 0, i32 1, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = icmp slt i32 %82, %77
  %84 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %80, i64 0, i32 0, i32 1
  %85 = bitcast %"class.std::__1::__tree_node_base"** %84 to %"class.std::__1::__tree_node"**
  %86 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %80, i64 0, i32 0, i32 0
  %87 = bitcast %"class.std::__1::__tree_node"* %80 to %"class.std::__1::__tree_node"**
  %88 = select i1 %83, %"class.std::__1::__tree_node"** %85, %"class.std::__1::__tree_node"** %87
  %89 = select i1 %83, %"class.std::__1::__tree_end_node"* %79, %"class.std::__1::__tree_end_node"* %86
  %90 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %88, align 8
  %91 = icmp eq %"class.std::__1::__tree_node"* %90, null
  br i1 %91, label %92, label %78

92:                                               ; preds = %78
  %93 = icmp eq %"class.std::__1::__tree_end_node"* %89, %43
  br i1 %93, label %154, label %94

94:                                               ; preds = %92
  %95 = bitcast %"class.std::__1::__tree_end_node"* %89 to %"class.std::__1::__tree_node"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %95, i64 0, i32 1, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = icmp slt i32 %97, %1
  br i1 %98, label %99, label %154

99:                                               ; preds = %94
  %100 = bitcast %"class.std::__1::__tree_end_node"* %89 to %"class.std::__1::__tree_node"*
  %101 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %100, i64 0, i32 1, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %89, i64 4
  %104 = bitcast %"class.std::__1::__tree_end_node"* %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = icmp sgt i32 %105, %2
  %107 = select i1 %106, i32 %105, i32 %2
  %108 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 2
  %109 = load i32, i32* %108, align 8
  %110 = xor i32 %105, -1
  %111 = add i32 %102, %110
  %112 = add i32 %111, %109
  store i32 %112, i32* %108, align 8
  %113 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %89, i64 1, i32 0
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  %115 = icmp eq %"class.std::__1::__tree_node_base"* %114, null
  br i1 %115, label %116, label %124

116:                                              ; preds = %99
  %117 = bitcast %"class.std::__1::__tree_end_node"* %89 to %"class.std::__1::__tree_node_base"*
  %118 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %89, i64 2
  %119 = bitcast %"class.std::__1::__tree_end_node"* %118 to %"class.std::__1::__tree_end_node"**
  %120 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %119, align 8
  %121 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %120, i64 0, i32 0
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  %123 = icmp eq %"class.std::__1::__tree_node_base"* %122, %117
  br i1 %123, label %140, label %131

124:                                              ; preds = %99, %124
  %125 = phi %"class.std::__1::__tree_node_base"* [ %127, %124 ], [ %114, %99 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 0, i32 0
  %127 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %126, align 8
  %128 = icmp eq %"class.std::__1::__tree_node_base"* %127, null
  br i1 %128, label %129, label %124

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 0
  br label %140

131:                                              ; preds = %116, %131
  %132 = phi %"class.std::__1::__tree_end_node"** [ %135, %131 ], [ %119, %116 ]
  %133 = bitcast %"class.std::__1::__tree_end_node"** %132 to %"class.std::__1::__tree_node_base"**
  %134 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %133, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %134, i64 0, i32 2
  %136 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %135, align 8
  %137 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %136, i64 0, i32 0
  %138 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %137, align 8
  %139 = icmp eq %"class.std::__1::__tree_node_base"* %138, %134
  br i1 %139, label %140, label %131

140:                                              ; preds = %131, %129, %116
  %141 = phi %"class.std::__1::__tree_end_node"* [ %130, %129 ], [ %120, %116 ], [ %136, %131 ]
  %142 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %42, i64 0, i32 0, i32 0
  %143 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %142, align 8
  %144 = icmp eq %"class.std::__1::__tree_end_node"* %143, %89
  br i1 %144, label %145, label %148

145:                                              ; preds = %140
  %146 = ptrtoint %"class.std::__1::__tree_end_node"* %141 to i64
  %147 = bitcast %"class.std::__1::set"* %42 to i64*
  store i64 %146, i64* %147, align 8
  br label %148

148:                                              ; preds = %140, %145
  %149 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %150 = load i64, i64* %149, align 8
  %151 = add i64 %150, -1
  store i64 %151, i64* %149, align 8
  %152 = bitcast %"class.std::__1::__tree_end_node"* %89 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %47, %"class.std::__1::__tree_node_base"* %152) #18
  %153 = bitcast %"class.std::__1::__tree_end_node"* %89 to i8*
  tail call void @_ZdlPv(i8* %153) #19
  br label %154

154:                                              ; preds = %94, %92, %76, %148, %74
  %155 = phi i32 [ %2, %74 ], [ %107, %148 ], [ %2, %76 ], [ %2, %92 ], [ %2, %94 ]
  %156 = phi i32 [ %1, %74 ], [ %102, %148 ], [ %1, %76 ], [ %1, %92 ], [ %1, %94 ]
  %157 = icmp slt i32 %155, 1114111
  br i1 %157, label %158, label %237

158:                                              ; preds = %154
  %159 = add nsw i32 %155, 1
  %160 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %44, align 8
  %161 = icmp eq %"class.std::__1::__tree_node"* %160, null
  %162 = bitcast %"class.std::__1::__tree_node"* %160 to %"class.std::__1::__tree_node_base"*
  br i1 %161, label %237, label %163

163:                                              ; preds = %158, %163
  %164 = phi %"class.std::__1::__tree_end_node"* [ %174, %163 ], [ %43, %158 ]
  %165 = phi %"class.std::__1::__tree_node"* [ %175, %163 ], [ %160, %158 ]
  %166 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %165, i64 0, i32 1, i32 1
  %167 = load i32, i32* %166, align 4
  %168 = icmp sle i32 %167, %155
  %169 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %165, i64 0, i32 0, i32 1
  %170 = bitcast %"class.std::__1::__tree_node_base"** %169 to %"class.std::__1::__tree_node"**
  %171 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %165, i64 0, i32 0, i32 0
  %172 = bitcast %"class.std::__1::__tree_node"* %165 to %"class.std::__1::__tree_node"**
  %173 = select i1 %168, %"class.std::__1::__tree_node"** %170, %"class.std::__1::__tree_node"** %172
  %174 = select i1 %168, %"class.std::__1::__tree_end_node"* %164, %"class.std::__1::__tree_end_node"* %171
  %175 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %173, align 8
  %176 = icmp eq %"class.std::__1::__tree_node"* %175, null
  br i1 %176, label %177, label %163

177:                                              ; preds = %163
  %178 = icmp eq %"class.std::__1::__tree_end_node"* %174, %43
  br i1 %178, label %237, label %179

179:                                              ; preds = %177
  %180 = bitcast %"class.std::__1::__tree_end_node"* %174 to %"class.std::__1::__tree_node"*
  %181 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %180, i64 0, i32 1, i32 0
  %182 = load i32, i32* %181, align 4
  %183 = icmp slt i32 %159, %182
  br i1 %183, label %237, label %184

184:                                              ; preds = %179
  %185 = bitcast %"class.std::__1::__tree_end_node"* %174 to %"class.std::__1::__tree_node"*
  %186 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %174, i64 4
  %187 = bitcast %"class.std::__1::__tree_end_node"* %186 to i32*
  %188 = load i32, i32* %187, align 4
  %189 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %185, i64 0, i32 1, i32 0
  %190 = load i32, i32* %189, align 4
  %191 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 2
  %192 = load i32, i32* %191, align 8
  %193 = xor i32 %188, -1
  %194 = add i32 %190, %193
  %195 = add i32 %194, %192
  store i32 %195, i32* %191, align 8
  %196 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %174, i64 1, i32 0
  %197 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %196, align 8
  %198 = icmp eq %"class.std::__1::__tree_node_base"* %197, null
  br i1 %198, label %199, label %207

199:                                              ; preds = %184
  %200 = bitcast %"class.std::__1::__tree_end_node"* %174 to %"class.std::__1::__tree_node_base"*
  %201 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %174, i64 2
  %202 = bitcast %"class.std::__1::__tree_end_node"* %201 to %"class.std::__1::__tree_end_node"**
  %203 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %202, align 8
  %204 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %203, i64 0, i32 0
  %205 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %204, align 8
  %206 = icmp eq %"class.std::__1::__tree_node_base"* %205, %200
  br i1 %206, label %223, label %214

207:                                              ; preds = %184, %207
  %208 = phi %"class.std::__1::__tree_node_base"* [ %210, %207 ], [ %197, %184 ]
  %209 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %208, i64 0, i32 0, i32 0
  %210 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %209, align 8
  %211 = icmp eq %"class.std::__1::__tree_node_base"* %210, null
  br i1 %211, label %212, label %207

212:                                              ; preds = %207
  %213 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %208, i64 0, i32 0
  br label %223

214:                                              ; preds = %199, %214
  %215 = phi %"class.std::__1::__tree_end_node"** [ %218, %214 ], [ %202, %199 ]
  %216 = bitcast %"class.std::__1::__tree_end_node"** %215 to %"class.std::__1::__tree_node_base"**
  %217 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %216, align 8
  %218 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %217, i64 0, i32 2
  %219 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %218, align 8
  %220 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %219, i64 0, i32 0
  %221 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %220, align 8
  %222 = icmp eq %"class.std::__1::__tree_node_base"* %221, %217
  br i1 %222, label %223, label %214

223:                                              ; preds = %214, %212, %199
  %224 = phi %"class.std::__1::__tree_end_node"* [ %213, %212 ], [ %203, %199 ], [ %219, %214 ]
  %225 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %42, i64 0, i32 0, i32 0
  %226 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %225, align 8
  %227 = icmp eq %"class.std::__1::__tree_end_node"* %226, %174
  br i1 %227, label %228, label %231

228:                                              ; preds = %223
  %229 = ptrtoint %"class.std::__1::__tree_end_node"* %224 to i64
  %230 = bitcast %"class.std::__1::set"* %42 to i64*
  store i64 %229, i64* %230, align 8
  br label %231

231:                                              ; preds = %223, %228
  %232 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %233 = load i64, i64* %232, align 8
  %234 = add i64 %233, -1
  store i64 %234, i64* %232, align 8
  %235 = bitcast %"class.std::__1::__tree_end_node"* %174 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %162, %"class.std::__1::__tree_node_base"* %235) #18
  %236 = bitcast %"class.std::__1::__tree_end_node"* %174 to i8*
  tail call void @_ZdlPv(i8* %236) #19
  br label %237

237:                                              ; preds = %179, %177, %158, %231, %154
  %238 = phi i32 [ %155, %154 ], [ %188, %231 ], [ %155, %158 ], [ %155, %177 ], [ %155, %179 ]
  %239 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 2
  %240 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %42, i64 0, i32 0, i32 0
  %241 = bitcast %"class.std::__1::set"* %42 to i64*
  %242 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %243 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %244 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %44, align 8
  %245 = icmp eq %"class.std::__1::__tree_node"* %244, null
  br i1 %245, label %250, label %246

246:                                              ; preds = %237, %320
  %247 = phi %"class.std::__1::__tree_node"* [ %325, %320 ], [ %244, %237 ]
  %248 = phi i1 [ %326, %320 ], [ %245, %237 ]
  %249 = bitcast %"class.std::__1::__tree_node"* %247 to %"class.std::__1::__tree_node_base"*
  br label %255

250:                                              ; preds = %320, %237
  %251 = load i32, i32* %239, align 8
  %252 = sub i32 1, %156
  %253 = add i32 %252, %238
  %254 = add i32 %253, %251
  store i32 %254, i32* %239, align 8
  br label %360

255:                                              ; preds = %246, %255
  %256 = phi %"class.std::__1::__tree_end_node"* [ %266, %255 ], [ %43, %246 ]
  %257 = phi %"class.std::__1::__tree_node"* [ %267, %255 ], [ %247, %246 ]
  %258 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %257, i64 0, i32 1, i32 1
  %259 = load i32, i32* %258, align 4
  %260 = icmp slt i32 %259, %156
  %261 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %257, i64 0, i32 0, i32 1
  %262 = bitcast %"class.std::__1::__tree_node_base"** %261 to %"class.std::__1::__tree_node"**
  %263 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %257, i64 0, i32 0, i32 0
  %264 = bitcast %"class.std::__1::__tree_node"* %257 to %"class.std::__1::__tree_node"**
  %265 = select i1 %260, %"class.std::__1::__tree_node"** %262, %"class.std::__1::__tree_node"** %264
  %266 = select i1 %260, %"class.std::__1::__tree_end_node"* %256, %"class.std::__1::__tree_end_node"* %263
  %267 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %265, align 8
  %268 = icmp eq %"class.std::__1::__tree_node"* %267, null
  br i1 %268, label %269, label %255

269:                                              ; preds = %255
  %270 = icmp eq %"class.std::__1::__tree_end_node"* %266, %43
  br i1 %270, label %327, label %271

271:                                              ; preds = %269
  %272 = bitcast %"class.std::__1::__tree_end_node"* %266 to %"class.std::__1::__tree_node"*
  %273 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %272, i64 0, i32 1, i32 0
  %274 = load i32, i32* %273, align 4
  %275 = icmp slt i32 %238, %274
  br i1 %275, label %327, label %276

276:                                              ; preds = %271
  %277 = bitcast %"class.std::__1::__tree_end_node"* %266 to %"class.std::__1::__tree_node"*
  %278 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %266, i64 4
  %279 = bitcast %"class.std::__1::__tree_end_node"* %278 to i32*
  %280 = load i32, i32* %279, align 4
  %281 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %277, i64 0, i32 1, i32 0
  %282 = load i32, i32* %281, align 4
  %283 = load i32, i32* %239, align 8
  %284 = xor i32 %280, -1
  %285 = add i32 %282, %284
  %286 = add i32 %285, %283
  store i32 %286, i32* %239, align 8
  %287 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %266, i64 1, i32 0
  %288 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %287, align 8
  %289 = icmp eq %"class.std::__1::__tree_node_base"* %288, null
  br i1 %289, label %290, label %298

290:                                              ; preds = %276
  %291 = bitcast %"class.std::__1::__tree_end_node"* %266 to %"class.std::__1::__tree_node_base"*
  %292 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %266, i64 2
  %293 = bitcast %"class.std::__1::__tree_end_node"* %292 to %"class.std::__1::__tree_end_node"**
  %294 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %293, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %294, i64 0, i32 0
  %296 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %295, align 8
  %297 = icmp eq %"class.std::__1::__tree_node_base"* %296, %291
  br i1 %297, label %314, label %305

298:                                              ; preds = %276, %298
  %299 = phi %"class.std::__1::__tree_node_base"* [ %301, %298 ], [ %288, %276 ]
  %300 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %299, i64 0, i32 0, i32 0
  %301 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %300, align 8
  %302 = icmp eq %"class.std::__1::__tree_node_base"* %301, null
  br i1 %302, label %303, label %298

303:                                              ; preds = %298
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %299, i64 0, i32 0
  br label %314

305:                                              ; preds = %290, %305
  %306 = phi %"class.std::__1::__tree_end_node"** [ %309, %305 ], [ %293, %290 ]
  %307 = bitcast %"class.std::__1::__tree_end_node"** %306 to %"class.std::__1::__tree_node_base"**
  %308 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %307, align 8
  %309 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %308, i64 0, i32 2
  %310 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %309, align 8
  %311 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %310, i64 0, i32 0
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  %313 = icmp eq %"class.std::__1::__tree_node_base"* %312, %308
  br i1 %313, label %314, label %305

314:                                              ; preds = %305, %303, %290
  %315 = phi %"class.std::__1::__tree_end_node"* [ %304, %303 ], [ %294, %290 ], [ %310, %305 ]
  %316 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %240, align 8
  %317 = icmp eq %"class.std::__1::__tree_end_node"* %316, %266
  br i1 %317, label %318, label %320

318:                                              ; preds = %314
  %319 = ptrtoint %"class.std::__1::__tree_end_node"* %315 to i64
  store i64 %319, i64* %241, align 8
  br label %320

320:                                              ; preds = %314, %318
  %321 = load i64, i64* %242, align 8
  %322 = add i64 %321, -1
  store i64 %322, i64* %242, align 8
  %323 = bitcast %"class.std::__1::__tree_end_node"* %266 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %249, %"class.std::__1::__tree_node_base"* %323) #18
  %324 = bitcast %"class.std::__1::__tree_end_node"* %266 to i8*
  tail call void @_ZdlPv(i8* %324) #19
  %325 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %44, align 8
  %326 = icmp eq %"class.std::__1::__tree_node"* %325, null
  br i1 %326, label %250, label %246

327:                                              ; preds = %271, %269
  %328 = load i32, i32* %239, align 8
  %329 = sub i32 1, %156
  %330 = add i32 %329, %238
  %331 = add i32 %330, %328
  store i32 %331, i32* %239, align 8
  br i1 %248, label %360, label %332

332:                                              ; preds = %327, %356
  %333 = phi %"class.std::__1::__tree_node"* [ %359, %356 ], [ %247, %327 ]
  %334 = phi %"class.std::__1::__tree_node_base"** [ %358, %356 ], [ %243, %327 ]
  %335 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %333, i64 0, i32 1, i32 0
  %336 = load i32, i32* %335, align 4
  %337 = icmp slt i32 %238, %336
  br i1 %337, label %338, label %344

338:                                              ; preds = %332
  %339 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %333, i64 0, i32 0, i32 0, i32 0
  %340 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %339, align 8
  %341 = icmp eq %"class.std::__1::__tree_node_base"* %340, null
  br i1 %341, label %342, label %356

342:                                              ; preds = %338
  %343 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %333, i64 0, i32 0, i32 0
  br label %362

344:                                              ; preds = %332
  %345 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %333, i64 0, i32 1, i32 1
  %346 = load i32, i32* %345, align 4
  %347 = icmp slt i32 %346, %156
  br i1 %347, label %348, label %354

348:                                              ; preds = %344
  %349 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %333, i64 0, i32 0, i32 1
  %350 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %349, align 8
  %351 = icmp eq %"class.std::__1::__tree_node_base"* %350, null
  br i1 %351, label %352, label %356

352:                                              ; preds = %348
  %353 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %333, i64 0, i32 0, i32 0
  br label %362

354:                                              ; preds = %344
  %355 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %333, i64 0, i32 0, i32 0
  br label %362

356:                                              ; preds = %348, %338
  %357 = phi %"class.std::__1::__tree_node_base"* [ %340, %338 ], [ %350, %348 ]
  %358 = phi %"class.std::__1::__tree_node_base"** [ %339, %338 ], [ %349, %348 ]
  %359 = bitcast %"class.std::__1::__tree_node_base"* %357 to %"class.std::__1::__tree_node"*
  br label %332

360:                                              ; preds = %250, %327
  %361 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 0, i32 0
  br label %362

362:                                              ; preds = %360, %354, %352, %342
  %363 = phi %"class.std::__1::__tree_end_node"* [ %43, %360 ], [ %343, %342 ], [ %353, %352 ], [ %355, %354 ]
  %364 = phi %"class.std::__1::__tree_node_base"** [ %361, %360 ], [ %339, %342 ], [ %349, %352 ], [ %334, %354 ]
  %365 = bitcast %"class.std::__1::__tree_node_base"** %364 to %"class.std::__1::__tree_node"**
  %366 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node"* %366, null
  br i1 %367, label %368, label %392

368:                                              ; preds = %362
  %369 = tail call i8* @_Znwm(i64 40) #19, !noalias !36
  %370 = getelementptr inbounds i8, i8* %369, i64 28
  %371 = bitcast i8* %370 to i64*
  %372 = zext i32 %238 to i64
  %373 = shl nuw i64 %372, 32
  %374 = zext i32 %156 to i64
  %375 = or i64 %373, %374
  store i64 %375, i64* %371, align 4, !noalias !36
  %376 = bitcast i8* %369 to %"class.std::__1::__tree_node_base"*
  %377 = getelementptr inbounds i8, i8* %369, i64 16
  %378 = bitcast i8* %377 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %369, i8 0, i64 16, i1 false) #18
  store %"class.std::__1::__tree_end_node"* %363, %"class.std::__1::__tree_end_node"** %378, align 8
  %379 = bitcast %"class.std::__1::__tree_node_base"** %364 to i8**
  store i8* %369, i8** %379, align 8
  %380 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %240, align 8
  %381 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %380, i64 0, i32 0
  %382 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %381, align 8
  %383 = icmp eq %"class.std::__1::__tree_node_base"* %382, null
  br i1 %383, label %387, label %384

384:                                              ; preds = %368
  %385 = ptrtoint %"class.std::__1::__tree_node_base"* %382 to i64
  store i64 %385, i64* %241, align 8
  %386 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %364, align 8
  br label %387

387:                                              ; preds = %384, %368
  %388 = phi %"class.std::__1::__tree_node_base"* [ %376, %368 ], [ %386, %384 ]
  %389 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %243, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %389, %"class.std::__1::__tree_node_base"* %388) #18
  %390 = load i64, i64* %242, align 8
  %391 = add i64 %390, 1
  store i64 %391, i64* %242, align 8
  br label %392

392:                                              ; preds = %387, %362, %69, %3
  %393 = phi i1 [ false, %3 ], [ false, %69 ], [ true, %362 ], [ true, %387 ]
  ret i1 %393
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re216CharClassBuilder12AddCharClassEPS0_(%"class.re2::CharClassBuilder"*, %"class.re2::CharClassBuilder"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %1, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %3, align 8
  %5 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %1, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %6 = icmp eq %"class.std::__1::__tree_end_node"* %4, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %44, %2
  ret void

8:                                                ; preds = %2, %44
  %9 = phi %"class.std::__1::__tree_end_node"* [ %45, %44 ], [ %4, %2 ]
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node"*
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 4
  %14 = bitcast %"class.std::__1::__tree_end_node"* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = tail call zeroext i1 @_ZN3re216CharClassBuilder8AddRangeEii(%"class.re2::CharClassBuilder"* %0, i32 %12, i32 %15)
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 1, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %19, label %20, label %28

20:                                               ; preds = %8
  %21 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node_base"*
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 2
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_end_node"**
  %24 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 0, i32 0
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, %21
  br i1 %27, label %44, label %35

28:                                               ; preds = %8, %28
  %29 = phi %"class.std::__1::__tree_node_base"* [ %31, %28 ], [ %18, %8 ]
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %30, align 8
  %32 = icmp eq %"class.std::__1::__tree_node_base"* %31, null
  br i1 %32, label %33, label %28

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %29, i64 0, i32 0
  br label %44

35:                                               ; preds = %20, %35
  %36 = phi %"class.std::__1::__tree_end_node"** [ %39, %35 ], [ %23, %20 ]
  %37 = bitcast %"class.std::__1::__tree_end_node"** %36 to %"class.std::__1::__tree_node_base"**
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %40 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, %38
  br i1 %43, label %44, label %35

44:                                               ; preds = %35, %20, %33
  %45 = phi %"class.std::__1::__tree_end_node"* [ %34, %33 ], [ %24, %20 ], [ %40, %35 ]
  %46 = icmp eq %"class.std::__1::__tree_end_node"* %45, %5
  br i1 %46, label %7, label %8
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3re216CharClassBuilder8ContainsEi(%"class.re2::CharClassBuilder"*, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %28, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %17 = select i1 %12, %"class.std::__1::__tree_node"** %14, %"class.std::__1::__tree_node"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %28, label %23

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node"*
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, %1
  br i1 %27, label %28, label %29

28:                                               ; preds = %23, %21, %2
  br label %29

29:                                               ; preds = %23, %28
  %30 = phi %"class.std::__1::__tree_end_node"* [ %3, %28 ], [ %18, %23 ]
  %31 = icmp ne %"class.std::__1::__tree_end_node"* %30, %3
  ret i1 %31
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3re216CharClassBuilder10FoldsASCIIEv(%"class.re2::CharClassBuilder"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = xor i32 %5, %3
  %7 = and i32 %6, 67108863
  %8 = icmp eq i32 %7, 0
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.re2::CharClassBuilder"* @_ZN3re216CharClassBuilder4CopyEv(%"class.re2::CharClassBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 40) #19
  %3 = bitcast i8* %2 to %"class.re2::CharClassBuilder"*
  %4 = getelementptr inbounds i8, i8* %2, i64 24
  %5 = getelementptr inbounds i8, i8* %2, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #18
  %6 = bitcast i8* %5 to i8**
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to i32*
  store i32 0, i32* %8, align 8
  %9 = bitcast i8* %2 to i32*
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 4
  %11 = bitcast i8* %10 to i32*
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %12, align 8
  %14 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %15 = icmp eq %"class.std::__1::__tree_end_node"* %13, %14
  br i1 %15, label %24, label %16

16:                                               ; preds = %1
  %17 = bitcast i8* %4 to %"class.std::__1::__tree_node"**
  %18 = bitcast i8* %4 to %"class.std::__1::__tree_node_base"**
  %19 = bitcast i8* %4 to %"class.std::__1::__tree_end_node"*
  %20 = bitcast i8* %5 to %"class.std::__1::__tree_end_node"**
  %21 = bitcast i8* %5 to i64*
  %22 = getelementptr inbounds i8, i8* %2, i64 32
  %23 = bitcast i8* %22 to i64*
  br label %31

24:                                               ; preds = %127, %1
  %25 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  store i32 %26, i32* %9, align 8
  %27 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %11, align 4
  %29 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 2
  %30 = load i32, i32* %29, align 8
  store i32 %30, i32* %8, align 8
  ret %"class.re2::CharClassBuilder"* %3

31:                                               ; preds = %130, %16
  %32 = phi %"class.std::__1::__tree_node"* [ null, %16 ], [ %131, %130 ]
  %33 = phi %"class.std::__1::__tree_end_node"* [ %13, %16 ], [ %128, %130 ]
  %34 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_node"*
  %35 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 1, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 4
  %38 = bitcast %"class.std::__1::__tree_end_node"* %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq %"class.std::__1::__tree_node"* %32, null
  br i1 %40, label %69, label %41

41:                                               ; preds = %31, %65
  %42 = phi %"class.std::__1::__tree_node"* [ %68, %65 ], [ %32, %31 ]
  %43 = phi %"class.std::__1::__tree_node_base"** [ %67, %65 ], [ %18, %31 ]
  %44 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %42, i64 0, i32 1, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp slt i32 %39, %45
  br i1 %46, label %47, label %53

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %42, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  %50 = icmp eq %"class.std::__1::__tree_node_base"* %49, null
  br i1 %50, label %51, label %65

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %42, i64 0, i32 0, i32 0
  br label %69

53:                                               ; preds = %41
  %54 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %42, i64 0, i32 1, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = icmp slt i32 %55, %36
  br i1 %56, label %57, label %63

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %42, i64 0, i32 0, i32 1
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node_base"* %59, null
  br i1 %60, label %61, label %65

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %42, i64 0, i32 0, i32 0
  br label %69

63:                                               ; preds = %53
  %64 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %42, i64 0, i32 0, i32 0
  br label %69

65:                                               ; preds = %57, %47
  %66 = phi %"class.std::__1::__tree_node_base"* [ %49, %47 ], [ %59, %57 ]
  %67 = phi %"class.std::__1::__tree_node_base"** [ %48, %47 ], [ %58, %57 ]
  %68 = bitcast %"class.std::__1::__tree_node_base"* %66 to %"class.std::__1::__tree_node"*
  br label %41

69:                                               ; preds = %31, %63, %61, %51
  %70 = phi %"class.std::__1::__tree_end_node"* [ %52, %51 ], [ %62, %61 ], [ %64, %63 ], [ %19, %31 ]
  %71 = phi %"class.std::__1::__tree_node_base"** [ %48, %51 ], [ %58, %61 ], [ %43, %63 ], [ %18, %31 ]
  %72 = bitcast %"class.std::__1::__tree_node_base"** %71 to %"class.std::__1::__tree_node"**
  %73 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node"* %73, null
  br i1 %74, label %75, label %99

75:                                               ; preds = %69
  %76 = tail call i8* @_Znwm(i64 40) #19, !noalias !39
  %77 = getelementptr inbounds i8, i8* %76, i64 28
  %78 = bitcast i8* %77 to i64*
  %79 = zext i32 %39 to i64
  %80 = shl nuw i64 %79, 32
  %81 = zext i32 %36 to i64
  %82 = or i64 %80, %81
  store i64 %82, i64* %78, align 4, !noalias !39
  %83 = bitcast i8* %76 to %"class.std::__1::__tree_node_base"*
  %84 = getelementptr inbounds i8, i8* %76, i64 16
  %85 = bitcast i8* %84 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 16, i1 false) #18
  store %"class.std::__1::__tree_end_node"* %70, %"class.std::__1::__tree_end_node"** %85, align 8
  %86 = bitcast %"class.std::__1::__tree_node_base"** %71 to i8**
  store i8* %76, i8** %86, align 8
  %87 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %20, align 8
  %88 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %87, i64 0, i32 0
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  %90 = icmp eq %"class.std::__1::__tree_node_base"* %89, null
  br i1 %90, label %94, label %91

91:                                               ; preds = %75
  %92 = ptrtoint %"class.std::__1::__tree_node_base"* %89 to i64
  store i64 %92, i64* %21, align 8
  %93 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  br label %94

94:                                               ; preds = %91, %75
  %95 = phi %"class.std::__1::__tree_node_base"* [ %83, %75 ], [ %93, %91 ]
  %96 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %96, %"class.std::__1::__tree_node_base"* %95) #18
  %97 = load i64, i64* %23, align 8
  %98 = add i64 %97, 1
  store i64 %98, i64* %23, align 8
  br label %99

99:                                               ; preds = %69, %94
  %100 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 1, i32 0
  %101 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %100, align 8
  %102 = icmp eq %"class.std::__1::__tree_node_base"* %101, null
  br i1 %102, label %103, label %111

103:                                              ; preds = %99
  %104 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_node_base"*
  %105 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 2
  %106 = bitcast %"class.std::__1::__tree_end_node"* %105 to %"class.std::__1::__tree_end_node"**
  %107 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %106, align 8
  %108 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %107, i64 0, i32 0
  %109 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %108, align 8
  %110 = icmp eq %"class.std::__1::__tree_node_base"* %109, %104
  br i1 %110, label %127, label %118

111:                                              ; preds = %99, %111
  %112 = phi %"class.std::__1::__tree_node_base"* [ %114, %111 ], [ %101, %99 ]
  %113 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %112, i64 0, i32 0, i32 0
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  %115 = icmp eq %"class.std::__1::__tree_node_base"* %114, null
  br i1 %115, label %116, label %111

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %112, i64 0, i32 0
  br label %127

118:                                              ; preds = %103, %118
  %119 = phi %"class.std::__1::__tree_end_node"** [ %122, %118 ], [ %106, %103 ]
  %120 = bitcast %"class.std::__1::__tree_end_node"** %119 to %"class.std::__1::__tree_node_base"**
  %121 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %120, align 8
  %122 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %121, i64 0, i32 2
  %123 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %122, align 8
  %124 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %123, i64 0, i32 0
  %125 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %124, align 8
  %126 = icmp eq %"class.std::__1::__tree_node_base"* %125, %121
  br i1 %126, label %127, label %118

127:                                              ; preds = %118, %103, %116
  %128 = phi %"class.std::__1::__tree_end_node"* [ %117, %116 ], [ %107, %103 ], [ %123, %118 ]
  %129 = icmp eq %"class.std::__1::__tree_end_node"* %128, %14
  br i1 %129, label %24, label %130

130:                                              ; preds = %127
  %131 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  br label %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re216CharClassBuilder11RemoveAboveEi(%"class.re2::CharClassBuilder"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp sgt i32 %1, 1114110
  br i1 %3, label %184, label %4

4:                                                ; preds = %2
  %5 = icmp slt i32 %1, 122
  br i1 %5, label %6, label %27

6:                                                ; preds = %4
  %7 = icmp slt i32 %1, 97
  br i1 %7, label %14, label %8

8:                                                ; preds = %6
  %9 = sub nuw nsw i32 122, %1
  %10 = lshr i32 67108863, %9
  %11 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, %10
  store i32 %13, i32* %11, align 4
  br label %27

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 1
  store i32 0, i32* %15, align 4
  %16 = icmp slt i32 %1, 90
  br i1 %16, label %17, label %27

17:                                               ; preds = %14
  %18 = icmp slt i32 %1, 65
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 0
  store i32 0, i32* %20, align 8
  br label %27

21:                                               ; preds = %17
  %22 = sub nuw nsw i32 90, %1
  %23 = lshr i32 67108863, %22
  %24 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, %23
  store i32 %26, i32* %24, align 8
  br label %27

27:                                               ; preds = %4, %8, %19, %21, %14
  %28 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 3
  %29 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_node"**
  %31 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %30, align 8
  %32 = icmp eq %"class.std::__1::__tree_node"* %31, null
  br i1 %32, label %184, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %28, i64 0, i32 0, i32 0
  %35 = bitcast %"class.std::__1::set"* %28 to i64*
  %36 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %37 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 2
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %29, i64 0, i32 0
  %40 = zext i32 %1 to i64
  %41 = shl nuw i64 %40, 32
  %42 = add nsw i32 %1, 1
  br label %43

43:                                               ; preds = %33, %181
  %44 = phi %"class.std::__1::__tree_node"* [ %31, %33 ], [ %182, %181 ]
  %45 = bitcast %"class.std::__1::__tree_node"* %44 to %"class.std::__1::__tree_node_base"*
  br label %46

46:                                               ; preds = %43, %46
  %47 = phi %"class.std::__1::__tree_end_node"* [ %57, %46 ], [ %29, %43 ]
  %48 = phi %"class.std::__1::__tree_node"* [ %58, %46 ], [ %44, %43 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %48, i64 0, i32 1, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = icmp sle i32 %50, %1
  %52 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %48, i64 0, i32 0, i32 1
  %53 = bitcast %"class.std::__1::__tree_node_base"** %52 to %"class.std::__1::__tree_node"**
  %54 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %48, i64 0, i32 0, i32 0
  %55 = bitcast %"class.std::__1::__tree_node"* %48 to %"class.std::__1::__tree_node"**
  %56 = select i1 %51, %"class.std::__1::__tree_node"** %53, %"class.std::__1::__tree_node"** %55
  %57 = select i1 %51, %"class.std::__1::__tree_end_node"* %47, %"class.std::__1::__tree_end_node"* %54
  %58 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %56, align 8
  %59 = icmp eq %"class.std::__1::__tree_node"* %58, null
  br i1 %59, label %60, label %46

60:                                               ; preds = %46
  %61 = icmp eq %"class.std::__1::__tree_end_node"* %57, %29
  br i1 %61, label %184, label %62

62:                                               ; preds = %60
  %63 = bitcast %"class.std::__1::__tree_end_node"* %57 to %"class.std::__1::__tree_node"*
  %64 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %63, i64 0, i32 1, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp sgt i32 %65, 1114111
  br i1 %66, label %184, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %63, i64 0, i32 1
  %69 = bitcast %"struct.re2::RuneRange"* %68 to i64*
  %70 = load i64, i64* %69, align 4
  %71 = trunc i64 %70 to i32
  %72 = lshr i64 %70, 32
  %73 = trunc i64 %72 to i32
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 1, i32 0
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  %76 = icmp eq %"class.std::__1::__tree_node_base"* %75, null
  br i1 %76, label %77, label %85

77:                                               ; preds = %67
  %78 = bitcast %"class.std::__1::__tree_end_node"* %57 to %"class.std::__1::__tree_node_base"*
  %79 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 2
  %80 = bitcast %"class.std::__1::__tree_end_node"* %79 to %"class.std::__1::__tree_end_node"**
  %81 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %80, align 8
  %82 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %81, i64 0, i32 0
  %83 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %82, align 8
  %84 = icmp eq %"class.std::__1::__tree_node_base"* %83, %78
  br i1 %84, label %101, label %92

85:                                               ; preds = %67, %85
  %86 = phi %"class.std::__1::__tree_node_base"* [ %88, %85 ], [ %75, %67 ]
  %87 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %86, i64 0, i32 0, i32 0
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  %89 = icmp eq %"class.std::__1::__tree_node_base"* %88, null
  br i1 %89, label %90, label %85

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %86, i64 0, i32 0
  br label %101

92:                                               ; preds = %77, %92
  %93 = phi %"class.std::__1::__tree_end_node"** [ %96, %92 ], [ %80, %77 ]
  %94 = bitcast %"class.std::__1::__tree_end_node"** %93 to %"class.std::__1::__tree_node_base"**
  %95 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %94, align 8
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %95, i64 0, i32 2
  %97 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %96, align 8
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %97, i64 0, i32 0
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  %100 = icmp eq %"class.std::__1::__tree_node_base"* %99, %95
  br i1 %100, label %101, label %92

101:                                              ; preds = %92, %90, %77
  %102 = phi %"class.std::__1::__tree_end_node"* [ %91, %90 ], [ %81, %77 ], [ %97, %92 ]
  %103 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %34, align 8
  %104 = icmp eq %"class.std::__1::__tree_end_node"* %103, %57
  br i1 %104, label %105, label %107

105:                                              ; preds = %101
  %106 = ptrtoint %"class.std::__1::__tree_end_node"* %102 to i64
  store i64 %106, i64* %35, align 8
  br label %107

107:                                              ; preds = %101, %105
  %108 = load i64, i64* %36, align 8
  %109 = add i64 %108, -1
  store i64 %109, i64* %36, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"* %57 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %45, %"class.std::__1::__tree_node_base"* %110) #18
  %111 = bitcast %"class.std::__1::__tree_end_node"* %57 to i8*
  tail call void @_ZdlPv(i8* %111) #19
  %112 = load i32, i32* %38, align 8
  %113 = xor i32 %73, -1
  %114 = add i32 %113, %71
  %115 = add i32 %114, %112
  store i32 %115, i32* %38, align 8
  %116 = icmp sgt i32 %71, %1
  br i1 %116, label %181, label %117

117:                                              ; preds = %107
  %118 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %30, align 8
  %119 = icmp eq %"class.std::__1::__tree_node"* %118, null
  br i1 %119, label %148, label %120

120:                                              ; preds = %117, %144
  %121 = phi %"class.std::__1::__tree_node"* [ %147, %144 ], [ %118, %117 ]
  %122 = phi %"class.std::__1::__tree_node_base"** [ %146, %144 ], [ %37, %117 ]
  %123 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %121, i64 0, i32 1, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp sgt i32 %124, %1
  br i1 %125, label %126, label %132

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %121, i64 0, i32 0, i32 0, i32 0
  %128 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %127, align 8
  %129 = icmp eq %"class.std::__1::__tree_node_base"* %128, null
  br i1 %129, label %130, label %144

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %121, i64 0, i32 0, i32 0
  br label %148

132:                                              ; preds = %120
  %133 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %121, i64 0, i32 1, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = icmp slt i32 %134, %71
  br i1 %135, label %136, label %142

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %121, i64 0, i32 0, i32 1
  %138 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %137, align 8
  %139 = icmp eq %"class.std::__1::__tree_node_base"* %138, null
  br i1 %139, label %140, label %144

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %121, i64 0, i32 0, i32 0
  br label %148

142:                                              ; preds = %132
  %143 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %121, i64 0, i32 0, i32 0
  br label %148

144:                                              ; preds = %136, %126
  %145 = phi %"class.std::__1::__tree_node_base"* [ %128, %126 ], [ %138, %136 ]
  %146 = phi %"class.std::__1::__tree_node_base"** [ %127, %126 ], [ %137, %136 ]
  %147 = bitcast %"class.std::__1::__tree_node_base"* %145 to %"class.std::__1::__tree_node"*
  br label %120

148:                                              ; preds = %117, %142, %140, %130
  %149 = phi %"class.std::__1::__tree_end_node"* [ %131, %130 ], [ %141, %140 ], [ %143, %142 ], [ %29, %117 ]
  %150 = phi %"class.std::__1::__tree_node_base"** [ %127, %130 ], [ %137, %140 ], [ %122, %142 ], [ %39, %117 ]
  %151 = bitcast %"class.std::__1::__tree_node_base"** %150 to %"class.std::__1::__tree_node"**
  %152 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %151, align 8
  %153 = icmp eq %"class.std::__1::__tree_node"* %152, null
  br i1 %153, label %154, label %177

154:                                              ; preds = %148
  %155 = tail call i8* @_Znwm(i64 40) #19, !noalias !42
  %156 = getelementptr inbounds i8, i8* %155, i64 28
  %157 = bitcast i8* %156 to i64*
  %158 = and i64 %70, 4294967295
  %159 = or i64 %158, %41
  store i64 %159, i64* %157, align 4, !noalias !42
  %160 = bitcast i8* %155 to %"class.std::__1::__tree_node_base"*
  %161 = getelementptr inbounds i8, i8* %155, i64 16
  %162 = bitcast i8* %161 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %155, i8 0, i64 16, i1 false) #18
  store %"class.std::__1::__tree_end_node"* %149, %"class.std::__1::__tree_end_node"** %162, align 8
  %163 = bitcast %"class.std::__1::__tree_node_base"** %150 to i8**
  store i8* %155, i8** %163, align 8
  %164 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %34, align 8
  %165 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %164, i64 0, i32 0
  %166 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %165, align 8
  %167 = icmp eq %"class.std::__1::__tree_node_base"* %166, null
  br i1 %167, label %171, label %168

168:                                              ; preds = %154
  %169 = ptrtoint %"class.std::__1::__tree_node_base"* %166 to i64
  store i64 %169, i64* %35, align 8
  %170 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %150, align 8
  br label %171

171:                                              ; preds = %168, %154
  %172 = phi %"class.std::__1::__tree_node_base"* [ %160, %154 ], [ %170, %168 ]
  %173 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %173, %"class.std::__1::__tree_node_base"* %172) #18
  %174 = load i64, i64* %36, align 8
  %175 = add i64 %174, 1
  store i64 %175, i64* %36, align 8
  %176 = load i32, i32* %38, align 8
  br label %177

177:                                              ; preds = %148, %171
  %178 = phi i32 [ %115, %148 ], [ %176, %171 ]
  %179 = sub i32 %42, %71
  %180 = add i32 %179, %178
  store i32 %180, i32* %38, align 8
  br label %181

181:                                              ; preds = %107, %177
  %182 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %30, align 8
  %183 = icmp eq %"class.std::__1::__tree_node"* %182, null
  br i1 %183, label %184, label %43

184:                                              ; preds = %181, %60, %62, %27, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re216CharClassBuilder6NegateEv(%"class.re2::CharClassBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.60", align 8
  %3 = bitcast %"class.std::__1::vector.60"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #18
  %4 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %2, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 24, i1 false) #18
  %6 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 1
  %10 = bitcast %"struct.re2::RuneRange"** %5 to i64*
  %11 = bitcast %"class.std::__1::vector.60"* %2 to i64*
  %12 = icmp eq i64 %9, 0
  br i1 %12, label %26, label %13

13:                                               ; preds = %1
  %14 = icmp ugt i64 %9, 2305843009213693951
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  tail call void @abort() #21
  unreachable

16:                                               ; preds = %13
  %17 = bitcast %"struct.re2::RuneRange"** %4 to i64*
  %18 = shl i64 %9, 3
  %19 = tail call i8* @_Znwm(i64 %18) #19
  %20 = bitcast i8* %19 to %"struct.re2::RuneRange"*
  %21 = ptrtoint i8* %19 to i64
  %22 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %20, i64 %9
  %23 = ptrtoint %"struct.re2::RuneRange"* %22 to i64
  %24 = ptrtoint i8* %19 to i64
  store i64 %24, i64* %11, align 8
  store i64 %21, i64* %17, align 8
  store i64 %23, i64* %10, align 8
  %25 = bitcast i8* %19 to %"struct.re2::RuneRange"*
  br label %26

26:                                               ; preds = %16, %1
  %27 = phi i8* [ null, %1 ], [ %19, %16 ]
  %28 = phi %"struct.re2::RuneRange"* [ null, %1 ], [ %25, %16 ]
  %29 = phi i64 [ 0, %1 ], [ %24, %16 ]
  %30 = phi %"struct.re2::RuneRange"* [ null, %1 ], [ %22, %16 ]
  %31 = phi %"struct.re2::RuneRange"* [ null, %1 ], [ %20, %16 ]
  %32 = phi i64 [ 0, %1 ], [ %21, %16 ]
  %33 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 3, i32 0, i32 0
  %34 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %33, align 8
  %35 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %36 = icmp eq %"class.std::__1::__tree_end_node"* %34, %35
  br i1 %36, label %37, label %92

37:                                               ; preds = %26
  %38 = icmp ult %"struct.re2::RuneRange"* %31, %30
  %39 = ptrtoint %"struct.re2::RuneRange"* %30 to i64
  br i1 %38, label %40, label %45

40:                                               ; preds = %37
  %41 = bitcast %"struct.re2::RuneRange"* %31 to i64*
  store i64 4785070309113856, i64* %41, align 4
  %42 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %31, i64 1
  %43 = ptrtoint %"struct.re2::RuneRange"* %42 to i64
  %44 = bitcast %"struct.re2::RuneRange"** %4 to i64*
  store i64 %43, i64* %44, align 8
  br label %316

45:                                               ; preds = %37
  %46 = ptrtoint %"struct.re2::RuneRange"* %31 to i64
  %47 = bitcast %"struct.re2::RuneRange"** %4 to i64*
  %48 = sub i64 %46, %29
  %49 = ashr exact i64 %48, 3
  %50 = add nsw i64 %49, 1
  %51 = icmp ugt i64 %50, 2305843009213693951
  br i1 %51, label %52, label %54

52:                                               ; preds = %45
  %53 = bitcast %"class.std::__1::vector.60"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %53) #21
  unreachable

54:                                               ; preds = %45
  %55 = sub i64 %39, %29
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %54
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %50
  %61 = select i1 %60, i64 %50, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #21
  unreachable

66:                                               ; preds = %63, %54
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %54 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #19
  %70 = bitcast i8* %69 to %"struct.re2::RuneRange"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"struct.re2::RuneRange"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %73, i64 %49
  %75 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %73, i64 %72
  %76 = ptrtoint %"struct.re2::RuneRange"* %75 to i64
  %77 = bitcast %"struct.re2::RuneRange"* %74 to i64*
  store i64 4785070309113856, i64* %77, align 4
  %78 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %74, i64 1
  %79 = ptrtoint %"struct.re2::RuneRange"* %78 to i64
  %80 = ptrtoint %"struct.re2::RuneRange"* %28 to i64
  %81 = sub i64 %32, %80
  %82 = ashr exact i64 %81, 3
  %83 = sub nsw i64 0, %82
  %84 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %74, i64 %83
  %85 = ptrtoint %"struct.re2::RuneRange"* %84 to i64
  %86 = icmp sgt i64 %81, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %71
  %88 = bitcast %"struct.re2::RuneRange"* %84 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %88, i8* align 4 %27, i64 %81, i1 false) #18
  br label %89

89:                                               ; preds = %87, %71
  store i64 %85, i64* %11, align 8
  store i64 %79, i64* %47, align 8
  store i64 %76, i64* %10, align 8
  %90 = icmp eq %"struct.re2::RuneRange"* %28, null
  br i1 %90, label %316, label %91

91:                                               ; preds = %89
  tail call void @_ZdlPv(i8* %27) #19
  br label %316

92:                                               ; preds = %26
  %93 = bitcast %"class.std::__1::__tree_end_node"* %34 to %"class.std::__1::__tree_node"*
  %94 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %93, i64 0, i32 1, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %129

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 4
  %99 = bitcast %"class.std::__1::__tree_end_node"* %98 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = add nsw i32 %100, 1
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 1, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %105, label %113

105:                                              ; preds = %97
  %106 = bitcast %"class.std::__1::__tree_end_node"* %34 to %"class.std::__1::__tree_node_base"*
  %107 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 2
  %108 = bitcast %"class.std::__1::__tree_end_node"* %107 to %"class.std::__1::__tree_end_node"**
  %109 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %108, align 8
  %110 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %109, i64 0, i32 0
  %111 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %112 = icmp eq %"class.std::__1::__tree_node_base"* %111, %106
  br i1 %112, label %129, label %120

113:                                              ; preds = %97, %113
  %114 = phi %"class.std::__1::__tree_node_base"* [ %116, %113 ], [ %103, %97 ]
  %115 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %114, i64 0, i32 0, i32 0
  %116 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %115, align 8
  %117 = icmp eq %"class.std::__1::__tree_node_base"* %116, null
  br i1 %117, label %118, label %113

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %114, i64 0, i32 0
  br label %129

120:                                              ; preds = %105, %120
  %121 = phi %"class.std::__1::__tree_end_node"** [ %124, %120 ], [ %108, %105 ]
  %122 = bitcast %"class.std::__1::__tree_end_node"** %121 to %"class.std::__1::__tree_node_base"**
  %123 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %122, align 8
  %124 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %123, i64 0, i32 2
  %125 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %125, i64 0, i32 0
  %127 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %126, align 8
  %128 = icmp eq %"class.std::__1::__tree_node_base"* %127, %123
  br i1 %128, label %129, label %120

129:                                              ; preds = %120, %118, %105, %92
  %130 = phi %"class.std::__1::__tree_end_node"* [ %34, %92 ], [ %119, %118 ], [ %109, %105 ], [ %125, %120 ]
  %131 = phi i32 [ 0, %92 ], [ %101, %118 ], [ %101, %105 ], [ %101, %120 ]
  %132 = icmp eq %"class.std::__1::__tree_end_node"* %130, %35
  br i1 %132, label %247, label %133

133:                                              ; preds = %129
  %134 = bitcast %"struct.re2::RuneRange"** %4 to i64*
  br label %135

135:                                              ; preds = %245, %133
  %136 = phi i64 [ %29, %133 ], [ %208, %245 ]
  %137 = phi i64 [ %32, %133 ], [ %210, %245 ]
  %138 = phi %"struct.re2::RuneRange"* [ %30, %133 ], [ %246, %245 ]
  %139 = phi %"struct.re2::RuneRange"* [ %31, %133 ], [ %209, %245 ]
  %140 = phi i32 [ %131, %133 ], [ %214, %245 ]
  %141 = phi %"class.std::__1::__tree_end_node"* [ %130, %133 ], [ %243, %245 ]
  %142 = bitcast %"class.std::__1::__tree_end_node"* %141 to %"class.std::__1::__tree_node"*
  %143 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %142, i64 0, i32 1, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = add nsw i32 %144, -1
  %146 = icmp ult %"struct.re2::RuneRange"* %139, %138
  %147 = ptrtoint %"struct.re2::RuneRange"* %138 to i64
  br i1 %146, label %148, label %156

148:                                              ; preds = %135
  %149 = bitcast %"struct.re2::RuneRange"* %139 to i64*
  %150 = zext i32 %145 to i64
  %151 = shl nuw i64 %150, 32
  %152 = zext i32 %140 to i64
  %153 = or i64 %151, %152
  store i64 %153, i64* %149, align 4
  %154 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %139, i64 1
  %155 = ptrtoint %"struct.re2::RuneRange"* %154 to i64
  store i64 %155, i64* %134, align 8
  br label %207

156:                                              ; preds = %135
  %157 = ptrtoint %"struct.re2::RuneRange"* %139 to i64
  %158 = sub i64 %157, %136
  %159 = ashr exact i64 %158, 3
  %160 = add nsw i64 %159, 1
  %161 = icmp ugt i64 %160, 2305843009213693951
  br i1 %161, label %162, label %164

162:                                              ; preds = %156
  %163 = bitcast %"class.std::__1::vector.60"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %163) #21
  unreachable

164:                                              ; preds = %156
  %165 = sub i64 %147, %136
  %166 = ashr exact i64 %165, 3
  %167 = icmp ult i64 %166, 1152921504606846975
  br i1 %167, label %168, label %176

168:                                              ; preds = %164
  %169 = ashr exact i64 %165, 2
  %170 = icmp ult i64 %169, %160
  %171 = select i1 %170, i64 %160, i64 %169
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %181, label %173

173:                                              ; preds = %168
  %174 = icmp ugt i64 %171, 2305843009213693951
  br i1 %174, label %175, label %176

175:                                              ; preds = %173
  tail call void @abort() #21
  unreachable

176:                                              ; preds = %173, %164
  %177 = phi i64 [ %171, %173 ], [ 2305843009213693951, %164 ]
  %178 = shl i64 %177, 3
  %179 = tail call i8* @_Znwm(i64 %178) #19
  %180 = bitcast i8* %179 to %"struct.re2::RuneRange"*
  br label %181

181:                                              ; preds = %176, %168
  %182 = phi i64 [ %177, %176 ], [ 0, %168 ]
  %183 = phi %"struct.re2::RuneRange"* [ %180, %176 ], [ null, %168 ]
  %184 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %183, i64 %159
  %185 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %183, i64 %182
  %186 = ptrtoint %"struct.re2::RuneRange"* %185 to i64
  %187 = bitcast %"struct.re2::RuneRange"* %184 to i64*
  %188 = zext i32 %145 to i64
  %189 = shl nuw i64 %188, 32
  %190 = zext i32 %140 to i64
  %191 = or i64 %189, %190
  store i64 %191, i64* %187, align 4
  %192 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %184, i64 1
  %193 = ptrtoint %"struct.re2::RuneRange"* %192 to i64
  %194 = sub i64 %137, %136
  %195 = ashr exact i64 %194, 3
  %196 = sub nsw i64 0, %195
  %197 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %184, i64 %196
  %198 = ptrtoint %"struct.re2::RuneRange"* %197 to i64
  %199 = icmp sgt i64 %194, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %181
  %201 = bitcast %"struct.re2::RuneRange"* %197 to i8*
  %202 = inttoptr i64 %136 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %201, i8* align 4 %202, i64 %194, i1 false) #18
  br label %203

203:                                              ; preds = %200, %181
  store i64 %198, i64* %11, align 8
  store i64 %193, i64* %134, align 8
  store i64 %186, i64* %10, align 8
  %204 = icmp eq i64 %136, 0
  br i1 %204, label %207, label %205

205:                                              ; preds = %203
  %206 = inttoptr i64 %136 to i8*
  tail call void @_ZdlPv(i8* %206) #19
  br label %207

207:                                              ; preds = %148, %203, %205
  %208 = phi i64 [ %136, %148 ], [ %198, %203 ], [ %198, %205 ]
  %209 = phi %"struct.re2::RuneRange"* [ %154, %148 ], [ %192, %203 ], [ %192, %205 ]
  %210 = phi i64 [ %155, %148 ], [ %193, %203 ], [ %193, %205 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %141, i64 4
  %212 = bitcast %"class.std::__1::__tree_end_node"* %211 to i32*
  %213 = load i32, i32* %212, align 4
  %214 = add nsw i32 %213, 1
  %215 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %141, i64 1, i32 0
  %216 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %215, align 8
  %217 = icmp eq %"class.std::__1::__tree_node_base"* %216, null
  br i1 %217, label %218, label %226

218:                                              ; preds = %207
  %219 = bitcast %"class.std::__1::__tree_end_node"* %141 to %"class.std::__1::__tree_node_base"*
  %220 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %141, i64 2
  %221 = bitcast %"class.std::__1::__tree_end_node"* %220 to %"class.std::__1::__tree_end_node"**
  %222 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %222, i64 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, %219
  br i1 %225, label %242, label %233

226:                                              ; preds = %207, %226
  %227 = phi %"class.std::__1::__tree_node_base"* [ %229, %226 ], [ %216, %207 ]
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %227, i64 0, i32 0, i32 0
  %229 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %228, align 8
  %230 = icmp eq %"class.std::__1::__tree_node_base"* %229, null
  br i1 %230, label %231, label %226

231:                                              ; preds = %226
  %232 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %227, i64 0, i32 0
  br label %242

233:                                              ; preds = %218, %233
  %234 = phi %"class.std::__1::__tree_end_node"** [ %237, %233 ], [ %221, %218 ]
  %235 = bitcast %"class.std::__1::__tree_end_node"** %234 to %"class.std::__1::__tree_node_base"**
  %236 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %235, align 8
  %237 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %236, i64 0, i32 2
  %238 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %237, align 8
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %238, i64 0, i32 0
  %240 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %239, align 8
  %241 = icmp eq %"class.std::__1::__tree_node_base"* %240, %236
  br i1 %241, label %242, label %233

242:                                              ; preds = %233, %218, %231
  %243 = phi %"class.std::__1::__tree_end_node"* [ %232, %231 ], [ %222, %218 ], [ %238, %233 ]
  %244 = icmp eq %"class.std::__1::__tree_end_node"* %243, %35
  br i1 %244, label %247, label %245

245:                                              ; preds = %242
  %246 = load %"struct.re2::RuneRange"*, %"struct.re2::RuneRange"** %5, align 8
  br label %135

247:                                              ; preds = %242, %129
  %248 = phi i64 [ %29, %129 ], [ %208, %242 ]
  %249 = phi i64 [ %32, %129 ], [ %210, %242 ]
  %250 = phi %"struct.re2::RuneRange"* [ %31, %129 ], [ %209, %242 ]
  %251 = phi i32 [ %131, %129 ], [ %214, %242 ]
  %252 = icmp slt i32 %251, 1114112
  br i1 %252, label %255, label %253

253:                                              ; preds = %247
  %254 = bitcast %"struct.re2::RuneRange"** %4 to i64*
  br label %316

255:                                              ; preds = %247
  %256 = load %"struct.re2::RuneRange"*, %"struct.re2::RuneRange"** %5, align 8
  %257 = icmp ult %"struct.re2::RuneRange"* %250, %256
  %258 = ptrtoint %"struct.re2::RuneRange"* %256 to i64
  br i1 %257, label %259, label %266

259:                                              ; preds = %255
  %260 = bitcast %"struct.re2::RuneRange"* %250 to i64*
  %261 = zext i32 %251 to i64
  %262 = or i64 %261, 4785070309113856
  store i64 %262, i64* %260, align 4
  %263 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %250, i64 1
  %264 = ptrtoint %"struct.re2::RuneRange"* %263 to i64
  %265 = bitcast %"struct.re2::RuneRange"** %4 to i64*
  store i64 %264, i64* %265, align 8
  br label %316

266:                                              ; preds = %255
  %267 = ptrtoint %"struct.re2::RuneRange"* %250 to i64
  %268 = bitcast %"struct.re2::RuneRange"** %4 to i64*
  %269 = sub i64 %267, %248
  %270 = ashr exact i64 %269, 3
  %271 = add nsw i64 %270, 1
  %272 = icmp ugt i64 %271, 2305843009213693951
  br i1 %272, label %273, label %275

273:                                              ; preds = %266
  %274 = bitcast %"class.std::__1::vector.60"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %274) #21
  unreachable

275:                                              ; preds = %266
  %276 = sub i64 %258, %248
  %277 = ashr exact i64 %276, 3
  %278 = icmp ult i64 %277, 1152921504606846975
  br i1 %278, label %279, label %287

279:                                              ; preds = %275
  %280 = ashr exact i64 %276, 2
  %281 = icmp ult i64 %280, %271
  %282 = select i1 %281, i64 %271, i64 %280
  %283 = icmp eq i64 %282, 0
  br i1 %283, label %292, label %284

284:                                              ; preds = %279
  %285 = icmp ugt i64 %282, 2305843009213693951
  br i1 %285, label %286, label %287

286:                                              ; preds = %284
  tail call void @abort() #21
  unreachable

287:                                              ; preds = %284, %275
  %288 = phi i64 [ %282, %284 ], [ 2305843009213693951, %275 ]
  %289 = shl i64 %288, 3
  %290 = tail call i8* @_Znwm(i64 %289) #19
  %291 = bitcast i8* %290 to %"struct.re2::RuneRange"*
  br label %292

292:                                              ; preds = %287, %279
  %293 = phi i64 [ %288, %287 ], [ 0, %279 ]
  %294 = phi %"struct.re2::RuneRange"* [ %291, %287 ], [ null, %279 ]
  %295 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %294, i64 %270
  %296 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %294, i64 %293
  %297 = ptrtoint %"struct.re2::RuneRange"* %296 to i64
  %298 = bitcast %"struct.re2::RuneRange"* %295 to i64*
  %299 = zext i32 %251 to i64
  %300 = or i64 %299, 4785070309113856
  store i64 %300, i64* %298, align 4
  %301 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %295, i64 1
  %302 = ptrtoint %"struct.re2::RuneRange"* %301 to i64
  %303 = sub i64 %249, %248
  %304 = ashr exact i64 %303, 3
  %305 = sub nsw i64 0, %304
  %306 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %295, i64 %305
  %307 = ptrtoint %"struct.re2::RuneRange"* %306 to i64
  %308 = icmp sgt i64 %303, 0
  br i1 %308, label %309, label %312

309:                                              ; preds = %292
  %310 = bitcast %"struct.re2::RuneRange"* %306 to i8*
  %311 = inttoptr i64 %248 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %310, i8* align 4 %311, i64 %303, i1 false) #18
  br label %312

312:                                              ; preds = %309, %292
  store i64 %307, i64* %11, align 8
  store i64 %302, i64* %268, align 8
  store i64 %297, i64* %10, align 8
  %313 = icmp eq i64 %248, 0
  br i1 %313, label %316, label %314

314:                                              ; preds = %312
  %315 = inttoptr i64 %248 to i8*
  tail call void @_ZdlPv(i8* %315) #19
  br label %316

316:                                              ; preds = %253, %314, %312, %259, %91, %89, %40
  %317 = phi i64* [ %254, %253 ], [ %268, %314 ], [ %268, %312 ], [ %265, %259 ], [ %47, %91 ], [ %47, %89 ], [ %44, %40 ]
  %318 = phi i64 [ %248, %253 ], [ %307, %314 ], [ %307, %312 ], [ %248, %259 ], [ %85, %91 ], [ %85, %89 ], [ %29, %40 ]
  %319 = phi i64 [ %249, %253 ], [ %302, %314 ], [ %302, %312 ], [ %264, %259 ], [ %79, %91 ], [ %79, %89 ], [ %43, %40 ]
  %320 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0
  %321 = bitcast %"class.std::__1::__tree_end_node"* %35 to %"class.std::__1::__tree_node"**
  %322 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %321, align 8
  tail call void @_ZNSt3__16__treeIN3re29RuneRangeENS1_13RuneRangeLessENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %320, %"class.std::__1::__tree_node"* %322) #18
  store i64 0, i64* %7, align 8
  %323 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %35, %"class.std::__1::__tree_end_node"** %323, align 8
  %324 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %324, align 8
  %325 = icmp eq i64 %319, %318
  %326 = inttoptr i64 %318 to %"struct.re2::RuneRange"*
  br i1 %325, label %330, label %327

327:                                              ; preds = %316
  %328 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %329 = bitcast %"class.std::__1::set"* %6 to i64*
  br label %348

330:                                              ; preds = %423, %316
  %331 = phi %"struct.re2::RuneRange"* [ %326, %316 ], [ %425, %423 ]
  %332 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 0
  %333 = load i32, i32* %332, align 8
  %334 = and i32 %333, 67108863
  %335 = xor i32 %334, 67108863
  store i32 %335, i32* %332, align 8
  %336 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 1
  %337 = load i32, i32* %336, align 4
  %338 = and i32 %337, 67108863
  %339 = xor i32 %338, 67108863
  store i32 %339, i32* %336, align 4
  %340 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 2
  %341 = load i32, i32* %340, align 8
  %342 = sub nsw i32 1114112, %341
  store i32 %342, i32* %340, align 8
  %343 = icmp eq %"struct.re2::RuneRange"* %331, null
  br i1 %343, label %347, label %344

344:                                              ; preds = %330
  %345 = ptrtoint %"struct.re2::RuneRange"* %331 to i64
  store i64 %345, i64* %317, align 8
  %346 = bitcast %"struct.re2::RuneRange"* %331 to i8*
  tail call void @_ZdlPv(i8* %346) #19
  br label %347

347:                                              ; preds = %330, %344
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #18
  ret void

348:                                              ; preds = %432, %327
  %349 = phi %"struct.re2::RuneRange"* [ %326, %327 ], [ %425, %432 ]
  %350 = phi i64 [ %318, %327 ], [ %426, %432 ]
  %351 = phi i64 [ %319, %327 ], [ %427, %432 ]
  %352 = phi %"class.std::__1::__tree_node"* [ null, %327 ], [ %433, %432 ]
  %353 = phi %"struct.re2::RuneRange"* [ %326, %327 ], [ %424, %432 ]
  %354 = phi i64 [ 0, %327 ], [ %428, %432 ]
  %355 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %353, i64 %354
  %356 = icmp eq %"class.std::__1::__tree_node"* %352, null
  br i1 %356, label %390, label %357

357:                                              ; preds = %348
  %358 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %353, i64 %354, i32 1
  %359 = load i32, i32* %358, align 4
  %360 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %355, i64 0, i32 0
  %361 = load i32, i32* %360, align 4
  br label %362

362:                                              ; preds = %386, %357
  %363 = phi %"class.std::__1::__tree_node"* [ %389, %386 ], [ %352, %357 ]
  %364 = phi %"class.std::__1::__tree_node_base"** [ %388, %386 ], [ %328, %357 ]
  %365 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %363, i64 0, i32 1, i32 0
  %366 = load i32, i32* %365, align 4
  %367 = icmp slt i32 %359, %366
  br i1 %367, label %368, label %374

368:                                              ; preds = %362
  %369 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %363, i64 0, i32 0, i32 0, i32 0
  %370 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %369, align 8
  %371 = icmp eq %"class.std::__1::__tree_node_base"* %370, null
  br i1 %371, label %372, label %386

372:                                              ; preds = %368
  %373 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %363, i64 0, i32 0, i32 0
  br label %390

374:                                              ; preds = %362
  %375 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %363, i64 0, i32 1, i32 1
  %376 = load i32, i32* %375, align 4
  %377 = icmp slt i32 %376, %361
  br i1 %377, label %378, label %384

378:                                              ; preds = %374
  %379 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %363, i64 0, i32 0, i32 1
  %380 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %379, align 8
  %381 = icmp eq %"class.std::__1::__tree_node_base"* %380, null
  br i1 %381, label %382, label %386

382:                                              ; preds = %378
  %383 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %363, i64 0, i32 0, i32 0
  br label %390

384:                                              ; preds = %374
  %385 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %363, i64 0, i32 0, i32 0
  br label %390

386:                                              ; preds = %378, %368
  %387 = phi %"class.std::__1::__tree_node_base"* [ %370, %368 ], [ %380, %378 ]
  %388 = phi %"class.std::__1::__tree_node_base"** [ %369, %368 ], [ %379, %378 ]
  %389 = bitcast %"class.std::__1::__tree_node_base"* %387 to %"class.std::__1::__tree_node"*
  br label %362

390:                                              ; preds = %348, %384, %382, %372
  %391 = phi %"class.std::__1::__tree_end_node"* [ %373, %372 ], [ %383, %382 ], [ %385, %384 ], [ %35, %348 ]
  %392 = phi %"class.std::__1::__tree_node_base"** [ %369, %372 ], [ %379, %382 ], [ %364, %384 ], [ %324, %348 ]
  %393 = bitcast %"class.std::__1::__tree_node_base"** %392 to %"class.std::__1::__tree_node"**
  %394 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %393, align 8
  %395 = icmp eq %"class.std::__1::__tree_node"* %394, null
  br i1 %395, label %398, label %396

396:                                              ; preds = %390
  %397 = inttoptr i64 %350 to %"struct.re2::RuneRange"*
  br label %423

398:                                              ; preds = %390
  %399 = tail call i8* @_Znwm(i64 40) #19, !noalias !45
  %400 = getelementptr inbounds i8, i8* %399, i64 28
  %401 = bitcast %"struct.re2::RuneRange"* %355 to i64*
  %402 = bitcast i8* %400 to i64*
  %403 = load i64, i64* %401, align 4, !noalias !45
  store i64 %403, i64* %402, align 4, !noalias !45
  %404 = bitcast i8* %399 to %"class.std::__1::__tree_node_base"*
  %405 = getelementptr inbounds i8, i8* %399, i64 16
  %406 = bitcast i8* %405 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %399, i8 0, i64 16, i1 false) #18
  store %"class.std::__1::__tree_end_node"* %391, %"class.std::__1::__tree_end_node"** %406, align 8
  %407 = bitcast %"class.std::__1::__tree_node_base"** %392 to i8**
  store i8* %399, i8** %407, align 8
  %408 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %323, align 8
  %409 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %408, i64 0, i32 0
  %410 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %409, align 8
  %411 = icmp eq %"class.std::__1::__tree_node_base"* %410, null
  br i1 %411, label %415, label %412

412:                                              ; preds = %398
  %413 = ptrtoint %"class.std::__1::__tree_node_base"* %410 to i64
  store i64 %413, i64* %329, align 8
  %414 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %392, align 8
  br label %415

415:                                              ; preds = %412, %398
  %416 = phi %"class.std::__1::__tree_node_base"* [ %404, %398 ], [ %414, %412 ]
  %417 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %328, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %417, %"class.std::__1::__tree_node_base"* %416) #18
  %418 = load i64, i64* %7, align 8
  %419 = add i64 %418, 1
  store i64 %419, i64* %7, align 8
  %420 = load i64, i64* %317, align 8
  %421 = load i64, i64* %11, align 8
  %422 = inttoptr i64 %421 to %"struct.re2::RuneRange"*
  br label %423

423:                                              ; preds = %396, %415
  %424 = phi %"struct.re2::RuneRange"* [ %397, %396 ], [ %422, %415 ]
  %425 = phi %"struct.re2::RuneRange"* [ %349, %396 ], [ %422, %415 ]
  %426 = phi i64 [ %350, %396 ], [ %421, %415 ]
  %427 = phi i64 [ %351, %396 ], [ %420, %415 ]
  %428 = add nuw i64 %354, 1
  %429 = sub i64 %427, %426
  %430 = ashr exact i64 %429, 3
  %431 = icmp ult i64 %428, %430
  br i1 %431, label %432, label %330

432:                                              ; preds = %423
  %433 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %321, align 8
  br label %348
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden nonnull %"class.re2::CharClass"* @_ZN3re29CharClass3NewEm(i64) local_unnamed_addr #8 align 2 {
  %2 = shl i64 %0, 3
  %3 = add i64 %2, 24
  %4 = tail call i8* @_Znam(i64 %3) #19
  %5 = bitcast i8* %4 to %"class.re2::CharClass"*
  %6 = getelementptr inbounds i8, i8* %4, i64 24
  %7 = getelementptr inbounds i8, i8* %4, i64 8
  %8 = bitcast i8* %7 to i8**
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 16
  %10 = bitcast i8* %9 to i32*
  store i32 0, i32* %10, align 8
  store i8 0, i8* %4, align 8
  %11 = getelementptr inbounds i8, i8* %4, i64 4
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  ret %"class.re2::CharClass"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.re2::CharClass"* @_ZN3re29CharClass6NegateEv(%"class.re2::CharClass"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.re2::CharClass", %"class.re2::CharClass"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 1
  %5 = sext i32 %4 to i64
  %6 = shl nsw i64 %5, 3
  %7 = add nsw i64 %6, 24
  %8 = tail call i8* @_Znam(i64 %7) #19
  %9 = bitcast i8* %8 to %"class.re2::CharClass"*
  %10 = getelementptr inbounds i8, i8* %8, i64 24
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to i8**
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds i8, i8* %8, i64 16
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 4
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds %"class.re2::CharClass", %"class.re2::CharClass"* %0, i64 0, i32 0
  %18 = load i8, i8* %17, align 8, !range !2
  store i8 %18, i8* %8, align 8
  %19 = getelementptr inbounds %"class.re2::CharClass", %"class.re2::CharClass"* %0, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = sub nsw i32 1114112, %20
  store i32 %21, i32* %16, align 4
  %22 = getelementptr inbounds %"class.re2::CharClass", %"class.re2::CharClass"* %0, i64 0, i32 3
  %23 = icmp eq i32 %3, 0
  br i1 %23, label %62, label %24

24:                                               ; preds = %1
  %25 = load %"struct.re2::RuneRange"*, %"struct.re2::RuneRange"** %22, align 8
  %26 = bitcast i8* %11 to %"struct.re2::RuneRange"**
  br label %29

27:                                               ; preds = %51
  %28 = icmp slt i32 %57, 1114112
  br i1 %28, label %62, label %73

29:                                               ; preds = %24, %51
  %30 = phi i32 [ %3, %24 ], [ %52, %51 ]
  %31 = phi %"struct.re2::RuneRange"* [ %25, %24 ], [ %53, %51 ]
  %32 = phi %"struct.re2::RuneRange"* [ %25, %24 ], [ %58, %51 ]
  %33 = phi i32 [ 0, %24 ], [ %57, %51 ]
  %34 = phi i32 [ 0, %24 ], [ %54, %51 ]
  %35 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %32, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, %33
  br i1 %37, label %51, label %38

38:                                               ; preds = %29
  %39 = add nsw i32 %36, -1
  %40 = load %"struct.re2::RuneRange"*, %"struct.re2::RuneRange"** %26, align 8
  %41 = add nsw i32 %34, 1
  %42 = sext i32 %34 to i64
  %43 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %40, i64 %42
  %44 = bitcast %"struct.re2::RuneRange"* %43 to i64*
  %45 = zext i32 %39 to i64
  %46 = shl nuw i64 %45, 32
  %47 = zext i32 %33 to i64
  %48 = or i64 %46, %47
  store i64 %48, i64* %44, align 4
  %49 = load %"struct.re2::RuneRange"*, %"struct.re2::RuneRange"** %22, align 8
  %50 = load i32, i32* %2, align 8
  br label %51

51:                                               ; preds = %29, %38
  %52 = phi i32 [ %50, %38 ], [ %30, %29 ]
  %53 = phi %"struct.re2::RuneRange"* [ %49, %38 ], [ %31, %29 ]
  %54 = phi i32 [ %41, %38 ], [ %34, %29 ]
  %55 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %32, i64 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = add nsw i32 %56, 1
  %58 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %32, i64 1
  %59 = sext i32 %52 to i64
  %60 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %53, i64 %59
  %61 = icmp eq %"struct.re2::RuneRange"* %58, %60
  br i1 %61, label %27, label %29

62:                                               ; preds = %1, %27
  %63 = phi i32 [ %57, %27 ], [ 0, %1 ]
  %64 = phi i32 [ %54, %27 ], [ 0, %1 ]
  %65 = bitcast i8* %11 to %"struct.re2::RuneRange"**
  %66 = load %"struct.re2::RuneRange"*, %"struct.re2::RuneRange"** %65, align 8
  %67 = add nsw i32 %64, 1
  %68 = sext i32 %64 to i64
  %69 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %66, i64 %68
  %70 = bitcast %"struct.re2::RuneRange"* %69 to i64*
  %71 = zext i32 %63 to i64
  %72 = or i64 %71, 4785070309113856
  store i64 %72, i64* %70, align 4
  br label %73

73:                                               ; preds = %62, %27
  %74 = phi i32 [ %67, %62 ], [ %54, %27 ]
  store i32 %74, i32* %14, align 8
  ret %"class.re2::CharClass"* %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3re29CharClass8ContainsEi(%"class.re2::CharClass"* nocapture readonly, i32) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.re2::CharClass", %"class.re2::CharClass"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %30

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.re2::CharClass", %"class.re2::CharClass"* %0, i64 0, i32 3
  %8 = load %"struct.re2::RuneRange"*, %"struct.re2::RuneRange"** %7, align 8
  br label %9

9:                                                ; preds = %6, %26
  %10 = phi i32 [ %28, %26 ], [ %4, %6 ]
  %11 = phi %"struct.re2::RuneRange"* [ %27, %26 ], [ %8, %6 ]
  %12 = lshr i32 %10, 1
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %11, i64 %13, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %15, %1
  br i1 %16, label %17, label %22

17:                                               ; preds = %9
  %18 = add nuw nsw i32 %12, 1
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %11, i64 %19
  %21 = sub nsw i32 %10, %18
  br label %26

22:                                               ; preds = %9
  %23 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %11, i64 %13, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp sgt i32 %24, %1
  br i1 %25, label %26, label %30

26:                                               ; preds = %17, %22
  %27 = phi %"struct.re2::RuneRange"* [ %20, %17 ], [ %11, %22 ]
  %28 = phi i32 [ %21, %17 ], [ %12, %22 ]
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %9, label %30

30:                                               ; preds = %26, %22, %2
  %31 = phi i1 [ false, %2 ], [ true, %22 ], [ false, %26 ]
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.re2::CharClass"* @_ZN3re216CharClassBuilder12GetCharClassEv(%"class.re2::CharClassBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = shl i64 %3, 3
  %5 = add i64 %4, 24
  %6 = tail call i8* @_Znam(i64 %5) #19
  %7 = bitcast i8* %6 to %"class.re2::CharClass"*
  %8 = getelementptr inbounds i8, i8* %6, i64 24
  %9 = getelementptr inbounds i8, i8* %6, i64 8
  %10 = bitcast i8* %9 to i8**
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 16
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 8
  store i8 0, i8* %6, align 8
  %13 = getelementptr inbounds i8, i8* %6, i64 4
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %18 = icmp eq %"class.std::__1::__tree_end_node"* %16, %17
  br i1 %18, label %24, label %19

19:                                               ; preds = %1
  %20 = bitcast i8* %8 to %"struct.re2::RuneRange"*
  %21 = bitcast i8* %9 to %"struct.re2::RuneRange"**
  br label %36

22:                                               ; preds = %74
  %23 = trunc i64 %42 to i32
  br label %24

24:                                               ; preds = %22, %1
  %25 = phi i32 [ 0, %1 ], [ %23, %22 ]
  store i32 %25, i32* %12, align 8
  %26 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  store i32 %27, i32* %14, align 4
  %28 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %0, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = xor i32 %31, %29
  %33 = and i32 %32, 67108863
  %34 = icmp eq i32 %33, 0
  %35 = zext i1 %34 to i8
  store i8 %35, i8* %6, align 8
  ret %"class.re2::CharClass"* %7

36:                                               ; preds = %77, %19
  %37 = phi %"struct.re2::RuneRange"* [ %20, %19 ], [ %78, %77 ]
  %38 = phi i64 [ 0, %19 ], [ %42, %77 ]
  %39 = phi %"class.std::__1::__tree_end_node"* [ %16, %19 ], [ %75, %77 ]
  %40 = bitcast %"class.std::__1::__tree_end_node"* %39 to %"class.std::__1::__tree_node"*
  %41 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 1
  %42 = add nuw i64 %38, 1
  %43 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %37, i64 %38
  %44 = bitcast %"struct.re2::RuneRange"* %41 to i64*
  %45 = bitcast %"struct.re2::RuneRange"* %43 to i64*
  %46 = load i64, i64* %44, align 4
  store i64 %46, i64* %45, align 4
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 1, i32 0
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %48, null
  br i1 %49, label %50, label %58

50:                                               ; preds = %36
  %51 = bitcast %"class.std::__1::__tree_end_node"* %39 to %"class.std::__1::__tree_node_base"*
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 2
  %53 = bitcast %"class.std::__1::__tree_end_node"* %52 to %"class.std::__1::__tree_end_node"**
  %54 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 0, i32 0
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node_base"* %56, %51
  br i1 %57, label %74, label %65

58:                                               ; preds = %36, %58
  %59 = phi %"class.std::__1::__tree_node_base"* [ %61, %58 ], [ %48, %36 ]
  %60 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %59, i64 0, i32 0, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, null
  br i1 %62, label %63, label %58

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %59, i64 0, i32 0
  br label %74

65:                                               ; preds = %50, %65
  %66 = phi %"class.std::__1::__tree_end_node"** [ %69, %65 ], [ %53, %50 ]
  %67 = bitcast %"class.std::__1::__tree_end_node"** %66 to %"class.std::__1::__tree_node_base"**
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %68, i64 0, i32 2
  %70 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %69, align 8
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 0, i32 0
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  %73 = icmp eq %"class.std::__1::__tree_node_base"* %72, %68
  br i1 %73, label %74, label %65

74:                                               ; preds = %65, %50, %63
  %75 = phi %"class.std::__1::__tree_end_node"* [ %64, %63 ], [ %54, %50 ], [ %70, %65 ]
  %76 = icmp eq %"class.std::__1::__tree_end_node"* %75, %17
  br i1 %76, label %22, label %77

77:                                               ; preds = %74
  %78 = load %"struct.re2::RuneRange"*, %"struct.re2::RuneRange"** %21, align 8
  br label %36
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #3

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #3

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #9

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN3re29RuneRangeENS1_13RuneRangeLessENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN3re29RuneRangeENS1_13RuneRangeLessENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #18
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN3re29RuneRangeENS1_13RuneRangeLessENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #18
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #19
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_rwlock_wrlock(%union.pthread_rwlock_t*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nounwind
declare i32 @pthread_rwlock_unlock(%union.pthread_rwlock_t*) local_unnamed_addr #10

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3re217NumCapturesWalkerD0Ev(%"class.re2::NumCapturesWalker"*) unnamed_addr #13 comdat align 2 {
  %2 = getelementptr inbounds %"class.re2::NumCapturesWalker", %"class.re2::NumCapturesWalker"* %0, i64 0, i32 0
  tail call void @_ZN3re26Regexp6WalkerIiED2Ev(%"class.re2::Regexp::Walker"* %2) #18
  %3 = bitcast %"class.re2::NumCapturesWalker"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3re217NumCapturesWalker8PreVisitEPNS_6RegexpEiPb(%"class.re2::NumCapturesWalker"*, %"class.re2::Regexp"*, i32, i8*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 0
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 11
  br i1 %7, label %8, label %12

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.re2::NumCapturesWalker", %"class.re2::NumCapturesWalker"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = add nsw i32 %10, 1
  store i32 %11, i32* %9, align 8
  br label %12

12:                                               ; preds = %8, %4
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3re26Regexp6WalkerIiE9PostVisitEPS0_iiPii(%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i32, i32*, i32) unnamed_addr #0 comdat align 2 {
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3re26Regexp6WalkerIiE4CopyEi(%"class.re2::Regexp::Walker"*, i32) unnamed_addr #0 comdat align 2 {
  ret i32 %1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3re217NumCapturesWalker10ShortVisitEPNS_6RegexpEi(%"class.re2::NumCapturesWalker"*, %"class.re2::Regexp"*, i32) unnamed_addr #0 comdat align 2 {
  %4 = alloca %class.LogMessage, align 8
  %5 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %5) #18
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1
  %7 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 1
  %10 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %9, i64 0, i32 0
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %12 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i64*
  store i64 %11, i64* %12, align 8
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i8**
  %15 = inttoptr i64 %11 to i8*
  %16 = getelementptr i8, i8* %15, i64 -24
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  %21 = bitcast i8* %20 to i64*
  store i64 %13, i64* %21, align 8
  %22 = load i8*, i8** %14, align 8
  %23 = getelementptr i8, i8* %22, i64 -24
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds i8, i8* %19, i64 %25
  %27 = bitcast i8* %26 to %"class.std::__1::ios_base"*
  %28 = bitcast %"class.std::__1::basic_stringbuf"* %9 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %27, i8* %28) #18
  %29 = getelementptr inbounds i8, i8* %26, i64 136
  %30 = bitcast i8* %29 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %30, align 8
  %31 = getelementptr inbounds i8, i8* %26, i64 144
  %32 = bitcast i8* %31 to i32*
  store i32 -1, i32* %32, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %10) #18
  %33 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %9, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 1, i32 1
  %35 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 1, i32 3
  %36 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 32, i1 false) #18
  store i32 16, i32* %35, align 8
  %37 = bitcast %"class.std::__1::basic_ostringstream"* %6 to %"class.std::__1::basic_ostream"*
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %37, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i64 39) #18
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #18
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %39, i32 549) #18
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %40, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2) #18
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %37, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.24, i64 0, i64 0), i64 36) #18
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %5) #18
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3re26Regexp6WalkerIiED0Ev(%"class.re2::Regexp::Walker"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #21
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3re26Regexp6WalkerIiE8PreVisitEPS0_iPb(%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i8*) unnamed_addr #0 comdat align 2 {
  ret i32 %2
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3re26Regexp6WalkerIiE5ResetEv(%"class.re2::Regexp::Walker"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.LogMessage, align 8
  %3 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %99, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %7) #18
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1
  %9 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %8, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  %11 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 1
  %12 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_ostringstream"* %8 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %16 = bitcast %"class.std::__1::basic_ostringstream"* %8 to i8**
  %17 = inttoptr i64 %13 to i8*
  %18 = getelementptr i8, i8* %17, i64 -24
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::basic_ostringstream"* %8 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 %20
  %23 = bitcast i8* %22 to i64*
  store i64 %15, i64* %23, align 8
  %24 = load i8*, i8** %16, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %21, i64 %27
  %29 = bitcast i8* %28 to %"class.std::__1::ios_base"*
  %30 = bitcast %"class.std::__1::basic_stringbuf"* %11 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %29, i8* %30) #18
  %31 = getelementptr inbounds i8, i8* %28, i64 136
  %32 = bitcast i8* %31 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %32, align 8
  %33 = getelementptr inbounds i8, i8* %28, i64 144
  %34 = bitcast i8* %33 to i32*
  store i32 -1, i32* %34, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %12) #18
  %35 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 1, i32 1
  %37 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 1, i32 3
  %38 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 32, i1 false) #18
  store i32 16, i32* %37, align 8
  %39 = bitcast %"class.std::__1::basic_ostringstream"* %8 to %"class.std::__1::basic_ostream"*
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %39, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.22, i64 0, i64 0), i64 42) #18
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #18
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %41, i32 149) #18
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %42, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2) #18
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %39, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i64 0, i64 0), i64 16) #18
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %7) #18
  %45 = load i64, i64* %3, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %99, label %47

47:                                               ; preds = %6
  %48 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %51 = bitcast %"struct.re2::WalkState"*** %50 to i64*
  %52 = bitcast %"struct.re2::WalkState"*** %49 to i64*
  br label %53

53:                                               ; preds = %47, %96
  %54 = phi i64 [ %45, %47 ], [ %97, %96 ]
  %55 = load i64, i64* %48, align 8
  %56 = add i64 %54, -1
  %57 = add i64 %56, %55
  %58 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %49, align 8
  %59 = lshr i64 %57, 7
  %60 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %58, i64 %59
  %61 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %60, align 8
  %62 = and i64 %57, 127
  %63 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %61, i64 %62, i32 5
  %64 = load i32*, i32** %63, align 8
  %65 = icmp eq i32* %64, null
  %66 = ptrtoint %"struct.re2::WalkState"** %58 to i64
  br i1 %65, label %73, label %67

67:                                               ; preds = %53
  %68 = bitcast i32* %64 to i8*
  call void @_ZdaPv(i8* %68) #19
  %69 = load i64, i64* %3, align 8
  %70 = load i64, i64* %48, align 8
  %71 = load i64, i64* %52, align 8
  %72 = add i64 %69, -1
  br label %73

73:                                               ; preds = %67, %53
  %74 = phi i64 [ %72, %67 ], [ %56, %53 ]
  %75 = phi i64 [ %71, %67 ], [ %66, %53 ]
  %76 = phi i64 [ %70, %67 ], [ %55, %53 ]
  %77 = phi i64 [ %69, %67 ], [ %54, %53 ]
  store i64 %74, i64* %3, align 8
  %78 = load i64, i64* %51, align 8
  %79 = sub i64 %78, %75
  %80 = icmp eq i64 %79, 0
  %81 = shl i64 %79, 4
  %82 = add i64 %81, -1
  %83 = select i1 %80, i64 0, i64 %82
  %84 = sub i64 1, %77
  %85 = sub i64 %84, %76
  %86 = add i64 %85, %83
  %87 = icmp ult i64 %86, 256
  br i1 %87, label %96, label %88

88:                                               ; preds = %73
  %89 = inttoptr i64 %78 to %"struct.re2::WalkState"**
  %90 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 -1
  %91 = bitcast %"struct.re2::WalkState"** %90 to i8**
  %92 = load i8*, i8** %91, align 8
  call void @_ZdlPv(i8* %92) #19
  %93 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %50, align 8
  %94 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %93, i64 -1
  store %"struct.re2::WalkState"** %94, %"struct.re2::WalkState"*** %50, align 8
  %95 = load i64, i64* %3, align 8
  br label %96

96:                                               ; preds = %73, %88
  %97 = phi i64 [ %74, %73 ], [ %95, %88 ]
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %53

99:                                               ; preds = %96, %6, %1
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3re219NamedCapturesWalkerD0Ev(%"class.re2::NamedCapturesWalker"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.re2::NamedCapturesWalker", %"class.re2::NamedCapturesWalker"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3re219NamedCapturesWalkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.re2::NamedCapturesWalker", %"class.re2::NamedCapturesWalker"* %0, i64 0, i32 1
  %4 = load %"class.std::__1::map.38"*, %"class.std::__1::map.38"** %3, align 8
  %5 = icmp eq %"class.std::__1::map.38"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::map.38", %"class.std::__1::map.38"* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::map.38", %"class.std::__1::map.38"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node.68"**
  %10 = load %"class.std::__1::__tree_node.68"*, %"class.std::__1::__tree_node.68"** %9, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.39"* %7, %"class.std::__1::__tree_node.68"* %10) #18
  %11 = bitcast %"class.std::__1::map.38"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #19
  br label %12

12:                                               ; preds = %1, %6
  %13 = getelementptr inbounds %"class.re2::NamedCapturesWalker", %"class.re2::NamedCapturesWalker"* %0, i64 0, i32 0
  tail call void @_ZN3re26Regexp6WalkerIiED2Ev(%"class.re2::Regexp::Walker"* %13) #18
  %14 = bitcast %"class.re2::NamedCapturesWalker"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3re219NamedCapturesWalker8PreVisitEPNS_6RegexpEiPb(%"class.re2::NamedCapturesWalker"*, %"class.re2::Regexp"*, i32, i8*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple.73", align 1
  %7 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 0
  %8 = load i8, i8* %7, align 8
  %9 = icmp eq i8 %8, 11
  br i1 %9, label %10, label %45

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7, i32 0, i32 1
  %12 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %13 = icmp eq %"class.std::__1::basic_string"* %12, null
  br i1 %13, label %45, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.re2::NamedCapturesWalker", %"class.re2::NamedCapturesWalker"* %0, i64 0, i32 1
  %16 = load %"class.std::__1::map.38"*, %"class.std::__1::map.38"** %15, align 8
  %17 = icmp eq %"class.std::__1::map.38"* %16, null
  br i1 %17, label %18, label %25

18:                                               ; preds = %14
  %19 = tail call i8* @_Znwm(i64 24) #19
  %20 = getelementptr inbounds i8, i8* %19, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #18
  %21 = bitcast i8* %19 to i8**
  store i8* %20, i8** %21, align 8
  %22 = bitcast %"class.std::__1::map.38"** %15 to i8**
  store i8* %19, i8** %22, align 8
  %23 = bitcast i8* %19 to %"class.std::__1::map.38"*
  %24 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  br label %25

25:                                               ; preds = %18, %14
  %26 = phi %"class.std::__1::basic_string"* [ %24, %18 ], [ %12, %14 ]
  %27 = phi %"class.std::__1::map.38"* [ %23, %18 ], [ %16, %14 ]
  %28 = getelementptr inbounds %"class.std::__1::map.38", %"class.std::__1::map.38"* %27, i64 0, i32 0
  %29 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_(%"class.std::__1::__tree.39"* %28, %"class.std::__1::basic_string"* dereferenceable(24) %26) #18
  %30 = load %"class.std::__1::map.38"*, %"class.std::__1::map.38"** %15, align 8
  %31 = getelementptr inbounds %"class.std::__1::map.38", %"class.std::__1::map.38"* %30, i64 0, i32 0, i32 1, i32 0, i32 0
  %32 = icmp eq %"class.std::__1::__tree_end_node"* %29, %31
  br i1 %32, label %33, label %45

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7, i32 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %37 = getelementptr inbounds %"class.std::__1::map.38", %"class.std::__1::map.38"* %30, i64 0, i32 0
  %38 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #18
  %39 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %36, %"class.std::__1::basic_string"** %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::tuple.73", %"class.std::__1::tuple.73"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %40) #18
  %41 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.39"* %37, %"class.std::__1::basic_string"* dereferenceable(24) %36, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.73"* nonnull dereferenceable(1) %6) #18
  %42 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %41, 0
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %42, i64 7
  %44 = bitcast %"class.std::__1::__tree_end_node"* %43 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %40) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #18
  store i32 %35, i32* %44, align 4
  br label %45

45:                                               ; preds = %10, %25, %33, %4
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3re219NamedCapturesWalker10ShortVisitEPNS_6RegexpEi(%"class.re2::NamedCapturesWalker"*, %"class.re2::Regexp"*, i32) unnamed_addr #0 comdat align 2 {
  %4 = alloca %class.LogMessage, align 8
  %5 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %5) #18
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1
  %7 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 1
  %10 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %9, i64 0, i32 0
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %12 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i64*
  store i64 %11, i64* %12, align 8
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i8**
  %15 = inttoptr i64 %11 to i8*
  %16 = getelementptr i8, i8* %15, i64 -24
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  %21 = bitcast i8* %20 to i64*
  store i64 %13, i64* %21, align 8
  %22 = load i8*, i8** %14, align 8
  %23 = getelementptr i8, i8* %22, i64 -24
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds i8, i8* %19, i64 %25
  %27 = bitcast i8* %26 to %"class.std::__1::ios_base"*
  %28 = bitcast %"class.std::__1::basic_stringbuf"* %9 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %27, i8* %28) #18
  %29 = getelementptr inbounds i8, i8* %26, i64 136
  %30 = bitcast i8* %29 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %30, align 8
  %31 = getelementptr inbounds i8, i8* %26, i64 144
  %32 = bitcast i8* %31 to i32*
  store i32 -1, i32* %32, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %10) #18
  %33 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %9, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 1, i32 1
  %35 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 1, i32 3
  %36 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 32, i1 false) #18
  store i32 16, i32* %35, align 8
  %37 = bitcast %"class.std::__1::basic_ostringstream"* %6 to %"class.std::__1::basic_ostream"*
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %37, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i64 39) #18
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #18
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %39, i32 597) #18
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %40, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2) #18
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %37, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.26, i64 0, i64 0), i64 38) #18
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %5) #18
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_(%"class.std::__1::__tree.39"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.39", %"class.std::__1::__tree.39"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.68"**
  %5 = load %"class.std::__1::__tree_node.68"*, %"class.std::__1::__tree_node.68"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node.68"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node.68"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node.68", %"class.std::__1::__tree_node.68"* %22, i64 0, i32 2
  %24 = bitcast %"struct.std::__1::__value_type"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.68", %"class.std::__1::__tree_node.68"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"struct.std::__1::__value_type"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #18
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node.68", %"class.std::__1::__tree_node.68"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node.68"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node.68", %"class.std::__1::__tree_node.68"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node.68"* %22 to %"class.std::__1::__tree_node.68"**
  %53 = select i1 %48, %"class.std::__1::__tree_node.68"** %50, %"class.std::__1::__tree_node.68"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node.68"*, %"class.std::__1::__tree_node.68"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node.68"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #18
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.39"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.73"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %7 = bitcast %"class.std::__1::__tree_end_node"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #18
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %6, align 8
  %8 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_(%"class.std::__1::__tree.39"* %0, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %6, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %9 = bitcast %"class.std::__1::__tree_node_base"** %8 to %"class.std::__1::__tree_node.68"**
  %10 = load %"class.std::__1::__tree_node.68"*, %"class.std::__1::__tree_node.68"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node.68"* %10, null
  br i1 %11, label %12, label %55

12:                                               ; preds = %5
  %13 = call i8* @_Znwm(i64 64) #19, !noalias !48
  %14 = getelementptr inbounds i8, i8* %13, i64 32
  %15 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %15, align 8, !noalias !48
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1, !noalias !48
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %12
  %22 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %22, i64 24, i1 false) #18, !noalias !48
  br label %29

23:                                               ; preds = %12
  %24 = bitcast i8* %14 to %"class.std::__1::basic_string"*
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8, !noalias !48
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8, !noalias !48
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %24, i8* %26, i64 %28) #18, !noalias !48
  br label %29

29:                                               ; preds = %21, %23
  %30 = getelementptr inbounds i8, i8* %13, i64 56
  %31 = bitcast i8* %30 to i32*
  store i32 0, i32* %31, align 8, !noalias !48
  %32 = bitcast %"class.std::__1::__tree_end_node"** %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8* %13 to %"class.std::__1::__tree_node.68"*
  %35 = bitcast i8* %13 to %"class.std::__1::__tree_node_base"*
  %36 = getelementptr inbounds i8, i8* %13, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 16, i1 false) #18
  %37 = bitcast i8* %36 to i64*
  store i64 %33, i64* %37, align 8
  %38 = bitcast %"class.std::__1::__tree_node_base"** %8 to i8**
  store i8* %13, i8** %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree.39", %"class.std::__1::__tree.39"* %0, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %29
  %45 = ptrtoint %"class.std::__1::__tree_node_base"* %42 to i64
  %46 = bitcast %"class.std::__1::__tree.39"* %0 to i64*
  store i64 %45, i64* %46, align 8
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %8, align 8
  br label %48

48:                                               ; preds = %44, %29
  %49 = phi %"class.std::__1::__tree_node_base"* [ %35, %29 ], [ %47, %44 ]
  %50 = getelementptr inbounds %"class.std::__1::__tree.39", %"class.std::__1::__tree.39"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %51, %"class.std::__1::__tree_node_base"* %49) #18
  %52 = getelementptr inbounds %"class.std::__1::__tree.39", %"class.std::__1::__tree.39"* %0, i64 0, i32 2, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, 1
  store i64 %54, i64* %52, align 8
  br label %55

55:                                               ; preds = %48, %5
  %56 = phi i8 [ 1, %48 ], [ 0, %5 ]
  %57 = phi %"class.std::__1::__tree_node.68"* [ %34, %48 ], [ %10, %5 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node.68", %"class.std::__1::__tree_node.68"* %57, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #18
  %59 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %58, 0
  %60 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %59, i8 %56, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %60
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_(%"class.std::__1::__tree.39"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.39", %"class.std::__1::__tree.39"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.68"**
  %6 = load %"class.std::__1::__tree_node.68"*, %"class.std::__1::__tree_node.68"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.68"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.39", %"class.std::__1::__tree.39"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node.68"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node.68", %"class.std::__1::__tree_node.68"* %23, i64 0, i32 2
  %26 = bitcast %"struct.std::__1::__value_type"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.68", %"class.std::__1::__tree_node.68"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #18
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node.68", %"class.std::__1::__tree_node.68"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node.68", %"class.std::__1::__tree_node.68"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #18
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node.68", %"class.std::__1::__tree_node.68"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node.68", %"class.std::__1::__tree_node.68"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node.68", %"class.std::__1::__tree_node.68"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node.68"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.39"*, %"class.std::__1::__tree_node.68"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.68"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.68"* %1 to %"class.std::__1::__tree_node.68"**
  %6 = load %"class.std::__1::__tree_node.68"*, %"class.std::__1::__tree_node.68"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.39"* %0, %"class.std::__1::__tree_node.68"* %6) #18
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.68", %"class.std::__1::__tree_node.68"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.68"**
  %9 = load %"class.std::__1::__tree_node.68"*, %"class.std::__1::__tree_node.68"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.39"* %0, %"class.std::__1::__tree_node.68"* %9) #18
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.68", %"class.std::__1::__tree_node.68"* %1, i64 0, i32 2, i32 0
  %11 = bitcast %"struct.std::__1::pair.69"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"struct.std::__1::pair.69", %"struct.std::__1::pair.69"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #19
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node.68"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #19
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3re218CaptureNamesWalkerD0Ev(%"class.re2::CaptureNamesWalker"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.re2::CaptureNamesWalker", %"class.re2::CaptureNamesWalker"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3re218CaptureNamesWalkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.re2::CaptureNamesWalker", %"class.re2::CaptureNamesWalker"* %0, i64 0, i32 1
  %4 = load %"class.std::__1::map.49"*, %"class.std::__1::map.49"** %3, align 8
  %5 = icmp eq %"class.std::__1::map.49"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::map.49", %"class.std::__1::map.49"* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::map.49", %"class.std::__1::map.49"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node.88"**
  %10 = load %"class.std::__1::__tree_node.88"*, %"class.std::__1::__tree_node.88"** %9, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.50"* %7, %"class.std::__1::__tree_node.88"* %10) #18
  %11 = bitcast %"class.std::__1::map.49"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #19
  br label %12

12:                                               ; preds = %1, %6
  %13 = getelementptr inbounds %"class.re2::CaptureNamesWalker", %"class.re2::CaptureNamesWalker"* %0, i64 0, i32 0
  tail call void @_ZN3re26Regexp6WalkerIiED2Ev(%"class.re2::Regexp::Walker"* %13) #18
  %14 = bitcast %"class.re2::CaptureNamesWalker"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3re218CaptureNamesWalker8PreVisitEPNS_6RegexpEiPb(%"class.re2::CaptureNamesWalker"*, %"class.re2::Regexp"*, i32, i8*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 0
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 11
  br i1 %7, label %8, label %127

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7, i32 0, i32 1
  %10 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %11 = icmp eq %"class.std::__1::basic_string"* %10, null
  br i1 %11, label %127, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.re2::CaptureNamesWalker", %"class.re2::CaptureNamesWalker"* %0, i64 0, i32 1
  %14 = load %"class.std::__1::map.49"*, %"class.std::__1::map.49"** %13, align 8
  %15 = icmp eq %"class.std::__1::map.49"* %14, null
  br i1 %15, label %16, label %23

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 24) #19
  %18 = getelementptr inbounds i8, i8* %17, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #18
  %19 = bitcast i8* %17 to i8**
  store i8* %18, i8** %19, align 8
  %20 = bitcast %"class.std::__1::map.49"** %13 to i8**
  store i8* %17, i8** %20, align 8
  %21 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %22 = bitcast i8* %17 to %"class.std::__1::map.49"*
  br label %23

23:                                               ; preds = %16, %12
  %24 = phi %"class.std::__1::map.49"* [ %22, %16 ], [ %14, %12 ]
  %25 = phi %"class.std::__1::basic_string"* [ %21, %16 ], [ %10, %12 ]
  %26 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7, i32 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::map.49", %"class.std::__1::map.49"* %24, i64 0, i32 0, i32 1, i32 0, i32 0
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.std::__1::__tree_node.88"**
  %30 = load %"class.std::__1::__tree_node.88"*, %"class.std::__1::__tree_node.88"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node.88"* %30, null
  br i1 %31, label %60, label %32

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.std::__1::map.49", %"class.std::__1::map.49"* %24, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %56, %32
  %35 = phi %"class.std::__1::__tree_node.88"* [ %59, %56 ], [ %30, %32 ]
  %36 = phi %"class.std::__1::__tree_node_base"** [ %58, %56 ], [ %33, %32 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node.88", %"class.std::__1::__tree_node.88"* %35, i64 0, i32 1, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %27, %38
  br i1 %39, label %40, label %46

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.std::__1::__tree_node.88", %"class.std::__1::__tree_node.88"* %35, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, null
  br i1 %43, label %44, label %56

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.std::__1::__tree_node.88", %"class.std::__1::__tree_node.88"* %35, i64 0, i32 0, i32 0
  br label %62

46:                                               ; preds = %34
  %47 = icmp slt i32 %38, %27
  br i1 %47, label %48, label %54

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node.88", %"class.std::__1::__tree_node.88"* %35, i64 0, i32 0, i32 1
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %56

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node.88", %"class.std::__1::__tree_node.88"* %35, i64 0, i32 0, i32 0
  br label %62

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.std::__1::__tree_node.88", %"class.std::__1::__tree_node.88"* %35, i64 0, i32 0, i32 0
  br label %62

56:                                               ; preds = %48, %40
  %57 = phi %"class.std::__1::__tree_node_base"* [ %42, %40 ], [ %50, %48 ]
  %58 = phi %"class.std::__1::__tree_node_base"** [ %41, %40 ], [ %49, %48 ]
  %59 = bitcast %"class.std::__1::__tree_node_base"* %57 to %"class.std::__1::__tree_node.88"*
  br label %34

60:                                               ; preds = %23
  %61 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 0, i32 0
  br label %62

62:                                               ; preds = %60, %54, %52, %44
  %63 = phi %"class.std::__1::__tree_end_node"* [ %28, %60 ], [ %45, %44 ], [ %53, %52 ], [ %55, %54 ]
  %64 = phi %"class.std::__1::__tree_node_base"** [ %61, %60 ], [ %41, %44 ], [ %49, %52 ], [ %36, %54 ]
  %65 = bitcast %"class.std::__1::__tree_node_base"** %64 to %"class.std::__1::__tree_node.88"**
  %66 = load %"class.std::__1::__tree_node.88"*, %"class.std::__1::__tree_node.88"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node.88"* %66, null
  br i1 %67, label %68, label %94

68:                                               ; preds = %62
  %69 = tail call i8* @_Znwm(i64 64) #19, !noalias !51
  %70 = getelementptr inbounds i8, i8* %69, i64 32
  %71 = bitcast i8* %70 to i32*
  store i32 %27, i32* %71, align 8, !noalias !51
  %72 = getelementptr inbounds i8, i8* %69, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 24, i1 false) #18, !noalias !51
  %73 = bitcast i8* %69 to %"class.std::__1::__tree_node.88"*
  %74 = bitcast i8* %69 to %"class.std::__1::__tree_node_base"*
  %75 = getelementptr inbounds i8, i8* %69, i64 16
  %76 = bitcast i8* %75 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 16, i1 false) #18
  store %"class.std::__1::__tree_end_node"* %63, %"class.std::__1::__tree_end_node"** %76, align 8
  %77 = bitcast %"class.std::__1::__tree_node_base"** %64 to i8**
  store i8* %69, i8** %77, align 8
  %78 = getelementptr inbounds %"class.std::__1::map.49", %"class.std::__1::map.49"* %24, i64 0, i32 0, i32 0
  %79 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %79, i64 0, i32 0
  %81 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %80, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %81, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %68
  %84 = ptrtoint %"class.std::__1::__tree_node_base"* %81 to i64
  %85 = bitcast %"class.std::__1::map.49"* %24 to i64*
  store i64 %84, i64* %85, align 8
  %86 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %64, align 8
  br label %87

87:                                               ; preds = %83, %68
  %88 = phi %"class.std::__1::__tree_node_base"* [ %74, %68 ], [ %86, %83 ]
  %89 = getelementptr inbounds %"class.std::__1::map.49", %"class.std::__1::map.49"* %24, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %90 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %89, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %90, %"class.std::__1::__tree_node_base"* %88) #18
  %91 = getelementptr inbounds %"class.std::__1::map.49", %"class.std::__1::map.49"* %24, i64 0, i32 0, i32 2, i32 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %92, 1
  store i64 %93, i64* %91, align 8
  br label %94

94:                                               ; preds = %62, %87
  %95 = phi %"class.std::__1::__tree_node.88"* [ %73, %87 ], [ %66, %62 ]
  %96 = getelementptr inbounds %"class.std::__1::__tree_node.88", %"class.std::__1::__tree_node.88"* %95, i64 0, i32 1, i32 0, i32 1
  %97 = icmp eq %"class.std::__1::basic_string"* %96, %25
  br i1 %97, label %127, label %98

98:                                               ; preds = %94
  %99 = bitcast %"class.std::__1::basic_string"* %96 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  %103 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %102, label %117, label %107

107:                                              ; preds = %98
  br i1 %106, label %111, label %108

108:                                              ; preds = %107
  %109 = bitcast %"class.std::__1::basic_string"* %96 to i8*
  %110 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 24, i1 false) #18
  br label %127

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %96, i8* %113, i64 %115) #18
  br label %127

117:                                              ; preds = %98
  %118 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i8*, i8** %118, align 8
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %123 = zext i8 %105 to i64
  %124 = select i1 %106, i8* %119, i8* %122
  %125 = select i1 %106, i64 %121, i64 %123
  %126 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %96, i8* %124, i64 %125) #18
  br label %127

127:                                              ; preds = %117, %111, %108, %94, %8, %4
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3re218CaptureNamesWalker10ShortVisitEPNS_6RegexpEi(%"class.re2::CaptureNamesWalker"*, %"class.re2::Regexp"*, i32) unnamed_addr #0 comdat align 2 {
  %4 = alloca %class.LogMessage, align 8
  %5 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %5) #18
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1
  %7 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 1
  %10 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %9, i64 0, i32 0
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %12 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i64*
  store i64 %11, i64* %12, align 8
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i8**
  %15 = inttoptr i64 %11 to i8*
  %16 = getelementptr i8, i8* %15, i64 -24
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  %21 = bitcast i8* %20 to i64*
  store i64 %13, i64* %21, align 8
  %22 = load i8*, i8** %14, align 8
  %23 = getelementptr i8, i8* %22, i64 -24
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds i8, i8* %19, i64 %25
  %27 = bitcast i8* %26 to %"class.std::__1::ios_base"*
  %28 = bitcast %"class.std::__1::basic_stringbuf"* %9 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %27, i8* %28) #18
  %29 = getelementptr inbounds i8, i8* %26, i64 136
  %30 = bitcast i8* %29 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %30, align 8
  %31 = getelementptr inbounds i8, i8* %26, i64 144
  %32 = bitcast i8* %31 to i32*
  store i32 -1, i32* %32, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %10) #18
  %33 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %9, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 1, i32 1
  %35 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 1, i32 3
  %36 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 32, i1 false) #18
  store i32 16, i32* %35, align 8
  %37 = bitcast %"class.std::__1::basic_ostringstream"* %6 to %"class.std::__1::basic_ostream"*
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %37, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i64 39) #18
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #18
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %39, i32 641) #18
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %40, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2) #18
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %37, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.27, i64 0, i64 0), i64 37) #18
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %5) #18
  ret i32 %2
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.50"*, %"class.std::__1::__tree_node.88"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.88"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.88"* %1 to %"class.std::__1::__tree_node.88"**
  %6 = load %"class.std::__1::__tree_node.88"*, %"class.std::__1::__tree_node.88"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.50"* %0, %"class.std::__1::__tree_node.88"* %6) #18
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.88", %"class.std::__1::__tree_node.88"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.88"**
  %9 = load %"class.std::__1::__tree_node.88"*, %"class.std::__1::__tree_node.88"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.50"* %0, %"class.std::__1::__tree_node.88"* %9) #18
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.88", %"class.std::__1::__tree_node.88"* %1, i64 0, i32 1, i32 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #19
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node.88"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #19
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #18
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #18
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #18
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #18
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #18
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #18
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #18
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #18
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #18
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #18
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #19
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #18
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #18
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #19
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #18
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #18
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #10

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #15

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #10

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #16

declare void @_ZNSt3__111__call_onceERVmPvPFvS2_E(i64* dereferenceable(8), i8*, void (i8*)*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__117__call_once_proxyINS_5tupleIJOZN3re26Regexp6IncrefEvE3$_0EEEEEvPv"(i8* nocapture readnone) #0 {
  %2 = tail call i8* @_Znwm(i64 56) #19
  %3 = bitcast i8* %2 to %union.pthread_rwlock_t*
  %4 = tail call i32 @pthread_rwlock_init(%union.pthread_rwlock_t* nonnull %3, %union.pthread_rwlockattr_t* null) #18
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @abort() #21
  unreachable

7:                                                ; preds = %1
  store i8* %2, i8** bitcast (%"class.re2::Mutex"** @_ZN3re2L9ref_mutexE to i8**), align 8
  %8 = tail call i8* @_Znwm(i64 24) #19
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #18
  %10 = bitcast i8* %8 to i8**
  store i8* %9, i8** %10, align 8
  store i8* %8, i8** bitcast (%"class.std::__1::map"** @_ZN3re2L7ref_mapE to i8**), align 8
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_rwlock_init(%union.pthread_rwlock_t*, %union.pthread_rwlockattr_t*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !2
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !2
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !2
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !2
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !2
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN3re26RegexpENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.re2::Regexp"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.re2::Regexp"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.re2::Regexp"**
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.re2::Regexp"*, %"class.re2::Regexp"** %13, i64 %18
  %20 = bitcast %"class.re2::Regexp"** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #18
  %26 = ptrtoint %"class.re2::Regexp"** %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #21
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #21
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #19
  %54 = bitcast i8* %53 to %"class.re2::Regexp"**
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"class.re2::Regexp"** [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %57, i64 %33
  %59 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %57, i64 %56
  %60 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %58, i64 %1
  %61 = bitcast %"class.re2::Regexp"** %58 to i8*
  %62 = shl i64 %1, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 %62, i1 false) #18
  %63 = ptrtoint %"class.re2::Regexp"** %59 to i64
  %64 = ptrtoint %"class.re2::Regexp"** %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %66 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %"class.re2::Regexp"** %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %58, i64 %71
  %73 = ptrtoint %"class.re2::Regexp"** %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %"class.re2::Regexp"** %72 to i8*
  %77 = bitcast %"class.re2::Regexp"** %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 %69, i1 false) #18
  %78 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %"class.re2::Regexp"** [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %"class.re2::Regexp"** %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"class.re2::Regexp"** %80 to i8*
  tail call void @_ZdlPv(i8* %83) #19
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3re26Regexp6WalkerIiE12WalkInternalEPS0_ib(%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %class.LogMessage, align 8
  %6 = alloca i8, align 1
  tail call void @_ZN3re26Regexp6WalkerIiE5ResetEv(%"class.re2::Regexp::Walker"* %0)
  %7 = icmp eq %"class.re2::Regexp"* %1, null
  br i1 %7, label %8, label %47

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %9) #18
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1
  %11 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1, i32 2, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %10, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %11, align 8
  %13 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1, i32 1
  %14 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %13, i64 0, i32 0
  %15 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %16 = bitcast %"class.std::__1::basic_ostringstream"* %10 to i64*
  store i64 %15, i64* %16, align 8
  %17 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %18 = bitcast %"class.std::__1::basic_ostringstream"* %10 to i8**
  %19 = inttoptr i64 %15 to i8*
  %20 = getelementptr i8, i8* %19, i64 -24
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::basic_ostringstream"* %10 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 %22
  %25 = bitcast i8* %24 to i64*
  store i64 %17, i64* %25, align 8
  %26 = load i8*, i8** %18, align 8
  %27 = getelementptr i8, i8* %26, i64 -24
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds i8, i8* %23, i64 %29
  %31 = bitcast i8* %30 to %"class.std::__1::ios_base"*
  %32 = bitcast %"class.std::__1::basic_stringbuf"* %13 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %31, i8* %32) #18
  %33 = getelementptr inbounds i8, i8* %30, i64 136
  %34 = bitcast i8* %33 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %34, align 8
  %35 = getelementptr inbounds i8, i8* %30, i64 144
  %36 = bitcast i8* %35 to i32*
  store i32 -1, i32* %36, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %11, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %14) #18
  %37 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %13, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1, i32 1, i32 1
  %39 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1, i32 1, i32 3
  %40 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 32, i1 false) #18
  store i32 16, i32* %39, align 8
  %41 = bitcast %"class.std::__1::basic_ostringstream"* %10 to %"class.std::__1::basic_ostream"*
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %41, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.22, i64 0, i64 0), i64 42) #18
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %42, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #18
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %43, i32 162) #18
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %44, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2) #18
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %41, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i64 0, i64 0), i64 9) #18
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %9) #18
  br label %323

47:                                               ; preds = %4
  %48 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1
  %49 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %50 = bitcast %"struct.re2::WalkState"*** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %53 = bitcast %"struct.re2::WalkState"*** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %51, %54
  %56 = icmp eq i64 %55, 0
  %57 = shl i64 %55, 4
  %58 = add i64 %57, -1
  %59 = select i1 %56, i64 0, i64 %58
  %60 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, %61
  %65 = icmp eq i64 %59, %64
  %66 = inttoptr i64 %54 to %"struct.re2::WalkState"**
  %67 = inttoptr i64 %51 to %"struct.re2::WalkState"**
  br i1 %65, label %68, label %75

68:                                               ; preds = %47
  %69 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %48, i64 0, i32 0
  tail call void @_ZNSt3__15dequeIN3re29WalkStateIiEENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %69) #18
  %70 = load i64, i64* %62, align 8
  %71 = load i64, i64* %60, align 8
  %72 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %52, align 8
  %73 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %49, align 8
  %74 = add i64 %71, %70
  br label %75

75:                                               ; preds = %68, %47
  %76 = phi i64 [ %74, %68 ], [ %64, %47 ]
  %77 = phi %"struct.re2::WalkState"** [ %73, %68 ], [ %67, %47 ]
  %78 = phi %"struct.re2::WalkState"** [ %72, %68 ], [ %66, %47 ]
  %79 = icmp eq %"struct.re2::WalkState"** %77, %78
  br i1 %79, label %87, label %80

80:                                               ; preds = %75
  %81 = lshr i64 %76, 7
  %82 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %78, i64 %81
  %83 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %82, align 8
  %84 = and i64 %76, 127
  %85 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %83, i64 %84
  %86 = bitcast %"struct.re2::WalkState"* %85 to i8*
  br label %87

87:                                               ; preds = %75, %80
  %88 = phi i8* [ %86, %80 ], [ null, %75 ]
  %89 = bitcast i8* %88 to %"class.re2::Regexp"**
  store %"class.re2::Regexp"* %1, %"class.re2::Regexp"** %89, align 8
  %90 = getelementptr inbounds i8, i8* %88, i64 8
  %91 = bitcast i8* %90 to i32*
  store i32 -1, i32* %91, align 8
  %92 = getelementptr inbounds i8, i8* %88, i64 12
  %93 = bitcast i8* %92 to i32*
  store i32 %2, i32* %93, align 4
  %94 = getelementptr inbounds i8, i8* %88, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 16, i1 false)
  %95 = load i64, i64* %62, align 8
  %96 = add i64 %95, 1
  store i64 %96, i64* %62, align 8
  %97 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 3
  %98 = bitcast %"class.re2::Regexp::Walker"* %0 to i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i8*)***
  %99 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %48, i64 0, i32 0
  %100 = bitcast %"class.re2::Regexp::Walker"* %0 to i32 (%"class.re2::Regexp::Walker"*, i32)***
  %101 = bitcast %"class.re2::Regexp::Walker"* %0 to i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i32, i32*, i32)***
  %102 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 2
  %103 = bitcast %"class.re2::Regexp::Walker"* %0 to i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32)***
  br label %104

104:                                              ; preds = %321, %87
  %105 = phi i64 [ %322, %321 ], [ %96, %87 ]
  %106 = load i64, i64* %60, align 8
  %107 = add i64 %105, -1
  %108 = add i64 %107, %106
  %109 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %52, align 8
  %110 = lshr i64 %108, 7
  %111 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %109, i64 %110
  %112 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %111, align 8
  %113 = and i64 %108, 127
  %114 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %112, i64 %113, i32 0
  %115 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %114, align 8
  %116 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %112, i64 %113, i32 1
  %117 = load i32, i32* %116, align 8
  %118 = icmp eq i32 %117, -1
  br i1 %118, label %119, label %153

119:                                              ; preds = %104
  %120 = load i32, i32* %97, align 4
  %121 = add nsw i32 %120, -1
  store i32 %121, i32* %97, align 4
  %122 = icmp slt i32 %120, 1
  br i1 %122, label %123, label %130

123:                                              ; preds = %119
  store i8 1, i8* %102, align 8
  %124 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %112, i64 %113, i32 2
  %125 = load i32, i32* %124, align 4
  %126 = load i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32)**, i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32)*** %103, align 8
  %127 = getelementptr inbounds i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32)*, i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32)** %126, i64 5
  %128 = load i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32)*, i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32)** %127, align 8
  %129 = call i32 %128(%"class.re2::Regexp::Walker"* %0, %"class.re2::Regexp"* %115, i32 %125) #18
  br label %270

130:                                              ; preds = %119
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #18
  store i8 0, i8* %6, align 1
  %131 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %112, i64 %113, i32 2
  %132 = load i32, i32* %131, align 4
  %133 = load i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i8*)**, i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i8*)*** %98, align 8
  %134 = getelementptr inbounds i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i8*)*, i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i8*)** %133, i64 2
  %135 = load i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i8*)*, i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i8*)** %134, align 8
  %136 = call i32 %135(%"class.re2::Regexp::Walker"* %0, %"class.re2::Regexp"* %115, i32 %132, i8* nonnull %6) #18
  %137 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %112, i64 %113, i32 3
  store i32 %136, i32* %137, align 8
  %138 = load i8, i8* %6, align 1, !range !2
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %140, label %152

140:                                              ; preds = %130
  store i32 0, i32* %116, align 8
  %141 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %112, i64 %113, i32 5
  store i32* null, i32** %141, align 8
  %142 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %115, i64 0, i32 4
  %143 = load i16, i16* %142, align 2
  switch i16 %143, label %146 [
    i16 1, label %144
    i16 0, label %151
  ]

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %112, i64 %113, i32 4
  store i32* %145, i32** %141, align 8
  br label %151

146:                                              ; preds = %140
  %147 = zext i16 %143 to i64
  %148 = shl nuw nsw i64 %147, 2
  %149 = call i8* @_Znam(i64 %148) #19
  %150 = bitcast i32** %141 to i8**
  store i8* %149, i8** %150, align 8
  br label %151

151:                                              ; preds = %140, %146, %144
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #18
  br label %153

152:                                              ; preds = %130
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #18
  br label %270

153:                                              ; preds = %151, %104
  %154 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %115, i64 0, i32 4
  %155 = load i16, i16* %154, align 2
  %156 = icmp eq i16 %155, 0
  br i1 %156, label %157, label %159

157:                                              ; preds = %153
  %158 = load i32, i32* %116, align 8
  br label %251

159:                                              ; preds = %153
  %160 = icmp eq i16 %155, 1
  %161 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %115, i64 0, i32 5
  br i1 %160, label %162, label %164

162:                                              ; preds = %159
  %163 = bitcast %union.anon* %161 to %"class.re2::Regexp"**
  br label %167

164:                                              ; preds = %159
  %165 = getelementptr inbounds %union.anon, %union.anon* %161, i64 0, i32 0
  %166 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %165, align 8
  br label %167

167:                                              ; preds = %162, %164
  %168 = phi %"class.re2::Regexp"** [ %163, %162 ], [ %166, %164 ]
  %169 = load i32, i32* %116, align 8
  %170 = zext i16 %155 to i32
  %171 = icmp slt i32 %169, %170
  br i1 %171, label %172, label %251

172:                                              ; preds = %167
  %173 = icmp sgt i32 %169, 0
  %174 = and i1 %173, %3
  br i1 %174, label %180, label %175

175:                                              ; preds = %172
  %176 = sext i32 %169 to i64
  %177 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %168, i64 %176
  %178 = bitcast %"class.re2::Regexp"** %177 to i64*
  %179 = load i64, i64* %178, align 8
  br label %206

180:                                              ; preds = %172
  %181 = add nsw i32 %169, -1
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %168, i64 %182
  %184 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %183, align 8
  %185 = sext i32 %169 to i64
  %186 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %168, i64 %185
  %187 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %186, align 8
  %188 = icmp eq %"class.re2::Regexp"* %184, %187
  br i1 %188, label %191, label %189

189:                                              ; preds = %180
  %190 = ptrtoint %"class.re2::Regexp"* %187 to i64
  br label %206

191:                                              ; preds = %180
  %192 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %112, i64 %113, i32 5
  %193 = load i32*, i32** %192, align 8
  %194 = getelementptr inbounds i32, i32* %193, i64 %182
  %195 = load i32, i32* %194, align 4
  %196 = load i32 (%"class.re2::Regexp::Walker"*, i32)**, i32 (%"class.re2::Regexp::Walker"*, i32)*** %100, align 8
  %197 = getelementptr inbounds i32 (%"class.re2::Regexp::Walker"*, i32)*, i32 (%"class.re2::Regexp::Walker"*, i32)** %196, i64 4
  %198 = load i32 (%"class.re2::Regexp::Walker"*, i32)*, i32 (%"class.re2::Regexp::Walker"*, i32)** %197, align 8
  %199 = call i32 %198(%"class.re2::Regexp::Walker"* %0, i32 %195) #18
  %200 = load i32*, i32** %192, align 8
  %201 = load i32, i32* %116, align 8
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds i32, i32* %200, i64 %202
  store i32 %199, i32* %203, align 4
  %204 = load i32, i32* %116, align 8
  %205 = add nsw i32 %204, 1
  store i32 %205, i32* %116, align 8
  br label %321

206:                                              ; preds = %189, %175
  %207 = phi i64 [ %179, %175 ], [ %190, %189 ]
  %208 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %112, i64 %113, i32 3
  %209 = load i32, i32* %208, align 8
  %210 = load i64, i64* %50, align 8
  %211 = load i64, i64* %53, align 8
  %212 = sub i64 %210, %211
  %213 = icmp eq i64 %212, 0
  %214 = shl i64 %212, 4
  %215 = add i64 %214, -1
  %216 = select i1 %213, i64 0, i64 %215
  %217 = load i64, i64* %60, align 8
  %218 = load i64, i64* %62, align 8
  %219 = add i64 %218, %217
  %220 = icmp eq i64 %216, %219
  %221 = inttoptr i64 %211 to %"struct.re2::WalkState"**
  %222 = inttoptr i64 %210 to %"struct.re2::WalkState"**
  br i1 %220, label %223, label %229

223:                                              ; preds = %206
  call void @_ZNSt3__15dequeIN3re29WalkStateIiEENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %99) #18
  %224 = load i64, i64* %62, align 8
  %225 = load i64, i64* %60, align 8
  %226 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %52, align 8
  %227 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %49, align 8
  %228 = add i64 %225, %224
  br label %229

229:                                              ; preds = %223, %206
  %230 = phi i64 [ %228, %223 ], [ %219, %206 ]
  %231 = phi %"struct.re2::WalkState"** [ %227, %223 ], [ %222, %206 ]
  %232 = phi %"struct.re2::WalkState"** [ %226, %223 ], [ %221, %206 ]
  %233 = icmp eq %"struct.re2::WalkState"** %231, %232
  br i1 %233, label %241, label %234

234:                                              ; preds = %229
  %235 = lshr i64 %230, 7
  %236 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %232, i64 %235
  %237 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %236, align 8
  %238 = and i64 %230, 127
  %239 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %237, i64 %238
  %240 = bitcast %"struct.re2::WalkState"* %239 to i8*
  br label %241

241:                                              ; preds = %229, %234
  %242 = phi i8* [ %240, %234 ], [ null, %229 ]
  %243 = bitcast i8* %242 to i64*
  store i64 %207, i64* %243, align 8
  %244 = getelementptr inbounds i8, i8* %242, i64 8
  %245 = bitcast i8* %244 to i32*
  store i32 -1, i32* %245, align 8
  %246 = getelementptr inbounds i8, i8* %242, i64 12
  %247 = bitcast i8* %246 to i32*
  store i32 %209, i32* %247, align 4
  %248 = getelementptr inbounds i8, i8* %242, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %248, i8 0, i64 16, i1 false)
  %249 = load i64, i64* %62, align 8
  %250 = add i64 %249, 1
  store i64 %250, i64* %62, align 8
  br label %321

251:                                              ; preds = %157, %167
  %252 = phi i32 [ %158, %157 ], [ %169, %167 ]
  %253 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %112, i64 %113, i32 2
  %254 = load i32, i32* %253, align 4
  %255 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %112, i64 %113, i32 3
  %256 = load i32, i32* %255, align 8
  %257 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %112, i64 %113, i32 5
  %258 = load i32*, i32** %257, align 8
  %259 = load i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i32, i32*, i32)**, i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i32, i32*, i32)*** %101, align 8
  %260 = getelementptr inbounds i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i32, i32*, i32)*, i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i32, i32*, i32)** %259, i64 3
  %261 = load i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i32, i32*, i32)*, i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i32, i32*, i32)** %260, align 8
  %262 = call i32 %261(%"class.re2::Regexp::Walker"* %0, %"class.re2::Regexp"* %115, i32 %254, i32 %256, i32* %258, i32 %252) #18
  %263 = load i16, i16* %154, align 2
  %264 = icmp ugt i16 %263, 1
  br i1 %264, label %265, label %270

265:                                              ; preds = %251
  %266 = load i32*, i32** %257, align 8
  %267 = icmp eq i32* %266, null
  br i1 %267, label %270, label %268

268:                                              ; preds = %265
  %269 = bitcast i32* %266 to i8*
  call void @_ZdaPv(i8* %269) #19
  br label %270

270:                                              ; preds = %152, %251, %268, %265, %123
  %271 = phi i32 [ %129, %123 ], [ %262, %265 ], [ %262, %268 ], [ %262, %251 ], [ %136, %152 ]
  %272 = load i64, i64* %62, align 8
  %273 = load i64, i64* %60, align 8
  %274 = add i64 %272, -1
  store i64 %274, i64* %62, align 8
  %275 = load i64, i64* %50, align 8
  %276 = load i64, i64* %53, align 8
  %277 = sub i64 %275, %276
  %278 = icmp eq i64 %277, 0
  %279 = shl i64 %277, 4
  %280 = add i64 %279, -1
  %281 = select i1 %278, i64 0, i64 %280
  %282 = sub i64 1, %272
  %283 = sub i64 %282, %273
  %284 = add i64 %283, %281
  %285 = icmp ult i64 %284, 256
  br i1 %285, label %294, label %286

286:                                              ; preds = %270
  %287 = inttoptr i64 %275 to %"struct.re2::WalkState"**
  %288 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %287, i64 -1
  %289 = bitcast %"struct.re2::WalkState"** %288 to i8**
  %290 = load i8*, i8** %289, align 8
  call void @_ZdlPv(i8* %290) #19
  %291 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %49, align 8
  %292 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %291, i64 -1
  store %"struct.re2::WalkState"** %292, %"struct.re2::WalkState"*** %49, align 8
  %293 = load i64, i64* %62, align 8
  br label %294

294:                                              ; preds = %270, %286
  %295 = phi i64 [ %274, %270 ], [ %293, %286 ]
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %323, label %297

297:                                              ; preds = %294
  %298 = load i64, i64* %60, align 8
  %299 = add i64 %295, -1
  %300 = add i64 %299, %298
  %301 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %52, align 8
  %302 = lshr i64 %300, 7
  %303 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %301, i64 %302
  %304 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %303, align 8
  %305 = and i64 %300, 127
  %306 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %304, i64 %305, i32 5
  %307 = load i32*, i32** %306, align 8
  %308 = icmp eq i32* %307, null
  br i1 %308, label %314, label %309

309:                                              ; preds = %297
  %310 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %304, i64 %305, i32 1
  %311 = load i32, i32* %310, align 8
  %312 = sext i32 %311 to i64
  %313 = getelementptr inbounds i32, i32* %307, i64 %312
  br label %316

314:                                              ; preds = %297
  %315 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %304, i64 %305, i32 4
  br label %316

316:                                              ; preds = %314, %309
  %317 = phi i32* [ %315, %314 ], [ %313, %309 ]
  store i32 %271, i32* %317, align 4
  %318 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %304, i64 %305, i32 1
  %319 = load i32, i32* %318, align 8
  %320 = add nsw i32 %319, 1
  store i32 %320, i32* %318, align 8
  br label %321

321:                                              ; preds = %191, %241, %316
  %322 = load i64, i64* %62, align 8
  br label %104

323:                                              ; preds = %294, %8
  %324 = phi i32 [ %2, %8 ], [ %271, %294 ]
  ret i32 %324
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN3re29WalkStateIiEENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.re2::WalkState"*, align 8
  %3 = alloca %"struct.re2::WalkState"*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.123", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 127
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -128
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  %12 = bitcast %"struct.re2::WalkState"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %11, i64 1
  store %"struct.re2::WalkState"** %14, %"struct.re2::WalkState"*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %17, align 8
  %19 = icmp eq %"struct.re2::WalkState"** %16, %18
  %20 = ptrtoint %"struct.re2::WalkState"** %18 to i64
  %21 = bitcast %"struct.re2::WalkState"** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %23, align 8
  %25 = icmp ugt %"struct.re2::WalkState"** %14, %24
  %26 = ptrtoint %"struct.re2::WalkState"** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"struct.re2::WalkState"** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %14, i64 %32
  %34 = ptrtoint %"struct.re2::WalkState"** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"struct.re2::WalkState"** %33 to i8*
  %40 = bitcast %"struct.re2::WalkState"** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #18
  %41 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"struct.re2::WalkState"** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %33, i64 %36
  store %"struct.re2::WalkState"** %44, %"struct.re2::WalkState"*** %15, align 8
  %45 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %43, i64 %32
  store %"struct.re2::WalkState"** %45, %"struct.re2::WalkState"*** %10, align 8
  %46 = bitcast %"struct.re2::WalkState"** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"struct.re2::WalkState"*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #21
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #19
  %60 = bitcast i8* %59 to %"struct.re2::WalkState"**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %60, i64 %57
  %63 = ptrtoint %"struct.re2::WalkState"** %62 to i64
  %64 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %60, i64 %53
  %65 = ptrtoint %"struct.re2::WalkState"** %64 to i64
  %66 = ptrtoint %"struct.re2::WalkState"** %14 to i64
  %67 = ptrtoint %"struct.re2::WalkState"** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"struct.re2::WalkState"** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"struct.re2::WalkState"** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"struct.re2::WalkState"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %79, i64 1
  %87 = ptrtoint %"struct.re2::WalkState"** %86 to i64
  %88 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !54

91:                                               ; preds = %78
  %92 = ptrtoint %"struct.re2::WalkState"** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"struct.re2::WalkState"** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"struct.re2::WalkState"** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"struct.re2::WalkState"** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"struct.re2::WalkState"** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"struct.re2::WalkState"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 1
  %106 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 1
  %107 = bitcast %"struct.re2::WalkState"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.re2::WalkState"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 2
  %111 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 2
  %112 = bitcast %"struct.re2::WalkState"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.re2::WalkState"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 3
  %116 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 3
  %117 = bitcast %"struct.re2::WalkState"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.re2::WalkState"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 4
  %121 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 4
  %122 = bitcast %"struct.re2::WalkState"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.re2::WalkState"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 5
  %126 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 5
  %127 = bitcast %"struct.re2::WalkState"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.re2::WalkState"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 6
  %131 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 6
  %132 = bitcast %"struct.re2::WalkState"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"struct.re2::WalkState"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 7
  %136 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 7
  %137 = bitcast %"struct.re2::WalkState"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.re2::WalkState"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 8
  %141 = ptrtoint %"struct.re2::WalkState"** %140 to i64
  %142 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 8
  %143 = icmp eq %"struct.re2::WalkState"** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"struct.re2::WalkState"** %70 to i64
  %146 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"struct.re2::WalkState"** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"struct.re2::WalkState"*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"struct.re2::WalkState"*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"struct.re2::WalkState"** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"struct.re2::WalkState"** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #19
  %156 = bitcast %"struct.re2::WalkState"*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %15, align 8
  %161 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %160, i64 1
  store %"struct.re2::WalkState"** %161, %"struct.re2::WalkState"*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"struct.re2::WalkState"*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"struct.re2::WalkState"*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"struct.re2::WalkState"*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"struct.re2::WalkState"**
  %181 = inttoptr i64 %169 to %"struct.re2::WalkState"**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"struct.re2::WalkState"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #18
  %186 = tail call i8* @_Znwm(i64 4096) #19
  %187 = bitcast %"struct.re2::WalkState"** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPN3re29WalkStateIiEENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer"* %163, %"struct.re2::WalkState"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #18
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"struct.re2::WalkState"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #18
  %190 = tail call i8* @_Znwm(i64 4096) #19
  %191 = bitcast %"struct.re2::WalkState"** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPN3re29WalkStateIiEENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer"* %163, %"struct.re2::WalkState"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #18
  %192 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %167, align 8
  %193 = bitcast %"struct.re2::WalkState"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %192, i64 1
  store %"struct.re2::WalkState"** %195, %"struct.re2::WalkState"*** %167, align 8
  %196 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %164, align 8
  %197 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %172, align 8
  %198 = icmp eq %"struct.re2::WalkState"** %196, %197
  %199 = ptrtoint %"struct.re2::WalkState"** %197 to i64
  %200 = bitcast %"struct.re2::WalkState"** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %202, align 8
  %204 = icmp ugt %"struct.re2::WalkState"** %195, %203
  %205 = ptrtoint %"struct.re2::WalkState"** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"struct.re2::WalkState"** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %195, i64 %211
  %213 = ptrtoint %"struct.re2::WalkState"** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"struct.re2::WalkState"** %212 to i8*
  %219 = bitcast %"struct.re2::WalkState"** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #18
  %220 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"struct.re2::WalkState"** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %212, i64 %215
  store %"struct.re2::WalkState"** %223, %"struct.re2::WalkState"*** %164, align 8
  %224 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %222, i64 %211
  store %"struct.re2::WalkState"** %224, %"struct.re2::WalkState"*** %167, align 8
  %225 = bitcast %"struct.re2::WalkState"** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #21
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #19
  %237 = bitcast i8* %236 to %"struct.re2::WalkState"**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %237, i64 %234
  %240 = ptrtoint %"struct.re2::WalkState"** %239 to i64
  %241 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %237, i64 %230
  %242 = ptrtoint %"struct.re2::WalkState"** %241 to i64
  %243 = ptrtoint %"struct.re2::WalkState"** %195 to i64
  %244 = ptrtoint %"struct.re2::WalkState"** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"struct.re2::WalkState"** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"struct.re2::WalkState"** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"struct.re2::WalkState"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %256, i64 1
  %264 = ptrtoint %"struct.re2::WalkState"** %263 to i64
  %265 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !55

268:                                              ; preds = %255
  %269 = ptrtoint %"struct.re2::WalkState"** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"struct.re2::WalkState"** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"struct.re2::WalkState"** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"struct.re2::WalkState"** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"struct.re2::WalkState"** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"struct.re2::WalkState"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 1
  %283 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 1
  %284 = bitcast %"struct.re2::WalkState"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"struct.re2::WalkState"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 2
  %288 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 2
  %289 = bitcast %"struct.re2::WalkState"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"struct.re2::WalkState"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 3
  %293 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 3
  %294 = bitcast %"struct.re2::WalkState"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"struct.re2::WalkState"** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 4
  %298 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 4
  %299 = bitcast %"struct.re2::WalkState"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"struct.re2::WalkState"** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 5
  %303 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 5
  %304 = bitcast %"struct.re2::WalkState"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"struct.re2::WalkState"** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 6
  %308 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 6
  %309 = bitcast %"struct.re2::WalkState"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"struct.re2::WalkState"** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 7
  %313 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 7
  %314 = bitcast %"struct.re2::WalkState"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"struct.re2::WalkState"** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 8
  %318 = ptrtoint %"struct.re2::WalkState"** %317 to i64
  %319 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 8
  %320 = icmp eq %"struct.re2::WalkState"** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"struct.re2::WalkState"** %247 to i64
  %323 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"struct.re2::WalkState"** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"struct.re2::WalkState"** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"struct.re2::WalkState"** %325 to i8*
  call void @_ZdlPv(i8* %330) #19
  %331 = bitcast %"struct.re2::WalkState"*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %164, align 8
  %336 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %335, i64 1
  store %"struct.re2::WalkState"** %336, %"struct.re2::WalkState"*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.123"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #18
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.123", %"struct.std::__1::__split_buffer.123"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.123", %"struct.std::__1::__split_buffer.123"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.123", %"struct.std::__1::__split_buffer.123"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.123", %"struct.std::__1::__split_buffer.123"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.123"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"struct.re2::WalkState"** null, %"struct.re2::WalkState"*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.32"** %342 to %"class.std::__1::__compressed_pair.29"**
  store %"class.std::__1::__compressed_pair.29"* %346, %"class.std::__1::__compressed_pair.29"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #21
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #19
  %354 = bitcast i8* %353 to %"struct.re2::WalkState"**
  %355 = bitcast %"struct.std::__1::__split_buffer.123"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %354, i64 %171
  store %"struct.re2::WalkState"** %356, %"struct.re2::WalkState"*** %340, align 8
  store %"struct.re2::WalkState"** %356, %"struct.re2::WalkState"*** %339, align 8
  %357 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %354, i64 %345
  store %"struct.re2::WalkState"** %357, %"struct.re2::WalkState"*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #19
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"struct.re2::WalkState"** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"struct.re2::WalkState"** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"struct.re2::WalkState"** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %356, i64 %370
  store %"struct.re2::WalkState"** %371, %"struct.re2::WalkState"*** %340, align 8
  store %"struct.re2::WalkState"** %371, %"struct.re2::WalkState"*** %339, align 8
  %372 = ptrtoint %"struct.re2::WalkState"** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #21
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.123"* %4 to i64*
  %382 = bitcast %"struct.re2::WalkState"*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #19
  %386 = bitcast i8* %385 to %"struct.re2::WalkState"**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %386, i64 %383
  %389 = ptrtoint %"struct.re2::WalkState"** %388 to i64
  %390 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %386, i64 %377
  %391 = ptrtoint %"struct.re2::WalkState"** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"struct.re2::WalkState"*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"struct.re2::WalkState"*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #19
  %394 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %164, align 8
  %395 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %167, align 8
  %396 = ptrtoint %"struct.re2::WalkState"** %395 to i64
  %397 = ptrtoint %"struct.re2::WalkState"** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"struct.re2::WalkState"** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"struct.re2::WalkState"** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"struct.re2::WalkState"** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"struct.re2::WalkState"** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %406, i64 1
  store %"struct.re2::WalkState"** %408, %"struct.re2::WalkState"*** %340, align 8
  %409 = icmp eq %"struct.re2::WalkState"** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"struct.re2::WalkState"** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.123"* %4 to i64*
  %413 = bitcast %"struct.re2::WalkState"*** %339 to i64*
  %414 = bitcast %"struct.re2::WalkState"*** %340 to i64*
  %415 = bitcast %"struct.re2::WalkState"*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"struct.re2::WalkState"** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.123"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"struct.re2::WalkState"*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"struct.re2::WalkState"*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"struct.re2::WalkState"*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"struct.re2::WalkState"**
  %441 = inttoptr i64 %434 to %"struct.re2::WalkState"**
  %442 = icmp eq %"struct.re2::WalkState"** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %441, i64 -1
  %445 = ptrtoint %"struct.re2::WalkState"** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %441, i64 %448
  store %"struct.re2::WalkState"** %449, %"struct.re2::WalkState"*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #19
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #18
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"struct.re2::WalkState"** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPN3re29WalkStateIiEERNS_9allocatorIS4_EEE10push_frontERKS4_(%"struct.std::__1::__split_buffer.123"* nonnull %4, %"struct.re2::WalkState"** dereferenceable(8) %457)
  %458 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %167, align 8
  %459 = icmp eq %"struct.re2::WalkState"** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN3re29WalkStateIiEENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer"*, %"struct.re2::WalkState"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %5, align 8
  %7 = icmp eq %"struct.re2::WalkState"** %4, %6
  %8 = ptrtoint %"struct.re2::WalkState"** %6 to i64
  %9 = bitcast %"struct.re2::WalkState"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %13, align 8
  %15 = icmp ugt %"struct.re2::WalkState"** %12, %14
  %16 = ptrtoint %"struct.re2::WalkState"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.re2::WalkState"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %12, i64 %22
  %24 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.re2::WalkState"** %23 to i8*
  %30 = bitcast %"struct.re2::WalkState"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #18
  %31 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"struct.re2::WalkState"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %23, i64 %26
  store %"struct.re2::WalkState"** %34, %"struct.re2::WalkState"*** %3, align 8
  %35 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %33, i64 %22
  store %"struct.re2::WalkState"** %35, %"struct.re2::WalkState"*** %11, align 8
  %36 = bitcast %"struct.re2::WalkState"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"struct.re2::WalkState"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #21
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #19
  %50 = bitcast i8* %49 to %"struct.re2::WalkState"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %50, i64 %47
  %53 = ptrtoint %"struct.re2::WalkState"** %52 to i64
  %54 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %50, i64 %43
  %55 = ptrtoint %"struct.re2::WalkState"** %54 to i64
  %56 = ptrtoint %"struct.re2::WalkState"** %12 to i64
  %57 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.re2::WalkState"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"struct.re2::WalkState"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"struct.re2::WalkState"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %69, i64 1
  %77 = ptrtoint %"struct.re2::WalkState"** %76 to i64
  %78 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !56

81:                                               ; preds = %68
  %82 = ptrtoint %"struct.re2::WalkState"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"struct.re2::WalkState"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"struct.re2::WalkState"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"struct.re2::WalkState"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"struct.re2::WalkState"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"struct.re2::WalkState"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 1
  %96 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 1
  %97 = bitcast %"struct.re2::WalkState"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"struct.re2::WalkState"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 2
  %101 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 2
  %102 = bitcast %"struct.re2::WalkState"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.re2::WalkState"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 3
  %106 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 3
  %107 = bitcast %"struct.re2::WalkState"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.re2::WalkState"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 4
  %111 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 4
  %112 = bitcast %"struct.re2::WalkState"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.re2::WalkState"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 5
  %116 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 5
  %117 = bitcast %"struct.re2::WalkState"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.re2::WalkState"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 6
  %121 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 6
  %122 = bitcast %"struct.re2::WalkState"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.re2::WalkState"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 7
  %126 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 7
  %127 = bitcast %"struct.re2::WalkState"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.re2::WalkState"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 8
  %131 = ptrtoint %"struct.re2::WalkState"** %130 to i64
  %132 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 8
  %133 = icmp eq %"struct.re2::WalkState"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"struct.re2::WalkState"** %60 to i64
  %136 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"struct.re2::WalkState"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"struct.re2::WalkState"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"struct.re2::WalkState"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"struct.re2::WalkState"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"struct.re2::WalkState"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #19
  %146 = bitcast %"struct.re2::WalkState"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"struct.re2::WalkState"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %153 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %152, i64 1
  store %"struct.re2::WalkState"** %153, %"struct.re2::WalkState"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN3re29WalkStateIiEENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer"*, %"struct.re2::WalkState"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %5, align 8
  %7 = icmp eq %"struct.re2::WalkState"** %4, %6
  %8 = ptrtoint %"struct.re2::WalkState"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %12, align 8
  %14 = icmp ult %"struct.re2::WalkState"** %11, %13
  %15 = bitcast %"struct.re2::WalkState"*** %12 to i64*
  %16 = ptrtoint %"struct.re2::WalkState"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.re2::WalkState"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %11, i64 %22
  %24 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %23, i64 %29
  %31 = bitcast %"struct.re2::WalkState"** %30 to i8*
  %32 = bitcast %"struct.re2::WalkState"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #18
  %33 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.re2::WalkState"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.re2::WalkState"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.re2::WalkState"** %36, %"struct.re2::WalkState"*** %3, align 8
  %37 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %35, i64 %22
  store %"struct.re2::WalkState"** %37, %"struct.re2::WalkState"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #21
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #19
  %51 = bitcast i8* %50 to %"struct.re2::WalkState"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %51, i64 %48
  %54 = ptrtoint %"struct.re2::WalkState"** %53 to i64
  %55 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %51, i64 %43
  %56 = ptrtoint %"struct.re2::WalkState"** %55 to i64
  %57 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %58 = ptrtoint %"struct.re2::WalkState"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.re2::WalkState"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.re2::WalkState"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.re2::WalkState"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %70, i64 1
  %78 = ptrtoint %"struct.re2::WalkState"** %77 to i64
  %79 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !57

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.re2::WalkState"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.re2::WalkState"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.re2::WalkState"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.re2::WalkState"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.re2::WalkState"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.re2::WalkState"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 1
  %97 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 1
  %98 = bitcast %"struct.re2::WalkState"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.re2::WalkState"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 2
  %102 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 2
  %103 = bitcast %"struct.re2::WalkState"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.re2::WalkState"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 3
  %107 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 3
  %108 = bitcast %"struct.re2::WalkState"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.re2::WalkState"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 4
  %112 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 4
  %113 = bitcast %"struct.re2::WalkState"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.re2::WalkState"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 5
  %117 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 5
  %118 = bitcast %"struct.re2::WalkState"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.re2::WalkState"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 6
  %122 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 6
  %123 = bitcast %"struct.re2::WalkState"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.re2::WalkState"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 7
  %127 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 7
  %128 = bitcast %"struct.re2::WalkState"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.re2::WalkState"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 8
  %132 = ptrtoint %"struct.re2::WalkState"** %131 to i64
  %133 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 8
  %134 = icmp eq %"struct.re2::WalkState"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.re2::WalkState"** %61 to i64
  %137 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.re2::WalkState"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.re2::WalkState"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.re2::WalkState"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.re2::WalkState"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.re2::WalkState"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #19
  %146 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.re2::WalkState"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %148, i64 -1
  %150 = bitcast %"struct.re2::WalkState"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.re2::WalkState"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %154 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %153, i64 -1
  store %"struct.re2::WalkState"** %154, %"struct.re2::WalkState"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN3re29WalkStateIiEERNS_9allocatorIS4_EEE10push_frontERKS4_(%"struct.std::__1::__split_buffer.123"*, %"struct.re2::WalkState"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.123", %"struct.std::__1::__split_buffer.123"* %0, i64 0, i32 1
  %4 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.123", %"struct.std::__1::__split_buffer.123"* %0, i64 0, i32 0
  %6 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %5, align 8
  %7 = icmp eq %"struct.re2::WalkState"** %4, %6
  %8 = ptrtoint %"struct.re2::WalkState"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.123", %"struct.std::__1::__split_buffer.123"* %0, i64 0, i32 2
  %11 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.123", %"struct.std::__1::__split_buffer.123"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %12, align 8
  %14 = icmp ult %"struct.re2::WalkState"** %11, %13
  %15 = bitcast %"struct.re2::WalkState"*** %12 to i64*
  %16 = ptrtoint %"struct.re2::WalkState"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.re2::WalkState"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %11, i64 %22
  %24 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %23, i64 %29
  %31 = bitcast %"struct.re2::WalkState"** %30 to i8*
  %32 = bitcast %"struct.re2::WalkState"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #18
  %33 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.re2::WalkState"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.re2::WalkState"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.re2::WalkState"** %36, %"struct.re2::WalkState"*** %3, align 8
  %37 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %35, i64 %22
  store %"struct.re2::WalkState"** %37, %"struct.re2::WalkState"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.123"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #21
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #19
  %51 = bitcast i8* %50 to %"struct.re2::WalkState"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %51, i64 %48
  %54 = ptrtoint %"struct.re2::WalkState"** %53 to i64
  %55 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %51, i64 %43
  %56 = ptrtoint %"struct.re2::WalkState"** %55 to i64
  %57 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %58 = ptrtoint %"struct.re2::WalkState"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.re2::WalkState"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.re2::WalkState"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.re2::WalkState"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %70, i64 1
  %78 = ptrtoint %"struct.re2::WalkState"** %77 to i64
  %79 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !58

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.re2::WalkState"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.re2::WalkState"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.re2::WalkState"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.re2::WalkState"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.re2::WalkState"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.re2::WalkState"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 1
  %97 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 1
  %98 = bitcast %"struct.re2::WalkState"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.re2::WalkState"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 2
  %102 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 2
  %103 = bitcast %"struct.re2::WalkState"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.re2::WalkState"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 3
  %107 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 3
  %108 = bitcast %"struct.re2::WalkState"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.re2::WalkState"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 4
  %112 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 4
  %113 = bitcast %"struct.re2::WalkState"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.re2::WalkState"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 5
  %117 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 5
  %118 = bitcast %"struct.re2::WalkState"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.re2::WalkState"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 6
  %122 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 6
  %123 = bitcast %"struct.re2::WalkState"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.re2::WalkState"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 7
  %127 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 7
  %128 = bitcast %"struct.re2::WalkState"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.re2::WalkState"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 8
  %132 = ptrtoint %"struct.re2::WalkState"** %131 to i64
  %133 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 8
  %134 = icmp eq %"struct.re2::WalkState"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.re2::WalkState"** %61 to i64
  %137 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.re2::WalkState"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.re2::WalkState"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.re2::WalkState"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.re2::WalkState"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.re2::WalkState"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #19
  %146 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.re2::WalkState"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %148, i64 -1
  %150 = bitcast %"struct.re2::WalkState"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.re2::WalkState"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %154 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %153, i64 -1
  store %"struct.re2::WalkState"** %154, %"struct.re2::WalkState"*** %3, align 8
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctpop.i32(i32) #5

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #17

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { cold noreturn nounwind }
attributes #15 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nofree nounwind readonly }
attributes #18 = { nounwind }
attributes #19 = { builtin nounwind }
attributes #20 = { cold nounwind }
attributes #21 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__16__treeINS_12__value_typeIPN3re26RegexpEiEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISO_EEEEEEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16__treeINS_12__value_typeIPN3re26RegexpEiEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISO_EEEEEEDpOT_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__16__treeINS_12__value_typeIPN3re26RegexpEiEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISO_EEEEEEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16__treeINS_12__value_typeIPN3re26RegexpEiEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISO_EEEEEEDpOT_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__16__treeINS_12__value_typeIPN3re26RegexpEiEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISO_EEEEEEDpOT_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__16__treeINS_12__value_typeIPN3re26RegexpEiEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISO_EEEEEEDpOT_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__16__treeINS_12__value_typeIPN3re26RegexpEiEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISO_EEEEEEDpOT_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__16__treeINS_12__value_typeIPN3re26RegexpEiEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISO_EEEEEEDpOT_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNSt3__16__treeINS_12__value_typeIPN3re26RegexpEiEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISO_EEEEEEDpOT_: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__16__treeINS_12__value_typeIPN3re26RegexpEiEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISO_EEEEEEDpOT_"}
!18 = !{i32 0, i32 33}
!19 = !{!20}
!20 = distinct !{!20, !21}
!21 = distinct !{!21, !"LVerDomain"}
!22 = !{!23}
!23 = distinct !{!23, !21}
!24 = distinct !{!24, !25}
!25 = !{!"llvm.loop.isvectorized", i32 1}
!26 = distinct !{!26, !27}
!27 = !{!"llvm.loop.unroll.disable"}
!28 = distinct !{!28, !27}
!29 = distinct !{!29, !25}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN3re212RegexpStatus8CodeTextENS_16RegexpStatusCodeE: argument 0"}
!32 = distinct !{!32, !"_ZN3re212RegexpStatus8CodeTextENS_16RegexpStatusCodeE"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZN3re212RegexpStatus8CodeTextENS_16RegexpStatusCodeE: argument 0"}
!35 = distinct !{!35, !"_ZN3re212RegexpStatus8CodeTextENS_16RegexpStatusCodeE"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZNSt3__16__treeIN3re29RuneRangeENS1_13RuneRangeLessENS_9allocatorIS2_EEE16__construct_nodeIJS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS4_ISB_EEEEEEDpOT_: argument 0"}
!38 = distinct !{!38, !"_ZNSt3__16__treeIN3re29RuneRangeENS1_13RuneRangeLessENS_9allocatorIS2_EEE16__construct_nodeIJS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS4_ISB_EEEEEEDpOT_"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNSt3__16__treeIN3re29RuneRangeENS1_13RuneRangeLessENS_9allocatorIS2_EEE16__construct_nodeIJS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS4_ISB_EEEEEEDpOT_: argument 0"}
!41 = distinct !{!41, !"_ZNSt3__16__treeIN3re29RuneRangeENS1_13RuneRangeLessENS_9allocatorIS2_EEE16__construct_nodeIJS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS4_ISB_EEEEEEDpOT_"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNSt3__16__treeIN3re29RuneRangeENS1_13RuneRangeLessENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS4_ISD_EEEEEEDpOT_: argument 0"}
!44 = distinct !{!44, !"_ZNSt3__16__treeIN3re29RuneRangeENS1_13RuneRangeLessENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS4_ISD_EEEEEEDpOT_"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZNSt3__16__treeIN3re29RuneRangeENS1_13RuneRangeLessENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS4_ISD_EEEEEEDpOT_: argument 0"}
!47 = distinct !{!47, !"_ZNSt3__16__treeIN3re29RuneRangeENS1_13RuneRangeLessENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS4_ISD_EEEEEEDpOT_"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISR_EEEEEEDpOT_: argument 0"}
!50 = distinct !{!50, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISR_EEEEEEDpOT_"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZNSt3__16__treeINS_12__value_typeIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS5_IS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISQ_EEEEEEDpOT_: argument 0"}
!53 = distinct !{!53, !"_ZNSt3__16__treeINS_12__value_typeIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS5_IS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISQ_EEEEEEDpOT_"}
!54 = distinct !{!54, !27}
!55 = distinct !{!55, !27}
!56 = distinct !{!56, !27}
!57 = distinct !{!57, !27}
!58 = distinct !{!58, !27}
