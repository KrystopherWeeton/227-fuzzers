; ModuleID = '../../base/util/memory_pressure/system_memory_pressure_evaluator.cc'
source_filename = "../../base/util/memory_pressure/system_memory_pressure_evaluator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.util::SystemMemoryPressureEvaluator" = type { i32 (...)**, i32, %"class.std::__1::unique_ptr.0" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.util::MemoryPressureVoter"* }
%"class.util::MemoryPressureVoter" = type { i32 (...)** }
%"class.util::MultiSourceMemoryPressureMonitor" = type { %"class.base::MemoryPressureMonitor", %"class.util::MemoryPressureVoteAggregator::Delegate", i32, %"class.base::RepeatingCallback", %"class.util::MemoryPressureVoteAggregator", %"class.std::__1::unique_ptr", %"class.base::RepeatingTimer", %"class.base::TimeTicks", %"class.util::MemoryPressureLevelReporter" }
%"class.base::MemoryPressureMonitor" = type { i32 (...)** }
%"class.util::MemoryPressureVoteAggregator::Delegate" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.util::MemoryPressureVoteAggregator" = type { i32, %"class.util::MemoryPressureVoteAggregator::Delegate"*, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [3 x i64] }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.util::SystemMemoryPressureEvaluator"* }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback.17" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.8, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.8 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.9" }>
%"class.base::RefCountedThreadSafe.9" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.11", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.11" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.12" }
%"struct.std::__1::atomic.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl.15" }
%"struct.std::__1::__cxx_atomic_impl.15" = type { %"struct.std::__1::__cxx_atomic_base_impl.16" }
%"struct.std::__1::__cxx_atomic_base_impl.16" = type { i8 }
%"class.base::RepeatingCallback.17" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.util::MemoryPressureLevelReporter" = type { i32, %"class.base::TimeTicks", %"struct.std::__1::array.18", %"class.base::OneShotTimer" }
%"struct.std::__1::array.18" = type { [3 x %"class.base::TimeDelta"] }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }

@_ZTVN4util29SystemMemoryPressureEvaluatorE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.util::SystemMemoryPressureEvaluator"*)* @_ZN4util29SystemMemoryPressureEvaluatorD2Ev to i8*), i8* bitcast (void (%"class.util::SystemMemoryPressureEvaluator"*)* @_ZN4util29SystemMemoryPressureEvaluatorD0Ev to i8*)] }, align 8

@_ZN4util29SystemMemoryPressureEvaluatorC1ENSt3__110unique_ptrINS_19MemoryPressureVoterENS1_14default_deleteIS3_EEEE = hidden unnamed_addr alias void (%"class.util::SystemMemoryPressureEvaluator"*, %"class.util::MemoryPressureVoter"*), void (%"class.util::SystemMemoryPressureEvaluator"*, %"class.util::MemoryPressureVoter"*)* @_ZN4util29SystemMemoryPressureEvaluatorC2ENSt3__110unique_ptrINS_19MemoryPressureVoterENS1_14default_deleteIS3_EEEE
@_ZN4util29SystemMemoryPressureEvaluatorD1Ev = hidden unnamed_addr alias void (%"class.util::SystemMemoryPressureEvaluator"*), void (%"class.util::SystemMemoryPressureEvaluator"*)* @_ZN4util29SystemMemoryPressureEvaluatorD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.util::SystemMemoryPressureEvaluator"* @_ZN4util29SystemMemoryPressureEvaluator28CreateDefaultSystemEvaluatorEPNS_32MultiSourceMemoryPressureMonitorE(%"class.util::MultiSourceMemoryPressureMonitor"* nocapture readnone) local_unnamed_addr #0 align 2 {
  ret %"class.util::SystemMemoryPressureEvaluator"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4util29SystemMemoryPressureEvaluatorC2ENSt3__110unique_ptrINS_19MemoryPressureVoterENS1_14default_deleteIS3_EEEE(%"class.util::SystemMemoryPressureEvaluator"* nocapture, %"class.util::MemoryPressureVoter"*) unnamed_addr #1 align 2 {
  %3 = ptrtoint %"class.util::MemoryPressureVoter"* %1 to i64
  %4 = getelementptr inbounds %"class.util::SystemMemoryPressureEvaluator", %"class.util::SystemMemoryPressureEvaluator"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4util29SystemMemoryPressureEvaluatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.util::SystemMemoryPressureEvaluator", %"class.util::SystemMemoryPressureEvaluator"* %0, i64 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.util::SystemMemoryPressureEvaluator", %"class.util::SystemMemoryPressureEvaluator"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__1::unique_ptr.0"* %6 to i64*
  store i64 %3, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4util29SystemMemoryPressureEvaluatorD2Ev(%"class.util::SystemMemoryPressureEvaluator"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.util::SystemMemoryPressureEvaluator", %"class.util::SystemMemoryPressureEvaluator"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4util29SystemMemoryPressureEvaluatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.util::SystemMemoryPressureEvaluator", %"class.util::SystemMemoryPressureEvaluator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.util::MemoryPressureVoter"*, %"class.util::MemoryPressureVoter"** %3, align 8
  store %"class.util::MemoryPressureVoter"* null, %"class.util::MemoryPressureVoter"** %3, align 8
  %5 = icmp eq %"class.util::MemoryPressureVoter"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.util::MemoryPressureVoter"* %4 to void (%"class.util::MemoryPressureVoter"*)***
  %8 = load void (%"class.util::MemoryPressureVoter"*)**, void (%"class.util::MemoryPressureVoter"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.util::MemoryPressureVoter"*)*, void (%"class.util::MemoryPressureVoter"*)** %8, i64 1
  %10 = load void (%"class.util::MemoryPressureVoter"*)*, void (%"class.util::MemoryPressureVoter"*)** %9, align 8
  tail call void %10(%"class.util::MemoryPressureVoter"* nonnull %4) #4
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4util29SystemMemoryPressureEvaluatorD0Ev(%"class.util::SystemMemoryPressureEvaluator"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.util::SystemMemoryPressureEvaluator", %"class.util::SystemMemoryPressureEvaluator"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4util29SystemMemoryPressureEvaluatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.util::SystemMemoryPressureEvaluator", %"class.util::SystemMemoryPressureEvaluator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.util::MemoryPressureVoter"*, %"class.util::MemoryPressureVoter"** %3, align 8
  store %"class.util::MemoryPressureVoter"* null, %"class.util::MemoryPressureVoter"** %3, align 8
  %5 = icmp eq %"class.util::MemoryPressureVoter"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.util::MemoryPressureVoter"* %4 to void (%"class.util::MemoryPressureVoter"*)***
  %8 = load void (%"class.util::MemoryPressureVoter"*)**, void (%"class.util::MemoryPressureVoter"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.util::MemoryPressureVoter"*)*, void (%"class.util::MemoryPressureVoter"*)** %8, i64 1
  %10 = load void (%"class.util::MemoryPressureVoter"*)*, void (%"class.util::MemoryPressureVoter"*)** %9, align 8
  tail call void %10(%"class.util::MemoryPressureVoter"* nonnull %4) #4
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.util::SystemMemoryPressureEvaluator"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4util29SystemMemoryPressureEvaluator14SetCurrentVoteEN4base22MemoryPressureListener19MemoryPressureLevelE(%"class.util::SystemMemoryPressureEvaluator"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.util::SystemMemoryPressureEvaluator", %"class.util::SystemMemoryPressureEvaluator"* %0, i64 0, i32 1
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4util29SystemMemoryPressureEvaluator15SendCurrentVoteEb(%"class.util::SystemMemoryPressureEvaluator"* nocapture readonly, i1 zeroext) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.util::SystemMemoryPressureEvaluator", %"class.util::SystemMemoryPressureEvaluator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.util::MemoryPressureVoter"*, %"class.util::MemoryPressureVoter"** %3, align 8
  %5 = getelementptr inbounds %"class.util::SystemMemoryPressureEvaluator", %"class.util::SystemMemoryPressureEvaluator"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = bitcast %"class.util::MemoryPressureVoter"* %4 to void (%"class.util::MemoryPressureVoter"*, i32, i1)***
  %8 = load void (%"class.util::MemoryPressureVoter"*, i32, i1)**, void (%"class.util::MemoryPressureVoter"*, i32, i1)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.util::MemoryPressureVoter"*, i32, i1)*, void (%"class.util::MemoryPressureVoter"*, i32, i1)** %8, i64 2
  %10 = load void (%"class.util::MemoryPressureVoter"*, i32, i1)*, void (%"class.util::MemoryPressureVoter"*, i32, i1)** %9, align 8
  tail call void %10(%"class.util::MemoryPressureVoter"* %4, i32 %6, i1 zeroext %1) #4
  ret void
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
