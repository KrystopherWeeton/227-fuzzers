; ModuleID = '../../third_party/webrtc/test/fake_vp8_decoder.cc'
source_filename = "../../third_party/webrtc/test/fake_vp8_decoder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.rtc::scoped_refptr.54" = type { %"class.webrtc::VideoFrameBuffer"* }
%"class.webrtc::VideoFrameBuffer" = type { %"class.rtc::RefCountInterface" }
%"class.rtc::RefCountInterface" = type { i32 (...)** }
%union.anon.19 = type { %"struct.webrtc::HdrMetadata" }
%"struct.webrtc::HdrMetadata" = type { %"struct.webrtc::HdrMasteringMetadata", i32, i32 }
%"struct.webrtc::HdrMasteringMetadata" = type { %"struct.webrtc::HdrMasteringMetadata::Chromaticity", %"struct.webrtc::HdrMasteringMetadata::Chromaticity", %"struct.webrtc::HdrMasteringMetadata::Chromaticity", %"struct.webrtc::HdrMasteringMetadata::Chromaticity", float, float }
%"struct.webrtc::HdrMasteringMetadata::Chromaticity" = type { float, float }
%union.anon = type { i32 }
%union.anon.59 = type { %"struct.webrtc::VideoFrame::UpdateRect" }
%"struct.webrtc::VideoFrame::UpdateRect" = type { i32, i32, i32, i32 }
%"class.webrtc::RtpPacketInfos" = type { %"class.rtc::scoped_refptr.25" }
%"class.rtc::scoped_refptr.25" = type { %"class.webrtc::RtpPacketInfos::Data"* }
%"class.webrtc::RtpPacketInfos::Data" = type { %"class.rtc::RefCountedBase.base", %"class.std::__1::vector" }
%"class.rtc::RefCountedBase.base" = type <{ i32 (...)**, %"class.webrtc::webrtc_impl::RefCounter" }>
%"class.webrtc::webrtc_impl::RefCounter" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.webrtc::RtpPacketInfo"*, %"class.webrtc::RtpPacketInfo"*, %"class.std::__1::__compressed_pair.49" }
%"class.webrtc::RtpPacketInfo" = type { i32, %"class.std::__1::vector.27", i32, %"class.absl::optional.34", %"class.absl::optional.39", %"class.absl::optional.44", %"class.webrtc::Timestamp" }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { i32*, i32*, %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { i32* }
%"class.absl::optional.34" = type { %"class.absl::optional_internal::optional_data.35" }
%"class.absl::optional_internal::optional_data.35" = type { %"class.absl::optional_internal::optional_data_base.36" }
%"class.absl::optional_internal::optional_data_base.36" = type { %"class.absl::optional_internal::optional_data_dtor_base.37" }
%"class.absl::optional_internal::optional_data_dtor_base.37" = type { i8, %union.anon.38 }
%union.anon.38 = type { i8 }
%"class.absl::optional.39" = type { %"class.absl::optional_internal::optional_data.40" }
%"class.absl::optional_internal::optional_data.40" = type { %"class.absl::optional_internal::optional_data_base.41" }
%"class.absl::optional_internal::optional_data_base.41" = type { %"class.absl::optional_internal::optional_data_dtor_base.42" }
%"class.absl::optional_internal::optional_data_dtor_base.42" = type { i8, %union.anon.43 }
%union.anon.43 = type { %"struct.webrtc::AbsoluteCaptureTime" }
%"struct.webrtc::AbsoluteCaptureTime" = type { i64, %"class.absl::optional.44" }
%"class.absl::optional.44" = type { %"class.absl::optional_internal::optional_data.45" }
%"class.absl::optional_internal::optional_data.45" = type { %"class.absl::optional_internal::optional_data_base.46" }
%"class.absl::optional_internal::optional_data_base.46" = type { %"class.absl::optional_internal::optional_data_dtor_base.47" }
%"class.absl::optional_internal::optional_data_dtor_base.47" = type { i8, %union.anon.48 }
%union.anon.48 = type { i64 }
%"class.webrtc::Timestamp" = type { %"class.webrtc::rtc_units_impl::UnitBase" }
%"class.webrtc::rtc_units_impl::UnitBase" = type { i64 }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.webrtc::RtpPacketInfo"* }
%union.anon.64 = type { %"struct.webrtc::VideoFrame::ProcessingTime" }
%"struct.webrtc::VideoFrame::ProcessingTime" = type { %"class.webrtc::Timestamp", %"class.webrtc::Timestamp" }
%"class.webrtc::test::FakeVp8Decoder" = type { %"class.webrtc::VideoDecoder", %"class.webrtc::DecodedImageCallback"*, i32, i32 }
%"class.webrtc::VideoDecoder" = type { i32 (...)** }
%"class.webrtc::DecodedImageCallback" = type { i32 (...)** }
%"class.webrtc::VideoCodec" = type { i32, i16, i16, i32, i32, i32, i32, i8, i32, i8, [3 x %"struct.webrtc::SpatialLayer"], [5 x %"struct.webrtc::SpatialLayer"], i32, i8, %"class.absl::optional", %"struct.webrtc::VideoCodec::TimingFrameTriggerThresholds", i8, %"union.webrtc::VideoCodecUnion", %"class.std::__1::basic_string" }
%"struct.webrtc::SpatialLayer" = type { i16, i16, float, i8, i32, i32, i32, i32, i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%"struct.webrtc::VideoCodec::TimingFrameTriggerThresholds" = type { i64, i16 }
%"union.webrtc::VideoCodecUnion" = type { %"struct.webrtc::VideoCodecVP9" }
%"struct.webrtc::VideoCodecVP9" = type { i32, i8, i8, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.webrtc::EncodedImage" = type <{ i32, i32, i64, i64, i32, i32, i8, [3 x i8], i32, %"struct.webrtc::VideoPlayoutDelay", %"struct.webrtc::EncodedImage::Timing", %"class.rtc::scoped_refptr", i64, i32, %"class.absl::optional", [4 x i8], %"class.std::__1::map", %"class.absl::optional.10", %"class.absl::optional.20", [4 x i8], %"class.webrtc::RtpPacketInfos", i8, [7 x i8] }>
%"struct.webrtc::VideoPlayoutDelay" = type { i32, i32 }
%"struct.webrtc::EncodedImage::Timing" = type { i8, i64, i64, i64, i64, i64, i64, i64, i64 }
%"class.rtc::scoped_refptr" = type { %"class.webrtc::EncodedImageBufferInterface"* }
%"class.webrtc::EncodedImageBufferInterface" = type { %"class.rtc::RefCountInterface" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2", %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.absl::optional.10" = type { %"class.absl::optional_internal::optional_data.11" }
%"class.absl::optional_internal::optional_data.11" = type { %"class.absl::optional_internal::optional_data_base.12" }
%"class.absl::optional_internal::optional_data_base.12" = type { %"class.absl::optional_internal::optional_data_dtor_base.13" }
%"class.absl::optional_internal::optional_data_dtor_base.13" = type { i8, %union.anon.14 }
%union.anon.14 = type { %"class.webrtc::ColorSpace" }
%"class.webrtc::ColorSpace" = type { i8, i8, i8, i32, i32, i32, %"class.absl::optional.15" }
%"class.absl::optional.15" = type { %"class.absl::optional_internal::optional_data.16" }
%"class.absl::optional_internal::optional_data.16" = type { %"class.absl::optional_internal::optional_data_base.17" }
%"class.absl::optional_internal::optional_data_base.17" = type { %"class.absl::optional_internal::optional_data_dtor_base.18" }
%"class.absl::optional_internal::optional_data_dtor_base.18" = type { i8, %union.anon.19 }
%"class.absl::optional.20" = type { %"class.absl::optional_internal::optional_data.21" }
%"class.absl::optional_internal::optional_data.21" = type { %"class.absl::optional_internal::optional_data_base.22" }
%"class.absl::optional_internal::optional_data_base.22" = type { %"class.absl::optional_internal::optional_data_dtor_base.23" }
%"class.absl::optional_internal::optional_data_dtor_base.23" = type { i8, %union.anon.24 }
%union.anon.24 = type { i16 }
%"class.webrtc::VideoFrame" = type { i16, %"class.rtc::scoped_refptr.54", i32, i64, i64, i32, %"class.absl::optional.10", %"class.absl::optional", %"class.absl::optional.55", %"class.webrtc::RtpPacketInfos", %"class.absl::optional.60" }
%"class.absl::optional.55" = type { %"class.absl::optional_internal::optional_data.56" }
%"class.absl::optional_internal::optional_data.56" = type { %"class.absl::optional_internal::optional_data_base.57" }
%"class.absl::optional_internal::optional_data_base.57" = type { %"class.absl::optional_internal::optional_data_dtor_base.58" }
%"class.absl::optional_internal::optional_data_dtor_base.58" = type { i8, %union.anon.59 }
%"class.absl::optional.60" = type { %"class.absl::optional_internal::optional_data.61" }
%"class.absl::optional_internal::optional_data.61" = type { %"class.absl::optional_internal::optional_data_base.62" }
%"class.absl::optional_internal::optional_data_base.62" = type { %"class.absl::optional_internal::optional_data_dtor_base.63" }
%"class.absl::optional_internal::optional_data_dtor_base.63" = type { i8, %union.anon.64 }
%"class.webrtc::VideoFrame::Builder" = type { i16, %"class.rtc::scoped_refptr.54", i64, i32, i64, i32, %"class.absl::optional.10", %"class.absl::optional.55", %"class.webrtc::RtpPacketInfos" }
%"class.rtc::scoped_refptr.65" = type { %"class.webrtc::I420Buffer"* }
%"class.webrtc::I420Buffer" = type { %"class.webrtc::I420BufferInterface", i32, i32, i32, i32, i32, %"class.std::__1::unique_ptr" }
%"class.webrtc::I420BufferInterface" = type { %"class.webrtc::PlanarYuv8Buffer" }
%"class.webrtc::PlanarYuv8Buffer" = type { %"class.webrtc::PlanarYuvBuffer" }
%"class.webrtc::PlanarYuvBuffer" = type { %"class.webrtc::VideoFrameBuffer" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { i8* }
%"struct.webrtc::VideoDecoder::DecoderInfo" = type <{ %"class.std::__1::basic_string", i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN6webrtc12VideoDecoderD2Ev = comdat any

$_ZN6webrtc4test14FakeVp8DecoderD0Ev = comdat any

@_ZTVN6webrtc4test14FakeVp8DecoderE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::VideoDecoder"*)* @_ZN6webrtc12VideoDecoderD2Ev to i8*), i8* bitcast (void (%"class.webrtc::test::FakeVp8Decoder"*)* @_ZN6webrtc4test14FakeVp8DecoderD0Ev to i8*), i8* bitcast (i32 (%"class.webrtc::test::FakeVp8Decoder"*, %"class.webrtc::VideoCodec"*, i32)* @_ZN6webrtc4test14FakeVp8Decoder10InitDecodeEPKNS_10VideoCodecEi to i8*), i8* bitcast (i32 (%"class.webrtc::test::FakeVp8Decoder"*, %"class.webrtc::EncodedImage"*, i1, i64)* @_ZN6webrtc4test14FakeVp8Decoder6DecodeERKNS_12EncodedImageEbl to i8*), i8* bitcast (i32 (%"class.webrtc::test::FakeVp8Decoder"*, %"class.webrtc::DecodedImageCallback"*)* @_ZN6webrtc4test14FakeVp8Decoder30RegisterDecodeCompleteCallbackEPNS_20DecodedImageCallbackE to i8*), i8* bitcast (i32 (%"class.webrtc::test::FakeVp8Decoder"*)* @_ZN6webrtc4test14FakeVp8Decoder7ReleaseEv to i8*), i8* bitcast (void (%"struct.webrtc::VideoDecoder::DecoderInfo"*, %"class.webrtc::test::FakeVp8Decoder"*)* @_ZNK6webrtc4test14FakeVp8Decoder14GetDecoderInfoEv to i8*), i8* bitcast (i8* (%"class.webrtc::test::FakeVp8Decoder"*)* @_ZNK6webrtc4test14FakeVp8Decoder18ImplementationNameEv to i8*)] }, align 8
@__const._ZN6webrtc4test14FakeVp8Decoder6DecodeERKNS_12EncodedImageEbl.frame = private unnamed_addr constant { i16, [6 x i8], %"class.rtc::scoped_refptr.54", i32, [4 x i8], i64, i64, i32, { { { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.19 } } } } } } } } } }, { { { { i8, [3 x i8], %union.anon } } } }, { { { { i8, [3 x i8], %union.anon.59 } } } }, %"class.webrtc::RtpPacketInfos", { { { { i8, [7 x i8], %union.anon.64 } } } } } { i16 -21846, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.rtc::scoped_refptr.54" { %"class.webrtc::VideoFrameBuffer"* inttoptr (i64 -6148914691236517206 to %"class.webrtc::VideoFrameBuffer"*) }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i64 -6148914691236517206, i32 -1431655766, { { { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.19 } } } } } } } } } } { { { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.19 } } } } } } } } } { { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.19 } } } } } } } } { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.19 } } } } } } } { i8 -86, [3 x i8] c"\AA\AA\AA", { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.19 } } } } } } { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.19 } } } } } { i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, { { { { i8, [3 x i8], %union.anon.19 } } } } { { { { i8, [3 x i8], %union.anon.19 } } } { { { i8, [3 x i8], %union.anon.19 } } { { i8, [3 x i8], %union.anon.19 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.19 { %"struct.webrtc::HdrMetadata" { %"struct.webrtc::HdrMasteringMetadata" { %"struct.webrtc::HdrMasteringMetadata::Chromaticity" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.webrtc::HdrMasteringMetadata::Chromaticity" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.webrtc::HdrMasteringMetadata::Chromaticity" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.webrtc::HdrMasteringMetadata::Chromaticity" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i32 -1431655766 } } } } } } } } } } } }, { { { { i8, [3 x i8], %union.anon } } } } { { { { i8, [3 x i8], %union.anon } } } { { { i8, [3 x i8], %union.anon } } { { i8, [3 x i8], %union.anon } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.59 } } } } { { { { i8, [3 x i8], %union.anon.59 } } } { { { i8, [3 x i8], %union.anon.59 } } { { i8, [3 x i8], %union.anon.59 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.59 { %"struct.webrtc::VideoFrame::UpdateRect" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 } } } } } }, %"class.webrtc::RtpPacketInfos" { %"class.rtc::scoped_refptr.25" { %"class.webrtc::RtpPacketInfos::Data"* inttoptr (i64 -6148914691236517206 to %"class.webrtc::RtpPacketInfos::Data"*) } }, { { { { i8, [7 x i8], %union.anon.64 } } } } { { { { i8, [7 x i8], %union.anon.64 } } } { { { i8, [7 x i8], %union.anon.64 } } { { i8, [7 x i8], %union.anon.64 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.64 { %"struct.webrtc::VideoFrame::ProcessingTime" { %"class.webrtc::Timestamp" { %"class.webrtc::rtc_units_impl::UnitBase" { i64 -6148914691236517206 } }, %"class.webrtc::Timestamp" { %"class.webrtc::rtc_units_impl::UnitBase" { i64 -6148914691236517206 } } } } } } } } }, align 8
@.str = private unnamed_addr constant [17 x i8] c"fake_vp8_decoder\00", align 1
@_ZN6webrtc4test14FakeVp8Decoder19kImplementationNameE = hidden local_unnamed_addr global i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), align 8

@_ZN6webrtc4test14FakeVp8DecoderC1Ev = hidden unnamed_addr alias void (%"class.webrtc::test::FakeVp8Decoder"*), void (%"class.webrtc::test::FakeVp8Decoder"*)* @_ZN6webrtc4test14FakeVp8DecoderC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc4test14FakeVp8DecoderC2Ev(%"class.webrtc::test::FakeVp8Decoder"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::test::FakeVp8Decoder", %"class.webrtc::test::FakeVp8Decoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN6webrtc4test14FakeVp8DecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::test::FakeVp8Decoder", %"class.webrtc::test::FakeVp8Decoder"* %0, i64 0, i32 1
  %4 = bitcast %"class.webrtc::DecodedImageCallback"** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN6webrtc4test14FakeVp8Decoder10InitDecodeEPKNS_10VideoCodecEi(%"class.webrtc::test::FakeVp8Decoder"* nocapture readnone, %"class.webrtc::VideoCodec"* nocapture readnone, i32) unnamed_addr #1 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc4test14FakeVp8Decoder6DecodeERKNS_12EncodedImageEbl(%"class.webrtc::test::FakeVp8Decoder"* nocapture, %"class.webrtc::EncodedImage"* nocapture readonly dereferenceable(272), i1 zeroext, i64) unnamed_addr #2 align 2 {
  %5 = alloca %"class.webrtc::VideoFrame", align 8
  %6 = alloca %"class.webrtc::VideoFrame::Builder", align 8
  %7 = alloca %"class.rtc::scoped_refptr.54", align 8
  %8 = alloca %"class.rtc::scoped_refptr.65", align 8
  %9 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %1, i64 0, i32 12
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %10, 10
  br i1 %11, label %93, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %1, i64 0, i32 11, i32 0
  %14 = load %"class.webrtc::EncodedImageBufferInterface"*, %"class.webrtc::EncodedImageBufferInterface"** %13, align 8
  %15 = icmp eq %"class.webrtc::EncodedImageBufferInterface"* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.webrtc::EncodedImageBufferInterface"* %14 to i8* (%"class.webrtc::EncodedImageBufferInterface"*)***
  %18 = load i8* (%"class.webrtc::EncodedImageBufferInterface"*)**, i8* (%"class.webrtc::EncodedImageBufferInterface"*)*** %17, align 8
  %19 = getelementptr inbounds i8* (%"class.webrtc::EncodedImageBufferInterface"*)*, i8* (%"class.webrtc::EncodedImageBufferInterface"*)** %18, i64 5
  %20 = load i8* (%"class.webrtc::EncodedImageBufferInterface"*)*, i8* (%"class.webrtc::EncodedImageBufferInterface"*)** %19, align 8
  %21 = tail call i8* %20(%"class.webrtc::EncodedImageBufferInterface"* nonnull %14) #10
  br label %22

22:                                               ; preds = %12, %16
  %23 = phi i8* [ %21, %16 ], [ null, %12 ]
  %24 = getelementptr inbounds %"class.webrtc::test::FakeVp8Decoder", %"class.webrtc::test::FakeVp8Decoder"* %0, i64 0, i32 2
  %25 = getelementptr inbounds %"class.webrtc::test::FakeVp8Decoder", %"class.webrtc::test::FakeVp8Decoder"* %0, i64 0, i32 3
  %26 = load i8, i8* %23, align 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %47

28:                                               ; preds = %22
  %29 = getelementptr inbounds i8, i8* %23, i64 7
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = shl nuw nsw i32 %31, 8
  %33 = getelementptr inbounds i8, i8* %23, i64 6
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = and i32 %32, 16128
  %37 = or i32 %36, %35
  store i32 %37, i32* %24, align 4
  %38 = getelementptr inbounds i8, i8* %23, i64 9
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = shl nuw nsw i32 %40, 8
  %42 = getelementptr inbounds i8, i8* %23, i64 8
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = and i32 %41, 16128
  %46 = or i32 %45, %44
  store i32 %46, i32* %25, align 4
  br label %47

47:                                               ; preds = %22, %28
  %48 = bitcast %"class.webrtc::VideoFrame"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %48) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %48, i8* align 8 bitcast ({ i16, [6 x i8], %"class.rtc::scoped_refptr.54", i32, [4 x i8], i64, i64, i32, { { { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.19 } } } } } } } } } }, { { { { i8, [3 x i8], %union.anon } } } }, { { { { i8, [3 x i8], %union.anon.59 } } } }, %"class.webrtc::RtpPacketInfos", { { { { i8, [7 x i8], %union.anon.64 } } } } }* @__const._ZN6webrtc4test14FakeVp8Decoder6DecodeERKNS_12EncodedImageEbl.frame to i8*), i64 176, i1 false)
  %49 = bitcast %"class.webrtc::VideoFrame::Builder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %49) #10
  call void @_ZN6webrtc10VideoFrame7BuilderC1Ev(%"class.webrtc::VideoFrame::Builder"* nonnull %6) #10
  %50 = bitcast %"class.rtc::scoped_refptr.54"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #10
  %51 = bitcast %"class.rtc::scoped_refptr.65"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #10
  %52 = load i32, i32* %24, align 8
  %53 = load i32, i32* %25, align 4
  call void @_ZN6webrtc10I420Buffer6CreateEii(%"class.rtc::scoped_refptr.65"* nonnull sret %8, i32 %52, i32 %53) #10
  %54 = getelementptr inbounds %"class.rtc::scoped_refptr.54", %"class.rtc::scoped_refptr.54"* %7, i64 0, i32 0
  %55 = getelementptr inbounds %"class.rtc::scoped_refptr.65", %"class.rtc::scoped_refptr.65"* %8, i64 0, i32 0
  %56 = load %"class.webrtc::I420Buffer"*, %"class.webrtc::I420Buffer"** %55, align 8
  store %"class.webrtc::I420Buffer"* null, %"class.webrtc::I420Buffer"** %55, align 8
  %57 = getelementptr inbounds %"class.webrtc::I420Buffer", %"class.webrtc::I420Buffer"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.webrtc::VideoFrameBuffer"* %57, %"class.webrtc::VideoFrameBuffer"** %54, align 8
  %58 = call dereferenceable(144) %"class.webrtc::VideoFrame::Builder"* @_ZN6webrtc10VideoFrame7Builder22set_video_frame_bufferERKN3rtc13scoped_refptrINS_16VideoFrameBufferEEE(%"class.webrtc::VideoFrame::Builder"* nonnull %6, %"class.rtc::scoped_refptr.54"* nonnull dereferenceable(8) %7) #10
  %59 = call dereferenceable(144) %"class.webrtc::VideoFrame::Builder"* @_ZN6webrtc10VideoFrame7Builder12set_rotationENS_13VideoRotationE(%"class.webrtc::VideoFrame::Builder"* %58, i32 0) #10
  %60 = call dereferenceable(144) %"class.webrtc::VideoFrame::Builder"* @_ZN6webrtc10VideoFrame7Builder16set_timestamp_msEl(%"class.webrtc::VideoFrame::Builder"* %59, i64 %3) #10
  call void @_ZN6webrtc10VideoFrame7Builder5buildEv(%"class.webrtc::VideoFrame"* nonnull sret %5, %"class.webrtc::VideoFrame::Builder"* %60) #10
  %61 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %54, align 8
  %62 = icmp eq %"class.webrtc::VideoFrameBuffer"* %61, null
  br i1 %62, label %70, label %63

63:                                               ; preds = %47
  %64 = getelementptr inbounds %"class.webrtc::VideoFrameBuffer", %"class.webrtc::VideoFrameBuffer"* %61, i64 0, i32 0
  %65 = bitcast %"class.webrtc::VideoFrameBuffer"* %61 to i32 (%"class.rtc::RefCountInterface"*)***
  %66 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %65, align 8
  %67 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %66, i64 1
  %68 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %67, align 8
  %69 = call i32 %68(%"class.rtc::RefCountInterface"* %64) #10
  br label %70

70:                                               ; preds = %47, %63
  %71 = load %"class.webrtc::I420Buffer"*, %"class.webrtc::I420Buffer"** %55, align 8
  %72 = icmp eq %"class.webrtc::I420Buffer"* %71, null
  br i1 %72, label %80, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"class.webrtc::I420Buffer", %"class.webrtc::I420Buffer"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = bitcast %"class.webrtc::I420Buffer"* %71 to i32 (%"class.rtc::RefCountInterface"*)***
  %76 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %75, align 8
  %77 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %76, i64 1
  %78 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %77, align 8
  %79 = call i32 %78(%"class.rtc::RefCountInterface"* %74) #10
  br label %80

80:                                               ; preds = %70, %73
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #10
  call void @_ZN6webrtc10VideoFrame7BuilderD1Ev(%"class.webrtc::VideoFrame::Builder"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %49) #10
  %81 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %1, i64 0, i32 13
  %82 = load i32, i32* %81, align 8
  %83 = getelementptr inbounds %"class.webrtc::VideoFrame", %"class.webrtc::VideoFrame"* %5, i64 0, i32 2
  store i32 %82, i32* %83, align 8
  %84 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %1, i64 0, i32 2
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %"class.webrtc::VideoFrame", %"class.webrtc::VideoFrame"* %5, i64 0, i32 3
  store i64 %85, i64* %86, align 8
  %87 = getelementptr inbounds %"class.webrtc::test::FakeVp8Decoder", %"class.webrtc::test::FakeVp8Decoder"* %0, i64 0, i32 1
  %88 = load %"class.webrtc::DecodedImageCallback"*, %"class.webrtc::DecodedImageCallback"** %87, align 8
  %89 = bitcast %"class.webrtc::DecodedImageCallback"* %88 to void (%"class.webrtc::DecodedImageCallback"*, %"class.webrtc::VideoFrame"*, i64, i16)***
  %90 = load void (%"class.webrtc::DecodedImageCallback"*, %"class.webrtc::VideoFrame"*, i64, i16)**, void (%"class.webrtc::DecodedImageCallback"*, %"class.webrtc::VideoFrame"*, i64, i16)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.webrtc::DecodedImageCallback"*, %"class.webrtc::VideoFrame"*, i64, i16)*, void (%"class.webrtc::DecodedImageCallback"*, %"class.webrtc::VideoFrame"*, i64, i16)** %90, i64 4
  %92 = load void (%"class.webrtc::DecodedImageCallback"*, %"class.webrtc::VideoFrame"*, i64, i16)*, void (%"class.webrtc::DecodedImageCallback"*, %"class.webrtc::VideoFrame"*, i64, i16)** %91, align 8
  call void %92(%"class.webrtc::DecodedImageCallback"* %88, %"class.webrtc::VideoFrame"* nonnull dereferenceable(176) %5, i64 0, i16 0) #10
  call void @_ZN6webrtc10VideoFrameD1Ev(%"class.webrtc::VideoFrame"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %48) #10
  br label %93

93:                                               ; preds = %4, %80
  %94 = phi i32 [ 0, %80 ], [ -1, %4 ]
  ret i32 %94
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN6webrtc10VideoFrame7BuilderC1Ev(%"class.webrtc::VideoFrame::Builder"*) unnamed_addr #4

declare dereferenceable(144) %"class.webrtc::VideoFrame::Builder"* @_ZN6webrtc10VideoFrame7Builder22set_video_frame_bufferERKN3rtc13scoped_refptrINS_16VideoFrameBufferEEE(%"class.webrtc::VideoFrame::Builder"*, %"class.rtc::scoped_refptr.54"* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN6webrtc10I420Buffer6CreateEii(%"class.rtc::scoped_refptr.65"* sret, i32, i32) local_unnamed_addr #4

declare dereferenceable(144) %"class.webrtc::VideoFrame::Builder"* @_ZN6webrtc10VideoFrame7Builder12set_rotationENS_13VideoRotationE(%"class.webrtc::VideoFrame::Builder"*, i32) local_unnamed_addr #4

declare dereferenceable(144) %"class.webrtc::VideoFrame::Builder"* @_ZN6webrtc10VideoFrame7Builder16set_timestamp_msEl(%"class.webrtc::VideoFrame::Builder"*, i64) local_unnamed_addr #4

declare void @_ZN6webrtc10VideoFrame7Builder5buildEv(%"class.webrtc::VideoFrame"* sret, %"class.webrtc::VideoFrame::Builder"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind
declare void @_ZN6webrtc10VideoFrame7BuilderD1Ev(%"class.webrtc::VideoFrame::Builder"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6webrtc10VideoFrameD1Ev(%"class.webrtc::VideoFrame"*) unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @_ZN6webrtc4test14FakeVp8Decoder30RegisterDecodeCompleteCallbackEPNS_20DecodedImageCallbackE(%"class.webrtc::test::FakeVp8Decoder"* nocapture, %"class.webrtc::DecodedImageCallback"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::test::FakeVp8Decoder", %"class.webrtc::test::FakeVp8Decoder"* %0, i64 0, i32 1
  store %"class.webrtc::DecodedImageCallback"* %1, %"class.webrtc::DecodedImageCallback"** %3, align 8
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN6webrtc4test14FakeVp8Decoder7ReleaseEv(%"class.webrtc::test::FakeVp8Decoder"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc4test14FakeVp8Decoder14GetDecoderInfoEv(%"struct.webrtc::VideoDecoder::DecoderInfo"* noalias sret, %"class.webrtc::test::FakeVp8Decoder"* nocapture readnone) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.webrtc::VideoDecoder::DecoderInfo", %"struct.webrtc::VideoDecoder::DecoderInfo"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.webrtc::VideoDecoder::DecoderInfo", %"struct.webrtc::VideoDecoder::DecoderInfo"* %0, i64 0, i32 1
  %5 = bitcast %"struct.webrtc::VideoDecoder::DecoderInfo"* %0 to i8*
  %6 = bitcast %"struct.webrtc::VideoDecoder::DecoderInfo"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 32, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 25, i1 false) #10
  %7 = load i8*, i8** @_ZN6webrtc4test14FakeVp8Decoder19kImplementationNameE, align 8
  %8 = load i8, i8* %7, align 1
  %9 = tail call i1 @llvm.is.constant.i8(i8 %8) #10
  br i1 %9, label %10, label %23

10:                                               ; preds = %2
  %11 = tail call i64 @strlen(i8* %7) #10
  %12 = icmp ult i64 %11, 23
  br i1 %12, label %13, label %21

13:                                               ; preds = %10
  %14 = bitcast %"struct.webrtc::VideoDecoder::DecoderInfo"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = trunc i64 %11 to i8
  store i8 %16, i8* %15, align 1
  %17 = icmp eq i64 %11, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %13
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %7, i64 %11, i1 false) #10
  br label %19

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds i8, i8* %5, i64 %11
  store i8 0, i8* %20, align 1
  br label %25

21:                                               ; preds = %10
  %22 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %3, i8* %7, i64 %11) #10
  br label %25

23:                                               ; preds = %2
  %24 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* %3, i8* %7) #10
  br label %25

25:                                               ; preds = %19, %21, %23
  store i8 0, i8* %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK6webrtc4test14FakeVp8Decoder18ImplementationNameEv(%"class.webrtc::test::FakeVp8Decoder"* nocapture readnone) unnamed_addr #6 align 2 {
  %2 = load i8*, i8** @_ZN6webrtc4test14FakeVp8Decoder19kImplementationNameE, align 8
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc12VideoDecoderD2Ev(%"class.webrtc::VideoDecoder"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc4test14FakeVp8DecoderD0Ev(%"class.webrtc::test::FakeVp8Decoder"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.webrtc::test::FakeVp8Decoder"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #8

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
