; ModuleID = '../../ui/events/gestures/motion_event_aura.cc'
source_filename = "../../ui/events/gestures/motion_event_aura.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::MotionEventAura" = type { %"class.ui::MotionEventGeneric" }
%"class.ui::MotionEventGeneric" = type { %"class.ui::MotionEvent", i32, %"class.base::TimeTicks", i32, i32, i32, i32, %"class.base::StackVector", %"class.std::__1::vector.1" }
%"class.ui::MotionEvent" = type { i32 (...)** }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source", %"class.base::StackAllocator", %"class.std::__1::vector" }
%"struct.base::StackAllocator<ui::PointerProperties, 5>::Source" = type { [300 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"*, %"class.std::__1::__compressed_pair" }
%"struct.ui::PointerProperties" = type { i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.ui::PointerProperties"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.base::StackAllocator" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::unique_ptr"* }
%"class.ui::TouchEvent" = type <{ %"class.ui::LocatedEvent", i32, i8, i8, [2 x i8], %"struct.ui::PointerDetails", [4 x i8] }>
%"class.ui::LocatedEvent" = type { %"class.ui::Event", %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.15" }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.8" }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.10" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::pair"* }
%"class.ui::EventTarget" = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.base::flat_map.18"* }
%"class.base::flat_map.18" = type opaque
%"class.gfx::PointF" = type { float, float }
%"struct.ui::PointerDetails" = type { i32, float, float, float, float, float, float, float, i32, %"class.gfx::Vector2d" }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.ui::GestureConfiguration" = type <{ i32 (...)**, float, i8, [3 x i8], i32, i8, i8, [2 x i8], i32, i32, i8, i8, [2 x i8], i32, float, i32, float, float, float, float, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32, i8, [3 x i8], float, i8, i8, [2 x i8], i32, [4 x i8] }>

@_ZTVN2ui15MotionEventAuraE = hidden unnamed_addr constant { [32 x i8*] } { [32 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::MotionEventAura"*)* @_ZN2ui15MotionEventAuraD2Ev to i8*), i8* bitcast (void (%"class.ui::MotionEventAura"*)* @_ZN2ui15MotionEventAuraD0Ev to i8*), i8* bitcast (i32 (%"class.ui::MotionEventGeneric"*)* @_ZNK2ui18MotionEventGeneric16GetUniqueEventIdEv to i8*), i8* bitcast (i32 (%"class.ui::MotionEventGeneric"*)* @_ZNK2ui18MotionEventGeneric9GetActionEv to i8*), i8* bitcast (i32 (%"class.ui::MotionEventGeneric"*)* @_ZNK2ui18MotionEventGeneric14GetActionIndexEv to i8*), i8* bitcast (i64 (%"class.ui::MotionEventGeneric"*)* @_ZNK2ui18MotionEventGeneric15GetPointerCountEv to i8*), i8* bitcast (i32 (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric12GetPointerIdEm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric4GetXEm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric4GetYEm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric7GetRawXEm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric7GetRawYEm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric13GetTouchMajorEm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric13GetTouchMinorEm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric14GetOrientationEm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric11GetPressureEm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric8GetTiltXEm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric8GetTiltYEm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric8GetTwistEm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric21GetTangentialPressureEm to i8*), i8* bitcast (i32 (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric11GetToolTypeEm to i8*), i8* bitcast (i32 (%"class.ui::MotionEventGeneric"*)* @_ZNK2ui18MotionEventGeneric14GetButtonStateEv to i8*), i8* bitcast (i32 (%"class.ui::MotionEventGeneric"*)* @_ZNK2ui18MotionEventGeneric8GetFlagsEv to i8*), i8* bitcast (i64 (%"class.ui::MotionEventGeneric"*)* @_ZNK2ui18MotionEventGeneric12GetEventTimeEv to i8*), i8* bitcast (i32 (%"class.ui::MotionEvent"*)* @_ZNK2ui11MotionEvent17GetClassificationEv to i8*), i8* bitcast (i64 (%"class.ui::MotionEventGeneric"*)* @_ZNK2ui18MotionEventGeneric14GetHistorySizeEv to i8*), i8* bitcast (i64 (%"class.ui::MotionEventGeneric"*, i64)* @_ZNK2ui18MotionEventGeneric22GetHistoricalEventTimeEm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64, i64)* @_ZNK2ui18MotionEventGeneric23GetHistoricalTouchMajorEmm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64, i64)* @_ZNK2ui18MotionEventGeneric14GetHistoricalXEmm to i8*), i8* bitcast (float (%"class.ui::MotionEventGeneric"*, i64, i64)* @_ZNK2ui18MotionEventGeneric14GetHistoricalYEmm to i8*), i8* bitcast (i32 (%"class.ui::MotionEventAura"*, i64)* @_ZNK2ui15MotionEventAura17GetSourceDeviceIdEm to i8*)] }, align 8
@.str = private unnamed_addr constant [11 x i8] c"index >= 0\00", align 1
@.str.1 = private unnamed_addr constant [46 x i8] c"../../ui/events/gestures/motion_event_aura.cc\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"index < static_cast<int>(GetPointerCount())\00", align 1
@switch.table._ZN2ui12_GLOBAL__N_134GetPointerPropertiesFromTouchEventERKNS_10TouchEventE = private unnamed_addr constant [4 x i32] [i32 3, i32 2, i32 1, i32 4], align 4

@_ZN2ui15MotionEventAuraC1Ev = hidden unnamed_addr alias void (%"class.ui::MotionEventAura"*), void (%"class.ui::MotionEventAura"*)* @_ZN2ui15MotionEventAuraC2Ev
@_ZN2ui15MotionEventAuraD1Ev = hidden unnamed_addr alias void (%"class.ui::MotionEventAura"*), void (%"class.ui::MotionEventAura"*)* @_ZN2ui15MotionEventAuraD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15MotionEventAuraC2Ev(%"class.ui::MotionEventAura"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0
  tail call void @_ZN2ui18MotionEventGenericC2Ev(%"class.ui::MotionEventGeneric"* %2) #6
  %3 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*] }, { [32 x i8*] }* @_ZTVN2ui15MotionEventAuraE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN2ui18MotionEventGenericC2Ev(%"class.ui::MotionEventGeneric"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2ui18MotionEventGenericD2Ev(%"class.ui::MotionEventGeneric"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15MotionEventAuraD2Ev(%"class.ui::MotionEventAura"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0
  tail call void @_ZN2ui18MotionEventGenericD2Ev(%"class.ui::MotionEventGeneric"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15MotionEventAuraD0Ev(%"class.ui::MotionEventAura"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0
  tail call void @_ZN2ui18MotionEventGenericD2Ev(%"class.ui::MotionEventGeneric"* %2) #6
  %3 = bitcast %"class.ui::MotionEventAura"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui15MotionEventAura7OnTouchERKNS_10TouchEventE(%"class.ui::MotionEventAura"*, %"class.ui::TouchEvent"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.ui::PointerProperties", align 4
  %4 = alloca %"struct.ui::PointerProperties", align 4
  %5 = alloca %"struct.ui::PointerProperties", align 4
  %6 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 5, i32 8
  %8 = load i32, i32* %7, align 4
  %9 = tail call i32 @_ZNK2ui11MotionEvent20FindPointerIndexOfIdEi(%"class.ui::MotionEvent"* %6, i32 %8) #6
  %10 = icmp ne i32 %9, -1
  %11 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 12
  %14 = xor i1 %10, %13
  br i1 %14, label %15, label %105

15:                                               ; preds = %2
  %16 = icmp eq i32 %12, 13
  br i1 %16, label %17, label %38

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 0, i32 1, i32 0
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0
  %21 = sext i32 %9 to i64
  %22 = bitcast %"class.ui::MotionEventAura"* %0 to float (%"class.ui::MotionEventGeneric"*, i64)***
  %23 = load float (%"class.ui::MotionEventGeneric"*, i64)**, float (%"class.ui::MotionEventGeneric"*, i64)*** %22, align 8
  %24 = getelementptr inbounds float (%"class.ui::MotionEventGeneric"*, i64)*, float (%"class.ui::MotionEventGeneric"*, i64)** %23, i64 7
  %25 = load float (%"class.ui::MotionEventGeneric"*, i64)*, float (%"class.ui::MotionEventGeneric"*, i64)** %24, align 8
  %26 = tail call float %25(%"class.ui::MotionEventGeneric"* %20, i64 %21) #6
  %27 = fcmp oeq float %19, %26
  br i1 %27, label %28, label %36

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 0, i32 1, i32 1
  %30 = load float, float* %29, align 4
  %31 = load float (%"class.ui::MotionEventGeneric"*, i64)**, float (%"class.ui::MotionEventGeneric"*, i64)*** %22, align 8
  %32 = getelementptr inbounds float (%"class.ui::MotionEventGeneric"*, i64)*, float (%"class.ui::MotionEventGeneric"*, i64)** %31, i64 8
  %33 = load float (%"class.ui::MotionEventGeneric"*, i64)*, float (%"class.ui::MotionEventGeneric"*, i64)** %32, align 8
  %34 = tail call float %33(%"class.ui::MotionEventGeneric"* %20, i64 %21) #6
  %35 = fcmp oeq float %30, %34
  br i1 %35, label %105, label %36

36:                                               ; preds = %17, %28
  %37 = load i32, i32* %11, align 8
  br label %38

38:                                               ; preds = %36, %15
  %39 = phi i32 [ %37, %36 ], [ %12, %15 ]
  switch i32 %39, label %105 [
    i32 12, label %40
    i32 11, label %52
    i32 14, label %52
    i32 13, label %51
  ]

40:                                               ; preds = %38
  %41 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0
  %42 = bitcast %"class.ui::MotionEventAura"* %0 to i64 (%"class.ui::MotionEventGeneric"*)***
  %43 = load i64 (%"class.ui::MotionEventGeneric"*)**, i64 (%"class.ui::MotionEventGeneric"*)*** %42, align 8
  %44 = getelementptr inbounds i64 (%"class.ui::MotionEventGeneric"*)*, i64 (%"class.ui::MotionEventGeneric"*)** %43, i64 5
  %45 = load i64 (%"class.ui::MotionEventGeneric"*)*, i64 (%"class.ui::MotionEventGeneric"*)** %44, align 8
  %46 = tail call i64 %45(%"class.ui::MotionEventGeneric"* %41) #6
  %47 = icmp eq i64 %46, 16
  br i1 %47, label %105, label %48

48:                                               ; preds = %40
  %49 = bitcast %"struct.ui::PointerProperties"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %49) #6
  call fastcc void @_ZN2ui12_GLOBAL__N_134GetPointerPropertiesFromTouchEventERKNS_10TouchEventE(%"struct.ui::PointerProperties"* nonnull sret %3, %"class.ui::TouchEvent"* dereferenceable(216) %1) #6
  %50 = call i64 @_ZN2ui18MotionEventGeneric11PushPointerERKNS_17PointerPropertiesE(%"class.ui::MotionEventGeneric"* %41, %"struct.ui::PointerProperties"* nonnull dereferenceable(60) %3) #6
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %49) #6
  br label %52

51:                                               ; preds = %38
  br label %52

52:                                               ; preds = %38, %38, %48, %51
  %53 = phi %"struct.ui::PointerProperties"* [ %5, %51 ], [ %4, %48 ], [ %4, %38 ], [ %4, %38 ]
  %54 = bitcast %"struct.ui::PointerProperties"* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %54) #6
  call fastcc void @_ZN2ui12_GLOBAL__N_134GetPointerPropertiesFromTouchEventERKNS_10TouchEventE(%"struct.ui::PointerProperties"* nonnull sret %53, %"class.ui::TouchEvent"* dereferenceable(216) %1) #6
  %55 = load i32, i32* %7, align 4
  %56 = call i32 @_ZNK2ui15MotionEventAura14GetIndexFromIdEi(%"class.ui::MotionEventAura"* %0, i32 %55) #6
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %59 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %58, align 8
  %60 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %59, i64 %57
  %61 = bitcast %"struct.ui::PointerProperties"* %60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %61, i8* nonnull align 4 %54, i64 60, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %54) #6
  %62 = load i32, i32* %11, align 8
  switch i32 %62, label %95 [
    i32 12, label %63
    i32 11, label %77
    i32 14, label %91
    i32 13, label %93
  ]

63:                                               ; preds = %52
  %64 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0
  %65 = bitcast %"class.ui::MotionEventAura"* %0 to i64 (%"class.ui::MotionEventGeneric"*)***
  %66 = load i64 (%"class.ui::MotionEventGeneric"*)**, i64 (%"class.ui::MotionEventGeneric"*)*** %65, align 8
  %67 = getelementptr inbounds i64 (%"class.ui::MotionEventGeneric"*)*, i64 (%"class.ui::MotionEventGeneric"*)** %66, i64 5
  %68 = load i64 (%"class.ui::MotionEventGeneric"*)*, i64 (%"class.ui::MotionEventGeneric"*)** %67, align 8
  %69 = call i64 %68(%"class.ui::MotionEventGeneric"* %64) #6
  %70 = icmp eq i64 %69, 1
  %71 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0, i32 1
  br i1 %70, label %72, label %73

72:                                               ; preds = %63
  store i32 1, i32* %71, align 8
  br label %95

73:                                               ; preds = %63
  store i32 5, i32* %71, align 8
  %74 = load i32, i32* %7, align 4
  %75 = call i32 @_ZNK2ui15MotionEventAura14GetIndexFromIdEi(%"class.ui::MotionEventAura"* %0, i32 %74) #6
  %76 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0, i32 4
  store i32 %75, i32* %76, align 4
  br label %95

77:                                               ; preds = %52
  %78 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0
  %79 = bitcast %"class.ui::MotionEventAura"* %0 to i64 (%"class.ui::MotionEventGeneric"*)***
  %80 = load i64 (%"class.ui::MotionEventGeneric"*)**, i64 (%"class.ui::MotionEventGeneric"*)*** %79, align 8
  %81 = getelementptr inbounds i64 (%"class.ui::MotionEventGeneric"*)*, i64 (%"class.ui::MotionEventGeneric"*)** %80, i64 5
  %82 = load i64 (%"class.ui::MotionEventGeneric"*)*, i64 (%"class.ui::MotionEventGeneric"*)** %81, align 8
  %83 = call i64 %82(%"class.ui::MotionEventGeneric"* %78) #6
  %84 = icmp eq i64 %83, 1
  %85 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0, i32 1
  br i1 %84, label %86, label %87

86:                                               ; preds = %77
  store i32 2, i32* %85, align 8
  br label %95

87:                                               ; preds = %77
  store i32 6, i32* %85, align 8
  %88 = load i32, i32* %7, align 4
  %89 = call i32 @_ZNK2ui15MotionEventAura14GetIndexFromIdEi(%"class.ui::MotionEventAura"* %0, i32 %88) #6
  %90 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0, i32 4
  store i32 %89, i32* %90, align 4
  br label %95

91:                                               ; preds = %52
  %92 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0, i32 1
  store i32 4, i32* %92, align 8
  br label %95

93:                                               ; preds = %52
  %94 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0, i32 1
  store i32 3, i32* %94, align 8
  br label %95

95:                                               ; preds = %52, %72, %73, %86, %87, %91, %93
  %96 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0, i32 3
  store i32 %97, i32* %98, align 8
  %99 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 0, i32 0, i32 4
  %100 = load i32, i32* %99, align 8
  %101 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0, i32 6
  store i32 %100, i32* %101, align 4
  %102 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %103 = load i64, i64* %102, align 8
  %104 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64 %103, i64* %104, align 8
  br label %105

105:                                              ; preds = %40, %38, %28, %2, %95
  %106 = phi i1 [ true, %95 ], [ false, %2 ], [ false, %28 ], [ false, %38 ], [ false, %40 ]
  ret i1 %106
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare i32 @_ZNK2ui11MotionEvent20FindPointerIndexOfIdEi(%"class.ui::MotionEvent"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui15MotionEventAura8AddTouchERKNS_10TouchEventE(%"class.ui::MotionEventAura"*, %"class.ui::TouchEvent"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.ui::PointerProperties", align 4
  %4 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0
  %5 = bitcast %"class.ui::MotionEventAura"* %0 to i64 (%"class.ui::MotionEventGeneric"*)***
  %6 = load i64 (%"class.ui::MotionEventGeneric"*)**, i64 (%"class.ui::MotionEventGeneric"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.ui::MotionEventGeneric"*)*, i64 (%"class.ui::MotionEventGeneric"*)** %6, i64 5
  %8 = load i64 (%"class.ui::MotionEventGeneric"*)*, i64 (%"class.ui::MotionEventGeneric"*)** %7, align 8
  %9 = tail call i64 %8(%"class.ui::MotionEventGeneric"* %4) #6
  %10 = icmp eq i64 %9, 16
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = bitcast %"struct.ui::PointerProperties"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %12) #6
  call fastcc void @_ZN2ui12_GLOBAL__N_134GetPointerPropertiesFromTouchEventERKNS_10TouchEventE(%"struct.ui::PointerProperties"* nonnull sret %3, %"class.ui::TouchEvent"* dereferenceable(216) %1)
  %13 = call i64 @_ZN2ui18MotionEventGeneric11PushPointerERKNS_17PointerPropertiesE(%"class.ui::MotionEventGeneric"* %4, %"struct.ui::PointerProperties"* nonnull dereferenceable(60) %3) #6
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %12) #6
  br label %14

14:                                               ; preds = %2, %11
  %15 = phi i1 [ true, %11 ], [ false, %2 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15MotionEventAura11UpdateTouchERKNS_10TouchEventE(%"class.ui::MotionEventAura"*, %"class.ui::TouchEvent"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.ui::PointerProperties", align 4
  %4 = bitcast %"struct.ui::PointerProperties"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %4) #6
  call fastcc void @_ZN2ui12_GLOBAL__N_134GetPointerPropertiesFromTouchEventERKNS_10TouchEventE(%"struct.ui::PointerProperties"* nonnull sret %3, %"class.ui::TouchEvent"* dereferenceable(216) %1)
  %5 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 5, i32 8
  %6 = load i32, i32* %5, align 4
  %7 = call i32 @_ZNK2ui15MotionEventAura14GetIndexFromIdEi(%"class.ui::MotionEventAura"* %0, i32 %6)
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %10 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %9, align 8
  %11 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %10, i64 %8
  %12 = bitcast %"struct.ui::PointerProperties"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* nonnull align 4 %4, i64 60, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %4) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15MotionEventAura18UpdateCachedActionERKNS_10TouchEventE(%"class.ui::MotionEventAura"*, %"class.ui::TouchEvent"* nocapture readonly dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %39 [
    i32 12, label %5
    i32 11, label %20
    i32 14, label %35
    i32 13, label %37
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0
  %7 = bitcast %"class.ui::MotionEventAura"* %0 to i64 (%"class.ui::MotionEventGeneric"*)***
  %8 = load i64 (%"class.ui::MotionEventGeneric"*)**, i64 (%"class.ui::MotionEventGeneric"*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.ui::MotionEventGeneric"*)*, i64 (%"class.ui::MotionEventGeneric"*)** %8, i64 5
  %10 = load i64 (%"class.ui::MotionEventGeneric"*)*, i64 (%"class.ui::MotionEventGeneric"*)** %9, align 8
  %11 = tail call i64 %10(%"class.ui::MotionEventGeneric"* %6) #6
  %12 = icmp eq i64 %11, 1
  %13 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0, i32 1
  br i1 %12, label %14, label %15

14:                                               ; preds = %5
  store i32 1, i32* %13, align 8
  br label %39

15:                                               ; preds = %5
  store i32 5, i32* %13, align 8
  %16 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 5, i32 8
  %17 = load i32, i32* %16, align 4
  %18 = tail call i32 @_ZNK2ui15MotionEventAura14GetIndexFromIdEi(%"class.ui::MotionEventAura"* %0, i32 %17)
  %19 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0, i32 4
  store i32 %18, i32* %19, align 4
  br label %39

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0
  %22 = bitcast %"class.ui::MotionEventAura"* %0 to i64 (%"class.ui::MotionEventGeneric"*)***
  %23 = load i64 (%"class.ui::MotionEventGeneric"*)**, i64 (%"class.ui::MotionEventGeneric"*)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.ui::MotionEventGeneric"*)*, i64 (%"class.ui::MotionEventGeneric"*)** %23, i64 5
  %25 = load i64 (%"class.ui::MotionEventGeneric"*)*, i64 (%"class.ui::MotionEventGeneric"*)** %24, align 8
  %26 = tail call i64 %25(%"class.ui::MotionEventGeneric"* %21) #6
  %27 = icmp eq i64 %26, 1
  %28 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0, i32 1
  br i1 %27, label %29, label %30

29:                                               ; preds = %20
  store i32 2, i32* %28, align 8
  br label %39

30:                                               ; preds = %20
  store i32 6, i32* %28, align 8
  %31 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 5, i32 8
  %32 = load i32, i32* %31, align 4
  %33 = tail call i32 @_ZNK2ui15MotionEventAura14GetIndexFromIdEi(%"class.ui::MotionEventAura"* %0, i32 %32)
  %34 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0, i32 4
  store i32 %33, i32* %34, align 4
  br label %39

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0, i32 1
  store i32 4, i32* %36, align 8
  br label %39

37:                                               ; preds = %2
  %38 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0, i32 1
  store i32 3, i32* %38, align 8
  br label %39

39:                                               ; preds = %2, %29, %30, %14, %15, %37, %35
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15MotionEventAura25CleanupRemovedTouchPointsERKNS_10TouchEventE(%"class.ui::MotionEventAura"*, %"class.ui::TouchEvent"* nocapture readonly dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %25 [
    i32 11, label %5
    i32 14, label %5
  ]

5:                                                ; preds = %2, %2
  %6 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 5, i32 8
  %7 = load i32, i32* %6, align 4
  %8 = tail call i32 @_ZNK2ui15MotionEventAura14GetIndexFromIdEi(%"class.ui::MotionEventAura"* %0, i32 %7)
  %9 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0, i32 4
  store i32 -1, i32* %10, align 4
  %11 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = bitcast %"class.ui::MotionEventAura"* %0 to i64 (%"class.ui::MotionEventGeneric"*)***
  %13 = load i64 (%"class.ui::MotionEventGeneric"*)**, i64 (%"class.ui::MotionEventGeneric"*)*** %12, align 8
  %14 = getelementptr inbounds i64 (%"class.ui::MotionEventGeneric"*)*, i64 (%"class.ui::MotionEventGeneric"*)** %13, i64 5
  %15 = load i64 (%"class.ui::MotionEventGeneric"*)*, i64 (%"class.ui::MotionEventGeneric"*)** %14, align 8
  %16 = tail call i64 %15(%"class.ui::MotionEventGeneric"* %9) #6
  %17 = add i64 %16, -1
  %18 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %19 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %18, align 8
  %20 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %19, i64 %17
  %21 = sext i32 %8 to i64
  %22 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %19, i64 %21
  %23 = bitcast %"struct.ui::PointerProperties"* %22 to i8*
  %24 = bitcast %"struct.ui::PointerProperties"* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* align 4 %24, i64 60, i1 false)
  tail call void @_ZN2ui18MotionEventGeneric10PopPointerEv(%"class.ui::MotionEventGeneric"* %9) #6
  br label %25

25:                                               ; preds = %2, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2ui15MotionEventAura14GetIndexFromIdEi(%"class.ui::MotionEventAura"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0, i32 0
  %10 = tail call i32 @_ZNK2ui11MotionEvent20FindPointerIndexOfIdEi(%"class.ui::MotionEvent"* %9, i32 %1) #6
  %11 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #6
  %12 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = icmp slt i32 %10, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %12, align 8
  br label %25

16:                                               ; preds = %2
  %17 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %10) #6
  %18 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %17, i8* %18) #6
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %20, i8** %12, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 192, %"class.logging::CheckOpResult"* nonnull %5) #6
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #6
  br label %25

25:                                               ; preds = %15, %16, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #6
  %26 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #6
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %27, align 8
  %28 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0
  %29 = bitcast %"class.ui::MotionEventAura"* %0 to i64 (%"class.ui::MotionEventGeneric"*)***
  %30 = load i64 (%"class.ui::MotionEventGeneric"*)**, i64 (%"class.ui::MotionEventGeneric"*)*** %29, align 8
  %31 = getelementptr inbounds i64 (%"class.ui::MotionEventGeneric"*)*, i64 (%"class.ui::MotionEventGeneric"*)** %30, i64 5
  %32 = load i64 (%"class.ui::MotionEventGeneric"*)*, i64 (%"class.ui::MotionEventGeneric"*)** %31, align 8
  %33 = call i64 %32(%"class.ui::MotionEventGeneric"* %28) #6
  %34 = trunc i64 %33 to i32
  %35 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = icmp slt i32 %10, %34
  br i1 %36, label %37, label %38

37:                                               ; preds = %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  store i8* null, i8** %27, align 8
  br label %47

38:                                               ; preds = %25
  %39 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %10) #6
  %40 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %34) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %39, i8* %40) #6
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  store i8* %42, i8** %27, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %38
  %45 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 193, %"class.logging::CheckOpResult"* nonnull %7) #6
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #6
  br label %47

47:                                               ; preds = %37, %38, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #6
  ret i32 %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN2ui18MotionEventGeneric10PopPointerEv(%"class.ui::MotionEventGeneric"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2ui15MotionEventAura17GetSourceDeviceIdEm(%"class.ui::MotionEventAura"* nocapture readonly, i64) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %0, i64 0, i32 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %4 = load %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"** %3, align 8
  %5 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %4, i64 %1, i32 14
  %6 = load i32, i32* %5, align 4
  ret i32 %6
}

declare i64 @_ZN2ui18MotionEventGeneric11PushPointerERKNS_17PointerPropertiesE(%"class.ui::MotionEventGeneric"*, %"struct.ui::PointerProperties"* dereferenceable(60)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2ui12_GLOBAL__N_134GetPointerPropertiesFromTouchEventERKNS_10TouchEventE(%"struct.ui::PointerProperties"* noalias sret, %"class.ui::TouchEvent"* dereferenceable(216)) unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 0
  store i32 -1431655766, i32* %3, align 4
  %4 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 1
  store i32 -1431655766, i32* %4, align 4
  %5 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 6
  %7 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 7
  %8 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 8
  %9 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 9
  %10 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 10
  %11 = getelementptr inbounds %"struct.ui::PointerProperties", %"struct.ui::PointerProperties"* %0, i64 0, i32 14
  %12 = bitcast float* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 -1, i64 48, i1 false)
  store i32 -1431655766, i32* %11, align 4
  tail call void @_ZN2ui17PointerPropertiesC1Ev(%"struct.ui::PointerProperties"* %0) #6
  %13 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 0, i32 1, i32 0
  %14 = bitcast float* %13 to <4 x i32>*
  %15 = load <4 x i32>, <4 x i32>* %14, align 4
  %16 = bitcast float* %5 to <4 x i32>*
  store <4 x i32> %15, <4 x i32>* %16, align 4
  %17 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 5
  %18 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 5, i32 8
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %3, align 4
  %20 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 5, i32 3
  %21 = bitcast float* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = bitcast float* %6 to i32*
  store i32 %22, i32* %23, align 4
  %24 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 0, i32 0, i32 11
  %25 = load i32, i32* %24, align 8
  store i32 %25, i32* %11, align 4
  %26 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 5, i32 4
  %27 = bitcast float* %26 to <4 x i32>*
  %28 = load <4 x i32>, <4 x i32>* %27, align 4
  %29 = shufflevector <4 x i32> %28, <4 x i32> undef, <4 x i32> <i32 0, i32 1, i32 3, i32 2>
  %30 = bitcast float* %10 to <4 x i32>*
  store <4 x i32> %29, <4 x i32>* %30, align 4
  %31 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 5, i32 1
  %32 = load float, float* %31, align 4
  %33 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 5, i32 2
  %34 = load float, float* %33, align 4
  %35 = tail call float @_ZNK2ui10TouchEvent20ComputeRotationAngleEv(%"class.ui::TouchEvent"* %1) #6
  tail call void @_ZN2ui17PointerProperties21SetAxesAndOrientationEfff(%"struct.ui::PointerProperties"* %0, float %32, float %34, float %35) #6
  %36 = load float, float* %7, align 4
  %37 = fcmp une float %36, 0.000000e+00
  br i1 %37, label %48, label %38

38:                                               ; preds = %2
  %39 = getelementptr inbounds %"struct.ui::PointerDetails", %"struct.ui::PointerDetails"* %17, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  switch i32 %40, label %41 [
    i32 2, label %46
    i32 4, label %46
  ]

41:                                               ; preds = %38
  %42 = tail call %"class.ui::GestureConfiguration"* @_ZN2ui20GestureConfiguration11GetInstanceEv() #6
  %43 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %42, i64 0, i32 1
  %44 = load float, float* %43, align 8
  %45 = fmul float %44, 2.000000e+00
  br label %46

46:                                               ; preds = %38, %38, %41
  %47 = phi float [ %45, %41 ], [ 1.000000e+00, %38 ], [ 1.000000e+00, %38 ]
  store float %47, float* %8, align 4
  store float %47, float* %7, align 4
  store float 0.000000e+00, float* %9, align 4
  br label %48

48:                                               ; preds = %46, %2
  %49 = getelementptr inbounds %"struct.ui::PointerDetails", %"struct.ui::PointerDetails"* %17, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = add i32 %50, -1
  %52 = icmp ult i32 %51, 4
  br i1 %52, label %53, label %57

53:                                               ; preds = %48
  %54 = sext i32 %51 to i64
  %55 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN2ui12_GLOBAL__N_134GetPointerPropertiesFromTouchEventERKNS_10TouchEventE, i64 0, i64 %54
  %56 = load i32, i32* %55, align 4
  br label %57

57:                                               ; preds = %53, %48
  %58 = phi i32 [ 0, %48 ], [ %56, %53 ]
  store i32 %58, i32* %4, align 4
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i32 @_ZNK2ui18MotionEventGeneric16GetUniqueEventIdEv(%"class.ui::MotionEventGeneric"*) unnamed_addr #1

declare i32 @_ZNK2ui18MotionEventGeneric9GetActionEv(%"class.ui::MotionEventGeneric"*) unnamed_addr #1

declare i32 @_ZNK2ui18MotionEventGeneric14GetActionIndexEv(%"class.ui::MotionEventGeneric"*) unnamed_addr #1

declare i64 @_ZNK2ui18MotionEventGeneric15GetPointerCountEv(%"class.ui::MotionEventGeneric"*) unnamed_addr #1

declare i32 @_ZNK2ui18MotionEventGeneric12GetPointerIdEm(%"class.ui::MotionEventGeneric"*, i64) unnamed_addr #1

declare float @_ZNK2ui18MotionEventGeneric4GetXEm(%"class.ui::MotionEventGeneric"*, i64) unnamed_addr #1

declare float @_ZNK2ui18MotionEventGeneric4GetYEm(%"class.ui::MotionEventGeneric"*, i64) unnamed_addr #1

declare float @_ZNK2ui18MotionEventGeneric7GetRawXEm(%"class.ui::MotionEventGeneric"*, i64) unnamed_addr #1

declare float @_ZNK2ui18MotionEventGeneric7GetRawYEm(%"class.ui::MotionEventGeneric"*, i64) unnamed_addr #1

declare float @_ZNK2ui18MotionEventGeneric13GetTouchMajorEm(%"class.ui::MotionEventGeneric"*, i64) unnamed_addr #1

declare float @_ZNK2ui18MotionEventGeneric13GetTouchMinorEm(%"class.ui::MotionEventGeneric"*, i64) unnamed_addr #1

declare float @_ZNK2ui18MotionEventGeneric14GetOrientationEm(%"class.ui::MotionEventGeneric"*, i64) unnamed_addr #1

declare float @_ZNK2ui18MotionEventGeneric11GetPressureEm(%"class.ui::MotionEventGeneric"*, i64) unnamed_addr #1

declare float @_ZNK2ui18MotionEventGeneric8GetTiltXEm(%"class.ui::MotionEventGeneric"*, i64) unnamed_addr #1

declare float @_ZNK2ui18MotionEventGeneric8GetTiltYEm(%"class.ui::MotionEventGeneric"*, i64) unnamed_addr #1

declare float @_ZNK2ui18MotionEventGeneric8GetTwistEm(%"class.ui::MotionEventGeneric"*, i64) unnamed_addr #1

declare float @_ZNK2ui18MotionEventGeneric21GetTangentialPressureEm(%"class.ui::MotionEventGeneric"*, i64) unnamed_addr #1

declare i32 @_ZNK2ui18MotionEventGeneric11GetToolTypeEm(%"class.ui::MotionEventGeneric"*, i64) unnamed_addr #1

declare i32 @_ZNK2ui18MotionEventGeneric14GetButtonStateEv(%"class.ui::MotionEventGeneric"*) unnamed_addr #1

declare i32 @_ZNK2ui18MotionEventGeneric8GetFlagsEv(%"class.ui::MotionEventGeneric"*) unnamed_addr #1

declare i64 @_ZNK2ui18MotionEventGeneric12GetEventTimeEv(%"class.ui::MotionEventGeneric"*) unnamed_addr #1

declare i32 @_ZNK2ui11MotionEvent17GetClassificationEv(%"class.ui::MotionEvent"*) unnamed_addr #1

declare i64 @_ZNK2ui18MotionEventGeneric14GetHistorySizeEv(%"class.ui::MotionEventGeneric"*) unnamed_addr #1

declare i64 @_ZNK2ui18MotionEventGeneric22GetHistoricalEventTimeEm(%"class.ui::MotionEventGeneric"*, i64) unnamed_addr #1

declare float @_ZNK2ui18MotionEventGeneric23GetHistoricalTouchMajorEmm(%"class.ui::MotionEventGeneric"*, i64, i64) unnamed_addr #1

declare float @_ZNK2ui18MotionEventGeneric14GetHistoricalXEmm(%"class.ui::MotionEventGeneric"*, i64, i64) unnamed_addr #1

declare float @_ZNK2ui18MotionEventGeneric14GetHistoricalYEmm(%"class.ui::MotionEventGeneric"*, i64, i64) unnamed_addr #1

declare void @_ZN2ui17PointerPropertiesC1Ev(%"struct.ui::PointerProperties"*) unnamed_addr #1

declare void @_ZN2ui17PointerProperties21SetAxesAndOrientationEfff(%"struct.ui::PointerProperties"*, float, float, float) local_unnamed_addr #1

declare float @_ZNK2ui10TouchEvent20ComputeRotationAngleEv(%"class.ui::TouchEvent"*) local_unnamed_addr #1

declare %"class.ui::GestureConfiguration"* @_ZN2ui20GestureConfiguration11GetInstanceEv() local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
