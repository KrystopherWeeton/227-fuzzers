; ModuleID = '../../third_party/blink/renderer/core/layout/ng/inline/ng_line_truncator.cc'
source_filename = "../../third_party/blink/renderer/core/layout/ng/inline/ng_line_truncator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::NGLineTruncator" = type { %class.scoped_refptr, %"class.blink::LayoutUnit", i8, %"class.blink::SimpleFontData"*, %"class.WTF::String", %"class.blink::LayoutUnit", %class.scoped_refptr.1631 }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2003 }
%class.scoped_refptr.2003 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2004", %"class.WTF::Vector.630", %"class.WTF::Vector.2006", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2004" = type { %"class.base::RefCounted.2005" }
%"class.base::RefCounted.2005" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2006" = type { %"class.WTF::VectorBuffer.2007" }
%"class.WTF::VectorBuffer.2007" = type { %"class.WTF::VectorBufferBase.2008" }
%"class.WTF::VectorBufferBase.2008" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2009 }
%union.anon.2009 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.1994" }
%"class.blink::Member.1994" = type { %"class.blink::MemberBase.1995" }
%"class.blink::MemberBase.1995" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1996" }
%"class.blink::Member.1996" = type { %"class.blink::MemberBase.1997" }
%"class.blink::MemberBase.1997" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1623", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1625", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1630 }
%"class.WTF::RefCounted.1623" = type { %"class.base::RefCounted.1624" }
%"class.base::RefCounted.1624" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1625" = type { %"class.absl::optional_internal::optional_data.1626" }
%"class.absl::optional_internal::optional_data.1626" = type { %"class.absl::optional_internal::optional_data_base.1627" }
%"class.absl::optional_internal::optional_data_base.1627" = type { %"class.absl::optional_internal::optional_data_dtor_base.1628" }
%"class.absl::optional_internal::optional_data_dtor_base.1628" = type { i8, %union.anon.1629 }
%union.anon.1629 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1630 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2017 }
%class.scoped_refptr.2017 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2027" }
%"class.blink::Member.2027" = type { %"class.blink::MemberBase.2028" }
%"class.blink::MemberBase.2028" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2023" }
%"class.blink::MemberBase.2023" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2024" }
%"class.blink::MemberBase.2024" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2025" }
%"class.blink::MemberBase.2025" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2026" }
%"class.blink::MemberBase.2026" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2018", %"class.WTF::Vector.2018" }
%"class.WTF::Vector.2018" = type { %"class.WTF::VectorBuffer.2019" }
%"class.WTF::VectorBuffer.2019" = type { %"class.WTF::VectorBufferBase.2020" }
%"class.WTF::VectorBufferBase.2020" = type { %class.scoped_refptr.2017*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.1998" }
%"class.WTF::Vector.1998" = type { %"class.WTF::VectorBuffer.1999" }
%"class.WTF::VectorBuffer.1999" = type { %"class.WTF::VectorBufferBase.2000" }
%"class.WTF::VectorBufferBase.2000" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1711", %"class.absl::optional.1711", %"class.absl::optional.1711" }
%"class.absl::optional.1711" = type { %"class.absl::optional_internal::optional_data.1712" }
%"class.absl::optional_internal::optional_data.1712" = type { %"class.absl::optional_internal::optional_data_base.1713" }
%"class.absl::optional_internal::optional_data_base.1713" = type { %"class.absl::optional_internal::optional_data_dtor_base.1714" }
%"class.absl::optional_internal::optional_data_dtor_base.1714" = type { i8, %union.anon.1715 }
%union.anon.1715 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2013" }
%"class.WTF::VectorBuffer.2013" = type { %"class.WTF::VectorBufferBase.2014", [32 x i8] }
%"class.WTF::VectorBufferBase.2014" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.blink::LayoutUnit" = type { i32 }
%class.scoped_refptr.1631 = type { %"class.blink::ShapeResultView"* }
%"class.blink::ShapeResultView" = type { %"class.WTF::RefCounted.1632", %class.scoped_refptr.1634, i32, i32, i32, i32, float, i32, [0 x %struct.anon.1635] }
%"class.WTF::RefCounted.1632" = type { %"class.base::RefCounted.1633" }
%"class.base::RefCounted.1633" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1634 = type { %"class.blink::SimpleFontData"* }
%struct.anon.1635 = type { i8* }
%"class.blink::NGLineInfo" = type <{ %"struct.blink::NGInlineItemsData"*, %"class.blink::ComputedStyle"*, %"class.WTF::Vector.1692", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"struct.blink::NGInlineItemsData" = type { %"class.WTF::String", %"class.WTF::Vector.1636", %"class.std::__1::unique_ptr.1661", %"class.std::__1::unique_ptr.1676" }
%"class.WTF::Vector.1636" = type { %"class.WTF::VectorBuffer.1637" }
%"class.WTF::VectorBuffer.1637" = type { %"class.WTF::VectorBufferBase.1638" }
%"class.WTF::VectorBufferBase.1638" = type { %"class.blink::NGInlineItem"*, i32, i32 }
%"class.blink::NGInlineItem" = type { i32, i32, %class.scoped_refptr.1639, %"class.blink::LayoutObject"*, i32, i32 }
%class.scoped_refptr.1639 = type { %"class.blink::ShapeResult"* }
%"class.blink::ShapeResult" = type <{ %"class.WTF::RefCounted.1640", float, %"class.blink::FloatRect", %"class.WTF::Vector.1642", %class.scoped_refptr.1634, %"class.std::__1::unique_ptr.1648", i32, i32, i32, [4 x i8] }>
%"class.WTF::RefCounted.1640" = type { %"class.base::RefCounted.1641" }
%"class.base::RefCounted.1641" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1642" = type { %"class.WTF::VectorBuffer.1643" }
%"class.WTF::VectorBuffer.1643" = type { %"class.WTF::VectorBufferBase.1644" }
%"class.WTF::VectorBufferBase.1644" = type { %class.scoped_refptr.1645*, i32, i32 }
%class.scoped_refptr.1645 = type opaque
%"class.std::__1::unique_ptr.1648" = type { %"class.std::__1::__compressed_pair.1649" }
%"class.std::__1::__compressed_pair.1649" = type { %"struct.std::__1::__compressed_pair_elem.1650" }
%"struct.std::__1::__compressed_pair_elem.1650" = type { %"class.blink::ShapeResult::CharacterPositionData"* }
%"class.blink::ShapeResult::CharacterPositionData" = type { %"class.WTF::Vector.1651", i32, float }
%"class.WTF::Vector.1651" = type { %"class.WTF::VectorBuffer.1652" }
%"class.WTF::VectorBuffer.1652" = type { %"class.WTF::VectorBufferBase.1653" }
%"class.WTF::VectorBufferBase.1653" = type { %"struct.blink::ShapeResultCharacterData"*, i32, i32 }
%"struct.blink::ShapeResultCharacterData" = type { float, i8 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.std::__1::unique_ptr.1661" = type { %"class.std::__1::__compressed_pair.1662" }
%"class.std::__1::__compressed_pair.1662" = type { %"struct.std::__1::__compressed_pair_elem.1663" }
%"struct.std::__1::__compressed_pair_elem.1663" = type { %"class.blink::NGInlineItemSegments"* }
%"class.blink::NGInlineItemSegments" = type { %"class.WTF::Vector.1664", %"class.WTF::Vector.1669" }
%"class.WTF::Vector.1664" = type { %"class.WTF::VectorBuffer.1665" }
%"class.WTF::VectorBuffer.1665" = type { %"class.WTF::VectorBufferBase.1666" }
%"class.WTF::VectorBufferBase.1666" = type { %"class.blink::NGInlineItemSegment"*, i32, i32 }
%"class.blink::NGInlineItemSegment" = type <{ i32, i16, [2 x i8] }>
%"class.WTF::Vector.1669" = type { %"class.WTF::VectorBuffer.1670" }
%"class.WTF::VectorBuffer.1670" = type { %"class.WTF::VectorBufferBase.1071" }
%"class.std::__1::unique_ptr.1676" = type { %"class.std::__1::__compressed_pair.1677" }
%"class.std::__1::__compressed_pair.1677" = type { %"struct.std::__1::__compressed_pair_elem.1678" }
%"struct.std::__1::__compressed_pair_elem.1678" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.1679", %"class.WTF::HashMap.1684", %"class.WTF::String" }
%"class.WTF::Vector.1679" = type { %"class.WTF::VectorBuffer.1680" }
%"class.WTF::VectorBuffer.1680" = type { %"class.WTF::VectorBufferBase.1681" }
%"class.WTF::VectorBufferBase.1681" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.WTF::HashMap.1684" = type { %"class.WTF::HashTable.1685" }
%"class.WTF::HashTable.1685" = type <{ %"struct.WTF::KeyValuePair.1688"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1688" = type opaque
%"class.WTF::Vector.1692" = type { %"class.WTF::VectorBuffer.1693" }
%"class.WTF::VectorBuffer.1693" = type { %"class.WTF::VectorBufferBase.1694", [5120 x i8] }
%"class.WTF::VectorBufferBase.1694" = type { %"struct.blink::NGInlineItemResult"*, i32, i32 }
%"struct.blink::NGInlineItemResult" = type { %"class.blink::NGInlineItem"*, i32, %"struct.blink::NGTextOffset", %"class.absl::optional.1695", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %class.scoped_refptr.1700, %"class.WTF::String", %class.scoped_refptr.1639, %class.scoped_refptr.1701, %"class.absl::optional.1891", %"struct.blink::NGLineBoxStrut", %"struct.blink::NGLineBoxStrut", %"struct.blink::NGLineBoxStrut", i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.blink::NGTextOffset" = type { i32, i32 }
%"class.absl::optional.1695" = type { %"class.absl::optional_internal::optional_data.1696" }
%"class.absl::optional_internal::optional_data.1696" = type { %"class.absl::optional_internal::optional_data_base.1697" }
%"class.absl::optional_internal::optional_data_base.1697" = type { %"class.absl::optional_internal::optional_data_dtor_base.1698" }
%"class.absl::optional_internal::optional_data_dtor_base.1698" = type { i8, %union.anon.1699 }
%union.anon.1699 = type { i32 }
%class.scoped_refptr.1700 = type { %"class.blink::ShapeResultView"* }
%class.scoped_refptr.1701 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.1702", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.1849, %union.anon.1867, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.1702" = type { %"class.base::RefCounted.1703" }
%"class.base::RefCounted.1703" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.1704, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1704 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.1705 }
%union.anon.1705 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.1739 }
%class.scoped_refptr.1739 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.1740", [4 x i8], %"class.std::__1::unique_ptr.1742", i64, %"class.WTF::Vector.1746", %"class.WTF::Vector.1751", %"class.WTF::Vector.1757", %"class.WTF::Vector.1775", %class.scoped_refptr.1546, %"class.WTF::HashMap.1781", %"class.WTF::Vector.1786", %"class.WTF::Vector.1746", %"class.WTF::Vector.1791", %"class.WTF::HashMap.1796", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1740" = type { %"class.base::RefCountedThreadSafe.1741" }
%"class.base::RefCountedThreadSafe.1741" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1742" = type { %"class.std::__1::__compressed_pair.1743" }
%"class.std::__1::__compressed_pair.1743" = type { %"struct.std::__1::__compressed_pair_elem.1744" }
%"struct.std::__1::__compressed_pair_elem.1744" = type { i8* }
%"class.WTF::Vector.1751" = type { %"class.WTF::VectorBuffer.1752" }
%"class.WTF::VectorBuffer.1752" = type { %"class.WTF::VectorBufferBase.1753", [8 x i8] }
%"class.WTF::VectorBufferBase.1753" = type { %class.scoped_refptr.1754*, i32, i32 }
%class.scoped_refptr.1754 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1757" = type { %"class.WTF::VectorBuffer.1758" }
%"class.WTF::VectorBuffer.1758" = type { %"class.WTF::VectorBufferBase.1759" }
%"class.WTF::VectorBufferBase.1759" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1761", %"class.std::__1::unique_ptr.1767" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1760 }
%class.scoped_refptr.1760 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1761" = type { %"class.std::__1::__compressed_pair.1762" }
%"class.std::__1::__compressed_pair.1762" = type { %"struct.std::__1::__compressed_pair_elem.1763" }
%"struct.std::__1::__compressed_pair_elem.1763" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1767" = type { %"class.std::__1::__compressed_pair.1768" }
%"class.std::__1::__compressed_pair.1768" = type { %"struct.std::__1::__compressed_pair_elem.1769" }
%"struct.std::__1::__compressed_pair_elem.1769" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1775" = type { %"class.WTF::VectorBuffer.1776" }
%"class.WTF::VectorBuffer.1776" = type { %"class.WTF::VectorBufferBase.1777" }
%"class.WTF::VectorBufferBase.1777" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1778", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1778" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1781" = type { %"class.WTF::HashTable.1782" }
%"class.WTF::HashTable.1782" = type <{ %"struct.WTF::KeyValuePair.1785"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1785" = type opaque
%"class.WTF::Vector.1786" = type { %"class.WTF::VectorBuffer.1787" }
%"class.WTF::VectorBuffer.1787" = type { %"class.WTF::VectorBufferBase.1788" }
%"class.WTF::VectorBufferBase.1788" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.1746" = type { %"class.WTF::VectorBuffer.1747" }
%"class.WTF::VectorBuffer.1747" = type { %"class.WTF::VectorBufferBase.1748", [16 x i8] }
%"class.WTF::VectorBufferBase.1748" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1791" = type { %"class.WTF::VectorBuffer.1792" }
%"class.WTF::VectorBuffer.1792" = type { %"class.WTF::VectorBufferBase.1793" }
%"class.WTF::VectorBufferBase.1793" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.1796" = type { %"class.WTF::HashTable.1797" }
%"class.WTF::HashTable.1797" = type <{ %"struct.WTF::KeyValuePair.1800"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1800" = type { i8**, %"class.std::__1::unique_ptr.2029" }
%"class.std::__1::unique_ptr.2029" = type { %"class.std::__1::__compressed_pair.2030" }
%"class.std::__1::__compressed_pair.2030" = type { %"struct.std::__1::__compressed_pair_elem.2031" }
%"struct.std::__1::__compressed_pair_elem.2031" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.1801" }
%"class.std::__1::unique_ptr.1801" = type { %"class.std::__1::__compressed_pair.1802" }
%"class.std::__1::__compressed_pair.1802" = type { %"struct.std::__1::__compressed_pair_elem.1803" }
%"struct.std::__1::__compressed_pair_elem.1803" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.1804, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.1821" }
%class.scoped_refptr.1804 = type { %"class.base::RefCountedData.1805"* }
%"class.base::RefCountedData.1805" = type { %"class.base::RefCountedThreadSafe.1806", %"class.WTF::Vector.1807" }
%"class.base::RefCountedThreadSafe.1806" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1807" = type { %"class.WTF::VectorBuffer.1808" }
%"class.WTF::VectorBuffer.1808" = type { %"class.WTF::VectorBufferBase.1809" }
%"class.WTF::VectorBufferBase.1809" = type { %class.scoped_refptr.1810*, i32, i32 }
%class.scoped_refptr.1810 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.1811", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.1813" }
%"class.WTF::RefCounted.1811" = type { %"class.base::RefCounted.1812" }
%"class.base::RefCounted.1812" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.1813" = type { %"class.std::__1::__compressed_pair.1814" }
%"class.std::__1::__compressed_pair.1814" = type { %"struct.std::__1::__compressed_pair_elem.1815" }
%"struct.std::__1::__compressed_pair_elem.1815" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1701, %"class.WTF::Vector.1901", %"class.std::__1::unique_ptr.1906", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1927, %"class.blink::Persistent.1928" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::Vector.1901" = type { %"class.WTF::VectorBuffer.1902" }
%"class.WTF::VectorBuffer.1902" = type { %"class.WTF::VectorBufferBase.1903", [8 x i8] }
%"class.WTF::VectorBufferBase.1903" = type { %class.scoped_refptr.1701*, i32, i32 }
%"class.std::__1::unique_ptr.1906" = type { %"class.std::__1::__compressed_pair.1907" }
%"class.std::__1::__compressed_pair.1907" = type { %"struct.std::__1::__compressed_pair_elem.1908" }
%"struct.std::__1::__compressed_pair_elem.1908" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1909", %"class.absl::optional.1914", %"class.absl::optional.1919" }
%"class.absl::optional.1909" = type { %"class.absl::optional_internal::optional_data.1910" }
%"class.absl::optional_internal::optional_data.1910" = type { %"class.absl::optional_internal::optional_data_base.1911" }
%"class.absl::optional_internal::optional_data_base.1911" = type { %"class.absl::optional_internal::optional_data_dtor_base.1912" }
%"class.absl::optional_internal::optional_data_dtor_base.1912" = type { i8, %union.anon.1913 }
%union.anon.1913 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1914" = type { %"class.absl::optional_internal::optional_data.1915" }
%"class.absl::optional_internal::optional_data.1915" = type { %"class.absl::optional_internal::optional_data_base.1916" }
%"class.absl::optional_internal::optional_data_base.1916" = type { %"class.absl::optional_internal::optional_data_dtor_base.1917" }
%"class.absl::optional_internal::optional_data_dtor_base.1917" = type { i8, [3 x i8], %union.anon.1918 }
%union.anon.1918 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1919" = type { %"class.absl::optional_internal::optional_data.1920" }
%"class.absl::optional_internal::optional_data.1920" = type { %"class.absl::optional_internal::optional_data_base.1921" }
%"class.absl::optional_internal::optional_data_base.1921" = type { %"class.absl::optional_internal::optional_data_dtor_base.1922" }
%"class.absl::optional_internal::optional_data_dtor_base.1922" = type { i8, %union.anon.1923 }
%union.anon.1923 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1927 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1928" = type { %"class.blink::PersistentBase.1929" }
%"class.blink::PersistentBase.1929" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1932", %"struct.blink::PhysicalRect", %"class.blink::Member.1942" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.std::__1::unique_ptr.1932" = type { %"class.std::__1::__compressed_pair.1933" }
%"class.std::__1::__compressed_pair.1933" = type { %"struct.std::__1::__compressed_pair_elem.1934" }
%"struct.std::__1::__compressed_pair_elem.1934" = type { %"class.WTF::HashSet.1935"* }
%"class.WTF::HashSet.1935" = type { %"class.WTF::HashTable.1936" }
%"class.WTF::HashTable.1936" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1942" = type { %"class.blink::MemberBase.1943" }
%"class.blink::MemberBase.1943" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1821" = type { %"class.std::__1::__compressed_pair.1822" }
%"class.std::__1::__compressed_pair.1822" = type { %"struct.std::__1::__compressed_pair_elem.1823" }
%"struct.std::__1::__compressed_pair_elem.1823" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.1824", %"class.WTF::Vector.1837", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1824" = type { %"class.WTF::VectorBuffer.1825" }
%"class.WTF::VectorBuffer.1825" = type { %"class.WTF::VectorBufferBase.1826", [320 x i8] }
%"class.WTF::VectorBufferBase.1826" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.1827", %"class.WTF::Vector.1827", %class.scoped_refptr.1832, i8, [7 x i8] }>
%"class.WTF::Vector.1827" = type { %"class.WTF::VectorBuffer.1828" }
%"class.WTF::VectorBuffer.1828" = type { %"class.WTF::VectorBufferBase.1829", [8 x i8] }
%"class.WTF::VectorBufferBase.1829" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1832 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.1833", %"class.WTF::Vector.1807", %"class.WTF::Vector.1807" }
%"class.WTF::RefCounted.1833" = type { %"class.base::RefCounted.1834" }
%"class.base::RefCounted.1834" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1837" = type { %"class.WTF::VectorBuffer.1838" }
%"class.WTF::VectorBuffer.1838" = type { %"class.WTF::VectorBufferBase.1839", [288 x i8] }
%"class.WTF::VectorBufferBase.1839" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.1827", %"class.WTF::Vector.1827" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.1840 }
%class.scoped_refptr.1840 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%class.scoped_refptr.1849 = type { %"class.blink::NGPhysicalFragment"* }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.1850", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.1852, %"class.std::__1::unique_ptr.1855" }
%"class.WTF::RefCounted.1850" = type { %"class.base::RefCounted.1851" }
%"class.base::RefCounted.1851" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1852 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.1853", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.1853" = type { %"class.base::RefCounted.1854" }
%"class.base::RefCounted.1854" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1855" = type { %"class.std::__1::__compressed_pair.1856" }
%"class.std::__1::__compressed_pair.1856" = type { %"struct.std::__1::__compressed_pair_elem.1857" }
%"struct.std::__1::__compressed_pair_elem.1857" = type { %"class.WTF::Vector.1858"* }
%"class.WTF::Vector.1858" = type { %"class.WTF::VectorBuffer.1859" }
%"class.WTF::VectorBuffer.1859" = type { %"class.WTF::VectorBufferBase.1860" }
%"class.WTF::VectorBufferBase.1860" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.1861 }
%union.anon.1861 = type { %"class.blink::LineBoxList" }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%union.anon.1867 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.1706", %class.scoped_refptr.1868, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.1869, %"class.blink::NGExclusionSpace", %class.scoped_refptr.1739, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.1870", %"class.absl::optional.1886" }
%"class.absl::optional.1706" = type { %"class.absl::optional_internal::optional_data.1707" }
%"class.absl::optional_internal::optional_data.1707" = type { %"class.absl::optional_internal::optional_data_base.1708" }
%"class.absl::optional_internal::optional_data_base.1708" = type { %"class.absl::optional_internal::optional_data_dtor_base.1709" }
%"class.absl::optional_internal::optional_data_dtor_base.1709" = type { i8, %union.anon.1710 }
%union.anon.1710 = type { %"class.blink::LayoutUnit" }
%class.scoped_refptr.1868 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.1898", [4 x i8], %union.anon.1900, %class.scoped_refptr.1868, i32, [4 x i8] }>
%"class.WTF::RefCounted.1898" = type { %"class.base::RefCounted.1899" }
%"class.base::RefCounted.1899" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.1900 = type { %"class.blink::LayoutBox"* }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%union.anon.1869 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1870" = type { %"class.std::__1::__compressed_pair.1871" }
%"class.std::__1::__compressed_pair.1871" = type { %"struct.std::__1::__compressed_pair_elem.1872" }
%"struct.std::__1::__compressed_pair_elem.1872" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.1873", %"class.WTF::Vector.1878", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1873" = type { %"class.WTF::VectorBuffer.1874" }
%"class.WTF::VectorBuffer.1874" = type { %"class.WTF::VectorBufferBase.1875" }
%"class.WTF::VectorBufferBase.1875" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1878" = type { %"class.WTF::VectorBuffer.1879" }
%"class.WTF::VectorBuffer.1879" = type { %"class.WTF::VectorBufferBase.1880" }
%"class.WTF::VectorBufferBase.1880" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.1886" = type { %"class.absl::optional_internal::optional_data.1887" }
%"class.absl::optional_internal::optional_data.1887" = type { %"class.absl::optional_internal::optional_data_base.1888" }
%"class.absl::optional_internal::optional_data_base.1888" = type { %"class.absl::optional_internal::optional_data_dtor_base.1889" }
%"class.absl::optional_internal::optional_data_dtor_base.1889" = type { i8, %union.anon.1890 }
%union.anon.1890 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.absl::optional.1891" = type { %"class.absl::optional_internal::optional_data.1892" }
%"class.absl::optional_internal::optional_data.1892" = type { %"class.absl::optional_internal::optional_data_base.1893" }
%"class.absl::optional_internal::optional_data_base.1893" = type { %"class.absl::optional_internal::optional_data_dtor_base.1894" }
%"class.absl::optional_internal::optional_data_dtor_base.1894" = type { i8, [7 x i8], %union.anon.1895 }
%union.anon.1895 = type { %"struct.blink::NGPositionedFloat" }
%"struct.blink::NGPositionedFloat" = type <{ %class.scoped_refptr.1701, %"struct.blink::NGBfcOffset", i8, [7 x i8] }>
%"struct.blink::NGLineBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::HarfBuzzShaper" = type { %"class.WTF::String", %"class.base::RepeatingCallback" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.blink::NGLogicalLineItems" = type { %"class.WTF::Vector.1945" }
%"class.WTF::Vector.1945" = type { %"class.WTF::VectorBuffer.1946" }
%"class.WTF::VectorBuffer.1946" = type { %"class.WTF::VectorBufferBase.1947", [1920 x i8] }
%"class.WTF::VectorBufferBase.1947" = type { %"struct.blink::NGLogicalLineItem"*, i32, i32 }
%"struct.blink::NGLogicalLineItem" = type <{ %class.scoped_refptr.1701, %"class.blink::NGInlineItem"*, %class.scoped_refptr.1700, %"struct.blink::NGTextOffset", %"class.WTF::String", %"class.blink::LayoutObject"*, i32, [4 x i8], %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"struct.blink::LogicalRect", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, i8, i8, [4 x i8] }>
%"struct.blink::LogicalRect" = type { %"struct.blink::LogicalOffset", %"struct.blink::LogicalSize" }
%"class.blink::NGInlineLayoutStateStack" = type <{ %"class.WTF::Vector.1950", %"class.WTF::Vector.1965", i8, i8, [6 x i8] }>
%"class.WTF::Vector.1950" = type { %"class.WTF::VectorBuffer.1951" }
%"class.WTF::VectorBuffer.1951" = type { %"class.WTF::VectorBufferBase.1952", [896 x i8] }
%"class.WTF::VectorBufferBase.1952" = type { %"struct.blink::NGInlineBoxState"*, i32, i32 }
%"struct.blink::NGInlineBoxState" = type <{ i32, [4 x i8], %"class.blink::NGInlineItem"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*, %"class.absl::optional.1953", float, %"struct.blink::FontHeight", %"struct.blink::FontHeight", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8], %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGLineBoxStrut", %"struct.blink::NGLineBoxStrut", %"class.WTF::Vector.1958", i8, i8, i8, [5 x i8] }>
%"class.absl::optional.1953" = type { %"class.absl::optional_internal::optional_data.1954" }
%"class.absl::optional_internal::optional_data.1954" = type { %"class.absl::optional_internal::optional_data_base.1955" }
%"class.absl::optional_internal::optional_data_base.1955" = type { %"class.absl::optional_internal::optional_data_dtor_base.1956" }
%"class.absl::optional_internal::optional_data_dtor_base.1956" = type { i8, %union.anon.1957 }
%union.anon.1957 = type { %"class.blink::Font" }
%"class.WTF::Vector.1958" = type { %"class.WTF::VectorBuffer.1959" }
%"class.WTF::VectorBuffer.1959" = type { %"class.WTF::VectorBufferBase.1960" }
%"class.WTF::VectorBufferBase.1960" = type { %"struct.blink::NGPendingPositions"*, i32, i32 }
%"struct.blink::NGPendingPositions" = type { i32, i32, %"struct.blink::FontHeight", i32 }
%"class.WTF::Vector.1965" = type { %"class.WTF::VectorBuffer.1966" }
%"class.WTF::VectorBuffer.1966" = type { %"class.WTF::VectorBufferBase.1967", [320 x i8] }
%"class.WTF::VectorBufferBase.1967" = type { %"struct.blink::NGInlineLayoutStateStack::BoxData"*, i32, i32 }
%"struct.blink::NGInlineLayoutStateStack::BoxData" = type <{ i32, i32, %"class.blink::NGInlineItem"*, %"struct.blink::LogicalRect", i8, i8, [2 x i8], %"struct.blink::NGLineBoxStrut", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, [4 x i8] }>
%"class.absl::optional.1970" = type { %"class.absl::optional_internal::optional_data.1971" }
%"class.absl::optional_internal::optional_data.1971" = type { %"class.absl::optional_internal::optional_data_base.1972" }
%"class.absl::optional_internal::optional_data_base.1972" = type { %"class.absl::optional_internal::optional_data_dtor_base.1973" }
%"class.absl::optional_internal::optional_data_dtor_base.1973" = type { i8, [7 x i8], %union.anon.1974 }
%union.anon.1974 = type { %"struct.blink::NGLogicalLineItem" }
%"class.blink::NGPhysicalBoxFragment" = type { %"class.blink::NGPhysicalFragment", i24, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGInkOverflow", [0 x %"struct.blink::NGLink"] }
%"class.blink::NGInkOverflow" = type { %union.anon.1975 }
%union.anon.1975 = type { %"struct.blink::NGSingleInkOverflow"* }
%"struct.blink::NGSingleInkOverflow" = type { %"struct.blink::PhysicalRect" }
%"struct.blink::NGLink" = type { %"class.blink::NGPhysicalFragment"*, %"struct.blink::PhysicalOffset" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink18NGLogicalLineItems8AddChildIJRKNS_12LayoutObjectENS_14NGStyleVariantE13scoped_refptrINS_15ShapeResultViewEERN3WTF6StringENS_11LogicalRectEiEEEvDpOT_ = comdat any

$_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE6insertIRS2_EEvjOT_ = comdat any

$_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink17NGLogicalLineItemEEEmm = comdat any

$_ZN3WTF12VectorBufferIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink17NGLogicalLineItemaSEOS0_ = comdat any

@_ZN3WTF7unicodeL28kHorizontalEllipsisCharacterE = internal constant i16 8230, align 2
@.str = private unnamed_addr constant [4 x i16] [i16 46, i16 46, i16 46, i16 0], align 2
@.str.1 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"position <= size()\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.7 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17NGLogicalLineItemEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NGLogicalLineItem]\00", align 1

@_ZN5blink15NGLineTruncatorC1ERKNS_10NGLineInfoE = hidden unnamed_addr alias void (%"class.blink::NGLineTruncator"*, %"class.blink::NGLineInfo"*), void (%"class.blink::NGLineTruncator"*, %"class.blink::NGLineInfo"*)* @_ZN5blink15NGLineTruncatorC2ERKNS_10NGLineInfoE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15NGLineTruncatorC2ERKNS_10NGLineInfoE(%"class.blink::NGLineTruncator"* nocapture, %"class.blink::NGLineInfo"* nocapture readonly dereferenceable(5208)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 1
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 0, i32 0
  store %"class.blink::ComputedStyle"* %4, %"class.blink::ComputedStyle"** %5, align 8
  %6 = icmp eq %"class.blink::ComputedStyle"* %4, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %8) #10
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 4, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 7, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, -1
  %15 = select i1 %14, i32 -2147483648, i32 2147483647
  %16 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %11, i32 %13) #10
  %17 = extractvalue { i32, i1 } %16, 1
  %18 = extractvalue { i32, i1 } %16, 0
  %19 = select i1 %17, i32 %15, i32 %18, !prof !2
  %20 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 1, i32 0
  store i32 %19, i32* %20, align 8
  %21 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 2
  %22 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 12
  %23 = load i8, i8* %22, align 8
  store i8 %23, i8* %21, align 4
  %24 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %24, align 8
  %25 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 5, i32 0
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 6, i32 0
  store %"class.blink::ShapeResultView"* null, %"class.blink::ShapeResultView"** %26, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink15NGLineTruncator13EllipsisStyleEv(%"class.blink::NGLineTruncator"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  ret %"class.blink::ComputedStyle"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15NGLineTruncator13SetupEllipsisEv(%"class.blink::NGLineTruncator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.blink::HarfBuzzShaper", align 8
  %4 = alloca %"class.base::RepeatingCallback", align 8
  %5 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %8, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %10, i64 0, i32 1
  %12 = tail call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %11) #10
  %13 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %12, i64 0, i32 2
  %14 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %13, align 8
  %15 = icmp eq %"class.blink::SimpleFontData"* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 3
  store %"class.blink::SimpleFontData"* %14, %"class.blink::SimpleFontData"** %17, align 8
  %18 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  br label %25

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %11, i64 0, i32 0
  %21 = tail call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %12, %"class.blink::FontDescription"* dereferenceable(80) %20) #10
  store %"class.blink::SimpleFontData"* %21, %"class.blink::SimpleFontData"** %13, align 8
  %22 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 3
  store %"class.blink::SimpleFontData"* %21, %"class.blink::SimpleFontData"** %22, align 8
  %23 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  %24 = icmp eq %"class.blink::SimpleFontData"* %21, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %16, %19
  %26 = phi i8* [ %18, %16 ], [ %23, %19 ]
  %27 = phi %"class.blink::SimpleFontData"* [ %14, %16 ], [ %21, %19 ]
  %28 = tail call zeroext i16 @_ZNK5blink14SimpleFontData17GlyphForCharacterEi(%"class.blink::SimpleFontData"* nonnull %27, i32 8230) #10
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %25
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %2, i16* nonnull @_ZN3WTF7unicodeL28kHorizontalEllipsisCharacterE, i32 1) #10
  br label %33

31:                                               ; preds = %25, %19
  %32 = phi i8* [ %26, %25 ], [ %23, %19 ]
  call void @_ZN3WTF6StringC1EPKDs(%"class.WTF::String"* nonnull %2, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @.str, i64 0, i64 0)) #10
  br label %33

33:                                               ; preds = %31, %30
  %34 = phi i8* [ %32, %31 ], [ %26, %30 ]
  %35 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 4
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %37 = bitcast %"class.WTF::String"* %2 to i64*
  %38 = load i64, i64* %37, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %36, align 8
  %39 = bitcast %"class.WTF::String"* %35 to i64*
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  store i64 %38, i64* %39, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #10
  br label %56

56:                                               ; preds = %33, %52, %55
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #10
  br label %72

72:                                               ; preds = %56, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  %73 = bitcast %"class.blink::HarfBuzzShaper"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #10
  %74 = getelementptr inbounds %"class.blink::HarfBuzzShaper", %"class.blink::HarfBuzzShaper"* %3, i64 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.blink::HarfBuzzShaper", %"class.blink::HarfBuzzShaper"* %3, i64 0, i32 1
  %76 = bitcast %"class.base::RepeatingCallback"* %75 to i64*
  store i64 -6148914691236517206, i64* %76, align 8
  %77 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %77, align 8
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  store %"class.WTF::StringImpl"* %78, %"class.WTF::StringImpl"** %74, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %97, label %80

80:                                               ; preds = %72
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %97

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i33
  %89 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %88, i33 1) #10
  %90 = extractvalue { i33, i1 } %89, 1
  %91 = extractvalue { i33, i1 } %89, 0
  %92 = icmp slt i33 %91, 0
  %93 = or i1 %90, %92
  br i1 %93, label %94, label %95, !prof !2

94:                                               ; preds = %85
  call void @llvm.trap() #10
  unreachable

95:                                               ; preds = %85
  %96 = trunc i33 %91 to i32
  store i32 %96, i32* %86, align 4
  br label %97

97:                                               ; preds = %72, %80, %95
  %98 = getelementptr inbounds %"class.blink::HarfBuzzShaper", %"class.blink::HarfBuzzShaper"* %3, i64 0, i32 1, i32 0
  %99 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %98, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %99) #10
  %100 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %100) #10
  %101 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 2
  %102 = load i8, i8* %101, align 4
  %103 = call %"class.blink::ShapeResult"* @_ZNK5blink14HarfBuzzShaper5ShapeEPKNS_4FontENS_13TextDirectionE(%"class.blink::HarfBuzzShaper"* nonnull %3, %"class.blink::Font"* %11, i8 zeroext %102) #10
  %104 = call %"class.blink::ShapeResultView"* @_ZN5blink15ShapeResultView6CreateEPKNS_11ShapeResultE(%"class.blink::ShapeResult"* %103) #10
  %105 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 6
  %106 = ptrtoint %"class.blink::ShapeResultView"* %104 to i64
  %107 = bitcast %class.scoped_refptr.1631* %105 to i64*
  %108 = getelementptr inbounds %class.scoped_refptr.1631, %class.scoped_refptr.1631* %105, i64 0, i32 0
  %109 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %108, align 8
  store i64 %106, i64* %107, align 8
  %110 = icmp eq %"class.blink::ShapeResultView"* %109, null
  br i1 %110, label %118, label %111

111:                                              ; preds = %97
  %112 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %109, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %112) #10
  %113 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %109, i64 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %111
  call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %109) #10
  %117 = bitcast %"class.blink::ShapeResultView"* %109 to i8*
  call void @free(i8* %117) #10
  br label %118

118:                                              ; preds = %97, %111, %116
  %119 = icmp eq %"class.blink::ShapeResult"* %103, null
  br i1 %119, label %127, label %120

120:                                              ; preds = %118
  %121 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %103, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %121) #10
  %122 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %103, i64 0, i32 0, i32 0, i32 0, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %127

125:                                              ; preds = %120
  call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %103) #10
  %126 = bitcast %"class.blink::ShapeResult"* %103 to i8*
  call void @free(i8* %126) #10
  br label %127

127:                                              ; preds = %118, %120, %125
  %128 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %108, align 8
  %129 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %128, i64 0, i32 6
  %130 = load float, float* %129, align 8
  %131 = fmul float %130, 6.400000e+01
  %132 = call float @llvm.ceil.f32(float %131) #10
  %133 = fcmp ult float %132, 0xC1E0000000000000
  %134 = fcmp ugt float %132, 0x41DFFFFFE0000000
  %135 = fcmp ogt float %132, 0xC1E0000000000000
  %136 = select i1 %135, float %132, float 0xC1E0000000000000
  %137 = fptosi float %136 to i32
  %138 = select i1 %133, i32 0, i32 2147483647
  %139 = select i1 %134, i32 %138, i32 %137
  %140 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 5, i32 0
  store i32 %139, i32* %140, align 8
  %141 = getelementptr inbounds %"class.blink::HarfBuzzShaper", %"class.blink::HarfBuzzShaper"* %3, i64 0, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %141) #10
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %157, label %144

144:                                              ; preds = %127
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %153

151:                                              ; preds = %144
  %152 = add i32 %150, -1
  store i32 %152, i32* %149, align 4
  br label %153

153:                                              ; preds = %151, %144
  %154 = phi i32 [ %152, %151 ], [ %150, %144 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %142) #10
  br label %157

157:                                              ; preds = %127, %153, %156
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #10
  ret void
}

declare zeroext i16 @_ZNK5blink14SimpleFontData17GlyphForCharacterEi(%"class.blink::SimpleFontData"*, i32) local_unnamed_addr #3

declare void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"*, i16*, i32) unnamed_addr #3

declare void @_ZN3WTF6StringC1EPKDs(%"class.WTF::String"*, i16*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

declare %"class.blink::ShapeResultView"* @_ZN5blink15ShapeResultView6CreateEPKNS_11ShapeResultE(%"class.blink::ShapeResult"*) local_unnamed_addr #3

declare %"class.blink::ShapeResult"* @_ZNK5blink14HarfBuzzShaper5ShapeEPKNS_4FontENS_13TextDirectionE(%"class.blink::HarfBuzzShaper"*, %"class.blink::Font"*, i8 zeroext) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink15NGLineTruncator19PlaceEllipsisNextToEPNS_18NGLogicalLineItemsEPNS_17NGLogicalLineItemE(%"class.blink::NGLineTruncator"*, %"class.blink::NGLogicalLineItems"*, %"struct.blink::NGLogicalLineItem"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"struct.blink::LogicalRect", align 4
  %6 = alloca i32, align 4
  %7 = tail call %"class.blink::LayoutObject"* @_ZNK5blink17NGLogicalLineItem22GetMutableLayoutObjectEv(%"struct.blink::NGLogicalLineItem"* %2) #10
  %8 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 4
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %2, i64 0, i32 10, i32 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  br i1 %10, label %13, label %19

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %2, i64 0, i32 12, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %15, 0
  %17 = select i1 %16, i32 -2147483648, i32 2147483647
  %18 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %12, i32 %15) #10
  br label %25

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 5, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, -1
  %23 = select i1 %22, i32 -2147483648, i32 2147483647
  %24 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %12, i32 %21) #10
  br label %25

25:                                               ; preds = %19, %13
  %26 = phi { i32, i1 } [ %24, %19 ], [ %18, %13 ]
  %27 = phi i32 [ %23, %19 ], [ %17, %13 ]
  %28 = extractvalue { i32, i1 } %26, 1
  %29 = extractvalue { i32, i1 } %26, 0
  %30 = select i1 %28, i32 %27, i32 %29
  %31 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 3
  %32 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %31, align 8
  %33 = icmp eq %"class.blink::SimpleFontData"* %32, null
  br i1 %33, label %74, label %34

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 0, i32 0
  %36 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %35, align 8
  %37 = tail call i32 @_ZNK5blink13ComputedStyle15GetFontBaselineEv(%"class.blink::ComputedStyle"* %36) #10
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %32, i64 0, i32 1, i32 9
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %56

41:                                               ; preds = %34
  %42 = icmp sgt i32 %40, 33554431
  br i1 %42, label %47, label %43

43:                                               ; preds = %41
  %44 = icmp slt i32 %40, -33554432
  %45 = shl i32 %40, 6
  %46 = select i1 %44, i32 -2147483648, i32 %45
  br label %47

47:                                               ; preds = %43, %41
  %48 = phi i32 [ 2147483647, %41 ], [ %46, %43 ]
  %49 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %32, i64 0, i32 1, i32 10
  %50 = load i32, i32* %49, align 4
  %51 = icmp sgt i32 %50, 33554431
  br i1 %51, label %74, label %52

52:                                               ; preds = %47
  %53 = icmp slt i32 %50, -33554432
  %54 = shl i32 %50, 6
  %55 = select i1 %53, i32 -2147483648, i32 %54
  br label %74

56:                                               ; preds = %34
  %57 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %32, i64 0, i32 1, i32 10
  %58 = load i32, i32* %57, align 4
  %59 = add nsw i32 %58, %40
  %60 = sdiv i32 %59, 2
  %61 = sub nsw i32 %59, %60
  %62 = icmp sgt i32 %61, 33554431
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = icmp slt i32 %61, -33554432
  %65 = shl i32 %61, 6
  %66 = select i1 %64, i32 -2147483648, i32 %65
  br label %67

67:                                               ; preds = %63, %56
  %68 = phi i32 [ 2147483647, %56 ], [ %66, %63 ]
  %69 = icmp sgt i32 %59, 67108863
  br i1 %69, label %74, label %70

70:                                               ; preds = %67
  %71 = icmp slt i32 %59, -67108865
  %72 = shl i32 %60, 6
  %73 = select i1 %71, i32 -2147483648, i32 %72
  br label %74

74:                                               ; preds = %70, %67, %52, %47, %25
  %75 = phi i32 [ 0, %25 ], [ 2147483647, %47 ], [ 2147483647, %67 ], [ %55, %52 ], [ %73, %70 ]
  %76 = phi i32 [ 0, %25 ], [ %48, %47 ], [ %68, %67 ], [ %48, %52 ], [ %68, %70 ]
  %77 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %77) #10
  store i32 2, i32* %4, align 4
  %78 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 6
  %79 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 4
  %80 = bitcast %"struct.blink::LogicalRect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #10
  %81 = tail call i1 @llvm.is.constant.i32(i32 %76) #10
  br i1 %81, label %82, label %86

82:                                               ; preds = %74
  %83 = sub i32 0, %76
  %84 = icmp eq i32 %83, -2147483648
  %85 = select i1 %84, i32 2147483647, i32 %83
  br label %91

86:                                               ; preds = %74
  %87 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %76) #10
  %88 = extractvalue { i32, i1 } %87, 1
  %89 = extractvalue { i32, i1 } %87, 0
  %90 = select i1 %88, i32 2147483647, i32 %89
  br label %91

91:                                               ; preds = %82, %86
  %92 = phi i32 [ %85, %82 ], [ %90, %86 ]
  %93 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 5, i32 0
  %94 = load i32, i32* %93, align 8
  %95 = icmp slt i32 %75, 0
  %96 = select i1 %95, i32 -2147483648, i32 2147483647
  %97 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %76, i32 %75) #10
  %98 = extractvalue { i32, i1 } %97, 1
  %99 = extractvalue { i32, i1 } %97, 0
  %100 = select i1 %98, i32 %96, i32 %99, !prof !2
  %101 = getelementptr inbounds %"struct.blink::LogicalRect", %"struct.blink::LogicalRect"* %5, i64 0, i32 0, i32 0, i32 0
  store i32 %30, i32* %101, align 4
  %102 = getelementptr inbounds %"struct.blink::LogicalRect", %"struct.blink::LogicalRect"* %5, i64 0, i32 0, i32 1, i32 0
  store i32 %92, i32* %102, align 4
  %103 = getelementptr inbounds %"struct.blink::LogicalRect", %"struct.blink::LogicalRect"* %5, i64 0, i32 1, i32 0, i32 0
  store i32 %94, i32* %103, align 4
  %104 = getelementptr inbounds %"struct.blink::LogicalRect", %"struct.blink::LogicalRect"* %5, i64 0, i32 1, i32 1, i32 0
  store i32 %100, i32* %104, align 4
  %105 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %105) #10
  store i32 0, i32* %6, align 4
  call void @_ZN5blink18NGLogicalLineItems8AddChildIJRKNS_12LayoutObjectENS_14NGStyleVariantE13scoped_refptrINS_15ShapeResultViewEERN3WTF6StringENS_11LogicalRectEiEEEvDpOT_(%"class.blink::NGLogicalLineItems"* %1, %"class.blink::LayoutObject"* dereferenceable(88) %7, i32* nonnull dereferenceable(4) %4, %class.scoped_refptr.1631* dereferenceable(8) %78, %"class.WTF::String"* dereferenceable(8) %79, %"struct.blink::LogicalRect"* nonnull dereferenceable(16) %5, i32* nonnull dereferenceable(4) %6)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %105) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %77) #10
  ret i32 %30
}

declare %"class.blink::LayoutObject"* @_ZNK5blink17NGLogicalLineItem22GetMutableLayoutObjectEv(%"struct.blink::NGLogicalLineItem"*) local_unnamed_addr #3

declare i32 @_ZNK5blink13ComputedStyle15GetFontBaselineEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18NGLogicalLineItems8AddChildIJRKNS_12LayoutObjectENS_14NGStyleVariantE13scoped_refptrINS_15ShapeResultViewEERN3WTF6StringENS_11LogicalRectEiEEEvDpOT_(%"class.blink::NGLogicalLineItems"*, %"class.blink::LayoutObject"* dereferenceable(88), i32* dereferenceable(4), %class.scoped_refptr.1631* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"struct.blink::LogicalRect"* dereferenceable(16), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %8 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %9, %11
  br i1 %12, label %13, label %17, !prof !2

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %0, i64 0, i32 0
  %15 = add i32 %9, 1
  tail call void @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1945"* %14, i32 %15) #10
  %16 = load i32, i32* %8, align 4
  br label %17

17:                                               ; preds = %13, %7
  %18 = phi i32 [ %16, %13 ], [ %9, %7 ]
  %19 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.blink::NGLogicalLineItem"*, %"struct.blink::NGLogicalLineItem"** %19, align 8
  %21 = zext i32 %18 to i64
  %22 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %20, i64 %21
  %23 = bitcast %"struct.blink::NGLogicalLineItem"* %22 to i8*
  %24 = load i32, i32* %2, align 4
  %25 = getelementptr inbounds %class.scoped_refptr.1631, %class.scoped_refptr.1631* %3, i64 0, i32 0
  %26 = bitcast %class.scoped_refptr.1631* %3 to i64*
  %27 = load i64, i64* %26, align 8
  store %"class.blink::ShapeResultView"* null, %"class.blink::ShapeResultView"** %25, align 8
  %28 = load i32, i32* %6, align 4
  %29 = trunc i32 %28 to i8
  %30 = inttoptr i64 %27 to %"class.blink::ShapeResultView"*
  %31 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %20, i64 %21, i32 2
  %32 = bitcast %class.scoped_refptr.1700* %31 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #10
  store i64 %27, i64* %32, align 8
  %33 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %30, i64 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %30, i64 0, i32 5
  %36 = load i32, i32* %35, align 4
  %37 = add i32 %36, %34
  %38 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %30, i64 0, i32 3
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %37, %39
  %41 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %20, i64 %21, i32 3, i32 0
  store i32 %37, i32* %41, align 4
  %42 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %20, i64 %21, i32 3, i32 1
  store i32 %40, i32* %42, align 4
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %20, i64 %21, i32 4, i32 0, i32 0
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %45, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %17
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #10
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !2

61:                                               ; preds = %52
  tail call void @llvm.trap() #10
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %17, %47, %62
  %65 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %20, i64 %21, i32 5
  store %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"** %65, align 8
  %66 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %20, i64 %21, i32 6
  store i32 %24, i32* %66, align 8
  %67 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %20, i64 %21, i32 8
  %68 = bitcast %"class.blink::LayoutObject"** %67 to i8*
  %69 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %20, i64 %21, i32 10
  %70 = bitcast %"struct.blink::LogicalRect"* %69 to i8*
  %71 = bitcast %"struct.blink::LogicalRect"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 4 %71, i64 16, i1 false) #10
  %72 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %20, i64 %21, i32 11, i32 0, i32 0
  store i32 0, i32* %72, align 4
  %73 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %20, i64 %21, i32 11, i32 1, i32 0
  store i32 0, i32* %73, align 4
  %74 = getelementptr inbounds %"struct.blink::LogicalRect", %"struct.blink::LogicalRect"* %5, i64 0, i32 1, i32 0, i32 0
  %75 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %20, i64 %21, i32 12, i32 0
  %76 = load i32, i32* %74, align 4
  store i32 %76, i32* %75, align 8
  %77 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %20, i64 %21, i32 13, i32 0
  store i32 0, i32* %77, align 4
  %78 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %20, i64 %21, i32 14
  store i32 0, i32* %78, align 8
  %79 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %20, i64 %21, i32 15
  store i32 0, i32* %79, align 4
  %80 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %20, i64 %21, i32 16
  store i8 %29, i8* %80, align 8
  %81 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %20, i64 %21, i32 17
  store i8 0, i8* %81, align 1
  %82 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %20, i64 %21, i32 18
  store i8 0, i8* %82, align 2
  %83 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %20, i64 %21, i32 19
  store i8 0, i8* %83, align 1
  %84 = load i32, i32* %8, align 4
  %85 = add i32 %84, 1
  store i32 %85, i32* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink15NGLineTruncator17AddTruncatedChildEjbNS_10LayoutUnitENS_13TextDirectionEPNS_18NGLogicalLineItemsEPNS_24NGInlineLayoutStateStackE(%"class.blink::NGLineTruncator"* nocapture readnone, i32, i1 zeroext, i32, i8 zeroext, %"class.blink::NGLogicalLineItems"*, %"class.blink::NGInlineLayoutStateStack"*) local_unnamed_addr #0 align 2 {
  %8 = alloca <{ [4 x i8], %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }>, align 4
  %9 = alloca %"struct.blink::LogicalRect", align 8
  %10 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %5, i64 0, i32 0
  %11 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %10, i32 %1) #10
  %12 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %11, i64 0, i32 2, i32 0
  %13 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %12, align 8
  %14 = tail call %"class.blink::ShapeResult"* @_ZNK5blink15ShapeResultView17CreateShapeResultEv(%"class.blink::ShapeResultView"* %13) #10
  %15 = sitofp i32 %3 to float
  %16 = fmul float %15, 1.562500e-02
  %17 = tail call i32 @_ZNK5blink11ShapeResult11OffsetToFitEfNS_13TextDirectionE(%"class.blink::ShapeResult"* %14, float %16, i8 zeroext %4) #10
  %18 = icmp eq i8 %4, 0
  %19 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %14, i64 0, i32 8
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 536870912
  %22 = icmp eq i32 %21, 0
  br i1 %18, label %23, label %30

23:                                               ; preds = %7
  br i1 %22, label %27, label %24

24:                                               ; preds = %23
  %25 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %14, i64 0, i32 7
  %26 = load i32, i32* %25, align 4
  br label %27

27:                                               ; preds = %23, %24
  %28 = phi i32 [ %26, %24 ], [ 0, %23 ]
  %29 = icmp eq i32 %28, %17
  br i1 %29, label %37, label %51

30:                                               ; preds = %7
  br i1 %22, label %33, label %31

31:                                               ; preds = %30
  %32 = icmp eq i32 %17, 0
  br i1 %32, label %37, label %51

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %14, i64 0, i32 7
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, %17
  br i1 %36, label %37, label %51

37:                                               ; preds = %31, %33, %27
  br i1 %2, label %38, label %167

38:                                               ; preds = %37
  %39 = icmp ne i8 %4, 0
  %40 = icmp ne i32 %21, 0
  %41 = xor i1 %39, %40
  br i1 %41, label %42, label %46

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %14, i64 0, i32 7
  %44 = load i32, i32* %43, align 4
  %45 = add i32 %44, -1
  br label %46

46:                                               ; preds = %38, %42
  %47 = phi i32 [ %45, %42 ], [ 1, %38 ]
  %48 = tail call float @_ZNK5blink11ShapeResult17PositionForOffsetEjNS_16AdjustMidClusterE(%"class.blink::ShapeResult"* %14, i32 %47, i32 0) #10
  %49 = tail call i32 @_ZNK5blink11ShapeResult11OffsetToFitEfNS_13TextDirectionE(%"class.blink::ShapeResult"* %14, float %48, i8 zeroext %4) #10
  %50 = load i32, i32* %19, align 8, !noalias !3
  br label %51

51:                                               ; preds = %31, %46, %33, %27
  %52 = phi i32 [ %50, %46 ], [ %20, %27 ], [ %20, %33 ], [ %20, %31 ]
  %53 = phi i32 [ %49, %46 ], [ %17, %27 ], [ %17, %33 ], [ %17, %31 ]
  %54 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds <{ [4 x i8], %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }>, <{ [4 x i8], %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }>* %8, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %56)
  %57 = bitcast %"struct.blink::LogicalRect"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57)
  %58 = lshr i32 %52, 29
  %59 = trunc i32 %58 to i8
  %60 = and i8 %59, 1
  %61 = icmp eq i8 %60, %4
  %62 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %11, i64 0, i32 3, i32 0
  %63 = load i32, i32* %62, align 8, !noalias !3
  %64 = add i32 %63, %53
  br i1 %61, label %68, label %65

65:                                               ; preds = %51
  %66 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %11, i64 0, i32 3, i32 1
  %67 = load i32, i32* %66, align 4, !noalias !3
  br label %68

68:                                               ; preds = %65, %51
  %69 = phi i32 [ %64, %65 ], [ %63, %51 ]
  %70 = phi i32 [ %67, %65 ], [ %64, %51 ]
  %71 = tail call %"class.blink::ShapeResultView"* @_ZN5blink15ShapeResultView6CreateEPKNS_11ShapeResultEjj(%"class.blink::ShapeResult"* %14, i32 %69, i32 %70) #10, !noalias !3
  %72 = ptrtoint %"class.blink::ShapeResultView"* %71 to i64
  %73 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %11, i64 0, i32 1
  %74 = bitcast %"class.blink::NGInlineItem"** %73 to i64*
  %75 = load i64, i64* %74, align 8, !noalias !3
  %76 = zext i32 %70 to i64
  %77 = shl nuw i64 %76, 32
  %78 = zext i32 %69 to i64
  %79 = or i64 %77, %78
  %80 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %11, i64 0, i32 4, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8, !noalias !3
  %82 = ptrtoint %"class.WTF::StringImpl"* %81 to i64
  %83 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %83, label %101, label %84

84:                                               ; preds = %68
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4, !noalias !3
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %101

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %91 = load i32, i32* %90, align 4, !noalias !3
  %92 = zext i32 %91 to i33
  %93 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %92, i33 1) #10
  %94 = extractvalue { i33, i1 } %93, 1
  %95 = extractvalue { i33, i1 } %93, 0
  %96 = icmp slt i33 %95, 0
  %97 = or i1 %94, %96
  br i1 %97, label %98, label %99, !prof !2

98:                                               ; preds = %89
  tail call void @llvm.trap() #10, !noalias !3
  unreachable

99:                                               ; preds = %89
  %100 = trunc i33 %95 to i32
  store i32 %100, i32* %90, align 4, !noalias !3
  br label %101

101:                                              ; preds = %68, %84, %99
  %102 = getelementptr inbounds <{ [4 x i8], %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }>, <{ [4 x i8], %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }>* %8, i64 0, i32 1
  %103 = bitcast %"class.blink::LayoutObject"** %102 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %103, i8 0, i64 16, i1 false), !alias.scope !3
  %104 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %11, i64 0, i32 10
  %105 = bitcast %"struct.blink::LogicalRect"* %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %57, i8* align 8 %105, i64 16, i1 false)
  %106 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %71, i64 0, i32 6
  %107 = load float, float* %106, align 8, !noalias !3
  %108 = fmul float %107, 6.400000e+01
  %109 = tail call float @llvm.ceil.f32(float %108) #10
  %110 = fcmp ult float %109, 0xC1E0000000000000
  %111 = fcmp ugt float %109, 0x41DFFFFFE0000000
  %112 = fcmp ogt float %109, 0xC1E0000000000000
  %113 = select i1 %112, float %109, float 0xC1E0000000000000
  %114 = fptosi float %113 to i32
  %115 = select i1 %110, i32 0, i32 2147483647
  %116 = select i1 %111, i32 %115, i32 %114
  %117 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %11, i64 0, i32 16
  %118 = load i8, i8* %117, align 8, !noalias !3
  %119 = load i32, i32* %54, align 4
  %120 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %121 = load i32, i32* %120, align 8
  %122 = icmp eq i32 %119, %121
  br i1 %122, label %123, label %126, !prof !2

123:                                              ; preds = %101
  %124 = add i32 %119, 1
  tail call void @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1945"* %10, i32 %124) #10
  %125 = load i32, i32* %54, align 4
  br label %126

126:                                              ; preds = %123, %101
  %127 = phi i32 [ %125, %123 ], [ %119, %101 ]
  %128 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %129 = load %"struct.blink::NGLogicalLineItem"*, %"struct.blink::NGLogicalLineItem"** %128, align 8
  %130 = zext i32 %127 to i64
  %131 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %129, i64 %130
  %132 = bitcast %"struct.blink::NGLogicalLineItem"* %131 to i64*
  store i64 0, i64* %132, align 8
  %133 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %129, i64 %130, i32 1
  %134 = bitcast %"class.blink::NGInlineItem"** %133 to i64*
  store i64 %75, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %129, i64 %130, i32 2
  %136 = bitcast %class.scoped_refptr.1700* %135 to i64*
  store i64 %72, i64* %136, align 8
  %137 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %129, i64 %130, i32 3
  %138 = bitcast %"struct.blink::NGTextOffset"* %137 to i64*
  store i64 %79, i64* %138, align 8
  %139 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %129, i64 %130, i32 4
  %140 = bitcast %"class.WTF::String"* %139 to i64*
  store i64 %82, i64* %140, align 8
  %141 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %129, i64 %130, i32 5
  %142 = bitcast %"class.blink::LayoutObject"** %141 to i8*
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %141, align 8
  %143 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %141, i64 1
  %144 = bitcast %"class.blink::LayoutObject"** %143 to i32*
  store i32 0, i32* %144, align 8
  %145 = getelementptr inbounds i8, i8* %142, i64 12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %145, i8* nonnull align 4 %56, i64 20, i1 false)
  %146 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %141, i64 4
  %147 = bitcast %"class.blink::LayoutObject"** %146 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* nonnull align 8 %57, i64 16, i1 false)
  %148 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %141, i64 6
  %149 = bitcast %"class.blink::LayoutObject"** %148 to i32*
  store i32 0, i32* %149, align 8
  %150 = getelementptr inbounds i8, i8* %142, i64 52
  %151 = bitcast i8* %150 to i32*
  store i32 0, i32* %151, align 4
  %152 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %141, i64 7
  %153 = bitcast %"class.blink::LayoutObject"** %152 to i32*
  store i32 %116, i32* %153, align 8
  %154 = getelementptr inbounds i8, i8* %142, i64 60
  %155 = bitcast i8* %154 to i32*
  store i32 0, i32* %155, align 4
  %156 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %141, i64 8
  %157 = bitcast %"class.blink::LayoutObject"** %156 to i32*
  store i32 0, i32* %157, align 8
  %158 = getelementptr inbounds i8, i8* %142, i64 68
  %159 = bitcast i8* %158 to i32*
  store i32 0, i32* %159, align 4
  %160 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %141, i64 9
  %161 = bitcast %"class.blink::LayoutObject"** %160 to i8*
  store i8 %118, i8* %161, align 8
  %162 = getelementptr inbounds i8, i8* %142, i64 73
  store i8 0, i8* %162, align 1
  %163 = getelementptr inbounds i8, i8* %142, i64 74
  store i8 0, i8* %163, align 2
  %164 = getelementptr inbounds i8, i8* %142, i64 75
  store i8 0, i8* %164, align 1
  %165 = load i32, i32* %54, align 4
  %166 = add i32 %165, 1
  store i32 %166, i32* %54, align 4
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %56)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57)
  tail call void @_ZN5blink24NGInlineLayoutStateStack13ChildInsertedEj(%"class.blink::NGInlineLayoutStateStack"* %6, i32 %55) #10
  br label %167

167:                                              ; preds = %37, %126
  %168 = phi i32 [ %55, %126 ], [ -1, %37 ]
  %169 = icmp eq %"class.blink::ShapeResult"* %14, null
  br i1 %169, label %177, label %170

170:                                              ; preds = %167
  %171 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %14, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %171) #10
  %172 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %173 = load i32, i32* %172, align 4
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %177

175:                                              ; preds = %170
  tail call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %14) #10
  %176 = bitcast %"class.blink::ShapeResult"* %14 to i8*
  tail call void @free(i8* %176) #10
  br label %177

177:                                              ; preds = %167, %170, %175
  ret i32 %168
}

declare %"class.blink::ShapeResult"* @_ZNK5blink15ShapeResultView17CreateShapeResultEv(%"class.blink::ShapeResultView"*) local_unnamed_addr #3

declare i32 @_ZNK5blink11ShapeResult11OffsetToFitEfNS_13TextDirectionE(%"class.blink::ShapeResult"*, float, i8 zeroext) local_unnamed_addr #3

declare float @_ZNK5blink11ShapeResult17PositionForOffsetEjNS_16AdjustMidClusterE(%"class.blink::ShapeResult"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15NGLineTruncator12TruncateTextERKNS_17NGLogicalLineItemERKNS_11ShapeResultEjNS_13TextDirectionE(%"struct.blink::NGLogicalLineItem"* noalias nocapture sret, %"class.blink::NGLineTruncator"* nocapture readnone, %"struct.blink::NGLogicalLineItem"* nocapture readonly dereferenceable(120), %"class.blink::ShapeResult"* dereferenceable(72), i32, i8 zeroext) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %3, i64 0, i32 8
  %8 = load i32, i32* %7, align 8
  %9 = lshr i32 %8, 29
  %10 = trunc i32 %9 to i8
  %11 = and i8 %10, 1
  %12 = icmp eq i8 %11, %5
  %13 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %2, i64 0, i32 3, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, %4
  br i1 %12, label %19, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %2, i64 0, i32 3, i32 1
  %18 = load i32, i32* %17, align 4
  br label %19

19:                                               ; preds = %6, %16
  %20 = phi i32 [ %15, %16 ], [ %14, %6 ]
  %21 = phi i32 [ %18, %16 ], [ %15, %6 ]
  %22 = tail call %"class.blink::ShapeResultView"* @_ZN5blink15ShapeResultView6CreateEPKNS_11ShapeResultEjj(%"class.blink::ShapeResult"* %3, i32 %20, i32 %21) #10
  %23 = ptrtoint %"class.blink::ShapeResultView"* %22 to i64
  %24 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %0, i64 0, i32 0, i32 0
  store %"class.blink::NGLayoutResult"* null, %"class.blink::NGLayoutResult"** %24, align 8
  %25 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %0, i64 0, i32 1
  %26 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %2, i64 0, i32 1
  %27 = bitcast %"class.blink::NGInlineItem"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.blink::NGInlineItem"** %25 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %0, i64 0, i32 2
  %31 = bitcast %class.scoped_refptr.1700* %30 to i64*
  store i64 %23, i64* %31, align 8
  %32 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %0, i64 0, i32 3
  %33 = bitcast %"struct.blink::NGTextOffset"* %32 to i64*
  %34 = zext i32 %21 to i64
  %35 = shl nuw i64 %34, 32
  %36 = zext i32 %20 to i64
  %37 = or i64 %35, %36
  store i64 %37, i64* %33, align 8
  %38 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %2, i64 0, i32 4, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %40, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %41, label %59, label %42

42:                                               ; preds = %19
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %59

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = zext i32 %49 to i33
  %51 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #10
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !2

56:                                               ; preds = %47
  tail call void @llvm.trap() #10
  unreachable

57:                                               ; preds = %47
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %48, align 4
  br label %59

59:                                               ; preds = %57, %42, %19
  %60 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %0, i64 0, i32 5
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %60, align 8
  %61 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %0, i64 0, i32 6
  store i32 0, i32* %61, align 8
  %62 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %0, i64 0, i32 8
  %63 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %0, i64 0, i32 10
  %64 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %2, i64 0, i32 10
  %65 = bitcast %"struct.blink::LogicalRect"* %63 to i8*
  %66 = bitcast %"struct.blink::LogicalRect"* %64 to i8*
  %67 = bitcast %"class.blink::LayoutObject"** %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 16, i1 false) #10
  %68 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %0, i64 0, i32 11, i32 0, i32 0
  store i32 0, i32* %68, align 4
  %69 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %0, i64 0, i32 11, i32 1, i32 0
  store i32 0, i32* %69, align 4
  %70 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %22, i64 0, i32 6
  %71 = load float, float* %70, align 8
  %72 = fmul float %71, 6.400000e+01
  %73 = tail call float @llvm.ceil.f32(float %72) #10
  %74 = fcmp ult float %73, 0xC1E0000000000000
  %75 = fcmp ugt float %73, 0x41DFFFFFE0000000
  %76 = fcmp ogt float %73, 0xC1E0000000000000
  %77 = select i1 %76, float %73, float 0xC1E0000000000000
  %78 = fptosi float %77 to i32
  %79 = select i1 %74, i32 0, i32 2147483647
  %80 = select i1 %75, i32 %79, i32 %78
  %81 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %0, i64 0, i32 12, i32 0
  store i32 %80, i32* %81, align 8
  %82 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %0, i64 0, i32 13, i32 0
  store i32 0, i32* %82, align 4
  %83 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %0, i64 0, i32 14
  store i32 0, i32* %83, align 8
  %84 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %0, i64 0, i32 15
  store i32 0, i32* %84, align 4
  %85 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %0, i64 0, i32 16
  %86 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %2, i64 0, i32 16
  %87 = load i8, i8* %86, align 8
  store i8 %87, i8* %85, align 8
  %88 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %0, i64 0, i32 17
  store i8 0, i8* %88, align 1
  %89 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %0, i64 0, i32 18
  store i8 0, i8* %89, align 2
  %90 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %0, i64 0, i32 19
  store i8 0, i8* %90, align 1
  ret void
}

declare void @_ZN5blink24NGInlineLayoutStateStack13ChildInsertedEj(%"class.blink::NGInlineLayoutStateStack"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink15NGLineTruncator12TruncateLineENS_10LayoutUnitEPNS_18NGLogicalLineItemsEPNS_24NGInlineLayoutStateStackE(%"class.blink::NGLineTruncator"*, i32, %"class.blink::NGLogicalLineItems"*, %"class.blink::NGInlineLayoutStateStack"*) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.absl::optional.1970", align 8
  store i32 %1, i32* %5, align 4
  tail call void @_ZN5blink15NGLineTruncator13SetupEllipsisEv(%"class.blink::NGLineTruncator"* %0)
  %7 = getelementptr inbounds %"class.absl::optional.1970", %"class.absl::optional.1970"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %7) #10
  %8 = bitcast %"class.absl::optional.1970"* %6 to i64*
  store i64 -6148914691236517206, i64* %8, align 8
  store i8 0, i8* %7, align 8
  %9 = getelementptr inbounds %"class.absl::optional.1970", %"class.absl::optional.1970"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %10 = bitcast %union.anon.1974* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 120, i1 false) #10
  %11 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 2
  %12 = load i8, i8* %11, align 4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %32

14:                                               ; preds = %4
  %15 = tail call %"struct.blink::NGLogicalLineItem"* @_ZN5blink18NGLogicalLineItems16FirstInFlowChildEv(%"class.blink::NGLogicalLineItems"* %2) #10
  %16 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"struct.blink::NGLogicalLineItem"*, %"struct.blink::NGLogicalLineItem"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %17, i64 %20
  %22 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 5, i32 0
  br label %23

23:                                               ; preds = %26, %14
  %24 = phi %"struct.blink::NGLogicalLineItem"* [ %21, %14 ], [ %27, %26 ]
  %25 = icmp eq %"struct.blink::NGLogicalLineItem"* %24, %17
  br i1 %25, label %62, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %24, i64 -1
  %28 = load i32, i32* %5, align 4
  %29 = load i32, i32* %22, align 8
  %30 = icmp eq %"struct.blink::NGLogicalLineItem"* %27, %15
  %31 = call zeroext i1 @_ZN5blink15NGLineTruncator14EllipsizeChildENS_10LayoutUnitES1_bPNS_17NGLogicalLineItemEPN4absl8optionalIS2_EE(%"class.blink::NGLineTruncator"* %0, i32 %28, i32 %29, i1 zeroext %30, %"struct.blink::NGLogicalLineItem"* %27, %"class.absl::optional.1970"* nonnull %6)
  br i1 %31, label %62, label %23

32:                                               ; preds = %4
  %33 = tail call %"struct.blink::NGLogicalLineItem"* @_ZN5blink18NGLogicalLineItems15LastInFlowChildEv(%"class.blink::NGLogicalLineItems"* %2) #10
  %34 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.blink::NGLogicalLineItem"*, %"struct.blink::NGLogicalLineItem"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %35, i64 %38
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %65, label %41

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 5, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq %"struct.blink::NGLogicalLineItem"* %35, %33
  %45 = call zeroext i1 @_ZN5blink15NGLineTruncator14EllipsizeChildENS_10LayoutUnitES1_bPNS_17NGLogicalLineItemEPN4absl8optionalIS2_EE(%"class.blink::NGLineTruncator"* %0, i32 %1, i32 %43, i1 zeroext %44, %"struct.blink::NGLogicalLineItem"* %35, %"class.absl::optional.1970"* nonnull %6)
  %46 = select i1 %45, %"struct.blink::NGLogicalLineItem"* %35, %"struct.blink::NGLogicalLineItem"* null
  %47 = icmp eq i32 %37, 1
  %48 = or i1 %45, %47
  br i1 %48, label %62, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %35, i64 1
  br label %51

51:                                               ; preds = %49, %51
  %52 = phi %"struct.blink::NGLogicalLineItem"* [ %50, %49 ], [ %59, %51 ]
  %53 = phi %"struct.blink::NGLogicalLineItem"* [ %46, %49 ], [ %58, %51 ]
  %54 = load i32, i32* %5, align 4
  %55 = load i32, i32* %42, align 8
  %56 = icmp eq %"struct.blink::NGLogicalLineItem"* %52, %33
  %57 = call zeroext i1 @_ZN5blink15NGLineTruncator14EllipsizeChildENS_10LayoutUnitES1_bPNS_17NGLogicalLineItemEPN4absl8optionalIS2_EE(%"class.blink::NGLineTruncator"* %0, i32 %54, i32 %55, i1 zeroext %56, %"struct.blink::NGLogicalLineItem"* %52, %"class.absl::optional.1970"* nonnull %6)
  %58 = select i1 %57, %"struct.blink::NGLogicalLineItem"* %52, %"struct.blink::NGLogicalLineItem"* %53
  %59 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %52, i64 1
  %60 = icmp eq %"struct.blink::NGLogicalLineItem"* %59, %39
  %61 = or i1 %57, %60
  br i1 %61, label %62, label %51

62:                                               ; preds = %51, %26, %23, %41
  %63 = phi %"struct.blink::NGLogicalLineItem"* [ %46, %41 ], [ null, %23 ], [ %27, %26 ], [ %58, %51 ]
  %64 = icmp eq %"struct.blink::NGLogicalLineItem"* %63, null
  br i1 %64, label %65, label %67

65:                                               ; preds = %32, %62
  %66 = load i32, i32* %5, align 4
  br label %147

67:                                               ; preds = %62
  %68 = load i8, i8* %7, align 8, !range !6
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %133, label %70

70:                                               ; preds = %67
  %71 = bitcast %"class.blink::NGLogicalLineItems"* %2 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = ptrtoint %"struct.blink::NGLogicalLineItem"* %63 to i64
  %74 = sub i64 %73, %72
  %75 = sdiv exact i64 %74, 120
  %76 = trunc i64 %75 to i32
  %77 = add i32 %76, 1
  %78 = getelementptr inbounds %"class.absl::optional.1970", %"class.absl::optional.1970"* %6, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN5blink18NGLogicalLineItems15WillInsertChildEj(%"class.blink::NGLogicalLineItems"* %2, i32 %77) #10
  %79 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %2, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE6insertIRS2_EEvjOT_(%"class.WTF::Vector.1945"* %79, i32 %77, %"struct.blink::NGLogicalLineItem"* dereferenceable(120) %78) #10
  call void @_ZN5blink24NGInlineLayoutStateStack13ChildInsertedEj(%"class.blink::NGInlineLayoutStateStack"* %3, i32 %77) #10
  %80 = call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %79, i32 %76) #10
  %81 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %80, i64 1
  %82 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %80, i64 0, i32 0, i32 0
  %83 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %82, align 8
  %84 = icmp eq %"class.blink::NGLayoutResult"* %83, null
  br i1 %84, label %105, label %85

85:                                               ; preds = %70
  %86 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %83, i64 0, i32 3, i32 0
  %87 = bitcast %"class.blink::NGPhysicalFragment"** %86 to %"class.blink::NGPhysicalBoxFragment"**
  %88 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %88, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::Vector.1858"*, %"class.WTF::Vector.1858"** %89, align 8
  %91 = icmp eq %"class.WTF::Vector.1858"* %90, null
  br i1 %91, label %92, label %111

92:                                               ; preds = %85
  %93 = call %"class.blink::NGLayoutResult"* @_ZNK5blink21NGPhysicalBoxFragment21CloneAsHiddenForPaintEv(%"class.blink::NGPhysicalBoxFragment"* %88) #10
  %94 = ptrtoint %"class.blink::NGLayoutResult"* %93 to i64
  %95 = bitcast %"struct.blink::NGLogicalLineItem"* %80 to i64*
  %96 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %82, align 8
  store i64 %94, i64* %95, align 8
  %97 = icmp eq %"class.blink::NGLayoutResult"* %96, null
  br i1 %97, label %111, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %96, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %99) #10
  %100 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %111

103:                                              ; preds = %98
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %96) #10
  %104 = bitcast %"class.blink::NGLayoutResult"* %96 to i8*
  call void @free(i8* %104) #10
  br label %111

105:                                              ; preds = %70
  %106 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %80, i64 0, i32 1
  %107 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %106, align 8
  %108 = icmp eq %"class.blink::NGInlineItem"* %107, null
  br i1 %108, label %111, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %80, i64 0, i32 19
  store i8 1, i8* %110, align 1
  br label %111

111:                                              ; preds = %85, %92, %98, %103, %105, %109
  %112 = load i8, i8* %11, align 4
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %133, label %114, !prof !7

114:                                              ; preds = %111
  %115 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %80, i64 0, i32 12, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %80, i64 1, i32 12, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = icmp sgt i32 %118, -1
  %120 = select i1 %119, i32 -2147483648, i32 2147483647
  %121 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %116, i32 %118) #10
  %122 = extractvalue { i32, i1 } %121, 1
  %123 = extractvalue { i32, i1 } %121, 0
  %124 = select i1 %122, i32 %120, i32 %123, !prof !2
  %125 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %80, i64 1, i32 10, i32 0, i32 0, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = icmp slt i32 %124, 0
  %128 = select i1 %127, i32 -2147483648, i32 2147483647
  %129 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %126, i32 %124) #10
  %130 = extractvalue { i32, i1 } %129, 1
  %131 = extractvalue { i32, i1 } %129, 0
  %132 = select i1 %130, i32 %128, i32 %131, !prof !2
  store i32 %132, i32* %125, align 4
  br label %133

133:                                              ; preds = %111, %67, %114
  %134 = phi %"struct.blink::NGLogicalLineItem"* [ %63, %67 ], [ %81, %114 ], [ %81, %111 ]
  %135 = call i32 @_ZN5blink15NGLineTruncator19PlaceEllipsisNextToEPNS_18NGLogicalLineItemsEPNS_17NGLogicalLineItemE(%"class.blink::NGLineTruncator"* %0, %"class.blink::NGLogicalLineItems"* %2, %"struct.blink::NGLogicalLineItem"* %134)
  %136 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 5, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = icmp slt i32 %137, 0
  %139 = select i1 %138, i32 -2147483648, i32 2147483647
  %140 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %135, i32 %137) #10
  %141 = extractvalue { i32, i1 } %140, 1
  %142 = extractvalue { i32, i1 } %140, 0
  %143 = select i1 %141, i32 %139, i32 %142, !prof !2
  %144 = load i32, i32* %5, align 4
  %145 = icmp slt i32 %143, %144
  %146 = select i1 %145, i32 %144, i32 %143
  br label %147

147:                                              ; preds = %133, %65
  %148 = phi i32 [ %146, %133 ], [ %66, %65 ]
  %149 = load i8, i8* %7, align 8, !range !6
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %191, label %151

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"class.absl::optional.1970", %"class.absl::optional.1970"* %6, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4, i32 0, i32 0
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %168, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %153) #10
  br label %168

168:                                              ; preds = %167, %164, %151
  %169 = getelementptr inbounds %"class.absl::optional.1970", %"class.absl::optional.1970"* %6, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 0
  %170 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %169, align 8
  %171 = icmp eq %"class.blink::ShapeResultView"* %170, null
  br i1 %171, label %179, label %172

172:                                              ; preds = %168
  %173 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %170, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %173) #10
  %174 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %170, i64 0, i32 0, i32 0, i32 0, i32 0
  %175 = load i32, i32* %174, align 4
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %179

177:                                              ; preds = %172
  call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %170) #10
  %178 = bitcast %"class.blink::ShapeResultView"* %170 to i8*
  call void @free(i8* %178) #10
  br label %179

179:                                              ; preds = %177, %172, %168
  %180 = getelementptr inbounds %"class.absl::optional.1970", %"class.absl::optional.1970"* %6, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %181 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %180, align 8
  %182 = icmp eq %"class.blink::NGLayoutResult"* %181, null
  br i1 %182, label %190, label %183

183:                                              ; preds = %179
  %184 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %181, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %184) #10
  %185 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %181, i64 0, i32 0, i32 0, i32 0, i32 0
  %186 = load i32, i32* %185, align 4
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %190

188:                                              ; preds = %183
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %181) #10
  %189 = bitcast %"class.blink::NGLayoutResult"* %181 to i8*
  call void @free(i8* %189) #10
  br label %190

190:                                              ; preds = %179, %183, %188
  store i8 0, i8* %7, align 8
  br label %191

191:                                              ; preds = %147, %190
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %7) #10
  ret i32 %148
}

declare %"struct.blink::NGLogicalLineItem"* @_ZN5blink18NGLogicalLineItems16FirstInFlowChildEv(%"class.blink::NGLogicalLineItems"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15NGLineTruncator14EllipsizeChildENS_10LayoutUnitES1_bPNS_17NGLogicalLineItemEPN4absl8optionalIS2_EE(%"class.blink::NGLineTruncator"* nocapture readonly, i32, i32, i1 zeroext, %"struct.blink::NGLogicalLineItem"* nocapture, %"class.absl::optional.1970"*) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %4, i64 0, i32 1
  %8 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %7, align 8
  %9 = icmp eq %"class.blink::NGInlineItem"* %8, null
  %10 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %4, i64 0, i32 0, i32 0
  %11 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %10, align 8
  br i1 %9, label %12, label %24

12:                                               ; preds = %6
  %13 = icmp eq %"class.blink::NGLayoutResult"* %11, null
  br i1 %13, label %137, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %11, i64 0, i32 3, i32 0
  %16 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %16, i64 0, i32 3
  %18 = bitcast i24* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 960
  %21 = icmp eq i32 %20, 512
  br i1 %21, label %137, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %4, i64 0, i32 0, i32 0
  br label %27

24:                                               ; preds = %6
  %25 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %4, i64 0, i32 0, i32 0
  %26 = icmp eq %"class.blink::NGLayoutResult"* %11, null
  br i1 %26, label %36, label %27

27:                                               ; preds = %22, %24
  %28 = phi %"class.blink::NGLayoutResult"** [ %23, %22 ], [ %25, %24 ]
  %29 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %11, i64 0, i32 3, i32 0
  %30 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %30, i64 0, i32 3
  %32 = bitcast i24* %31 to i32*
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, 960
  %35 = icmp eq i32 %34, 128
  br i1 %35, label %137, label %36

36:                                               ; preds = %24, %27
  %37 = phi i1 [ true, %24 ], [ false, %27 ]
  %38 = phi %"class.blink::NGLayoutResult"** [ %25, %24 ], [ %28, %27 ]
  %39 = phi %"class.blink::NGLayoutResult"* [ null, %24 ], [ %11, %27 ]
  %40 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 2
  %41 = load i8, i8* %40, align 4
  %42 = icmp eq i8 %41, 0
  %43 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %4, i64 0, i32 10, i32 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 8
  br i1 %42, label %60, label %45

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %4, i64 0, i32 12, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp slt i32 %47, 0
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %44, i32 %47) #10
  %51 = extractvalue { i32, i1 } %50, 1
  %52 = extractvalue { i32, i1 } %50, 0
  %53 = select i1 %51, i32 %49, i32 %52, !prof !2
  %54 = icmp sgt i32 %53, -1
  %55 = select i1 %54, i32 -2147483648, i32 2147483647
  %56 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1, i32 %53) #10
  %57 = extractvalue { i32, i1 } %56, 1
  %58 = extractvalue { i32, i1 } %56, 0
  %59 = select i1 %57, i32 %55, i32 %58, !prof !2
  br label %60

60:                                               ; preds = %36, %45
  %61 = phi i32 [ %59, %45 ], [ %44, %36 ]
  %62 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 1, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp sgt i32 %61, -1
  %65 = select i1 %64, i32 -2147483648, i32 2147483647
  %66 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %63, i32 %61) #10
  %67 = extractvalue { i32, i1 } %66, 1
  %68 = extractvalue { i32, i1 } %66, 0
  %69 = select i1 %67, i32 %65, i32 %68, !prof !2
  %70 = icmp slt i32 %69, 1
  br i1 %70, label %71, label %96

71:                                               ; preds = %60
  br i1 %3, label %137, label %72

72:                                               ; preds = %71
  br i1 %37, label %93, label %73

73:                                               ; preds = %72
  %74 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %39, i64 0, i32 3, i32 0
  %75 = bitcast %"class.blink::NGPhysicalFragment"** %74 to %"class.blink::NGPhysicalBoxFragment"**
  %76 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %76, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::Vector.1858"*, %"class.WTF::Vector.1858"** %77, align 8
  %79 = icmp eq %"class.WTF::Vector.1858"* %78, null
  br i1 %79, label %80, label %137

80:                                               ; preds = %73
  %81 = tail call %"class.blink::NGLayoutResult"* @_ZNK5blink21NGPhysicalBoxFragment21CloneAsHiddenForPaintEv(%"class.blink::NGPhysicalBoxFragment"* %76) #10
  %82 = ptrtoint %"class.blink::NGLayoutResult"* %81 to i64
  %83 = bitcast %"struct.blink::NGLogicalLineItem"* %4 to i64*
  %84 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %38, align 8
  store i64 %82, i64* %83, align 8
  %85 = icmp eq %"class.blink::NGLayoutResult"* %84, null
  br i1 %85, label %137, label %86

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %84, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %87) #10
  %88 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %84, i64 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %137

91:                                               ; preds = %86
  tail call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %84) #10
  %92 = bitcast %"class.blink::NGLayoutResult"* %84 to i8*
  tail call void @free(i8* %92) #10
  br label %137

93:                                               ; preds = %72
  br i1 %9, label %137, label %94

94:                                               ; preds = %93
  %95 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %4, i64 0, i32 19
  store i8 1, i8* %95, align 1
  br label %137

96:                                               ; preds = %60
  %97 = icmp sgt i32 %2, -1
  %98 = select i1 %97, i32 -2147483648, i32 2147483647
  %99 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %69, i32 %2) #10
  %100 = extractvalue { i32, i1 } %99, 1
  %101 = extractvalue { i32, i1 } %99, 0
  %102 = select i1 %100, i32 %98, i32 %101, !prof !2
  %103 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %4, i64 0, i32 12, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp slt i32 %102, %104
  br i1 %105, label %106, label %137

106:                                              ; preds = %96
  %107 = tail call zeroext i1 @_ZN5blink15NGLineTruncator13TruncateChildENS_10LayoutUnitEbRKNS_17NGLogicalLineItemEPN4absl8optionalIS2_EE(%"class.blink::NGLineTruncator"* %0, i32 %102, i1 zeroext %3, %"struct.blink::NGLogicalLineItem"* dereferenceable(120) %4, %"class.absl::optional.1970"* %5)
  %108 = or i1 %107, %3
  br i1 %108, label %137, label %109

109:                                              ; preds = %106
  %110 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %38, align 8
  %111 = icmp eq %"class.blink::NGLayoutResult"* %110, null
  br i1 %111, label %132, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %110, i64 0, i32 3, i32 0
  %114 = bitcast %"class.blink::NGPhysicalFragment"** %113 to %"class.blink::NGPhysicalBoxFragment"**
  %115 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %115, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %117 = load %"class.WTF::Vector.1858"*, %"class.WTF::Vector.1858"** %116, align 8
  %118 = icmp eq %"class.WTF::Vector.1858"* %117, null
  br i1 %118, label %119, label %137

119:                                              ; preds = %112
  %120 = tail call %"class.blink::NGLayoutResult"* @_ZNK5blink21NGPhysicalBoxFragment21CloneAsHiddenForPaintEv(%"class.blink::NGPhysicalBoxFragment"* %115) #10
  %121 = ptrtoint %"class.blink::NGLayoutResult"* %120 to i64
  %122 = bitcast %"struct.blink::NGLogicalLineItem"* %4 to i64*
  %123 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %38, align 8
  store i64 %121, i64* %122, align 8
  %124 = icmp eq %"class.blink::NGLayoutResult"* %123, null
  br i1 %124, label %137, label %125

125:                                              ; preds = %119
  %126 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %123, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %126) #10
  %127 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %123, i64 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %137

130:                                              ; preds = %125
  tail call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %123) #10
  %131 = bitcast %"class.blink::NGLayoutResult"* %123 to i8*
  tail call void @free(i8* %131) #10
  br label %137

132:                                              ; preds = %109
  %133 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %7, align 8
  %134 = icmp eq %"class.blink::NGInlineItem"* %133, null
  br i1 %134, label %137, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %4, i64 0, i32 19
  store i8 1, i8* %136, align 1
  br label %137

137:                                              ; preds = %14, %96, %12, %71, %106, %73, %80, %86, %91, %93, %94, %112, %119, %125, %130, %132, %135, %27
  %138 = phi i1 [ false, %14 ], [ false, %27 ], [ false, %71 ], [ true, %96 ], [ %107, %106 ], [ false, %73 ], [ false, %80 ], [ false, %86 ], [ false, %91 ], [ false, %93 ], [ false, %94 ], [ false, %112 ], [ false, %119 ], [ false, %125 ], [ false, %130 ], [ false, %132 ], [ false, %135 ], [ false, %12 ]
  ret i1 %138
}

declare %"struct.blink::NGLogicalLineItem"* @_ZN5blink18NGLogicalLineItems15LastInFlowChildEv(%"class.blink::NGLogicalLineItems"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15NGLineTruncator9HideChildEPNS_17NGLogicalLineItemE(%"class.blink::NGLineTruncator"* nocapture readnone, %"struct.blink::NGLogicalLineItem"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %3, align 8
  %5 = icmp eq %"class.blink::NGLayoutResult"* %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %4, i64 0, i32 3, i32 0
  %8 = bitcast %"class.blink::NGPhysicalFragment"** %7 to %"class.blink::NGPhysicalBoxFragment"**
  %9 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %9, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::Vector.1858"*, %"class.WTF::Vector.1858"** %10, align 8
  %12 = icmp eq %"class.WTF::Vector.1858"* %11, null
  br i1 %12, label %13, label %32

13:                                               ; preds = %6
  %14 = tail call %"class.blink::NGLayoutResult"* @_ZNK5blink21NGPhysicalBoxFragment21CloneAsHiddenForPaintEv(%"class.blink::NGPhysicalBoxFragment"* %9) #10
  %15 = ptrtoint %"class.blink::NGLayoutResult"* %14 to i64
  %16 = bitcast %"struct.blink::NGLogicalLineItem"* %1 to i64*
  %17 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %3, align 8
  store i64 %15, i64* %16, align 8
  %18 = icmp eq %"class.blink::NGLayoutResult"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %17, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %20) #10
  %21 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %32

24:                                               ; preds = %19
  tail call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %17) #10
  %25 = bitcast %"class.blink::NGLayoutResult"* %17 to i8*
  tail call void @free(i8* %25) #10
  br label %32

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %1, i64 0, i32 1
  %28 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %27, align 8
  %29 = icmp eq %"class.blink::NGInlineItem"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %1, i64 0, i32 19
  store i8 1, i8* %31, align 1
  br label %32

32:                                               ; preds = %6, %24, %19, %13, %26, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink15NGLineTruncator23TruncateLineInTheMiddleENS_10LayoutUnitEPNS_18NGLogicalLineItemsEPNS_24NGInlineLayoutStateStackE(%"class.blink::NGLineTruncator"*, i32, %"class.blink::NGLogicalLineItems"*, %"class.blink::NGInlineLayoutStateStack"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink15NGLineTruncator13SetupEllipsisEv(%"class.blink::NGLineTruncator"* %0)
  %5 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %543, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %2, i64 0, i32 0
  br label %10

10:                                               ; preds = %8, %46
  %11 = phi i32 [ -1, %8 ], [ %48, %46 ]
  %12 = phi i32 [ -1, %8 ], [ %47, %46 ]
  %13 = phi i32 [ 0, %8 ], [ %49, %46 ]
  %14 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %9, i32 %13) #10
  %15 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %14, i64 0, i32 1
  %16 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %15, align 8
  %17 = icmp eq %"class.blink::NGInlineItem"* %16, null
  br i1 %17, label %18, label %34

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %14, i64 0, i32 0, i32 0
  %20 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %19, align 8
  %21 = icmp eq %"class.blink::NGLayoutResult"* %20, null
  br i1 %21, label %22, label %34

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %14, i64 0, i32 5
  %24 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %23, align 8
  %25 = icmp eq %"class.blink::LayoutObject"* %24, null
  br i1 %25, label %26, label %34

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %14, i64 0, i32 8
  %28 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %27, align 8
  %29 = icmp eq %"class.blink::LayoutObject"* %28, null
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %14, i64 0, i32 16
  %32 = load i8, i8* %31, align 8
  %33 = icmp eq i8 %32, -1
  br i1 %33, label %46, label %34

34:                                               ; preds = %10, %18, %22, %26, %30
  %35 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %14, i64 0, i32 2, i32 0
  %36 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %35, align 8
  %37 = icmp eq %"class.blink::ShapeResultView"* %36, null
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  %39 = icmp eq i32 %12, -1
  br i1 %39, label %46, label %52

40:                                               ; preds = %34
  %41 = tail call %"class.blink::Node"* @_ZNK5blink17NGLogicalLineItem7GetNodeEv(%"struct.blink::NGLogicalLineItem"* %14) #10
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %40
  %44 = icmp eq i32 %11, -1
  %45 = select i1 %44, i32 %13, i32 %11
  br label %46

46:                                               ; preds = %38, %43, %30, %40
  %47 = phi i32 [ %12, %40 ], [ %12, %30 ], [ %13, %43 ], [ -1, %38 ]
  %48 = phi i32 [ %11, %40 ], [ %11, %30 ], [ %45, %43 ], [ %11, %38 ]
  %49 = add nuw i32 %13, 1
  %50 = load i32, i32* %5, align 4
  %51 = icmp ult i32 %49, %50
  br i1 %51, label %10, label %52

52:                                               ; preds = %46, %38
  %53 = phi i32 [ %47, %46 ], [ %12, %38 ]
  %54 = phi i32 [ %48, %46 ], [ %11, %38 ]
  %55 = icmp eq i32 %54, -1
  br i1 %55, label %543, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %2, i64 0, i32 0
  %58 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %54) #10
  %59 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %58, i64 0, i32 10, i32 0, i32 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = add i32 %53, 1
  %62 = load i32, i32* %5, align 4
  %63 = icmp ult i32 %61, %62
  br i1 %63, label %64, label %84

64:                                               ; preds = %56
  %65 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %61) #10
  %66 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %65, i64 0, i32 10, i32 0, i32 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = icmp sge i32 %67, %1
  %69 = icmp slt i32 %67, 0
  %70 = or i1 %68, %69
  br i1 %70, label %543, label %71

71:                                               ; preds = %64
  %72 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1, i32 %67) #10
  %73 = extractvalue { i32, i1 } %72, 1
  %74 = extractvalue { i32, i1 } %72, 0
  %75 = select i1 %73, i32 -2147483648, i32 %74, !prof !2
  %76 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %65, i64 0, i32 13, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp slt i32 %77, 0
  %79 = select i1 %78, i32 -2147483648, i32 2147483647
  %80 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %75, i32 %77) #10
  %81 = extractvalue { i32, i1 } %80, 1
  %82 = extractvalue { i32, i1 } %80, 0
  %83 = select i1 %81, i32 %79, i32 %82, !prof !2
  br label %84

84:                                               ; preds = %71, %56
  %85 = phi i32 [ %83, %71 ], [ 0, %56 ]
  %86 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 1, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp sgt i32 %60, -1
  %89 = select i1 %88, i32 -2147483648, i32 2147483647
  %90 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %87, i32 %60) #10
  %91 = extractvalue { i32, i1 } %90, 1
  %92 = extractvalue { i32, i1 } %90, 0
  %93 = select i1 %91, i32 %89, i32 %92, !prof !2
  %94 = icmp sgt i32 %85, -1
  %95 = select i1 %94, i32 -2147483648, i32 2147483647
  %96 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %93, i32 %85) #10
  %97 = extractvalue { i32, i1 } %96, 1
  %98 = extractvalue { i32, i1 } %96, 0
  %99 = select i1 %97, i32 %95, i32 %98, !prof !2
  %100 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 5, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = icmp sgt i32 %99, %101
  br i1 %102, label %103, label %543

103:                                              ; preds = %84
  %104 = icmp sgt i32 %101, -1
  %105 = select i1 %104, i32 -2147483648, i32 2147483647
  %106 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %99, i32 %101) #10
  %107 = extractvalue { i32, i1 } %106, 1
  %108 = extractvalue { i32, i1 } %106, 0
  %109 = select i1 %107, i32 %105, i32 %108, !prof !2
  %110 = sdiv i32 %109, 2
  %111 = sext i32 %110 to i64
  %112 = tail call i1 @llvm.is.constant.i64(i64 %111) #10
  br i1 %112, label %119, label %113

113:                                              ; preds = %103
  %114 = icmp slt i32 %109, -1
  %115 = select i1 %114, i32 -2147483648, i32 2147483647
  %116 = add nsw i64 %111, 2147483648
  %117 = icmp ult i64 %116, 4294967296
  %118 = select i1 %117, i32 %110, i32 %115, !prof !7
  br label %119

119:                                              ; preds = %103, %113
  %120 = phi i32 [ %118, %113 ], [ %110, %103 ]
  %121 = load i32, i32* %5, align 4
  %122 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 2
  %123 = load i8, i8* %122, align 4
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %130, label %125

125:                                              ; preds = %119
  %126 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %53) #10
  %127 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %126, i64 0, i32 12, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = icmp slt i32 %120, %128
  br i1 %129, label %320, label %301

130:                                              ; preds = %119, %137
  %131 = phi i32 [ %147, %137 ], [ %120, %119 ]
  %132 = phi i32 [ %138, %137 ], [ %54, %119 ]
  %133 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %132) #10
  %134 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %133, i64 0, i32 12, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = icmp slt i32 %131, %135
  br i1 %136, label %150, label %137

137:                                              ; preds = %130
  %138 = add nuw i32 %132, 1
  %139 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %132) #10
  %140 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %139, i64 0, i32 12, i32 0
  %141 = load i32, i32* %140, align 4
  %142 = icmp sgt i32 %141, -1
  %143 = select i1 %142, i32 -2147483648, i32 2147483647
  %144 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %131, i32 %141) #10
  %145 = extractvalue { i32, i1 } %144, 1
  %146 = extractvalue { i32, i1 } %144, 0
  %147 = select i1 %145, i32 %143, i32 %146, !prof !2
  %148 = load i32, i32* %5, align 4
  %149 = icmp ult i32 %138, %148
  br i1 %149, label %130, label %543

150:                                              ; preds = %130
  %151 = icmp eq i32 %132, %54
  %152 = tail call i32 @_ZN5blink15NGLineTruncator17AddTruncatedChildEjbNS_10LayoutUnitENS_13TextDirectionEPNS_18NGLogicalLineItemsEPNS_24NGInlineLayoutStateStackE(%"class.blink::NGLineTruncator"* %0, i32 %132, i1 zeroext %151, i32 %131, i8 zeroext 0, %"class.blink::NGLogicalLineItems"* %2, %"class.blink::NGInlineLayoutStateStack"* %3)
  %153 = icmp eq i32 %152, -1
  br i1 %153, label %154, label %184

154:                                              ; preds = %150
  %155 = add i32 %132, -1
  %156 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %155) #10
  %157 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %156, i64 0, i32 1
  %158 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %157, align 8
  %159 = icmp eq %"class.blink::NGInlineItem"* %158, null
  br i1 %159, label %160, label %180

160:                                              ; preds = %154, %166
  %161 = phi %"struct.blink::NGLogicalLineItem"* [ %168, %166 ], [ %156, %154 ]
  %162 = phi i32 [ %167, %166 ], [ %155, %154 ]
  %163 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %161, i64 0, i32 0, i32 0
  %164 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %163, align 8
  %165 = icmp eq %"class.blink::NGLayoutResult"* %164, null
  br i1 %165, label %166, label %172

166:                                              ; preds = %160, %172
  %167 = add i32 %162, -1
  %168 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %167) #10
  %169 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %168, i64 0, i32 1
  %170 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %169, align 8
  %171 = icmp eq %"class.blink::NGInlineItem"* %170, null
  br i1 %171, label %160, label %180

172:                                              ; preds = %160
  %173 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %164, i64 0, i32 3, i32 0
  %174 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %173, align 8
  %175 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %174, i64 0, i32 3
  %176 = bitcast i24* %175 to i32*
  %177 = load i32, i32* %176, align 8
  %178 = and i32 %177, 960
  %179 = icmp eq i32 %178, 512
  br i1 %179, label %166, label %180

180:                                              ; preds = %166, %172, %154
  %181 = phi i32 [ %155, %154 ], [ %162, %172 ], [ %167, %166 ]
  %182 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %181) #10
  %183 = tail call i32 @_ZN5blink15NGLineTruncator19PlaceEllipsisNextToEPNS_18NGLogicalLineItemsEPNS_17NGLogicalLineItemE(%"class.blink::NGLineTruncator"* %0, %"class.blink::NGLogicalLineItems"* %2, %"struct.blink::NGLogicalLineItem"* %182)
  br label %196

184:                                              ; preds = %150
  %185 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %152) #10
  %186 = tail call i32 @_ZN5blink15NGLineTruncator19PlaceEllipsisNextToEPNS_18NGLogicalLineItemsEPNS_17NGLogicalLineItemE(%"class.blink::NGLineTruncator"* %0, %"class.blink::NGLogicalLineItems"* %2, %"struct.blink::NGLogicalLineItem"* %185)
  %187 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %152) #10
  %188 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %187, i64 0, i32 12, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp sgt i32 %189, -1
  %191 = select i1 %190, i32 -2147483648, i32 2147483647
  %192 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %131, i32 %189) #10
  %193 = extractvalue { i32, i1 } %192, 1
  %194 = extractvalue { i32, i1 } %192, 0
  %195 = select i1 %193, i32 %191, i32 %194, !prof !2
  br label %196

196:                                              ; preds = %184, %180
  %197 = phi i32 [ %195, %184 ], [ %131, %180 ]
  %198 = icmp slt i32 %197, 0
  %199 = select i1 %198, i32 -2147483648, i32 2147483647
  %200 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %120, i32 %197) #10
  %201 = extractvalue { i32, i1 } %200, 1
  %202 = extractvalue { i32, i1 } %200, 0
  %203 = select i1 %201, i32 %199, i32 %202
  %204 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %53) #10
  %205 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %204, i64 0, i32 12, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = icmp slt i32 %203, %206
  br i1 %207, label %227, label %208

208:                                              ; preds = %196, %221
  %209 = phi i32 [ %222, %221 ], [ %53, %196 ]
  %210 = phi i32 [ %219, %221 ], [ %203, %196 ]
  %211 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %209) #10
  %212 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %211, i64 0, i32 12, i32 0
  %213 = load i32, i32* %212, align 4
  %214 = icmp sgt i32 %213, -1
  %215 = select i1 %214, i32 -2147483648, i32 2147483647
  %216 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %210, i32 %213) #10
  %217 = extractvalue { i32, i1 } %216, 1
  %218 = extractvalue { i32, i1 } %216, 0
  %219 = select i1 %217, i32 %215, i32 %218, !prof !2
  %220 = icmp eq i32 %209, 0
  br i1 %220, label %227, label %221

221:                                              ; preds = %208
  %222 = add i32 %209, -1
  %223 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %222) #10
  %224 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %223, i64 0, i32 12, i32 0
  %225 = load i32, i32* %224, align 4
  %226 = icmp slt i32 %219, %225
  br i1 %226, label %227, label %208

227:                                              ; preds = %208, %221, %196
  %228 = phi i32 [ %53, %196 ], [ %222, %221 ], [ 0, %208 ]
  %229 = phi i32 [ %203, %196 ], [ %219, %221 ], [ %219, %208 ]
  %230 = load i32, i32* %5, align 4
  %231 = add i32 %230, -1
  %232 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %231) #10
  %233 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %232, i64 0, i32 10, i32 0, i32 0, i32 0
  %234 = load i32, i32* %233, align 8
  %235 = load i32, i32* %100, align 4
  %236 = icmp slt i32 %235, 0
  %237 = select i1 %236, i32 -2147483648, i32 2147483647
  %238 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %234, i32 %235) #10
  %239 = extractvalue { i32, i1 } %238, 1
  %240 = extractvalue { i32, i1 } %238, 0
  %241 = select i1 %239, i32 %237, i32 %240, !prof !2
  %242 = icmp sgt i32 %229, 0
  br i1 %242, label %243, label %265

243:                                              ; preds = %227
  %244 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %228) #10
  %245 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %244, i64 0, i32 12, i32 0
  %246 = load i32, i32* %245, align 4
  %247 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %246, i32 %229) #10
  %248 = extractvalue { i32, i1 } %247, 1
  %249 = extractvalue { i32, i1 } %247, 0
  %250 = select i1 %248, i32 -2147483648, i32 %249, !prof !2
  %251 = tail call i32 @_ZN5blink15NGLineTruncator17AddTruncatedChildEjbNS_10LayoutUnitENS_13TextDirectionEPNS_18NGLogicalLineItemsEPNS_24NGInlineLayoutStateStackE(%"class.blink::NGLineTruncator"* %0, i32 %228, i1 zeroext false, i32 %250, i8 zeroext 1, %"class.blink::NGLogicalLineItems"* %2, %"class.blink::NGInlineLayoutStateStack"* %3)
  %252 = icmp eq i32 %251, -1
  br i1 %252, label %265, label %253

253:                                              ; preds = %243
  %254 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %251) #10
  %255 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %254, i64 0, i32 10, i32 0, i32 0, i32 0
  store i32 %241, i32* %255, align 8
  %256 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %251) #10
  %257 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %256, i64 0, i32 12, i32 0
  %258 = load i32, i32* %257, align 4
  %259 = icmp slt i32 %258, 0
  %260 = select i1 %259, i32 -2147483648, i32 2147483647
  %261 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %241, i32 %258) #10
  %262 = extractvalue { i32, i1 } %261, 1
  %263 = extractvalue { i32, i1 } %261, 0
  %264 = select i1 %262, i32 %260, i32 %263, !prof !2
  br label %265

265:                                              ; preds = %243, %253, %227
  %266 = phi i32 [ %241, %243 ], [ %264, %253 ], [ %241, %227 ]
  %267 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %228) #10
  %268 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %267, i64 0, i32 10, i32 0, i32 0, i32 0
  %269 = load i32, i32* %268, align 8
  %270 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %228) #10
  %271 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %270, i64 0, i32 12, i32 0
  %272 = load i32, i32* %271, align 4
  %273 = icmp slt i32 %272, 0
  %274 = select i1 %273, i32 -2147483648, i32 2147483647
  %275 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %269, i32 %272) #10
  %276 = extractvalue { i32, i1 } %275, 1
  %277 = extractvalue { i32, i1 } %275, 0
  %278 = select i1 %276, i32 %274, i32 %277, !prof !2
  %279 = icmp sgt i32 %266, -1
  %280 = select i1 %279, i32 -2147483648, i32 2147483647
  %281 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %278, i32 %266) #10
  %282 = extractvalue { i32, i1 } %281, 1
  %283 = extractvalue { i32, i1 } %281, 0
  %284 = select i1 %282, i32 %280, i32 %283, !prof !2
  %285 = add i32 %228, 1
  %286 = icmp ult i32 %285, %121
  br i1 %286, label %287, label %480

287:                                              ; preds = %265
  %288 = icmp sgt i32 %284, -1
  %289 = select i1 %288, i32 -2147483648, i32 2147483647
  br label %290

290:                                              ; preds = %290, %287
  %291 = phi i32 [ %285, %287 ], [ %299, %290 ]
  %292 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %291) #10
  %293 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %292, i64 0, i32 10, i32 0, i32 0, i32 0
  %294 = load i32, i32* %293, align 4
  %295 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %294, i32 %284) #10
  %296 = extractvalue { i32, i1 } %295, 1
  %297 = extractvalue { i32, i1 } %295, 0
  %298 = select i1 %296, i32 %289, i32 %297, !prof !2
  store i32 %298, i32* %293, align 4
  %299 = add i32 %291, 1
  %300 = icmp eq i32 %299, %121
  br i1 %300, label %480, label %290

301:                                              ; preds = %125, %309
  %302 = phi i32 [ %315, %309 ], [ %53, %125 ]
  %303 = phi i32 [ %314, %309 ], [ %120, %125 ]
  %304 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %302) #10
  %305 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %304, i64 0, i32 12, i32 0
  %306 = load i32, i32* %305, align 4
  %307 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %303, i32 %306) #10
  %308 = icmp eq i32 %302, 0
  br i1 %308, label %543, label %309

309:                                              ; preds = %301
  %310 = extractvalue { i32, i1 } %307, 1
  %311 = icmp sgt i32 %306, -1
  %312 = select i1 %311, i32 -2147483648, i32 2147483647
  %313 = extractvalue { i32, i1 } %307, 0
  %314 = select i1 %310, i32 %312, i32 %313, !prof !2
  %315 = add i32 %302, -1
  %316 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %315) #10
  %317 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %316, i64 0, i32 12, i32 0
  %318 = load i32, i32* %317, align 4
  %319 = icmp slt i32 %314, %318
  br i1 %319, label %320, label %301

320:                                              ; preds = %309, %125
  %321 = phi i32 [ %120, %125 ], [ %314, %309 ]
  %322 = phi i32 [ %53, %125 ], [ %315, %309 ]
  %323 = icmp eq i32 %322, %53
  %324 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %322) #10
  %325 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %324, i64 0, i32 12, i32 0
  %326 = load i32, i32* %325, align 4
  %327 = icmp sgt i32 %321, -1
  %328 = select i1 %327, i32 -2147483648, i32 2147483647
  %329 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %326, i32 %321) #10
  %330 = extractvalue { i32, i1 } %329, 1
  %331 = extractvalue { i32, i1 } %329, 0
  %332 = select i1 %330, i32 %328, i32 %331, !prof !2
  %333 = tail call i32 @_ZN5blink15NGLineTruncator17AddTruncatedChildEjbNS_10LayoutUnitENS_13TextDirectionEPNS_18NGLogicalLineItemsEPNS_24NGInlineLayoutStateStackE(%"class.blink::NGLineTruncator"* %0, i32 %322, i1 zeroext %323, i32 %332, i8 zeroext 1, %"class.blink::NGLogicalLineItems"* %2, %"class.blink::NGInlineLayoutStateStack"* %3)
  %334 = icmp eq i32 %333, -1
  br i1 %334, label %335, label %365

335:                                              ; preds = %320
  %336 = add i32 %322, 1
  %337 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %336) #10
  %338 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %337, i64 0, i32 1
  %339 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %338, align 8
  %340 = icmp eq %"class.blink::NGInlineItem"* %339, null
  br i1 %340, label %341, label %361

341:                                              ; preds = %335, %347
  %342 = phi %"struct.blink::NGLogicalLineItem"* [ %349, %347 ], [ %337, %335 ]
  %343 = phi i32 [ %348, %347 ], [ %336, %335 ]
  %344 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %342, i64 0, i32 0, i32 0
  %345 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %344, align 8
  %346 = icmp eq %"class.blink::NGLayoutResult"* %345, null
  br i1 %346, label %347, label %353

347:                                              ; preds = %341, %353
  %348 = add i32 %343, 1
  %349 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %348) #10
  %350 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %349, i64 0, i32 1
  %351 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %350, align 8
  %352 = icmp eq %"class.blink::NGInlineItem"* %351, null
  br i1 %352, label %341, label %361

353:                                              ; preds = %341
  %354 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %345, i64 0, i32 3, i32 0
  %355 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %354, align 8
  %356 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %355, i64 0, i32 3
  %357 = bitcast i24* %356 to i32*
  %358 = load i32, i32* %357, align 8
  %359 = and i32 %358, 960
  %360 = icmp eq i32 %359, 512
  br i1 %360, label %347, label %361

361:                                              ; preds = %347, %353, %335
  %362 = phi i32 [ %336, %335 ], [ %343, %353 ], [ %348, %347 ]
  %363 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %362) #10
  %364 = tail call i32 @_ZN5blink15NGLineTruncator19PlaceEllipsisNextToEPNS_18NGLogicalLineItemsEPNS_17NGLogicalLineItemE(%"class.blink::NGLineTruncator"* %0, %"class.blink::NGLogicalLineItems"* %2, %"struct.blink::NGLogicalLineItem"* %363)
  br label %398

365:                                              ; preds = %320
  %366 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %322) #10
  %367 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %333) #10
  %368 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %366, i64 0, i32 12, i32 0
  %369 = load i32, i32* %368, align 4
  %370 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %367, i64 0, i32 12, i32 0
  %371 = load i32, i32* %370, align 4
  %372 = icmp sgt i32 %371, -1
  %373 = select i1 %372, i32 -2147483648, i32 2147483647
  %374 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %369, i32 %371) #10
  %375 = extractvalue { i32, i1 } %374, 1
  %376 = extractvalue { i32, i1 } %374, 0
  %377 = select i1 %375, i32 %373, i32 %376, !prof !2
  %378 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %333) #10
  %379 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %378, i64 0, i32 10, i32 0, i32 0, i32 0
  %380 = load i32, i32* %379, align 4
  %381 = icmp slt i32 %377, 0
  %382 = select i1 %381, i32 -2147483648, i32 2147483647
  %383 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %380, i32 %377) #10
  %384 = extractvalue { i32, i1 } %383, 1
  %385 = extractvalue { i32, i1 } %383, 0
  %386 = select i1 %384, i32 %382, i32 %385, !prof !2
  store i32 %386, i32* %379, align 4
  %387 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %333) #10
  %388 = tail call i32 @_ZN5blink15NGLineTruncator19PlaceEllipsisNextToEPNS_18NGLogicalLineItemsEPNS_17NGLogicalLineItemE(%"class.blink::NGLineTruncator"* %0, %"class.blink::NGLogicalLineItems"* %2, %"struct.blink::NGLogicalLineItem"* %387)
  %389 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %333) #10
  %390 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %389, i64 0, i32 12, i32 0
  %391 = load i32, i32* %390, align 4
  %392 = icmp sgt i32 %391, -1
  %393 = select i1 %392, i32 -2147483648, i32 2147483647
  %394 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %321, i32 %391) #10
  %395 = extractvalue { i32, i1 } %394, 1
  %396 = extractvalue { i32, i1 } %394, 0
  %397 = select i1 %395, i32 %393, i32 %396, !prof !2
  br label %398

398:                                              ; preds = %365, %361
  %399 = phi i32 [ %397, %365 ], [ %321, %361 ]
  %400 = icmp slt i32 %399, 0
  %401 = select i1 %400, i32 -2147483648, i32 2147483647
  %402 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %120, i32 %399) #10
  %403 = extractvalue { i32, i1 } %402, 1
  %404 = extractvalue { i32, i1 } %402, 0
  %405 = select i1 %403, i32 %401, i32 %404
  %406 = load i32, i32* %5, align 4
  %407 = add i32 %406, -1
  %408 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %407) #10
  %409 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %408, i64 0, i32 10, i32 0, i32 0, i32 0
  %410 = load i32, i32* %409, align 8
  br label %411

411:                                              ; preds = %418, %398
  %412 = phi i32 [ %405, %398 ], [ %428, %418 ]
  %413 = phi i32 [ %54, %398 ], [ %419, %418 ]
  %414 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %413) #10
  %415 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %414, i64 0, i32 12, i32 0
  %416 = load i32, i32* %415, align 4
  %417 = icmp slt i32 %412, %416
  br i1 %417, label %431, label %418

418:                                              ; preds = %411
  %419 = add i32 %413, 1
  %420 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %413) #10
  %421 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %420, i64 0, i32 12, i32 0
  %422 = load i32, i32* %421, align 4
  %423 = icmp sgt i32 %422, -1
  %424 = select i1 %423, i32 -2147483648, i32 2147483647
  %425 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %412, i32 %422) #10
  %426 = extractvalue { i32, i1 } %425, 1
  %427 = extractvalue { i32, i1 } %425, 0
  %428 = select i1 %426, i32 %424, i32 %427, !prof !2
  %429 = load i32, i32* %5, align 4
  %430 = icmp ult i32 %419, %429
  br i1 %430, label %411, label %431

431:                                              ; preds = %411, %418
  %432 = phi i32 [ %428, %418 ], [ %412, %411 ]
  %433 = phi i32 [ %419, %418 ], [ %413, %411 ]
  %434 = icmp sgt i32 %432, 0
  br i1 %434, label %435, label %450

435:                                              ; preds = %431
  %436 = tail call i32 @_ZN5blink15NGLineTruncator17AddTruncatedChildEjbNS_10LayoutUnitENS_13TextDirectionEPNS_18NGLogicalLineItemsEPNS_24NGInlineLayoutStateStackE(%"class.blink::NGLineTruncator"* %0, i32 %433, i1 zeroext false, i32 %432, i8 zeroext 0, %"class.blink::NGLogicalLineItems"* %2, %"class.blink::NGInlineLayoutStateStack"* %3)
  %437 = icmp eq i32 %436, -1
  br i1 %437, label %450, label %438

438:                                              ; preds = %435
  %439 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %436) #10
  %440 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %439, i64 0, i32 12, i32 0
  %441 = load i32, i32* %440, align 4
  %442 = icmp sgt i32 %441, -1
  %443 = select i1 %442, i32 -2147483648, i32 2147483647
  %444 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %410, i32 %441) #10
  %445 = extractvalue { i32, i1 } %444, 1
  %446 = extractvalue { i32, i1 } %444, 0
  %447 = select i1 %445, i32 %443, i32 %446, !prof !2
  %448 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %436) #10
  %449 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %448, i64 0, i32 10, i32 0, i32 0, i32 0
  store i32 %447, i32* %449, align 8
  br label %450

450:                                              ; preds = %435, %438, %431
  %451 = load i32, i32* %5, align 4
  %452 = add i32 %451, -1
  %453 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %452) #10
  %454 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %453, i64 0, i32 10, i32 0, i32 0, i32 0
  %455 = load i32, i32* %454, align 8
  %456 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %433) #10
  %457 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %456, i64 0, i32 10, i32 0, i32 0, i32 0
  %458 = load i32, i32* %457, align 8
  %459 = icmp sgt i32 %458, -1
  %460 = select i1 %459, i32 -2147483648, i32 2147483647
  %461 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %455, i32 %458) #10
  %462 = extractvalue { i32, i1 } %461, 1
  %463 = extractvalue { i32, i1 } %461, 0
  %464 = select i1 %462, i32 %460, i32 %463, !prof !2
  %465 = icmp eq i32 %433, 0
  br i1 %465, label %480, label %466

466:                                              ; preds = %450
  %467 = icmp slt i32 %464, 0
  %468 = select i1 %467, i32 -2147483648, i32 2147483647
  br label %469

469:                                              ; preds = %466, %469
  %470 = phi i32 [ %433, %466 ], [ %471, %469 ]
  %471 = add i32 %470, -1
  %472 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %471) #10
  %473 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %472, i64 0, i32 10, i32 0, i32 0, i32 0
  %474 = load i32, i32* %473, align 4
  %475 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %474, i32 %464) #10
  %476 = extractvalue { i32, i1 } %475, 1
  %477 = extractvalue { i32, i1 } %475, 0
  %478 = select i1 %476, i32 %468, i32 %477, !prof !2
  store i32 %478, i32* %473, align 4
  %479 = icmp eq i32 %471, 0
  br i1 %479, label %480, label %469

480:                                              ; preds = %469, %290, %450, %265
  %481 = phi i32 [ %284, %265 ], [ %464, %450 ], [ %284, %290 ], [ %464, %469 ]
  %482 = phi i32 [ %132, %265 ], [ %433, %450 ], [ %132, %290 ], [ %433, %469 ]
  %483 = phi i32 [ %228, %265 ], [ %322, %450 ], [ %228, %290 ], [ %322, %469 ]
  %484 = icmp sgt i32 %481, -1
  %485 = select i1 %484, i32 -2147483648, i32 2147483647
  %486 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1, i32 %481) #10
  %487 = extractvalue { i32, i1 } %486, 1
  %488 = extractvalue { i32, i1 } %486, 0
  %489 = select i1 %487, i32 %485, i32 %488
  %490 = icmp ugt i32 %482, %483
  br i1 %490, label %543, label %491

491:                                              ; preds = %480, %540
  %492 = phi i32 [ %541, %540 ], [ %482, %480 ]
  %493 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %492) #10
  %494 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %493, i64 0, i32 1
  %495 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %494, align 8
  %496 = icmp eq %"class.blink::NGInlineItem"* %495, null
  br i1 %496, label %497, label %509

497:                                              ; preds = %491
  %498 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %493, i64 0, i32 0, i32 0
  %499 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %498, align 8
  %500 = icmp eq %"class.blink::NGLayoutResult"* %499, null
  br i1 %500, label %540, label %501

501:                                              ; preds = %497
  %502 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %499, i64 0, i32 3, i32 0
  %503 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %502, align 8
  %504 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %503, i64 0, i32 3
  %505 = bitcast i24* %504 to i32*
  %506 = load i32, i32* %505, align 8
  %507 = and i32 %506, 960
  %508 = icmp eq i32 %507, 512
  br i1 %508, label %540, label %509

509:                                              ; preds = %501, %491
  %510 = tail call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"* %57, i32 %492) #10
  %511 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %510, i64 0, i32 0, i32 0
  %512 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %511, align 8
  %513 = icmp eq %"class.blink::NGLayoutResult"* %512, null
  br i1 %513, label %534, label %514

514:                                              ; preds = %509
  %515 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %512, i64 0, i32 3, i32 0
  %516 = bitcast %"class.blink::NGPhysicalFragment"** %515 to %"class.blink::NGPhysicalBoxFragment"**
  %517 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %516, align 8
  %518 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %517, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %519 = load %"class.WTF::Vector.1858"*, %"class.WTF::Vector.1858"** %518, align 8
  %520 = icmp eq %"class.WTF::Vector.1858"* %519, null
  br i1 %520, label %521, label %540

521:                                              ; preds = %514
  %522 = tail call %"class.blink::NGLayoutResult"* @_ZNK5blink21NGPhysicalBoxFragment21CloneAsHiddenForPaintEv(%"class.blink::NGPhysicalBoxFragment"* %517) #10
  %523 = ptrtoint %"class.blink::NGLayoutResult"* %522 to i64
  %524 = bitcast %"struct.blink::NGLogicalLineItem"* %510 to i64*
  %525 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %511, align 8
  store i64 %523, i64* %524, align 8
  %526 = icmp eq %"class.blink::NGLayoutResult"* %525, null
  br i1 %526, label %540, label %527

527:                                              ; preds = %521
  %528 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %525, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %528) #10
  %529 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %525, i64 0, i32 0, i32 0, i32 0, i32 0
  %530 = load i32, i32* %529, align 4
  %531 = icmp eq i32 %530, 0
  br i1 %531, label %532, label %540

532:                                              ; preds = %527
  tail call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %525) #10
  %533 = bitcast %"class.blink::NGLayoutResult"* %525 to i8*
  tail call void @free(i8* %533) #10
  br label %540

534:                                              ; preds = %509
  %535 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %510, i64 0, i32 1
  %536 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %535, align 8
  %537 = icmp eq %"class.blink::NGInlineItem"* %536, null
  br i1 %537, label %540, label %538

538:                                              ; preds = %534
  %539 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %510, i64 0, i32 19
  store i8 1, i8* %539, align 1
  br label %540

540:                                              ; preds = %501, %497, %538, %534, %532, %527, %521, %514
  %541 = add i32 %492, 1
  %542 = icmp ugt i32 %541, %483
  br i1 %542, label %543, label %491

543:                                              ; preds = %301, %137, %540, %4, %480, %84, %64, %52
  %544 = phi i32 [ %1, %52 ], [ %1, %84 ], [ %1, %64 ], [ %489, %480 ], [ %1, %4 ], [ %489, %540 ], [ %1, %137 ], [ %1, %301 ]
  ret i32 %544
}

declare %"class.blink::Node"* @_ZNK5blink17NGLogicalLineItem7GetNodeEv(%"struct.blink::NGLogicalLineItem"*) local_unnamed_addr #3

declare %"class.blink::NGLayoutResult"* @_ZNK5blink21NGPhysicalBoxFragment21CloneAsHiddenForPaintEv(%"class.blink::NGPhysicalBoxFragment"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15NGLineTruncator13TruncateChildENS_10LayoutUnitEbRKNS_17NGLogicalLineItemEPN4absl8optionalIS2_EE(%"class.blink::NGLineTruncator"* nocapture readonly, i32, i1 zeroext, %"struct.blink::NGLogicalLineItem"* nocapture readonly dereferenceable(120), %"class.absl::optional.1970"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.blink::NGLogicalLineItem", align 16
  %7 = icmp sgt i32 %1, 0
  %8 = or i1 %7, %2
  br i1 %8, label %9, label %204

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %3, i64 0, i32 2, i32 0
  %11 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %10, align 8
  %12 = icmp eq %"class.blink::ShapeResultView"* %11, null
  br i1 %12, label %204, label %13

13:                                               ; preds = %9
  %14 = tail call %"class.blink::ShapeResult"* @_ZNK5blink15ShapeResultView17CreateShapeResultEv(%"class.blink::ShapeResultView"* nonnull %11) #10
  %15 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %3, i64 0, i32 3
  %16 = bitcast %"struct.blink::NGTextOffset"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = trunc i64 %17 to i32
  %19 = lshr i64 %17, 32
  %20 = trunc i64 %19 to i32
  %21 = getelementptr inbounds %"class.blink::NGLineTruncator", %"class.blink::NGLineTruncator"* %0, i64 0, i32 2
  %22 = load i8, i8* %21, align 4
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %13
  %25 = sitofp i32 %1 to float
  %26 = fmul float %25, 1.562500e-02
  br label %33

27:                                               ; preds = %13
  %28 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %14, i64 0, i32 1
  %29 = load float, float* %28, align 4
  %30 = sitofp i32 %1 to float
  %31 = fmul float %30, 1.562500e-02
  %32 = fsub float %29, %31
  br label %33

33:                                               ; preds = %27, %24
  %34 = phi float [ %26, %24 ], [ %32, %27 ]
  %35 = tail call i32 @_ZNK5blink11ShapeResult11OffsetToFitEfNS_13TextDirectionE(%"class.blink::ShapeResult"* %14, float %34, i8 zeroext %22) #10
  %36 = icmp ne i32 %35, 0
  %37 = xor i1 %36, true
  %38 = sub i32 %20, %18
  %39 = icmp eq i32 %35, %38
  %40 = or i1 %39, %37
  br i1 %40, label %41, label %45

41:                                               ; preds = %33
  br i1 %2, label %42, label %194

42:                                               ; preds = %41
  %43 = add i32 %35, -1
  %44 = select i1 %36, i32 %43, i32 1
  br label %45

45:                                               ; preds = %33, %42
  %46 = phi i32 [ %44, %42 ], [ %35, %33 ]
  %47 = bitcast %"struct.blink::NGLogicalLineItem"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %47) #10
  %48 = load i8, i8* %21, align 4
  %49 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %14, i64 0, i32 8
  %50 = load i32, i32* %49, align 8, !noalias !8
  %51 = lshr i32 %50, 29
  %52 = trunc i32 %51 to i8
  %53 = and i8 %52, 1
  %54 = icmp eq i8 %53, %48
  %55 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %3, i64 0, i32 3, i32 0
  %56 = load i32, i32* %55, align 8, !noalias !8
  %57 = add i32 %56, %46
  br i1 %54, label %61, label %58

58:                                               ; preds = %45
  %59 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %3, i64 0, i32 3, i32 1
  %60 = load i32, i32* %59, align 4, !noalias !8
  br label %61

61:                                               ; preds = %58, %45
  %62 = phi i32 [ %57, %58 ], [ %56, %45 ]
  %63 = phi i32 [ %60, %58 ], [ %57, %45 ]
  %64 = tail call %"class.blink::ShapeResultView"* @_ZN5blink15ShapeResultView6CreateEPKNS_11ShapeResultEjj(%"class.blink::ShapeResult"* %14, i32 %62, i32 %63) #10, !noalias !8
  %65 = ptrtoint %"class.blink::ShapeResultView"* %64 to i64
  %66 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %6, i64 0, i32 0, i32 0
  store %"class.blink::NGLayoutResult"* null, %"class.blink::NGLayoutResult"** %66, align 16, !alias.scope !8
  %67 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %6, i64 0, i32 1
  %68 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %3, i64 0, i32 1
  %69 = bitcast %"class.blink::NGInlineItem"** %68 to i64*
  %70 = load i64, i64* %69, align 8, !noalias !8
  %71 = bitcast %"class.blink::NGInlineItem"** %67 to i64*
  store i64 %70, i64* %71, align 8, !alias.scope !8
  %72 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %6, i64 0, i32 2
  %73 = bitcast %class.scoped_refptr.1700* %72 to i64*
  store i64 %65, i64* %73, align 16, !alias.scope !8
  %74 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %6, i64 0, i32 3
  %75 = bitcast %"struct.blink::NGTextOffset"* %74 to i64*
  %76 = zext i32 %63 to i64
  %77 = shl nuw i64 %76, 32
  %78 = zext i32 %62 to i64
  %79 = or i64 %77, %78
  store i64 %79, i64* %75, align 8, !alias.scope !8
  %80 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %3, i64 0, i32 4, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8, !noalias !8
  %82 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %6, i64 0, i32 4, i32 0, i32 0
  store %"class.WTF::StringImpl"* %81, %"class.WTF::StringImpl"** %82, align 16, !alias.scope !8
  %83 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %83, label %101, label %84

84:                                               ; preds = %61
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4, !noalias !8
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %101

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %91 = load i32, i32* %90, align 4, !noalias !8
  %92 = zext i32 %91 to i33
  %93 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %92, i33 1) #10
  %94 = extractvalue { i33, i1 } %93, 1
  %95 = extractvalue { i33, i1 } %93, 0
  %96 = icmp slt i33 %95, 0
  %97 = or i1 %94, %96
  br i1 %97, label %98, label %99, !prof !2

98:                                               ; preds = %89
  tail call void @llvm.trap() #10, !noalias !8
  unreachable

99:                                               ; preds = %89
  %100 = trunc i33 %95 to i32
  store i32 %100, i32* %90, align 4, !noalias !8
  br label %101

101:                                              ; preds = %61, %84, %99
  %102 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %6, i64 0, i32 5
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %102, align 8, !alias.scope !8
  %103 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %6, i64 0, i32 6
  store i32 0, i32* %103, align 16, !alias.scope !8
  %104 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %6, i64 0, i32 8
  %105 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %6, i64 0, i32 10
  %106 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %3, i64 0, i32 10
  %107 = bitcast %"struct.blink::LogicalRect"* %105 to i8*
  %108 = bitcast %"struct.blink::LogicalRect"* %106 to i8*
  %109 = bitcast %"class.blink::LayoutObject"** %104 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 16, i1 false) #10, !alias.scope !8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %108, i64 16, i1 false) #10
  %110 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %6, i64 0, i32 11, i32 0, i32 0
  store i32 0, i32* %110, align 8, !alias.scope !8
  %111 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %6, i64 0, i32 11, i32 1, i32 0
  store i32 0, i32* %111, align 4, !alias.scope !8
  %112 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %64, i64 0, i32 6
  %113 = load float, float* %112, align 8, !noalias !8
  %114 = fmul float %113, 6.400000e+01
  %115 = tail call float @llvm.ceil.f32(float %114) #10
  %116 = fcmp ult float %115, 0xC1E0000000000000
  %117 = fcmp ugt float %115, 0x41DFFFFFE0000000
  %118 = fcmp ogt float %115, 0xC1E0000000000000
  %119 = select i1 %118, float %115, float 0xC1E0000000000000
  %120 = fptosi float %119 to i32
  %121 = select i1 %116, i32 0, i32 2147483647
  %122 = select i1 %117, i32 %121, i32 %120
  %123 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %6, i64 0, i32 12, i32 0
  store i32 %122, i32* %123, align 16, !alias.scope !8
  %124 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %6, i64 0, i32 13, i32 0
  store i32 0, i32* %124, align 4, !alias.scope !8
  %125 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %6, i64 0, i32 14
  store i32 0, i32* %125, align 8, !alias.scope !8
  %126 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %6, i64 0, i32 15
  store i32 0, i32* %126, align 4, !alias.scope !8
  %127 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %6, i64 0, i32 16
  %128 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %3, i64 0, i32 16
  %129 = load i8, i8* %128, align 8, !noalias !8
  store i8 %129, i8* %127, align 16, !alias.scope !8
  %130 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %6, i64 0, i32 17
  store i8 0, i8* %130, align 1, !alias.scope !8
  %131 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %6, i64 0, i32 18
  store i8 0, i8* %131, align 2, !alias.scope !8
  %132 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %6, i64 0, i32 19
  store i8 0, i8* %132, align 1, !alias.scope !8
  %133 = getelementptr inbounds %"class.absl::optional.1970", %"class.absl::optional.1970"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i8, i8* %133, align 8, !range !6
  %135 = icmp eq i8 %134, 0
  %136 = getelementptr inbounds %"class.absl::optional.1970", %"class.absl::optional.1970"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  br i1 %135, label %137, label %155

137:                                              ; preds = %101
  %138 = bitcast %"struct.blink::NGLogicalLineItem"* %6 to <2 x i64>*
  %139 = load <2 x i64>, <2 x i64>* %138, align 16
  store %"class.blink::NGLayoutResult"* null, %"class.blink::NGLayoutResult"** %66, align 16
  %140 = bitcast %"struct.blink::NGLogicalLineItem"* %136 to <2 x i64>*
  store <2 x i64> %139, <2 x i64>* %140, align 8
  %141 = getelementptr inbounds %"class.absl::optional.1970", %"class.absl::optional.1970"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %142 = getelementptr inbounds %class.scoped_refptr.1700, %class.scoped_refptr.1700* %72, i64 0, i32 0
  %143 = bitcast %class.scoped_refptr.1700* %72 to <2 x i64>*
  %144 = load <2 x i64>, <2 x i64>* %143, align 16
  store %"class.blink::ShapeResultView"* null, %"class.blink::ShapeResultView"** %142, align 16
  %145 = bitcast %class.scoped_refptr.1700* %141 to <2 x i64>*
  store <2 x i64> %144, <2 x i64>* %145, align 8
  %146 = getelementptr inbounds %"class.absl::optional.1970", %"class.absl::optional.1970"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4
  %147 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %6, i64 0, i32 4
  %148 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %147, i64 0, i32 0, i32 0
  %149 = bitcast %"class.WTF::String"* %147 to i64*
  %150 = load i64, i64* %149, align 16
  %151 = bitcast %"class.WTF::String"* %146 to i64*
  store i64 %150, i64* %151, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %148, align 16
  %152 = getelementptr inbounds %"class.absl::optional.1970", %"class.absl::optional.1970"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 5
  %153 = bitcast %"class.blink::LayoutObject"** %152 to i8*
  %154 = bitcast %"class.blink::LayoutObject"** %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %153, i8* align 8 %154, i64 76, i1 false) #10
  store i8 1, i8* %133, align 8
  br label %172

155:                                              ; preds = %101
  %156 = call dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN5blink17NGLogicalLineItemaSEOS0_(%"struct.blink::NGLogicalLineItem"* %136, %"struct.blink::NGLogicalLineItem"* nonnull dereferenceable(120) %6) #10
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 16
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %172, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  br i1 %163, label %166, label %168

166:                                              ; preds = %159
  %167 = add i32 %165, -1
  store i32 %167, i32* %164, align 4
  br label %168

168:                                              ; preds = %166, %159
  %169 = phi i32 [ %167, %166 ], [ %165, %159 ]
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %168
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %157) #10
  br label %172

172:                                              ; preds = %137, %171, %168, %155
  %173 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %6, i64 0, i32 2, i32 0
  %174 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %173, align 16
  %175 = icmp eq %"class.blink::ShapeResultView"* %174, null
  br i1 %175, label %183, label %176

176:                                              ; preds = %172
  %177 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %174, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %177) #10
  %178 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %174, i64 0, i32 0, i32 0, i32 0, i32 0
  %179 = load i32, i32* %178, align 4
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %183

181:                                              ; preds = %176
  call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %174) #10
  %182 = bitcast %"class.blink::ShapeResultView"* %174 to i8*
  call void @free(i8* %182) #10
  br label %183

183:                                              ; preds = %181, %176, %172
  %184 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %66, align 16
  %185 = icmp eq %"class.blink::NGLayoutResult"* %184, null
  br i1 %185, label %193, label %186

186:                                              ; preds = %183
  %187 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %184, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %187) #10
  %188 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %184, i64 0, i32 0, i32 0, i32 0, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %193

191:                                              ; preds = %186
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %184) #10
  %192 = bitcast %"class.blink::NGLayoutResult"* %184 to i8*
  call void @free(i8* %192) #10
  br label %193

193:                                              ; preds = %183, %186, %191
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %47) #10
  br label %194

194:                                              ; preds = %41, %193
  %195 = phi i1 [ true, %193 ], [ false, %41 ]
  %196 = icmp eq %"class.blink::ShapeResult"* %14, null
  br i1 %196, label %204, label %197

197:                                              ; preds = %194
  %198 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %14, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %198) #10
  %199 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %204

202:                                              ; preds = %197
  call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %14) #10
  %203 = bitcast %"class.blink::ShapeResult"* %14 to i8*
  call void @free(i8* %203) #10
  br label %204

204:                                              ; preds = %9, %202, %197, %194, %5
  %205 = phi i1 [ false, %5 ], [ %2, %9 ], [ %195, %194 ], [ %195, %197 ], [ %195, %202 ]
  ret i1 %205
}

declare %"class.blink::ShapeResultView"* @_ZN5blink15ShapeResultView6CreateEPKNS_11ShapeResultEjj(%"class.blink::ShapeResult"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #5

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #6

declare %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"*) local_unnamed_addr #3

declare %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #5

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1945"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1945", %"class.WTF::Vector.1945"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.1945", %"class.WTF::Vector.1945"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::NGLogicalLineItem"*, %"struct.blink::NGLogicalLineItem"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %24, i64 %25
  ret %"struct.blink::NGLogicalLineItem"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"*) unnamed_addr #4

declare void @_ZN5blink18NGLogicalLineItems15WillInsertChildEj(%"class.blink::NGLogicalLineItems"*, i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE6insertIRS2_EEvjOT_(%"class.WTF::Vector.1945"*, i32, %"struct.blink::NGLogicalLineItem"* dereferenceable(120)) local_unnamed_addr #8 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.1945", %"class.WTF::Vector.1945"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ult i32 %10, %1
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %8, align 8
  br label %23

14:                                               ; preds = %3
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i8* %15, i8* %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %8, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1969, %"class.logging::CheckOpResult"* nonnull %5) #10
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  %24 = load i32, i32* %9, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector.1945", %"class.WTF::Vector.1945"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %45

28:                                               ; preds = %23
  %29 = add i32 %24, 1
  %30 = getelementptr inbounds %"class.WTF::Vector.1945", %"class.WTF::Vector.1945"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = load %"struct.blink::NGLogicalLineItem"*, %"struct.blink::NGLogicalLineItem"** %30, align 8
  %32 = icmp ugt %"struct.blink::NGLogicalLineItem"* %31, %2
  br i1 %32, label %37, label %33

33:                                               ; preds = %28
  %34 = zext i32 %24 to i64
  %35 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %31, i64 %34
  %36 = icmp ugt %"struct.blink::NGLogicalLineItem"* %35, %2
  br i1 %36, label %38, label %37

37:                                               ; preds = %33, %28
  call void @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1945"* %0, i32 %29) #10
  br label %45

38:                                               ; preds = %33
  %39 = ptrtoint %"struct.blink::NGLogicalLineItem"* %2 to i64
  %40 = ptrtoint %"struct.blink::NGLogicalLineItem"* %31 to i64
  %41 = sub i64 %39, %40
  %42 = sdiv exact i64 %41, 120
  call void @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1945"* %0, i32 %29) #10
  %43 = load %"struct.blink::NGLogicalLineItem"*, %"struct.blink::NGLogicalLineItem"** %30, align 8
  %44 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %43, i64 %42
  br label %45

45:                                               ; preds = %38, %37, %23
  %46 = phi %"struct.blink::NGLogicalLineItem"* [ %2, %23 ], [ %2, %37 ], [ %44, %38 ]
  %47 = getelementptr inbounds %"class.WTF::Vector.1945", %"class.WTF::Vector.1945"* %0, i64 0, i32 0, i32 0, i32 0
  %48 = load %"struct.blink::NGLogicalLineItem"*, %"struct.blink::NGLogicalLineItem"** %47, align 8
  %49 = zext i32 %1 to i64
  %50 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %48, i64 %49
  %51 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %50, i64 1
  %52 = icmp ne %"struct.blink::NGLogicalLineItem"* %51, null
  %53 = icmp ne %"struct.blink::NGLogicalLineItem"* %50, null
  %54 = and i1 %53, %52
  br i1 %54, label %55, label %64, !prof !7

55:                                               ; preds = %45
  %56 = load i32, i32* %9, align 4
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %48, i64 %57
  %59 = bitcast %"struct.blink::NGLogicalLineItem"* %51 to i8*
  %60 = bitcast %"struct.blink::NGLogicalLineItem"* %50 to i8*
  %61 = ptrtoint %"struct.blink::NGLogicalLineItem"* %58 to i64
  %62 = ptrtoint %"struct.blink::NGLogicalLineItem"* %50 to i64
  %63 = sub i64 %61, %62
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* nonnull align 8 %60, i64 %63, i1 false) #10
  br label %64

64:                                               ; preds = %45, %55
  %65 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %46, i64 0, i32 0, i32 0
  %66 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %65, align 8
  %67 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %50, i64 0, i32 0, i32 0
  store %"class.blink::NGLayoutResult"* %66, %"class.blink::NGLayoutResult"** %67, align 8
  %68 = icmp eq %"class.blink::NGLayoutResult"* %66, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %66, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %70) #10
  br label %71

71:                                               ; preds = %69, %64
  %72 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %48, i64 %49, i32 1
  %73 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %46, i64 0, i32 1
  %74 = bitcast %"class.blink::NGInlineItem"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::NGInlineItem"** %72 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %46, i64 0, i32 2, i32 0
  %78 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %77, align 8
  %79 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %48, i64 %49, i32 2, i32 0
  store %"class.blink::ShapeResultView"* %78, %"class.blink::ShapeResultView"** %79, align 8
  %80 = icmp eq %"class.blink::ShapeResultView"* %78, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %71
  %82 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %78, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %82) #10
  br label %83

83:                                               ; preds = %81, %71
  %84 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %48, i64 %49, i32 3
  %85 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %46, i64 0, i32 3
  %86 = bitcast %"struct.blink::NGTextOffset"* %85 to i64*
  %87 = bitcast %"struct.blink::NGTextOffset"* %84 to i64*
  %88 = load i64, i64* %86, align 8
  store i64 %88, i64* %87, align 8
  %89 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %46, i64 0, i32 4, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %48, i64 %49, i32 4, i32 0, i32 0
  store %"class.WTF::StringImpl"* %90, %"class.WTF::StringImpl"** %91, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %92, label %110, label %93

93:                                               ; preds = %83
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %110

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = zext i32 %100 to i33
  %102 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %101, i33 1) #10
  %103 = extractvalue { i33, i1 } %102, 1
  %104 = extractvalue { i33, i1 } %102, 0
  %105 = icmp slt i33 %104, 0
  %106 = or i1 %103, %105
  br i1 %106, label %107, label %108, !prof !2

107:                                              ; preds = %98
  call void @llvm.trap() #10
  unreachable

108:                                              ; preds = %98
  %109 = trunc i33 %104 to i32
  store i32 %109, i32* %99, align 4
  br label %110

110:                                              ; preds = %83, %93, %108
  %111 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %48, i64 %49, i32 5
  %112 = bitcast %"class.blink::LayoutObject"** %111 to i8*
  %113 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %46, i64 0, i32 5
  %114 = bitcast %"class.blink::LayoutObject"** %113 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %114, i64 76, i1 false) #10
  %115 = load i32, i32* %9, align 4
  %116 = add i32 %115, 1
  store i32 %116, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1945"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1945", %"class.WTF::Vector.1945"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i8* %15, i8* %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #10
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !7

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1945", %"class.WTF::Vector.1945"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"struct.blink::NGLogicalLineItem"*, %"struct.blink::NGLogicalLineItem"** %31, align 8
  %33 = icmp eq %"struct.blink::NGLogicalLineItem"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink17NGLogicalLineItemEEEmm(i64 %37) #10
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17NGLogicalLineItemEEEPKcv, i64 0, i64 0)) #10
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1945"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = udiv i64 %38, 120
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1945", %"class.WTF::Vector.1945"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1945"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 16, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1945"* %0, i32 %27) #10
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1945"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1945", %"class.WTF::Vector.1945"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::NGLogicalLineItem"*, %"struct.blink::NGLogicalLineItem"** %5, align 8
  %7 = icmp eq %"struct.blink::NGLogicalLineItem"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1945", %"class.WTF::Vector.1945"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"struct.blink::NGLogicalLineItem"*
  %10 = icmp eq %"struct.blink::NGLogicalLineItem"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1945"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1945", %"class.WTF::Vector.1945"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1945", %"class.WTF::Vector.1945"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.1945", %"class.WTF::Vector.1945"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.1945"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.1945", %"class.WTF::Vector.1945"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"struct.blink::NGLogicalLineItem"* %6 to i8*
  %27 = mul nuw nsw i64 %25, 120
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #10
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1946"* %19, %"struct.blink::NGLogicalLineItem"* nonnull %6) #10
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink17NGLogicalLineItemEEEmm(i64 %30) #10
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17NGLogicalLineItemEEEPKcv, i64 0, i64 0)) #10
  %33 = udiv i64 %31, 120
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.1945", %"class.WTF::Vector.1945"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"struct.blink::NGLogicalLineItem"*, %"struct.blink::NGLogicalLineItem"** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"struct.blink::NGLogicalLineItem"* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !7

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.1945", %"class.WTF::Vector.1945"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"struct.blink::NGLogicalLineItem"* %36 to i8*
  %45 = mul nuw nsw i64 %43, 120
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #10
  %46 = load %"struct.blink::NGLogicalLineItem"*, %"struct.blink::NGLogicalLineItem"** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"struct.blink::NGLogicalLineItem"* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.1945", %"class.WTF::Vector.1945"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"struct.blink::NGLogicalLineItem"*
  %51 = icmp eq %"struct.blink::NGLogicalLineItem"* %48, %50
  br i1 %51, label %54, label %52, !prof !7

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.1945", %"class.WTF::Vector.1945"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1946"* %53, %"struct.blink::NGLogicalLineItem"* %48) #10
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.1945"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.1945", %"class.WTF::Vector.1945"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink17NGLogicalLineItemEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 17878220
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 17878220) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = mul i64 %0, 120
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink17NGLogicalLineItemELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1946"*, %"struct.blink::NGLogicalLineItem"*) local_unnamed_addr #9 comdat align 2 {
  %3 = bitcast %"struct.blink::NGLogicalLineItem"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #10
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: nounwind
declare void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(120) %"struct.blink::NGLogicalLineItem"* @_ZN5blink17NGLogicalLineItemaSEOS0_(%"struct.blink::NGLogicalLineItem"*, %"struct.blink::NGLogicalLineItem"* dereferenceable(120)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %1, i64 0, i32 0, i32 0
  %4 = bitcast %"struct.blink::NGLogicalLineItem"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %"class.blink::NGLayoutResult"* null, %"class.blink::NGLayoutResult"** %3, align 8
  %6 = bitcast %"struct.blink::NGLogicalLineItem"* %0 to i64*
  %7 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %7, align 8
  store i64 %5, i64* %6, align 8
  %9 = icmp eq %"class.blink::NGLayoutResult"* %8, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %8, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %11) #10
  %12 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  tail call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %8) #10
  %16 = bitcast %"class.blink::NGLayoutResult"* %8 to i8*
  tail call void @free(i8* %16) #10
  br label %17

17:                                               ; preds = %2, %10, %15
  %18 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %1, i64 0, i32 1
  %19 = bitcast %"class.blink::NGInlineItem"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %0, i64 0, i32 1
  %22 = bitcast %"class.blink::NGInlineItem"** %21 to i64*
  store i64 %20, i64* %22, align 8
  %23 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %0, i64 0, i32 2
  %24 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %1, i64 0, i32 2
  %25 = getelementptr inbounds %class.scoped_refptr.1700, %class.scoped_refptr.1700* %24, i64 0, i32 0
  %26 = bitcast %class.scoped_refptr.1700* %24 to i64*
  %27 = load i64, i64* %26, align 8
  store %"class.blink::ShapeResultView"* null, %"class.blink::ShapeResultView"** %25, align 8
  %28 = bitcast %class.scoped_refptr.1700* %23 to i64*
  %29 = getelementptr inbounds %class.scoped_refptr.1700, %class.scoped_refptr.1700* %23, i64 0, i32 0
  %30 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %29, align 8
  store i64 %27, i64* %28, align 8
  %31 = icmp eq %"class.blink::ShapeResultView"* %30, null
  br i1 %31, label %39, label %32

32:                                               ; preds = %17
  %33 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %30, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %33) #10
  %34 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %32
  tail call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %30) #10
  %38 = bitcast %"class.blink::ShapeResultView"* %30 to i8*
  tail call void @free(i8* %38) #10
  br label %39

39:                                               ; preds = %17, %32, %37
  %40 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %0, i64 0, i32 3
  %41 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %1, i64 0, i32 3
  %42 = bitcast %"struct.blink::NGTextOffset"* %41 to i64*
  %43 = bitcast %"struct.blink::NGTextOffset"* %40 to i64*
  %44 = load i64, i64* %42, align 8
  store i64 %44, i64* %43, align 8
  %45 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %0, i64 0, i32 4
  %46 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %1, i64 0, i32 4
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 0, i32 0, i32 0
  %48 = bitcast %"class.WTF::String"* %46 to i64*
  %49 = load i64, i64* %48, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %47, align 8
  %50 = bitcast %"class.WTF::String"* %45 to i64*
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %49, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %39
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #10
  br label %67

67:                                               ; preds = %39, %63, %66
  %68 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %0, i64 0, i32 5
  %69 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %1, i64 0, i32 5
  %70 = bitcast %"class.blink::LayoutObject"** %68 to i8*
  %71 = bitcast %"class.blink::LayoutObject"** %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 76, i1 false)
  ret %"struct.blink::NGLogicalLineItem"* %0
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind readnone }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink15NGLineTruncator12TruncateTextERKNS_17NGLogicalLineItemERKNS_11ShapeResultEjNS_13TextDirectionE: argument 0"}
!5 = distinct !{!5, !"_ZN5blink15NGLineTruncator12TruncateTextERKNS_17NGLogicalLineItemERKNS_11ShapeResultEjNS_13TextDirectionE"}
!6 = !{i8 0, i8 2}
!7 = !{!"branch_weights", i32 2000, i32 1}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink15NGLineTruncator12TruncateTextERKNS_17NGLogicalLineItemERKNS_11ShapeResultEjNS_13TextDirectionE: argument 0"}
!10 = distinct !{!10, !"_ZN5blink15NGLineTruncator12TruncateTextERKNS_17NGLogicalLineItemERKNS_11ShapeResultEjNS_13TextDirectionE"}
