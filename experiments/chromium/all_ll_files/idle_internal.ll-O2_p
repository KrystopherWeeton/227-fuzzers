; ModuleID = '../../ui/base/idle/idle_internal.cc'
source_filename = "../../ui/base/idle/idle_internal.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.base::NoDestructor" = type { [8 x i8] }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }

@_ZZN2ui19IdleStateForTestingEvE10idle_state = internal global %"class.base::NoDestructor" zeroinitializer, align 4
@_ZGVZN2ui19IdleStateForTestingEvE10idle_state = internal global i64 0, align 8

; Function Attrs: nofree nounwind ssp uwtable
define hidden dereferenceable(8) %"class.absl::optional"* @_ZN2ui19IdleStateForTestingEv() local_unnamed_addr #0 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN2ui19IdleStateForTestingEvE10idle_state to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2ui19IdleStateForTestingEvE10idle_state) #2
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN2ui19IdleStateForTestingEvE10idle_state, i64 0, i32 0, i64 0), align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN2ui19IdleStateForTestingEvE10idle_state) #2
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %"class.absl::optional"* bitcast (%"class.base::NoDestructor"* @_ZZN2ui19IdleStateForTestingEvE10idle_state to %"class.absl::optional"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
