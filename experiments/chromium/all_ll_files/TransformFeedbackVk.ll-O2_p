; ModuleID = '../../third_party/angle/src/libANGLE/renderer/vulkan/TransformFeedbackVk.cpp'
source_filename = "../../third_party/angle/src/libANGLE/renderer/vulkan/TransformFeedbackVk.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.rx::TransformFeedbackVk" = type { %"class.rx::TransformFeedbackImpl", i8, %"struct.std::__1::array.646", %"struct.std::__1::array.649", %"struct.std::__1::array.650", %"struct.std::__1::array.650", %"struct.std::__1::array.650", %"struct.std::__1::array.651", %"struct.std::__1::array.649", %"class.rx::vk::UniformsAndXfbDescriptorDesc" }
%"class.rx::TransformFeedbackImpl" = type { i32 (...)**, %"class.gl::TransformFeedbackState"* }
%"struct.std::__1::array.646" = type { [4 x %"class.rx::vk::BufferHelper"*] }
%"class.rx::vk::BufferHelper" = type { %"class.rx::vk::Resource", %"class.rx::vk::Buffer", %"class.rx::vk::BufferMemory", i32, i64, i32, i32, i32, i32, i32, %"class.rx::vk::BufferSerial" }
%"class.rx::vk::Resource" = type { i32 (...)**, %"class.rx::vk::SharedResourceUse" }
%"class.rx::vk::SharedResourceUse" = type { %"struct.rx::vk::ResourceUse"* }
%"struct.rx::vk::ResourceUse" = type { i32, %"class.rx::Serial" }
%"class.rx::Serial" = type { i64 }
%"class.rx::vk::Buffer" = type { %"class.rx::vk::WrappedObject" }
%"class.rx::vk::WrappedObject" = type { %struct.VkBuffer_T* }
%struct.VkBuffer_T = type opaque
%"class.rx::vk::BufferMemory" = type { [8 x i8], %"class.rx::vk::Allocation", %"class.rx::vk::DeviceMemory", i8*, i8* }
%"class.rx::vk::Allocation" = type { %"class.rx::vk::WrappedObject.647" }
%"class.rx::vk::WrappedObject.647" = type { %struct.VmaAllocation_T* }
%struct.VmaAllocation_T = type opaque
%"class.rx::vk::DeviceMemory" = type { %"class.rx::vk::WrappedObject.648" }
%"class.rx::vk::WrappedObject.648" = type { %struct.VkDeviceMemory_T* }
%struct.VkDeviceMemory_T = type opaque
%"class.rx::vk::BufferSerial" = type { i32 }
%"struct.std::__1::array.650" = type { [4 x i64] }
%"struct.std::__1::array.651" = type { [4 x %"class.rx::vk::BufferHelper"] }
%"struct.std::__1::array.649" = type { [4 x %struct.VkBuffer_T*] }
%"class.rx::vk::UniformsAndXfbDescriptorDesc" = type { i32, %"struct.std::__1::array.652", %"struct.std::__1::array.653" }
%"struct.std::__1::array.652" = type { [5 x %"class.rx::vk::BufferSerial"] }
%"struct.std::__1::array.653" = type { [4 x i32] }
%"class.gl::TransformFeedbackState" = type { %"class.std::__1::basic_string", i8, i8, i8, i64, i64, %"class.gl::Program"*, %"class.std::__1::vector.440" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.gl::Program" = type { %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::HasAttachedShaders", %"class.rx::Serial", %"class.gl::ProgramState", %"class.rx::ProgramImpl"*, i8, %"class.gl::ProgramBindings", %"class.gl::ProgramAliasedBindings", %"class.gl::ProgramAliasedBindings", i8, %"class.std::__1::unique_ptr.173", i8, i32, %"class.gl::ShaderProgramManager"*, %"struct.gl::ShaderProgramID", %"class.angle::BitSetT.118" }
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array.76", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array.76" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"class.gl::HasAttachedShaders" = type { i32 (...)** }
%"class.gl::ProgramState" = type { %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", %"class.angle::PackedEnumMap", i32, %"class.std::__1::vector.46", %"class.std::__1::vector.53", %"class.std::__1::vector.60", %"class.gl::Range", %"class.angle::BitSetT.68", %"class.std::__1::vector", %"class.angle::BitSetT.69", i8, i8, i8, i8, %"class.angle::BitSetT", i32, i32, i32, i32, i32, i32, %"class.gl::ProgramAliasedBindings", %"class.std::__1::shared_ptr" }
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [6 x %"class.gl::Shader"*] }
%"class.gl::Shader" = type { %"class.gl::LabeledObject", %"class.gl::ShaderState", %"class.std::__1::unique_ptr", %"struct.gl::Limitations", %"struct.gl::ShaderProgramID", i8, i32, i8, %"class.std::__1::basic_string", %"class.gl::BindingPointer", %"class.std::__1::unique_ptr.40", %"class.std::__1::basic_string", %"class.gl::ShaderProgramManager"*, i32, i32 }
%"class.gl::ShaderState" = type <{ %"class.std::__1::basic_string", i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", [4 x i8], %"class.std::__1::vector.6", %"class.std::__1::vector.6", %"class.std::__1::vector.6", %"class.std::__1::vector.13", %"class.std::__1::vector.13", %"class.std::__1::vector.6", %"class.std::__1::vector.6", %"class.std::__1::vector.6", i8, [3 x i8], %"class.angle::BitSetT", i32, %struct.Optional, %struct.Optional, %struct.Optional.20, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.15" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.6" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.sh::InterfaceBlock"* }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.8" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", i8, i8, %"class.std::__1::vector.6", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.sh::ShaderVariable"* }
%struct.Optional = type { i8, i8 }
%struct.Optional.20 = type { i8, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.rx::ShaderImpl"* }
%"class.rx::ShaderImpl" = type opaque
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer" }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.gl::Compiler"* }
%"class.gl::Compiler" = type { %"class.angle::RefCountObject", %"class.std::__1::unique_ptr.24", i32, i32, %struct.ShBuiltInResources, %"class.angle::PackedEnumMap.31" }
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.rx::CompilerImpl"* }
%"class.rx::CompilerImpl" = type opaque
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.30", %"struct.std::__1::array.30", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array.30" = type { [3 x i32] }
%"class.angle::PackedEnumMap.31" = type { %"struct.std::__1::array.32" }
%"struct.std::__1::array.32" = type { [6 x %"class.std::__1::vector.33"] }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"class.gl::ShCompilerInstance"*, %"class.gl::ShCompilerInstance"*, %"class.std::__1::__compressed_pair.35" }
%"class.gl::ShCompilerInstance" = type <{ i8*, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.gl::ShCompilerInstance"* }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.gl::Shader::CompilingState"* }
%"struct.gl::Shader::CompilingState" = type opaque
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.53" = type { %"class.std::__1::__vector_base.54" }
%"class.std::__1::__vector_base.54" = type { %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"*, %"class.std::__1::__compressed_pair.55" }
%"struct.gl::VariableLocation" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.gl::VariableLocation"* }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"struct.gl::BufferVariable"*, %"struct.gl::BufferVariable"*, %"class.std::__1::__compressed_pair.63" }
%"struct.gl::BufferVariable" = type <{ %"struct.gl::ActiveVariable.base", [7 x i8], %"struct.sh::ShaderVariable", i32, %"struct.sh::BlockMemberInfo", i32, [4 x i8] }>
%"struct.gl::ActiveVariable.base" = type <{ i32 (...)**, %"class.angle::BitSetT.62" }>
%"class.angle::BitSetT.62" = type { i8 }
%"struct.sh::BlockMemberInfo" = type { i32, i32, i32, i8, i32 }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.gl::BufferVariable"* }
%"class.gl::Range" = type { i32, i32 }
%"class.angle::BitSetT.68" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i32* }
%"class.angle::BitSetT.69" = type { i64 }
%"class.angle::BitSetT" = type { i32 }
%"class.std::__1::shared_ptr" = type { %"class.gl::ProgramExecutable"*, %"class.std::__1::__shared_weak_count"* }
%"class.gl::ProgramExecutable" = type <{ %"class.angle::Subject", %"class.gl::InfoLog", %"class.angle::BitSetT.62", %"class.angle::BitSetT.62", [6 x i8], %"class.angle::BitSetT.83", i32, [4 x i8], %"class.angle::BitSetT.69", %"class.angle::BitSetT.83", %"class.angle::BitSetArray", %"struct.std::__1::array.86", %"struct.std::__1::array.87", %"class.angle::BitSetArray", %"struct.std::__1::array.88", %"struct.std::__1::array.89", %"class.angle::BitSetArray", %"struct.std::__1::array.89", i8, [7 x i8], %"class.std::__1::vector.6", %"class.std::__1::vector.53", %"class.std::__1::vector.53", i8, [7 x i8], %"class.std::__1::vector.6", %"class.std::__1::vector.90", %"class.std::__1::vector.97", i32, [4 x i8], %"class.std::__1::vector.104", %"class.gl::Range", %"class.gl::Range", %"class.std::__1::vector.111", %"class.angle::BitSetT.118", %"class.std::__1::vector.119", %"class.gl::Range", %"class.std::__1::vector.111", %"class.std::__1::vector.111", %"class.gl::Range", %"class.std::__1::vector.126", %"class.std::__1::vector.133", %"class.std::__1::vector.133", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.angle::PackedEnumMap.140", %"class.angle::PackedEnumMap.140", %"class.angle::PackedEnumMap.142", i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, %struct.Optional.144, [6 x i8] }>
%"class.gl::InfoLog" = type { %"class.std::__1::unique_ptr.77" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.angle::BitSetT.83" = type { i64 }
%"struct.std::__1::array.86" = type { [96 x i32] }
%"struct.std::__1::array.87" = type { [96 x i8] }
%"struct.std::__1::array.88" = type { [96 x i8] }
%"class.angle::BitSetArray" = type { %"struct.std::__1::array.84" }
%"struct.std::__1::array.84" = type { [2 x %"class.angle::BitSetT.85"] }
%"class.angle::BitSetT.85" = type { i64 }
%"struct.std::__1::array.89" = type { [96 x %"class.angle::BitSetT.62"] }
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"*, %"class.std::__1::__compressed_pair.92" }
%"struct.gl::TransformFeedbackVarying" = type <{ %"struct.sh::ShaderVariable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.gl::TransformFeedbackVarying"* }
%"class.std::__1::vector.97" = type { %"class.std::__1::__vector_base.98" }
%"class.std::__1::__vector_base.98" = type { i32*, i32*, %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { i32* }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"*, %"class.std::__1::__compressed_pair.106" }
%"struct.gl::LinkedUniform" = type { %"struct.gl::ActiveVariable.base", %"struct.sh::ShaderVariable", %"struct.gl::UniformTypeInfo"*, i32, %"struct.sh::BlockMemberInfo", %"class.std::__1::vector" }
%"struct.gl::UniformTypeInfo" = type <{ i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, [4 x i8], i64, i64, i64, i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.gl::LinkedUniform"* }
%"class.std::__1::vector.119" = type { %"class.std::__1::__vector_base.120" }
%"class.std::__1::__vector_base.120" = type { %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"*, %"class.std::__1::__compressed_pair.121" }
%"struct.gl::ShaderVariableBuffer" = type { %"struct.gl::ActiveVariable.base", i32, i32, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"struct.gl::ShaderVariableBuffer"* }
%"class.std::__1::vector.111" = type { %"class.std::__1::__vector_base.112" }
%"class.std::__1::__vector_base.112" = type { %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"*, %"class.std::__1::__compressed_pair.113" }
%"struct.gl::InterfaceBlock" = type <{ %"struct.gl::ShaderVariableBuffer", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.gl::InterfaceBlock"* }
%"class.std::__1::vector.126" = type { %"class.std::__1::__vector_base.127" }
%"class.std::__1::__vector_base.127" = type { %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"*, %"class.std::__1::__compressed_pair.128" }
%"struct.gl::SamplerBinding" = type { i8, i32, i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.gl::SamplerBinding"* }
%"class.std::__1::vector.133" = type { %"class.std::__1::__vector_base.134" }
%"class.std::__1::__vector_base.134" = type { %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"*, %"class.std::__1::__compressed_pair.135" }
%"struct.gl::ImageBinding" = type { i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"struct.gl::ImageBinding"* }
%"class.angle::PackedEnumMap.140" = type { %"struct.std::__1::array.141" }
%"struct.std::__1::array.141" = type { [6 x %"class.std::__1::vector.6"] }
%"class.angle::PackedEnumMap.142" = type { %"struct.std::__1::array.143" }
%"struct.std::__1::array.143" = type { [6 x i32] }
%struct.Optional.144 = type { i8, i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.rx::ProgramImpl" = type { i32 (...)**, %"class.gl::ProgramState"* }
%"class.gl::ProgramBindings" = type { %"class.absl::flat_hash_map.164" }
%"class.absl::flat_hash_map.164" = type { %"class.absl::container_internal::raw_hash_map.165" }
%"class.absl::container_internal::raw_hash_map.165" = type { %"class.absl::container_internal::raw_hash_set.166" }
%"class.absl::container_internal::raw_hash_set.166" = type { i8*, %"union.absl::container_internal::map_slot_type.167"*, i64, i64, %"class.absl::container_internal::CompressedTuple.168" }
%"union.absl::container_internal::map_slot_type.167" = type opaque
%"class.absl::container_internal::CompressedTuple.168" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.169" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.169" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.gl::ProgramAliasedBindings" = type { %"class.absl::flat_hash_map" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type opaque
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"struct.gl::Program::LinkingState"* }
%"struct.gl::Program::LinkingState" = type opaque
%"class.gl::ShaderProgramManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap", %"class.gl::ResourceMap.163" }
%"class.gl::ResourceManagerBase" = type { i32 (...)**, %"class.gl::HandleAllocator", i64 }
%"class.gl::HandleAllocator" = type <{ i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.145", %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::vector.145" = type { %"class.std::__1::__vector_base.146" }
%"class.std::__1::__vector_base.146" = type { %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"*, %"class.std::__1::__compressed_pair.147" }
%"struct.gl::HandleAllocator::HandleRange" = type { i32, i32 }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"struct.gl::HandleAllocator::HandleRange"* }
%"class.gl::ResourceMap" = type { i64, %"class.gl::Shader"**, %"class.absl::flat_hash_map.152" }
%"class.absl::flat_hash_map.152" = type { %"class.absl::container_internal::raw_hash_map.153" }
%"class.absl::container_internal::raw_hash_map.153" = type { %"class.absl::container_internal::raw_hash_set.154" }
%"class.absl::container_internal::raw_hash_set.154" = type { i8*, %"union.absl::container_internal::map_slot_type.155"*, i64, i64, %"class.absl::container_internal::CompressedTuple.156" }
%"union.absl::container_internal::map_slot_type.155" = type opaque
%"class.absl::container_internal::CompressedTuple.156" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.157" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.157" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.163" = type { i64, %"class.gl::Program"**, %"class.absl::flat_hash_map.179" }
%"class.absl::flat_hash_map.179" = type { %"class.absl::container_internal::raw_hash_map.180" }
%"class.absl::container_internal::raw_hash_map.180" = type { %"class.absl::container_internal::raw_hash_set.181" }
%"class.absl::container_internal::raw_hash_set.181" = type { i8*, %"union.absl::container_internal::map_slot_type.182"*, i64, i64, %"class.absl::container_internal::CompressedTuple.183" }
%"union.absl::container_internal::map_slot_type.182" = type { %"struct.std::__1::pair.1411" }
%"struct.std::__1::pair.1411" = type { i32, %"class.gl::Program"* }
%"class.absl::container_internal::CompressedTuple.183" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.184" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.184" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.gl::ShaderProgramID" = type { i32 }
%"class.angle::BitSetT.118" = type { i64 }
%"class.std::__1::vector.440" = type { %"class.std::__1::__vector_base.441" }
%"class.std::__1::__vector_base.441" = type { %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"*, %"class.std::__1::__compressed_pair.442" }
%"class.gl::OffsetBindingPointer" = type { %"class.gl::BindingPointer.264", i64, i64 }
%"class.gl::BindingPointer.264" = type { %"class.angle::BindingPointer.265" }
%"class.angle::BindingPointer.265" = type { i32 (...)**, %"class.gl::Buffer"* }
%"class.gl::Buffer" = type { %"class.gl::RefCountObject.base.231", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.angle::Subject", %"class.gl::BufferState", %"class.rx::BufferImpl"*, %"class.angle::ObserverBinding", %"class.gl::IndexRangeCache" }
%"class.gl::RefCountObject.base.231" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::BufferID" }>
%"struct.gl::BufferID" = type { i32 }
%"class.gl::BufferState" = type <{ %"class.std::__1::basic_string", i8, [7 x i8], i64, i32, i32, i8, [7 x i8], i8*, i64, i64, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.rx::BufferImpl" = type { %"class.angle::Subject", %"class.gl::BufferState"* }
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.gl::IndexRangeCache" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.232" }
%"class.std::__1::__tree.232" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.233", %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { i64 }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.gl::OffsetBindingPointer"* }
%"class.gl::Context" = type <{ %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::State", i8, i8, i8, i8, [4 x i8], %"class.gl::ErrorSet", %"class.angle::BitSetT.537", [4 x i8], %"class.std::__1::unique_ptr.538", i8*, %"struct.gl::Extensions", [4 x i8], %"class.gl::BindingPointer", %"struct.egl::Config"*, %"class.angle::PackedEnumMap.544", %"class.gl::ResourceMap.546", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.556", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.566", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.576", %"class.gl::HandleAllocator", i8*, i8*, i8*, i8*, %"class.std::__1::vector.586", i8*, %"class.std::__1::vector.586", %"class.std::__1::unique_ptr.593", i8, i8, i8, i8, i32, i8, i8, i8, [5 x i8], %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.egl::Display"*, i8, i8, i8, [5 x i8], %"class.gl::MemoryProgramCache"*, %"class.angle::BitSetT.536", %"class.gl::StateCache", %"class.angle::BitSetT.85", %"class.angle::BitSetT.85", %"class.angle::BitSetT.536", %"class.angle::BitSetT.85", %"class.angle::BitSetT.536", %"class.angle::BitSetT.85", %"class.angle::BitSetT.536", %"class.angle::BitSetT.85", %"class.angle::BitSetT.536", %"class.angle::BitSetT.85", %"class.angle::BitSetT.536", %"class.angle::BitSetT.85", %"class.angle::BitSetT.536", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %struct.Optional.607, %struct.Optional.607, %"class.std::__1::shared_ptr.608", %"class.std::__1::unique_ptr.609", %"class.std::__1::basic_string", i64, %"class.gl::MockOverlay", i8, i8, i8, [4 x i8] }>
%"class.egl::LabeledObject" = type { i32 (...)** }
%"class.gl::State" = type <{ %"struct.gl::ContextID", i32, i32, %"struct.gl::Version", [4 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"class.egl::ShareGroup"*, %"class.gl::BufferManager"*, %"class.gl::ShaderProgramManager"*, %"class.gl::TextureManager"*, %"class.gl::RenderbufferManager"*, %"class.gl::SamplerManager"*, %"class.gl::SyncManager"*, %"class.gl::FramebufferManager"*, %"class.gl::ProgramPipelineManager"*, %"class.gl::MemoryObjectManager"*, %"class.gl::SemaphoreManager"*, i32, i32, %"struct.angle::Color", float, i32, %"struct.gl::RasterizerState", i8, [3 x i8], %"struct.gl::Rectangle", %"struct.gl::BlendState", [4 x i8], %"class.gl::BlendStateExt", %"struct.angle::Color", i8, i8, [2 x i8], float, i8, i8, [2 x i8], i32, %"struct.std::__1::array.373", i8, [3 x i8], float, %"struct.gl::DepthStencilState", i32, i32, float, i32, i32, i32, i8, i8, [2 x i8], %"struct.gl::Rectangle", float, float, i32, i32, %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"*, %"class.gl::BindingPointer.374", %"class.gl::Program"*, %"class.gl::BindingPointer.376", %"class.gl::ProgramExecutable"*, i8, [7 x i8], %"class.std::__1::vector.378", %"class.gl::VertexArray"*, %"class.angle::BitSetT.69", i64, %"class.angle::PackedEnumMap.406", %"class.gl::ActiveTexturesCache", %"class.std::__1::vector.337", %"class.angle::BitSetArray", %"class.std::__1::vector.418", %"class.std::__1::vector.427", %"class.angle::PackedEnumMap.434", %"class.angle::PackedEnumMap.438", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.angle::BitSetArray.447", %"class.angle::BitSetT.448", %"class.angle::BitSetT.85", %"class.gl::BindingPointer.449", %"struct.gl::PixelUnpackState", %"struct.gl::PixelPackState", i8, [3 x i8], %"class.gl::Debug", i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, %"class.angle::BitSetT.476", i32, %"class.gl::GLES1State", %"class.angle::BitSetT.85", %"class.angle::BitSetT.535", [4 x i8], %"class.angle::BitSetT.536", %"class.angle::BitSetT.83", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.gl::MockOverlay"*, %"class.angle::BitSetT.68", %"class.angle::BitSetT.68", i8, [5 x i8] }>
%"struct.gl::ContextID" = type { i32 }
%"struct.gl::Version" = type { i32, i32 }
%"struct.gl::Caps" = type <{ float, float, i32, [4 x i8], i64, i32, i32, i32, i32, float, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"class.angle::PackedEnumMap.142", %"class.angle::PackedEnumMap.142", %"class.angle::PackedEnumMap.142", %"class.angle::PackedEnumMap.142", %"class.angle::PackedEnumMap.142", %"class.angle::PackedEnumMap.142", %"class.angle::PackedEnumMap.142", %"class.angle::PackedEnumMap.216", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.30", %"struct.std::__1::array.30", i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, [4 x i8] }>
%"struct.gl::TypePrecision" = type { %"struct.std::__1::array.215", i32 }
%"struct.std::__1::array.215" = type { [2 x i32] }
%"class.angle::PackedEnumMap.216" = type { %"struct.std::__1::array.217" }
%"struct.std::__1::array.217" = type { [6 x i64] }
%"class.gl::TextureCapsMap" = type { %"class.angle::PackedEnumMap.218" }
%"class.angle::PackedEnumMap.218" = type { %"struct.std::__1::array.219" }
%"struct.std::__1::array.219" = type { [227 x %"struct.gl::TextureCaps"] }
%"struct.gl::TextureCaps" = type { i8, i8, i8, i8, i8, %"class.std::__1::set.220" }
%"class.std::__1::set.220" = type { %"class.std::__1::__tree.221" }
%"class.std::__1::__tree.221" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.222", %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"class.egl::ShareGroup" = type opaque
%"class.gl::BufferManager" = type { %"class.gl::TypedResourceManager" }
%"class.gl::TypedResourceManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.229" }
%"class.gl::ResourceMap.229" = type { i64, %"class.gl::Buffer"**, %"class.absl::flat_hash_map.241" }
%"class.absl::flat_hash_map.241" = type { %"class.absl::container_internal::raw_hash_map.242" }
%"class.absl::container_internal::raw_hash_map.242" = type { %"class.absl::container_internal::raw_hash_set.243" }
%"class.absl::container_internal::raw_hash_set.243" = type { i8*, %"union.absl::container_internal::map_slot_type.244"*, i64, i64, %"class.absl::container_internal::CompressedTuple.245" }
%"union.absl::container_internal::map_slot_type.244" = type { %"struct.std::__1::pair.1409" }
%"struct.std::__1::pair.1409" = type { i32, %"class.gl::Buffer"* }
%"class.absl::container_internal::CompressedTuple.245" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::TextureManager" = type { %"class.gl::TypedResourceManager.250" }
%"class.gl::TypedResourceManager.250" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.251" }
%"class.gl::ResourceMap.251" = type { i64, %"class.gl::Texture"**, %"class.absl::flat_hash_map.270" }
%"class.gl::Texture" = type <{ %"class.gl::RefCountObject.base.253", [4 x i8], %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::TextureState", %"class.angle::BitSetT.266", %"class.rx::TextureImpl"*, %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::basic_string", %"class.egl::Surface"*, %"class.egl::Stream"*, %"class.angle::FastVector.268", %"struct.gl::Texture::SamplerCompletenessCache", [4 x i8] }>
%"class.gl::RefCountObject.base.253" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TextureID" }>
%"struct.gl::TextureID" = type { i32 }
%"class.egl::ImageSibling" = type { %"class.gl::FramebufferAttachmentObject", %"class.std::__1::set", %"class.angle::BindingPointer.197" }
%"class.gl::FramebufferAttachmentObject" = type { %"class.angle::Subject", %"class.angle::ObserverInterface" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.188", %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"class.angle::BindingPointer.197" = type { i32 (...)**, %"class.egl::Image"* }
%"class.egl::Image" = type <{ %"class.angle::RefCountObject.198", %"class.egl::LabeledObject", %"struct.egl::ImageState", %"class.rx::ImageImpl"*, i8, [7 x i8] }>
%"class.angle::RefCountObject.198" = type { i32 (...)**, i64 }
%"struct.egl::ImageState" = type { i8*, i32, %"class.gl::ImageIndex", %"class.egl::ImageSibling"*, %"class.std::__1::set.199", %"struct.gl::Format", i8, %"struct.gl::Extents", i64, i32, i32 }
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.std::__1::set.199" = type { %"class.std::__1::__tree.200" }
%"class.std::__1::__tree.200" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.201", %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.gl::Format" = type { %"struct.gl::InternalFormat"* }
%"struct.gl::InternalFormat" = type { i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)* }
%"struct.gl::Extents" = type { i32, i32, i32 }
%"class.rx::ImageImpl" = type opaque
%"class.gl::TextureState" = type <{ i8, [3 x i8], %"struct.gl::SwizzleState", %"class.gl::SamplerState", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.std::__1::vector.257", %"struct.gl::Rectangle", i32, [4 x i8], %"class.gl::OffsetBindingPointer", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.gl::SwizzleState" = type { i32, i32, i32, i32 }
%"class.gl::SamplerState" = type { i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, %"struct.angle::ColorGeneric", %"union.gl::SamplerState::Completeness" }
%"struct.angle::ColorGeneric" = type <{ %union.anon.254, i8, [3 x i8] }>
%union.anon.254 = type { %"struct.angle::Color" }
%"union.gl::SamplerState::Completeness" = type { i32 }
%"class.std::__1::vector.257" = type { %"class.std::__1::__vector_base.258" }
%"class.std::__1::__vector_base.258" = type { %"struct.gl::ImageDesc"*, %"struct.gl::ImageDesc"*, %"class.std::__1::__compressed_pair.259" }
%"struct.gl::ImageDesc" = type <{ %"struct.gl::Extents", [4 x i8], %"struct.gl::Format", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.gl::ImageDesc"* }
%"class.angle::BitSetT.266" = type { i64 }
%"class.rx::TextureImpl" = type opaque
%"class.egl::Stream" = type { %"class.egl::LabeledObject", i8*, %"class.egl::Display"*, %"class.rx::StreamProducerImpl"*, %"class.gl::Context"*, i32, i64, i64, i32, i32, i32, %"struct.std::__1::array.267", i32, i32 }
%"class.rx::StreamProducerImpl" = type opaque
%"struct.std::__1::array.267" = type { [3 x %"struct.egl::Stream::PlaneTexture"] }
%"struct.egl::Stream::PlaneTexture" = type { i32, %"class.gl::Texture"* }
%"class.angle::FastVector.268" = type { %"struct.std::__1::array.269", %"class.rx::Serial"*, i64, i64 }
%"struct.std::__1::array.269" = type { [8 x %"class.rx::Serial"] }
%"struct.gl::Texture::SamplerCompletenessCache" = type <{ %"struct.gl::ContextID", %"class.gl::SamplerState", i8, [3 x i8] }>
%"class.absl::flat_hash_map.270" = type { %"class.absl::container_internal::raw_hash_map.271" }
%"class.absl::container_internal::raw_hash_map.271" = type { %"class.absl::container_internal::raw_hash_set.272" }
%"class.absl::container_internal::raw_hash_set.272" = type { i8*, %"union.absl::container_internal::map_slot_type.273"*, i64, i64, %"class.absl::container_internal::CompressedTuple.274" }
%"union.absl::container_internal::map_slot_type.273" = type { %"struct.std::__1::pair.1413" }
%"struct.std::__1::pair.1413" = type { i32, %"class.gl::Texture"* }
%"class.absl::container_internal::CompressedTuple.274" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::RenderbufferManager" = type { %"class.gl::TypedResourceManager.279" }
%"class.gl::TypedResourceManager.279" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.280" }
%"class.gl::ResourceMap.280" = type { i64, %"class.gl::Renderbuffer"**, %"class.absl::flat_hash_map.281" }
%"class.gl::Renderbuffer" = type { %"class.gl::RefCountObject.base", %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::RenderbufferState", %"class.std::__1::unique_ptr.209", %"class.std::__1::basic_string", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::RenderbufferID" }>
%"struct.gl::RenderbufferID" = type { i32 }
%"class.gl::RenderbufferState" = type <{ i32, i32, %"struct.gl::Format", i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.rx::RenderbufferImpl"* }
%"class.rx::RenderbufferImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::RenderbufferState"* }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"class.absl::flat_hash_map.281" = type { %"class.absl::container_internal::raw_hash_map.282" }
%"class.absl::container_internal::raw_hash_map.282" = type { %"class.absl::container_internal::raw_hash_set.283" }
%"class.absl::container_internal::raw_hash_set.283" = type { i8*, %"union.absl::container_internal::map_slot_type.284"*, i64, i64, %"class.absl::container_internal::CompressedTuple.285" }
%"union.absl::container_internal::map_slot_type.284" = type { %"struct.std::__1::pair.1415" }
%"struct.std::__1::pair.1415" = type { i32, %"class.gl::Renderbuffer"* }
%"class.absl::container_internal::CompressedTuple.285" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SamplerManager" = type { %"class.gl::TypedResourceManager.290" }
%"class.gl::TypedResourceManager.290" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.291" }
%"class.gl::ResourceMap.291" = type { i64, %"class.gl::Sampler"**, %"class.absl::flat_hash_map.294" }
%"class.gl::Sampler" = type { %"class.gl::RefCountObject.base.293", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::SamplerState", i8, %"class.rx::SamplerImpl"*, %"class.std::__1::basic_string" }
%"class.gl::RefCountObject.base.293" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::SamplerID" }>
%"struct.gl::SamplerID" = type { i32 }
%"class.rx::SamplerImpl" = type opaque
%"class.absl::flat_hash_map.294" = type { %"class.absl::container_internal::raw_hash_map.295" }
%"class.absl::container_internal::raw_hash_map.295" = type { %"class.absl::container_internal::raw_hash_set.296" }
%"class.absl::container_internal::raw_hash_set.296" = type { i8*, %"union.absl::container_internal::map_slot_type.297"*, i64, i64, %"class.absl::container_internal::CompressedTuple.298" }
%"union.absl::container_internal::map_slot_type.297" = type { %"struct.std::__1::pair.1417" }
%"struct.std::__1::pair.1417" = type { i32, %"class.gl::Sampler"* }
%"class.absl::container_internal::CompressedTuple.298" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SyncManager" = type { %"class.gl::TypedResourceManager.303" }
%"class.gl::TypedResourceManager.303" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.304" }
%"class.gl::ResourceMap.304" = type { i64, %"class.gl::Sync"**, %"class.absl::flat_hash_map.305" }
%"class.gl::Sync" = type opaque
%"class.absl::flat_hash_map.305" = type { %"class.absl::container_internal::raw_hash_map.306" }
%"class.absl::container_internal::raw_hash_map.306" = type { %"class.absl::container_internal::raw_hash_set.307" }
%"class.absl::container_internal::raw_hash_set.307" = type { i8*, %"union.absl::container_internal::map_slot_type.308"*, i64, i64, %"class.absl::container_internal::CompressedTuple.309" }
%"union.absl::container_internal::map_slot_type.308" = type opaque
%"class.absl::container_internal::CompressedTuple.309" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::FramebufferManager" = type { %"class.gl::TypedResourceManager.314" }
%"class.gl::TypedResourceManager.314" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.315" }
%"class.gl::ResourceMap.315" = type { i64, %"class.gl::Framebuffer"**, %"class.absl::flat_hash_map.316" }
%"class.absl::flat_hash_map.316" = type { %"class.absl::container_internal::raw_hash_map.317" }
%"class.absl::container_internal::raw_hash_map.317" = type { %"class.absl::container_internal::raw_hash_set.318" }
%"class.absl::container_internal::raw_hash_set.318" = type { i8*, %"union.absl::container_internal::map_slot_type.319"*, i64, i64, %"class.absl::container_internal::CompressedTuple.320" }
%"union.absl::container_internal::map_slot_type.319" = type { %"struct.std::__1::pair.1419" }
%"struct.std::__1::pair.1419" = type { i32, %"class.gl::Framebuffer"* }
%"class.absl::container_internal::CompressedTuple.320" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramPipelineManager" = type { %"class.gl::TypedResourceManager.325" }
%"class.gl::TypedResourceManager.325" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.326" }
%"class.gl::ResourceMap.326" = type { i64, %"class.gl::ProgramPipeline"**, %"class.absl::flat_hash_map.344" }
%"class.gl::ProgramPipeline" = type { %"class.gl::RefCountObject.base.328", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::HasAttachedShaders", %"class.std::__1::unique_ptr.329", %"class.gl::ProgramPipelineState", %"class.std::__1::vector.337", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base.328" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::ProgramPipelineID" }>
%"struct.gl::ProgramPipelineID" = type { i32 }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.rx::ProgramPipelineImpl"* }
%"class.rx::ProgramPipelineImpl" = type opaque
%"class.gl::ProgramPipelineState" = type <{ %"class.std::__1::basic_string", %"class.gl::Program"*, %"class.angle::PackedEnumMap.335", i8, [7 x i8], %"class.gl::ProgramExecutable"*, i8, [7 x i8] }>
%"class.angle::PackedEnumMap.335" = type { %"struct.std::__1::array.336" }
%"struct.std::__1::array.336" = type { [6 x %"class.gl::Program"*] }
%"class.absl::flat_hash_map.344" = type { %"class.absl::container_internal::raw_hash_map.345" }
%"class.absl::container_internal::raw_hash_map.345" = type { %"class.absl::container_internal::raw_hash_set.346" }
%"class.absl::container_internal::raw_hash_set.346" = type { i8*, %"union.absl::container_internal::map_slot_type.347"*, i64, i64, %"class.absl::container_internal::CompressedTuple.348" }
%"union.absl::container_internal::map_slot_type.347" = type { %"struct.std::__1::pair.1421" }
%"struct.std::__1::pair.1421" = type { i32, %"class.gl::ProgramPipeline"* }
%"class.absl::container_internal::CompressedTuple.348" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::MemoryObjectManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.353" }
%"class.gl::ResourceMap.353" = type { i64, %"class.gl::MemoryObject"**, %"class.absl::flat_hash_map.354" }
%"class.gl::MemoryObject" = type opaque
%"class.absl::flat_hash_map.354" = type { %"class.absl::container_internal::raw_hash_map.355" }
%"class.absl::container_internal::raw_hash_map.355" = type { %"class.absl::container_internal::raw_hash_set.356" }
%"class.absl::container_internal::raw_hash_set.356" = type { i8*, %"union.absl::container_internal::map_slot_type.357"*, i64, i64, %"class.absl::container_internal::CompressedTuple.358" }
%"union.absl::container_internal::map_slot_type.357" = type opaque
%"class.absl::container_internal::CompressedTuple.358" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SemaphoreManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.363" }
%"class.gl::ResourceMap.363" = type { i64, %"class.gl::Semaphore"**, %"class.absl::flat_hash_map.364" }
%"class.gl::Semaphore" = type opaque
%"class.absl::flat_hash_map.364" = type { %"class.absl::container_internal::raw_hash_map.365" }
%"class.absl::container_internal::raw_hash_map.365" = type { %"class.absl::container_internal::raw_hash_set.366" }
%"class.absl::container_internal::raw_hash_set.366" = type { i8*, %"union.absl::container_internal::map_slot_type.367"*, i64, i64, %"class.absl::container_internal::CompressedTuple.368" }
%"union.absl::container_internal::map_slot_type.367" = type opaque
%"class.absl::container_internal::CompressedTuple.368" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.gl::RasterizerState" = type { i8, i8, i32, i8, float, float, i8, i8, i8, i8 }
%"struct.gl::BlendState" = type { i8, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%"class.gl::BlendStateExt" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.angle::BitSetT.68", %"class.angle::BitSetT.68", i64 }
%"struct.angle::Color" = type { float, float, float, float }
%"struct.std::__1::array.373" = type { [2 x i32] }
%"struct.gl::DepthStencilState" = type { i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"class.gl::Framebuffer" = type { %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::FramebufferState", %"class.rx::FramebufferImpl"*, %struct.Optional.624, %"class.std::__1::vector.337", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::BitSetT.625", %"class.angle::BitSetT.68", %struct.Optional.626 }
%"class.gl::FramebufferState" = type { %"struct.gl::FramebufferID", %"class.rx::Serial", %"class.std::__1::basic_string", %"class.std::__1::vector.617", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.angle::BitSetT.68", %"class.std::__1::vector", i32, %"class.angle::BitSetT.68", %"class.angle::BitSetT.69", i32, i32, i32, i8, i32, %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", i8, %"class.angle::BitSetT.536", i8, %"class.gl::FramebufferAttachment", i32, %"struct.gl::Offset" }
%"struct.gl::FramebufferID" = type { i32 }
%"class.std::__1::vector.617" = type { %"class.std::__1::__vector_base.618" }
%"class.std::__1::__vector_base.618" = type { %"class.gl::FramebufferAttachment"*, %"class.gl::FramebufferAttachment"*, %"class.std::__1::__compressed_pair.619" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.620" }
%"struct.std::__1::__compressed_pair_elem.620" = type { %"class.gl::FramebufferAttachment"* }
%"class.gl::FramebufferAttachment" = type { i32, %"class.gl::FramebufferAttachment::Target", %"class.gl::FramebufferAttachmentObject"*, i32, i8, i32, i32 }
%"class.gl::FramebufferAttachment::Target" = type { i32, %"class.gl::ImageIndex" }
%"struct.gl::Offset" = type { i32, i32, i32 }
%"class.rx::FramebufferImpl" = type { i32 (...)**, %"class.gl::FramebufferState"* }
%struct.Optional.624 = type { i8, %"struct.gl::FramebufferStatus" }
%"struct.gl::FramebufferStatus" = type { i32, i8* }
%"class.angle::BitSetT.625" = type { i64 }
%struct.Optional.626 = type { i8, %"class.angle::BitSetT.625" }
%"class.gl::BindingPointer.374" = type { %"class.angle::BindingPointer.375" }
%"class.angle::BindingPointer.375" = type { i32 (...)**, %"class.gl::Renderbuffer"* }
%"class.gl::BindingPointer.376" = type { %"class.angle::BindingPointer.377" }
%"class.angle::BindingPointer.377" = type { i32 (...)**, %"class.gl::ProgramPipeline"* }
%"class.std::__1::vector.378" = type { %"class.std::__1::__vector_base.379" }
%"class.std::__1::__vector_base.379" = type { %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"*, %"class.std::__1::__compressed_pair.381" }
%"struct.gl::VertexAttribCurrentValueData" = type { %union.anon.380, i32 }
%union.anon.380 = type { [4 x float] }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.gl::VertexAttribCurrentValueData"* }
%"class.gl::VertexArray" = type <{ %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"struct.gl::VertexArrayID", [4 x i8], %"class.gl::VertexArrayState", %"class.angle::BitSetT.400", %"struct.std::__1::array.401", %"struct.std::__1::array.403", %struct.Optional.405, %"class.rx::VertexArrayImpl"*, %"class.std::__1::vector.337", %"class.angle::BitSetT.83", %"class.gl::VertexArray::IndexRangeCache", i8, [7 x i8] }>
%"struct.gl::VertexArrayID" = type { i32 }
%"class.gl::VertexArrayState" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.386", %"class.gl::SubjectBindingPointer", %"class.std::__1::vector.393", %"class.angle::BitSetT.83", %"class.angle::BitSetT.69", %"class.angle::BitSetT.83", %"class.angle::BitSetT.83", %"class.angle::BitSetT.83", %"class.angle::BitSetT.83", %"class.angle::BitSetT.83" }
%"class.std::__1::vector.386" = type { %"class.std::__1::__vector_base.387" }
%"class.std::__1::__vector_base.387" = type { %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"*, %"class.std::__1::__compressed_pair.388" }
%"struct.gl::VertexAttribute" = type { i8, %"struct.angle::Format"*, i8*, i32, i32, i32, i64 }
%"struct.angle::Format" = type { i32, i32, i32, void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, void (i8*, i8*)*, void (i8*, i8*)*, %"class.rx::FastCopyFunctionMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32 }
%"class.rx::FastCopyFunctionMap" = type { i64, %"struct.rx::FastCopyFunctionMap::Entry"* }
%"struct.rx::FastCopyFunctionMap::Entry" = type { i32, void (i8*, i8*)* }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"struct.gl::VertexAttribute"* }
%"class.gl::SubjectBindingPointer" = type { %"class.gl::BindingPointer.264", %"class.angle::ObserverBindingBase" }
%"class.std::__1::vector.393" = type { %"class.std::__1::__vector_base.394" }
%"class.std::__1::__vector_base.394" = type { %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"*, %"class.std::__1::__compressed_pair.395" }
%"class.gl::VertexBinding" = type { i32, i32, i64, %"class.gl::BindingPointer.264", %"class.angle::BitSetT.83" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.gl::VertexBinding"* }
%"class.angle::BitSetT.400" = type { i64 }
%"struct.std::__1::array.401" = type { [16 x %"class.angle::BitSetT.402"] }
%"class.angle::BitSetT.402" = type { i64 }
%"struct.std::__1::array.403" = type { [16 x %"class.angle::BitSetT.404"] }
%"class.angle::BitSetT.404" = type { i64 }
%struct.Optional.405 = type { i8, %"class.angle::BitSetT.400" }
%"class.rx::VertexArrayImpl" = type opaque
%"class.gl::VertexArray::IndexRangeCache" = type { i64, i32, i64, %"struct.gl::IndexRange" }
%"struct.gl::IndexRange" = type { i64, i64, i64 }
%"class.angle::PackedEnumMap.406" = type { %"struct.std::__1::array.407" }
%"struct.std::__1::array.407" = type { [11 x %"class.std::__1::vector.408"] }
%"class.std::__1::vector.408" = type { %"class.std::__1::__vector_base.409" }
%"class.std::__1::__vector_base.409" = type { %"class.gl::BindingPointer.410"*, %"class.gl::BindingPointer.410"*, %"class.std::__1::__compressed_pair.412" }
%"class.gl::BindingPointer.410" = type { %"class.angle::BindingPointer.411" }
%"class.angle::BindingPointer.411" = type { i32 (...)**, %"class.gl::Texture"* }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.gl::BindingPointer.410"* }
%"class.gl::ActiveTexturesCache" = type { %"struct.std::__1::array.417" }
%"struct.std::__1::array.417" = type { [96 x %"class.gl::Texture"*] }
%"class.std::__1::vector.418" = type { %"class.std::__1::__vector_base.419" }
%"class.std::__1::__vector_base.419" = type { %"class.gl::BindingPointer.420"*, %"class.gl::BindingPointer.420"*, %"class.std::__1::__compressed_pair.422" }
%"class.gl::BindingPointer.420" = type { %"class.angle::BindingPointer.421" }
%"class.angle::BindingPointer.421" = type { i32 (...)**, %"class.gl::Sampler"* }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.gl::BindingPointer.420"* }
%"class.std::__1::vector.427" = type { %"class.std::__1::__vector_base.428" }
%"class.std::__1::__vector_base.428" = type { %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"*, %"class.std::__1::__compressed_pair.429" }
%"struct.gl::ImageUnit" = type <{ %"class.gl::BindingPointer.410", i32, i8, [3 x i8], i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"struct.gl::ImageUnit"* }
%"class.angle::PackedEnumMap.434" = type { %"struct.std::__1::array.435" }
%"struct.std::__1::array.435" = type { [7 x %"class.gl::BindingPointer.436"] }
%"class.gl::BindingPointer.436" = type { %"class.angle::BindingPointer.437" }
%"class.angle::BindingPointer.437" = type { i32 (...)**, %"class.gl::Query"* }
%"class.gl::Query" = type { %"class.gl::RefCountObject.base.616", %"class.gl::LabeledObject", %"class.rx::QueryImpl"*, %"class.std::__1::basic_string" }
%"class.gl::RefCountObject.base.616" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::QueryID" }>
%"struct.gl::QueryID" = type { i32 }
%"class.rx::QueryImpl" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.angle::PackedEnumMap.438" = type { %"struct.std::__1::array.439" }
%"struct.std::__1::array.439" = type { [13 x %"class.gl::BindingPointer.264"] }
%"class.angle::BitSetArray.447" = type { %"struct.std::__1::array.84" }
%"class.angle::BitSetT.448" = type { i64 }
%"class.gl::BindingPointer.449" = type { %"class.angle::BindingPointer.450" }
%"class.angle::BindingPointer.450" = type { i32 (...)**, %"class.gl::TransformFeedback"* }
%"class.gl::TransformFeedback" = type { %"class.gl::RefCountObject.base.452", %"class.gl::LabeledObject", %"class.gl::TransformFeedbackState", %"class.rx::TransformFeedbackImpl"* }
%"class.gl::RefCountObject.base.452" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TransformFeedbackID" }>
%"struct.gl::TransformFeedbackID" = type { i32 }
%"struct.gl::PixelUnpackState" = type { %"struct.gl::PixelStoreStateBase" }
%"struct.gl::PixelStoreStateBase" = type { i32, i32, i32, i32, i32, i32 }
%"struct.gl::PixelPackState" = type <{ %"struct.gl::PixelStoreStateBase", i8, [3 x i8] }>
%"class.gl::Debug" = type { i8, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*, %"class.std::__1::deque", i32, i8, %"class.std::__1::vector.462" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.458" }
%"struct.std::__1::__split_buffer" = type { %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"class.std::__1::__compressed_pair.453" }
%"struct.gl::Debug::Message" = type { i32, i32, i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"struct.gl::Debug::Message"** }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"class.std::__1::vector.462" = type { %"class.std::__1::__vector_base.463" }
%"class.std::__1::__vector_base.463" = type { %"struct.gl::Debug::Group"*, %"struct.gl::Debug::Group"*, %"class.std::__1::__compressed_pair.471" }
%"struct.gl::Debug::Group" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.464" }
%"class.std::__1::vector.464" = type { %"class.std::__1::__vector_base.465" }
%"class.std::__1::__vector_base.465" = type { %"struct.gl::Debug::Control"*, %"struct.gl::Debug::Control"*, %"class.std::__1::__compressed_pair.466" }
%"struct.gl::Debug::Control" = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"struct.gl::Debug::Control"* }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"struct.gl::Debug::Group"* }
%"class.angle::BitSetT.476" = type { i32 }
%"class.gl::GLES1State" = type <{ %"class.gl::State"*, %"class.angle::BitSetT.83", %"class.std::__1::vector.477", i8, i8, i8, i8, [4 x i8], %"class.std::__1::vector.485", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", %"class.angle::Vector", %"class.std::__1::vector.490", i32, i8, [3 x i8], %"class.angle::FixedVector", %"class.angle::FixedVector", %"class.std::__1::vector.505", %"class.std::__1::vector.512", %"struct.gl::MaterialParameters", %"struct.gl::LightModelParameters", %"class.std::__1::vector.519", %"struct.gl::FogParameters", i8, [3 x i8], %"struct.gl::PointParameters", i8, [3 x i8], float, i8, [7 x i8], %"class.std::__1::vector.528", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::vector.477" = type { %"class.std::__1::__vector_base.478" }
%"class.std::__1::__vector_base.478" = type { %"class.angle::BitSetT.479"*, %"class.angle::BitSetT.479"*, %"class.std::__1::__compressed_pair.480" }
%"class.angle::BitSetT.479" = type opaque
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.angle::BitSetT.479"* }
%"class.std::__1::vector.485" = type { i64*, i64, %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"class.angle::Vector" = type { %"class.angle::VectorBase" }
%"class.angle::VectorBase" = type { [3 x float] }
%"class.std::__1::vector.490" = type { %"class.std::__1::__vector_base.491" }
%"class.std::__1::__vector_base.491" = type { %"struct.gl::TextureCoordF"*, %"struct.gl::TextureCoordF"*, %"class.std::__1::__compressed_pair.492" }
%"struct.gl::TextureCoordF" = type { float, float, float, float }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"struct.gl::TextureCoordF"* }
%"class.angle::FixedVector" = type { %"struct.std::__1::array.497", i64 }
%"struct.std::__1::array.497" = type { [16 x %"class.angle::Mat4"] }
%"class.angle::Mat4" = type { %"class.angle::Matrix" }
%"class.angle::Matrix" = type { %"class.std::__1::vector.498", i32, i32 }
%"class.std::__1::vector.498" = type { %"class.std::__1::__vector_base.499" }
%"class.std::__1::__vector_base.499" = type { float*, float*, %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { float* }
%"class.std::__1::vector.505" = type { %"class.std::__1::__vector_base.506" }
%"class.std::__1::__vector_base.506" = type { %"class.angle::FixedVector"*, %"class.angle::FixedVector"*, %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.angle::FixedVector"* }
%"class.std::__1::vector.512" = type { %"class.std::__1::__vector_base.513" }
%"class.std::__1::__vector_base.513" = type { %"struct.gl::TextureEnvironmentParameters"*, %"struct.gl::TextureEnvironmentParameters"*, %"class.std::__1::__compressed_pair.514" }
%"struct.gl::TextureEnvironmentParameters" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", float, float, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"struct.gl::TextureEnvironmentParameters"* }
%"struct.gl::MaterialParameters" = type { %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", float }
%"struct.gl::LightModelParameters" = type <{ %"struct.angle::Color", i8, [3 x i8] }>
%"class.std::__1::vector.519" = type { %"class.std::__1::__vector_base.520" }
%"class.std::__1::__vector_base.520" = type { %"struct.gl::LightParameters"*, %"struct.gl::LightParameters"*, %"class.std::__1::__compressed_pair.523" }
%"struct.gl::LightParameters" = type { i8, %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"class.angle::Vector.521", %"class.angle::Vector", float, float, float, float, float }
%"class.angle::Vector.521" = type { %"class.angle::VectorBase.522" }
%"class.angle::VectorBase.522" = type { [4 x float] }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"struct.gl::LightParameters"* }
%"struct.gl::FogParameters" = type { i8, float, float, float, %"struct.angle::Color" }
%"struct.gl::PointParameters" = type { float, float, float, %"class.angle::Vector", float }
%"class.std::__1::vector.528" = type { %"class.std::__1::__vector_base.529" }
%"class.std::__1::__vector_base.529" = type { %"struct.gl::ClipPlaneParameters"*, %"struct.gl::ClipPlaneParameters"*, %"class.std::__1::__compressed_pair.530" }
%"struct.gl::ClipPlaneParameters" = type { i8, %"class.angle::Vector.521" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"struct.gl::ClipPlaneParameters"* }
%"class.angle::BitSetT.535" = type { i32 }
%"class.gl::ErrorSet" = type { %"class.gl::Context"*, %"class.std::__1::set.220" }
%"class.angle::BitSetT.537" = type { i32 }
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.rx::ContextImpl"* }
%"class.rx::ContextImpl" = type { %"class.rx::GLImplFactory", %"class.gl::State"*, %"class.gl::MemoryProgramCache"*, %"class.gl::ErrorSet"* }
%"class.rx::GLImplFactory" = type { i32 (...)**, %"class.rx::SerialFactoryBase" }
%"class.rx::SerialFactoryBase" = type { i64 }
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.egl::Config" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.544" = type { %"struct.std::__1::array.545" }
%"struct.std::__1::array.545" = type { [11 x %"class.gl::BindingPointer.410"] }
%"class.gl::ResourceMap.546" = type { i64, %"class.gl::FenceNV"**, %"class.absl::flat_hash_map.547" }
%"class.gl::FenceNV" = type opaque
%"class.absl::flat_hash_map.547" = type { %"class.absl::container_internal::raw_hash_map.548" }
%"class.absl::container_internal::raw_hash_map.548" = type { %"class.absl::container_internal::raw_hash_set.549" }
%"class.absl::container_internal::raw_hash_set.549" = type { i8*, %"union.absl::container_internal::map_slot_type.550"*, i64, i64, %"class.absl::container_internal::CompressedTuple.551" }
%"union.absl::container_internal::map_slot_type.550" = type opaque
%"class.absl::container_internal::CompressedTuple.551" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.556" = type { i64, %"class.gl::Query"**, %"class.absl::flat_hash_map.557" }
%"class.absl::flat_hash_map.557" = type { %"class.absl::container_internal::raw_hash_map.558" }
%"class.absl::container_internal::raw_hash_map.558" = type { %"class.absl::container_internal::raw_hash_set.559" }
%"class.absl::container_internal::raw_hash_set.559" = type { i8*, %"union.absl::container_internal::map_slot_type.560"*, i64, i64, %"class.absl::container_internal::CompressedTuple.561" }
%"union.absl::container_internal::map_slot_type.560" = type opaque
%"class.absl::container_internal::CompressedTuple.561" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.566" = type { i64, %"class.gl::VertexArray"**, %"class.absl::flat_hash_map.567" }
%"class.absl::flat_hash_map.567" = type { %"class.absl::container_internal::raw_hash_map.568" }
%"class.absl::container_internal::raw_hash_map.568" = type { %"class.absl::container_internal::raw_hash_set.569" }
%"class.absl::container_internal::raw_hash_set.569" = type { i8*, %"union.absl::container_internal::map_slot_type.570"*, i64, i64, %"class.absl::container_internal::CompressedTuple.571" }
%"union.absl::container_internal::map_slot_type.570" = type opaque
%"class.absl::container_internal::CompressedTuple.571" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.576" = type { i64, %"class.gl::TransformFeedback"**, %"class.absl::flat_hash_map.577" }
%"class.absl::flat_hash_map.577" = type { %"class.absl::container_internal::raw_hash_map.578" }
%"class.absl::container_internal::raw_hash_map.578" = type { %"class.absl::container_internal::raw_hash_set.579" }
%"class.absl::container_internal::raw_hash_set.579" = type { i8*, %"union.absl::container_internal::map_slot_type.580"*, i64, i64, %"class.absl::container_internal::CompressedTuple.581" }
%"union.absl::container_internal::map_slot_type.580" = type opaque
%"class.absl::container_internal::CompressedTuple.581" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::vector.586" = type { %"class.std::__1::__vector_base.587" }
%"class.std::__1::__vector_base.587" = type { i8**, i8**, %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { i8** }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.gl::GLES1Renderer"* }
%"class.gl::GLES1Renderer" = type opaque
%"class.egl::Surface" = type opaque
%"class.egl::Display" = type opaque
%"class.gl::MemoryProgramCache" = type opaque
%"class.gl::StateCache" = type <{ %"class.angle::BitSetT.83", %"class.angle::BitSetT.83", %"class.angle::BitSetT.83", i8, [7 x i8], i64, i64, i64, i64, i8, [7 x i8], %"class.angle::BitSetT.85", %"class.angle::BitSetArray", %"class.angle::PackedEnumMap.599", %"class.angle::PackedEnumMap.601", %"class.angle::PackedEnumMap.603", %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605", i8, [7 x i8] }>
%"class.angle::PackedEnumMap.599" = type { %"struct.std::__1::array.600" }
%"struct.std::__1::array.600" = type { [16 x i8] }
%"class.angle::PackedEnumMap.601" = type { %"struct.std::__1::array.602" }
%"struct.std::__1::array.602" = type { [12 x i8] }
%"class.angle::PackedEnumMap.603" = type { %"struct.std::__1::array.604" }
%"struct.std::__1::array.604" = type { [4 x i8] }
%"class.angle::PackedEnumMap.605" = type { %"struct.std::__1::array.606" }
%"struct.std::__1::array.606" = type { [19 x i32] }
%"class.angle::BitSetT.536" = type { i64 }
%"class.std::__1::vector.337" = type { %"class.std::__1::__vector_base.338" }
%"class.std::__1::__vector_base.338" = type { %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"*, %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.angle::ObserverBinding"* }
%struct.Optional.607 = type { i8, %"class.angle::ScratchBuffer" }
%"class.angle::ScratchBuffer" = type { i32, i32, %"class.angle::MemoryBuffer" }
%"class.angle::MemoryBuffer" = type { i64, i8* }
%"class.std::__1::shared_ptr.608" = type { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WorkerThreadPool" = type { i32 (...)** }
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.angle::FrameCapture"* }
%"class.angle::FrameCapture" = type opaque
%"class.gl::MockOverlay" = type { %"class.gl::overlay::Mock" }
%"class.gl::overlay::Mock" = type { i8 }
%"class.rx::RendererVk" = type { %"class.egl::Display"*, i8, [7 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"struct.angle::FeaturesVk", %struct.VkInstance_T*, i8, i8, i8, i32, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkDebugReportCallbackEXT_T*, %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceLineRasterizationFeaturesEXT, %struct.VkPhysicalDeviceProvokingVertexFeaturesEXT, %struct.VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT, %struct.VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT, %struct.VkPhysicalDeviceTransformFeedbackFeaturesEXT, %struct.VkPhysicalDeviceIndexTypeUint8FeaturesEXT, %struct.VkPhysicalDeviceSubgroupProperties, %struct.VkPhysicalDeviceDeviceMemoryReportFeaturesEXT, %struct.VkDeviceDeviceMemoryReportCreateInfoEXT, %struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT, %struct.VkPhysicalDeviceShaderFloat16Int8Features, %struct.VkPhysicalDeviceDepthStencilResolveProperties, %struct.VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT, %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceCustomBorderColorFeaturesEXT, %struct.VkExternalFenceProperties, %struct.VkExternalSemaphoreProperties, %struct.VkPhysicalDeviceSamplerYcbcrConversionFeatures, %"class.std::__1::vector.666", %"class.angle::PackedEnumMap.673", i32, i32, i64, i64, i32, %struct.VkDevice_T*, %"class.rx::SerialFactoryBase.675", i8, %"class.std::__1::mutex", %"class.std::__1::vector.677", %"class.rx::vk::MemoryProperties", %"class.rx::vk::FormatTable", %"class.std::__1::mutex", %"class.rx::vk::PipelineCache", i32, i8, i8, %"class.angle::PackedEnumMap.693", %"class.std::__1::basic_string", i32, %"class.rx::DebugAnnotatorVk", i32, %"class.rx::vk::CommandPool", %"class.std::__1::deque.696", %"class.std::__1::mutex", %"class.rx::vk::CommandQueue", %"class.std::__1::mutex", %"class.std::__1::vector.740", %"class.rx::vk::CommandProcessor", %"class.rx::vk::Allocator", %"class.rx::SamplerCache", %"class.rx::SamplerYcbcrConversionCache", %"class.rx::vk::ActiveHandleCounter", %"class.rx::vk::ResourceSerialFactory", %"class.rx::vk::MemoryReport", %"class.angle::PackedEnumMap.956", i32, %"class.std::__1::shared_ptr.958" }
%"struct.angle::FeaturesVk" = type { %"struct.angle::FeatureSetBase", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.std::__1::array.665", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature" }
%"struct.angle::FeatureSetBase" = type { %"class.std::__1::map.654" }
%"class.std::__1::map.654" = type { %"class.std::__1::__tree.655" }
%"class.std::__1::__tree.655" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.656", %"class.std::__1::__compressed_pair.660" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::array.665" = type { [4 x %"struct.angle::Feature"] }
%"struct.angle::Feature" = type { i8*, i32, i8*, i8*, i8, i8* }
%struct.VkInstance_T = type opaque
%struct.VkDebugUtilsMessengerEXT_T = type opaque
%struct.VkDebugReportCallbackEXT_T = type opaque
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceLineRasterizationFeaturesEXT = type { i32, i8*, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceProvokingVertexFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceTransformFeedbackFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceIndexTypeUint8FeaturesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceSubgroupProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDeviceMemoryReportFeaturesEXT = type { i32, i8*, i32 }
%struct.VkDeviceDeviceMemoryReportCreateInfoEXT = type { i32, i8*, i32, void (%struct.VkDeviceMemoryReportCallbackDataEXT*, i8*)*, i8* }
%struct.VkDeviceMemoryReportCallbackDataEXT = type { i32, i8*, i32, i32, i64, i64, i32, i64, i32 }
%struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT = type { i32, i8*, i64 }
%struct.VkPhysicalDeviceShaderFloat16Int8Features = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceDepthStencilResolveProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceCustomBorderColorFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkExternalFenceProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalSemaphoreProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceSamplerYcbcrConversionFeatures = type { i32, i8*, i32 }
%"class.std::__1::vector.666" = type { %"class.std::__1::__vector_base.667" }
%"class.std::__1::__vector_base.667" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.668" }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %struct.VkQueueFamilyProperties* }
%"class.angle::PackedEnumMap.673" = type { %"struct.std::__1::array.674" }
%"struct.std::__1::array.674" = type { [3 x i8] }
%struct.VkDevice_T = type opaque
%"class.rx::SerialFactoryBase.675" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.676" }
%"struct.std::__1::__atomic_base.676" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::vector.677" = type { %"class.std::__1::__vector_base.678" }
%"class.std::__1::__vector_base.678" = type { %"class.rx::vk::SharedGarbage"*, %"class.rx::vk::SharedGarbage"*, %"class.std::__1::__compressed_pair.686" }
%"class.rx::vk::SharedGarbage" = type { %"class.rx::vk::SharedResourceUse", %"class.std::__1::vector.679" }
%"class.std::__1::vector.679" = type { %"class.std::__1::__vector_base.680" }
%"class.std::__1::__vector_base.680" = type { %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"*, %"class.std::__1::__compressed_pair.681" }
%"class.rx::vk::GarbageObject" = type { i32, %"struct.rx::vk::GarbageHandle_T"* }
%"struct.rx::vk::GarbageHandle_T" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.rx::vk::GarbageObject"* }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.687" }
%"struct.std::__1::__compressed_pair_elem.687" = type { %"class.rx::vk::SharedGarbage"* }
%"class.rx::vk::MemoryProperties" = type { %struct.VkPhysicalDeviceMemoryProperties }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.rx::vk::FormatTable" = type { [8 x i8], %"struct.std::__1::array.691" }
%"struct.std::__1::array.691" = type { [227 x %"struct.rx::vk::Format"] }
%"struct.rx::vk::Format" = type <{ i32, i32, i32, i32, i32, [4 x i8], void (i64, i64, i64, i8*, i64, i64)*, { void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, i8 } (i32)*, void (i8*, i64, i64, i8*)*, void (i8*, i64, i64, i8*)*, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.rx::vk::PipelineCache" = type { %"class.rx::vk::WrappedObject.692" }
%"class.rx::vk::WrappedObject.692" = type { %struct.VkPipelineCache_T* }
%struct.VkPipelineCache_T = type opaque
%"class.angle::PackedEnumMap.693" = type { %"struct.std::__1::array.694" }
%"struct.std::__1::array.694" = type { [227 x %struct.VkFormatProperties] }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.rx::DebugAnnotatorVk" = type { %"class.angle::LoggingAnnotator" }
%"class.angle::LoggingAnnotator" = type { %"class.gl::DebugAnnotator" }
%"class.gl::DebugAnnotator" = type { i32 (...)** }
%"class.rx::vk::CommandPool" = type { %"class.rx::vk::WrappedObject.695" }
%"class.rx::vk::WrappedObject.695" = type { %struct.VkCommandPool_T* }
%struct.VkCommandPool_T = type opaque
%"class.std::__1::deque.696" = type { %"class.std::__1::__deque_base.697" }
%"class.std::__1::__deque_base.697" = type { %"struct.std::__1::__split_buffer.698", i64, %"class.std::__1::__compressed_pair.705" }
%"struct.std::__1::__split_buffer.698" = type { %"struct.rx::RendererVk::PendingOneOffCommands"**, %"struct.rx::RendererVk::PendingOneOffCommands"**, %"struct.rx::RendererVk::PendingOneOffCommands"**, %"class.std::__1::__compressed_pair.700" }
%"struct.rx::RendererVk::PendingOneOffCommands" = type { %"class.rx::Serial", %"class.rx::vk::priv::CommandBuffer" }
%"class.rx::vk::priv::CommandBuffer" = type { %"class.rx::vk::WrappedObject.699" }
%"class.rx::vk::WrappedObject.699" = type { %struct.VkCommandBuffer_T* }
%struct.VkCommandBuffer_T = type opaque
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.rx::RendererVk::PendingOneOffCommands"** }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"class.rx::vk::CommandQueue" = type { %"class.rx::vk::CommandQueueInterface", %"class.std::__1::vector.709", %"class.std::__1::vector.716", %"class.rx::vk::priv::CommandBuffer", %"class.rx::vk::PersistentCommandPool", %"class.rx::SerialFactoryBase.675", %"class.rx::Serial", %"class.rx::Serial", %"class.rx::Serial", %"class.angle::PackedEnumMap.730", %"class.rx::vk::FenceRecycler" }
%"class.rx::vk::CommandQueueInterface" = type { i32 (...)** }
%"class.std::__1::vector.709" = type { %"class.std::__1::__vector_base.710" }
%"class.std::__1::__vector_base.710" = type { %"class.rx::vk::ObjectAndSerial"*, %"class.rx::vk::ObjectAndSerial"*, %"class.std::__1::__compressed_pair.711" }
%"class.rx::vk::ObjectAndSerial" = type opaque
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.rx::vk::ObjectAndSerial"* }
%"class.std::__1::vector.716" = type { %"class.std::__1::__vector_base.717" }
%"class.std::__1::__vector_base.717" = type { %"struct.rx::vk::CommandBatch"*, %"struct.rx::vk::CommandBatch"*, %"class.std::__1::__compressed_pair.718" }
%"struct.rx::vk::CommandBatch" = type { [8 x i8], %"class.rx::vk::priv::CommandBuffer", %"class.rx::vk::CommandPool", %"class.rx::vk::Shared", %"class.rx::Serial" }
%"class.rx::vk::Shared" = type { %"class.rx::vk::RefCounted"* }
%"class.rx::vk::RefCounted" = type { i32, %"class.rx::vk::Fence" }
%"class.rx::vk::Fence" = type { %"class.rx::vk::WrappedObject.734" }
%"class.rx::vk::WrappedObject.734" = type { %struct.VkFence_T* }
%struct.VkFence_T = type opaque
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"struct.rx::vk::CommandBatch"* }
%"class.rx::vk::PersistentCommandPool" = type { %"class.std::__1::vector.723", %"class.rx::vk::CommandPool" }
%"class.std::__1::vector.723" = type { %"class.std::__1::__vector_base.724" }
%"class.std::__1::__vector_base.724" = type { %"class.rx::vk::priv::CommandBuffer"*, %"class.rx::vk::priv::CommandBuffer"*, %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.rx::vk::priv::CommandBuffer"* }
%"class.angle::PackedEnumMap.730" = type { %"struct.std::__1::array.731" }
%"struct.std::__1::array.731" = type { [3 x %struct.VkQueue_T*] }
%struct.VkQueue_T = type opaque
%"class.rx::vk::FenceRecycler" = type { %"class.std::__1::mutex", %"class.rx::vk::Recycler" }
%"class.rx::vk::Recycler" = type { %"class.std::__1::vector.732" }
%"class.std::__1::vector.732" = type { %"class.std::__1::__vector_base.733" }
%"class.std::__1::__vector_base.733" = type { %"class.rx::vk::Fence"*, %"class.rx::vk::Fence"*, %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.736" }
%"struct.std::__1::__compressed_pair_elem.736" = type { %"class.rx::vk::Fence"* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.740" = type { %"class.std::__1::__vector_base.741" }
%"class.std::__1::__vector_base.741" = type { %"class.rx::vk::CommandBufferHelper"**, %"class.rx::vk::CommandBufferHelper"**, %"class.std::__1::__compressed_pair.811" }
%"class.rx::vk::CommandBufferHelper" = type { [8 x i8], %"class.angle::PoolAllocator", %"class.angle::PackedEnumMap.749", %"class.angle::BitSetT.758", %"class.rx::vk::priv::SecondaryCommandBuffer", i32, %"class.rx::vk::RenderPassDesc", %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::Framebuffer", %"struct.gl::Rectangle", %"class.rx::vk::PackedClearValuesArray", i8, %"struct.std::__1::array.649", i32, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, %"struct.gl::Rectangle", %"struct.gl::Rectangle", %"class.rx::vk::PackedAttachmentIndex", %"class.angle::FastIntegerMap", %"class.angle::FastIntegerSet", %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"*, %"class.gl::LevelIndexWrapper", i32, i32, %"class.rx::vk::PackedAttachmentIndex", %"class.rx::vk::PackedImageAttachmentArray", %"class.rx::vk::PackedImageAttachmentArray", %"class.rx::vk::ImageHelper"* }
%"class.angle::PoolAllocator" = type <{ i64, i64, i64, i64, i64, %"struct.angle::PoolAllocator::Header"*, %"struct.angle::PoolAllocator::Header"*, %"class.std::__1::vector.742", i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.angle::PoolAllocator::Header" = type { %"struct.angle::PoolAllocator::Header"*, i64 }
%"class.std::__1::vector.742" = type { %"class.std::__1::__vector_base.743" }
%"class.std::__1::__vector_base.743" = type { %"struct.angle::PoolAllocator::AllocState"*, %"struct.angle::PoolAllocator::AllocState"*, %"class.std::__1::__compressed_pair.744" }
%"struct.angle::PoolAllocator::AllocState" = type { i64, %"struct.angle::PoolAllocator::Header"* }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.745" }
%"struct.std::__1::__compressed_pair_elem.745" = type { %"struct.angle::PoolAllocator::AllocState"* }
%"class.angle::PackedEnumMap.749" = type { %"struct.std::__1::array.750" }
%"struct.std::__1::array.750" = type { [14 x %"class.rx::vk::PipelineBarrier"] }
%"class.rx::vk::PipelineBarrier" = type { i32, i32, i32, i32, %"class.std::__1::vector.751" }
%"class.std::__1::vector.751" = type { %"class.std::__1::__vector_base.752" }
%"class.std::__1::__vector_base.752" = type { %struct.VkImageMemoryBarrier*, %struct.VkImageMemoryBarrier*, %"class.std::__1::__compressed_pair.753" }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImage_T = type opaque
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %struct.VkImageMemoryBarrier* }
%"class.angle::BitSetT.758" = type { i16 }
%"class.rx::vk::priv::SecondaryCommandBuffer" = type { i8, %"class.std::__1::vector.759", %"class.angle::PoolAllocator"*, i8*, i64 }
%"class.std::__1::vector.759" = type { %"class.std::__1::__vector_base.760" }
%"class.std::__1::__vector_base.760" = type { %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"**, %"class.std::__1::__compressed_pair.761" }
%"struct.rx::vk::priv::CommandHeader" = type { i16, i16 }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"struct.rx::vk::priv::CommandHeader"** }
%"class.rx::vk::RenderPassDesc" = type { i8, %"class.angle::BitSetT.68", %"class.angle::BitSetT.68", %"struct.std::__1::array.766" }
%"struct.std::__1::array.766" = type { [9 x i8] }
%"class.rx::vk::AttachmentOpsArray" = type { %"struct.std::__1::array.767" }
%"struct.std::__1::array.767" = type { [10 x %"struct.rx::vk::PackedAttachmentOpsDesc"] }
%"struct.rx::vk::PackedAttachmentOpsDesc" = type { i32 }
%"class.rx::vk::Framebuffer" = type { %"class.rx::vk::WrappedObject.768" }
%"class.rx::vk::WrappedObject.768" = type { %struct.VkFramebuffer_T* }
%struct.VkFramebuffer_T = type opaque
%"class.rx::vk::PackedClearValuesArray" = type { %"struct.std::__1::array.769" }
%"struct.std::__1::array.769" = type { [10 x %union.VkClearValue] }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%"class.angle::FastIntegerMap" = type { %"class.angle::FastIntegerSet", %"class.std::__1::vector.777" }
%"class.std::__1::vector.777" = type { %"class.std::__1::__vector_base.778" }
%"class.std::__1::__vector_base.778" = type { i32*, i32*, %"class.std::__1::__compressed_pair.779" }
%"class.std::__1::__compressed_pair.779" = type { %"struct.std::__1::__compressed_pair_elem.780" }
%"struct.std::__1::__compressed_pair_elem.780" = type { i32* }
%"class.angle::FastIntegerSet" = type { %"class.std::__1::vector.770" }
%"class.std::__1::vector.770" = type { %"class.std::__1::__vector_base.771" }
%"class.std::__1::__vector_base.771" = type { %"class.angle::BitSetT.85"*, %"class.angle::BitSetT.85"*, %"class.std::__1::__compressed_pair.772" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"class.angle::BitSetT.85"* }
%"class.gl::LevelIndexWrapper" = type { i32 }
%"class.rx::vk::PackedAttachmentIndex" = type { i32 }
%"class.rx::vk::PackedImageAttachmentArray" = type { %"struct.std::__1::array.810" }
%"struct.std::__1::array.810" = type { [10 x %"class.rx::vk::ImageHelper"*] }
%"class.rx::vk::ImageHelper" = type <{ %"class.rx::vk::Resource", %"class.angle::Subject", %"class.rx::vk::Image", %"class.rx::vk::DeviceMemory", i32, i32, i32, i32, %struct.VkExtent3D, i8, [3 x i8], %"struct.rx::vk::Format"*, i32, %"class.rx::vk::ImageSerial", i32, i32, i32, i32, %"class.angle::BitSetT.785", [6 x i8], %"class.rx::vk::BindingPointer", i64, %"class.gl::LevelIndexWrapper", i32, i32, [4 x i8], %"class.rx::vk::DynamicBuffer", %"class.std::__1::vector.800", %struct.Optional.808, %"struct.std::__1::array.809", %"struct.std::__1::array.809", [4 x i8] }>
%"class.rx::vk::Image" = type { %"class.rx::vk::WrappedObject.784" }
%"class.rx::vk::WrappedObject.784" = type { %struct.VkImage_T* }
%"class.rx::vk::ImageSerial" = type { i32 }
%"class.angle::BitSetT.785" = type { i16 }
%"class.rx::vk::BindingPointer" = type { %"class.rx::vk::RefCounted.786"* }
%"class.rx::vk::RefCounted.786" = type opaque
%"class.rx::vk::DynamicBuffer" = type { i32, i8, i32, i64, %"class.std::__1::unique_ptr.787", i32, i32, i64, i64, i32, %"class.std::__1::vector.793", %"class.std::__1::vector.793" }
%"class.std::__1::unique_ptr.787" = type { %"class.std::__1::__compressed_pair.788" }
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"class.rx::vk::BufferHelper"* }
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"class.std::__1::unique_ptr.787"*, %"class.std::__1::unique_ptr.787"*, %"class.std::__1::__compressed_pair.795" }
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.796" }
%"struct.std::__1::__compressed_pair_elem.796" = type { %"class.std::__1::unique_ptr.787"* }
%"class.std::__1::vector.800" = type { %"class.std::__1::__vector_base.801" }
%"class.std::__1::__vector_base.801" = type { %"class.std::__1::vector.802"*, %"class.std::__1::vector.802"*, %"class.std::__1::__compressed_pair.803" }
%"class.std::__1::vector.802" = type opaque
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.std::__1::vector.802"* }
%struct.Optional.808 = type { i8, %"struct.rx::vk::ImageHelper::ClearUpdate" }
%"struct.rx::vk::ImageHelper::ClearUpdate" = type { i32, %union.VkClearValue, i32, i32, i32 }
%"struct.std::__1::array.809" = type { [16 x %"class.angle::BitSetT.68"] }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { %"class.rx::vk::CommandBufferHelper"** }
%"class.rx::vk::CommandProcessor" = type { %"class.rx::vk::Context", %"class.rx::vk::CommandQueueInterface", %"class.std::__1::queue", %"class.std::__1::mutex", %"class.std::__1::condition_variable", %"class.std::__1::condition_variable", i8, %"class.rx::vk::CommandPool", %"class.rx::vk::CommandQueue", %"class.std::__1::mutex", %"class.std::__1::mutex", %"class.std::__1::queue.848", %"class.std::__1::mutex", %"class.std::__1::condition_variable", %"class.std::__1::map.861", %"class.std::__1::thread" }
%"class.rx::vk::Context" = type { i32 (...)**, %"class.rx::RendererVk"* }
%"class.std::__1::queue" = type { %"class.std::__1::deque.816" }
%"class.std::__1::deque.816" = type { %"class.std::__1::__deque_base.817" }
%"class.std::__1::__deque_base.817" = type { %"struct.std::__1::__split_buffer.818", i64, %"class.std::__1::__compressed_pair.840" }
%"struct.std::__1::__split_buffer.818" = type { %"class.rx::vk::CommandProcessorTask"**, %"class.rx::vk::CommandProcessorTask"**, %"class.rx::vk::CommandProcessorTask"**, %"class.std::__1::__compressed_pair.835" }
%"class.rx::vk::CommandProcessorTask" = type <{ i32, [4 x i8], %"class.rx::vk::RenderPass"*, %"class.rx::vk::CommandBufferHelper"*, %"class.std::__1::vector.820", %"class.std::__1::vector", %"class.rx::vk::Semaphore"*, %"class.std::__1::vector.679", %"class.rx::Serial", %struct.VkPresentInfoKHR, %struct.VkSwapchainKHR_T*, %struct.VkSemaphore_T*, i32, [4 x i8], %struct.VkPresentRegionKHR, %struct.VkPresentRegionsKHR, %"class.std::__1::vector.828", %struct.VkCommandBuffer_T*, %"class.rx::vk::Fence"*, i8, [7 x i8] }>
%"class.rx::vk::RenderPass" = type { %"class.rx::vk::WrappedObject.819" }
%"class.rx::vk::WrappedObject.819" = type { %struct.VkRenderPass_T* }
%struct.VkRenderPass_T = type opaque
%"class.std::__1::vector.820" = type { %"class.std::__1::__vector_base.821" }
%"class.std::__1::__vector_base.821" = type { %struct.VkSemaphore_T**, %struct.VkSemaphore_T**, %"class.std::__1::__compressed_pair.822" }
%"class.std::__1::__compressed_pair.822" = type { %"struct.std::__1::__compressed_pair_elem.823" }
%"struct.std::__1::__compressed_pair_elem.823" = type { %struct.VkSemaphore_T** }
%"class.rx::vk::Semaphore" = type { %"class.rx::vk::WrappedObject.827" }
%"class.rx::vk::WrappedObject.827" = type { %struct.VkSemaphore_T* }
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%struct.VkSwapchainKHR_T = type opaque
%struct.VkSemaphore_T = type opaque
%struct.VkPresentRegionKHR = type { i32, %struct.VkRectLayerKHR* }
%struct.VkRectLayerKHR = type { %struct.VkOffset2D, %struct.VkExtent2D, i32 }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkPresentRegionsKHR = type { i32, i8*, i32, %struct.VkPresentRegionKHR* }
%"class.std::__1::vector.828" = type { %"class.std::__1::__vector_base.829" }
%"class.std::__1::__vector_base.829" = type { %struct.VkRectLayerKHR*, %struct.VkRectLayerKHR*, %"class.std::__1::__compressed_pair.830" }
%"class.std::__1::__compressed_pair.830" = type { %"struct.std::__1::__compressed_pair_elem.831" }
%"struct.std::__1::__compressed_pair_elem.831" = type { %struct.VkRectLayerKHR* }
%"class.std::__1::__compressed_pair.835" = type { %"struct.std::__1::__compressed_pair_elem.836" }
%"struct.std::__1::__compressed_pair_elem.836" = type { %"class.rx::vk::CommandProcessorTask"** }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"class.std::__1::queue.848" = type { %"class.std::__1::deque.849" }
%"class.std::__1::deque.849" = type { %"class.std::__1::__deque_base.850" }
%"class.std::__1::__deque_base.850" = type { %"struct.std::__1::__split_buffer.851", i64, %"class.std::__1::__compressed_pair.857" }
%"struct.std::__1::__split_buffer.851" = type { %"struct.rx::vk::Error"**, %"struct.rx::vk::Error"**, %"struct.rx::vk::Error"**, %"class.std::__1::__compressed_pair.852" }
%"struct.rx::vk::Error" = type { i32, i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.rx::vk::Error"** }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.844, %union.anon.846, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.844 = type { i64 }
%union.anon.846 = type { i64 }
%"class.std::__1::map.861" = type { %"class.std::__1::__tree.862" }
%"class.std::__1::__tree.862" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.863", %"class.std::__1::__compressed_pair.867" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"class.std::__1::thread" = type { i64 }
%"class.rx::vk::Allocator" = type { %"class.rx::vk::WrappedObject.872" }
%"class.rx::vk::WrappedObject.872" = type { %struct.VmaAllocator_T* }
%struct.VmaAllocator_T = type opaque
%"class.rx::SamplerCache" = type { %"class.rx::HasCacheStats", %"class.std::__1::unordered_map" }
%"class.rx::HasCacheStats" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.rx::CacheStats" = type { i64, i64 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.873", %"class.std::__1::__compressed_pair.881", %"class.std::__1::__compressed_pair.886", %"class.std::__1::__compressed_pair.888", [4 x i8] }>
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875", %"struct.std::__1::__compressed_pair_elem.876" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.876" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.877" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { float }
%"class.rx::SamplerYcbcrConversionCache" = type { %"class.rx::HasCacheStats.893", %"class.std::__1::unordered_map.894" }
%"class.rx::HasCacheStats.893" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.894" = type { %"class.std::__1::__hash_table.895" }
%"class.std::__1::__hash_table.895" = type <{ %"class.std::__1::unique_ptr.896", %"class.std::__1::__compressed_pair.906", %"class.std::__1::__compressed_pair.911", %"class.std::__1::__compressed_pair.915", [4 x i8] }>
%"class.std::__1::unique_ptr.896" = type { %"class.std::__1::__compressed_pair.897" }
%"class.std::__1::__compressed_pair.897" = type { %"struct.std::__1::__compressed_pair_elem.898", %"struct.std::__1::__compressed_pair_elem.900" }
%"struct.std::__1::__compressed_pair_elem.898" = type { %"struct.std::__1::__hash_node_base.899"** }
%"struct.std::__1::__hash_node_base.899" = type { %"struct.std::__1::__hash_node_base.899"* }
%"struct.std::__1::__compressed_pair_elem.900" = type { %"class.std::__1::__bucket_list_deallocator.901" }
%"class.std::__1::__bucket_list_deallocator.901" = type { %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.907" }
%"struct.std::__1::__compressed_pair_elem.907" = type { %"struct.std::__1::__hash_node_base.899" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"class.std::__1::__compressed_pair.915" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"class.rx::vk::ActiveHandleCounter" = type { %"class.angle::PackedEnumMap.921", %"class.angle::PackedEnumMap.921" }
%"class.angle::PackedEnumMap.921" = type { %"struct.std::__1::array.922" }
%"struct.std::__1::array.922" = type { [24 x i32] }
%"class.rx::vk::ResourceSerialFactory" = type { %"struct.std::__1::atomic.923" }
%"struct.std::__1::atomic.923" = type { %"struct.std::__1::__atomic_base.924" }
%"struct.std::__1::__atomic_base.924" = type { %"struct.std::__1::__atomic_base.925" }
%"struct.std::__1::__atomic_base.925" = type { %"struct.std::__1::__cxx_atomic_impl.926" }
%"struct.std::__1::__cxx_atomic_impl.926" = type { %"struct.std::__1::__cxx_atomic_base_impl.927" }
%"struct.std::__1::__cxx_atomic_base_impl.927" = type { i32 }
%"class.rx::vk::MemoryReport" = type { %"class.std::__1::mutex", i64, i64, %"class.absl::flat_hash_map.928", i64, i64, %"class.absl::flat_hash_map.943" }
%"class.absl::flat_hash_map.928" = type { %"class.absl::container_internal::raw_hash_map.929" }
%"class.absl::container_internal::raw_hash_map.929" = type { %"class.absl::container_internal::raw_hash_set.930" }
%"class.absl::container_internal::raw_hash_set.930" = type { i8*, %"union.absl::container_internal::map_slot_type.931"*, i64, i64, %"class.absl::container_internal::CompressedTuple.932" }
%"union.absl::container_internal::map_slot_type.931" = type opaque
%"class.absl::container_internal::CompressedTuple.932" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.933" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.933" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::flat_hash_map.943" = type { %"class.absl::container_internal::raw_hash_map.944" }
%"class.absl::container_internal::raw_hash_map.944" = type { %"class.absl::container_internal::raw_hash_set.945" }
%"class.absl::container_internal::raw_hash_set.945" = type { i8*, %"union.absl::container_internal::map_slot_type.946"*, i64, i64, %"class.absl::container_internal::CompressedTuple.947" }
%"union.absl::container_internal::map_slot_type.946" = type opaque
%"class.absl::container_internal::CompressedTuple.947" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.948" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.948" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.angle::PackedEnumMap.956" = type { %"struct.std::__1::array.957" }
%"struct.std::__1::array.957" = type { [12 x %"class.rx::CacheStats"] }
%"class.std::__1::shared_ptr.958" = type { %"class.rx::WaitableCompressEvent"*, %"class.std::__1::__shared_weak_count"* }
%"class.rx::WaitableCompressEvent" = type { i32 (...)**, %"class.std::__1::shared_ptr.959" }
%"class.std::__1::shared_ptr.959" = type { %"class.angle::WaitableEvent"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WaitableEvent" = type { i32 (...)**, %"class.std::__1::shared_ptr.608" }
%"class.rx::ContextVk" = type { %"class.rx::ContextImpl", %"class.rx::vk::Context", %"class.rx::MultisampleTextureInitializer", %"struct.std::__1::array.960", %"struct.std::__1::array.961", %"class.rx::vk::priv::SecondaryCommandBuffer"*, %"class.rx::vk::PipelineHelper"*, %"class.rx::vk::ObjectAndSerial.971"*, i8, %"class.rx::WindowSurfaceVk"*, i32, i32, %"class.std::__1::unique_ptr.972", %"class.angle::BitSetT.964", %"class.angle::PackedEnumMap.978", %"class.angle::PackedEnumMap.995", %"class.angle::PackedEnumMap.1012", %"class.angle::BitSetT.83", %"class.angle::BitSetT.83", %"class.angle::BitSetT.83", %"class.angle::BitSetT.83", %"class.angle::BitSetT.83", %"class.angle::BitSetT.83", %"class.rx::VertexArrayVk"*, %"class.rx::FramebufferVk"*, %"class.rx::ProgramVk"*, %"class.rx::ProgramPipelineVk"*, %"class.rx::ProgramExecutableVk"*, i8*, i64, i64, %"class.angle::PackedEnumMap.1165", i32, i32, %union.VkClearValue, %union.VkClearValue, i64, %"class.rx::IncompleteTextureSet", i8, i8, i8, i8, i8, %"class.angle::PackedEnumMap.1169", %"struct.std::__1::array.1180", %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc", %"struct.std::__1::array.1185", %"class.angle::BitSetT.83", %"struct.std::__1::array.1186", %"class.rx::vk::CommandPool", %"class.std::__1::vector.679", %"class.rx::RenderPassCache", %"class.rx::vk::CommandBufferHelper"*, %"class.rx::vk::CommandBufferHelper"*, %"class.angle::FastUnorderedSet", %"class.rx::vk::ShaderLibrary", %"class.rx::UtilsVk", i8, [7 x i8], %"class.rx::vk::DynamicQueryPool", %"class.std::__1::vector.1260", %"class.std::__1::vector.1268", i8, i8, i8, %"class.std::__1::vector.820", %"class.std::__1::vector", %"struct.rx::ContextVk::GpuClockSyncInfo", i64, %"struct.rx::vk::PerfCounters", %"struct.rx::ContextVkPerfCounters", %"struct.rx::ContextVkPerfCounters", %"class.angle::BitSetT.85", %"class.rx::vk::ResourceUseList", i8, %"class.std::__1::vector.1283", %"class.std::__1::vector.1290", %"class.std::__1::vector.1297", %"class.rx::ShareGroupVk"*, %"class.rx::vk::BufferHelper", %"class.rx::vk::DynamicBuffer", %"class.rx::vk::DynamicBuffer", %"class.std::__1::vector.46", %"class.std::__1::vector.46" }
%"class.rx::MultisampleTextureInitializer" = type { i32 (...)** }
%"struct.std::__1::array.960" = type { [16 x { i64, i64 }] }
%"struct.std::__1::array.961" = type { [16 x { i64, i64 }] }
%"class.rx::vk::PipelineHelper" = type { %"class.std::__1::vector.962", %"class.rx::Serial", %"class.rx::vk::Pipeline" }
%"class.std::__1::vector.962" = type { %"class.std::__1::__vector_base.963" }
%"class.std::__1::__vector_base.963" = type { %"struct.rx::vk::GraphicsPipelineTransition"*, %"struct.rx::vk::GraphicsPipelineTransition"*, %"class.std::__1::__compressed_pair.965" }
%"struct.rx::vk::GraphicsPipelineTransition" = type { %"class.angle::BitSetT.964", %"class.rx::vk::GraphicsPipelineDesc"*, %"class.rx::vk::PipelineHelper"* }
%"class.rx::vk::GraphicsPipelineDesc" = type { %"struct.rx::vk::VertexInputAttributes", %"class.rx::vk::RenderPassDesc", %"struct.rx::vk::PackedRasterizationAndMultisampleStateInfo", %"struct.rx::vk::PackedDepthStencilStateInfo", %"struct.rx::vk::PackedInputAssemblyAndColorBlendStateInfo", %struct.VkViewport, %"struct.rx::vk::PackedScissor", %"struct.rx::vk::PackedExtent" }
%"struct.rx::vk::VertexInputAttributes" = type { [16 x %"struct.rx::vk::PackedAttribDesc"] }
%"struct.rx::vk::PackedAttribDesc" = type { i8, i8, i16, i16 }
%"struct.rx::vk::PackedRasterizationAndMultisampleStateInfo" = type { %"struct.rx::vk::RasterizationStateBits", float, [2 x i32], float, float, float, float }
%"struct.rx::vk::RasterizationStateBits" = type { i32 }
%"struct.rx::vk::PackedDepthStencilStateInfo" = type { %"struct.rx::vk::DepthStencilEnableFlags", i8, i8, %"struct.rx::vk::DepthCompareOpAndSurfaceRotation", float, float, %"struct.rx::vk::PackedStencilOpState", %"struct.rx::vk::PackedStencilOpState" }
%"struct.rx::vk::DepthStencilEnableFlags" = type { i8 }
%"struct.rx::vk::DepthCompareOpAndSurfaceRotation" = type { i8 }
%"struct.rx::vk::PackedStencilOpState" = type { %"struct.rx::vk::StencilOps", i8, i8 }
%"struct.rx::vk::StencilOps" = type { i16 }
%"struct.rx::vk::PackedInputAssemblyAndColorBlendStateInfo" = type { [4 x i8], [8 x %"struct.rx::vk::PackedColorBlendAttachmentState"], [4 x float], %"struct.rx::vk::LogicOpState", i8, %"struct.rx::vk::PrimitiveState" }
%"struct.rx::vk::PackedColorBlendAttachmentState" = type { i32 }
%"struct.rx::vk::LogicOpState" = type { i8 }
%"struct.rx::vk::PrimitiveState" = type { i16 }
%struct.VkViewport = type { float, float, float, float, float, float }
%"struct.rx::vk::PackedScissor" = type { i16, i16, i16, i16 }
%"struct.rx::vk::PackedExtent" = type { i16, i16 }
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.966" }
%"struct.std::__1::__compressed_pair_elem.966" = type { %"struct.rx::vk::GraphicsPipelineTransition"* }
%"class.rx::vk::Pipeline" = type { %"class.rx::vk::WrappedObject.970" }
%"class.rx::vk::WrappedObject.970" = type { %struct.VkPipeline_T* }
%struct.VkPipeline_T = type opaque
%"class.rx::vk::ObjectAndSerial.971" = type { [8 x i8], %"class.rx::vk::Pipeline", %"class.rx::Serial" }
%"class.rx::WindowSurfaceVk" = type opaque
%"class.std::__1::unique_ptr.972" = type { %"class.std::__1::__compressed_pair.973" }
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.974" }
%"struct.std::__1::__compressed_pair_elem.974" = type { %"class.rx::vk::GraphicsPipelineDesc"* }
%"class.angle::BitSetT.964" = type { i64 }
%"class.angle::PackedEnumMap.978" = type { %"struct.std::__1::array.979" }
%"struct.std::__1::array.979" = type { [2 x %"class.rx::vk::DynamicDescriptorPool"] }
%"class.rx::vk::DynamicDescriptorPool" = type { i64, %"class.std::__1::vector.980", %"class.std::__1::vector.988", %struct.VkDescriptorSetLayout_T* }
%"class.std::__1::vector.980" = type { %"class.std::__1::__vector_base.981" }
%"class.std::__1::__vector_base.981" = type { %"class.rx::vk::RefCounted.982"**, %"class.rx::vk::RefCounted.982"**, %"class.std::__1::__compressed_pair.983" }
%"class.rx::vk::RefCounted.982" = type opaque
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"class.rx::vk::RefCounted.982"** }
%"class.std::__1::vector.988" = type { %"class.std::__1::__vector_base.989" }
%"class.std::__1::__vector_base.989" = type { %struct.VkDescriptorPoolSize*, %struct.VkDescriptorPoolSize*, %"class.std::__1::__compressed_pair.990" }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.991" }
%"struct.std::__1::__compressed_pair_elem.991" = type { %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorSetLayout_T = type opaque
%"class.angle::PackedEnumMap.995" = type { %"struct.std::__1::array.996" }
%"struct.std::__1::array.996" = type { [7 x %"class.rx::vk::DynamicQueryPool"] }
%"class.angle::PackedEnumMap.1012" = type { %"struct.std::__1::array.1013" }
%"struct.std::__1::array.1013" = type { [7 x %"class.rx::QueryVk"*] }
%"class.rx::QueryVk" = type <{ %"class.rx::QueryImpl.base", [7 x i8], %"class.rx::vk::Shared.1014", %"class.std::__1::vector.1016", %"class.rx::vk::QueryHelper", i64, i64, i8, [7 x i8] }>
%"class.rx::QueryImpl.base" = type <{ i32 (...)**, i8 }>
%"class.rx::vk::Shared.1014" = type { %"class.rx::vk::RefCounted.1015"* }
%"class.rx::vk::RefCounted.1015" = type { i32, [4 x i8], %"class.rx::vk::QueryHelper" }
%"class.std::__1::vector.1016" = type { %"class.std::__1::__vector_base.1017" }
%"class.std::__1::__vector_base.1017" = type { %"class.rx::vk::Shared.1014"*, %"class.rx::vk::Shared.1014"*, %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"class.rx::vk::Shared.1014"* }
%"class.rx::vk::QueryHelper" = type <{ %"class.rx::vk::Resource", %"class.rx::vk::DynamicQueryPool"*, i64, i32, [4 x i8] }>
%"class.rx::VertexArrayVk" = type opaque
%"class.rx::FramebufferVk" = type <{ %"class.rx::FramebufferImpl", %"class.rx::WindowSurfaceVk"*, %"class.rx::vk::RenderPassDesc", [4 x i8], %"class.rx::vk::FramebufferHelper"*, %"class.rx::RenderTargetCache", i64, %"class.rx::vk::DynamicBuffer", %"class.angle::BitSetT.68", [3 x i8], %"class.rx::vk::FramebufferDesc", %"class.rx::FramebufferCache", %"class.rx::vk::ClearValuesArray", i8, [7 x i8] }>
%"class.rx::vk::FramebufferHelper" = type { %"class.rx::vk::Resource", %"class.rx::vk::Framebuffer" }
%"class.rx::RenderTargetCache" = type { %"class.rx::RenderTargetVk"*, %"struct.std::__1::array.1023", %"class.rx::RenderTargetVk"* }
%"struct.std::__1::array.1023" = type { [10 x %"class.rx::RenderTargetVk"*] }
%"class.rx::RenderTargetVk" = type opaque
%"class.rx::vk::FramebufferDesc" = type { i32, %"struct.std::__1::array.1024" }
%"struct.std::__1::array.1024" = type { [18 x %"struct.rx::vk::ImageOrBufferViewSubresourceSerial"] }
%"struct.rx::vk::ImageOrBufferViewSubresourceSerial" = type { %"class.rx::vk::ImageOrBufferViewSerial", %"struct.rx::vk::ImageSubresourceRange" }
%"class.rx::vk::ImageOrBufferViewSerial" = type { i32 }
%"struct.rx::vk::ImageSubresourceRange" = type { i32 }
%"class.rx::FramebufferCache" = type { %"class.absl::flat_hash_map.1025", %"class.rx::CacheStats" }
%"class.absl::flat_hash_map.1025" = type { %"class.absl::container_internal::raw_hash_map.1026" }
%"class.absl::container_internal::raw_hash_map.1026" = type { %"class.absl::container_internal::raw_hash_set.1027" }
%"class.absl::container_internal::raw_hash_set.1027" = type { i8*, %"union.absl::container_internal::map_slot_type.1028"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1029" }
%"union.absl::container_internal::map_slot_type.1028" = type { %"struct.std::__1::pair.1423" }
%"struct.std::__1::pair.1423" = type { %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferHelper" }
%"class.absl::container_internal::CompressedTuple.1029" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1030" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1030" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.rx::vk::ClearValuesArray" = type { %"struct.std::__1::array.769", %"class.angle::BitSetT.1040" }
%"class.angle::BitSetT.1040" = type { i64 }
%"class.rx::ProgramVk" = type { %"class.rx::ProgramImpl", %"class.angle::PackedEnumMap.1041", %"class.angle::BitSetT.62", [7 x i8], %"class.rx::ShaderInfo", %"struct.rx::GlslangProgramInterfaceInfo", %"class.rx::ProgramExecutableVk" }
%"class.angle::PackedEnumMap.1041" = type { %"struct.std::__1::array.1042" }
%"struct.std::__1::array.1042" = type { [6 x %"struct.rx::DefaultUniformBlock"] }
%"struct.rx::DefaultUniformBlock" = type { [8 x i8], %"class.angle::MemoryBuffer", %"class.std::__1::vector.1043" }
%"class.std::__1::vector.1043" = type { %"class.std::__1::__vector_base.1044" }
%"class.std::__1::__vector_base.1044" = type { %"struct.sh::BlockMemberInfo"*, %"struct.sh::BlockMemberInfo"*, %"class.std::__1::__compressed_pair.1045" }
%"class.std::__1::__compressed_pair.1045" = type { %"struct.std::__1::__compressed_pair_elem.1046" }
%"struct.std::__1::__compressed_pair_elem.1046" = type { %"struct.sh::BlockMemberInfo"* }
%"class.rx::ShaderInfo" = type <{ %"class.angle::PackedEnumMap.1050", i8, [7 x i8] }>
%"class.angle::PackedEnumMap.1050" = type { %"struct.std::__1::array.1051" }
%"struct.std::__1::array.1051" = type { [6 x %"class.std::__1::vector"] }
%"struct.rx::GlslangProgramInterfaceInfo" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.rx::ProgramExecutableVk" = type { i32 (...)**, %"class.angle::PackedEnumMap.1052", %"class.angle::PackedEnumMap.1052", i32, %"class.rx::vk::BufferSerial", %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache.1070", %"class.rx::DescriptorSetCache.1087", %"class.rx::vk::BindingPointer.1104", %"class.angle::PackedEnumMap.1106", %"class.angle::PackedEnumMap.1110", %"class.angle::PackedEnumMap.1113", i32, %"class.angle::FixedVector.1115", %"class.std::__1::vector", %"class.rx::ShaderInterfaceVariableInfoMap", [64 x %"class.rx::ProgramInfo"], %"class.rx::ProgramInfo", %"struct.rx::ProgramTransformOptions", %"class.rx::ProgramVk"*, %"class.rx::ProgramPipelineVk"*, %"struct.rx::ProgramExecutablePerfCounters", %"struct.rx::ProgramExecutablePerfCounters" }
%"class.angle::PackedEnumMap.1052" = type { %"struct.std::__1::array.1053" }
%"struct.std::__1::array.1053" = type { [4 x %struct.VkDescriptorSet_T*] }
%struct.VkDescriptorSet_T = type opaque
%"class.rx::DescriptorSetCache" = type { %"class.rx::HasCacheStats.1054", %"class.absl::flat_hash_map.1055" }
%"class.rx::HasCacheStats.1054" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.absl::flat_hash_map.1055" = type { %"class.absl::container_internal::raw_hash_map.1056" }
%"class.absl::container_internal::raw_hash_map.1056" = type { %"class.absl::container_internal::raw_hash_set.1057" }
%"class.absl::container_internal::raw_hash_set.1057" = type { i8*, %"union.absl::container_internal::map_slot_type.1058"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1059" }
%"union.absl::container_internal::map_slot_type.1058" = type opaque
%"class.absl::container_internal::CompressedTuple.1059" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1060" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1060" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.rx::DescriptorSetCache.1070" = type { %"class.rx::HasCacheStats.1071", %"class.absl::flat_hash_map.1072" }
%"class.rx::HasCacheStats.1071" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.absl::flat_hash_map.1072" = type { %"class.absl::container_internal::raw_hash_map.1073" }
%"class.absl::container_internal::raw_hash_map.1073" = type { %"class.absl::container_internal::raw_hash_set.1074" }
%"class.absl::container_internal::raw_hash_set.1074" = type { i8*, %"union.absl::container_internal::map_slot_type.1075"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1076" }
%"union.absl::container_internal::map_slot_type.1075" = type opaque
%"class.absl::container_internal::CompressedTuple.1076" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1077" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1077" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.rx::DescriptorSetCache.1087" = type { %"class.rx::HasCacheStats.1088", %"class.absl::flat_hash_map.1089" }
%"class.rx::HasCacheStats.1088" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.absl::flat_hash_map.1089" = type { %"class.absl::container_internal::raw_hash_map.1090" }
%"class.absl::container_internal::raw_hash_map.1090" = type { %"class.absl::container_internal::raw_hash_set.1091" }
%"class.absl::container_internal::raw_hash_set.1091" = type { i8*, %"union.absl::container_internal::map_slot_type.1092"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1093" }
%"union.absl::container_internal::map_slot_type.1092" = type opaque
%"class.absl::container_internal::CompressedTuple.1093" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1094" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1094" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.rx::vk::BindingPointer.1104" = type { %"class.rx::vk::RefCounted.1105"* }
%"class.rx::vk::RefCounted.1105" = type { i32, %"class.rx::vk::PipelineLayout" }
%"class.rx::vk::PipelineLayout" = type { %"class.rx::vk::WrappedObject.1425" }
%"class.rx::vk::WrappedObject.1425" = type { %struct.VkPipelineLayout_T* }
%struct.VkPipelineLayout_T = type opaque
%"class.angle::PackedEnumMap.1106" = type { %"struct.std::__1::array.1107" }
%"struct.std::__1::array.1107" = type { [4 x %"class.rx::vk::BindingPointer.1108"] }
%"class.rx::vk::BindingPointer.1108" = type { %"class.rx::vk::RefCounted.1109"* }
%"class.rx::vk::RefCounted.1109" = type opaque
%"class.angle::PackedEnumMap.1110" = type { %"struct.std::__1::array.1111" }
%"struct.std::__1::array.1111" = type { [4 x %"class.rx::vk::BindingPointer.1112"] }
%"class.rx::vk::BindingPointer.1112" = type { %"class.rx::vk::RefCounted.982"* }
%"class.angle::PackedEnumMap.1113" = type { %"struct.std::__1::array.1114" }
%"struct.std::__1::array.1114" = type { [4 x %"class.rx::vk::DynamicDescriptorPool"] }
%"class.angle::FixedVector.1115" = type { %"struct.std::__1::array.1116", i64 }
%"struct.std::__1::array.1116" = type { [6 x i32] }
%"class.rx::ShaderInterfaceVariableInfoMap" = type { %"class.angle::PackedEnumMap.1117" }
%"class.angle::PackedEnumMap.1117" = type { %"struct.std::__1::array.1118" }
%"struct.std::__1::array.1118" = type { [6 x %"class.absl::flat_hash_map.1119"] }
%"class.absl::flat_hash_map.1119" = type { %"class.absl::container_internal::raw_hash_map.1120" }
%"class.absl::container_internal::raw_hash_map.1120" = type { %"class.absl::container_internal::raw_hash_set.1121" }
%"class.absl::container_internal::raw_hash_set.1121" = type { i8*, %"union.absl::container_internal::map_slot_type.1122"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1123" }
%"union.absl::container_internal::map_slot_type.1122" = type opaque
%"class.absl::container_internal::CompressedTuple.1123" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1124" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1124" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.rx::ProgramInfo" = type { [8 x i8], %"class.rx::vk::ShaderProgramHelper", %"class.angle::PackedEnumMap.1162" }
%"class.rx::vk::ShaderProgramHelper" = type { [8 x i8], %"class.angle::PackedEnumMap.1128", %"class.rx::GraphicsPipelineCache", %"class.rx::vk::ObjectAndSerial.971", %"struct.rx::vk::SpecializationConstants" }
%"class.angle::PackedEnumMap.1128" = type { %"struct.std::__1::array.1129" }
%"struct.std::__1::array.1129" = type { [6 x %"class.rx::vk::BindingPointer.1130"] }
%"class.rx::vk::BindingPointer.1130" = type { %"class.rx::vk::RefCounted.1131"* }
%"class.rx::vk::RefCounted.1131" = type { i32, %"class.rx::vk::ObjectAndSerial.1132" }
%"class.rx::vk::ObjectAndSerial.1132" = type { [8 x i8], %"class.rx::vk::ShaderModule", %"class.rx::Serial" }
%"class.rx::vk::ShaderModule" = type { %"class.rx::vk::WrappedObject.1133" }
%"class.rx::vk::WrappedObject.1133" = type { %struct.VkShaderModule_T* }
%struct.VkShaderModule_T = type opaque
%"class.rx::GraphicsPipelineCache" = type { %"class.rx::HasCacheStats.1134", %"class.std::__1::unordered_map.1135" }
%"class.rx::HasCacheStats.1134" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1135" = type { %"class.std::__1::__hash_table.1136" }
%"class.std::__1::__hash_table.1136" = type <{ %"class.std::__1::unique_ptr.1137", %"class.std::__1::__compressed_pair.1147", %"class.std::__1::__compressed_pair.1152", %"class.std::__1::__compressed_pair.1156", [4 x i8] }>
%"class.std::__1::unique_ptr.1137" = type { %"class.std::__1::__compressed_pair.1138" }
%"class.std::__1::__compressed_pair.1138" = type { %"struct.std::__1::__compressed_pair_elem.1139", %"struct.std::__1::__compressed_pair_elem.1141" }
%"struct.std::__1::__compressed_pair_elem.1139" = type { %"struct.std::__1::__hash_node_base.1140"** }
%"struct.std::__1::__hash_node_base.1140" = type { %"struct.std::__1::__hash_node_base.1140"* }
%"struct.std::__1::__compressed_pair_elem.1141" = type { %"class.std::__1::__bucket_list_deallocator.1142" }
%"class.std::__1::__bucket_list_deallocator.1142" = type { %"class.std::__1::__compressed_pair.1143" }
%"class.std::__1::__compressed_pair.1143" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.1148" }
%"struct.std::__1::__compressed_pair_elem.1148" = type { %"struct.std::__1::__hash_node_base.1140" }
%"class.std::__1::__compressed_pair.1152" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"class.std::__1::__compressed_pair.1156" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.rx::vk::SpecializationConstants" = type { i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.1162" = type { %"struct.std::__1::array.1163" }
%"struct.std::__1::array.1163" = type { [6 x %"class.rx::vk::RefCounted.1131"] }
%"struct.rx::ProgramTransformOptions" = type { i8 }
%"struct.rx::ProgramExecutablePerfCounters" = type { %"class.angle::PackedEnumMap.1164", %"class.angle::PackedEnumMap.1164", %"class.angle::PackedEnumMap.1164" }
%"class.angle::PackedEnumMap.1164" = type { %"struct.std::__1::array.653" }
%"class.rx::ProgramPipelineVk" = type opaque
%"class.angle::PackedEnumMap.1165" = type { %"struct.std::__1::array.1166" }
%"struct.std::__1::array.1166" = type { [3 x i32] }
%"class.rx::IncompleteTextureSet" = type { %"class.angle::PackedEnumMap.1167", %"class.gl::Buffer"* }
%"class.angle::PackedEnumMap.1167" = type { %"struct.std::__1::array.1168" }
%"struct.std::__1::array.1168" = type { [4 x %"class.angle::PackedEnumMap.544"] }
%"class.angle::PackedEnumMap.1169" = type { %"struct.std::__1::array.1170" }
%"struct.std::__1::array.1170" = type { [2 x %"struct.rx::ContextVk::DriverUniformsDescriptorSet"] }
%"struct.rx::ContextVk::DriverUniformsDescriptorSet" = type { %"class.rx::vk::DynamicBuffer", %struct.VkDescriptorSet_T*, i32, %"class.rx::vk::BindingPointer.1108", %"class.rx::vk::BindingPointer.1112", %"class.rx::DriverUniformsDescriptorSetCache" }
%"class.rx::DriverUniformsDescriptorSetCache" = type { %"class.rx::HasCacheStats.1171", %"class.angle::FastIntegerMap.1172" }
%"class.rx::HasCacheStats.1171" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.angle::FastIntegerMap.1172" = type { %"class.angle::FastIntegerSet", %"class.std::__1::vector.1173" }
%"class.std::__1::vector.1173" = type { %"class.std::__1::__vector_base.1174" }
%"class.std::__1::__vector_base.1174" = type { %struct.VkDescriptorSet_T**, %struct.VkDescriptorSet_T**, %"class.std::__1::__compressed_pair.1175" }
%"class.std::__1::__compressed_pair.1175" = type { %"struct.std::__1::__compressed_pair_elem.1176" }
%"struct.std::__1::__compressed_pair_elem.1176" = type { %struct.VkDescriptorSet_T** }
%"struct.std::__1::array.1180" = type { [96 x %"struct.rx::vk::TextureUnit"] }
%"struct.rx::vk::TextureUnit" = type { %"class.rx::TextureVk"*, %"class.rx::vk::SamplerHelper"*, i32 }
%"class.rx::TextureVk" = type opaque
%"class.rx::vk::SamplerHelper" = type <{ [8 x i8], %"class.rx::vk::Sampler", %"class.rx::vk::SamplerSerial", [4 x i8] }>
%"class.rx::vk::Sampler" = type { %"class.rx::vk::WrappedObject.1181" }
%"class.rx::vk::WrappedObject.1181" = type { %struct.VkSampler_T* }
%struct.VkSampler_T = type opaque
%"class.rx::vk::SamplerSerial" = type { i32 }
%"class.rx::vk::TextureDescriptorDesc" = type { i32, %"struct.std::__1::array.1182" }
%"struct.std::__1::array.1182" = type { [96 x %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"] }
%"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials" = type { %"struct.rx::vk::ImageOrBufferViewSubresourceSerial", %"class.rx::vk::SamplerSerial" }
%"class.rx::vk::ShaderBuffersDescriptorDesc" = type { %"class.angle::FastVector.1183" }
%"class.angle::FastVector.1183" = type { %"struct.std::__1::array.1184", i32*, i64, i64 }
%"struct.std::__1::array.1184" = type { [32 x i32] }
%"struct.std::__1::array.1185" = type { [96 x %"class.rx::TextureVk"*] }
%"struct.std::__1::array.1186" = type { [16 x %"class.rx::vk::DynamicBuffer"] }
%"class.rx::RenderPassCache" = type { %"class.absl::flat_hash_map.1187", %"class.rx::CacheStats", %"class.rx::CacheStats" }
%"class.absl::flat_hash_map.1187" = type { %"class.absl::container_internal::raw_hash_map.1188" }
%"class.absl::container_internal::raw_hash_map.1188" = type { %"class.absl::container_internal::raw_hash_set.1189" }
%"class.absl::container_internal::raw_hash_set.1189" = type { i8*, %"union.absl::container_internal::map_slot_type.1190"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1191" }
%"union.absl::container_internal::map_slot_type.1190" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.rx::vk::RenderPassDesc", %"class.absl::flat_hash_map.1391" }
%"class.absl::flat_hash_map.1391" = type { %"class.absl::container_internal::raw_hash_map.1392" }
%"class.absl::container_internal::raw_hash_map.1392" = type { %"class.absl::container_internal::raw_hash_set.1393" }
%"class.absl::container_internal::raw_hash_set.1393" = type { i8*, %"union.absl::container_internal::map_slot_type.1394"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1395" }
%"union.absl::container_internal::map_slot_type.1394" = type { %"struct.std::__1::pair.1407" }
%"struct.std::__1::pair.1407" = type { %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::RenderPassHelper" }
%"class.rx::vk::RenderPassHelper" = type <{ [8 x i8], %"class.rx::vk::RenderPass", %"struct.rx::vk::RenderPassPerfCounters", [3 x i8] }>
%"struct.rx::vk::RenderPassPerfCounters" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.absl::container_internal::CompressedTuple.1395" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1396" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1396" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::container_internal::CompressedTuple.1191" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1192" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1192" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.angle::FastUnorderedSet" = type { %"class.angle::FastVector.1202" }
%"class.angle::FastVector.1202" = type { %"struct.std::__1::array.1203", %"class.rx::vk::BufferHelper"**, i64, i64 }
%"struct.std::__1::array.1203" = type { [4 x %"class.rx::vk::BufferHelper"*] }
%"class.rx::vk::ShaderLibrary" = type { [8 x i8], [24 x %"class.rx::vk::RefCounted.1131"], [4 x %"class.rx::vk::RefCounted.1131"], [4 x %"class.rx::vk::RefCounted.1131"], [3 x %"class.rx::vk::RefCounted.1131"], [1 x %"class.rx::vk::RefCounted.1131"], [8 x %"class.rx::vk::RefCounted.1131"], [1 x %"class.rx::vk::RefCounted.1131"], [10 x %"class.rx::vk::RefCounted.1131"], [48 x %"class.rx::vk::RefCounted.1131"], [43 x %"class.rx::vk::RefCounted.1131"], [6 x %"class.rx::vk::RefCounted.1131"], [2 x %"class.rx::vk::RefCounted.1131"] }
%"class.rx::UtilsVk" = type { [8 x i8], %"class.angle::PackedEnumMap.1204", %"class.angle::PackedEnumMap.1206", %"class.angle::PackedEnumMap.1208", [4 x %"class.rx::vk::ShaderProgramHelper"], [3 x %"class.rx::vk::ShaderProgramHelper"], [1 x %"class.rx::vk::ShaderProgramHelper"], [8 x %"class.rx::vk::ShaderProgramHelper"], %"class.rx::vk::ShaderProgramHelper", [48 x %"class.rx::vk::ShaderProgramHelper"], [43 x %"class.rx::vk::ShaderProgramHelper"], [24 x %"class.rx::vk::ShaderProgramHelper"], [4 x %"class.rx::vk::ShaderProgramHelper"], [6 x %"class.rx::vk::ShaderProgramHelper"], [2 x %"class.rx::vk::ShaderProgramHelper"], [10 x %"class.rx::vk::ShaderProgramHelper"], %"class.std::__1::unordered_map.1210", %"class.std::__1::unordered_map.1236", %"class.rx::vk::Sampler", %"class.rx::vk::Sampler", %"struct.rx::InternalShaderPerfCounters", %"struct.rx::InternalShaderPerfCounters" }
%"class.angle::PackedEnumMap.1204" = type { %"struct.std::__1::array.1205" }
%"struct.std::__1::array.1205" = type { [22 x %"class.angle::PackedEnumMap.1106"] }
%"class.angle::PackedEnumMap.1206" = type { %"struct.std::__1::array.1207" }
%"struct.std::__1::array.1207" = type { [22 x %"class.rx::vk::BindingPointer.1104"] }
%"class.angle::PackedEnumMap.1208" = type { %"struct.std::__1::array.1209" }
%"struct.std::__1::array.1209" = type { [22 x %"class.rx::vk::DynamicDescriptorPool"] }
%"class.std::__1::unordered_map.1210" = type { %"class.std::__1::__hash_table.1211" }
%"class.std::__1::__hash_table.1211" = type <{ %"class.std::__1::unique_ptr.1212", %"class.std::__1::__compressed_pair.1222", %"class.std::__1::__compressed_pair.1227", %"class.std::__1::__compressed_pair.1232", [4 x i8] }>
%"class.std::__1::unique_ptr.1212" = type { %"class.std::__1::__compressed_pair.1213" }
%"class.std::__1::__compressed_pair.1213" = type { %"struct.std::__1::__compressed_pair_elem.1214", %"struct.std::__1::__compressed_pair_elem.1216" }
%"struct.std::__1::__compressed_pair_elem.1214" = type { %"struct.std::__1::__hash_node_base.1215"** }
%"struct.std::__1::__hash_node_base.1215" = type { %"struct.std::__1::__hash_node_base.1215"* }
%"struct.std::__1::__compressed_pair_elem.1216" = type { %"class.std::__1::__bucket_list_deallocator.1217" }
%"class.std::__1::__bucket_list_deallocator.1217" = type { %"class.std::__1::__compressed_pair.1218" }
%"class.std::__1::__compressed_pair.1218" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"class.std::__1::__compressed_pair.1222" = type { %"struct.std::__1::__compressed_pair_elem.1223" }
%"struct.std::__1::__compressed_pair_elem.1223" = type { %"struct.std::__1::__hash_node_base.1215" }
%"class.std::__1::__compressed_pair.1227" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"class.std::__1::__compressed_pair.1232" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"class.std::__1::unordered_map.1236" = type { %"class.std::__1::__hash_table.1237" }
%"class.std::__1::__hash_table.1237" = type <{ %"class.std::__1::unique_ptr.1238", %"class.std::__1::__compressed_pair.1248", %"class.std::__1::__compressed_pair.1253", %"class.std::__1::__compressed_pair.1256", [4 x i8] }>
%"class.std::__1::unique_ptr.1238" = type { %"class.std::__1::__compressed_pair.1239" }
%"class.std::__1::__compressed_pair.1239" = type { %"struct.std::__1::__compressed_pair_elem.1240", %"struct.std::__1::__compressed_pair_elem.1242" }
%"struct.std::__1::__compressed_pair_elem.1240" = type { %"struct.std::__1::__hash_node_base.1241"** }
%"struct.std::__1::__hash_node_base.1241" = type { %"struct.std::__1::__hash_node_base.1241"* }
%"struct.std::__1::__compressed_pair_elem.1242" = type { %"class.std::__1::__bucket_list_deallocator.1243" }
%"class.std::__1::__bucket_list_deallocator.1243" = type { %"class.std::__1::__compressed_pair.1244" }
%"class.std::__1::__compressed_pair.1244" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"class.std::__1::__compressed_pair.1248" = type { %"struct.std::__1::__compressed_pair_elem.1249" }
%"struct.std::__1::__compressed_pair_elem.1249" = type { %"struct.std::__1::__hash_node_base.1241" }
%"class.std::__1::__compressed_pair.1253" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"class.std::__1::__compressed_pair.1256" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.rx::InternalShaderPerfCounters" = type { i32 }
%"class.rx::vk::DynamicQueryPool" = type { %"class.rx::vk::DynamicallyGrowingPool.base", i32 }
%"class.rx::vk::DynamicallyGrowingPool.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.std::__1::vector.997", %"class.std::__1::vector.1005", i64, i32 }>
%"class.std::__1::vector.997" = type { %"class.std::__1::__vector_base.998" }
%"class.std::__1::__vector_base.998" = type { %"class.rx::vk::QueryPool"*, %"class.rx::vk::QueryPool"*, %"class.std::__1::__compressed_pair.1000" }
%"class.rx::vk::QueryPool" = type { %"class.rx::vk::WrappedObject.999" }
%"class.rx::vk::WrappedObject.999" = type { %struct.VkQueryPool_T* }
%struct.VkQueryPool_T = type opaque
%"class.std::__1::__compressed_pair.1000" = type { %"struct.std::__1::__compressed_pair_elem.1001" }
%"struct.std::__1::__compressed_pair_elem.1001" = type { %"class.rx::vk::QueryPool"* }
%"class.std::__1::vector.1005" = type { %"class.std::__1::__vector_base.1006" }
%"class.std::__1::__vector_base.1006" = type { %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"*, %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"*, %"class.std::__1::__compressed_pair.1007" }
%"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats" = type opaque
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.1008" }
%"struct.std::__1::__compressed_pair_elem.1008" = type { %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"* }
%"class.std::__1::vector.1260" = type { %"class.std::__1::__vector_base.1261" }
%"class.std::__1::__vector_base.1261" = type { %"struct.rx::ContextVk::GpuEventQuery"*, %"struct.rx::ContextVk::GpuEventQuery"*, %"class.std::__1::__compressed_pair.1263" }
%"struct.rx::ContextVk::GpuEventQuery" = type { %"struct.std::__1::array.1262", i8, [7 x i8], %"class.rx::vk::QueryHelper" }
%"struct.std::__1::array.1262" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.1263" = type { %"struct.std::__1::__compressed_pair_elem.1264" }
%"struct.std::__1::__compressed_pair_elem.1264" = type { %"struct.rx::ContextVk::GpuEventQuery"* }
%"class.std::__1::vector.1268" = type { %"class.std::__1::__vector_base.1269" }
%"class.std::__1::__vector_base.1269" = type { %"struct.rx::ContextVk::GpuEvent"*, %"struct.rx::ContextVk::GpuEvent"*, %"class.std::__1::__compressed_pair.1270" }
%"struct.rx::ContextVk::GpuEvent" = type { i64, %"struct.std::__1::array.1262", i8 }
%"class.std::__1::__compressed_pair.1270" = type { %"struct.std::__1::__compressed_pair_elem.1271" }
%"struct.std::__1::__compressed_pair_elem.1271" = type { %"struct.rx::ContextVk::GpuEvent"* }
%"struct.rx::ContextVk::GpuClockSyncInfo" = type { double, double }
%"struct.rx::vk::PerfCounters" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.rx::ContextVkPerfCounters" = type { %"class.angle::PackedEnumMap.1275" }
%"class.angle::PackedEnumMap.1275" = type { %"struct.std::__1::array.373" }
%"class.rx::vk::ResourceUseList" = type { i32 (...)**, %"class.std::__1::vector.1276" }
%"class.std::__1::vector.1276" = type { %"class.std::__1::__vector_base.1277" }
%"class.std::__1::__vector_base.1277" = type { %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"*, %"class.std::__1::__compressed_pair.1278" }
%"class.std::__1::__compressed_pair.1278" = type { %"struct.std::__1::__compressed_pair_elem.1279" }
%"struct.std::__1::__compressed_pair_elem.1279" = type { %"class.rx::vk::SharedResourceUse"* }
%"class.std::__1::vector.1283" = type { %"class.std::__1::__vector_base.1284" }
%"class.std::__1::__vector_base.1284" = type { %struct.VkDescriptorBufferInfo*, %struct.VkDescriptorBufferInfo*, %"class.std::__1::__compressed_pair.1285" }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%"class.std::__1::__compressed_pair.1285" = type { %"struct.std::__1::__compressed_pair_elem.1286" }
%"struct.std::__1::__compressed_pair_elem.1286" = type { %struct.VkDescriptorBufferInfo* }
%"class.std::__1::vector.1290" = type { %"class.std::__1::__vector_base.1291" }
%"class.std::__1::__vector_base.1291" = type { %struct.VkDescriptorImageInfo*, %struct.VkDescriptorImageInfo*, %"class.std::__1::__compressed_pair.1292" }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkImageView_T = type opaque
%"class.std::__1::__compressed_pair.1292" = type { %"struct.std::__1::__compressed_pair_elem.1293" }
%"struct.std::__1::__compressed_pair_elem.1293" = type { %struct.VkDescriptorImageInfo* }
%"class.std::__1::vector.1297" = type { %"class.std::__1::__vector_base.1298" }
%"class.std::__1::__vector_base.1298" = type { %struct.VkWriteDescriptorSet*, %struct.VkWriteDescriptorSet*, %"class.std::__1::__compressed_pair.1299" }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkBufferView_T = type opaque
%"class.std::__1::__compressed_pair.1299" = type { %"struct.std::__1::__compressed_pair_elem.1300" }
%"struct.std::__1::__compressed_pair_elem.1300" = type { %struct.VkWriteDescriptorSet* }
%"class.rx::ShareGroupVk" = type <{ %"class.rx::ShareGroupImpl", %"class.rx::PipelineLayoutCache", %"class.rx::DescriptorSetLayoutCache", %"class.std::__1::set.1359", %"class.std::__1::vector.1369", i8, [7 x i8] }>
%"class.rx::ShareGroupImpl" = type { i32 (...)** }
%"class.rx::PipelineLayoutCache" = type { %"class.rx::HasCacheStats.1304", %"class.std::__1::unordered_map.1305" }
%"class.rx::HasCacheStats.1304" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1305" = type { %"class.std::__1::__hash_table.1306" }
%"class.std::__1::__hash_table.1306" = type <{ %"class.std::__1::unique_ptr.1307", %"class.std::__1::__compressed_pair.1317", %"class.std::__1::__compressed_pair.1322", %"class.std::__1::__compressed_pair.1326", [4 x i8] }>
%"class.std::__1::unique_ptr.1307" = type { %"class.std::__1::__compressed_pair.1308" }
%"class.std::__1::__compressed_pair.1308" = type { %"struct.std::__1::__compressed_pair_elem.1309", %"struct.std::__1::__compressed_pair_elem.1311" }
%"struct.std::__1::__compressed_pair_elem.1309" = type { %"struct.std::__1::__hash_node_base.1310"** }
%"struct.std::__1::__hash_node_base.1310" = type { %"struct.std::__1::__hash_node_base.1310"* }
%"struct.std::__1::__compressed_pair_elem.1311" = type { %"class.std::__1::__bucket_list_deallocator.1312" }
%"class.std::__1::__bucket_list_deallocator.1312" = type { %"class.std::__1::__compressed_pair.1313" }
%"class.std::__1::__compressed_pair.1313" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"class.std::__1::__compressed_pair.1317" = type { %"struct.std::__1::__compressed_pair_elem.1318" }
%"struct.std::__1::__compressed_pair_elem.1318" = type { %"struct.std::__1::__hash_node_base.1310" }
%"class.std::__1::__compressed_pair.1322" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"class.std::__1::__compressed_pair.1326" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"class.rx::DescriptorSetLayoutCache" = type { %"class.std::__1::unordered_map.1332", %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1332" = type { %"class.std::__1::__hash_table.1333" }
%"class.std::__1::__hash_table.1333" = type <{ %"class.std::__1::unique_ptr.1334", %"class.std::__1::__compressed_pair.1344", %"class.std::__1::__compressed_pair.1349", %"class.std::__1::__compressed_pair.1353", [4 x i8] }>
%"class.std::__1::unique_ptr.1334" = type { %"class.std::__1::__compressed_pair.1335" }
%"class.std::__1::__compressed_pair.1335" = type { %"struct.std::__1::__compressed_pair_elem.1336", %"struct.std::__1::__compressed_pair_elem.1338" }
%"struct.std::__1::__compressed_pair_elem.1336" = type { %"struct.std::__1::__hash_node_base.1337"** }
%"struct.std::__1::__hash_node_base.1337" = type { %"struct.std::__1::__hash_node_base.1337"* }
%"struct.std::__1::__compressed_pair_elem.1338" = type { %"class.std::__1::__bucket_list_deallocator.1339" }
%"class.std::__1::__bucket_list_deallocator.1339" = type { %"class.std::__1::__compressed_pair.1340" }
%"class.std::__1::__compressed_pair.1340" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"class.std::__1::__compressed_pair.1344" = type { %"struct.std::__1::__compressed_pair_elem.1345" }
%"struct.std::__1::__compressed_pair_elem.1345" = type { %"struct.std::__1::__hash_node_base.1337" }
%"class.std::__1::__compressed_pair.1349" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"class.std::__1::__compressed_pair.1353" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"class.std::__1::set.1359" = type { %"class.std::__1::__tree.1360" }
%"class.std::__1::__tree.1360" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1361", %"class.std::__1::__compressed_pair.1365" }
%"class.std::__1::__compressed_pair.1361" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"class.std::__1::__compressed_pair.1365" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"class.std::__1::vector.1369" = type { %"class.std::__1::__vector_base.1370" }
%"class.std::__1::__vector_base.1370" = type { %"class.rx::vk::ResourceUseList"*, %"class.rx::vk::ResourceUseList"*, %"class.std::__1::__compressed_pair.1371" }
%"class.std::__1::__compressed_pair.1371" = type { %"struct.std::__1::__compressed_pair_elem.1372" }
%"struct.std::__1::__compressed_pair_elem.1372" = type { %"class.rx::vk::ResourceUseList"* }
%"class.rx::BufferVk" = type { %"class.rx::BufferImpl", %"class.rx::vk::BufferHelper"*, i64, %"class.rx::vk::DynamicBuffer", %"class.rx::vk::DynamicBuffer", i64, %"class.rx::vk::DynamicShadowBuffer", %"class.std::__1::vector.1376" }
%"class.rx::vk::DynamicShadowBuffer" = type { i64, i64, %"class.angle::MemoryBuffer" }
%"class.std::__1::vector.1376" = type { %"class.std::__1::__vector_base.1377" }
%"class.std::__1::__vector_base.1377" = type { %"struct.rx::BufferVk::VertexConversionBuffer"*, %"struct.rx::BufferVk::VertexConversionBuffer"*, %"class.std::__1::__compressed_pair.1378" }
%"struct.rx::BufferVk::VertexConversionBuffer" = type { %"struct.rx::ConversionBuffer", i32, i32, i64 }
%"struct.rx::ConversionBuffer" = type { i8, i64, %"class.rx::vk::DynamicBuffer" }
%"class.std::__1::__compressed_pair.1378" = type { %"struct.std::__1::__compressed_pair_elem.1379" }
%"struct.std::__1::__compressed_pair_elem.1379" = type { %"struct.rx::BufferVk::VertexConversionBuffer"* }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%"class.rx::vk::DescriptorSetLayoutDesc" = type { %"struct.std::__1::array.1383" }
%"struct.std::__1::array.1383" = type { [96 x %"struct.rx::vk::DescriptorSetLayoutDesc::PackedDescriptorSetBinding"] }
%"struct.rx::vk::DescriptorSetLayoutDesc::PackedDescriptorSetBinding" = type { i8, i8, i16, i32, %struct.VkSampler_T* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.rx::ShaderInterfaceVariableInfo" = type <{ i32, i32, i32, i32, i32, %"class.angle::BitSetT.62", [3 x i8], %"struct.rx::ShaderInterfaceVariableXfbInfo", %"class.std::__1::vector.1384", i8, i8, i8, i8, i8, [3 x i8] }>
%"struct.rx::ShaderInterfaceVariableXfbInfo" = type { i32, i32, i32, i32, i32, i32, i32, i32, %"class.std::__1::vector.1384" }
%"class.std::__1::vector.1384" = type { %"class.std::__1::__vector_base.1385" }
%"class.std::__1::__vector_base.1385" = type { %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"class.std::__1::__compressed_pair.1386" }
%"class.std::__1::__compressed_pair.1386" = type { %"struct.std::__1::__compressed_pair_elem.1387" }
%"struct.std::__1::__compressed_pair_elem.1387" = type { %"struct.rx::ShaderInterfaceVariableXfbInfo"* }

@_ZTVN2rx19TransformFeedbackVkE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::TransformFeedbackVk"*)* @_ZN2rx19TransformFeedbackVkD2Ev to i8*), i8* bitcast (void (%"class.rx::TransformFeedbackVk"*)* @_ZN2rx19TransformFeedbackVkD0Ev to i8*), i8* bitcast (void (%"class.rx::TransformFeedbackVk"*, %"class.gl::Context"*)* @_ZN2rx19TransformFeedbackVk9onDestroyEPKN2gl7ContextE to i8*), i8* bitcast (i32 (%"class.rx::TransformFeedbackVk"*, %"class.gl::Context"*, i8)* @_ZN2rx19TransformFeedbackVk5beginEPKN2gl7ContextENS1_13PrimitiveModeE to i8*), i8* bitcast (i32 (%"class.rx::TransformFeedbackVk"*, %"class.gl::Context"*)* @_ZN2rx19TransformFeedbackVk3endEPKN2gl7ContextE to i8*), i8* bitcast (i32 (%"class.rx::TransformFeedbackVk"*, %"class.gl::Context"*)* @_ZN2rx19TransformFeedbackVk5pauseEPKN2gl7ContextE to i8*), i8* bitcast (i32 (%"class.rx::TransformFeedbackVk"*, %"class.gl::Context"*)* @_ZN2rx19TransformFeedbackVk6resumeEPKN2gl7ContextE to i8*), i8* bitcast (i32 (%"class.rx::TransformFeedbackVk"*, %"class.gl::Context"*, i64, %"class.gl::OffsetBindingPointer"*)* @_ZN2rx19TransformFeedbackVk17bindIndexedBufferEPKN2gl7ContextEmRKNS1_20OffsetBindingPointerINS1_6BufferEEE to i8*)] }, align 8

@_ZN2rx19TransformFeedbackVkC1ERKN2gl22TransformFeedbackStateE = hidden unnamed_addr alias void (%"class.rx::TransformFeedbackVk"*, %"class.gl::TransformFeedbackState"*), void (%"class.rx::TransformFeedbackVk"*, %"class.gl::TransformFeedbackState"*)* @_ZN2rx19TransformFeedbackVkC2ERKN2gl22TransformFeedbackStateE
@_ZN2rx19TransformFeedbackVkD1Ev = hidden unnamed_addr alias void (%"class.rx::TransformFeedbackVk"*), void (%"class.rx::TransformFeedbackVk"*)* @_ZN2rx19TransformFeedbackVkD2Ev

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #0

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx19TransformFeedbackVkC2ERKN2gl22TransformFeedbackStateE(%"class.rx::TransformFeedbackVk"*, %"class.gl::TransformFeedbackState"* dereferenceable(80)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 0, i32 1
  store %"class.gl::TransformFeedbackState"* %1, %"class.gl::TransformFeedbackState"** %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2rx19TransformFeedbackVkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %5 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 1
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 7, i32 0, i64 0
  %8 = bitcast %"struct.std::__1::array.646"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 160, i1 false)
  tail call void @_ZN2rx2vk12BufferHelperC1Ev(%"class.rx::vk::BufferHelper"* %7) #7
  %9 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 7, i32 0, i64 1
  tail call void @_ZN2rx2vk12BufferHelperC1Ev(%"class.rx::vk::BufferHelper"* %9) #7
  %10 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 7, i32 0, i64 2
  tail call void @_ZN2rx2vk12BufferHelperC1Ev(%"class.rx::vk::BufferHelper"* %10) #7
  %11 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 7, i32 0, i64 3
  tail call void @_ZN2rx2vk12BufferHelperC1Ev(%"class.rx::vk::BufferHelper"* %11) #7
  %12 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 8
  %13 = bitcast %"struct.std::__1::array.649"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false)
  %14 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 9
  tail call void @_ZN2rx2vk28UniformsAndXfbDescriptorDescC1Ev(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* %14) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #0

declare void @_ZN2rx2vk28UniformsAndXfbDescriptorDescC1Ev(%"class.rx::vk::UniformsAndXfbDescriptorDesc"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx19TransformFeedbackVkD2Ev(%"class.rx::TransformFeedbackVk"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2rx19TransformFeedbackVkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 9
  tail call void @_ZN2rx2vk28UniformsAndXfbDescriptorDescD1Ev(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* %3) #7
  %4 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 7, i32 0, i64 3
  tail call void @_ZN2rx2vk12BufferHelperD1Ev(%"class.rx::vk::BufferHelper"* %4) #7
  %5 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 7, i32 0, i64 2
  tail call void @_ZN2rx2vk12BufferHelperD1Ev(%"class.rx::vk::BufferHelper"* %5) #7
  %6 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 7, i32 0, i64 1
  tail call void @_ZN2rx2vk12BufferHelperD1Ev(%"class.rx::vk::BufferHelper"* %6) #7
  %7 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 7, i32 0, i64 0
  tail call void @_ZN2rx2vk12BufferHelperD1Ev(%"class.rx::vk::BufferHelper"* %7) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2rx2vk28UniformsAndXfbDescriptorDescD1Ev(%"class.rx::vk::UniformsAndXfbDescriptorDesc"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx19TransformFeedbackVkD0Ev(%"class.rx::TransformFeedbackVk"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2rx19TransformFeedbackVkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 9
  tail call void @_ZN2rx2vk28UniformsAndXfbDescriptorDescD1Ev(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* %3) #7
  %4 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 7, i32 0, i64 3
  tail call void @_ZN2rx2vk12BufferHelperD1Ev(%"class.rx::vk::BufferHelper"* %4) #7
  %5 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 7, i32 0, i64 2
  tail call void @_ZN2rx2vk12BufferHelperD1Ev(%"class.rx::vk::BufferHelper"* %5) #7
  %6 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 7, i32 0, i64 1
  tail call void @_ZN2rx2vk12BufferHelperD1Ev(%"class.rx::vk::BufferHelper"* %6) #7
  %7 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 7, i32 0, i64 0
  tail call void @_ZN2rx2vk12BufferHelperD1Ev(%"class.rx::vk::BufferHelper"* %7) #7
  %8 = bitcast %"class.rx::TransformFeedbackVk"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2rx19TransformFeedbackVk9onDestroyEPKN2gl7ContextE(%"class.rx::TransformFeedbackVk"* nocapture, %"class.gl::Context"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx19TransformFeedbackVk21releaseCounterBuffersEPNS_10RendererVkE(%"class.rx::TransformFeedbackVk"*, %"class.rx::RendererVk"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 7, i32 0, i64 0
  tail call void @_ZN2rx2vk12BufferHelper7releaseEPNS_10RendererVkE(%"class.rx::vk::BufferHelper"* %3, %"class.rx::RendererVk"* %1) #7
  %4 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 7, i32 0, i64 1
  tail call void @_ZN2rx2vk12BufferHelper7releaseEPNS_10RendererVkE(%"class.rx::vk::BufferHelper"* %4, %"class.rx::RendererVk"* %1) #7
  %5 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 7, i32 0, i64 2
  tail call void @_ZN2rx2vk12BufferHelper7releaseEPNS_10RendererVkE(%"class.rx::vk::BufferHelper"* %5, %"class.rx::RendererVk"* %1) #7
  %6 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 7, i32 0, i64 3
  tail call void @_ZN2rx2vk12BufferHelper7releaseEPNS_10RendererVkE(%"class.rx::vk::BufferHelper"* %6, %"class.rx::RendererVk"* %1) #7
  %7 = getelementptr %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 8, i32 0, i64 0
  %8 = bitcast %struct.VkBuffer_T** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false)
  ret void
}

declare void @_ZN2rx2vk12BufferHelper7releaseEPNS_10RendererVkE(%"class.rx::vk::BufferHelper"*, %"class.rx::RendererVk"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx19TransformFeedbackVk24initializeXFBBuffersDescEPNS_9ContextVkEm(%"class.rx::TransformFeedbackVk"*, %"class.rx::ContextVk"*, i64) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 9
  tail call void @_ZN2rx2vk28UniformsAndXfbDescriptorDesc5resetEv(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* %4) #7
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 80
  %9 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 80, i32 4
  %10 = getelementptr inbounds %"class.rx::vk::UniformsAndXfbDescriptorDesc", %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %4, i64 0, i32 0
  br label %12

11:                                               ; preds = %45, %3
  ret void

12:                                               ; preds = %45, %6
  %13 = phi i64 [ 0, %6 ], [ %51, %45 ]
  %14 = load %"class.gl::TransformFeedbackState"*, %"class.gl::TransformFeedbackState"** %7, align 8
  %15 = tail call dereferenceable(32) %"class.gl::OffsetBindingPointer"* @_ZNK2gl22TransformFeedbackState16getIndexedBufferEm(%"class.gl::TransformFeedbackState"* %14, i64 %13) #7
  %16 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %15, i64 0, i32 0, i32 0, i32 1
  %17 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %16, align 8
  %18 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %17, i64 0, i32 5
  %19 = bitcast %"class.rx::BufferImpl"** %18 to %"class.rx::BufferVk"**
  %20 = load %"class.rx::BufferVk"*, %"class.rx::BufferVk"** %19, align 8
  %21 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %20, i64 0, i32 1
  %22 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %21, align 8
  %23 = icmp eq %"class.rx::vk::BufferHelper"* %22, null
  br i1 %23, label %40, label %24

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %22, i64 0, i32 1, i32 0, i32 0
  %26 = load %struct.VkBuffer_T*, %struct.VkBuffer_T** %25, align 8
  %27 = icmp eq %struct.VkBuffer_T* %26, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %20, i64 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 2, i32 0, i64 %13
  store %"class.rx::vk::BufferHelper"* %22, %"class.rx::vk::BufferHelper"** %31, align 8
  %32 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %15, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, %30
  %35 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 4, i32 0, i64 %13
  store i64 %34, i64* %35, align 8
  %36 = tail call i64 @_ZN2gl27GetBoundBufferAvailableSizeERKNS_20OffsetBindingPointerINS_6BufferEEE(%"class.gl::OffsetBindingPointer"* dereferenceable(32) %15) #7
  %37 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 5, i32 0, i64 %13
  store i64 %36, i64* %37, align 8
  %38 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %31, align 8
  %39 = load i64, i64* %35, align 8
  br label %45

40:                                               ; preds = %24, %12
  %41 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 2, i32 0, i64 %13
  store %"class.rx::vk::BufferHelper"* %8, %"class.rx::vk::BufferHelper"** %41, align 8
  %42 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 4, i32 0, i64 %13
  store i64 0, i64* %42, align 8
  %43 = load i64, i64* %9, align 8
  %44 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 5, i32 0, i64 %13
  store i64 %43, i64* %44, align 8
  br label %45

45:                                               ; preds = %40, %28
  %46 = phi i64 [ 0, %40 ], [ %39, %28 ]
  %47 = phi %"class.rx::vk::BufferHelper"* [ %8, %40 ], [ %38, %28 ]
  %48 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %47, i64 0, i32 10, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = trunc i64 %13 to i32
  %51 = add nuw i64 %13, 1
  %52 = and i64 %51, 4294967295
  %53 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 9, i32 1, i32 0, i64 %52, i32 0
  store i32 %49, i32* %53, align 4
  %54 = trunc i64 %46 to i32
  %55 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 9, i32 2, i32 0, i64 %13
  store i32 %54, i32* %55, align 4
  %56 = add i32 %50, 2
  %57 = load i32, i32* %10, align 4
  %58 = icmp ult i32 %57, %56
  %59 = select i1 %58, i32 %56, i32 %57
  store i32 %59, i32* %10, align 4
  %60 = icmp eq i64 %51, %2
  br i1 %60, label %11, label %12
}

declare void @_ZN2rx2vk28UniformsAndXfbDescriptorDesc5resetEv(%"class.rx::vk::UniformsAndXfbDescriptorDesc"*) local_unnamed_addr #2

declare dereferenceable(32) %"class.gl::OffsetBindingPointer"* @_ZNK2gl22TransformFeedbackState16getIndexedBufferEm(%"class.gl::TransformFeedbackState"*, i64) local_unnamed_addr #2

declare i64 @_ZN2gl27GetBoundBufferAvailableSizeERKNS_20OffsetBindingPointerINS_6BufferEEE(%"class.gl::OffsetBindingPointer"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx19TransformFeedbackVk5beginEPKN2gl7ContextENS1_13PrimitiveModeE(%"class.rx::TransformFeedbackVk"*, %"class.gl::Context"* nocapture readonly, i8 zeroext) unnamed_addr #1 align 2 {
  %4 = alloca %struct.VkBufferCreateInfo, align 8
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %6 = bitcast %"class.rx::ContextImpl"** %5 to %"class.rx::ContextVk"**
  %7 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %6, align 8
  %8 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %7, i64 0, i32 0, i32 1
  %9 = load %"class.gl::State"*, %"class.gl::State"** %8, align 8
  %10 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %9, i64 0, i32 65
  %11 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %10, align 8
  %12 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %11, i64 0, i32 27
  %13 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %11, i64 0, i32 27, i32 0, i32 1
  %14 = bitcast i32** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.97"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = ashr exact i64 %18, 2
  tail call void @_ZN2rx19TransformFeedbackVk24initializeXFBBuffersDescEPNS_9ContextVkEm(%"class.rx::TransformFeedbackVk"* %0, %"class.rx::ContextVk"* %7, i64 %19)
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %69, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %7, i64 0, i32 1, i32 1
  %24 = bitcast %struct.VkBufferCreateInfo* %4 to i8*
  %25 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %4, i64 0, i32 0
  %26 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %4, i64 0, i32 3
  %27 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %4, i64 0, i32 4
  %28 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %4, i64 0, i32 5
  br label %29

29:                                               ; preds = %21, %65
  %30 = phi i64 [ 0, %21 ], [ %66, %65 ]
  %31 = load %"class.gl::TransformFeedbackState"*, %"class.gl::TransformFeedbackState"** %22, align 8
  %32 = call dereferenceable(32) %"class.gl::OffsetBindingPointer"* @_ZNK2gl22TransformFeedbackState16getIndexedBufferEm(%"class.gl::TransformFeedbackState"* %31, i64 %30) #7
  %33 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 2, i32 0, i64 %30
  %34 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %33, align 8
  %35 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %34, i64 0, i32 1, i32 0, i32 0
  %36 = bitcast %struct.VkBuffer_T** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 3, i32 0, i64 %30
  %39 = bitcast %struct.VkBuffer_T** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %23, align 8
  %41 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %40, i64 0, i32 7, i32 27, i32 4
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %57, label %44

44:                                               ; preds = %29
  %45 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 8, i32 0, i64 %30
  %46 = load %struct.VkBuffer_T*, %struct.VkBuffer_T** %45, align 8
  %47 = icmp eq %struct.VkBuffer_T* %46, null
  br i1 %47, label %48, label %65

48:                                               ; preds = %44
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %24) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 56, i1 false)
  store i32 12, i32* %25, align 8
  store i64 16, i64* %26, align 8
  store i32 4096, i32* %27, align 8
  store i32 0, i32* %28, align 4
  %49 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 7, i32 0, i64 %30
  %50 = call i32 @_ZN2rx2vk12BufferHelper4initEPNS_9ContextVkERK18VkBufferCreateInfoj(%"class.rx::vk::BufferHelper"* %49, %"class.rx::ContextVk"* %7, %struct.VkBufferCreateInfo* nonnull dereferenceable(56) %4, i32 1) #7
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %68, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 7, i32 0, i64 %30, i32 1, i32 0, i32 0
  %54 = bitcast %struct.VkBuffer_T** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %struct.VkBuffer_T** %45 to i64*
  store i64 %55, i64* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %24) #7
  br label %65

57:                                               ; preds = %29
  %58 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %40, i64 0, i32 16, i32 7, i32 69
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 4, i32 0, i64 %30
  %61 = load i64, i64* %60, align 8
  %62 = urem i64 %61, %59
  %63 = sub i64 %61, %62
  %64 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 6, i32 0, i64 %30
  store i64 %63, i64* %64, align 8
  br label %65

65:                                               ; preds = %52, %44, %57
  %66 = add nuw i64 %30, 1
  %67 = icmp ult i64 %66, %19
  br i1 %67, label %29, label %69

68:                                               ; preds = %48
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %24) #7
  br label %81

69:                                               ; preds = %65, %3
  %70 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %7, i64 0, i32 1, i32 1
  %71 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %70, align 8
  %72 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %71, i64 0, i32 7, i32 27, i32 4
  %73 = load i8, i8* %72, align 8, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 1
  store i8 1, i8* %76, align 8
  br label %77

77:                                               ; preds = %69, %75
  %78 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 2
  %79 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 7
  %80 = call i32 @_ZN2rx9ContextVk24onBeginTransformFeedbackEmRKNSt3__15arrayIPNS_2vk12BufferHelperELm4EEERKNS2_IS4_Lm4EEE(%"class.rx::ContextVk"* %7, i64 %19, %"struct.std::__1::array.646"* dereferenceable(32) %78, %"struct.std::__1::array.651"* dereferenceable(416) %79) #7
  br label %81

81:                                               ; preds = %68, %77
  %82 = phi i32 [ %80, %77 ], [ 1, %68 ]
  ret i32 %82
}

declare i32 @_ZN2rx2vk12BufferHelper4initEPNS_9ContextVkERK18VkBufferCreateInfoj(%"class.rx::vk::BufferHelper"*, %"class.rx::ContextVk"*, %struct.VkBufferCreateInfo* dereferenceable(56), i32) local_unnamed_addr #2

declare i32 @_ZN2rx9ContextVk24onBeginTransformFeedbackEmRKNSt3__15arrayIPNS_2vk12BufferHelperELm4EEERKNS2_IS4_Lm4EEE(%"class.rx::ContextVk"*, i64, %"struct.std::__1::array.646"* dereferenceable(32), %"struct.std::__1::array.651"* dereferenceable(416)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx19TransformFeedbackVk3endEPKN2gl7ContextE(%"class.rx::TransformFeedbackVk"*, %"class.gl::Context"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %4 = bitcast %"class.rx::ContextImpl"** %3 to %"class.rx::ContextVk"**
  %5 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2
  %7 = tail call %"class.gl::Query"* @_ZNK2gl5State14getActiveQueryENS_9QueryTypeE(%"class.gl::State"* %6, i8 zeroext 6) #7
  %8 = icmp eq %"class.gl::Query"* %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %5, i64 0, i32 1, i32 1
  %11 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %10, align 8
  %12 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %11, i64 0, i32 7, i32 26, i32 4
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %9
  %16 = tail call %"class.rx::QueryImpl"* @_ZNK2gl5Query17getImplementationEv(%"class.gl::Query"* nonnull %7) #7
  %17 = bitcast %"class.rx::QueryImpl"* %16 to %"class.rx::QueryVk"*
  %18 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 0, i32 1
  %19 = load %"class.gl::TransformFeedbackState"*, %"class.gl::TransformFeedbackState"** %18, align 8
  %20 = tail call i64 @_ZNK2gl22TransformFeedbackState18getPrimitivesDrawnEv(%"class.gl::TransformFeedbackState"* %19) #7
  tail call void @_ZN2rx7QueryVk22onTransformFeedbackEndEl(%"class.rx::QueryVk"* %17, i64 %20) #7
  br label %21

21:                                               ; preds = %9, %2, %15
  tail call void @_ZN2rx9ContextVk22onEndTransformFeedbackEv(%"class.rx::ContextVk"* %5) #7
  %22 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %5, i64 0, i32 1, i32 1
  %23 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %22, align 8
  %24 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 7, i32 0, i64 0
  tail call void @_ZN2rx2vk12BufferHelper7releaseEPNS_10RendererVkE(%"class.rx::vk::BufferHelper"* %24, %"class.rx::RendererVk"* %23) #7
  %25 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 7, i32 0, i64 1
  tail call void @_ZN2rx2vk12BufferHelper7releaseEPNS_10RendererVkE(%"class.rx::vk::BufferHelper"* %25, %"class.rx::RendererVk"* %23) #7
  %26 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 7, i32 0, i64 2
  tail call void @_ZN2rx2vk12BufferHelper7releaseEPNS_10RendererVkE(%"class.rx::vk::BufferHelper"* %26, %"class.rx::RendererVk"* %23) #7
  %27 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 7, i32 0, i64 3
  tail call void @_ZN2rx2vk12BufferHelper7releaseEPNS_10RendererVkE(%"class.rx::vk::BufferHelper"* %27, %"class.rx::RendererVk"* %23) #7
  %28 = getelementptr %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 8, i32 0, i64 0
  %29 = bitcast %struct.VkBuffer_T** %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 32, i1 false) #7
  ret i32 0
}

declare %"class.gl::Query"* @_ZNK2gl5State14getActiveQueryENS_9QueryTypeE(%"class.gl::State"*, i8 zeroext) local_unnamed_addr #2

declare void @_ZN2rx7QueryVk22onTransformFeedbackEndEl(%"class.rx::QueryVk"*, i64) local_unnamed_addr #2

declare i64 @_ZNK2gl22TransformFeedbackState18getPrimitivesDrawnEv(%"class.gl::TransformFeedbackState"*) local_unnamed_addr #2

declare void @_ZN2rx9ContextVk22onEndTransformFeedbackEv(%"class.rx::ContextVk"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx19TransformFeedbackVk5pauseEPKN2gl7ContextE(%"class.rx::TransformFeedbackVk"* nocapture, %"class.gl::Context"* nocapture readonly) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %4 = bitcast %"class.rx::ContextImpl"** %3 to %"class.rx::ContextVk"**
  %5 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %4, align 8
  %6 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %5, i64 0, i32 1, i32 1
  %7 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %6, align 8
  %8 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %7, i64 0, i32 7, i32 26, i32 4
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %41, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %5, i64 0, i32 0, i32 1
  %13 = load %"class.gl::State"*, %"class.gl::State"** %12, align 8
  %14 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %13, i64 0, i32 65
  %15 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %14, align 8
  %16 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %15, i64 0, i32 27
  %17 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %15, i64 0, i32 27, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.97"* %16 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 2
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %11
  %26 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %5, i64 0, i32 80, i32 10, i32 0
  %27 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 9, i32 0
  br label %28

28:                                               ; preds = %25, %28
  %29 = phi i64 [ 0, %25 ], [ %32, %28 ]
  %30 = load i32, i32* %26, align 4
  %31 = trunc i64 %29 to i32
  %32 = add nuw i64 %29, 1
  %33 = and i64 %32, 4294967295
  %34 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 9, i32 1, i32 0, i64 %33, i32 0
  store i32 %30, i32* %34, align 4
  %35 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 9, i32 2, i32 0, i64 %29
  store i32 0, i32* %35, align 4
  %36 = add i32 %31, 2
  %37 = load i32, i32* %27, align 4
  %38 = icmp ult i32 %37, %36
  %39 = select i1 %38, i32 %36, i32 %37
  store i32 %39, i32* %27, align 4
  %40 = icmp ult i64 %32, %23
  br i1 %40, label %28, label %41

41:                                               ; preds = %28, %11, %2
  %42 = tail call i32 @_ZN2rx9ContextVk24onPauseTransformFeedbackEv(%"class.rx::ContextVk"* %5) #7
  ret i32 %42
}

declare i32 @_ZN2rx9ContextVk24onPauseTransformFeedbackEv(%"class.rx::ContextVk"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx19TransformFeedbackVk6resumeEPKN2gl7ContextE(%"class.rx::TransformFeedbackVk"*, %"class.gl::Context"* nocapture readonly) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %4 = bitcast %"class.rx::ContextImpl"** %3 to %"class.rx::ContextVk"**
  %5 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %4, align 8
  %6 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %5, i64 0, i32 0, i32 1
  %7 = load %"class.gl::State"*, %"class.gl::State"** %6, align 8
  %8 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %7, i64 0, i32 65
  %9 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %8, align 8
  %10 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %9, i64 0, i32 27
  %11 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %9, i64 0, i32 27, i32 0, i32 1
  %12 = bitcast i32** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.97"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 2
  %18 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %5, i64 0, i32 1, i32 1
  %19 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %18, align 8
  %20 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %19, i64 0, i32 7, i32 26, i32 4
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %2
  tail call void @_ZN2rx19TransformFeedbackVk24initializeXFBBuffersDescEPNS_9ContextVkEm(%"class.rx::TransformFeedbackVk"* %0, %"class.rx::ContextVk"* %5, i64 %17)
  br label %24

24:                                               ; preds = %2, %23
  %25 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 2
  %26 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 7
  %27 = tail call i32 @_ZN2rx9ContextVk24onBeginTransformFeedbackEmRKNSt3__15arrayIPNS_2vk12BufferHelperELm4EEERKNS2_IS4_Lm4EEE(%"class.rx::ContextVk"* %5, i64 %17, %"struct.std::__1::array.646"* dereferenceable(32) %25, %"struct.std::__1::array.651"* dereferenceable(416) %26) #7
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx19TransformFeedbackVk17bindIndexedBufferEPKN2gl7ContextEmRKNS1_20OffsetBindingPointerINS1_6BufferEEE(%"class.rx::TransformFeedbackVk"* nocapture readnone, %"class.gl::Context"* nocapture readonly, i64, %"class.gl::OffsetBindingPointer"* nocapture readnone dereferenceable(32)) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %6 = bitcast %"class.rx::ContextImpl"** %5 to %"class.rx::ContextVk"**
  %7 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %6, align 8
  tail call void @_ZN2rx9ContextVk41invalidateCurrentTransformFeedbackBuffersEv(%"class.rx::ContextVk"* %7) #7
  ret i32 0
}

declare void @_ZN2rx9ContextVk41invalidateCurrentTransformFeedbackBuffersEv(%"class.rx::ContextVk"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2rx19TransformFeedbackVk25updateDescriptorSetLayoutEPNS_9ContextVkERKNS_30ShaderInterfaceVariableInfoMapEmPNS_2vk23DescriptorSetLayoutDescE(%"class.rx::TransformFeedbackVk"* nocapture readnone, %"class.rx::ContextVk"* nocapture readonly, %"class.rx::ShaderInterfaceVariableInfoMap"* dereferenceable(240), i64, %"class.rx::vk::DescriptorSetLayoutDesc"*) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %8 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %7, align 8
  %9 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %8, i64 0, i32 7, i32 26, i32 4
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp ne i8 %10, 0
  %12 = icmp ne i64 %3, 0
  %13 = and i1 %11, %12
  br i1 %13, label %14, label %33

14:                                               ; preds = %5
  %15 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  br label %20

20:                                               ; preds = %14, %29
  %21 = phi i32 [ 0, %14 ], [ %30, %29 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  call void @_ZN2rx16GetXfbBufferNameEj(%"class.std::__1::basic_string"* nonnull sret %6, i32 %21) #7
  %22 = call dereferenceable(112) %"struct.rx::ShaderInterfaceVariableInfo"* @_ZNK2rx30ShaderInterfaceVariableInfoMap3getEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"* %2, i8 zeroext 0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #7
  %23 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %22, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  call void @_ZN2rx2vk23DescriptorSetLayoutDesc6updateEj16VkDescriptorTypejjPKNS0_7SamplerE(%"class.rx::vk::DescriptorSetLayoutDesc"* %4, i32 %24, i32 7, i32 1, i32 1, %"class.rx::vk::Sampler"* null) #7
  %25 = load i8, i8* %18, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %20
  %28 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %28) #8
  br label %29

29:                                               ; preds = %20, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #7
  %30 = add i32 %21, 1
  %31 = zext i32 %30 to i64
  %32 = icmp ult i64 %31, %3
  br i1 %32, label %20, label %33

33:                                               ; preds = %29, %5
  ret void
}

declare void @_ZN2rx16GetXfbBufferNameEj(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #2

declare dereferenceable(112) %"struct.rx::ShaderInterfaceVariableInfo"* @_ZNK2rx30ShaderInterfaceVariableInfoMap3getEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"*, i8 zeroext, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN2rx2vk23DescriptorSetLayoutDesc6updateEj16VkDescriptorTypejjPKNS0_7SamplerE(%"class.rx::vk::DescriptorSetLayoutDesc"*, i32, i32, i32, i32, %"class.rx::vk::Sampler"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2rx19TransformFeedbackVk17initDescriptorSetEPNS_9ContextVkERKNS_30ShaderInterfaceVariableInfoMapEmP17VkDescriptorSet_T(%"class.rx::TransformFeedbackVk"* nocapture readnone, %"class.rx::ContextVk"*, %"class.rx::ShaderInterfaceVariableInfoMap"* dereferenceable(240), i64, %struct.VkDescriptorSet_T*) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %8 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %7, align 8
  %9 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %8, i64 0, i32 7, i32 26, i32 4
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %90, label %12

12:                                               ; preds = %5
  %13 = tail call %struct.VkDescriptorBufferInfo* @_ZN2rx9ContextVk26allocDescriptorBufferInfosEm(%"class.rx::ContextVk"* %1, i64 %3) #7
  %14 = icmp eq i64 %3, 0
  br i1 %14, label %37, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 80, i32 1, i32 0, i32 0
  %17 = bitcast %struct.VkBuffer_T** %16 to i64*
  %18 = add i64 %3, -1
  %19 = and i64 %3, 3
  %20 = icmp ult i64 %18, 3
  br i1 %20, label %23, label %21

21:                                               ; preds = %15
  %22 = sub i64 %3, %19
  br label %61

23:                                               ; preds = %61, %15
  %24 = phi i64 [ 0, %15 ], [ %87, %61 ]
  %25 = icmp eq i64 %19, 0
  br i1 %25, label %37, label %26

26:                                               ; preds = %23, %26
  %27 = phi i64 [ %34, %26 ], [ %24, %23 ]
  %28 = phi i64 [ %35, %26 ], [ %19, %23 ]
  %29 = load i64, i64* %17, align 8
  %30 = getelementptr inbounds %struct.VkDescriptorBufferInfo, %struct.VkDescriptorBufferInfo* %13, i64 %27, i32 0
  %31 = bitcast %struct.VkBuffer_T** %30 to i64*
  store i64 %29, i64* %31, align 8
  %32 = getelementptr inbounds %struct.VkDescriptorBufferInfo, %struct.VkDescriptorBufferInfo* %13, i64 %27, i32 1
  %33 = bitcast i64* %32 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %33, align 8
  %34 = add nuw i64 %27, 1
  %35 = add i64 %28, -1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %26, !llvm.loop !3

37:                                               ; preds = %23, %26, %12
  %38 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 24, i1 false) #7
  call void @_ZN2rx16GetXfbBufferNameEj(%"class.std::__1::basic_string"* nonnull sret %6, i32 0) #7
  %39 = call dereferenceable(112) %"struct.rx::ShaderInterfaceVariableInfo"* @_ZNK2rx30ShaderInterfaceVariableInfoMap3getEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"* %2, i8 zeroext 0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #7
  %40 = call %struct.VkWriteDescriptorSet* @_ZN2rx9ContextVk24allocWriteDescriptorSetsEm(%"class.rx::ContextVk"* %1, i64 1) #7
  %41 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %40, i64 0, i32 0
  store i32 35, i32* %41, align 8
  %42 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %40, i64 0, i32 2
  store %struct.VkDescriptorSet_T* %4, %struct.VkDescriptorSet_T** %42, align 8
  %43 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %39, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %40, i64 0, i32 3
  store i32 %44, i32* %45, align 8
  %46 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %40, i64 0, i32 4
  store i32 0, i32* %46, align 4
  %47 = trunc i64 %3 to i32
  %48 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %40, i64 0, i32 5
  store i32 %47, i32* %48, align 8
  %49 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %40, i64 0, i32 6
  store i32 7, i32* %49, align 4
  %50 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %40, i64 0, i32 7
  store %struct.VkDescriptorImageInfo* null, %struct.VkDescriptorImageInfo** %50, align 8
  %51 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %40, i64 0, i32 8
  store %struct.VkDescriptorBufferInfo* %13, %struct.VkDescriptorBufferInfo** %51, align 8
  %52 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %40, i64 0, i32 9
  store %struct.VkBufferView_T** null, %struct.VkBufferView_T*** %52, align 8
  %53 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %37
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %59) #8
  br label %60

60:                                               ; preds = %37, %57
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #7
  br label %90

61:                                               ; preds = %61, %21
  %62 = phi i64 [ 0, %21 ], [ %87, %61 ]
  %63 = phi i64 [ %22, %21 ], [ %88, %61 ]
  %64 = load i64, i64* %17, align 8
  %65 = getelementptr inbounds %struct.VkDescriptorBufferInfo, %struct.VkDescriptorBufferInfo* %13, i64 %62, i32 0
  %66 = bitcast %struct.VkBuffer_T** %65 to i64*
  store i64 %64, i64* %66, align 8
  %67 = getelementptr inbounds %struct.VkDescriptorBufferInfo, %struct.VkDescriptorBufferInfo* %13, i64 %62, i32 1
  %68 = bitcast i64* %67 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %68, align 8
  %69 = or i64 %62, 1
  %70 = load i64, i64* %17, align 8
  %71 = getelementptr inbounds %struct.VkDescriptorBufferInfo, %struct.VkDescriptorBufferInfo* %13, i64 %69, i32 0
  %72 = bitcast %struct.VkBuffer_T** %71 to i64*
  store i64 %70, i64* %72, align 8
  %73 = getelementptr inbounds %struct.VkDescriptorBufferInfo, %struct.VkDescriptorBufferInfo* %13, i64 %69, i32 1
  %74 = bitcast i64* %73 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %74, align 8
  %75 = or i64 %62, 2
  %76 = load i64, i64* %17, align 8
  %77 = getelementptr inbounds %struct.VkDescriptorBufferInfo, %struct.VkDescriptorBufferInfo* %13, i64 %75, i32 0
  %78 = bitcast %struct.VkBuffer_T** %77 to i64*
  store i64 %76, i64* %78, align 8
  %79 = getelementptr inbounds %struct.VkDescriptorBufferInfo, %struct.VkDescriptorBufferInfo* %13, i64 %75, i32 1
  %80 = bitcast i64* %79 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %80, align 8
  %81 = or i64 %62, 3
  %82 = load i64, i64* %17, align 8
  %83 = getelementptr inbounds %struct.VkDescriptorBufferInfo, %struct.VkDescriptorBufferInfo* %13, i64 %81, i32 0
  %84 = bitcast %struct.VkBuffer_T** %83 to i64*
  store i64 %82, i64* %84, align 8
  %85 = getelementptr inbounds %struct.VkDescriptorBufferInfo, %struct.VkDescriptorBufferInfo* %13, i64 %81, i32 1
  %86 = bitcast i64* %85 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %86, align 8
  %87 = add nuw i64 %62, 4
  %88 = add i64 %63, -4
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %23, label %61

90:                                               ; preds = %5, %60
  ret void
}

declare %struct.VkDescriptorBufferInfo* @_ZN2rx9ContextVk26allocDescriptorBufferInfosEm(%"class.rx::ContextVk"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2rx19TransformFeedbackVk18writeDescriptorSetEPNS_9ContextVkERKNS_30ShaderInterfaceVariableInfoMapEmP22VkDescriptorBufferInfoP17VkDescriptorSet_T(%"class.rx::TransformFeedbackVk"* nocapture readnone, %"class.rx::ContextVk"*, %"class.rx::ShaderInterfaceVariableInfoMap"* dereferenceable(240), i64, %struct.VkDescriptorBufferInfo*, %struct.VkDescriptorSet_T*) local_unnamed_addr #1 align 2 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #7
  %9 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZN2rx16GetXfbBufferNameEj(%"class.std::__1::basic_string"* nonnull sret %7, i32 0) #7
  %10 = call dereferenceable(112) %"struct.rx::ShaderInterfaceVariableInfo"* @_ZNK2rx30ShaderInterfaceVariableInfoMap3getEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"* %2, i8 zeroext 0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #7
  %11 = call %struct.VkWriteDescriptorSet* @_ZN2rx9ContextVk24allocWriteDescriptorSetsEm(%"class.rx::ContextVk"* %1, i64 1) #7
  %12 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %11, i64 0, i32 0
  store i32 35, i32* %12, align 8
  %13 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %11, i64 0, i32 2
  store %struct.VkDescriptorSet_T* %5, %struct.VkDescriptorSet_T** %13, align 8
  %14 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %10, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %11, i64 0, i32 3
  store i32 %15, i32* %16, align 8
  %17 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %11, i64 0, i32 4
  store i32 0, i32* %17, align 4
  %18 = trunc i64 %3 to i32
  %19 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %11, i64 0, i32 5
  store i32 %18, i32* %19, align 8
  %20 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %11, i64 0, i32 6
  store i32 7, i32* %20, align 4
  %21 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %11, i64 0, i32 7
  store %struct.VkDescriptorImageInfo* null, %struct.VkDescriptorImageInfo** %21, align 8
  %22 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %11, i64 0, i32 8
  store %struct.VkDescriptorBufferInfo* %4, %struct.VkDescriptorBufferInfo** %22, align 8
  %23 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %11, i64 0, i32 9
  store %struct.VkBufferView_T** null, %struct.VkBufferView_T*** %23, align 8
  %24 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %6
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %30) #8
  br label %31

31:                                               ; preds = %6, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2rx19TransformFeedbackVk19updateDescriptorSetEPNS_9ContextVkERKN2gl12ProgramStateERKNS_30ShaderInterfaceVariableInfoMapEP17VkDescriptorSet_T(%"class.rx::TransformFeedbackVk"* nocapture readonly, %"class.rx::ContextVk"*, %"class.gl::ProgramState"* nocapture readnone dereferenceable(304), %"class.rx::ShaderInterfaceVariableInfoMap"* dereferenceable(240), %struct.VkDescriptorSet_T*) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %8 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %7, align 8
  %9 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %8, i64 0, i32 7, i32 26, i32 4
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %71, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 0, i32 1
  %14 = load %"class.gl::State"*, %"class.gl::State"** %13, align 8
  %15 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %14, i64 0, i32 65
  %16 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %15, align 8
  %17 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %16, i64 0, i32 27
  %18 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %16, i64 0, i32 27, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector.97"* %17 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = ashr exact i64 %23, 2
  %25 = tail call %struct.VkDescriptorBufferInfo* @_ZN2rx9ContextVk26allocDescriptorBufferInfosEm(%"class.rx::ContextVk"* %1, i64 %24) #7
  %26 = icmp eq i64 %23, 0
  br i1 %26, label %27, label %51

27:                                               ; preds = %51, %12
  %28 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false) #7
  call void @_ZN2rx16GetXfbBufferNameEj(%"class.std::__1::basic_string"* nonnull sret %6, i32 0) #7
  %29 = call dereferenceable(112) %"struct.rx::ShaderInterfaceVariableInfo"* @_ZNK2rx30ShaderInterfaceVariableInfoMap3getEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"* %3, i8 zeroext 0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #7
  %30 = call %struct.VkWriteDescriptorSet* @_ZN2rx9ContextVk24allocWriteDescriptorSetsEm(%"class.rx::ContextVk"* %1, i64 1) #7
  %31 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %30, i64 0, i32 0
  store i32 35, i32* %31, align 8
  %32 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %30, i64 0, i32 2
  store %struct.VkDescriptorSet_T* %4, %struct.VkDescriptorSet_T** %32, align 8
  %33 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %29, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %30, i64 0, i32 3
  store i32 %34, i32* %35, align 8
  %36 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %30, i64 0, i32 4
  store i32 0, i32* %36, align 4
  %37 = trunc i64 %24 to i32
  %38 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %30, i64 0, i32 5
  store i32 %37, i32* %38, align 8
  %39 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %30, i64 0, i32 6
  store i32 7, i32* %39, align 4
  %40 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %30, i64 0, i32 7
  store %struct.VkDescriptorImageInfo* null, %struct.VkDescriptorImageInfo** %40, align 8
  %41 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %30, i64 0, i32 8
  store %struct.VkDescriptorBufferInfo* %25, %struct.VkDescriptorBufferInfo** %41, align 8
  %42 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %30, i64 0, i32 9
  store %struct.VkBufferView_T** null, %struct.VkBufferView_T*** %42, align 8
  %43 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %27
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %49) #8
  br label %50

50:                                               ; preds = %27, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #7
  br label %71

51:                                               ; preds = %12, %51
  %52 = phi i64 [ %69, %51 ], [ 0, %12 ]
  %53 = getelementptr inbounds %struct.VkDescriptorBufferInfo, %struct.VkDescriptorBufferInfo* %25, i64 %52
  %54 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 3, i32 0, i64 %52
  %55 = bitcast %struct.VkBuffer_T** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %struct.VkDescriptorBufferInfo* %53 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 6, i32 0, i64 %52
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %struct.VkDescriptorBufferInfo, %struct.VkDescriptorBufferInfo* %25, i64 %52, i32 1
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 5, i32 0, i64 %52
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 4, i32 0, i64 %52
  %64 = load i64, i64* %63, align 8
  %65 = load i64, i64* %58, align 8
  %66 = add i64 %64, %62
  %67 = sub i64 %66, %65
  %68 = getelementptr inbounds %struct.VkDescriptorBufferInfo, %struct.VkDescriptorBufferInfo* %25, i64 %52, i32 2
  store i64 %67, i64* %68, align 8
  %69 = add nuw i64 %52, 1
  %70 = icmp ult i64 %69, %24
  br i1 %70, label %51, label %27

71:                                               ; preds = %5, %50
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK2rx19TransformFeedbackVk16getBufferOffsetsEPNS_9ContextVkEiPim(%"class.rx::TransformFeedbackVk"* nocapture readonly, %"class.rx::ContextVk"* nocapture readonly, i32, i32* nocapture, i64) local_unnamed_addr #6 align 2 {
  %6 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %7 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %6, align 8
  %8 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %7, i64 0, i32 7, i32 26, i32 4
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %64, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 0, i32 1
  %13 = load %"class.gl::State"*, %"class.gl::State"** %12, align 8
  %14 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %13, i64 0, i32 65
  %15 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %14, align 8
  %16 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %15, i64 0, i32 27
  %17 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %15, i64 0, i32 27, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.97"* %16 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 2
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %64, label %25

25:                                               ; preds = %11
  %26 = inttoptr i64 %21 to i32*
  %27 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 0, i32 1
  %28 = load %"class.gl::TransformFeedbackState"*, %"class.gl::TransformFeedbackState"** %27, align 8
  %29 = getelementptr inbounds %"class.gl::TransformFeedbackState", %"class.gl::TransformFeedbackState"* %28, i64 0, i32 4
  %30 = load i64, i64* %29, align 8
  %31 = sext i32 %2 to i64
  %32 = sub nsw i64 %30, %31
  %33 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %16, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 4, i32 0, i64 0
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 6, i32 0, i64 0
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %35, %37
  %39 = load i32, i32* %26, align 4
  %40 = sext i32 %39 to i64
  %41 = mul nsw i64 %32, %40
  %42 = add nsw i64 %38, %41
  %43 = sdiv i64 %42, 4
  %44 = trunc i64 %43 to i32
  store i32 %44, i32* %3, align 4
  %45 = icmp ugt i64 %23, 1
  br i1 %45, label %46, label %64

46:                                               ; preds = %25, %46
  %47 = phi i64 [ %62, %46 ], [ 1, %25 ]
  %48 = load i32*, i32** %33, align 8
  %49 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 4, i32 0, i64 %47
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.rx::TransformFeedbackVk", %"class.rx::TransformFeedbackVk"* %0, i64 0, i32 6, i32 0, i64 %47
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = getelementptr inbounds i32, i32* %48, i64 %47
  %55 = load i32, i32* %54, align 4
  %56 = sext i32 %55 to i64
  %57 = mul nsw i64 %32, %56
  %58 = add nsw i64 %53, %57
  %59 = sdiv i64 %58, 4
  %60 = trunc i64 %59 to i32
  %61 = getelementptr inbounds i32, i32* %3, i64 %47
  store i32 %60, i32* %61, align 4
  %62 = add nuw i64 %47, 1
  %63 = icmp ult i64 %62, %23
  br i1 %63, label %46, label %64

64:                                               ; preds = %46, %25, %11, %5
  ret void
}

declare void @_ZN2rx2vk12BufferHelperC1Ev(%"class.rx::vk::BufferHelper"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2rx2vk12BufferHelperD1Ev(%"class.rx::vk::BufferHelper"*) unnamed_addr #3

declare %struct.VkWriteDescriptorSet* @_ZN2rx9ContextVk24allocWriteDescriptorSetsEm(%"class.rx::ContextVk"*, i64) local_unnamed_addr #2

declare %"class.rx::QueryImpl"* @_ZNK2gl5Query17getImplementationEv(%"class.gl::Query"*) local_unnamed_addr #2

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
