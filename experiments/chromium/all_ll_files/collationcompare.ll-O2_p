; ModuleID = '../../third_party/icu/source/i18n/collationcompare.cpp'
source_filename = "../../third_party/icu/source/i18n/collationcompare.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::CollationIterator" = type <{ %"class.icu_69::UObject", %struct.UTrie2*, %"struct.icu_69::CollationData"*, %"class.icu_69::CollationIterator::CEBuffer", i32, [4 x i8], %"class.icu_69::SkippedState"*, i32, i8, [3 x i8] }>
%"class.icu_69::UObject" = type { i32 (...)** }
%struct.UTrie2 = type { i16*, i16*, i32*, i32, i32, i16, i16, i32, i32, i32, i32, i8*, i32, i8, i8, i16, %struct.UNewTrie2* }
%struct.UNewTrie2 = type opaque
%"struct.icu_69::CollationData" = type <{ %struct.UTrie2*, i32*, i64*, i16*, %"struct.icu_69::CollationData"*, i32*, %"class.icu_69::Normalizer2Impl"*, i32, i32, i32, i32, i8*, %"class.icu_69::UnicodeSet"*, i16*, i32, i32, i16*, i16*, i32, [4 x i8], i32*, i32, [4 x i8] }>
%"class.icu_69::Normalizer2Impl" = type { %"class.icu_69::UObject", i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.UCPTrie*, i16*, i16*, i8*, %"struct.icu_69::UInitOnce", %"struct.icu_69::CanonIterData"* }
%struct.UCPTrie = type { i16*, %union.UCPTrieData, i32, i32, i32, i16, i8, i8, i32, i16, i16, i32, i32 }
%union.UCPTrieData = type { i8* }
%"struct.icu_69::UInitOnce" = type { %"struct.std::__1::atomic", i32 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.icu_69::CanonIterData" = type opaque
%"class.icu_69::UnicodeSet" = type <{ %"class.icu_69::UnicodeFilter", i32*, i32, i32, i8, [7 x i8], %"class.icu_69::BMPSet"*, i32*, i32, [4 x i8], i16*, i32, [4 x i8], %"class.icu_69::UVector"*, %"class.icu_69::UnicodeSetStringSpan"*, [25 x i32], [4 x i8] }>
%"class.icu_69::UnicodeFilter" = type { %"class.icu_69::UnicodeFunctor", %"class.icu_69::UnicodeMatcher" }
%"class.icu_69::UnicodeFunctor" = type { %"class.icu_69::UObject" }
%"class.icu_69::UnicodeMatcher" = type { i32 (...)** }
%"class.icu_69::BMPSet" = type opaque
%"class.icu_69::UVector" = type opaque
%"class.icu_69::UnicodeSetStringSpan" = type opaque
%"class.icu_69::CollationIterator::CEBuffer" = type { i32, %"class.icu_69::MaybeStackArray" }
%"class.icu_69::MaybeStackArray" = type { i64*, i32, i8, [40 x i64] }
%"class.icu_69::SkippedState" = type opaque
%"struct.icu_69::CollationSettings" = type <{ %"class.icu_69::SharedObject", i32, i32, i8*, i32, [4 x i8], i32*, i32, [4 x i8], i32*, i32, i32, i32, [384 x i16], [4 x i8] }>
%"class.icu_69::SharedObject" = type { %"class.icu_69::UObject", i32, %"struct.std::__1::atomic", %"class.icu_69::UnifiedCacheBase"* }
%"class.icu_69::UnifiedCacheBase" = type { %"class.icu_69::UObject" }

$_ZN6icu_6917CollationIterator6nextCEER10UErrorCode = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6916CollationCompare21compareUpToQuaternaryERNS_17CollationIteratorES2_RKNS_17CollationSettingsER10UErrorCode(%"class.icu_69::CollationIterator"* dereferenceable(392), %"class.icu_69::CollationIterator"* dereferenceable(392), %"struct.icu_69::CollationSettings"* dereferenceable(856), i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %508

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"struct.icu_69::CollationSettings", %"struct.icu_69::CollationSettings"* %2, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 12
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"struct.icu_69::CollationSettings", %"struct.icu_69::CollationSettings"* %2, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = add i32 %14, 1
  br label %16

16:                                               ; preds = %7, %12
  %17 = phi i32 [ %15, %12 ], [ 0, %7 ]
  %18 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 4
  %19 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %20 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %1, i64 0, i32 4
  %21 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %1, i64 0, i32 3, i32 1, i32 0
  br label %22

22:                                               ; preds = %153, %16
  %23 = phi i8 [ 0, %16 ], [ %109, %153 ]
  br label %24

24:                                               ; preds = %60, %22
  %25 = tail call i64 @_ZN6icu_6917CollationIterator6nextCEER10UErrorCode(%"class.icu_69::CollationIterator"* %0, i32* dereferenceable(4) %3)
  %26 = lshr i64 %25, 32
  %27 = trunc i64 %26 to i32
  %28 = icmp ugt i32 %17, %27
  %29 = icmp ugt i32 %27, 33554432
  %30 = and i1 %28, %29
  br i1 %30, label %31, label %60

31:                                               ; preds = %24, %54
  %32 = phi i64 [ %55, %54 ], [ %25, %24 ]
  %33 = and i64 %32, -4294967296
  %34 = load i32, i32* %18, align 8
  %35 = add nsw i32 %34, -1
  %36 = sext i32 %35 to i64
  %37 = load i64*, i64** %19, align 8
  %38 = getelementptr inbounds i64, i64* %37, i64 %36
  store i64 %33, i64* %38, align 8
  %39 = tail call i64 @_ZN6icu_6917CollationIterator6nextCEER10UErrorCode(%"class.icu_69::CollationIterator"* %0, i32* dereferenceable(4) %3)
  %40 = lshr i64 %39, 32
  %41 = trunc i64 %40 to i32
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %54

43:                                               ; preds = %31, %43
  %44 = load i32, i32* %18, align 8
  %45 = add nsw i32 %44, -1
  %46 = sext i32 %45 to i64
  %47 = load i64*, i64** %19, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 %46
  store i64 0, i64* %48, align 8
  %49 = tail call i64 @_ZN6icu_6917CollationIterator6nextCEER10UErrorCode(%"class.icu_69::CollationIterator"* %0, i32* dereferenceable(4) %3)
  %50 = lshr i64 %49, 32
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %43, label %52

52:                                               ; preds = %43
  %53 = trunc i64 %50 to i32
  br label %54

54:                                               ; preds = %52, %31
  %55 = phi i64 [ %49, %52 ], [ %39, %31 ]
  %56 = phi i32 [ %53, %52 ], [ %41, %31 ]
  %57 = icmp ugt i32 %17, %56
  %58 = icmp ugt i32 %56, 33554432
  %59 = and i1 %57, %58
  br i1 %59, label %31, label %64

60:                                               ; preds = %24
  %61 = icmp eq i32 %27, 0
  br i1 %61, label %24, label %62

62:                                               ; preds = %60
  %63 = trunc i64 %26 to i32
  br label %64

64:                                               ; preds = %54, %62
  %65 = phi i32 [ %63, %62 ], [ %56, %54 ]
  %66 = phi i8 [ %23, %62 ], [ 1, %54 ]
  br label %67

67:                                               ; preds = %64, %103
  %68 = tail call i64 @_ZN6icu_6917CollationIterator6nextCEER10UErrorCode(%"class.icu_69::CollationIterator"* %1, i32* dereferenceable(4) %3)
  %69 = lshr i64 %68, 32
  %70 = trunc i64 %69 to i32
  %71 = icmp ugt i32 %17, %70
  %72 = icmp ugt i32 %70, 33554432
  %73 = and i1 %71, %72
  br i1 %73, label %74, label %103

74:                                               ; preds = %67, %97
  %75 = phi i64 [ %98, %97 ], [ %68, %67 ]
  %76 = and i64 %75, -4294967296
  %77 = load i32, i32* %20, align 8
  %78 = add nsw i32 %77, -1
  %79 = sext i32 %78 to i64
  %80 = load i64*, i64** %21, align 8
  %81 = getelementptr inbounds i64, i64* %80, i64 %79
  store i64 %76, i64* %81, align 8
  %82 = tail call i64 @_ZN6icu_6917CollationIterator6nextCEER10UErrorCode(%"class.icu_69::CollationIterator"* %1, i32* dereferenceable(4) %3)
  %83 = lshr i64 %82, 32
  %84 = trunc i64 %83 to i32
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %97

86:                                               ; preds = %74, %86
  %87 = load i32, i32* %20, align 8
  %88 = add nsw i32 %87, -1
  %89 = sext i32 %88 to i64
  %90 = load i64*, i64** %21, align 8
  %91 = getelementptr inbounds i64, i64* %90, i64 %89
  store i64 0, i64* %91, align 8
  %92 = tail call i64 @_ZN6icu_6917CollationIterator6nextCEER10UErrorCode(%"class.icu_69::CollationIterator"* %1, i32* dereferenceable(4) %3)
  %93 = lshr i64 %92, 32
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %86, label %95

95:                                               ; preds = %86
  %96 = trunc i64 %93 to i32
  br label %97

97:                                               ; preds = %95, %74
  %98 = phi i64 [ %92, %95 ], [ %82, %74 ]
  %99 = phi i32 [ %96, %95 ], [ %84, %74 ]
  %100 = icmp ugt i32 %17, %99
  %101 = icmp ugt i32 %99, 33554432
  %102 = and i1 %100, %101
  br i1 %102, label %74, label %107

103:                                              ; preds = %67
  %104 = icmp eq i32 %70, 0
  br i1 %104, label %67, label %105

105:                                              ; preds = %103
  %106 = trunc i64 %69 to i32
  br label %107

107:                                              ; preds = %97, %105
  %108 = phi i32 [ %106, %105 ], [ %99, %97 ]
  %109 = phi i8 [ %66, %105 ], [ 1, %97 ]
  %110 = icmp eq i32 %65, %108
  br i1 %110, label %153, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"struct.icu_69::CollationSettings", %"struct.icu_69::CollationSettings"* %2, i64 0, i32 3
  %113 = load i8*, i8** %112, align 8
  %114 = icmp eq i8* %113, null
  br i1 %114, label %148, label %115

115:                                              ; preds = %111
  %116 = lshr i32 %65, 24
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* %113, i64 %117
  %119 = load i8, i8* %118, align 1
  %120 = icmp ne i8 %119, 0
  %121 = icmp ult i32 %65, 2
  %122 = or i1 %121, %120
  br i1 %122, label %123, label %128

123:                                              ; preds = %115
  %124 = zext i8 %119 to i32
  %125 = shl nuw i32 %124, 24
  %126 = and i32 %65, 16777215
  %127 = or i32 %125, %126
  br label %131

128:                                              ; preds = %115
  %129 = tail call i32 @_ZNK6icu_6917CollationSettings9reorderExEj(%"struct.icu_69::CollationSettings"* %2, i32 %65) #4
  %130 = load i8*, i8** %112, align 8
  br label %131

131:                                              ; preds = %123, %128
  %132 = phi i8* [ %113, %123 ], [ %130, %128 ]
  %133 = phi i32 [ %127, %123 ], [ %129, %128 ]
  %134 = lshr i32 %108, 24
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds i8, i8* %132, i64 %135
  %137 = load i8, i8* %136, align 1
  %138 = icmp ne i8 %137, 0
  %139 = icmp ult i32 %108, 2
  %140 = or i1 %139, %138
  br i1 %140, label %141, label %146

141:                                              ; preds = %131
  %142 = zext i8 %137 to i32
  %143 = shl nuw i32 %142, 24
  %144 = and i32 %108, 16777215
  %145 = or i32 %143, %144
  br label %148

146:                                              ; preds = %131
  %147 = tail call i32 @_ZNK6icu_6917CollationSettings9reorderExEj(%"struct.icu_69::CollationSettings"* %2, i32 %108) #4
  br label %148

148:                                              ; preds = %111, %141, %146
  %149 = phi i32 [ %65, %111 ], [ %133, %141 ], [ %133, %146 ]
  %150 = phi i32 [ %108, %111 ], [ %145, %141 ], [ %147, %146 ]
  %151 = icmp ult i32 %149, %150
  %152 = select i1 %151, i32 -1, i32 1
  br label %508

153:                                              ; preds = %107
  %154 = icmp eq i32 %65, 1
  br i1 %154, label %155, label %22

155:                                              ; preds = %153
  %156 = load i32, i32* %3, align 4
  %157 = icmp slt i32 %156, 1
  br i1 %157, label %158, label %508

158:                                              ; preds = %155
  %159 = icmp sgt i32 %9, 4095
  br i1 %159, label %160, label %282

160:                                              ; preds = %158
  %161 = and i32 %9, 2048
  %162 = icmp eq i32 %161, 0
  %163 = load i64*, i64** %19, align 8
  %164 = load i64*, i64** %21, align 8
  br i1 %162, label %165, label %198

165:                                              ; preds = %160, %190
  %166 = phi i32 [ %196, %190 ], [ undef, %160 ]
  %167 = phi i64 [ %173, %190 ], [ 0, %160 ]
  %168 = phi i64 [ %184, %190 ], [ 0, %160 ]
  %169 = shl i64 %167, 32
  %170 = ashr exact i64 %169, 32
  br label %171

171:                                              ; preds = %171, %165
  %172 = phi i64 [ %173, %171 ], [ %170, %165 ]
  %173 = add i64 %172, 1
  %174 = getelementptr inbounds i64, i64* %163, i64 %172
  %175 = load i64, i64* %174, align 8
  %176 = trunc i64 %175 to i32
  %177 = lshr i32 %176, 16
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %171, label %179

179:                                              ; preds = %171
  %180 = shl i64 %168, 32
  %181 = ashr exact i64 %180, 32
  br label %182

182:                                              ; preds = %179, %182
  %183 = phi i64 [ %181, %179 ], [ %184, %182 ]
  %184 = add i64 %183, 1
  %185 = getelementptr inbounds i64, i64* %164, i64 %183
  %186 = load i64, i64* %185, align 8
  %187 = trunc i64 %186 to i32
  %188 = lshr i32 %187, 16
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %182, label %190

190:                                              ; preds = %182
  %191 = icmp eq i32 %177, %188
  %192 = icmp ult i32 %177, %188
  %193 = select i1 %192, i32 -1, i32 1
  %194 = icmp eq i32 %177, 256
  %195 = select i1 %194, i32 16, i32 0
  %196 = select i1 %191, i32 %166, i32 %193
  %197 = select i1 %191, i32 %195, i32 1
  switch i32 %197, label %508 [
    i32 0, label %165
    i32 16, label %282
  ]

198:                                              ; preds = %160, %278
  %199 = phi i32 [ %271, %278 ], [ undef, %160 ]
  %200 = phi i32 [ %280, %278 ], [ 0, %160 ]
  %201 = phi i32 [ %281, %278 ], [ 0, %160 ]
  %202 = sext i32 %200 to i64
  br label %203

203:                                              ; preds = %203, %198
  %204 = phi i64 [ %211, %203 ], [ %202, %198 ]
  %205 = getelementptr inbounds i64, i64* %163, i64 %204
  %206 = load i64, i64* %205, align 8
  %207 = lshr i64 %206, 32
  %208 = trunc i64 %207 to i32
  %209 = add i32 %208, -1
  %210 = icmp ugt i32 %209, 33554431
  %211 = add i64 %204, 1
  br i1 %210, label %203, label %212

212:                                              ; preds = %203
  %213 = sext i32 %201 to i64
  br label %214

214:                                              ; preds = %214, %212
  %215 = phi i64 [ %222, %214 ], [ %213, %212 ]
  %216 = getelementptr inbounds i64, i64* %164, i64 %215
  %217 = load i64, i64* %216, align 8
  %218 = lshr i64 %217, 32
  %219 = trunc i64 %218 to i32
  %220 = add i32 %219, -1
  %221 = icmp ugt i32 %220, 33554431
  %222 = add i64 %215, 1
  br i1 %221, label %214, label %223

223:                                              ; preds = %214
  %224 = trunc i64 %204 to i32
  %225 = trunc i64 %215 to i32
  br label %226

226:                                              ; preds = %223, %264
  %227 = phi i32 [ %271, %264 ], [ %199, %223 ]
  %228 = phi i32 [ %236, %264 ], [ %224, %223 ]
  %229 = phi i32 [ %265, %264 ], [ %225, %223 ]
  %230 = icmp sgt i32 %228, %200
  br i1 %230, label %231, label %235

231:                                              ; preds = %226
  %232 = sext i32 %228 to i64
  br label %242

233:                                              ; preds = %242
  %234 = trunc i64 %244 to i32
  br label %235

235:                                              ; preds = %233, %226
  %236 = phi i32 [ %228, %226 ], [ %234, %233 ]
  %237 = phi i32 [ 0, %226 ], [ %248, %233 ]
  %238 = phi i1 [ true, %226 ], [ %249, %233 ]
  %239 = icmp sgt i32 %229, %201
  br i1 %239, label %240, label %264

240:                                              ; preds = %235
  %241 = sext i32 %229 to i64
  br label %252

242:                                              ; preds = %231, %242
  %243 = phi i64 [ %232, %231 ], [ %244, %242 ]
  %244 = add nsw i64 %243, -1
  %245 = getelementptr inbounds i64, i64* %163, i64 %244
  %246 = load i64, i64* %245, align 8
  %247 = trunc i64 %246 to i32
  %248 = lshr i32 %247, 16
  %249 = icmp eq i32 %248, 0
  %250 = icmp sgt i64 %244, %202
  %251 = and i1 %250, %249
  br i1 %251, label %242, label %233

252:                                              ; preds = %240, %252
  %253 = phi i64 [ %241, %240 ], [ %254, %252 ]
  %254 = add nsw i64 %253, -1
  %255 = getelementptr inbounds i64, i64* %164, i64 %254
  %256 = load i64, i64* %255, align 8
  %257 = trunc i64 %256 to i32
  %258 = lshr i32 %257, 16
  %259 = icmp eq i32 %258, 0
  %260 = icmp sgt i64 %254, %213
  %261 = and i1 %260, %259
  br i1 %261, label %252, label %262

262:                                              ; preds = %252
  %263 = trunc i64 %254 to i32
  br label %264

264:                                              ; preds = %262, %235
  %265 = phi i32 [ %229, %235 ], [ %263, %262 ]
  %266 = phi i32 [ 0, %235 ], [ %258, %262 ]
  %267 = icmp eq i32 %237, %266
  %268 = icmp ult i32 %237, %266
  %269 = select i1 %268, i32 -1, i32 1
  %270 = select i1 %238, i32 28, i32 0
  %271 = select i1 %267, i32 %227, i32 %269
  %272 = select i1 %267, i32 %270, i32 1
  switch i32 %272, label %278 [
    i32 0, label %226
    i32 28, label %273
  ]

273:                                              ; preds = %264
  %274 = icmp eq i64 %218, 1
  br i1 %274, label %282, label %275

275:                                              ; preds = %273
  %276 = add nsw i32 %224, 1
  %277 = add nsw i32 %225, 1
  br label %278

278:                                              ; preds = %264, %275
  %279 = phi i32 [ 0, %275 ], [ %272, %264 ]
  %280 = phi i32 [ %276, %275 ], [ %200, %264 ]
  %281 = phi i32 [ %277, %275 ], [ %201, %264 ]
  switch i32 %279, label %508 [
    i32 0, label %198
    i32 22, label %282
  ]

282:                                              ; preds = %273, %278, %190, %158
  %283 = and i32 %9, 1024
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %353, label %285

285:                                              ; preds = %282
  %286 = icmp ult i32 %9, 4096
  %287 = load i64*, i64** %19, align 8
  br label %288

288:                                              ; preds = %285, %349
  %289 = phi i64 [ %334, %349 ], [ 0, %285 ]
  %290 = phi i32 [ %350, %349 ], [ 0, %285 ]
  %291 = shl i64 %289, 32
  %292 = ashr exact i64 %291, 32
  br i1 %286, label %293, label %314

293:                                              ; preds = %288, %293
  %294 = phi i64 [ %295, %293 ], [ %292, %288 ]
  %295 = add i64 %294, 1
  %296 = getelementptr inbounds i64, i64* %287, i64 %294
  %297 = load i64, i64* %296, align 8
  %298 = trunc i64 %297 to i32
  %299 = icmp ult i64 %297, 4294967296
  %300 = icmp eq i32 %298, 0
  %301 = or i1 %299, %300
  br i1 %301, label %293, label %302

302:                                              ; preds = %293
  %303 = load i64*, i64** %21, align 8
  %304 = sext i32 %290 to i64
  br label %305

305:                                              ; preds = %302, %305
  %306 = phi i64 [ %304, %302 ], [ %307, %305 ]
  %307 = add i64 %306, 1
  %308 = getelementptr inbounds i64, i64* %303, i64 %306
  %309 = load i64, i64* %308, align 8
  %310 = trunc i64 %309 to i32
  %311 = icmp ult i64 %309, 4294967296
  %312 = icmp eq i32 %310, 0
  %313 = or i1 %311, %312
  br i1 %313, label %305, label %331

314:                                              ; preds = %288, %314
  %315 = phi i64 [ %316, %314 ], [ %292, %288 ]
  %316 = add i64 %315, 1
  %317 = getelementptr inbounds i64, i64* %287, i64 %315
  %318 = load i64, i64* %317, align 8
  %319 = trunc i64 %318 to i32
  %320 = icmp ult i32 %319, 65536
  br i1 %320, label %314, label %321

321:                                              ; preds = %314
  %322 = load i64*, i64** %21, align 8
  %323 = sext i32 %290 to i64
  br label %324

324:                                              ; preds = %321, %324
  %325 = phi i64 [ %323, %321 ], [ %326, %324 ]
  %326 = add i64 %325, 1
  %327 = getelementptr inbounds i64, i64* %322, i64 %325
  %328 = load i64, i64* %327, align 8
  %329 = trunc i64 %328 to i32
  %330 = icmp ult i32 %329, 65536
  br i1 %330, label %324, label %331

331:                                              ; preds = %324, %305
  %332 = phi i64 [ %297, %305 ], [ %318, %324 ]
  %333 = phi i64 [ %309, %305 ], [ %328, %324 ]
  %334 = phi i64 [ %295, %305 ], [ %316, %324 ]
  %335 = phi i64 [ %307, %305 ], [ %326, %324 ]
  %336 = trunc i64 %333 to i32
  %337 = trunc i64 %332 to i32
  %338 = and i32 %336, 49152
  %339 = and i32 %337, 49152
  %340 = icmp eq i32 %339, %338
  br i1 %340, label %349, label %341

341:                                              ; preds = %331
  %342 = and i32 %9, 256
  %343 = icmp eq i32 %342, 0
  %344 = icmp ult i32 %339, %338
  br i1 %343, label %345, label %347

345:                                              ; preds = %341
  %346 = select i1 %344, i32 -1, i32 1
  br label %508

347:                                              ; preds = %341
  %348 = select i1 %344, i32 1, i32 -1
  br label %508

349:                                              ; preds = %331
  %350 = trunc i64 %335 to i32
  %351 = and i32 %337, -65536
  %352 = icmp eq i32 %351, 16777216
  br i1 %352, label %353, label %288

353:                                              ; preds = %349, %282
  %354 = icmp slt i32 %9, 8192
  br i1 %354, label %508, label %355

355:                                              ; preds = %353
  %356 = and i32 %9, 1536
  %357 = icmp eq i32 %356, 512
  %358 = select i1 %357, i32 65343, i32 16191
  %359 = load i64*, i64** %19, align 8
  %360 = load i64*, i64** %21, align 8
  br label %361

361:                                              ; preds = %419, %355
  %362 = phi i64 [ 0, %355 ], [ %370, %419 ]
  %363 = phi i64 [ 0, %355 ], [ %383, %419 ]
  %364 = phi i32 [ 0, %355 ], [ %387, %419 ]
  %365 = shl i64 %362, 32
  %366 = ashr exact i64 %365, 32
  br label %367

367:                                              ; preds = %367, %361
  %368 = phi i64 [ %370, %367 ], [ %366, %361 ]
  %369 = phi i32 [ %374, %367 ], [ %364, %361 ]
  %370 = add i64 %368, 1
  %371 = getelementptr inbounds i64, i64* %359, i64 %368
  %372 = load i64, i64* %371, align 8
  %373 = trunc i64 %372 to i32
  %374 = or i32 %369, %373
  %375 = and i32 %358, %373
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %367, label %377

377:                                              ; preds = %367
  %378 = shl i64 %363, 32
  %379 = ashr exact i64 %378, 32
  br label %380

380:                                              ; preds = %377, %380
  %381 = phi i64 [ %379, %377 ], [ %383, %380 ]
  %382 = phi i32 [ %374, %377 ], [ %387, %380 ]
  %383 = add i64 %381, 1
  %384 = getelementptr inbounds i64, i64* %360, i64 %381
  %385 = load i64, i64* %384, align 8
  %386 = trunc i64 %385 to i32
  %387 = or i32 %382, %386
  %388 = and i32 %358, %386
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %380, label %390

390:                                              ; preds = %380
  %391 = icmp eq i32 %375, %388
  br i1 %391, label %419, label %392

392:                                              ; preds = %390
  %393 = trunc i64 %372 to i32
  %394 = trunc i64 %385 to i32
  %395 = and i32 %9, 1792
  %396 = icmp eq i32 %395, 768
  br i1 %396, label %397, label %414

397:                                              ; preds = %392
  %398 = icmp ugt i32 %375, 256
  br i1 %398, label %399, label %405

399:                                              ; preds = %397
  %400 = icmp ugt i32 %393, 65535
  br i1 %400, label %401, label %403

401:                                              ; preds = %399
  %402 = xor i32 %375, 49152
  br label %405

403:                                              ; preds = %399
  %404 = add nuw nsw i32 %375, 16384
  br label %405

405:                                              ; preds = %401, %403, %397
  %406 = phi i32 [ %402, %401 ], [ %404, %403 ], [ %375, %397 ]
  %407 = icmp ugt i32 %388, 256
  br i1 %407, label %408, label %414

408:                                              ; preds = %405
  %409 = icmp ugt i32 %394, 65535
  br i1 %409, label %410, label %412

410:                                              ; preds = %408
  %411 = xor i32 %388, 49152
  br label %414

412:                                              ; preds = %408
  %413 = add nuw nsw i32 %388, 16384
  br label %414

414:                                              ; preds = %392, %410, %412, %405
  %415 = phi i32 [ %406, %410 ], [ %406, %412 ], [ %406, %405 ], [ %375, %392 ]
  %416 = phi i32 [ %411, %410 ], [ %413, %412 ], [ %388, %405 ], [ %388, %392 ]
  %417 = icmp ult i32 %415, %416
  %418 = select i1 %417, i32 -1, i32 1
  br label %508

419:                                              ; preds = %390
  %420 = icmp eq i32 %375, 256
  br i1 %420, label %421, label %361

421:                                              ; preds = %419
  %422 = icmp slt i32 %9, 12288
  br i1 %422, label %508, label %423

423:                                              ; preds = %421
  %424 = icmp eq i8 %109, 0
  %425 = and i32 %387, 192
  %426 = icmp eq i32 %425, 0
  %427 = and i1 %424, %426
  br i1 %427, label %508, label %428

428:                                              ; preds = %423, %506
  %429 = phi i64 [ %435, %506 ], [ 0, %423 ]
  %430 = phi i64 [ %451, %506 ], [ 0, %423 ]
  %431 = shl i64 %429, 32
  %432 = ashr exact i64 %431, 32
  br label %433

433:                                              ; preds = %433, %428
  %434 = phi i64 [ %435, %433 ], [ %432, %428 ]
  %435 = add i64 %434, 1
  %436 = getelementptr inbounds i64, i64* %359, i64 %434
  %437 = load i64, i64* %436, align 8
  %438 = trunc i64 %437 to i32
  %439 = and i32 %438, 65535
  %440 = icmp ult i32 %439, 257
  %441 = lshr i64 %437, 32
  %442 = trunc i64 %441 to i32
  %443 = or i32 %438, -193
  %444 = select i1 %440, i32 %442, i32 %443
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %433, label %446

446:                                              ; preds = %433
  %447 = shl i64 %430, 32
  %448 = ashr exact i64 %447, 32
  br label %449

449:                                              ; preds = %446, %449
  %450 = phi i64 [ %448, %446 ], [ %451, %449 ]
  %451 = add i64 %450, 1
  %452 = getelementptr inbounds i64, i64* %360, i64 %450
  %453 = load i64, i64* %452, align 8
  %454 = trunc i64 %453 to i32
  %455 = and i32 %454, 65535
  %456 = icmp ult i32 %455, 257
  %457 = lshr i64 %453, 32
  %458 = trunc i64 %457 to i32
  %459 = or i32 %454, -193
  %460 = select i1 %456, i32 %458, i32 %459
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %449, label %462

462:                                              ; preds = %449
  %463 = icmp eq i32 %444, %460
  br i1 %463, label %506, label %464

464:                                              ; preds = %462
  %465 = getelementptr inbounds %"struct.icu_69::CollationSettings", %"struct.icu_69::CollationSettings"* %2, i64 0, i32 3
  %466 = load i8*, i8** %465, align 8
  %467 = icmp eq i8* %466, null
  br i1 %467, label %501, label %468

468:                                              ; preds = %464
  %469 = lshr i32 %444, 24
  %470 = zext i32 %469 to i64
  %471 = getelementptr inbounds i8, i8* %466, i64 %470
  %472 = load i8, i8* %471, align 1
  %473 = icmp ne i8 %472, 0
  %474 = icmp ult i32 %444, 2
  %475 = or i1 %474, %473
  br i1 %475, label %476, label %481

476:                                              ; preds = %468
  %477 = zext i8 %472 to i32
  %478 = shl nuw i32 %477, 24
  %479 = and i32 %444, 16777215
  %480 = or i32 %478, %479
  br label %484

481:                                              ; preds = %468
  %482 = tail call i32 @_ZNK6icu_6917CollationSettings9reorderExEj(%"struct.icu_69::CollationSettings"* %2, i32 %444) #4
  %483 = load i8*, i8** %465, align 8
  br label %484

484:                                              ; preds = %476, %481
  %485 = phi i8* [ %466, %476 ], [ %483, %481 ]
  %486 = phi i32 [ %480, %476 ], [ %482, %481 ]
  %487 = lshr i32 %460, 24
  %488 = zext i32 %487 to i64
  %489 = getelementptr inbounds i8, i8* %485, i64 %488
  %490 = load i8, i8* %489, align 1
  %491 = icmp ne i8 %490, 0
  %492 = icmp ult i32 %460, 2
  %493 = or i1 %492, %491
  br i1 %493, label %494, label %499

494:                                              ; preds = %484
  %495 = zext i8 %490 to i32
  %496 = shl nuw i32 %495, 24
  %497 = and i32 %460, 16777215
  %498 = or i32 %496, %497
  br label %501

499:                                              ; preds = %484
  %500 = tail call i32 @_ZNK6icu_6917CollationSettings9reorderExEj(%"struct.icu_69::CollationSettings"* %2, i32 %460) #4
  br label %501

501:                                              ; preds = %464, %494, %499
  %502 = phi i32 [ %444, %464 ], [ %486, %494 ], [ %486, %499 ]
  %503 = phi i32 [ %460, %464 ], [ %498, %494 ], [ %500, %499 ]
  %504 = icmp ult i32 %502, %503
  %505 = select i1 %504, i32 -1, i32 1
  br label %508

506:                                              ; preds = %462
  %507 = icmp eq i32 %444, 1
  br i1 %507, label %508, label %428

508:                                              ; preds = %278, %190, %506, %501, %414, %347, %345, %148, %155, %353, %423, %421, %4
  %509 = phi i32 [ 0, %4 ], [ 0, %155 ], [ 0, %353 ], [ 0, %421 ], [ 0, %423 ], [ %152, %148 ], [ %348, %347 ], [ %346, %345 ], [ %418, %414 ], [ %505, %501 ], [ 0, %506 ], [ %196, %190 ], [ %271, %278 ]
  ret i32 %509
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN6icu_6917CollationIterator6nextCEER10UErrorCode(%"class.icu_69::CollationIterator"*, i32* dereferenceable(4)) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.icu_69::CollationIterator::CEBuffer", %"class.icu_69::CollationIterator::CEBuffer"* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp slt i32 %5, %8
  br i1 %9, label %10, label %17

10:                                               ; preds = %2
  %11 = add nsw i32 %5, 1
  store i32 %11, i32* %4, align 8
  %12 = sext i32 %5 to i64
  %13 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds i64, i64* %14, i64 %12
  %16 = load i64, i64* %15, align 8
  br label %177

17:                                               ; preds = %2
  %18 = icmp slt i32 %8, 40
  br i1 %18, label %24, label %19

19:                                               ; preds = %17
  %20 = tail call signext i8 @_ZN6icu_6917CollationIterator8CEBuffer20ensureAppendCapacityEiR10UErrorCode(%"class.icu_69::CollationIterator::CEBuffer"* %6, i32 1, i32* dereferenceable(4) %1) #4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %177, label %22

22:                                               ; preds = %19
  %23 = load i32, i32* %7, align 8
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i32 [ %23, %22 ], [ %8, %17 ]
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %7, align 8
  %27 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #4
  store i32 -1431655766, i32* %3, align 4
  %28 = bitcast %"class.icu_69::CollationIterator"* %0 to i32 (%"class.icu_69::CollationIterator"*, i32*, i32*)***
  %29 = load i32 (%"class.icu_69::CollationIterator"*, i32*, i32*)**, i32 (%"class.icu_69::CollationIterator"*, i32*, i32*)*** %28, align 8
  %30 = getelementptr inbounds i32 (%"class.icu_69::CollationIterator"*, i32*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*, i32*)** %29, i64 8
  %31 = load i32 (%"class.icu_69::CollationIterator"*, i32*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*, i32*)** %30, align 8
  %32 = call i32 %31(%"class.icu_69::CollationIterator"* %0, i32* nonnull dereferenceable(4) %3, i32* dereferenceable(4) %1) #4
  %33 = and i32 %32, 255
  %34 = icmp ult i32 %33, 192
  br i1 %34, label %35, label %52

35:                                               ; preds = %24
  %36 = load i32, i32* %4, align 8
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %4, align 8
  %38 = and i32 %32, -65536
  %39 = zext i32 %38 to i64
  %40 = shl nuw i64 %39, 32
  %41 = shl i32 %32, 16
  %42 = and i32 %41, -16777216
  %43 = zext i32 %42 to i64
  %44 = or i64 %40, %43
  %45 = shl nuw nsw i32 %33, 8
  %46 = zext i32 %45 to i64
  %47 = or i64 %44, %46
  %48 = sext i32 %36 to i64
  %49 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = getelementptr inbounds i64, i64* %50, i64 %48
  store i64 %47, i64* %51, align 8
  br label %175

52:                                               ; preds = %24
  %53 = icmp eq i32 %33, 192
  br i1 %53, label %54, label %153

54:                                               ; preds = %52
  %55 = load i32, i32* %3, align 4
  %56 = icmp slt i32 %55, 0
  br i1 %56, label %57, label %64

57:                                               ; preds = %54
  %58 = load i32, i32* %4, align 8
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %4, align 8
  %60 = sext i32 %58 to i64
  %61 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = getelementptr inbounds i64, i64* %62, i64 %60
  store i64 4311744768, i64* %63, align 8
  br label %175

64:                                               ; preds = %54
  %65 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 2
  %66 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %65, align 8
  %67 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %66, i64 0, i32 4
  %68 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %67, align 8
  %69 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %68, i64 0, i32 0
  %70 = load %struct.UTrie2*, %struct.UTrie2** %69, align 8
  %71 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %70, i64 0, i32 2
  %72 = load i32*, i32** %71, align 8
  %73 = icmp ult i32 %55, 55296
  br i1 %73, label %74, label %85

74:                                               ; preds = %64
  %75 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %70, i64 0, i32 0
  %76 = load i16*, i16** %75, align 8
  %77 = lshr i32 %55, 5
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds i16, i16* %76, i64 %78
  %80 = load i16, i16* %79, align 2
  %81 = zext i16 %80 to i32
  %82 = shl nuw nsw i32 %81, 2
  %83 = and i32 %55, 31
  %84 = add nuw nsw i32 %82, %83
  br label %129

85:                                               ; preds = %64
  %86 = icmp ult i32 %55, 65536
  br i1 %86, label %87, label %101

87:                                               ; preds = %85
  %88 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %70, i64 0, i32 0
  %89 = load i16*, i16** %88, align 8
  %90 = icmp slt i32 %55, 56320
  %91 = select i1 %90, i32 320, i32 0
  %92 = lshr i32 %55, 5
  %93 = add nuw nsw i32 %91, %92
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds i16, i16* %89, i64 %94
  %96 = load i16, i16* %95, align 2
  %97 = zext i16 %96 to i32
  %98 = shl nuw nsw i32 %97, 2
  %99 = and i32 %55, 31
  %100 = add nuw nsw i32 %98, %99
  br label %129

101:                                              ; preds = %85
  %102 = icmp ugt i32 %55, 1114111
  br i1 %102, label %129, label %103

103:                                              ; preds = %101
  %104 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %70, i64 0, i32 9
  %105 = load i32, i32* %104, align 4
  %106 = icmp sgt i32 %105, %55
  br i1 %106, label %110, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %70, i64 0, i32 10
  %109 = load i32, i32* %108, align 8
  br label %129

110:                                              ; preds = %103
  %111 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %70, i64 0, i32 0
  %112 = load i16*, i16** %111, align 8
  %113 = lshr i32 %55, 11
  %114 = add nuw nsw i32 %113, 2080
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds i16, i16* %112, i64 %115
  %117 = load i16, i16* %116, align 2
  %118 = zext i16 %117 to i32
  %119 = lshr i32 %55, 5
  %120 = and i32 %119, 63
  %121 = add nuw nsw i32 %120, %118
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds i16, i16* %112, i64 %122
  %124 = load i16, i16* %123, align 2
  %125 = zext i16 %124 to i32
  %126 = shl nuw nsw i32 %125, 2
  %127 = and i32 %55, 31
  %128 = add nuw nsw i32 %126, %127
  br label %129

129:                                              ; preds = %74, %87, %101, %107, %110
  %130 = phi i32 [ %84, %74 ], [ %100, %87 ], [ 128, %101 ], [ %109, %107 ], [ %128, %110 ]
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i32, i32* %72, i64 %131
  %133 = load i32, i32* %132, align 4
  %134 = and i32 %133, 255
  %135 = icmp ult i32 %134, 192
  br i1 %135, label %136, label %156

136:                                              ; preds = %129
  %137 = load i32, i32* %4, align 8
  %138 = add nsw i32 %137, 1
  store i32 %138, i32* %4, align 8
  %139 = and i32 %133, -65536
  %140 = zext i32 %139 to i64
  %141 = shl nuw i64 %140, 32
  %142 = shl i32 %133, 16
  %143 = and i32 %142, -16777216
  %144 = zext i32 %143 to i64
  %145 = or i64 %141, %144
  %146 = shl nuw nsw i32 %134, 8
  %147 = zext i32 %146 to i64
  %148 = or i64 %145, %147
  %149 = sext i32 %137 to i64
  %150 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %151 = load i64*, i64** %150, align 8
  %152 = getelementptr inbounds i64, i64* %151, i64 %149
  store i64 %148, i64* %152, align 8
  br label %175

153:                                              ; preds = %52
  %154 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 2
  %155 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %154, align 8
  br label %156

156:                                              ; preds = %129, %153
  %157 = phi i32 [ %133, %129 ], [ %32, %153 ]
  %158 = phi i32 [ %134, %129 ], [ %33, %153 ]
  %159 = phi %"struct.icu_69::CollationData"* [ %68, %129 ], [ %155, %153 ]
  %160 = icmp eq i32 %158, 193
  br i1 %160, label %161, label %172

161:                                              ; preds = %156
  %162 = load i32, i32* %4, align 8
  %163 = add nsw i32 %162, 1
  store i32 %163, i32* %4, align 8
  %164 = add i32 %157, -193
  %165 = zext i32 %164 to i64
  %166 = shl nuw i64 %165, 32
  %167 = or i64 %166, 83887360
  %168 = sext i32 %162 to i64
  %169 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %170 = load i64*, i64** %169, align 8
  %171 = getelementptr inbounds i64, i64* %170, i64 %168
  store i64 %167, i64* %171, align 8
  br label %175

172:                                              ; preds = %156
  %173 = load i32, i32* %3, align 4
  %174 = call i64 @_ZN6icu_6917CollationIterator14nextCEFromCE32EPKNS_13CollationDataEijR10UErrorCode(%"class.icu_69::CollationIterator"* %0, %"struct.icu_69::CollationData"* %159, i32 %173, i32 %157, i32* dereferenceable(4) %1) #4
  br label %175

175:                                              ; preds = %57, %136, %161, %172, %35
  %176 = phi i64 [ %47, %35 ], [ 4311744768, %57 ], [ %148, %136 ], [ %167, %161 ], [ %174, %172 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #4
  br label %177

177:                                              ; preds = %19, %175, %10
  %178 = phi i64 [ %16, %10 ], [ %176, %175 ], [ 4311744768, %19 ]
  ret i64 %178
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @_ZN6icu_6917CollationIterator14nextCEFromCE32EPKNS_13CollationDataEijR10UErrorCode(%"class.icu_69::CollationIterator"*, %"struct.icu_69::CollationData"*, i32, i32, i32* dereferenceable(4)) local_unnamed_addr #3

declare signext i8 @_ZN6icu_6917CollationIterator8CEBuffer20ensureAppendCapacityEiR10UErrorCode(%"class.icu_69::CollationIterator::CEBuffer"*, i32, i32* dereferenceable(4)) local_unnamed_addr #3

declare i32 @_ZNK6icu_6917CollationSettings9reorderExEj(%"struct.icu_69::CollationSettings"*, i32) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
