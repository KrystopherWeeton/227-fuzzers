; ModuleID = '../../third_party/blink/renderer/modules/webcodecs/video_frame_handle.cc'
source_filename = "../../third_party/blink/renderer/modules/webcodecs/video_frame_handle.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::VideoFrameHandle" = type { %"class.WTF::ThreadSafeRefCounted", i8, %"class.WTF::Mutex", %class.sk_sp, %class.scoped_refptr, %class.scoped_refptr.7 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.1, i32, i32 }
%class.sk_sp.1 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.scoped_refptr = type { %"class.media::VideoFrame"* }
%class.scoped_refptr.7 = type { %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* }
%"class.blink::WebCodecsLogger::VideoFrameCloseAuditor" = type <{ %"class.WTF::ThreadSafeRefCounted.8", i8, [3 x i8] }>
%"class.WTF::ThreadSafeRefCounted.8" = type { %"class.base::RefCountedThreadSafe.9" }
%"class.base::RefCountedThreadSafe.9" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.media::VideoFrame" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.10", %"class.media::VideoFrameLayout", %class.scoped_refptr, i32, %"class.gfx::Rect", %"class.gfx::Size", [4 x i8*], [4 x %"struct.gpu::MailboxHolder"], %"class.base::OnceCallback", %"class.base::UnsafeSharedMemoryRegion"*, %"class.base::UnsafeSharedMemoryRegion", %"class.base::WritableSharedMemoryMapping", %"class.std::__1::unique_ptr", %class.scoped_refptr.17, %"class.std::__1::vector.18", %"class.base::TimeDelta", %"class.base::Lock", %"struct.gpu::SyncToken", %"struct.media::VideoFrameMetadata", i32, %"class.gfx::ColorSpace", %"class.absl::optional.61", [4 x i8], %"class.absl::optional.66", %"class.std::__1::unique_ptr.71" }
%"class.base::RefCountedThreadSafe.10" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.media::VideoFrameLayout" = type { i32, %"class.gfx::Size", %"class.std::__1::vector", i8, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"*, %"class.std::__1::__compressed_pair" }
%"struct.media::ColorPlaneLayout" = type { i32, i64, i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.media::ColorPlaneLayout"* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.13", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.13" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::UnsafeSharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.gfx::GpuMemoryBuffer"* }
%"class.gfx::GpuMemoryBuffer" = type opaque
%class.scoped_refptr.17 = type { %"class.media::VideoFrame::DmabufHolder"* }
%"class.media::VideoFrame::DmabufHolder" = type opaque
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"class.base::OnceCallback.20"*, %"class.base::OnceCallback.20"*, %"class.std::__1::__compressed_pair.21" }
%"class.base::OnceCallback.20" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.base::OnceCallback.20"* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"struct.media::VideoFrameMetadata" = type { i8, %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.26", %"class.absl::optional.31", %"class.absl::optional.36", i8, %"class.absl::optional.41", %"class.absl::optional.46", i8, %"class.absl::optional", i8, [3 x i8], %"class.absl::optional.51", i8, i8, i8, i8, i32, %"class.absl::optional.56", i8, %"class.absl::optional.46", %"class.absl::optional.46", %"class.absl::optional.46", %"class.absl::optional.46", %"class.absl::optional.46", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.41", %"class.absl::optional.46", %"class.absl::optional", %"class.absl::optional.41", %"class.absl::optional.26" }
%"class.absl::optional.31" = type { %"class.absl::optional_internal::optional_data.32" }
%"class.absl::optional_internal::optional_data.32" = type { %"class.absl::optional_internal::optional_data_base.33" }
%"class.absl::optional_internal::optional_data_base.33" = type { %"class.absl::optional_internal::optional_data_dtor_base.34" }
%"class.absl::optional_internal::optional_data_dtor_base.34" = type { i8, %union.anon.35 }
%union.anon.35 = type { %"class.gfx::Rect" }
%"class.absl::optional.36" = type { %"class.absl::optional_internal::optional_data.37" }
%"class.absl::optional_internal::optional_data.37" = type { %"class.absl::optional_internal::optional_data_base.38" }
%"class.absl::optional_internal::optional_data_base.38" = type { %"class.absl::optional_internal::optional_data_dtor_base.39" }
%"class.absl::optional_internal::optional_data_dtor_base.39" = type { i8, %union.anon.40 }
%union.anon.40 = type { i32 }
%"class.absl::optional.51" = type { %"class.absl::optional_internal::optional_data.52" }
%"class.absl::optional_internal::optional_data.52" = type { %"class.absl::optional_internal::optional_data_base.53" }
%"class.absl::optional_internal::optional_data_base.53" = type { %"class.absl::optional_internal::optional_data_dtor_base.54" }
%"class.absl::optional_internal::optional_data_dtor_base.54" = type { i8, [3 x i8], %union.anon.55 }
%union.anon.55 = type { %"struct.media::VideoTransformation" }
%"struct.media::VideoTransformation" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.56" = type { %"class.absl::optional_internal::optional_data.57" }
%"class.absl::optional_internal::optional_data.57" = type { %"class.absl::optional_internal::optional_data_base.58" }
%"class.absl::optional_internal::optional_data_base.58" = type { %"class.absl::optional_internal::optional_data_dtor_base.59" }
%"class.absl::optional_internal::optional_data_dtor_base.59" = type { i8, %union.anon.60 }
%union.anon.60 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.46" = type { %"class.absl::optional_internal::optional_data.47" }
%"class.absl::optional_internal::optional_data.47" = type { %"class.absl::optional_internal::optional_data_base.48" }
%"class.absl::optional_internal::optional_data_base.48" = type { %"class.absl::optional_internal::optional_data_dtor_base.49" }
%"class.absl::optional_internal::optional_data_dtor_base.49" = type { i8, %union.anon.50 }
%union.anon.50 = type { double }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.absl::optional.41" = type { %"class.absl::optional_internal::optional_data.42" }
%"class.absl::optional_internal::optional_data.42" = type { %"class.absl::optional_internal::optional_data_base.43" }
%"class.absl::optional_internal::optional_data_base.43" = type { %"class.absl::optional_internal::optional_data_dtor_base.44" }
%"class.absl::optional_internal::optional_data_dtor_base.44" = type { i8, %union.anon.45 }
%union.anon.45 = type { %"class.base::TimeDelta" }
%"class.absl::optional.26" = type { %"class.absl::optional_internal::optional_data.27" }
%"class.absl::optional_internal::optional_data.27" = type { %"class.absl::optional_internal::optional_data_base.28" }
%"class.absl::optional_internal::optional_data_base.28" = type { %"class.absl::optional_internal::optional_data_dtor_base.29" }
%"class.absl::optional_internal::optional_data_dtor_base.29" = type { i8, %union.anon.30 }
%union.anon.30 = type { i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.61" = type { %"class.absl::optional_internal::optional_data.62" }
%"class.absl::optional_internal::optional_data.62" = type { %"class.absl::optional_internal::optional_data_base.63" }
%"class.absl::optional_internal::optional_data_base.63" = type { %"class.absl::optional_internal::optional_data_dtor_base.64" }
%"class.absl::optional_internal::optional_data_dtor_base.64" = type { i8, %union.anon.65 }
%union.anon.65 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.gfx::PointF" = type { float, float }
%"class.absl::optional.66" = type { %"class.absl::optional_internal::optional_data.67" }
%"class.absl::optional_internal::optional_data.67" = type { %"class.absl::optional_internal::optional_data_base.68" }
%"class.absl::optional_internal::optional_data_base.68" = type { %"class.absl::optional_internal::optional_data_dtor_base.69" }
%"class.absl::optional_internal::optional_data_dtor_base.69" = type { i8, [7 x i8], %union.anon.70 }
%union.anon.70 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { i8* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.103", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.109", %"class.blink::Member.111", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.120", %"class.blink::Member.126", %"class.blink::Member.128", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.79" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.77" }
%"class.WTF::HashTable.77" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.79" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.80" }
%"class.blink::HeapHashMap.80" = type { %"class.WTF::HashMap.83" }
%"class.WTF::HashMap.83" = type { %"class.WTF::HashTable.84" }
%"class.WTF::HashTable.84" = type <{ %"struct.WTF::KeyValuePair.86"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.86" = type { i8*, %"class.blink::Member.139" }
%"class.blink::Member.139" = type { %"class.blink::MemberBase.140" }
%"class.blink::MemberBase.140" = type { %"class.blink::Supplement.141"* }
%"class.blink::Supplement.141" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.142" }
%"class.blink::Member.142" = type { %"class.blink::MemberBase.143" }
%"class.blink::MemberBase.143" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.87, %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94", %"class.blink::Member", i32, [4 x i8], %"class.WTF::HashSet.100", i32, i32 }
%class.scoped_refptr.87 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.100" = type { %"class.WTF::HashTable.101" }
%"class.WTF::HashTable.101" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.103" = type { %"class.blink::MemberBase.104" }
%"class.blink::MemberBase.104" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.107"*, i32, i32 }
%"class.blink::Member.107" = type opaque
%"class.blink::Member.109" = type { %"class.blink::MemberBase.110" }
%"class.blink::MemberBase.110" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.111" = type { %"class.blink::MemberBase.112" }
%"class.blink::MemberBase.112" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.113", i32, i32 }
%"class.blink::HeapHashMap.113" = type { %"class.WTF::HashMap.116" }
%"class.WTF::HashMap.116" = type { %"class.WTF::HashTable.117" }
%"class.WTF::HashTable.117" = type <{ %"struct.WTF::KeyValuePair.119"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.119" = type opaque
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.126" = type { %"class.blink::MemberBase.127" }
%"class.blink::MemberBase.127" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.128" = type { %"class.blink::MemberBase.129" }
%"class.blink::MemberBase.129" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::WebCodecsLogger" = type <{ %"class.blink::Supplement", %"class.base::TimeTicks", %class.scoped_refptr.7, %"class.blink::HeapTaskRunnerTimer", i32, [4 x i8] }>
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member" }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.136", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.132, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.132 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.133" }>
%"class.base::RefCountedThreadSafe.133" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.134 }
%class.scoped_refptr.134 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.135", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.135" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.2" }
%"class.blink::WeakMember.136" = type { %"class.blink::MemberBase.137" }
%"class.blink::MemberBase.137" = type { %"class.blink::WebCodecsLogger"* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.146 }
%union.anon.146 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN4base14MakeRefCountedIN5blink16VideoFrameHandleEJR13scoped_refptrIN5media10VideoFrameEER5sk_spI7SkImageERS3_INS1_15WebCodecsLogger22VideoFrameCloseAuditorEEEEES3_IT_EDpOT0_ = comdat any

@.str = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1

@_ZN5blink16VideoFrameHandleC1E13scoped_refptrIN5media10VideoFrameEEPNS_16ExecutionContextE = hidden unnamed_addr alias void (%"class.blink::VideoFrameHandle"*, %"class.media::VideoFrame"*, %"class.blink::ExecutionContext"*), void (%"class.blink::VideoFrameHandle"*, %"class.media::VideoFrame"*, %"class.blink::ExecutionContext"*)* @_ZN5blink16VideoFrameHandleC2E13scoped_refptrIN5media10VideoFrameEEPNS_16ExecutionContextE
@_ZN5blink16VideoFrameHandleC1E13scoped_refptrIN5media10VideoFrameEE5sk_spI7SkImageEPNS_16ExecutionContextE = hidden unnamed_addr alias void (%"class.blink::VideoFrameHandle"*, %"class.media::VideoFrame"*, %class.sk_sp*, %"class.blink::ExecutionContext"*), void (%"class.blink::VideoFrameHandle"*, %"class.media::VideoFrame"*, %class.sk_sp*, %"class.blink::ExecutionContext"*)* @_ZN5blink16VideoFrameHandleC2E13scoped_refptrIN5media10VideoFrameEE5sk_spI7SkImageEPNS_16ExecutionContextE
@_ZN5blink16VideoFrameHandleC1E13scoped_refptrIN5media10VideoFrameEE5sk_spI7SkImageES1_INS_15WebCodecsLogger22VideoFrameCloseAuditorEE = hidden unnamed_addr alias void (%"class.blink::VideoFrameHandle"*, %"class.media::VideoFrame"*, %class.sk_sp*, %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"*), void (%"class.blink::VideoFrameHandle"*, %"class.media::VideoFrame"*, %class.sk_sp*, %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"*)* @_ZN5blink16VideoFrameHandleC2E13scoped_refptrIN5media10VideoFrameEE5sk_spI7SkImageES1_INS_15WebCodecsLogger22VideoFrameCloseAuditorEE
@_ZN5blink16VideoFrameHandleC1E13scoped_refptrIN5media10VideoFrameEE5sk_spI7SkImageE = hidden unnamed_addr alias void (%"class.blink::VideoFrameHandle"*, %"class.media::VideoFrame"*, %class.sk_sp*), void (%"class.blink::VideoFrameHandle"*, %"class.media::VideoFrame"*, %class.sk_sp*)* @_ZN5blink16VideoFrameHandleC2E13scoped_refptrIN5media10VideoFrameEE5sk_spI7SkImageE
@_ZN5blink16VideoFrameHandleD1Ev = hidden unnamed_addr alias void (%"class.blink::VideoFrameHandle"*), void (%"class.blink::VideoFrameHandle"*)* @_ZN5blink16VideoFrameHandleD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16VideoFrameHandleC2E13scoped_refptrIN5media10VideoFrameEEPNS_16ExecutionContextE(%"class.blink::VideoFrameHandle"*, %"class.media::VideoFrame"*, %"class.blink::ExecutionContext"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.media::VideoFrame"* %1 to i64
  %5 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 1
  store i8 0, i8* %6, align 4
  %7 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %7, i1 zeroext false) #5
  %8 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 3, i32 0
  store %class.SkImage* null, %class.SkImage** %8, align 8
  %9 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 4
  %10 = bitcast %class.scoped_refptr* %9 to i64*
  store i64 %4, i64* %10, align 8
  %11 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 5
  %12 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %11, i64 0, i32 0
  store %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* null, %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"** %12, align 8
  %13 = tail call dereferenceable(144) %"class.blink::WebCodecsLogger"* @_ZN5blink15WebCodecsLogger4FromERNS_16ExecutionContextE(%"class.blink::ExecutionContext"* dereferenceable(376) %2) #5
  %14 = tail call %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* @_ZN5blink15WebCodecsLogger15GetCloseAuditorEv(%"class.blink::WebCodecsLogger"* %13) #5
  %15 = ptrtoint %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* %14 to i64
  %16 = bitcast %class.scoped_refptr.7* %11 to i64*
  %17 = load %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"*, %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"** %12, align 8
  store i64 %15, i64* %16, align 8
  %18 = icmp eq %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor", %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw sub i32* %20, i32 1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = bitcast %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* %17 to i8*
  tail call void @free(i8* %24) #5
  br label %25

25:                                               ; preds = %23, %19, %3
  ret void
}

declare dereferenceable(144) %"class.blink::WebCodecsLogger"* @_ZN5blink15WebCodecsLogger4FromERNS_16ExecutionContextE(%"class.blink::ExecutionContext"* dereferenceable(376)) local_unnamed_addr #1

declare %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* @_ZN5blink15WebCodecsLogger15GetCloseAuditorEv(%"class.blink::WebCodecsLogger"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16VideoFrameHandleC2E13scoped_refptrIN5media10VideoFrameEE5sk_spI7SkImageEPNS_16ExecutionContextE(%"class.blink::VideoFrameHandle"*, %"class.media::VideoFrame"*, %class.sk_sp* nocapture, %"class.blink::ExecutionContext"*) unnamed_addr #0 align 2 {
  %5 = ptrtoint %"class.media::VideoFrame"* %1 to i64
  %6 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %6, align 4
  %7 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 1
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %8, i1 zeroext false) #5
  %9 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 3, i32 0
  store %class.SkImage* null, %class.SkImage** %9, align 8
  %10 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 4
  %11 = bitcast %class.scoped_refptr* %10 to i64*
  store i64 %5, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 5
  %13 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %12, i64 0, i32 0
  store %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* null, %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"** %13, align 8
  %14 = tail call dereferenceable(144) %"class.blink::WebCodecsLogger"* @_ZN5blink15WebCodecsLogger4FromERNS_16ExecutionContextE(%"class.blink::ExecutionContext"* dereferenceable(376) %3) #5
  %15 = tail call %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* @_ZN5blink15WebCodecsLogger15GetCloseAuditorEv(%"class.blink::WebCodecsLogger"* %14) #5
  %16 = ptrtoint %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* %15 to i64
  %17 = bitcast %class.scoped_refptr.7* %12 to i64*
  %18 = load %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"*, %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"** %13, align 8
  store i64 %16, i64* %17, align 8
  %19 = icmp eq %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor", %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* %18 to i8*
  tail call void @free(i8* %25) #5
  br label %26

26:                                               ; preds = %4, %20, %24
  %27 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 3
  %28 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %29 = bitcast %class.sk_sp* %2 to i64*
  %30 = load i64, i64* %29, align 8
  store %class.SkImage* null, %class.SkImage** %28, align 8
  %31 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %27, i64 0, i32 0
  %32 = load %class.SkImage*, %class.SkImage** %31, align 8
  %33 = bitcast %class.sk_sp* %27 to i64*
  store i64 %30, i64* %33, align 8
  %34 = icmp eq %class.SkImage* %32, null
  br i1 %34, label %45, label %35

35:                                               ; preds = %26
  %36 = getelementptr inbounds %class.SkImage, %class.SkImage* %32, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %45

39:                                               ; preds = %35
  %40 = bitcast %class.SkImage* %32 to %class.SkRefCntBase*
  %41 = bitcast %class.SkImage* %32 to void (%class.SkRefCntBase*)***
  %42 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %41, align 8
  %43 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, i64 2
  %44 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %43, align 8
  tail call void %44(%class.SkRefCntBase* nonnull %40) #5
  br label %45

45:                                               ; preds = %39, %35, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16VideoFrameHandleC2E13scoped_refptrIN5media10VideoFrameEE5sk_spI7SkImageES1_INS_15WebCodecsLogger22VideoFrameCloseAuditorEE(%"class.blink::VideoFrameHandle"*, %"class.media::VideoFrame"*, %class.sk_sp* nocapture, %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"*) unnamed_addr #0 align 2 {
  %5 = ptrtoint %"class.media::VideoFrame"* %1 to i64
  %6 = ptrtoint %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* %3 to i64
  %7 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %7, align 4
  %8 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 1
  store i8 0, i8* %8, align 4
  %9 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %9, i1 zeroext false) #5
  %10 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %12 = bitcast %class.sk_sp* %2 to i64*
  %13 = load i64, i64* %12, align 8
  store %class.SkImage* null, %class.SkImage** %11, align 8
  %14 = bitcast %class.sk_sp* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 4
  %16 = bitcast %class.scoped_refptr* %15 to i64*
  store i64 %5, i64* %16, align 8
  %17 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 5
  %18 = bitcast %class.scoped_refptr.7* %17 to i64*
  store i64 %6, i64* %18, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16VideoFrameHandleC2E13scoped_refptrIN5media10VideoFrameEE5sk_spI7SkImageE(%"class.blink::VideoFrameHandle"*, %"class.media::VideoFrame"*, %class.sk_sp* nocapture) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.media::VideoFrame"* %1 to i64
  %5 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 1
  store i8 0, i8* %6, align 4
  %7 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %7, i1 zeroext false) #5
  %8 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %10 = bitcast %class.sk_sp* %2 to i64*
  %11 = load i64, i64* %10, align 8
  store %class.SkImage* null, %class.SkImage** %9, align 8
  %12 = bitcast %class.sk_sp* %8 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 4
  %14 = bitcast %class.scoped_refptr* %13 to i64*
  store i64 %4, i64* %14, align 8
  %15 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 5, i32 0
  store %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* null, %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"** %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16VideoFrameHandleD2Ev(%"class.blink::VideoFrameHandle"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 5, i32 0
  %3 = load %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"*, %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"** %2, align 8
  %4 = icmp eq %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink15WebCodecsLogger22VideoFrameCloseAuditor19ReportUnclosedFrameEv(%"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* nonnull %3) #5
  %6 = load %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"*, %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"** %2, align 8
  %7 = icmp eq %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor", %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  %13 = bitcast %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* %6 to i8*
  tail call void @free(i8* %13) #5
  br label %14

14:                                               ; preds = %1, %5, %8, %12
  %15 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 4, i32 0
  %16 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %15, align 8
  %17 = icmp eq %"class.media::VideoFrame"* %16, null
  br i1 %17, label %30, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %16, i64 0, i32 1
  %20 = getelementptr inbounds %"class.base::RefCountedThreadSafe.10", %"class.base::RefCountedThreadSafe.10"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw sub i32* %20, i32 1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %30

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe.10", %"class.base::RefCountedThreadSafe.10"* %19, i64 -2
  %25 = bitcast %"class.base::RefCountedThreadSafe.10"* %24 to %"class.media::VideoFrame"*
  %26 = bitcast %"class.base::RefCountedThreadSafe.10"* %24 to void (%"class.media::VideoFrame"*)***
  %27 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %27, i64 1
  %29 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %28, align 8
  tail call void %29(%"class.media::VideoFrame"* nonnull %25) #5
  br label %30

30:                                               ; preds = %14, %18, %23
  %31 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 3, i32 0
  %32 = load %class.SkImage*, %class.SkImage** %31, align 8
  %33 = icmp eq %class.SkImage* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.SkImage, %class.SkImage* %32, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %class.SkImage* %32 to %class.SkRefCntBase*
  %40 = bitcast %class.SkImage* %32 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  tail call void %43(%class.SkRefCntBase* nonnull %39) #5
  br label %44

44:                                               ; preds = %30, %34, %38
  %45 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"* %45) #5
  ret void
}

declare void @_ZN5blink15WebCodecsLogger22VideoFrameCloseAuditor19ReportUnclosedFrameEv(%"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.media::VideoFrame"* @_ZN5blink16VideoFrameHandle5frameEv(%"class.blink::VideoFrameHandle"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %2) #5
  %3 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %3, align 8
  %5 = icmp eq %"class.media::VideoFrame"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %1, %6
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %2) #5
  ret %"class.media::VideoFrame"* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16VideoFrameHandle8sk_imageEv(%class.sk_sp* noalias nocapture sret, %"class.blink::VideoFrameHandle"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %1, i64 0, i32 2, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %3) #5
  %4 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %1, i64 0, i32 3, i32 0
  %6 = load %class.SkImage*, %class.SkImage** %5, align 8
  %7 = icmp eq %class.SkImage* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkImage, %class.SkImage* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  br label %11

11:                                               ; preds = %2, %8
  store %class.SkImage* %6, %class.SkImage** %4, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %3) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16VideoFrameHandle10InvalidateEv(%"class.blink::VideoFrameHandle"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %2) #5
  %3 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 4
  %4 = bitcast %class.scoped_refptr* %3 to i64*
  %5 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %3, i64 0, i32 0
  %6 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %5, align 8
  store i64 0, i64* %4, align 8
  %7 = icmp eq %"class.media::VideoFrame"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe.10", %"class.base::RefCountedThreadSafe.10"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe.10", %"class.base::RefCountedThreadSafe.10"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe.10"* %14 to %"class.media::VideoFrame"*
  %16 = bitcast %"class.base::RefCountedThreadSafe.10"* %14 to void (%"class.media::VideoFrame"*)***
  %17 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %17, i64 1
  %19 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %18, align 8
  tail call void %19(%"class.media::VideoFrame"* nonnull %15) #5
  br label %20

20:                                               ; preds = %13, %8, %1
  %21 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 3, i32 0
  %22 = load %class.SkImage*, %class.SkImage** %21, align 8
  store %class.SkImage* null, %class.SkImage** %21, align 8
  %23 = icmp eq %class.SkImage* %22, null
  br i1 %23, label %34, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.SkImage, %class.SkImage* %22, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 -1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %34

28:                                               ; preds = %24
  %29 = bitcast %class.SkImage* %22 to %class.SkRefCntBase*
  %30 = bitcast %class.SkImage* %22 to void (%class.SkRefCntBase*)***
  %31 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %30, align 8
  %32 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, i64 2
  %33 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, align 8
  tail call void %33(%class.SkRefCntBase* nonnull %29) #5
  br label %34

34:                                               ; preds = %28, %24, %20
  %35 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 5
  %36 = bitcast %class.scoped_refptr.7* %35 to i64*
  %37 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %35, i64 0, i32 0
  %38 = load %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"*, %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"** %37, align 8
  store i64 0, i64* %36, align 8
  %39 = icmp eq %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor", %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw sub i32* %41, i32 1 acq_rel
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  %45 = bitcast %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* %38 to i8*
  tail call void @free(i8* %45) #5
  br label %46

46:                                               ; preds = %34, %40, %44
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16VideoFrameHandle16InvalidateLockedEv(%"class.blink::VideoFrameHandle"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 4
  %3 = bitcast %class.scoped_refptr* %2 to i64*
  %4 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 0, i32 0
  %5 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %4, align 8
  store i64 0, i64* %3, align 8
  %6 = icmp eq %"class.media::VideoFrame"* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::RefCountedThreadSafe.10", %"class.base::RefCountedThreadSafe.10"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %19

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe.10", %"class.base::RefCountedThreadSafe.10"* %8, i64 -2
  %14 = bitcast %"class.base::RefCountedThreadSafe.10"* %13 to %"class.media::VideoFrame"*
  %15 = bitcast %"class.base::RefCountedThreadSafe.10"* %13 to void (%"class.media::VideoFrame"*)***
  %16 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %16, i64 1
  %18 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %17, align 8
  tail call void %18(%"class.media::VideoFrame"* nonnull %14) #5
  br label %19

19:                                               ; preds = %1, %7, %12
  %20 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 3, i32 0
  %21 = load %class.SkImage*, %class.SkImage** %20, align 8
  store %class.SkImage* null, %class.SkImage** %20, align 8
  %22 = icmp eq %class.SkImage* %21, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.SkImage, %class.SkImage* %21, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = bitcast %class.SkImage* %21 to %class.SkRefCntBase*
  %29 = bitcast %class.SkImage* %21 to void (%class.SkRefCntBase*)***
  %30 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %30, i64 2
  %32 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, align 8
  tail call void %32(%class.SkRefCntBase* nonnull %28) #5
  br label %33

33:                                               ; preds = %19, %23, %27
  %34 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 5
  %35 = bitcast %class.scoped_refptr.7* %34 to i64*
  %36 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %34, i64 0, i32 0
  %37 = load %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"*, %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"** %36, align 8
  store i64 0, i64* %35, align 8
  %38 = icmp eq %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* %37, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor", %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw sub i32* %40, i32 1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  %44 = bitcast %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* %37 to i8*
  tail call void @free(i8* %44) #5
  br label %45

45:                                               ; preds = %33, %39, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16VideoFrameHandle15SetCloseOnCloneEv(%"class.blink::VideoFrameHandle"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %2) #5
  %3 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 1
  store i8 1, i8* %3, align 4
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::VideoFrameHandle"* @_ZN5blink16VideoFrameHandle5CloneEv(%"class.blink::VideoFrameHandle"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %2) #5
  %3 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %3, i64 0, i32 0
  %5 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %4, align 8
  %6 = icmp eq %"class.media::VideoFrame"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 5
  %10 = tail call %"class.blink::VideoFrameHandle"* @_ZN4base14MakeRefCountedIN5blink16VideoFrameHandleEJR13scoped_refptrIN5media10VideoFrameEER5sk_spI7SkImageERS3_INS1_15WebCodecsLogger22VideoFrameCloseAuditorEEEEES3_IT_EDpOT0_(%class.scoped_refptr* dereferenceable(8) %3, %class.sk_sp* dereferenceable(8) %8, %class.scoped_refptr.7* dereferenceable(8) %9)
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi %"class.blink::VideoFrameHandle"* [ %10, %7 ], [ null, %1 ]
  %13 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 1
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %58, label %16

16:                                               ; preds = %11
  %17 = bitcast %class.scoped_refptr* %3 to i64*
  %18 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %4, align 8
  store i64 0, i64* %17, align 8
  %19 = icmp eq %"class.media::VideoFrame"* %18, null
  br i1 %19, label %32, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %18, i64 0, i32 1
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe.10", %"class.base::RefCountedThreadSafe.10"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw sub i32* %22, i32 1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %32

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.base::RefCountedThreadSafe.10", %"class.base::RefCountedThreadSafe.10"* %21, i64 -2
  %27 = bitcast %"class.base::RefCountedThreadSafe.10"* %26 to %"class.media::VideoFrame"*
  %28 = bitcast %"class.base::RefCountedThreadSafe.10"* %26 to void (%"class.media::VideoFrame"*)***
  %29 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %29, i64 1
  %31 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %30, align 8
  tail call void %31(%"class.media::VideoFrame"* nonnull %27) #5
  br label %32

32:                                               ; preds = %25, %20, %16
  %33 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 3, i32 0
  %34 = load %class.SkImage*, %class.SkImage** %33, align 8
  store %class.SkImage* null, %class.SkImage** %33, align 8
  %35 = icmp eq %class.SkImage* %34, null
  br i1 %35, label %46, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %class.SkImage, %class.SkImage* %34, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 -1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %46

40:                                               ; preds = %36
  %41 = bitcast %class.SkImage* %34 to %class.SkRefCntBase*
  %42 = bitcast %class.SkImage* %34 to void (%class.SkRefCntBase*)***
  %43 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %42, align 8
  %44 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %43, i64 2
  %45 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, align 8
  tail call void %45(%class.SkRefCntBase* nonnull %41) #5
  br label %46

46:                                               ; preds = %40, %36, %32
  %47 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 5
  %48 = bitcast %class.scoped_refptr.7* %47 to i64*
  %49 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %47, i64 0, i32 0
  %50 = load %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"*, %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"** %49, align 8
  store i64 0, i64* %48, align 8
  %51 = icmp eq %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* %50, null
  br i1 %51, label %58, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor", %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw sub i32* %53, i32 1 acq_rel
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %58

56:                                               ; preds = %52
  %57 = bitcast %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* %50 to i8*
  tail call void @free(i8* %57) #5
  br label %58

58:                                               ; preds = %56, %52, %46, %11
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %2) #5
  ret %"class.blink::VideoFrameHandle"* %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::VideoFrameHandle"* @_ZN4base14MakeRefCountedIN5blink16VideoFrameHandleEJR13scoped_refptrIN5media10VideoFrameEER5sk_spI7SkImageERS3_INS1_15WebCodecsLogger22VideoFrameCloseAuditorEEEEES3_IT_EDpOT0_(%class.scoped_refptr* dereferenceable(8), %class.sk_sp* dereferenceable(8), %class.scoped_refptr.7* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = tail call noalias i8* @malloc(i64 72) #5
  %6 = bitcast i8* %5 to %"class.blink::VideoFrameHandle"*
  %7 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %0, i64 0, i32 0
  %8 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %7, align 8
  %9 = icmp eq %"class.media::VideoFrame"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  br label %13

13:                                               ; preds = %3, %10
  %14 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %15 = load %class.SkImage*, %class.SkImage** %14, align 8
  %16 = icmp eq %class.SkImage* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.SkImage, %class.SkImage* %15, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 1 monotonic
  br label %20

20:                                               ; preds = %13, %17
  %21 = ptrtoint %class.SkImage* %15 to i64
  %22 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %2, i64 0, i32 0
  %23 = load %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"*, %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"** %22, align 8
  %24 = icmp eq %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* %23, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor", %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #5
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #5
  br label %32

32:                                               ; preds = %29, %25, %20
  %33 = ptrtoint %"class.media::VideoFrame"* %8 to i64
  %34 = ptrtoint %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* %23 to i64
  %35 = bitcast i8* %5 to i32*
  store i32 1, i32* %35, align 4
  %36 = getelementptr inbounds i8, i8* %5, i64 4
  store i8 0, i8* %36, align 4
  %37 = getelementptr inbounds i8, i8* %5, i64 8
  %38 = bitcast i8* %37 to %"class.WTF::MutexBase"*
  call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %38, i1 zeroext false) #5
  %39 = getelementptr inbounds i8, i8* %5, i64 48
  %40 = bitcast i8* %39 to i64*
  store i64 %21, i64* %40, align 8
  %41 = getelementptr inbounds i8, i8* %5, i64 56
  %42 = bitcast i8* %41 to i64*
  store i64 %33, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %5, i64 64
  %44 = bitcast i8* %43 to i64*
  store i64 %34, i64* %44, align 8
  ret %"class.blink::VideoFrameHandle"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::VideoFrameHandle"* @_ZN5blink16VideoFrameHandle19CloneForInternalUseEv(%"class.blink::VideoFrameHandle"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %2) #5
  %3 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %3, align 8
  %5 = icmp eq %"class.media::VideoFrame"* %4, null
  br i1 %5, label %30, label %6

6:                                                ; preds = %1
  %7 = tail call noalias i8* @malloc(i64 72) #5
  %8 = bitcast i8* %7 to %"class.blink::VideoFrameHandle"*
  %9 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  %11 = getelementptr inbounds %"class.blink::VideoFrameHandle", %"class.blink::VideoFrameHandle"* %0, i64 0, i32 3, i32 0
  %12 = load %class.SkImage*, %class.SkImage** %11, align 8
  %13 = icmp eq %class.SkImage* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %class.SkImage, %class.SkImage* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  br label %17

17:                                               ; preds = %6, %14
  %18 = ptrtoint %class.SkImage* %12 to i64
  %19 = ptrtoint %"class.media::VideoFrame"* %4 to i64
  %20 = bitcast i8* %7 to i32*
  store i32 1, i32* %20, align 4
  %21 = getelementptr inbounds i8, i8* %7, i64 4
  store i8 0, i8* %21, align 4
  %22 = getelementptr inbounds i8, i8* %7, i64 8
  %23 = bitcast i8* %22 to %"class.WTF::MutexBase"*
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %23, i1 zeroext false) #5
  %24 = getelementptr inbounds i8, i8* %7, i64 48
  %25 = bitcast i8* %24 to i64*
  store i64 %18, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %7, i64 56
  %27 = bitcast i8* %26 to i64*
  store i64 %19, i64* %27, align 8
  %28 = getelementptr inbounds i8, i8* %7, i64 64
  %29 = bitcast i8* %28 to %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"**
  store %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* null, %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"** %29, align 8
  br label %30

30:                                               ; preds = %1, %17
  %31 = phi %"class.blink::VideoFrameHandle"* [ %8, %17 ], [ null, %1 ]
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %2) #5
  ret %"class.blink::VideoFrameHandle"* %31
}

declare void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"*, i1 zeroext) unnamed_addr #1

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
