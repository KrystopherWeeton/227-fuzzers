; ModuleID = '../../ui/message_center/views/relative_time_formatter.cc'
source_filename = "../../ui/message_center/views/relative_time_formatter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.message_center::(anonymous namespace)::RelativeTimeFormat" = type { %"class.base::TimeDelta", i32, i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZNK4base9TimeDeltadvES0_ = comdat any

$_ZNK4base9TimeDeltamiES0_ = comdat any

@_ZZN14message_center12_GLOBAL__N_121GetRelativeTimeFormatEN4base9TimeDeltaEE12kTimeFormats = internal unnamed_addr constant [5 x %"struct.message_center::(anonymous namespace)::RelativeTimeFormat"] [%"struct.message_center::(anonymous namespace)::RelativeTimeFormat" { %"class.base::TimeDelta" zeroinitializer, i32 29108, i32 29108 }, %"struct.message_center::(anonymous namespace)::RelativeTimeFormat" { %"class.base::TimeDelta" { i64 60000000 }, i32 29109, i32 29113 }, %"struct.message_center::(anonymous namespace)::RelativeTimeFormat" { %"class.base::TimeDelta" { i64 3600000000 }, i32 29110, i32 29114 }, %"struct.message_center::(anonymous namespace)::RelativeTimeFormat" { %"class.base::TimeDelta" { i64 86400000000 }, i32 29111, i32 29115 }, %"struct.message_center::(anonymous namespace)::RelativeTimeFormat" { %"class.base::TimeDelta" { i64 31449600000000 }, i32 29112, i32 29116 }], align 16
@.str = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"!is_zero() || !a.is_zero()\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"!is_inf() || !a.is_inf()\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14message_center38GetRelativeTimeStringAndNextUpdateTimeEN4base9TimeDeltaEPNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEPS1_(i64, %"class.std::__1::basic_string"* nocapture, %"class.base::TimeDelta"* nocapture) local_unnamed_addr #0 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.base::TimeDelta", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = icmp slt i64 %0, 0
  %10 = bitcast %"class.base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #6
  %11 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  store i64 -6148914691236517206, i64* %11, align 8
  br i1 %9, label %12, label %17

12:                                               ; preds = %3
  %13 = add i64 %0, -9223372036854775807
  %14 = icmp ult i64 %13, 2
  %15 = sub nsw i64 0, %0
  %16 = select i1 %14, i64 9223372036854775807, i64 %15
  br label %17

17:                                               ; preds = %3, %12
  %18 = phi i64 [ %16, %12 ], [ %0, %3 ]
  store i64 %18, i64* %11, align 8
  %19 = icmp slt i64 %18, 60000000
  br i1 %19, label %20, label %121

20:                                               ; preds = %125, %123, %121, %17
  %21 = phi i64 [ 0, %17 ], [ 1, %121 ], [ 2, %123 ], [ 3, %125 ]
  %22 = getelementptr inbounds [5 x %"struct.message_center::(anonymous namespace)::RelativeTimeFormat"], [5 x %"struct.message_center::(anonymous namespace)::RelativeTimeFormat"]* @_ZZN14message_center12_GLOBAL__N_121GetRelativeTimeFormatEN4base9TimeDeltaEE12kTimeFormats, i64 0, i64 %21
  br label %23

23:                                               ; preds = %125, %20
  %24 = phi %"struct.message_center::(anonymous namespace)::RelativeTimeFormat"* [ %22, %20 ], [ getelementptr inbounds ([5 x %"struct.message_center::(anonymous namespace)::RelativeTimeFormat"], [5 x %"struct.message_center::(anonymous namespace)::RelativeTimeFormat"]* @_ZZN14message_center12_GLOBAL__N_121GetRelativeTimeFormatEN4base9TimeDeltaEE12kTimeFormats, i64 0, i64 4), %125 ]
  %25 = getelementptr inbounds %"struct.message_center::(anonymous namespace)::RelativeTimeFormat", %"struct.message_center::(anonymous namespace)::RelativeTimeFormat"* %24, i64 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %45

28:                                               ; preds = %23
  %29 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #6
  %30 = getelementptr inbounds %"struct.message_center::(anonymous namespace)::RelativeTimeFormat", %"struct.message_center::(anonymous namespace)::RelativeTimeFormat"* %24, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* nonnull sret %6, i32 %31) #6
  %32 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %28
  %37 = bitcast %"class.std::__1::basic_string"* %1 to i8**
  %38 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %38) #7
  br label %39

39:                                               ; preds = %36, %28
  %40 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* nonnull align 8 %29, i64 24, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #6
  %41 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %0, i64 60000000) #6
  %42 = extractvalue { i64, i1 } %41, 1
  %43 = extractvalue { i64, i1 } %41, 0
  %44 = select i1 %42, i64 9223372036854775807, i64 %43, !prof !2
  br label %118

45:                                               ; preds = %23
  %46 = getelementptr inbounds %"struct.message_center::(anonymous namespace)::RelativeTimeFormat", %"struct.message_center::(anonymous namespace)::RelativeTimeFormat"* %24, i64 0, i32 1
  %47 = getelementptr inbounds %"struct.message_center::(anonymous namespace)::RelativeTimeFormat", %"struct.message_center::(anonymous namespace)::RelativeTimeFormat"* %24, i64 0, i32 2
  %48 = select i1 %9, i32* %46, i32* %47
  %49 = load i32, i32* %48, align 4
  %50 = call double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"* nonnull %5, i64 %26)
  %51 = call double @llvm.floor.f64(double %50) #6
  %52 = fcmp ult double %51, 0xC1E0000000000000
  %53 = fcmp ugt double %51, 0x41DFFFFFFFC00000
  %54 = fcmp ogt double %51, 0xC1E0000000000000
  %55 = select i1 %54, double %51, double 0xC1E0000000000000
  %56 = fptosi double %55 to i32
  %57 = select i1 %52, i32 0, i32 2147483647
  %58 = select i1 %53, i32 %57, i32 %56
  %59 = bitcast %"class.base::TimeDelta"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #6
  br i1 %9, label %60, label %73

60:                                               ; preds = %45
  %61 = add nsw i32 %58, 1
  %62 = load i64, i64* %25, align 8
  %63 = sext i32 %61 to i64
  %64 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %62, i64 %63) #6
  %65 = extractvalue { i64, i1 } %64, 1
  %66 = extractvalue { i64, i1 } %64, 0
  br i1 %65, label %67, label %89

67:                                               ; preds = %60
  %68 = lshr i64 %62, 63
  %69 = trunc i64 %68 to i32
  %70 = lshr i32 %61, 31
  %71 = icmp eq i32 %70, %69
  %72 = select i1 %71, i64 9223372036854775807, i64 -9223372036854775808
  br label %89

73:                                               ; preds = %45
  %74 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %7, i64 0, i32 0
  store i64 1000, i64* %74, align 8
  %75 = load i64, i64* %25, align 8
  %76 = sext i32 %58 to i64
  %77 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %75, i64 %76) #6
  %78 = extractvalue { i64, i1 } %77, 1
  %79 = extractvalue { i64, i1 } %77, 0
  br i1 %78, label %80, label %86

80:                                               ; preds = %73
  %81 = lshr i64 %75, 63
  %82 = trunc i64 %81 to i32
  %83 = lshr i32 %58, 31
  %84 = icmp eq i32 %83, %82
  %85 = select i1 %84, i64 9223372036854775807, i64 -9223372036854775808
  br label %86

86:                                               ; preds = %73, %80
  %87 = phi i64 [ %79, %73 ], [ %85, %80 ]
  %88 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %7, i64 %87)
  br label %89

89:                                               ; preds = %67, %60, %86
  %90 = phi i64 [ %88, %86 ], [ %66, %60 ], [ %72, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #6
  %91 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #6
  call void @_ZN9l10n_util21GetPluralStringFUTF16Eii(%"class.std::__1::basic_string"* nonnull sret %8, i32 %49, i32 %58) #6
  %92 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %92, i64 0, i32 1, i32 1
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %89
  %97 = bitcast %"class.std::__1::basic_string"* %1 to i8**
  %98 = load i8*, i8** %97, align 8
  call void @_ZdlPv(i8* %98) #7
  br label %99

99:                                               ; preds = %96, %89
  %100 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* nonnull align 8 %91, i64 24, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #6
  %101 = add i64 %90, -9223372036854775807
  %102 = icmp ult i64 %101, 2
  br i1 %102, label %110, label %103

103:                                              ; preds = %99
  %104 = icmp slt i64 %90, 0
  %105 = select i1 %104, i64 -9223372036854775808, i64 9223372036854775807
  %106 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %0, i64 %90) #6
  %107 = extractvalue { i64, i1 } %106, 1
  %108 = extractvalue { i64, i1 } %106, 0
  %109 = select i1 %107, i64 %105, i64 %108, !prof !2
  br label %118

110:                                              ; preds = %99
  %111 = add i64 %0, -9223372036854775807
  %112 = icmp ugt i64 %111, 1
  %113 = icmp eq i64 %90, %0
  %114 = or i1 %112, %113
  br i1 %114, label %118, label %115

115:                                              ; preds = %110
  %116 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #6
  %117 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #6
  br label %118

118:                                              ; preds = %115, %110, %103, %39
  %119 = phi i64 [ %44, %39 ], [ %109, %103 ], [ %90, %110 ], [ %90, %115 ]
  %120 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  store i64 %119, i64* %120, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #6
  ret void

121:                                              ; preds = %17
  %122 = icmp slt i64 %18, 3600000000
  br i1 %122, label %20, label %123

123:                                              ; preds = %121
  %124 = icmp slt i64 %18, 86400000000
  br i1 %124, label %20, label %125

125:                                              ; preds = %123
  %126 = icmp slt i64 %18, 31449600000000
  br i1 %126, label %20, label %23
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = or i64 %6, %1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 302, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0)) #6
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #6
  %12 = load i64, i64* %5, align 8
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i64 [ %6, %2 ], [ %12, %9 ]
  %15 = add i64 %14, -9223372036854775807
  %16 = add i64 %1, -9223372036854775807
  %17 = or i64 %15, %16
  %18 = icmp ult i64 %17, 2
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 303, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0)) #6
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  %22 = load i64, i64* %5, align 8
  %23 = add i64 %22, -9223372036854775807
  br label %24

24:                                               ; preds = %13, %19
  %25 = phi i64 [ %15, %13 ], [ %23, %19 ]
  %26 = phi i64 [ %14, %13 ], [ %22, %19 ]
  %27 = icmp ult i64 %25, 2
  %28 = icmp slt i64 %26, 0
  %29 = select i1 %28, double 0xFFF0000000000000, double 0x7FF0000000000000
  %30 = sitofp i64 %26 to double
  %31 = select i1 %27, double %29, double %30
  %32 = icmp ult i64 %16, 2
  %33 = icmp slt i64 %1, 0
  %34 = select i1 %33, double 0xFFF0000000000000, double 0x7FF0000000000000
  %35 = sitofp i64 %1 to double
  %36 = select i1 %32, double %34, double %35
  %37 = fdiv double %31, %36
  ret double %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #6
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !2
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #6
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %26, i8* %27) #6
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #6
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #6
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

declare void @_ZN9l10n_util21GetPluralStringFUTF16Eii(%"class.std::__1::basic_string"* sret, i32, i32) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #4

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #4

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
