; ModuleID = '../../ui/base/prediction/kalman_filter.cc'
source_filename = "../../ui/base/prediction/kalman_filter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.ui::KalmanFilter" = type <{ %"class.gfx::Vector3dF", %"class.gfx::Matrix3F", %"class.gfx::Matrix3F", %"class.gfx::Matrix3F", %"class.gfx::Vector3dF", [4 x i8], double, i32, [4 x i8] }>
%"class.gfx::Matrix3F" = type { [9 x float] }
%"class.gfx::Vector3dF" = type { float, float, float }

@_ZN2ui12KalmanFilterC1Ev = hidden unnamed_addr alias void (%"class.ui::KalmanFilter"*), void (%"class.ui::KalmanFilter"*)* @_ZN2ui12KalmanFilterC2Ev
@_ZN2ui12KalmanFilterD1Ev = hidden unnamed_addr alias void (%"class.ui::KalmanFilter"*), void (%"class.ui::KalmanFilter"*)* @_ZN2ui12KalmanFilterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui12KalmanFilterC2Ev(%"class.ui::KalmanFilter"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.gfx::Vector3dF", align 4
  %3 = alloca %"class.gfx::Vector3dF", align 8
  %4 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 0, i32 0
  store float 0.000000e+00, float* %4, align 4
  %5 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 0, i32 1
  store float 0.000000e+00, float* %5, align 4
  %6 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 0, i32 2
  store float 0.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 1
  tail call void @_ZN3gfx8Matrix3F8IdentityEv(%"class.gfx::Matrix3F"* sret %7) #6
  %8 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 2
  %9 = bitcast %"class.gfx::Matrix3F"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 -1, i64 36, i1 false) #6, !alias.scope !2
  tail call void @_ZN3gfx8Matrix3F5ZerosEv(%"class.gfx::Matrix3F"* sret %8) #6
  %10 = bitcast %"class.gfx::Matrix3F"* %8 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 5.000000e-01, float 0.000000e+00>, <4 x float>* %10, align 4, !alias.scope !2
  %11 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 2, i32 0, i64 4
  %12 = bitcast float* %11 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %12, align 4, !alias.scope !2
  %13 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 2, i32 0, i64 8
  store float 1.000000e+00, float* %13, align 4, !alias.scope !2
  %14 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 3
  %15 = bitcast %"class.gfx::Vector3dF"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %15) #6, !noalias !5
  %16 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %2, i64 0, i32 0
  %17 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %2, i64 0, i32 1
  %18 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %2, i64 0, i32 2
  store float 5.000000e-01, float* %16, align 4, !noalias !5
  store float 1.000000e+00, float* %17, align 4, !noalias !5
  store float 1.000000e+00, float* %18, align 4, !noalias !5
  %19 = bitcast %"class.gfx::Matrix3F"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 -1, i64 36, i1 false) #6, !alias.scope !5
  %20 = bitcast %"class.gfx::Vector3dF"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %20) #6, !noalias !5
  %21 = call { <2 x float>, float } @_ZN3gfx13ScaleVector3dERKNS_9Vector3dFEfff(%"class.gfx::Vector3dF"* nonnull dereferenceable(12) %2, float 0x3F847AE140000000, float 0x3F847AE140000000, float 0x3F847AE140000000) #6, !noalias !5
  %22 = extractvalue { <2 x float>, float } %21, 0
  %23 = extractvalue { <2 x float>, float } %21, 1
  %24 = bitcast %"class.gfx::Vector3dF"* %3 to <2 x float>*
  store <2 x float> %22, <2 x float>* %24, align 8, !noalias !5
  %25 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %3, i64 0, i32 2
  store float %23, float* %25, align 8, !noalias !5
  call void @_ZN3gfx8Matrix3F16FromOuterProductERKNS_9Vector3dFES3_(%"class.gfx::Matrix3F"* sret %14, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) %2, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) %3) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %20) #6, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %15) #6, !noalias !5
  %26 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 4, i32 0
  store float 1.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 4, i32 1
  store float 0.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 4, i32 2
  store float 0.000000e+00, float* %28, align 4
  %29 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 6
  store double 1.000000e+00, double* %29, align 8
  %30 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 7
  store i32 0, i32* %30, align 8
  ret void
}

declare void @_ZN3gfx8Matrix3F8IdentityEv(%"class.gfx::Matrix3F"* sret) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui12KalmanFilterD2Ev(%"class.ui::KalmanFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 3
  tail call void @_ZN3gfx8Matrix3FD1Ev(%"class.gfx::Matrix3F"* %2) #6
  %3 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 2
  tail call void @_ZN3gfx8Matrix3FD1Ev(%"class.gfx::Matrix3F"* %3) #6
  %4 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 1
  tail call void @_ZN3gfx8Matrix3FD1Ev(%"class.gfx::Matrix3F"* %4) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gfx8Matrix3FD1Ev(%"class.gfx::Matrix3F"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(12) %"class.gfx::Vector3dF"* @_ZNK2ui12KalmanFilter18GetStateEstimationEv(%"class.ui::KalmanFilter"* readnone) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 0
  ret %"class.gfx::Vector3dF"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui12KalmanFilter6StableEv(%"class.ui::KalmanFilter"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = icmp ugt i32 %3, 3
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui12KalmanFilter6UpdateEdd(%"class.ui::KalmanFilter"*, double, double) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.gfx::Vector3dF", align 8
  %5 = alloca %"class.gfx::Vector3dF", align 8
  %6 = alloca %"class.gfx::Vector3dF", align 8
  %7 = alloca %"class.gfx::Vector3dF", align 8
  %8 = alloca %"class.gfx::Matrix3F", align 4
  %9 = alloca %"class.gfx::Matrix3F", align 4
  %10 = alloca %"class.gfx::Matrix3F", align 4
  %11 = alloca %"class.gfx::Matrix3F", align 4
  %12 = alloca %"class.gfx::Matrix3F", align 4
  %13 = alloca %"class.gfx::Matrix3F", align 4
  %14 = alloca %"class.gfx::Matrix3F", align 4
  %15 = alloca %"class.gfx::Matrix3F", align 4
  %16 = alloca %"class.gfx::Vector3dF", align 8
  %17 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 7
  %18 = load i32, i32* %17, align 8
  %19 = add i32 %18, 1
  store i32 %19, i32* %17, align 8
  %20 = icmp eq i32 %18, 0
  br i1 %20, label %21, label %26

21:                                               ; preds = %3
  %22 = fptrunc double %1 to float
  %23 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 0, i32 0
  store float %22, float* %23, align 8
  %24 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 0, i32 1
  store float 0.000000e+00, float* %24, align 4
  %25 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 0, i32 2
  store float 0.000000e+00, float* %25, align 8
  br label %82

26:                                               ; preds = %3
  tail call void @_ZN2ui12KalmanFilter7PredictEd(%"class.ui::KalmanFilter"* %0, double %2)
  %27 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 4
  %28 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 0
  %29 = tail call float @_ZN3gfx10DotProductERKNS_9Vector3dFES2_(%"class.gfx::Vector3dF"* dereferenceable(12) %27, %"class.gfx::Vector3dF"* dereferenceable(12) %28) #6
  %30 = fpext float %29 to double
  %31 = fsub double %1, %30
  %32 = bitcast %"class.gfx::Vector3dF"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %32) #6
  %33 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 1
  %34 = tail call { <2 x float>, float } @_ZN3gfx13MatrixProductERKNS_8Matrix3FERKNS_9Vector3dFE(%"class.gfx::Matrix3F"* dereferenceable(36) %33, %"class.gfx::Vector3dF"* dereferenceable(12) %27) #6
  %35 = extractvalue { <2 x float>, float } %34, 0
  %36 = extractvalue { <2 x float>, float } %34, 1
  %37 = bitcast %"class.gfx::Vector3dF"* %4 to <2 x float>*
  store <2 x float> %35, <2 x float>* %37, align 8
  %38 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %4, i64 0, i32 2
  store float %36, float* %38, align 8
  %39 = call float @_ZN3gfx10DotProductERKNS_9Vector3dFES2_(%"class.gfx::Vector3dF"* dereferenceable(12) %27, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) %4) #6
  %40 = fpext float %39 to double
  %41 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 6
  %42 = load double, double* %41, align 8
  %43 = fadd double %42, %40
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %32) #6
  %44 = bitcast %"class.gfx::Vector3dF"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %44) #6
  %45 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %5, i64 0, i32 2
  %46 = bitcast %"class.gfx::Vector3dF"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %46) #6
  %47 = call { <2 x float>, float } @_ZN3gfx13MatrixProductERKNS_8Matrix3FERKNS_9Vector3dFE(%"class.gfx::Matrix3F"* dereferenceable(36) %33, %"class.gfx::Vector3dF"* dereferenceable(12) %27) #6
  %48 = extractvalue { <2 x float>, float } %47, 0
  %49 = extractvalue { <2 x float>, float } %47, 1
  %50 = bitcast %"class.gfx::Vector3dF"* %6 to <2 x float>*
  store <2 x float> %48, <2 x float>* %50, align 8
  %51 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %6, i64 0, i32 2
  store float %49, float* %51, align 8
  %52 = fdiv double 1.000000e+00, %43
  %53 = fptrunc double %52 to float
  %54 = call { <2 x float>, float } @_ZN3gfx13ScaleVector3dERKNS_9Vector3dFEfff(%"class.gfx::Vector3dF"* nonnull dereferenceable(12) %6, float %53, float %53, float %53) #6
  %55 = extractvalue { <2 x float>, float } %54, 0
  %56 = extractvalue { <2 x float>, float } %54, 1
  %57 = bitcast %"class.gfx::Vector3dF"* %5 to <2 x float>*
  store <2 x float> %55, <2 x float>* %57, align 8
  store float %56, float* %45, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %46) #6
  %58 = bitcast %"class.gfx::Vector3dF"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %58) #6
  %59 = fptrunc double %31 to float
  %60 = call { <2 x float>, float } @_ZN3gfx13ScaleVector3dERKNS_9Vector3dFEfff(%"class.gfx::Vector3dF"* nonnull dereferenceable(12) %5, float %59, float %59, float %59) #6
  %61 = extractvalue { <2 x float>, float } %60, 0
  %62 = extractvalue { <2 x float>, float } %60, 1
  %63 = bitcast %"class.gfx::Vector3dF"* %7 to <2 x float>*
  store <2 x float> %61, <2 x float>* %63, align 8
  %64 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %7, i64 0, i32 2
  store float %62, float* %64, align 8
  call void @_ZN3gfx9Vector3dF3AddERKS0_(%"class.gfx::Vector3dF"* %28, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) %7) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %58) #6
  %65 = bitcast %"class.gfx::Matrix3F"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %65) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %65, i8 -1, i64 36, i1 false)
  %66 = bitcast %"class.gfx::Matrix3F"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %66) #6
  call void @_ZN3gfx8Matrix3F8IdentityEv(%"class.gfx::Matrix3F"* nonnull sret %9) #6
  %67 = bitcast %"class.gfx::Matrix3F"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %67) #6
  call void @_ZN3gfx8Matrix3F16FromOuterProductERKNS_9Vector3dFES3_(%"class.gfx::Matrix3F"* nonnull sret %10, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) %5, %"class.gfx::Vector3dF"* dereferenceable(12) %27) #6
  call void @_ZNK3gfx8Matrix3F8SubtractERKS0_(%"class.gfx::Matrix3F"* nonnull sret %8, %"class.gfx::Matrix3F"* nonnull %9, %"class.gfx::Matrix3F"* nonnull dereferenceable(36) %10) #6
  call void @_ZN3gfx8Matrix3FD1Ev(%"class.gfx::Matrix3F"* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %67) #6
  call void @_ZN3gfx8Matrix3FD1Ev(%"class.gfx::Matrix3F"* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %66) #6
  %68 = bitcast %"class.gfx::Matrix3F"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %68) #6
  %69 = bitcast %"class.gfx::Matrix3F"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %69) #6
  %70 = bitcast %"class.gfx::Matrix3F"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %70) #6
  call void @_ZN3gfx13MatrixProductERKNS_8Matrix3FES2_(%"class.gfx::Matrix3F"* nonnull sret %13, %"class.gfx::Matrix3F"* nonnull dereferenceable(36) %8, %"class.gfx::Matrix3F"* dereferenceable(36) %33) #6
  %71 = bitcast %"class.gfx::Matrix3F"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %71) #6
  call void @_ZNK3gfx8Matrix3F9TransposeEv(%"class.gfx::Matrix3F"* nonnull sret %14, %"class.gfx::Matrix3F"* nonnull %8) #6
  call void @_ZN3gfx13MatrixProductERKNS_8Matrix3FES2_(%"class.gfx::Matrix3F"* nonnull sret %12, %"class.gfx::Matrix3F"* nonnull dereferenceable(36) %13, %"class.gfx::Matrix3F"* nonnull dereferenceable(36) %14) #6
  %72 = bitcast %"class.gfx::Matrix3F"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %72) #6
  %73 = bitcast %"class.gfx::Vector3dF"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %73) #6
  %74 = load double, double* %41, align 8
  %75 = fptrunc double %74 to float
  %76 = call { <2 x float>, float } @_ZN3gfx13ScaleVector3dERKNS_9Vector3dFEfff(%"class.gfx::Vector3dF"* nonnull dereferenceable(12) %5, float %75, float %75, float %75) #6
  %77 = extractvalue { <2 x float>, float } %76, 0
  %78 = extractvalue { <2 x float>, float } %76, 1
  %79 = bitcast %"class.gfx::Vector3dF"* %16 to <2 x float>*
  store <2 x float> %77, <2 x float>* %79, align 8
  %80 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %16, i64 0, i32 2
  store float %78, float* %80, align 8
  call void @_ZN3gfx8Matrix3F16FromOuterProductERKNS_9Vector3dFES3_(%"class.gfx::Matrix3F"* nonnull sret %15, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) %16, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) %5) #6
  call void @_ZNK3gfx8Matrix3F3AddERKS0_(%"class.gfx::Matrix3F"* nonnull sret %11, %"class.gfx::Matrix3F"* nonnull %12, %"class.gfx::Matrix3F"* nonnull dereferenceable(36) %15) #6
  %81 = bitcast %"class.gfx::Matrix3F"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %81, i8* nonnull align 4 %68, i64 36, i1 false)
  call void @_ZN3gfx8Matrix3FD1Ev(%"class.gfx::Matrix3F"* nonnull %11) #6
  call void @_ZN3gfx8Matrix3FD1Ev(%"class.gfx::Matrix3F"* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %73) #6
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %72) #6
  call void @_ZN3gfx8Matrix3FD1Ev(%"class.gfx::Matrix3F"* nonnull %12) #6
  call void @_ZN3gfx8Matrix3FD1Ev(%"class.gfx::Matrix3F"* nonnull %14) #6
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %71) #6
  call void @_ZN3gfx8Matrix3FD1Ev(%"class.gfx::Matrix3F"* nonnull %13) #6
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %70) #6
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %69) #6
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %68) #6
  call void @_ZN3gfx8Matrix3FD1Ev(%"class.gfx::Matrix3F"* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %65) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %44) #6
  br label %82

82:                                               ; preds = %26, %21
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui12KalmanFilter7PredictEd(%"class.ui::KalmanFilter"*, double) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Vector3dF", align 4
  %4 = alloca %"class.gfx::Vector3dF", align 8
  %5 = alloca %"class.gfx::Matrix3F", align 4
  %6 = alloca %"class.gfx::Matrix3F", align 4
  %7 = alloca %"class.gfx::Matrix3F", align 4
  %8 = alloca %"class.gfx::Matrix3F", align 4
  %9 = alloca %"class.gfx::Matrix3F", align 4
  %10 = alloca %"class.gfx::Matrix3F", align 4
  %11 = bitcast %"class.gfx::Matrix3F"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %11) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 -1, i64 36, i1 false) #6, !alias.scope !8
  call void @_ZN3gfx8Matrix3F5ZerosEv(%"class.gfx::Matrix3F"* nonnull sret %5) #6
  %12 = fptrunc double %1 to float
  %13 = fmul double %1, 5.000000e-01
  %14 = fmul double %13, %1
  %15 = fptrunc double %14 to float
  %16 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %5, i64 0, i32 0, i64 0
  store float 1.000000e+00, float* %16, align 4, !alias.scope !8
  %17 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %5, i64 0, i32 0, i64 1
  store float %12, float* %17, align 4, !alias.scope !8
  %18 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %5, i64 0, i32 0, i64 2
  store float %15, float* %18, align 4, !alias.scope !8
  %19 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %5, i64 0, i32 0, i64 3
  store float 0.000000e+00, float* %19, align 4, !alias.scope !8
  %20 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %5, i64 0, i32 0, i64 4
  store float 1.000000e+00, float* %20, align 4, !alias.scope !8
  %21 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %5, i64 0, i32 0, i64 5
  store float %12, float* %21, align 4, !alias.scope !8
  %22 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %5, i64 0, i32 0, i64 6
  store float 0.000000e+00, float* %22, align 4, !alias.scope !8
  %23 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %5, i64 0, i32 0, i64 7
  store float 0.000000e+00, float* %23, align 4, !alias.scope !8
  %24 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %5, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %24, align 4, !alias.scope !8
  %25 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 2
  %26 = bitcast %"class.gfx::Matrix3F"* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* nonnull align 4 %11, i64 36, i1 false)
  call void @_ZN3gfx8Matrix3FD1Ev(%"class.gfx::Matrix3F"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %11) #6
  %27 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 0
  %28 = call { <2 x float>, float } @_ZN3gfx13MatrixProductERKNS_8Matrix3FERKNS_9Vector3dFE(%"class.gfx::Matrix3F"* dereferenceable(36) %25, %"class.gfx::Vector3dF"* dereferenceable(12) %27) #6
  %29 = extractvalue { <2 x float>, float } %28, 0
  %30 = extractvalue { <2 x float>, float } %28, 1
  %31 = bitcast %"class.ui::KalmanFilter"* %0 to <2 x float>*
  store <2 x float> %29, <2 x float>* %31, align 8
  %32 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 0, i32 2
  store float %30, float* %32, align 8
  %33 = bitcast %"class.gfx::Matrix3F"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %33) #6
  %34 = bitcast %"class.gfx::Matrix3F"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %34) #6
  %35 = bitcast %"class.gfx::Matrix3F"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %35) #6
  %36 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 1
  call void @_ZN3gfx13MatrixProductERKNS_8Matrix3FES2_(%"class.gfx::Matrix3F"* nonnull sret %8, %"class.gfx::Matrix3F"* dereferenceable(36) %25, %"class.gfx::Matrix3F"* dereferenceable(36) %36) #6
  %37 = bitcast %"class.gfx::Matrix3F"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %37) #6
  call void @_ZNK3gfx8Matrix3F9TransposeEv(%"class.gfx::Matrix3F"* nonnull sret %9, %"class.gfx::Matrix3F"* %25) #6
  call void @_ZN3gfx13MatrixProductERKNS_8Matrix3FES2_(%"class.gfx::Matrix3F"* nonnull sret %7, %"class.gfx::Matrix3F"* nonnull dereferenceable(36) %8, %"class.gfx::Matrix3F"* nonnull dereferenceable(36) %9) #6
  %38 = bitcast %"class.gfx::Matrix3F"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %38) #6
  %39 = bitcast %"class.gfx::Vector3dF"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %39) #6, !noalias !11
  %40 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %3, i64 0, i32 0
  %41 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %3, i64 0, i32 1
  %42 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %3, i64 0, i32 2
  store float %15, float* %40, align 4, !noalias !11
  store float %12, float* %41, align 4, !noalias !11
  store float 1.000000e+00, float* %42, align 4, !noalias !11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %38, i8 -1, i64 36, i1 false) #6, !alias.scope !11
  %43 = bitcast %"class.gfx::Vector3dF"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %43) #6, !noalias !11
  %44 = call { <2 x float>, float } @_ZN3gfx13ScaleVector3dERKNS_9Vector3dFEfff(%"class.gfx::Vector3dF"* nonnull dereferenceable(12) %3, float 0x3F847AE140000000, float 0x3F847AE140000000, float 0x3F847AE140000000) #6, !noalias !11
  %45 = extractvalue { <2 x float>, float } %44, 0
  %46 = extractvalue { <2 x float>, float } %44, 1
  %47 = bitcast %"class.gfx::Vector3dF"* %4 to <2 x float>*
  store <2 x float> %45, <2 x float>* %47, align 8, !noalias !11
  %48 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %4, i64 0, i32 2
  store float %46, float* %48, align 8, !noalias !11
  call void @_ZN3gfx8Matrix3F16FromOuterProductERKNS_9Vector3dFES3_(%"class.gfx::Matrix3F"* nonnull sret %10, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) %3, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) %4) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %43) #6, !noalias !11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %39) #6, !noalias !11
  call void @_ZNK3gfx8Matrix3F3AddERKS0_(%"class.gfx::Matrix3F"* nonnull sret %6, %"class.gfx::Matrix3F"* nonnull %7, %"class.gfx::Matrix3F"* nonnull dereferenceable(36) %10) #6
  %49 = bitcast %"class.gfx::Matrix3F"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %49, i8* nonnull align 4 %33, i64 36, i1 false)
  call void @_ZN3gfx8Matrix3FD1Ev(%"class.gfx::Matrix3F"* nonnull %6) #6
  call void @_ZN3gfx8Matrix3FD1Ev(%"class.gfx::Matrix3F"* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %38) #6
  call void @_ZN3gfx8Matrix3FD1Ev(%"class.gfx::Matrix3F"* nonnull %7) #6
  call void @_ZN3gfx8Matrix3FD1Ev(%"class.gfx::Matrix3F"* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %37) #6
  call void @_ZN3gfx8Matrix3FD1Ev(%"class.gfx::Matrix3F"* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %35) #6
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %34) #6
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %33) #6
  ret void
}

declare float @_ZN3gfx10DotProductERKNS_9Vector3dFES2_(%"class.gfx::Vector3dF"* dereferenceable(12), %"class.gfx::Vector3dF"* dereferenceable(12)) local_unnamed_addr #1

declare { <2 x float>, float } @_ZN3gfx13MatrixProductERKNS_8Matrix3FERKNS_9Vector3dFE(%"class.gfx::Matrix3F"* dereferenceable(36), %"class.gfx::Vector3dF"* dereferenceable(12)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @_ZN3gfx8Matrix3F16FromOuterProductERKNS_9Vector3dFES3_(%"class.gfx::Matrix3F"* sret, %"class.gfx::Vector3dF"* dereferenceable(12), %"class.gfx::Vector3dF"* dereferenceable(12)) local_unnamed_addr #1

declare void @_ZN3gfx13MatrixProductERKNS_8Matrix3FES2_(%"class.gfx::Matrix3F"* sret, %"class.gfx::Matrix3F"* dereferenceable(36), %"class.gfx::Matrix3F"* dereferenceable(36)) local_unnamed_addr #1

declare void @_ZNK3gfx8Matrix3F9TransposeEv(%"class.gfx::Matrix3F"* sret, %"class.gfx::Matrix3F"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui12KalmanFilter5ResetEv(%"class.ui::KalmanFilter"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.gfx::Matrix3F", align 4
  %3 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 0, i32 0
  store float 0.000000e+00, float* %3, align 8
  %4 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 0, i32 1
  store float 0.000000e+00, float* %4, align 4
  %5 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 0, i32 2
  store float 0.000000e+00, float* %5, align 8
  %6 = bitcast %"class.gfx::Matrix3F"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %6) #6
  call void @_ZN3gfx8Matrix3F8IdentityEv(%"class.gfx::Matrix3F"* nonnull sret %2) #6
  %7 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 1
  %8 = bitcast %"class.gfx::Matrix3F"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* nonnull align 4 %6, i64 36, i1 false)
  call void @_ZN3gfx8Matrix3FD1Ev(%"class.gfx::Matrix3F"* nonnull %2) #6
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %6) #6
  %9 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 7
  store i32 0, i32* %9, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden double @_ZNK2ui12KalmanFilter11GetPositionEv(%"class.ui::KalmanFilter"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 0, i32 0
  %3 = load float, float* %2, align 4
  %4 = fpext float %3 to double
  ret double %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden double @_ZNK2ui12KalmanFilter11GetVelocityEv(%"class.ui::KalmanFilter"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 0, i32 1
  %3 = load float, float* %2, align 4
  %4 = fpext float %3 to double
  ret double %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden double @_ZNK2ui12KalmanFilter15GetAccelerationEv(%"class.ui::KalmanFilter"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.ui::KalmanFilter", %"class.ui::KalmanFilter"* %0, i64 0, i32 0, i32 2
  %3 = load float, float* %2, align 4
  %4 = fpext float %3 to double
  ret double %4
}

declare void @_ZN3gfx8Matrix3F5ZerosEv(%"class.gfx::Matrix3F"* sret) local_unnamed_addr #1

declare { <2 x float>, float } @_ZN3gfx13ScaleVector3dERKNS_9Vector3dFEfff(%"class.gfx::Vector3dF"* dereferenceable(12), float, float, float) local_unnamed_addr #1

declare void @_ZN3gfx9Vector3dF3AddERKS0_(%"class.gfx::Vector3dF"*, %"class.gfx::Vector3dF"* dereferenceable(12)) local_unnamed_addr #1

declare void @_ZNK3gfx8Matrix3F8SubtractERKS0_(%"class.gfx::Matrix3F"* sret, %"class.gfx::Matrix3F"*, %"class.gfx::Matrix3F"* dereferenceable(36)) local_unnamed_addr #1

declare void @_ZNK3gfx8Matrix3F3AddERKS0_(%"class.gfx::Matrix3F"* sret, %"class.gfx::Matrix3F"*, %"class.gfx::Matrix3F"* dereferenceable(36)) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN12_GLOBAL__N_118GetStateTransitionEd: argument 0"}
!4 = distinct !{!4, !"_ZN12_GLOBAL__N_118GetStateTransitionEd"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN12_GLOBAL__N_115GetProcessNoiseEd: argument 0"}
!7 = distinct !{!7, !"_ZN12_GLOBAL__N_115GetProcessNoiseEd"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN12_GLOBAL__N_118GetStateTransitionEd: argument 0"}
!10 = distinct !{!10, !"_ZN12_GLOBAL__N_118GetStateTransitionEd"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN12_GLOBAL__N_115GetProcessNoiseEd: argument 0"}
!13 = distinct !{!13, !"_ZN12_GLOBAL__N_115GetProcessNoiseEd"}
