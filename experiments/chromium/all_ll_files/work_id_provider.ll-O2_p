; ModuleID = '../../base/message_loop/work_id_provider.cc'
source_filename = "../../base/message_loop/work_id_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [8 x i8] }
%"class.base::WorkIdProvider" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }

$_ZN4base23ThreadLocalOwnedPointerINS_14WorkIdProviderEE12DeleteTlsPtrEPv = comdat any

@_ZZN4base14WorkIdProvider19GetForCurrentThreadEvE8instance = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN4base14WorkIdProvider19GetForCurrentThreadEvE8instance = internal global i64 0, align 8

@_ZN4base14WorkIdProviderD1Ev = hidden unnamed_addr alias void (%"class.base::WorkIdProvider"*), void (%"class.base::WorkIdProvider"*)* @_ZN4base14WorkIdProviderD2Ev
@_ZN4base14WorkIdProviderC1Ev = hidden unnamed_addr alias void (%"class.base::WorkIdProvider"*), void (%"class.base::WorkIdProvider"*)* @_ZN4base14WorkIdProviderC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::WorkIdProvider"* @_ZN4base14WorkIdProvider19GetForCurrentThreadEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base14WorkIdProvider19GetForCurrentThreadEvE8instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base14WorkIdProvider19GetForCurrentThreadEvE8instance) #8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base14WorkIdProvider19GetForCurrentThreadEvE8instance to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base14WorkIdProvider19GetForCurrentThreadEvE8instance to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* nonnull @_ZN4base23ThreadLocalOwnedPointerINS_14WorkIdProviderEE12DeleteTlsPtrEPv) #8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base14WorkIdProvider19GetForCurrentThreadEvE8instance) #8
  br label %7

7:                                                ; preds = %3, %6, %0
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base14WorkIdProvider19GetForCurrentThreadEvE8instance to %"class.base::ThreadLocalStorage::Slot"*)) #8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %16

10:                                               ; preds = %7
  %11 = tail call i8* @_Znwm(i64 4) #9
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base14WorkIdProvider19GetForCurrentThreadEvE8instance to %"class.base::ThreadLocalStorage::Slot"*)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base14WorkIdProvider19GetForCurrentThreadEvE8instance to %"class.base::ThreadLocalStorage::Slot"*), i8* nonnull %11) #8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %10
  tail call void @_ZdlPv(i8* nonnull %13) #9
  br label %16

16:                                               ; preds = %15, %10, %7
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base14WorkIdProvider19GetForCurrentThreadEvE8instance to %"class.base::ThreadLocalStorage::Slot"*)) #8
  %18 = bitcast i8* %17 to %"class.base::WorkIdProvider"*
  ret %"class.base::WorkIdProvider"* %18
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN4base14WorkIdProvider9GetWorkIdEv(%"class.base::WorkIdProvider"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::WorkIdProvider", %"class.base::WorkIdProvider"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i32, i32* %2 acquire, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base14WorkIdProviderD2Ev(%"class.base::WorkIdProvider"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base14WorkIdProvider26SetCurrentWorkIdForTestingEj(%"class.base::WorkIdProvider"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.base::WorkIdProvider", %"class.base::WorkIdProvider"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %1, i32* %3 monotonic, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base14WorkIdProvider25IncrementWorkIdForTestingEv(%"class.base::WorkIdProvider"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::WorkIdProvider", %"class.base::WorkIdProvider"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i32, i32* %2 monotonic, align 4
  %4 = add i32 %3, 1
  %5 = icmp eq i32 %4, 0
  %6 = select i1 %5, i32 1, i32 %4
  store atomic i32 %6, i32* %2 release, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base14WorkIdProvider15IncrementWorkIdEv(%"class.base::WorkIdProvider"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::WorkIdProvider", %"class.base::WorkIdProvider"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i32, i32* %2 monotonic, align 4
  %4 = add i32 %3, 1
  %5 = icmp eq i32 %4, 0
  %6 = select i1 %5, i32 1, i32 %4
  store atomic i32 %6, i32* %2 release, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base14WorkIdProviderC2Ev(%"class.base::WorkIdProvider"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.base::WorkIdProvider", %"class.base::WorkIdProvider"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base23ThreadLocalOwnedPointerINS_14WorkIdProviderEE12DeleteTlsPtrEPv(i8*) #0 comdat align 2 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %4, label %3

3:                                                ; preds = %1
  tail call void @_ZdlPv(i8* nonnull %0) #9
  br label %4

4:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"*, void (i8*)*) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #6

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
