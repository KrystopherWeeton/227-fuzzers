; ModuleID = '../../third_party/opus/src/celt/entcode.c'
source_filename = "../../third_party/opus/src/celt/entcode.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.ec_ctx = type { i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@ec_tell_frac.correction = internal unnamed_addr constant [8 x i32] [i32 35733, i32 38967, i32 42495, i32 46340, i32 50535, i32 55109, i32 60097, i32 65535], align 16

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @ec_tell_frac(%struct.ec_ctx* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  %4 = shl i32 %3, 3
  %5 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 7
  %6 = load i32, i32* %5, align 8
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 true), !range !2
  %8 = sub nsw i32 16, %7
  %9 = lshr i32 %6, %8
  %10 = lshr i32 %9, 12
  %11 = add nsw i32 %10, -8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds [8 x i32], [8 x i32]* @ec_tell_frac.correction, i64 0, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = icmp ugt i32 %9, %14
  %16 = shl nuw nsw i32 %7, 3
  %17 = sub nsw i32 8, %10
  %18 = add i32 %4, -256
  %19 = add i32 %18, %16
  %20 = zext i1 %15 to i32
  %21 = sub i32 %19, %20
  %22 = add i32 %21, %17
  ret i32 %22
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #1

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
