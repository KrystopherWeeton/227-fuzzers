; ModuleID = '../../gpu/vulkan/vulkan_fence_helper.cc'
source_filename = "../../gpu/vulkan/vulkan_fence_helper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gpu::VulkanFenceHelper::FenceHandle" = type { %struct.VkFence_T*, i64 }
%struct.VkFence_T = type opaque
%"class.gpu::VulkanFenceHelper" = type { %"class.gpu::VulkanDeviceQueue"*, %"class.std::__1::vector.4", i64, i64, %"class.base::circular_deque", %"class.base::WeakPtrFactory" }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.7" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.base::OnceCallback"* }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"struct.gpu::VulkanFenceHelper::TasksForFence"*, i64 }
%"struct.gpu::VulkanFenceHelper::TasksForFence" = type { %struct.VkFence_T*, i64, %"class.std::__1::vector.4" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.13", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.13" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i8 }
%"class.gpu::VulkanDeviceQueue" = type { %"class.base::internal::flat_tree", %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceDriverProperties, %struct.VkDevice_T*, %struct.VkDevice_T*, %struct.VkQueue_T*, i32, %struct.VkInstance_T*, %struct.VmaAllocator_T*, %"class.std::__1::unique_ptr", %struct.VkPhysicalDeviceFeatures2, i8, %struct.VkPhysicalDeviceProtectedMemoryFeatures }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::BasicStringPiece"* }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkDevice_T = type opaque
%struct.VkQueue_T = type opaque
%struct.VkInstance_T = type opaque
%struct.VmaAllocator_T = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.gpu::VulkanFenceHelper"* }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceProtectedMemoryFeatures = type { i32, i8*, i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.gpu::VulkanFunctionPointers" = type { i8*, %"class.gpu::VulkanFunctionPointers::VulkanFunction", %"class.gpu::VulkanFunctionPointers::VulkanFunction.40", %"class.gpu::VulkanFunctionPointers::VulkanFunction.41", %"class.gpu::VulkanFunctionPointers::VulkanFunction.42", %"class.gpu::VulkanFunctionPointers::VulkanFunction.43", %"class.gpu::VulkanFunctionPointers::VulkanFunction.44", %"class.gpu::VulkanFunctionPointers::VulkanFunction.45", %"class.gpu::VulkanFunctionPointers::VulkanFunction.46", %"class.gpu::VulkanFunctionPointers::VulkanFunction.47", %"class.gpu::VulkanFunctionPointers::VulkanFunction.48", %"class.gpu::VulkanFunctionPointers::VulkanFunction.49", %"class.gpu::VulkanFunctionPointers::VulkanFunction.50", %"class.gpu::VulkanFunctionPointers::VulkanFunction.51", %"class.gpu::VulkanFunctionPointers::VulkanFunction.52", %"class.gpu::VulkanFunctionPointers::VulkanFunction.53", %"class.gpu::VulkanFunctionPointers::VulkanFunction.54", %"class.gpu::VulkanFunctionPointers::VulkanFunction.55", %"class.gpu::VulkanFunctionPointers::VulkanFunction.56", %"class.gpu::VulkanFunctionPointers::VulkanFunction.57", %"class.gpu::VulkanFunctionPointers::VulkanFunction.58", %"class.gpu::VulkanFunctionPointers::VulkanFunction.59", %"class.gpu::VulkanFunctionPointers::VulkanFunction.60", %"class.gpu::VulkanFunctionPointers::VulkanFunction.61", %"class.gpu::VulkanFunctionPointers::VulkanFunction.62", %"class.gpu::VulkanFunctionPointers::VulkanFunction.63", %"class.gpu::VulkanFunctionPointers::VulkanFunction.64", %"class.gpu::VulkanFunctionPointers::VulkanFunction.65", %"class.gpu::VulkanFunctionPointers::VulkanFunction.66", %"class.gpu::VulkanFunctionPointers::VulkanFunction.67", %"class.gpu::VulkanFunctionPointers::VulkanFunction.68", %"class.gpu::VulkanFunctionPointers::VulkanFunction.69", %"class.gpu::VulkanFunctionPointers::VulkanFunction.70", %"class.gpu::VulkanFunctionPointers::VulkanFunction.71", %"class.gpu::VulkanFunctionPointers::VulkanFunction.72", %"class.gpu::VulkanFunctionPointers::VulkanFunction.73", %"class.gpu::VulkanFunctionPointers::VulkanFunction.74", %"class.gpu::VulkanFunctionPointers::VulkanFunction.75", %"class.gpu::VulkanFunctionPointers::VulkanFunction.76", %"class.gpu::VulkanFunctionPointers::VulkanFunction.77", %"class.gpu::VulkanFunctionPointers::VulkanFunction.78", %"class.gpu::VulkanFunctionPointers::VulkanFunction.79", %"class.gpu::VulkanFunctionPointers::VulkanFunction.80", %"class.gpu::VulkanFunctionPointers::VulkanFunction.81", %"class.gpu::VulkanFunctionPointers::VulkanFunction.82", %"class.gpu::VulkanFunctionPointers::VulkanFunction.83", %"class.gpu::VulkanFunctionPointers::VulkanFunction.84", %"class.gpu::VulkanFunctionPointers::VulkanFunction.85", %"class.gpu::VulkanFunctionPointers::VulkanFunction.86", %"class.gpu::VulkanFunctionPointers::VulkanFunction.87", %"class.gpu::VulkanFunctionPointers::VulkanFunction.88", %"class.gpu::VulkanFunctionPointers::VulkanFunction.89", %"class.gpu::VulkanFunctionPointers::VulkanFunction.90", %"class.gpu::VulkanFunctionPointers::VulkanFunction.91", %"class.gpu::VulkanFunctionPointers::VulkanFunction.92", %"class.gpu::VulkanFunctionPointers::VulkanFunction.93", %"class.gpu::VulkanFunctionPointers::VulkanFunction.94", %"class.gpu::VulkanFunctionPointers::VulkanFunction.95", %"class.gpu::VulkanFunctionPointers::VulkanFunction.96", %"class.gpu::VulkanFunctionPointers::VulkanFunction.97", %"class.gpu::VulkanFunctionPointers::VulkanFunction.98", %"class.gpu::VulkanFunctionPointers::VulkanFunction.99", %"class.gpu::VulkanFunctionPointers::VulkanFunction.100", %"class.gpu::VulkanFunctionPointers::VulkanFunction.101", %"class.gpu::VulkanFunctionPointers::VulkanFunction.102", %"class.gpu::VulkanFunctionPointers::VulkanFunction.103", %"class.gpu::VulkanFunctionPointers::VulkanFunction.104", %"class.gpu::VulkanFunctionPointers::VulkanFunction.105", %"class.gpu::VulkanFunctionPointers::VulkanFunction.106", %"class.gpu::VulkanFunctionPointers::VulkanFunction.107", %"class.gpu::VulkanFunctionPointers::VulkanFunction.108", %"class.gpu::VulkanFunctionPointers::VulkanFunction.109", %"class.gpu::VulkanFunctionPointers::VulkanFunction.110", %"class.gpu::VulkanFunctionPointers::VulkanFunction.111", %"class.gpu::VulkanFunctionPointers::VulkanFunction.107", %"class.gpu::VulkanFunctionPointers::VulkanFunction.112", %"class.gpu::VulkanFunctionPointers::VulkanFunction.113", %"class.gpu::VulkanFunctionPointers::VulkanFunction.114", %"class.gpu::VulkanFunctionPointers::VulkanFunction.115", %"class.gpu::VulkanFunctionPointers::VulkanFunction.116", %"class.gpu::VulkanFunctionPointers::VulkanFunction.117", %"class.gpu::VulkanFunctionPointers::VulkanFunction.118", %"class.gpu::VulkanFunctionPointers::VulkanFunction.119", %"class.gpu::VulkanFunctionPointers::VulkanFunction.120", %"class.gpu::VulkanFunctionPointers::VulkanFunction.121", %"class.gpu::VulkanFunctionPointers::VulkanFunction.122", %"class.gpu::VulkanFunctionPointers::VulkanFunction.123", %"class.gpu::VulkanFunctionPointers::VulkanFunction.124", %"class.gpu::VulkanFunctionPointers::VulkanFunction.125", %"class.gpu::VulkanFunctionPointers::VulkanFunction.126", %"class.gpu::VulkanFunctionPointers::VulkanFunction.127", %"class.gpu::VulkanFunctionPointers::VulkanFunction.128", %"class.gpu::VulkanFunctionPointers::VulkanFunction.129", %"class.gpu::VulkanFunctionPointers::VulkanFunction.130", %"class.gpu::VulkanFunctionPointers::VulkanFunction.131", %"class.gpu::VulkanFunctionPointers::VulkanFunction.132", %"class.gpu::VulkanFunctionPointers::VulkanFunction.133", %"class.gpu::VulkanFunctionPointers::VulkanFunction.134", %"class.gpu::VulkanFunctionPointers::VulkanFunction.135", %"class.gpu::VulkanFunctionPointers::VulkanFunction.136", %"class.gpu::VulkanFunctionPointers::VulkanFunction.137" }
%"class.gpu::VulkanFunctionPointers::VulkanFunction" = type { void ()* (%struct.VkInstance_T*, i8*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.40" = type { i32 (i32*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.41" = type { i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)* }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.42" = type { i32 (i8*, i32*, %struct.VkExtensionProperties*)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.43" = type { i32 (i32*, %struct.VkLayerProperties*)* }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.44" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)* }
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.45" = type { void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.46" = type { i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.47" = type { i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.48" = type { i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.49" = type { void ()* (%struct.VkDevice_T*, i8*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.50" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.51" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)* }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.52" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)* }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.53" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)* }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.54" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)* }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.55" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)* }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.56" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.57" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)* }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.58" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)* }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.59" = type { void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)* }
%struct.VkSurfaceKHR_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.60" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)* }
%struct.VkSurfaceCapabilitiesKHR = type { i32, i32, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32, i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.61" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)* }
%struct.VkSurfaceFormatKHR = type { i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.62" = type { i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.63" = type { i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)* }
%struct.VkXcbSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct.xcb_connection_t*, i32 }
%struct.xcb_connection_t = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.64" = type { i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.65" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)* }
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%struct.VkCommandBuffer_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.66" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)* }
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorPool_T = type opaque
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkDescriptorSet_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.67" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)* }
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%struct.VkDeviceMemory_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.68" = type { i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)* }
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%struct.VkRenderPass_T = type opaque
%struct.VkFramebuffer_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.69" = type { i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkBuffer_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.70" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)* }
%struct.VkBindBufferMemoryInfo = type { i32, i8*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.71" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkImage_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.72" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)* }
%struct.VkBindImageMemoryInfo = type { i32, i8*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.73" = type { void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)* }
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.74" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)* }
%struct.VkBufferCopy = type { i64, i64, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.75" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)* }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.76" = type { void (%struct.VkCommandBuffer_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.77" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.78" = type { void (%struct.VkCommandBuffer_T*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.79" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.80" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)* }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.81" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)* }
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.82" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)* }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.83" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)* }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%struct.VkSampler_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.84" = type { i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)* }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.85" = type { i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)* }
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.86" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkPipelineCache_T = type opaque
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkShaderModule_T = type opaque
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkPipelineLayout_T = type opaque
%struct.VkPipeline_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.87" = type { i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.88" = type { i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)* }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.89" = type { i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)* }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.90" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)* }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.91" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)* }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%struct.VkSemaphore_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.92" = type { i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)* }
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.93" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.94" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.95" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.96" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.97" = type { void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.98" = type { void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.99" = type { void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.100" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.101" = type { void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.102" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.103" = type { void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.104" = type { void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.105" = type { void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.106" = type { i32 (%struct.VkDevice_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.108" = type { i32 (%struct.VkCommandBuffer_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.109" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.110" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.111" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.107" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)* }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.112" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.113" = type { void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkBufferMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkBuffer_T* }
%struct.VkMemoryRequirements2 = type { i32, i8*, %struct.VkMemoryRequirements }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.114" = type { void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.115" = type { void (%struct.VkDevice_T*, %struct.VkDeviceQueueInfo2*, %struct.VkQueue_T**)* }
%struct.VkDeviceQueueInfo2 = type { i32, i8*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.116" = type { i32 (%struct.VkDevice_T*, %struct.VkFence_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.117" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.118" = type { void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkImageMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.119" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)* }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.120" = type { i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.121" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)* }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.122" = type { i32 (%struct.VkQueue_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.123" = type { i32 (%struct.VkCommandBuffer_T*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.124" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.125" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.126" = type { void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)* }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkBufferView_T = type opaque
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.127" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.128" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*)* }
%struct.VkSemaphoreGetFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.129" = type { i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)* }
%struct.VkImportSemaphoreFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.130" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)* }
%struct.VkMemoryGetFdInfoKHR = type { i32, i8*, %struct.VkDeviceMemory_T*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.131" = type { i32 (%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*)* }
%struct.VkMemoryFdPropertiesKHR = type { i32, i8*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.132" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i64, %struct.VkSemaphore_T*, %struct.VkFence_T*, i32*)* }
%struct.VkSwapchainKHR_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.133" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)* }
%struct.VkSwapchainCreateInfoKHR = type { i32, i8*, i32, %struct.VkSurfaceKHR_T*, i32, i32, i32, %struct.VkExtent2D, i32, i32, i32, i32, i32*, i32, i32, i32, i32, %struct.VkSwapchainKHR_T* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.134" = type { void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.135" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkImage_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.136" = type { i32 (%struct.VkQueue_T*, %struct.VkPresentInfoKHR*)* }
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.137" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageDrmFormatModifierPropertiesEXT*)* }
%struct.VkImageDrmFormatModifierPropertiesEXT = type { i32, i8*, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::OnceCallback.20" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %struct.VkSemaphore_T**, %struct.VkSemaphore_T**, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %struct.VkSemaphore_T** }
%struct.VmaAllocation_T = type opaque
%"class.logging::CheckOpResult" = type { i8* }

$_ZNSt3__16vectorIN4base12OnceCallbackIFvPN3gpu17VulkanDeviceQueueEbEEENS_9allocatorIS7_EEE6insertINS_13move_iteratorINS_11__wrap_iterIPS7_EEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS7_NS_15iterator_traitsISI_E9referenceEEE5valueESF_E4typeENSD_IPKS7_EESI_SI_ = comdat any

$_ZN4base14circular_dequeIN3gpu17VulkanFenceHelper13TasksForFenceEE13DestructRangeEmm = comdat any

$_ZN4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEE13DestructRangeIS4_Li0EEEvPS4_S7_ = comdat any

$_ZN4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEEixEm = comdat any

$_ZZN7logging15CheckOpValueStrIPN3gpu17VulkanFenceHelper13TasksForFenceEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZN4base14circular_dequeIN3gpu17VulkanFenceHelper13TasksForFenceEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeIN3gpu17VulkanFenceHelper13TasksForFenceEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_ = comdat any

$_ZNSt3__16vectorIN4base12OnceCallbackIFvPN3gpu17VulkanDeviceQueueEbEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_ = comdat any

$_ZNK4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEEixEm = comdat any

$_ZN4base14circular_dequeIN3gpu17VulkanFenceHelper13TasksForFenceEE25ShrinkCapacityIfNecessaryEv = comdat any

@__const._ZN3gpu17VulkanFenceHelper8GetFenceEPP9VkFence_T.create_info = private unnamed_addr constant { i32, [4 x i8], i8*, i32, [4 x i8] } { i32 8, [4 x i8] zeroinitializer, i8* null, i32 0, [4 x i8] zeroinitializer }, align 8
@.str = private unnamed_addr constant [40 x i8] c"../../gpu/vulkan/vulkan_fence_helper.cc\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"result == VK_SUCCESS || result == VK_ERROR_DEVICE_LOST\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.5 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1
@.str.7 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN3gpu17VulkanFenceHelper11FenceHandleC1Ev = hidden unnamed_addr alias void (%"class.gpu::VulkanFenceHelper::FenceHandle"*), void (%"class.gpu::VulkanFenceHelper::FenceHandle"*)* @_ZN3gpu17VulkanFenceHelper11FenceHandleC2Ev
@_ZN3gpu17VulkanFenceHelper11FenceHandleC1EP9VkFence_Tm = hidden unnamed_addr alias void (%"class.gpu::VulkanFenceHelper::FenceHandle"*, %struct.VkFence_T*, i64), void (%"class.gpu::VulkanFenceHelper::FenceHandle"*, %struct.VkFence_T*, i64)* @_ZN3gpu17VulkanFenceHelper11FenceHandleC2EP9VkFence_Tm
@_ZN3gpu17VulkanFenceHelper11FenceHandleC1ERKS1_ = hidden unnamed_addr alias void (%"class.gpu::VulkanFenceHelper::FenceHandle"*, %"class.gpu::VulkanFenceHelper::FenceHandle"*), void (%"class.gpu::VulkanFenceHelper::FenceHandle"*, %"class.gpu::VulkanFenceHelper::FenceHandle"*)* @_ZN3gpu17VulkanFenceHelper11FenceHandleC2ERKS1_
@_ZN3gpu17VulkanFenceHelperC1EPNS_17VulkanDeviceQueueE = hidden unnamed_addr alias void (%"class.gpu::VulkanFenceHelper"*, %"class.gpu::VulkanDeviceQueue"*), void (%"class.gpu::VulkanFenceHelper"*, %"class.gpu::VulkanDeviceQueue"*)* @_ZN3gpu17VulkanFenceHelperC2EPNS_17VulkanDeviceQueueE
@_ZN3gpu17VulkanFenceHelperD1Ev = hidden unnamed_addr alias void (%"class.gpu::VulkanFenceHelper"*), void (%"class.gpu::VulkanFenceHelper"*)* @_ZN3gpu17VulkanFenceHelperD2Ev
@_ZN3gpu17VulkanFenceHelper13TasksForFenceC1ENS0_11FenceHandleENSt3__16vectorIN4base12OnceCallbackIFvPNS_17VulkanDeviceQueueEbEEENS3_9allocatorISA_EEEE = hidden unnamed_addr alias void (%"struct.gpu::VulkanFenceHelper::TasksForFence"*, %"class.gpu::VulkanFenceHelper::FenceHandle"*, %"class.std::__1::vector.4"*), void (%"struct.gpu::VulkanFenceHelper::TasksForFence"*, %"class.gpu::VulkanFenceHelper::FenceHandle"*, %"class.std::__1::vector.4"*)* @_ZN3gpu17VulkanFenceHelper13TasksForFenceC2ENS0_11FenceHandleENSt3__16vectorIN4base12OnceCallbackIFvPNS_17VulkanDeviceQueueEbEEENS3_9allocatorISA_EEEE
@_ZN3gpu17VulkanFenceHelper13TasksForFenceC1EmNSt3__16vectorIN4base12OnceCallbackIFvPNS_17VulkanDeviceQueueEbEEENS2_9allocatorIS9_EEEE = hidden unnamed_addr alias void (%"struct.gpu::VulkanFenceHelper::TasksForFence"*, i64, %"class.std::__1::vector.4"*), void (%"struct.gpu::VulkanFenceHelper::TasksForFence"*, i64, %"class.std::__1::vector.4"*)* @_ZN3gpu17VulkanFenceHelper13TasksForFenceC2EmNSt3__16vectorIN4base12OnceCallbackIFvPNS_17VulkanDeviceQueueEbEEENS2_9allocatorIS9_EEEE
@_ZN3gpu17VulkanFenceHelper13TasksForFenceD1Ev = hidden unnamed_addr alias void (%"struct.gpu::VulkanFenceHelper::TasksForFence"*), void (%"struct.gpu::VulkanFenceHelper::TasksForFence"*)* @_ZN3gpu17VulkanFenceHelper13TasksForFenceD2Ev
@_ZN3gpu17VulkanFenceHelper13TasksForFenceC1EOS1_ = hidden unnamed_addr alias void (%"struct.gpu::VulkanFenceHelper::TasksForFence"*, %"struct.gpu::VulkanFenceHelper::TasksForFence"*), void (%"struct.gpu::VulkanFenceHelper::TasksForFence"*, %"struct.gpu::VulkanFenceHelper::TasksForFence"*)* @_ZN3gpu17VulkanFenceHelper13TasksForFenceC2EOS1_

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3gpu17VulkanFenceHelper11FenceHandleC2Ev(%"class.gpu::VulkanFenceHelper::FenceHandle"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.gpu::VulkanFenceHelper::FenceHandle"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3gpu17VulkanFenceHelper11FenceHandleC2EP9VkFence_Tm(%"class.gpu::VulkanFenceHelper::FenceHandle"* nocapture, %struct.VkFence_T*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gpu::VulkanFenceHelper::FenceHandle", %"class.gpu::VulkanFenceHelper::FenceHandle"* %0, i64 0, i32 0
  store %struct.VkFence_T* %1, %struct.VkFence_T** %4, align 8
  %5 = getelementptr inbounds %"class.gpu::VulkanFenceHelper::FenceHandle", %"class.gpu::VulkanFenceHelper::FenceHandle"* %0, i64 0, i32 1
  store i64 %2, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17VulkanFenceHelper11FenceHandleC2ERKS1_(%"class.gpu::VulkanFenceHelper::FenceHandle"* nocapture, %"class.gpu::VulkanFenceHelper::FenceHandle"* nocapture readonly dereferenceable(16)) unnamed_addr #1 align 2 {
  %3 = bitcast %"class.gpu::VulkanFenceHelper::FenceHandle"* %0 to i8*
  %4 = bitcast %"class.gpu::VulkanFenceHelper::FenceHandle"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.gpu::VulkanFenceHelper::FenceHandle"* @_ZN3gpu17VulkanFenceHelper11FenceHandleaSERKS1_(%"class.gpu::VulkanFenceHelper::FenceHandle"* returned, %"class.gpu::VulkanFenceHelper::FenceHandle"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"class.gpu::VulkanFenceHelper::FenceHandle"* %0 to i8*
  %4 = bitcast %"class.gpu::VulkanFenceHelper::FenceHandle"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  ret %"class.gpu::VulkanFenceHelper::FenceHandle"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17VulkanFenceHelperC2EPNS_17VulkanDeviceQueueE(%"class.gpu::VulkanFenceHelper"*, %"class.gpu::VulkanDeviceQueue"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 0
  store %"class.gpu::VulkanDeviceQueue"* %1, %"class.gpu::VulkanDeviceQueue"** %3, align 8
  %4 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::vector.4"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #13
  %6 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 2
  store i64 1, i64* %6, align 8
  %7 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 5, i32 0
  %9 = ptrtoint %"class.gpu::VulkanFenceHelper"* %0 to i64
  %10 = bitcast i64* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 40, i1 false)
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %8, i64 %9) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17VulkanFenceHelperD2Ev(%"class.gpu::VulkanFenceHelper"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %2) #13
  %3 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 4, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 4, i32 2
  %7 = load i64, i64* %6, align 8
  tail call void @_ZN4base14circular_dequeIN3gpu17VulkanFenceHelper13TasksForFenceEE13DestructRangeEmm(%"class.base::circular_deque"* %3, i64 %5, i64 %7) #13
  %8 = bitcast %"class.base::circular_deque"* %3 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @free(i8* %9) #13
  %10 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %11, align 8
  %13 = icmp eq %"class.base::OnceCallback"* %12, null
  br i1 %13, label %29, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.base::OnceCallback"* %12 to i8*
  %16 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 1, i32 0, i32 1
  %17 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %16, align 8
  %18 = icmp eq %"class.base::OnceCallback"* %17, %12
  br i1 %18, label %27, label %19

19:                                               ; preds = %14, %19
  %20 = phi %"class.base::OnceCallback"* [ %21, %19 ], [ %17, %14 ]
  %21 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %20, i64 -1
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %21, i64 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %22) #13
  %23 = icmp eq %"class.base::OnceCallback"* %21, %12
  br i1 %23, label %24, label %19

24:                                               ; preds = %19
  %25 = bitcast %"class.std::__1::vector.4"* %10 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %14
  %28 = phi i8* [ %26, %24 ], [ %15, %14 ]
  store %"class.base::OnceCallback"* %12, %"class.base::OnceCallback"** %16, align 8
  tail call void @_ZdlPv(i8* %28) #14
  br label %29

29:                                               ; preds = %1, %27
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17VulkanFenceHelper7DestroyEv(%"class.gpu::VulkanFenceHelper"*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN3gpu17VulkanFenceHelper23PerformImmediateCleanupEv(%"class.gpu::VulkanFenceHelper"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17VulkanFenceHelper23PerformImmediateCleanupEv(%"class.gpu::VulkanFenceHelper"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.std::__1::vector.4", align 8
  %5 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 4, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 4, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  br i1 %10, label %11, label %17

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %12, align 8
  %14 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %14, align 8
  %16 = icmp eq %"class.base::OnceCallback"* %13, %15
  br i1 %16, label %131, label %17

17:                                               ; preds = %11, %1
  %18 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 0
  %19 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %18, align 8
  %20 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %19, i64 0, i32 6
  %21 = load %struct.VkQueue_T*, %struct.VkQueue_T** %20, align 8
  %22 = tail call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #13
  %23 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %22, i64 0, i32 85, i32 0
  %24 = load i32 (%struct.VkQueue_T*)*, i32 (%struct.VkQueue_T*)** %23, align 8
  %25 = tail call i32 %24(%struct.VkQueue_T* %21) #13
  %26 = icmp eq i32 %25, -4
  switch i32 %25, label %27 [
    i32 -4, label %30
    i32 0, label %30
  ]

27:                                               ; preds = %17
  %28 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i32 248, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0)) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %17, %17, %27
  %31 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, -1
  %34 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 3
  store i64 %33, i64* %34, align 8
  %35 = bitcast %"class.std::__1::vector.4"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #13
  %36 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %4, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 24, i1 false) #13
  %38 = load i64, i64* %6, align 8
  %39 = load i64, i64* %8, align 8
  %40 = icmp eq i64 %38, %39
  br i1 %40, label %76, label %41

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %5, i64 0, i32 0
  %43 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 4, i32 0, i32 1
  br label %44

44:                                               ; preds = %41, %44
  %45 = phi i64 [ %38, %41 ], [ %71, %44 ]
  %46 = call dereferenceable(40) %"struct.gpu::VulkanFenceHelper::TasksForFence"* @_ZN4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEEixEm(%"class.base::internal::VectorBuffer"* %42, i64 %45) #13
  %47 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %18, align 8
  %48 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %47, i64 0, i32 5
  %49 = load %struct.VkDevice_T*, %struct.VkDevice_T** %48, align 8
  %50 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %46, i64 0, i32 0
  %51 = load %struct.VkFence_T*, %struct.VkFence_T** %50, align 8
  %52 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #13
  %53 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %52, i64 0, i32 60, i32 0
  %54 = load void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)** %53, align 8
  call void %54(%struct.VkDevice_T* %49, %struct.VkFence_T* %51, %struct.VkAllocationCallbacks* null) #13
  %55 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %37, align 8
  %56 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %46, i64 0, i32 2, i32 0, i32 0
  %57 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %56, align 8
  %58 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %46, i64 0, i32 2, i32 0, i32 1
  %59 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %58, align 8
  %60 = call %"class.base::OnceCallback"* @_ZNSt3__16vectorIN4base12OnceCallbackIFvPN3gpu17VulkanDeviceQueueEbEEENS_9allocatorIS7_EEE6insertINS_13move_iteratorINS_11__wrap_iterIPS7_EEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS7_NS_15iterator_traitsISI_E9referenceEEE5valueESF_E4typeENSD_IPKS7_EESI_SI_(%"class.std::__1::vector.4"* nonnull %4, %"class.base::OnceCallback"* %55, %"class.base::OnceCallback"* %57, %"class.base::OnceCallback"* %59)
  %61 = load i64, i64* %6, align 8
  %62 = call dereferenceable(40) %"struct.gpu::VulkanFenceHelper::TasksForFence"* @_ZN4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEEixEm(%"class.base::internal::VectorBuffer"* %42, i64 %61) #13
  %63 = load i64, i64* %6, align 8
  %64 = add i64 %63, 1
  %65 = call dereferenceable(40) %"struct.gpu::VulkanFenceHelper::TasksForFence"* @_ZN4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEEixEm(%"class.base::internal::VectorBuffer"* %42, i64 %64) #13
  call void @_ZN4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer"* %42, %"struct.gpu::VulkanFenceHelper::TasksForFence"* %62, %"struct.gpu::VulkanFenceHelper::TasksForFence"* %65) #13
  %66 = load i64, i64* %6, align 8
  %67 = add i64 %66, 1
  %68 = load i64, i64* %43, align 8
  %69 = icmp eq i64 %67, %68
  %70 = select i1 %69, i64 0, i64 %67
  store i64 %70, i64* %6, align 8
  call void @_ZN4base14circular_dequeIN3gpu17VulkanFenceHelper13TasksForFenceEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %5) #13
  %71 = load i64, i64* %6, align 8
  %72 = load i64, i64* %8, align 8
  %73 = icmp eq i64 %71, %72
  br i1 %73, label %74, label %44

74:                                               ; preds = %44
  %75 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %37, align 8
  br label %76

76:                                               ; preds = %74, %30
  %77 = phi %"class.base::OnceCallback"* [ %75, %74 ], [ null, %30 ]
  %78 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 1, i32 0, i32 0
  %79 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %78, align 8
  %80 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 1, i32 0, i32 1
  %81 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %80, align 8
  %82 = call %"class.base::OnceCallback"* @_ZNSt3__16vectorIN4base12OnceCallbackIFvPN3gpu17VulkanDeviceQueueEbEEENS_9allocatorIS7_EEE6insertINS_13move_iteratorINS_11__wrap_iterIPS7_EEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS7_NS_15iterator_traitsISI_E9referenceEEE5valueESF_E4typeENSD_IPKS7_EESI_SI_(%"class.std::__1::vector.4"* nonnull %4, %"class.base::OnceCallback"* %77, %"class.base::OnceCallback"* %79, %"class.base::OnceCallback"* %81)
  %83 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %78, align 8
  %84 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %80, align 8
  %85 = icmp eq %"class.base::OnceCallback"* %84, %83
  br i1 %85, label %91, label %86

86:                                               ; preds = %76, %86
  %87 = phi %"class.base::OnceCallback"* [ %88, %86 ], [ %84, %76 ]
  %88 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %87, i64 -1
  %89 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %88, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %89) #13
  %90 = icmp eq %"class.base::OnceCallback"* %88, %83
  br i1 %90, label %91, label %86

91:                                               ; preds = %86, %76
  store %"class.base::OnceCallback"* %83, %"class.base::OnceCallback"** %80, align 8
  %92 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %36, align 8
  %93 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %37, align 8
  %94 = icmp eq %"class.base::OnceCallback"* %92, %93
  br i1 %94, label %101, label %95

95:                                               ; preds = %91
  %96 = bitcast %"class.base::OnceCallback"* %2 to i8*
  %97 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %98 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  br label %119

99:                                               ; preds = %119
  %100 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %36, align 8
  br label %101

101:                                              ; preds = %99, %91
  %102 = phi %"class.base::OnceCallback"* [ %100, %99 ], [ %92, %91 ]
  %103 = icmp eq %"class.base::OnceCallback"* %102, null
  br i1 %103, label %118, label %104

104:                                              ; preds = %101
  %105 = bitcast %"class.base::OnceCallback"* %102 to i8*
  %106 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %37, align 8
  %107 = icmp eq %"class.base::OnceCallback"* %106, %102
  br i1 %107, label %116, label %108

108:                                              ; preds = %104, %108
  %109 = phi %"class.base::OnceCallback"* [ %110, %108 ], [ %106, %104 ]
  %110 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %109, i64 -1
  %111 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %110, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %111) #13
  %112 = icmp eq %"class.base::OnceCallback"* %110, %102
  br i1 %112, label %113, label %108

113:                                              ; preds = %108
  %114 = bitcast %"class.std::__1::vector.4"* %4 to i8**
  %115 = load i8*, i8** %114, align 8
  br label %116

116:                                              ; preds = %113, %104
  %117 = phi i8* [ %115, %113 ], [ %105, %104 ]
  store %"class.base::OnceCallback"* %102, %"class.base::OnceCallback"** %37, align 8
  call void @_ZdlPv(i8* %117) #14
  br label %118

118:                                              ; preds = %101, %116
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #13
  br label %131

119:                                              ; preds = %95, %119
  %120 = phi %"class.base::OnceCallback"* [ %92, %95 ], [ %129, %119 ]
  %121 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #13
  %122 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %120, i64 0, i32 0, i32 0, i32 0
  %123 = bitcast %"class.base::OnceCallback"* %120 to i64*
  %124 = load i64, i64* %123, align 8
  store i64 %124, i64* %97, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %122, align 8
  %125 = inttoptr i64 %124 to %"class.base::internal::BindStateBase"*
  %126 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %125, i64 0, i32 1
  %127 = bitcast void ()** %126 to void (%"class.base::internal::BindStateBase"*, %"class.gpu::VulkanDeviceQueue"*, i1)**
  %128 = load void (%"class.base::internal::BindStateBase"*, %"class.gpu::VulkanDeviceQueue"*, i1)*, void (%"class.base::internal::BindStateBase"*, %"class.gpu::VulkanDeviceQueue"*, i1)** %127, align 8
  call void %128(%"class.base::internal::BindStateBase"* %125, %"class.gpu::VulkanDeviceQueue"* %121, i1 zeroext %26) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %98) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #13
  %129 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %120, i64 1
  %130 = icmp eq %"class.base::OnceCallback"* %129, %93
  br i1 %130, label %99, label %119

131:                                              ; preds = %11, %118
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu17VulkanFenceHelper8GetFenceEPP9VkFence_T(%"class.gpu::VulkanFenceHelper"* nocapture readonly, %struct.VkFence_T**) local_unnamed_addr #1 align 2 {
  %3 = alloca %struct.VkFenceCreateInfo, align 8
  %4 = bitcast %struct.VkFenceCreateInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 bitcast ({ i32, [4 x i8], i8*, i32, [4 x i8] }* @__const._ZN3gpu17VulkanFenceHelper8GetFenceEPP9VkFence_T.create_info to i8*), i64 24, i1 false)
  %5 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 0
  %6 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %5, align 8
  %7 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %6, i64 0, i32 5
  %8 = load %struct.VkDevice_T*, %struct.VkDevice_T** %7, align 8
  %9 = tail call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #13
  %10 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %9, i64 0, i32 46, i32 0
  %11 = load i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)** %10, align 8
  %12 = call i32 %11(%struct.VkDevice_T* %8, %struct.VkFenceCreateInfo* nonnull %3, %struct.VkAllocationCallbacks* null, %struct.VkFence_T** %1) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13
  ret i32 %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17VulkanFenceHelper12EnqueueFenceEP9VkFence_T(%"class.gpu::VulkanFenceHelper::FenceHandle"* noalias nocapture sret, %"class.gpu::VulkanFenceHelper"*, %struct.VkFence_T*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gpu::VulkanFenceHelper::FenceHandle", %"class.gpu::VulkanFenceHelper::FenceHandle"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.gpu::VulkanFenceHelper::FenceHandle", %"class.gpu::VulkanFenceHelper::FenceHandle"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %1, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 1
  store i64 %8, i64* %6, align 8
  store %struct.VkFence_T* %2, %struct.VkFence_T** %4, align 8
  store i64 %7, i64* %5, align 8
  %9 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %1, i64 0, i32 4
  %10 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %1, i64 0, i32 1
  tail call void @_ZN4base14circular_dequeIN3gpu17VulkanFenceHelper13TasksForFenceEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %9, i64 1) #13
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %9, i64 0, i32 0
  %12 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %1, i64 0, i32 4, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = tail call dereferenceable(40) %"struct.gpu::VulkanFenceHelper::TasksForFence"* @_ZN4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEEixEm(%"class.base::internal::VectorBuffer"* %11, i64 %13) #13
  %15 = ptrtoint %struct.VkFence_T* %2 to i64
  %16 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %1, i64 0, i32 1, i32 0, i32 1
  %17 = bitcast %"class.std::__1::vector.4"* %10 to <2 x i64>*
  %18 = load <2 x i64>, <2 x i64>* %17, align 8
  %19 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.base::OnceCallback"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.4"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #13
  %23 = bitcast %"struct.gpu::VulkanFenceHelper::TasksForFence"* %14 to i64*
  store i64 %15, i64* %23, align 8
  %24 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %14, i64 0, i32 1
  store i64 %7, i64* %24, align 8
  %25 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %14, i64 0, i32 2
  %26 = bitcast %"class.std::__1::vector.4"* %25 to <2 x i64>*
  store <2 x i64> %18, <2 x i64>* %26, align 8
  %27 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %14, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %28 = bitcast %"class.base::OnceCallback"** %27 to i64*
  store i64 %21, i64* %28, align 8
  %29 = load i64, i64* %12, align 8
  %30 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %1, i64 0, i32 4, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, -1
  %33 = icmp eq i64 %29, %32
  br i1 %33, label %34, label %35

34:                                               ; preds = %3
  store i64 0, i64* %12, align 8
  br label %38

35:                                               ; preds = %3
  %36 = add i64 %29, 1
  store i64 %36, i64* %12, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35, %34
  br label %39

39:                                               ; preds = %35, %38
  %40 = phi i64 [ %32, %38 ], [ %29, %35 ]
  %41 = tail call dereferenceable(40) %"struct.gpu::VulkanFenceHelper::TasksForFence"* @_ZNK4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEEixEm(%"class.base::internal::VectorBuffer"* %11, i64 %40) #13
  %42 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %10, i64 0, i32 0, i32 0
  %43 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %42, align 8
  %44 = icmp eq %"class.base::OnceCallback"* %43, null
  br i1 %44, label %59, label %45

45:                                               ; preds = %39
  %46 = bitcast %"class.base::OnceCallback"* %43 to i8*
  %47 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %16, align 8
  %48 = icmp eq %"class.base::OnceCallback"* %47, %43
  br i1 %48, label %57, label %49

49:                                               ; preds = %45, %49
  %50 = phi %"class.base::OnceCallback"* [ %51, %49 ], [ %47, %45 ]
  %51 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %50, i64 -1
  %52 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %51, i64 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %52) #13
  %53 = icmp eq %"class.base::OnceCallback"* %51, %43
  br i1 %53, label %54, label %49

54:                                               ; preds = %49
  %55 = bitcast %"class.std::__1::vector.4"* %10 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %45
  %58 = phi i8* [ %56, %54 ], [ %46, %45 ]
  store %"class.base::OnceCallback"* %43, %"class.base::OnceCallback"** %16, align 8
  tail call void @_ZdlPv(i8* %58) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #13
  br label %59

59:                                               ; preds = %57, %39
  %60 = bitcast %"class.std::__1::vector.4"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu17VulkanFenceHelper4WaitENS0_11FenceHandleEm(%"class.gpu::VulkanFenceHelper"*, %"class.gpu::VulkanFenceHelper::FenceHandle"*, i64) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gpu::VulkanFenceHelper::FenceHandle", %"class.gpu::VulkanFenceHelper::FenceHandle"* %1, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN3gpu17VulkanFenceHelper19ProcessCleanupTasksEm(%"class.gpu::VulkanFenceHelper"* %0, i64 0) #13
  %6 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %5
  br i1 %8, label %9, label %20

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.gpu::VulkanFenceHelper::FenceHandle", %"class.gpu::VulkanFenceHelper::FenceHandle"* %1, i64 0, i32 0
  %11 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 0
  %12 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %11, align 8
  %13 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %12, i64 0, i32 5
  %14 = load %struct.VkDevice_T*, %struct.VkDevice_T** %13, align 8
  %15 = tail call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #13
  %16 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %15, i64 0, i32 90, i32 0
  %17 = load i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)*, i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)** %16, align 8
  %18 = tail call i32 %17(%struct.VkDevice_T* %14, i32 1, %struct.VkFence_T** %10, i32 1, i64 %2) #13
  tail call void @_ZN3gpu17VulkanFenceHelper19ProcessCleanupTasksEm(%"class.gpu::VulkanFenceHelper"* %0, i64 0)
  %19 = icmp eq i32 %18, 0
  br label %20

20:                                               ; preds = %3, %9
  %21 = phi i1 [ %19, %9 ], [ true, %3 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu17VulkanFenceHelper9HasPassedENS0_11FenceHandleE(%"class.gpu::VulkanFenceHelper"*, %"class.gpu::VulkanFenceHelper::FenceHandle"* nocapture readonly) local_unnamed_addr #1 align 2 {
  tail call void @_ZN3gpu17VulkanFenceHelper19ProcessCleanupTasksEm(%"class.gpu::VulkanFenceHelper"* %0, i64 0)
  %3 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.gpu::VulkanFenceHelper::FenceHandle", %"class.gpu::VulkanFenceHelper::FenceHandle"* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp uge i64 %4, %6
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17VulkanFenceHelper19ProcessCleanupTasksEm(%"class.gpu::VulkanFenceHelper"*, i64) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.std::__1::vector.4", align 8
  %5 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 0
  %6 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %5, align 8
  %7 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %6, i64 0, i32 5
  %8 = load %struct.VkDevice_T*, %struct.VkDevice_T** %7, align 8
  %9 = icmp eq i64 %1, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  br label %13

13:                                               ; preds = %2, %10
  %14 = phi i64 [ %12, %10 ], [ %1, %2 ]
  %15 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 4, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 4, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %17, %19
  br i1 %20, label %55, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %15, i64 0, i32 0
  %23 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 4, i32 0, i32 1
  br label %24

24:                                               ; preds = %21, %47
  %25 = phi i64 [ %14, %21 ], [ %48, %47 ]
  %26 = phi i64 [ %17, %21 ], [ %52, %47 ]
  %27 = tail call dereferenceable(40) %"struct.gpu::VulkanFenceHelper::TasksForFence"* @_ZNK4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEEixEm(%"class.base::internal::VectorBuffer"* %22, i64 %26) #13
  %28 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %27, i64 0, i32 0
  %29 = load %struct.VkFence_T*, %struct.VkFence_T** %28, align 8
  %30 = icmp eq %struct.VkFence_T* %29, null
  br i1 %30, label %47, label %31

31:                                               ; preds = %24
  %32 = tail call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #13
  %33 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %32, i64 0, i32 79, i32 0
  %34 = load i32 (%struct.VkDevice_T*, %struct.VkFence_T*)*, i32 (%struct.VkDevice_T*, %struct.VkFence_T*)** %33, align 8
  %35 = tail call i32 %34(%struct.VkDevice_T* %8, %struct.VkFence_T* nonnull %29) #13
  switch i32 %35, label %54 [
    i32 1, label %36
    i32 0, label %42
  ]

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %27, i64 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = add i64 %38, -1
  %40 = icmp ult i64 %39, %25
  %41 = select i1 %40, i64 %39, i64 %25
  br label %55

42:                                               ; preds = %31
  %43 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %27, i64 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = icmp ult i64 %44, %25
  %46 = select i1 %45, i64 %25, i64 %44
  br label %47

47:                                               ; preds = %24, %42
  %48 = phi i64 [ %46, %42 ], [ %25, %24 ]
  %49 = add i64 %26, 1
  %50 = load i64, i64* %23, align 8
  %51 = icmp eq i64 %49, %50
  %52 = select i1 %51, i64 0, i64 %49
  %53 = icmp eq i64 %52, %19
  br i1 %53, label %55, label %24

54:                                               ; preds = %31
  tail call void @_ZN3gpu17VulkanFenceHelper23PerformImmediateCleanupEv(%"class.gpu::VulkanFenceHelper"* %0)
  br label %142

55:                                               ; preds = %47, %13, %36
  %56 = phi i64 [ %41, %36 ], [ %14, %13 ], [ %48, %47 ]
  %57 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 3
  store i64 %56, i64* %57, align 8
  %58 = bitcast %"class.std::__1::vector.4"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #13
  %59 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %4, i64 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 24, i1 false) #13
  %61 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %15, i64 0, i32 0
  %62 = load i64, i64* %16, align 8
  %63 = load i64, i64* %18, align 8
  %64 = icmp eq i64 %62, %63
  br i1 %64, label %129, label %65

65:                                               ; preds = %55
  %66 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 4, i32 0, i32 1
  br label %67

67:                                               ; preds = %65, %82
  %68 = phi i64 [ %62, %65 ], [ %99, %82 ]
  %69 = call dereferenceable(40) %"struct.gpu::VulkanFenceHelper::TasksForFence"* @_ZN4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEEixEm(%"class.base::internal::VectorBuffer"* %61, i64 %68) #13
  %70 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %69, i64 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = load i64, i64* %57, align 8
  %73 = icmp ugt i64 %71, %72
  br i1 %73, label %102, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %69, i64 0, i32 0
  %76 = load %struct.VkFence_T*, %struct.VkFence_T** %75, align 8
  %77 = icmp eq %struct.VkFence_T* %76, null
  br i1 %77, label %82, label %78

78:                                               ; preds = %74
  %79 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #13
  %80 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %79, i64 0, i32 60, i32 0
  %81 = load void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)** %80, align 8
  call void %81(%struct.VkDevice_T* %8, %struct.VkFence_T* nonnull %76, %struct.VkAllocationCallbacks* null) #13
  br label %82

82:                                               ; preds = %74, %78
  %83 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %60, align 8
  %84 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %69, i64 0, i32 2, i32 0, i32 0
  %85 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %84, align 8
  %86 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %69, i64 0, i32 2, i32 0, i32 1
  %87 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %86, align 8
  %88 = call %"class.base::OnceCallback"* @_ZNSt3__16vectorIN4base12OnceCallbackIFvPN3gpu17VulkanDeviceQueueEbEEENS_9allocatorIS7_EEE6insertINS_13move_iteratorINS_11__wrap_iterIPS7_EEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS7_NS_15iterator_traitsISI_E9referenceEEE5valueESF_E4typeENSD_IPKS7_EESI_SI_(%"class.std::__1::vector.4"* nonnull %4, %"class.base::OnceCallback"* %83, %"class.base::OnceCallback"* %85, %"class.base::OnceCallback"* %87)
  %89 = load i64, i64* %16, align 8
  %90 = call dereferenceable(40) %"struct.gpu::VulkanFenceHelper::TasksForFence"* @_ZN4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEEixEm(%"class.base::internal::VectorBuffer"* %61, i64 %89) #13
  %91 = load i64, i64* %16, align 8
  %92 = add i64 %91, 1
  %93 = call dereferenceable(40) %"struct.gpu::VulkanFenceHelper::TasksForFence"* @_ZN4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEEixEm(%"class.base::internal::VectorBuffer"* %61, i64 %92) #13
  call void @_ZN4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer"* %61, %"struct.gpu::VulkanFenceHelper::TasksForFence"* %90, %"struct.gpu::VulkanFenceHelper::TasksForFence"* %93) #13
  %94 = load i64, i64* %16, align 8
  %95 = add i64 %94, 1
  %96 = load i64, i64* %66, align 8
  %97 = icmp eq i64 %95, %96
  %98 = select i1 %97, i64 0, i64 %95
  store i64 %98, i64* %16, align 8
  call void @_ZN4base14circular_dequeIN3gpu17VulkanFenceHelper13TasksForFenceEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %15) #13
  %99 = load i64, i64* %16, align 8
  %100 = load i64, i64* %18, align 8
  %101 = icmp eq i64 %99, %100
  br i1 %101, label %102, label %67

102:                                              ; preds = %82, %67
  %103 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %59, align 8
  %104 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %60, align 8
  %105 = icmp eq %"class.base::OnceCallback"* %103, %104
  br i1 %105, label %112, label %106

106:                                              ; preds = %102
  %107 = bitcast %"class.base::OnceCallback"* %3 to i8*
  %108 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %109 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  br label %130

110:                                              ; preds = %130
  %111 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %59, align 8
  br label %112

112:                                              ; preds = %110, %102
  %113 = phi %"class.base::OnceCallback"* [ %111, %110 ], [ %104, %102 ]
  %114 = icmp eq %"class.base::OnceCallback"* %113, null
  br i1 %114, label %129, label %115

115:                                              ; preds = %112
  %116 = bitcast %"class.base::OnceCallback"* %113 to i8*
  %117 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %60, align 8
  %118 = icmp eq %"class.base::OnceCallback"* %117, %113
  br i1 %118, label %127, label %119

119:                                              ; preds = %115, %119
  %120 = phi %"class.base::OnceCallback"* [ %121, %119 ], [ %117, %115 ]
  %121 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %120, i64 -1
  %122 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %121, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %122) #13
  %123 = icmp eq %"class.base::OnceCallback"* %121, %113
  br i1 %123, label %124, label %119

124:                                              ; preds = %119
  %125 = bitcast %"class.std::__1::vector.4"* %4 to i8**
  %126 = load i8*, i8** %125, align 8
  br label %127

127:                                              ; preds = %124, %115
  %128 = phi i8* [ %126, %124 ], [ %116, %115 ]
  store %"class.base::OnceCallback"* %113, %"class.base::OnceCallback"** %60, align 8
  call void @_ZdlPv(i8* %128) #14
  br label %129

129:                                              ; preds = %55, %112, %127
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #13
  br label %142

130:                                              ; preds = %106, %130
  %131 = phi %"class.base::OnceCallback"* [ %103, %106 ], [ %140, %130 ]
  %132 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %5, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #13
  %133 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %131, i64 0, i32 0, i32 0, i32 0
  %134 = bitcast %"class.base::OnceCallback"* %131 to i64*
  %135 = load i64, i64* %134, align 8
  store i64 %135, i64* %108, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %133, align 8
  %136 = inttoptr i64 %135 to %"class.base::internal::BindStateBase"*
  %137 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %136, i64 0, i32 1
  %138 = bitcast void ()** %137 to void (%"class.base::internal::BindStateBase"*, %"class.gpu::VulkanDeviceQueue"*, i1)**
  %139 = load void (%"class.base::internal::BindStateBase"*, %"class.gpu::VulkanDeviceQueue"*, i1)*, void (%"class.base::internal::BindStateBase"*, %"class.gpu::VulkanDeviceQueue"*, i1)** %138, align 8
  call void %139(%"class.base::internal::BindStateBase"* %136, %"class.gpu::VulkanDeviceQueue"* %132, i1 zeroext false) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %109) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #13
  %140 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %131, i64 1
  %141 = icmp eq %"class.base::OnceCallback"* %140, %104
  br i1 %141, label %110, label %130

142:                                              ; preds = %54, %129
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17VulkanFenceHelper34EnqueueCleanupTaskForSubmittedWorkEN4base12OnceCallbackIFvPNS_17VulkanDeviceQueueEbEEE(%"class.gpu::VulkanFenceHelper"*, %"class.base::OnceCallback"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %3, align 8
  %5 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %6 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %5, align 8
  %7 = icmp ult %"class.base::OnceCallback"* %4, %6
  br i1 %7, label %8, label %16

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 1
  %14 = ptrtoint %"class.base::OnceCallback"* %13 to i64
  %15 = bitcast %"class.base::OnceCallback"** %3 to i64*
  store i64 %14, i64* %15, align 8
  br label %18

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 1
  tail call void @_ZNSt3__16vectorIN4base12OnceCallbackIFvPN3gpu17VulkanDeviceQueueEbEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.4"* %17, %"class.base::OnceCallback"* dereferenceable(8) %1) #13
  br label %18

18:                                               ; preds = %8, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::OnceCallback"* @_ZNSt3__16vectorIN4base12OnceCallbackIFvPN3gpu17VulkanDeviceQueueEbEEENS_9allocatorIS7_EEE6insertINS_13move_iteratorINS_11__wrap_iterIPS7_EEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS7_NS_15iterator_traitsISI_E9referenceEEE5valueESF_E4typeENSD_IPKS7_EESI_SI_(%"class.std::__1::vector.4"*, %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.base::OnceCallback"*) local_unnamed_addr #1 comdat align 2 {
  %5 = ptrtoint %"class.base::OnceCallback"* %2 to i64
  %6 = ptrtoint %"class.base::OnceCallback"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 0
  %8 = ptrtoint %"class.base::OnceCallback"* %3 to i64
  %9 = sub i64 %8, %5
  %10 = ashr exact i64 %9, 3
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %540

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %16, align 8
  %18 = ptrtoint %"class.base::OnceCallback"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 3
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"class.base::OnceCallback"** %16 to i64*
  br i1 %21, label %232, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %6
  %25 = ashr exact i64 %24, 3
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %116

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 %25
  %29 = icmp eq %"class.base::OnceCallback"* %28, %3
  br i1 %29, label %111, label %30

30:                                               ; preds = %27
  %31 = xor i64 %25, -1
  %32 = getelementptr %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 %31, i32 0, i32 0, i32 0
  %33 = ptrtoint %"class.base::internal::BindStateBase"** %32 to i64
  %34 = sub i64 %33, %5
  %35 = lshr i64 %34, 3
  %36 = add nuw nsw i64 %35, 1
  %37 = and i64 %36, 7
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %51, label %39

39:                                               ; preds = %30, %39
  %40 = phi %"class.base::OnceCallback"* [ %48, %39 ], [ %17, %30 ]
  %41 = phi %"class.base::OnceCallback"* [ %47, %39 ], [ %28, %30 ]
  %42 = phi i64 [ %49, %39 ], [ %37, %30 ]
  %43 = bitcast %"class.base::OnceCallback"* %40 to i64*
  %44 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %41, i64 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.base::OnceCallback"* %41 to i64*
  %46 = load i64, i64* %45, align 8
  store i64 %46, i64* %43, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %44, align 8
  %47 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %41, i64 1
  %48 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %40, i64 1
  %49 = add i64 %42, -1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %39, !llvm.loop !2

51:                                               ; preds = %39, %30
  %52 = phi %"class.base::OnceCallback"* [ undef, %30 ], [ %48, %39 ]
  %53 = phi %"class.base::OnceCallback"* [ %17, %30 ], [ %48, %39 ]
  %54 = phi %"class.base::OnceCallback"* [ %28, %30 ], [ %47, %39 ]
  %55 = icmp ult i64 %34, 56
  br i1 %55, label %108, label %56

56:                                               ; preds = %51, %56
  %57 = phi %"class.base::OnceCallback"* [ %106, %56 ], [ %53, %51 ]
  %58 = phi %"class.base::OnceCallback"* [ %105, %56 ], [ %54, %51 ]
  %59 = bitcast %"class.base::OnceCallback"* %57 to i64*
  %60 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %58, i64 0, i32 0, i32 0, i32 0
  %61 = bitcast %"class.base::OnceCallback"* %58 to i64*
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %59, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %60, align 8
  %63 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %58, i64 1
  %64 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %57, i64 1
  %65 = bitcast %"class.base::OnceCallback"* %64 to i64*
  %66 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %63, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.base::OnceCallback"* %63 to i64*
  %68 = load i64, i64* %67, align 8
  store i64 %68, i64* %65, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %66, align 8
  %69 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %58, i64 2
  %70 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %57, i64 2
  %71 = bitcast %"class.base::OnceCallback"* %70 to i64*
  %72 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %69, i64 0, i32 0, i32 0, i32 0
  %73 = bitcast %"class.base::OnceCallback"* %69 to i64*
  %74 = load i64, i64* %73, align 8
  store i64 %74, i64* %71, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %72, align 8
  %75 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %58, i64 3
  %76 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %57, i64 3
  %77 = bitcast %"class.base::OnceCallback"* %76 to i64*
  %78 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %75, i64 0, i32 0, i32 0, i32 0
  %79 = bitcast %"class.base::OnceCallback"* %75 to i64*
  %80 = load i64, i64* %79, align 8
  store i64 %80, i64* %77, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %78, align 8
  %81 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %58, i64 4
  %82 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %57, i64 4
  %83 = bitcast %"class.base::OnceCallback"* %82 to i64*
  %84 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %81, i64 0, i32 0, i32 0, i32 0
  %85 = bitcast %"class.base::OnceCallback"* %81 to i64*
  %86 = load i64, i64* %85, align 8
  store i64 %86, i64* %83, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %84, align 8
  %87 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %58, i64 5
  %88 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %57, i64 5
  %89 = bitcast %"class.base::OnceCallback"* %88 to i64*
  %90 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %87, i64 0, i32 0, i32 0, i32 0
  %91 = bitcast %"class.base::OnceCallback"* %87 to i64*
  %92 = load i64, i64* %91, align 8
  store i64 %92, i64* %89, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %90, align 8
  %93 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %58, i64 6
  %94 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %57, i64 6
  %95 = bitcast %"class.base::OnceCallback"* %94 to i64*
  %96 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %93, i64 0, i32 0, i32 0, i32 0
  %97 = bitcast %"class.base::OnceCallback"* %93 to i64*
  %98 = load i64, i64* %97, align 8
  store i64 %98, i64* %95, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %96, align 8
  %99 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %58, i64 7
  %100 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %57, i64 7
  %101 = bitcast %"class.base::OnceCallback"* %100 to i64*
  %102 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %99, i64 0, i32 0, i32 0, i32 0
  %103 = bitcast %"class.base::OnceCallback"* %99 to i64*
  %104 = load i64, i64* %103, align 8
  store i64 %104, i64* %101, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %102, align 8
  %105 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %58, i64 8
  %106 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %57, i64 8
  %107 = icmp eq %"class.base::OnceCallback"* %105, %3
  br i1 %107, label %108, label %56

108:                                              ; preds = %56, %51
  %109 = phi %"class.base::OnceCallback"* [ %52, %51 ], [ %106, %56 ]
  %110 = ptrtoint %"class.base::OnceCallback"* %109 to i64
  br label %111

111:                                              ; preds = %108, %27
  %112 = phi i64 [ %18, %27 ], [ %110, %108 ]
  store i64 %112, i64* %22, align 8
  %113 = icmp sgt i64 %24, 0
  br i1 %113, label %114, label %540

114:                                              ; preds = %111
  %115 = inttoptr i64 %112 to %"class.base::OnceCallback"*
  br label %116

116:                                              ; preds = %114, %23
  %117 = phi i64 [ %112, %114 ], [ %18, %23 ]
  %118 = phi %"class.base::OnceCallback"* [ %115, %114 ], [ %17, %23 ]
  %119 = phi %"class.base::OnceCallback"* [ %28, %114 ], [ %3, %23 ]
  %120 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 %10
  %121 = ptrtoint %"class.base::OnceCallback"* %120 to i64
  %122 = sub i64 %117, %121
  %123 = ashr exact i64 %122, 3
  %124 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 %123
  %125 = icmp ult %"class.base::OnceCallback"* %124, %17
  br i1 %125, label %126, label %157

126:                                              ; preds = %116
  %127 = sub nsw i64 0, %123
  %128 = getelementptr %"class.base::OnceCallback", %"class.base::OnceCallback"* %17, i64 %127, i32 0, i32 0, i32 0
  %129 = bitcast %"class.base::internal::BindStateBase"** %128 to i8*
  %130 = xor i64 %6, -1
  %131 = getelementptr i8, i8* %129, i64 %130
  %132 = ptrtoint i8* %131 to i64
  %133 = lshr i64 %132, 3
  %134 = add nuw nsw i64 %133, 1
  %135 = and i64 %134, 7
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %149, label %137

137:                                              ; preds = %126, %137
  %138 = phi %"class.base::OnceCallback"* [ %146, %137 ], [ %118, %126 ]
  %139 = phi %"class.base::OnceCallback"* [ %145, %137 ], [ %124, %126 ]
  %140 = phi i64 [ %147, %137 ], [ %135, %126 ]
  %141 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %139, i64 0, i32 0, i32 0, i32 0
  %142 = bitcast %"class.base::OnceCallback"* %139 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.base::OnceCallback"* %138 to i64*
  store i64 %143, i64* %144, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %141, align 8
  %145 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %139, i64 1
  %146 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %138, i64 1
  %147 = add i64 %140, -1
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %137, !llvm.loop !4

149:                                              ; preds = %137, %126
  %150 = phi %"class.base::OnceCallback"* [ %118, %126 ], [ %146, %137 ]
  %151 = phi %"class.base::OnceCallback"* [ %124, %126 ], [ %145, %137 ]
  %152 = phi %"class.base::OnceCallback"* [ undef, %126 ], [ %146, %137 ]
  %153 = icmp ult i8* %131, inttoptr (i64 56 to i8*)
  br i1 %153, label %154, label %169

154:                                              ; preds = %169, %149
  %155 = phi %"class.base::OnceCallback"* [ %152, %149 ], [ %219, %169 ]
  %156 = ptrtoint %"class.base::OnceCallback"* %155 to i64
  br label %157

157:                                              ; preds = %154, %116
  %158 = phi i64 [ %156, %154 ], [ %117, %116 ]
  store i64 %158, i64* %22, align 8
  %159 = icmp eq i64 %122, 0
  br i1 %159, label %221, label %160

160:                                              ; preds = %157, %160
  %161 = phi %"class.base::OnceCallback"* [ %164, %160 ], [ %118, %157 ]
  %162 = phi %"class.base::OnceCallback"* [ %163, %160 ], [ %124, %157 ]
  %163 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %162, i64 -1
  %164 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %161, i64 -1
  %165 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %164, i64 0, i32 0
  %166 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %163, i64 0, i32 0
  %167 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %165, %"class.base::internal::CallbackBase"* dereferenceable(8) %166) #13
  %168 = icmp eq %"class.base::OnceCallback"* %163, %1
  br i1 %168, label %221, label %160

169:                                              ; preds = %149, %169
  %170 = phi %"class.base::OnceCallback"* [ %219, %169 ], [ %150, %149 ]
  %171 = phi %"class.base::OnceCallback"* [ %218, %169 ], [ %151, %149 ]
  %172 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %171, i64 0, i32 0, i32 0, i32 0
  %173 = bitcast %"class.base::OnceCallback"* %171 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.base::OnceCallback"* %170 to i64*
  store i64 %174, i64* %175, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %172, align 8
  %176 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %171, i64 1
  %177 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %170, i64 1
  %178 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %176, i64 0, i32 0, i32 0, i32 0
  %179 = bitcast %"class.base::OnceCallback"* %176 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = bitcast %"class.base::OnceCallback"* %177 to i64*
  store i64 %180, i64* %181, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %178, align 8
  %182 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %171, i64 2
  %183 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %170, i64 2
  %184 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %182, i64 0, i32 0, i32 0, i32 0
  %185 = bitcast %"class.base::OnceCallback"* %182 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = bitcast %"class.base::OnceCallback"* %183 to i64*
  store i64 %186, i64* %187, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %184, align 8
  %188 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %171, i64 3
  %189 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %170, i64 3
  %190 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %188, i64 0, i32 0, i32 0, i32 0
  %191 = bitcast %"class.base::OnceCallback"* %188 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = bitcast %"class.base::OnceCallback"* %189 to i64*
  store i64 %192, i64* %193, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %190, align 8
  %194 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %171, i64 4
  %195 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %170, i64 4
  %196 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %194, i64 0, i32 0, i32 0, i32 0
  %197 = bitcast %"class.base::OnceCallback"* %194 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"class.base::OnceCallback"* %195 to i64*
  store i64 %198, i64* %199, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %196, align 8
  %200 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %171, i64 5
  %201 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %170, i64 5
  %202 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %200, i64 0, i32 0, i32 0, i32 0
  %203 = bitcast %"class.base::OnceCallback"* %200 to i64*
  %204 = load i64, i64* %203, align 8
  %205 = bitcast %"class.base::OnceCallback"* %201 to i64*
  store i64 %204, i64* %205, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %202, align 8
  %206 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %171, i64 6
  %207 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %170, i64 6
  %208 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %206, i64 0, i32 0, i32 0, i32 0
  %209 = bitcast %"class.base::OnceCallback"* %206 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = bitcast %"class.base::OnceCallback"* %207 to i64*
  store i64 %210, i64* %211, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %208, align 8
  %212 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %171, i64 7
  %213 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %170, i64 7
  %214 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %212, i64 0, i32 0, i32 0, i32 0
  %215 = bitcast %"class.base::OnceCallback"* %212 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = bitcast %"class.base::OnceCallback"* %213 to i64*
  store i64 %216, i64* %217, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %214, align 8
  %218 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %171, i64 8
  %219 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %170, i64 8
  %220 = icmp ult %"class.base::OnceCallback"* %218, %17
  br i1 %220, label %169, label %154

221:                                              ; preds = %160, %157
  %222 = icmp eq %"class.base::OnceCallback"* %119, %2
  br i1 %222, label %540, label %223

223:                                              ; preds = %221, %223
  %224 = phi %"class.base::OnceCallback"* [ %230, %223 ], [ %1, %221 ]
  %225 = phi %"class.base::OnceCallback"* [ %229, %223 ], [ %2, %221 ]
  %226 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %224, i64 0, i32 0
  %227 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %225, i64 0, i32 0
  %228 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %226, %"class.base::internal::CallbackBase"* dereferenceable(8) %227) #13
  %229 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %225, i64 1
  %230 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %224, i64 1
  %231 = icmp eq %"class.base::OnceCallback"* %229, %119
  br i1 %231, label %540, label %223

232:                                              ; preds = %12
  %233 = bitcast %"class.std::__1::vector.4"* %0 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = sub i64 %18, %234
  %236 = ashr exact i64 %235, 3
  %237 = add nsw i64 %236, %10
  %238 = icmp ugt i64 %237, 2305843009213693951
  br i1 %238, label %239, label %241

239:                                              ; preds = %232
  %240 = bitcast %"class.std::__1::vector.4"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %240) #15
  unreachable

241:                                              ; preds = %232
  %242 = sub i64 %15, %234
  %243 = ashr exact i64 %242, 3
  %244 = icmp ult i64 %243, 1152921504606846975
  br i1 %244, label %248, label %245

245:                                              ; preds = %241
  %246 = sub i64 %6, %234
  %247 = ashr exact i64 %246, 3
  br label %258

248:                                              ; preds = %241
  %249 = ashr exact i64 %242, 2
  %250 = icmp ult i64 %249, %237
  %251 = select i1 %250, i64 %237, i64 %249
  %252 = sub i64 %6, %234
  %253 = ashr exact i64 %252, 3
  %254 = icmp eq i64 %251, 0
  br i1 %254, label %264, label %255

255:                                              ; preds = %248
  %256 = icmp ugt i64 %251, 2305843009213693951
  br i1 %256, label %257, label %258

257:                                              ; preds = %255
  tail call void @abort() #15
  unreachable

258:                                              ; preds = %245, %255
  %259 = phi i64 [ 2305843009213693951, %245 ], [ %251, %255 ]
  %260 = phi i64 [ %247, %245 ], [ %253, %255 ]
  %261 = shl i64 %259, 3
  %262 = tail call i8* @_Znwm(i64 %261) #14
  %263 = bitcast i8* %262 to %"class.base::OnceCallback"*
  br label %264

264:                                              ; preds = %258, %248
  %265 = phi i64 [ %260, %258 ], [ %253, %248 ]
  %266 = phi i64 [ %259, %258 ], [ 0, %248 ]
  %267 = phi %"class.base::OnceCallback"* [ %263, %258 ], [ null, %248 ]
  %268 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %267, i64 %265
  %269 = ptrtoint %"class.base::OnceCallback"* %268 to i64
  %270 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %267, i64 %266
  %271 = ptrtoint %"class.base::OnceCallback"* %270 to i64
  %272 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %268, i64 %10
  %273 = add i64 %9, -8
  %274 = lshr i64 %273, 3
  %275 = add nuw nsw i64 %274, 1
  %276 = and i64 %275, 7
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %294, label %278

278:                                              ; preds = %264, %278
  %279 = phi %"class.base::OnceCallback"* [ %287, %278 ], [ %268, %264 ]
  %280 = phi i64 [ %288, %278 ], [ %269, %264 ]
  %281 = phi %"class.base::OnceCallback"* [ %289, %278 ], [ %2, %264 ]
  %282 = phi i64 [ %290, %278 ], [ %276, %264 ]
  %283 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %281, i64 0, i32 0, i32 0, i32 0
  %284 = bitcast %"class.base::OnceCallback"* %281 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = inttoptr i64 %280 to i64*
  store i64 %285, i64* %286, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %283, align 8
  %287 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %279, i64 1
  %288 = ptrtoint %"class.base::OnceCallback"* %287 to i64
  %289 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %281, i64 1
  %290 = add i64 %282, -1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %278, !llvm.loop !5

292:                                              ; preds = %278
  %293 = ptrtoint %"class.base::OnceCallback"* %287 to i64
  br label %294

294:                                              ; preds = %264, %292
  %295 = phi %"class.base::OnceCallback"* [ %268, %264 ], [ %287, %292 ]
  %296 = phi i64 [ %269, %264 ], [ %293, %292 ]
  %297 = phi %"class.base::OnceCallback"* [ %2, %264 ], [ %289, %292 ]
  %298 = icmp ult i64 %273, 56
  br i1 %298, label %353, label %299

299:                                              ; preds = %294, %299
  %300 = phi %"class.base::OnceCallback"* [ %349, %299 ], [ %295, %294 ]
  %301 = phi i64 [ %350, %299 ], [ %296, %294 ]
  %302 = phi %"class.base::OnceCallback"* [ %351, %299 ], [ %297, %294 ]
  %303 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %302, i64 0, i32 0, i32 0, i32 0
  %304 = bitcast %"class.base::OnceCallback"* %302 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = inttoptr i64 %301 to i64*
  store i64 %305, i64* %306, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %303, align 8
  %307 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %300, i64 1
  %308 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %302, i64 1
  %309 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %308, i64 0, i32 0, i32 0, i32 0
  %310 = bitcast %"class.base::OnceCallback"* %308 to i64*
  %311 = load i64, i64* %310, align 8
  %312 = bitcast %"class.base::OnceCallback"* %307 to i64*
  store i64 %311, i64* %312, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %309, align 8
  %313 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %300, i64 2
  %314 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %302, i64 2
  %315 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %314, i64 0, i32 0, i32 0, i32 0
  %316 = bitcast %"class.base::OnceCallback"* %314 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = bitcast %"class.base::OnceCallback"* %313 to i64*
  store i64 %317, i64* %318, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %315, align 8
  %319 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %300, i64 3
  %320 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %302, i64 3
  %321 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %320, i64 0, i32 0, i32 0, i32 0
  %322 = bitcast %"class.base::OnceCallback"* %320 to i64*
  %323 = load i64, i64* %322, align 8
  %324 = bitcast %"class.base::OnceCallback"* %319 to i64*
  store i64 %323, i64* %324, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %321, align 8
  %325 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %300, i64 4
  %326 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %302, i64 4
  %327 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %326, i64 0, i32 0, i32 0, i32 0
  %328 = bitcast %"class.base::OnceCallback"* %326 to i64*
  %329 = load i64, i64* %328, align 8
  %330 = bitcast %"class.base::OnceCallback"* %325 to i64*
  store i64 %329, i64* %330, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %327, align 8
  %331 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %300, i64 5
  %332 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %302, i64 5
  %333 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %332, i64 0, i32 0, i32 0, i32 0
  %334 = bitcast %"class.base::OnceCallback"* %332 to i64*
  %335 = load i64, i64* %334, align 8
  %336 = bitcast %"class.base::OnceCallback"* %331 to i64*
  store i64 %335, i64* %336, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %333, align 8
  %337 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %300, i64 6
  %338 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %302, i64 6
  %339 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %338, i64 0, i32 0, i32 0, i32 0
  %340 = bitcast %"class.base::OnceCallback"* %338 to i64*
  %341 = load i64, i64* %340, align 8
  %342 = bitcast %"class.base::OnceCallback"* %337 to i64*
  store i64 %341, i64* %342, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %339, align 8
  %343 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %300, i64 7
  %344 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %302, i64 7
  %345 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %344, i64 0, i32 0, i32 0, i32 0
  %346 = bitcast %"class.base::OnceCallback"* %344 to i64*
  %347 = load i64, i64* %346, align 8
  %348 = bitcast %"class.base::OnceCallback"* %343 to i64*
  store i64 %347, i64* %348, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %345, align 8
  %349 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %300, i64 8
  %350 = ptrtoint %"class.base::OnceCallback"* %349 to i64
  %351 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %302, i64 8
  %352 = icmp eq %"class.base::OnceCallback"* %272, %349
  br i1 %352, label %353, label %299

353:                                              ; preds = %299, %294
  %354 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %7, align 8
  %355 = icmp eq %"class.base::OnceCallback"* %354, %1
  br i1 %355, label %437, label %356

356:                                              ; preds = %353
  %357 = ptrtoint %"class.base::OnceCallback"* %354 to i64
  %358 = getelementptr %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 -1, i32 0, i32 0, i32 0
  %359 = ptrtoint %"class.base::internal::BindStateBase"** %358 to i64
  %360 = sub i64 %359, %357
  %361 = lshr i64 %360, 3
  %362 = add nuw nsw i64 %361, 1
  %363 = and i64 %362, 7
  %364 = icmp eq i64 %363, 0
  br i1 %364, label %377, label %365

365:                                              ; preds = %356, %365
  %366 = phi %"class.base::OnceCallback"* [ %369, %365 ], [ %268, %356 ]
  %367 = phi %"class.base::OnceCallback"* [ %370, %365 ], [ %1, %356 ]
  %368 = phi i64 [ %375, %365 ], [ %363, %356 ]
  %369 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %366, i64 -1
  %370 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %367, i64 -1
  %371 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %370, i64 0, i32 0, i32 0, i32 0
  %372 = bitcast %"class.base::OnceCallback"* %370 to i64*
  %373 = load i64, i64* %372, align 8
  %374 = bitcast %"class.base::OnceCallback"* %369 to i64*
  store i64 %373, i64* %374, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %371, align 8
  %375 = add i64 %368, -1
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %377, label %365, !llvm.loop !6

377:                                              ; preds = %365, %356
  %378 = phi %"class.base::OnceCallback"* [ undef, %356 ], [ %369, %365 ]
  %379 = phi %"class.base::OnceCallback"* [ %268, %356 ], [ %369, %365 ]
  %380 = phi %"class.base::OnceCallback"* [ %1, %356 ], [ %370, %365 ]
  %381 = icmp ult i64 %360, 56
  br i1 %381, label %434, label %382

382:                                              ; preds = %377, %382
  %383 = phi %"class.base::OnceCallback"* [ %427, %382 ], [ %379, %377 ]
  %384 = phi %"class.base::OnceCallback"* [ %428, %382 ], [ %380, %377 ]
  %385 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %383, i64 -1
  %386 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %384, i64 -1
  %387 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %386, i64 0, i32 0, i32 0, i32 0
  %388 = bitcast %"class.base::OnceCallback"* %386 to i64*
  %389 = load i64, i64* %388, align 8
  %390 = bitcast %"class.base::OnceCallback"* %385 to i64*
  store i64 %389, i64* %390, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %387, align 8
  %391 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %383, i64 -2
  %392 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %384, i64 -2
  %393 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %392, i64 0, i32 0, i32 0, i32 0
  %394 = bitcast %"class.base::OnceCallback"* %392 to i64*
  %395 = load i64, i64* %394, align 8
  %396 = bitcast %"class.base::OnceCallback"* %391 to i64*
  store i64 %395, i64* %396, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %393, align 8
  %397 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %383, i64 -3
  %398 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %384, i64 -3
  %399 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %398, i64 0, i32 0, i32 0, i32 0
  %400 = bitcast %"class.base::OnceCallback"* %398 to i64*
  %401 = load i64, i64* %400, align 8
  %402 = bitcast %"class.base::OnceCallback"* %397 to i64*
  store i64 %401, i64* %402, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %399, align 8
  %403 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %383, i64 -4
  %404 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %384, i64 -4
  %405 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %404, i64 0, i32 0, i32 0, i32 0
  %406 = bitcast %"class.base::OnceCallback"* %404 to i64*
  %407 = load i64, i64* %406, align 8
  %408 = bitcast %"class.base::OnceCallback"* %403 to i64*
  store i64 %407, i64* %408, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %405, align 8
  %409 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %383, i64 -5
  %410 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %384, i64 -5
  %411 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %410, i64 0, i32 0, i32 0, i32 0
  %412 = bitcast %"class.base::OnceCallback"* %410 to i64*
  %413 = load i64, i64* %412, align 8
  %414 = bitcast %"class.base::OnceCallback"* %409 to i64*
  store i64 %413, i64* %414, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %411, align 8
  %415 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %383, i64 -6
  %416 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %384, i64 -6
  %417 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %416, i64 0, i32 0, i32 0, i32 0
  %418 = bitcast %"class.base::OnceCallback"* %416 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"class.base::OnceCallback"* %415 to i64*
  store i64 %419, i64* %420, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %417, align 8
  %421 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %383, i64 -7
  %422 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %384, i64 -7
  %423 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %422, i64 0, i32 0, i32 0, i32 0
  %424 = bitcast %"class.base::OnceCallback"* %422 to i64*
  %425 = load i64, i64* %424, align 8
  %426 = bitcast %"class.base::OnceCallback"* %421 to i64*
  store i64 %425, i64* %426, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %423, align 8
  %427 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %383, i64 -8
  %428 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %384, i64 -8
  %429 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %428, i64 0, i32 0, i32 0, i32 0
  %430 = bitcast %"class.base::OnceCallback"* %428 to i64*
  %431 = load i64, i64* %430, align 8
  %432 = bitcast %"class.base::OnceCallback"* %427 to i64*
  store i64 %431, i64* %432, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %429, align 8
  %433 = icmp eq %"class.base::OnceCallback"* %428, %354
  br i1 %433, label %434, label %382

434:                                              ; preds = %382, %377
  %435 = phi %"class.base::OnceCallback"* [ %378, %377 ], [ %427, %382 ]
  %436 = ptrtoint %"class.base::OnceCallback"* %435 to i64
  br label %437

437:                                              ; preds = %434, %353
  %438 = phi i64 [ %269, %353 ], [ %436, %434 ]
  %439 = phi %"class.base::OnceCallback"* [ %268, %353 ], [ %435, %434 ]
  %440 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %16, align 8
  %441 = icmp eq %"class.base::OnceCallback"* %440, %1
  br i1 %441, label %467, label %442

442:                                              ; preds = %437
  %443 = getelementptr %"class.base::OnceCallback", %"class.base::OnceCallback"* %440, i64 -1, i32 0, i32 0, i32 0
  %444 = ptrtoint %"class.base::internal::BindStateBase"** %443 to i64
  %445 = sub i64 %444, %6
  %446 = lshr i64 %445, 3
  %447 = add nuw nsw i64 %446, 1
  %448 = and i64 %447, 7
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %462, label %450

450:                                              ; preds = %442, %450
  %451 = phi %"class.base::OnceCallback"* [ %459, %450 ], [ %272, %442 ]
  %452 = phi %"class.base::OnceCallback"* [ %458, %450 ], [ %1, %442 ]
  %453 = phi i64 [ %460, %450 ], [ %448, %442 ]
  %454 = bitcast %"class.base::OnceCallback"* %451 to i64*
  %455 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %452, i64 0, i32 0, i32 0, i32 0
  %456 = bitcast %"class.base::OnceCallback"* %452 to i64*
  %457 = load i64, i64* %456, align 8
  store i64 %457, i64* %454, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %455, align 8
  %458 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %452, i64 1
  %459 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %451, i64 1
  %460 = add i64 %453, -1
  %461 = icmp eq i64 %460, 0
  br i1 %461, label %462, label %450, !llvm.loop !7

462:                                              ; preds = %450, %442
  %463 = phi %"class.base::OnceCallback"* [ undef, %442 ], [ %459, %450 ]
  %464 = phi %"class.base::OnceCallback"* [ %272, %442 ], [ %459, %450 ]
  %465 = phi %"class.base::OnceCallback"* [ %1, %442 ], [ %458, %450 ]
  %466 = icmp ult i64 %445, 56
  br i1 %466, label %521, label %469

467:                                              ; preds = %437
  %468 = ptrtoint %"class.base::OnceCallback"* %439 to i64
  br label %524

469:                                              ; preds = %462, %469
  %470 = phi %"class.base::OnceCallback"* [ %519, %469 ], [ %464, %462 ]
  %471 = phi %"class.base::OnceCallback"* [ %518, %469 ], [ %465, %462 ]
  %472 = bitcast %"class.base::OnceCallback"* %470 to i64*
  %473 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %471, i64 0, i32 0, i32 0, i32 0
  %474 = bitcast %"class.base::OnceCallback"* %471 to i64*
  %475 = load i64, i64* %474, align 8
  store i64 %475, i64* %472, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %473, align 8
  %476 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %471, i64 1
  %477 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %470, i64 1
  %478 = bitcast %"class.base::OnceCallback"* %477 to i64*
  %479 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %476, i64 0, i32 0, i32 0, i32 0
  %480 = bitcast %"class.base::OnceCallback"* %476 to i64*
  %481 = load i64, i64* %480, align 8
  store i64 %481, i64* %478, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %479, align 8
  %482 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %471, i64 2
  %483 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %470, i64 2
  %484 = bitcast %"class.base::OnceCallback"* %483 to i64*
  %485 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %482, i64 0, i32 0, i32 0, i32 0
  %486 = bitcast %"class.base::OnceCallback"* %482 to i64*
  %487 = load i64, i64* %486, align 8
  store i64 %487, i64* %484, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %485, align 8
  %488 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %471, i64 3
  %489 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %470, i64 3
  %490 = bitcast %"class.base::OnceCallback"* %489 to i64*
  %491 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %488, i64 0, i32 0, i32 0, i32 0
  %492 = bitcast %"class.base::OnceCallback"* %488 to i64*
  %493 = load i64, i64* %492, align 8
  store i64 %493, i64* %490, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %491, align 8
  %494 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %471, i64 4
  %495 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %470, i64 4
  %496 = bitcast %"class.base::OnceCallback"* %495 to i64*
  %497 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %494, i64 0, i32 0, i32 0, i32 0
  %498 = bitcast %"class.base::OnceCallback"* %494 to i64*
  %499 = load i64, i64* %498, align 8
  store i64 %499, i64* %496, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %497, align 8
  %500 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %471, i64 5
  %501 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %470, i64 5
  %502 = bitcast %"class.base::OnceCallback"* %501 to i64*
  %503 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %500, i64 0, i32 0, i32 0, i32 0
  %504 = bitcast %"class.base::OnceCallback"* %500 to i64*
  %505 = load i64, i64* %504, align 8
  store i64 %505, i64* %502, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %503, align 8
  %506 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %471, i64 6
  %507 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %470, i64 6
  %508 = bitcast %"class.base::OnceCallback"* %507 to i64*
  %509 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %506, i64 0, i32 0, i32 0, i32 0
  %510 = bitcast %"class.base::OnceCallback"* %506 to i64*
  %511 = load i64, i64* %510, align 8
  store i64 %511, i64* %508, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %509, align 8
  %512 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %471, i64 7
  %513 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %470, i64 7
  %514 = bitcast %"class.base::OnceCallback"* %513 to i64*
  %515 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %512, i64 0, i32 0, i32 0, i32 0
  %516 = bitcast %"class.base::OnceCallback"* %512 to i64*
  %517 = load i64, i64* %516, align 8
  store i64 %517, i64* %514, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %515, align 8
  %518 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %471, i64 8
  %519 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %470, i64 8
  %520 = icmp eq %"class.base::OnceCallback"* %518, %440
  br i1 %520, label %521, label %469

521:                                              ; preds = %469, %462
  %522 = phi %"class.base::OnceCallback"* [ %463, %462 ], [ %519, %469 ]
  %523 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %16, align 8
  br label %524

524:                                              ; preds = %521, %467
  %525 = phi %"class.base::OnceCallback"* [ %1, %467 ], [ %523, %521 ]
  %526 = phi %"class.base::OnceCallback"* [ %272, %467 ], [ %522, %521 ]
  %527 = phi i64 [ %468, %467 ], [ %438, %521 ]
  %528 = ptrtoint %"class.base::OnceCallback"* %526 to i64
  %529 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %7, align 8
  store i64 %527, i64* %233, align 8
  store i64 %528, i64* %22, align 8
  store i64 %271, i64* %14, align 8
  %530 = icmp eq %"class.base::OnceCallback"* %525, %529
  br i1 %530, label %536, label %531

531:                                              ; preds = %524, %531
  %532 = phi %"class.base::OnceCallback"* [ %533, %531 ], [ %525, %524 ]
  %533 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %532, i64 -1
  %534 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %533, i64 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %534) #13
  %535 = icmp eq %"class.base::OnceCallback"* %533, %529
  br i1 %535, label %536, label %531

536:                                              ; preds = %531, %524
  %537 = icmp eq %"class.base::OnceCallback"* %529, null
  br i1 %537, label %540, label %538

538:                                              ; preds = %536
  %539 = bitcast %"class.base::OnceCallback"* %529 to i8*
  tail call void @_ZdlPv(i8* %539) #14
  br label %540

540:                                              ; preds = %223, %538, %536, %111, %221, %4
  %541 = phi %"class.base::OnceCallback"* [ %1, %4 ], [ %1, %221 ], [ %1, %111 ], [ %268, %536 ], [ %268, %538 ], [ %1, %223 ]
  ret %"class.base::OnceCallback"* %541
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17VulkanFenceHelper20GenerateCleanupFenceEv(%"class.gpu::VulkanFenceHelper::FenceHandle"* noalias nocapture sret, %"class.gpu::VulkanFenceHelper"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %struct.VkFenceCreateInfo, align 8
  %4 = alloca %struct.VkFence_T*, align 8
  %5 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %1, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %5, align 8
  %7 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %1, i64 0, i32 1, i32 0, i32 1
  %8 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %7, align 8
  %9 = icmp eq %"class.base::OnceCallback"* %6, %8
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = bitcast %"class.gpu::VulkanFenceHelper::FenceHandle"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #13
  br label %48

12:                                               ; preds = %2
  %13 = bitcast %struct.VkFence_T** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #13
  store %struct.VkFence_T* null, %struct.VkFence_T** %4, align 8
  %14 = bitcast %struct.VkFenceCreateInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 bitcast ({ i32, [4 x i8], i8*, i32, [4 x i8] }* @__const._ZN3gpu17VulkanFenceHelper8GetFenceEPP9VkFence_T.create_info to i8*), i64 24, i1 false) #13
  %15 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %1, i64 0, i32 0
  %16 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %15, align 8
  %17 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %16, i64 0, i32 5
  %18 = load %struct.VkDevice_T*, %struct.VkDevice_T** %17, align 8
  %19 = tail call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #13
  %20 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %19, i64 0, i32 46, i32 0
  %21 = load i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)** %20, align 8
  %22 = call i32 %21(%struct.VkDevice_T* %18, %struct.VkFenceCreateInfo* nonnull %3, %struct.VkAllocationCallbacks* null, %struct.VkFence_T** nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #13
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %12
  call void @_ZN3gpu17VulkanFenceHelper23PerformImmediateCleanupEv(%"class.gpu::VulkanFenceHelper"* %1)
  %25 = bitcast %"class.gpu::VulkanFenceHelper::FenceHandle"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #13
  br label %47

26:                                               ; preds = %12
  %27 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %15, align 8
  %28 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %27, i64 0, i32 6
  %29 = load %struct.VkQueue_T*, %struct.VkQueue_T** %28, align 8
  %30 = load %struct.VkFence_T*, %struct.VkFence_T** %4, align 8
  %31 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #13
  %32 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %31, i64 0, i32 84, i32 0
  %33 = load i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)** %32, align 8
  %34 = call i32 %33(%struct.VkQueue_T* %29, i32 0, %struct.VkSubmitInfo* null, %struct.VkFence_T* %30) #13
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %45, label %36

36:                                               ; preds = %26
  %37 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %15, align 8
  %38 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %37, i64 0, i32 5
  %39 = load %struct.VkDevice_T*, %struct.VkDevice_T** %38, align 8
  %40 = load %struct.VkFence_T*, %struct.VkFence_T** %4, align 8
  %41 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #13
  %42 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %41, i64 0, i32 60, i32 0
  %43 = load void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)** %42, align 8
  call void %43(%struct.VkDevice_T* %39, %struct.VkFence_T* %40, %struct.VkAllocationCallbacks* null) #13
  call void @_ZN3gpu17VulkanFenceHelper23PerformImmediateCleanupEv(%"class.gpu::VulkanFenceHelper"* %1)
  %44 = bitcast %"class.gpu::VulkanFenceHelper::FenceHandle"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false) #13
  br label %47

45:                                               ; preds = %26
  %46 = load %struct.VkFence_T*, %struct.VkFence_T** %4, align 8
  call void @_ZN3gpu17VulkanFenceHelper12EnqueueFenceEP9VkFence_T(%"class.gpu::VulkanFenceHelper::FenceHandle"* sret %0, %"class.gpu::VulkanFenceHelper"* %1, %struct.VkFence_T* %46)
  br label %47

47:                                               ; preds = %45, %36, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #13
  br label %48

48:                                               ; preds = %47, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17VulkanFenceHelper22CreateExternalCallbackEv(%"class.base::OnceCallback.20"* noalias nocapture sret, %"class.gpu::VulkanFenceHelper"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %6, align 8
  %8 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %1, i64 0, i32 1, i32 0, i32 1
  %9 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %8, align 8
  %10 = icmp eq %"class.base::OnceCallback"* %7, %9
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.base::OnceCallback.20", %"class.base::OnceCallback.20"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  br label %83

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %1, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, 1
  store i64 %16, i64* %14, align 8
  %17 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %1, i64 0, i32 4
  tail call void @_ZN4base14circular_dequeIN3gpu17VulkanFenceHelper13TasksForFenceEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %17, i64 1) #13
  %18 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %17, i64 0, i32 0
  %19 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %1, i64 0, i32 4, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = tail call dereferenceable(40) %"struct.gpu::VulkanFenceHelper::TasksForFence"* @_ZN4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEEixEm(%"class.base::internal::VectorBuffer"* %18, i64 %20) #13
  %22 = bitcast %"class.std::__1::vector.4"* %5 to <2 x i64>*
  %23 = load <2 x i64>, <2 x i64>* %22, align 8
  %24 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %"class.base::OnceCallback"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.std::__1::vector.4"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #13
  %28 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %21, i64 0, i32 0
  store %struct.VkFence_T* null, %struct.VkFence_T** %28, align 8
  %29 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %21, i64 0, i32 1
  store i64 %15, i64* %29, align 8
  %30 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %21, i64 0, i32 2
  %31 = bitcast %"class.std::__1::vector.4"* %30 to <2 x i64>*
  store <2 x i64> %23, <2 x i64>* %31, align 8
  %32 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %21, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %"class.base::OnceCallback"** %32 to i64*
  store i64 %26, i64* %33, align 8
  %34 = load i64, i64* %19, align 8
  %35 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %1, i64 0, i32 4, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, -1
  %38 = icmp eq i64 %34, %37
  br i1 %38, label %39, label %40

39:                                               ; preds = %13
  store i64 0, i64* %19, align 8
  br label %43

40:                                               ; preds = %13
  %41 = add i64 %34, 1
  store i64 %41, i64* %19, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40, %39
  br label %44

44:                                               ; preds = %40, %43
  %45 = phi i64 [ %37, %43 ], [ %34, %40 ]
  %46 = tail call dereferenceable(40) %"struct.gpu::VulkanFenceHelper::TasksForFence"* @_ZNK4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEEixEm(%"class.base::internal::VectorBuffer"* %18, i64 %45) #13
  %47 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %6, align 8
  %48 = icmp eq %"class.base::OnceCallback"* %47, null
  br i1 %48, label %63, label %49

49:                                               ; preds = %44
  %50 = bitcast %"class.base::OnceCallback"* %47 to i8*
  %51 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %8, align 8
  %52 = icmp eq %"class.base::OnceCallback"* %51, %47
  br i1 %52, label %61, label %53

53:                                               ; preds = %49, %53
  %54 = phi %"class.base::OnceCallback"* [ %55, %53 ], [ %51, %49 ]
  %55 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %54, i64 -1
  %56 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %55, i64 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %56) #13
  %57 = icmp eq %"class.base::OnceCallback"* %55, %47
  br i1 %57, label %58, label %53

58:                                               ; preds = %53
  %59 = bitcast %"class.std::__1::vector.4"* %5 to i8**
  %60 = load i8*, i8** %59, align 8
  br label %61

61:                                               ; preds = %58, %49
  %62 = phi i8* [ %60, %58 ], [ %50, %49 ]
  store %"class.base::OnceCallback"* %47, %"class.base::OnceCallback"** %8, align 8
  tail call void @_ZdlPv(i8* %62) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #13
  br label %63

63:                                               ; preds = %61, %44
  %64 = bitcast %"class.base::WeakPtr"* %4 to i8*
  %65 = bitcast %"class.std::__1::vector.4"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #13
  %66 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #13, !noalias !8
  %67 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %1, i64 0, i32 5, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %67) #13, !noalias !8
  %68 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %1, i64 0, i32 5, i32 0, i32 1
  %69 = load i64, i64* %68, align 8, !noalias !8
  %70 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %70, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %69) #13
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #13, !noalias !8
  %71 = call i8* @_Znwm(i64 64) #14, !noalias !11
  %72 = bitcast i8* %71 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %72, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN3gpu17VulkanFenceHelper22CreateExternalCallbackEvE3$_0JNS_7WeakPtrIS4_EEmEEEFvvEE7RunOnceEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN3gpu17VulkanFenceHelper22CreateExternalCallbackEvE3$_0JNS_7WeakPtrIS3_EEmEE7DestroyEPKNS0_13BindStateBaseE") #13, !noalias !11
  %73 = getelementptr inbounds i8, i8* %71, i64 40
  %74 = bitcast i8* %73 to %"class.base::internal::WeakReference"*
  %75 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %74, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %75) #13, !noalias !11
  %76 = getelementptr inbounds i8, i8* %71, i64 48
  %77 = bitcast i8* %76 to i64*
  %78 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %79 = load i64, i64* %78, align 8, !noalias !11
  store i64 %79, i64* %77, align 8, !noalias !11
  %80 = getelementptr inbounds i8, i8* %71, i64 56
  %81 = bitcast i8* %80 to i64*
  store i64 %15, i64* %81, align 8, !noalias !11
  %82 = bitcast %"class.base::OnceCallback.20"* %0 to i8**
  store i8* %71, i8** %82, align 8, !alias.scope !11
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %70) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #13
  br label %83

83:                                               ; preds = %63, %11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17VulkanFenceHelper39EnqueueSemaphoreCleanupForSubmittedWorkEP13VkSemaphore_T(%"class.gpu::VulkanFenceHelper"*, %struct.VkSemaphore_T*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = icmp eq %struct.VkSemaphore_T* %1, null
  br i1 %4, label %37, label %5

5:                                                ; preds = %2
  %6 = tail call i8* @_Znwm(i64 8) #14
  %7 = bitcast i8* %6 to %struct.VkSemaphore_T**
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = ptrtoint i8* %8 to i64
  store %struct.VkSemaphore_T* %1, %struct.VkSemaphore_T** %7, align 8
  %10 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = ptrtoint i8* %6 to i64
  %12 = tail call i8* @_Znwm(i64 64) #14, !noalias !16
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.gpu::VulkanDeviceQueue"*, i1)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN3gpu17VulkanFenceHelper40EnqueueSemaphoresCleanupForSubmittedWorkENSt3__16vectorIP13VkSemaphore_TNS5_9allocatorIS8_EEEEE3$_1JSB_EEEFvPNS3_17VulkanDeviceQueueEbEE7RunOnceEPNS0_13BindStateBaseESF_b" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN3gpu17VulkanFenceHelper40EnqueueSemaphoresCleanupForSubmittedWorkENSt3__16vectorIP13VkSemaphore_TNS4_9allocatorIS7_EEEEE3$_1JSA_EE7DestroyEPKNS0_13BindStateBaseE") #13, !noalias !16
  %14 = getelementptr inbounds i8, i8* %12, i64 40
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8, !noalias !16
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %9, i64* %17, align 8, !noalias !16
  %18 = getelementptr inbounds i8, i8* %12, i64 56
  %19 = bitcast i8* %18 to i64*
  store i64 %9, i64* %19, align 8, !noalias !16
  %20 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %12, i8** %20, align 8, !alias.scope !16
  %21 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 1, i32 0, i32 1
  %22 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %21, align 8
  %23 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %24 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %23, align 8
  %25 = icmp ult %"class.base::OnceCallback"* %22, %24
  br i1 %25, label %26, label %33

26:                                               ; preds = %5
  %27 = ptrtoint i8* %12 to i64
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.base::OnceCallback"* %22 to i64*
  store i64 %27, i64* %29, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %28, align 8
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %22, i64 1
  %31 = ptrtoint %"class.base::OnceCallback"* %30 to i64
  %32 = bitcast %"class.base::OnceCallback"** %21 to i64*
  store i64 %31, i64* %32, align 8
  br label %35

33:                                               ; preds = %5
  %34 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 1
  call void @_ZNSt3__16vectorIN4base12OnceCallbackIFvPN3gpu17VulkanDeviceQueueEbEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.4"* %34, %"class.base::OnceCallback"* nonnull dereferenceable(8) %3) #13
  br label %35

35:                                               ; preds = %26, %33
  %36 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %36) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  br label %37

37:                                               ; preds = %35, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17VulkanFenceHelper40EnqueueSemaphoresCleanupForSubmittedWorkENSt3__16vectorIP13VkSemaphore_TNS1_9allocatorIS4_EEEE(%"class.gpu::VulkanFenceHelper"*, %"class.std::__1::vector.22"* nocapture) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %1, i64 0, i32 0, i32 0
  %5 = load %struct.VkSemaphore_T**, %struct.VkSemaphore_T*** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %1, i64 0, i32 0, i32 1
  %7 = load %struct.VkSemaphore_T**, %struct.VkSemaphore_T*** %6, align 8
  %8 = icmp eq %struct.VkSemaphore_T** %5, %7
  br i1 %8, label %39, label %9

9:                                                ; preds = %2
  %10 = tail call i8* @_Znwm(i64 64) #14, !noalias !21
  %11 = bitcast i8* %10 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %11, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.gpu::VulkanDeviceQueue"*, i1)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN3gpu17VulkanFenceHelper40EnqueueSemaphoresCleanupForSubmittedWorkENSt3__16vectorIP13VkSemaphore_TNS5_9allocatorIS8_EEEEE3$_1JSB_EEEFvPNS3_17VulkanDeviceQueueEbEE7RunOnceEPNS0_13BindStateBaseESF_b" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN3gpu17VulkanFenceHelper40EnqueueSemaphoresCleanupForSubmittedWorkENSt3__16vectorIP13VkSemaphore_TNS4_9allocatorIS7_EEEEE3$_1JSA_EE7DestroyEPKNS0_13BindStateBaseE") #13, !noalias !21
  %12 = getelementptr inbounds i8, i8* %10, i64 40
  %13 = bitcast %"class.std::__1::vector.22"* %1 to <2 x i64>*
  %14 = load <2 x i64>, <2 x i64>* %13, align 8, !noalias !21
  %15 = bitcast i8* %12 to <2 x i64>*
  store <2 x i64> %14, <2 x i64>* %15, align 8, !noalias !21
  %16 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %struct.VkSemaphore_T*** %16 to i64*
  %18 = load i64, i64* %17, align 8, !noalias !21
  %19 = getelementptr inbounds i8, i8* %10, i64 56
  %20 = bitcast i8* %19 to i64*
  store i64 %18, i64* %20, align 8, !noalias !21
  %21 = bitcast %"class.std::__1::vector.22"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #13, !noalias !21
  %22 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %10, i8** %22, align 8, !alias.scope !21
  %23 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 1, i32 0, i32 1
  %24 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %23, align 8
  %25 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %26 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %25, align 8
  %27 = icmp ult %"class.base::OnceCallback"* %24, %26
  br i1 %27, label %28, label %35

28:                                               ; preds = %9
  %29 = ptrtoint i8* %10 to i64
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.base::OnceCallback"* %24 to i64*
  store i64 %29, i64* %31, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %30, align 8
  %32 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %24, i64 1
  %33 = ptrtoint %"class.base::OnceCallback"* %32 to i64
  %34 = bitcast %"class.base::OnceCallback"** %23 to i64*
  store i64 %33, i64* %34, align 8
  br label %37

35:                                               ; preds = %9
  %36 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 1
  call void @_ZNSt3__16vectorIN4base12OnceCallbackIFvPN3gpu17VulkanDeviceQueueEbEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.4"* %36, %"class.base::OnceCallback"* nonnull dereferenceable(8) %3) #13
  br label %37

37:                                               ; preds = %28, %35
  %38 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %38) #13
  br label %39

39:                                               ; preds = %2, %37
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17VulkanFenceHelper35EnqueueImageCleanupForSubmittedWorkEP9VkImage_TP16VkDeviceMemory_T(%"class.gpu::VulkanFenceHelper"*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = icmp eq %struct.VkImage_T* %1, null
  %6 = icmp eq %struct.VkDeviceMemory_T* %2, null
  %7 = and i1 %5, %6
  br i1 %7, label %34, label %8

8:                                                ; preds = %3
  %9 = ptrtoint %struct.VkDeviceMemory_T* %2 to i64
  %10 = ptrtoint %struct.VkImage_T* %1 to i64
  %11 = tail call i8* @_Znwm(i64 56) #14, !noalias !26
  %12 = bitcast i8* %11 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %12, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.gpu::VulkanDeviceQueue"*, i1)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN3gpu17VulkanFenceHelper35EnqueueImageCleanupForSubmittedWorkEP9VkImage_TP16VkDeviceMemory_TE3$_2JS6_S8_EEEFvPNS3_17VulkanDeviceQueueEbEE7RunOnceEPNS0_13BindStateBaseESC_b" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN3gpu17VulkanFenceHelper35EnqueueImageCleanupForSubmittedWorkEP9VkImage_TP16VkDeviceMemory_TE3$_2JS5_S7_EE7DestroyEPKNS0_13BindStateBaseE") #13, !noalias !26
  %13 = getelementptr inbounds i8, i8* %11, i64 40
  %14 = bitcast i8* %13 to i64*
  store i64 %10, i64* %14, align 8, !noalias !26
  %15 = getelementptr inbounds i8, i8* %11, i64 48
  %16 = bitcast i8* %15 to i64*
  store i64 %9, i64* %16, align 8, !noalias !26
  %17 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %11, i8** %17, align 8, !alias.scope !26
  %18 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 1, i32 0, i32 1
  %19 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %18, align 8
  %20 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %21 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %20, align 8
  %22 = icmp ult %"class.base::OnceCallback"* %19, %21
  br i1 %22, label %23, label %30

23:                                               ; preds = %8
  %24 = ptrtoint i8* %11 to i64
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.base::OnceCallback"* %19 to i64*
  store i64 %24, i64* %26, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %25, align 8
  %27 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %19, i64 1
  %28 = ptrtoint %"class.base::OnceCallback"* %27 to i64
  %29 = bitcast %"class.base::OnceCallback"** %18 to i64*
  store i64 %28, i64* %29, align 8
  br label %32

30:                                               ; preds = %8
  %31 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 1
  call void @_ZNSt3__16vectorIN4base12OnceCallbackIFvPN3gpu17VulkanDeviceQueueEbEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.4"* %31, %"class.base::OnceCallback"* nonnull dereferenceable(8) %4) #13
  br label %32

32:                                               ; preds = %23, %30
  %33 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %33) #13
  br label %34

34:                                               ; preds = %3, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17VulkanFenceHelper36EnqueueBufferCleanupForSubmittedWorkEP10VkBuffer_TP15VmaAllocation_T(%"class.gpu::VulkanFenceHelper"*, %struct.VkBuffer_T*, %struct.VmaAllocation_T*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = icmp eq %struct.VkBuffer_T* %1, null
  %6 = icmp eq %struct.VmaAllocation_T* %2, null
  %7 = and i1 %5, %6
  br i1 %7, label %34, label %8

8:                                                ; preds = %3
  %9 = ptrtoint %struct.VmaAllocation_T* %2 to i64
  %10 = ptrtoint %struct.VkBuffer_T* %1 to i64
  %11 = tail call i8* @_Znwm(i64 56) #14, !noalias !31
  %12 = bitcast i8* %11 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %12, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.gpu::VulkanDeviceQueue"*, i1)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN3gpu17VulkanFenceHelper36EnqueueBufferCleanupForSubmittedWorkEP10VkBuffer_TP15VmaAllocation_TE3$_3JS6_S8_EEEFvPNS3_17VulkanDeviceQueueEbEE7RunOnceEPNS0_13BindStateBaseESC_b" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN3gpu17VulkanFenceHelper36EnqueueBufferCleanupForSubmittedWorkEP10VkBuffer_TP15VmaAllocation_TE3$_3JS5_S7_EE7DestroyEPKNS0_13BindStateBaseE") #13, !noalias !31
  %13 = getelementptr inbounds i8, i8* %11, i64 40
  %14 = bitcast i8* %13 to i64*
  store i64 %10, i64* %14, align 8, !noalias !31
  %15 = getelementptr inbounds i8, i8* %11, i64 48
  %16 = bitcast i8* %15 to i64*
  store i64 %9, i64* %16, align 8, !noalias !31
  %17 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %11, i8** %17, align 8, !alias.scope !31
  %18 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 1, i32 0, i32 1
  %19 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %18, align 8
  %20 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %21 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %20, align 8
  %22 = icmp ult %"class.base::OnceCallback"* %19, %21
  br i1 %22, label %23, label %30

23:                                               ; preds = %8
  %24 = ptrtoint i8* %11 to i64
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.base::OnceCallback"* %19 to i64*
  store i64 %24, i64* %26, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %25, align 8
  %27 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %19, i64 1
  %28 = ptrtoint %"class.base::OnceCallback"* %27 to i64
  %29 = bitcast %"class.base::OnceCallback"** %18 to i64*
  store i64 %28, i64* %29, align 8
  br label %32

30:                                               ; preds = %8
  %31 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %0, i64 0, i32 1
  call void @_ZNSt3__16vectorIN4base12OnceCallbackIFvPN3gpu17VulkanDeviceQueueEbEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.4"* %31, %"class.base::OnceCallback"* nonnull dereferenceable(8) %4) #13
  br label %32

32:                                               ; preds = %23, %30
  %33 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %33) #13
  br label %34

34:                                               ; preds = %3, %32
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17VulkanFenceHelper13TasksForFenceC2ENS0_11FenceHandleENSt3__16vectorIN4base12OnceCallbackIFvPNS_17VulkanDeviceQueueEbEEENS3_9allocatorISA_EEEE(%"struct.gpu::VulkanFenceHelper::TasksForFence"* nocapture, %"class.gpu::VulkanFenceHelper::FenceHandle"* nocapture readonly, %"class.std::__1::vector.4"* nocapture) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.gpu::VulkanFenceHelper::FenceHandle"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"struct.gpu::VulkanFenceHelper::TasksForFence"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.gpu::VulkanFenceHelper::FenceHandle", %"class.gpu::VulkanFenceHelper::FenceHandle"* %1, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %7, align 8
  %10 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %0, i64 0, i32 2
  %11 = bitcast %"class.std::__1::vector.4"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #13
  %12 = bitcast %"class.std::__1::vector.4"* %2 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.4"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %2, i64 0, i32 0, i32 1
  %16 = bitcast %"class.base::OnceCallback"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %0, i64 0, i32 2, i32 0, i32 1
  %19 = bitcast %"class.base::OnceCallback"** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"class.base::OnceCallback"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast %"class.base::OnceCallback"** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = bitcast %"class.std::__1::vector.4"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17VulkanFenceHelper13TasksForFenceC2EmNSt3__16vectorIN4base12OnceCallbackIFvPNS_17VulkanDeviceQueueEbEEENS2_9allocatorIS9_EEEE(%"struct.gpu::VulkanFenceHelper::TasksForFence"* nocapture, i64, %"class.std::__1::vector.4"* nocapture) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %0, i64 0, i32 0
  store %struct.VkFence_T* null, %struct.VkFence_T** %4, align 8
  %5 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %0, i64 0, i32 1
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__1::vector.4"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #13
  %8 = bitcast %"class.std::__1::vector.4"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.4"* %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %2, i64 0, i32 0, i32 1
  %12 = bitcast %"class.base::OnceCallback"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %0, i64 0, i32 2, i32 0, i32 1
  %15 = bitcast %"class.base::OnceCallback"** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.base::OnceCallback"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.base::OnceCallback"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"class.std::__1::vector.4"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17VulkanFenceHelper13TasksForFenceD2Ev(%"struct.gpu::VulkanFenceHelper::TasksForFence"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %3, align 8
  %5 = icmp eq %"class.base::OnceCallback"* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.base::OnceCallback"* %4 to i8*
  %8 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %8, align 8
  %10 = icmp eq %"class.base::OnceCallback"* %9, %4
  br i1 %10, label %19, label %11

11:                                               ; preds = %6, %11
  %12 = phi %"class.base::OnceCallback"* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %12, i64 -1
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %13, i64 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %14) #13
  %15 = icmp eq %"class.base::OnceCallback"* %13, %4
  br i1 %15, label %16, label %11

16:                                               ; preds = %11
  %17 = bitcast %"class.std::__1::vector.4"* %2 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %6
  %20 = phi i8* [ %18, %16 ], [ %7, %6 ]
  store %"class.base::OnceCallback"* %4, %"class.base::OnceCallback"** %8, align 8
  tail call void @_ZdlPv(i8* %20) #14
  br label %21

21:                                               ; preds = %1, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17VulkanFenceHelper13TasksForFenceC2EOS1_(%"struct.gpu::VulkanFenceHelper::TasksForFence"* nocapture, %"struct.gpu::VulkanFenceHelper::TasksForFence"* nocapture dereferenceable(40)) unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.gpu::VulkanFenceHelper::TasksForFence"* %0 to i8*
  %4 = bitcast %"struct.gpu::VulkanFenceHelper::TasksForFence"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %1, i64 0, i32 2
  %7 = bitcast %"class.std::__1::vector.4"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #13
  %8 = bitcast %"class.std::__1::vector.4"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.4"* %5 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %1, i64 0, i32 2, i32 0, i32 1
  %12 = bitcast %"class.base::OnceCallback"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %0, i64 0, i32 2, i32 0, i32 1
  %15 = bitcast %"class.base::OnceCallback"** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.base::OnceCallback"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.base::OnceCallback"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"class.std::__1::vector.4"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #13
  ret void
}

declare %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() local_unnamed_addr #4

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3gpu17VulkanFenceHelper13TasksForFenceEE13DestructRangeEmm(%"class.base::circular_deque"*, i64, i64) local_unnamed_addr #1 comdat align 2 {
  %4 = icmp eq i64 %2, %1
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, %1
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %8 = tail call dereferenceable(40) %"struct.gpu::VulkanFenceHelper::TasksForFence"* @_ZN4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %1)
  br i1 %6, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call dereferenceable(40) %"struct.gpu::VulkanFenceHelper::TasksForFence"* @_ZN4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %11)
  tail call void @_ZN4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer"* %7, %"struct.gpu::VulkanFenceHelper::TasksForFence"* %8, %"struct.gpu::VulkanFenceHelper::TasksForFence"* %12)
  %13 = tail call dereferenceable(40) %"struct.gpu::VulkanFenceHelper::TasksForFence"* @_ZN4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 0)
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi %"struct.gpu::VulkanFenceHelper::TasksForFence"* [ %13, %9 ], [ %8, %5 ]
  %16 = tail call dereferenceable(40) %"struct.gpu::VulkanFenceHelper::TasksForFence"* @_ZN4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %2)
  tail call void @_ZN4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer"* %7, %"struct.gpu::VulkanFenceHelper::TasksForFence"* %15, %"struct.gpu::VulkanFenceHelper::TasksForFence"* %16)
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer"*, %"struct.gpu::VulkanFenceHelper::TasksForFence"*, %"struct.gpu::VulkanFenceHelper::TasksForFence"*) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"struct.gpu::VulkanFenceHelper::TasksForFence"*, align 8
  %6 = alloca %"struct.gpu::VulkanFenceHelper::TasksForFence"*, align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store %"struct.gpu::VulkanFenceHelper::TasksForFence"* %1, %"struct.gpu::VulkanFenceHelper::TasksForFence"** %5, align 8
  store %"struct.gpu::VulkanFenceHelper::TasksForFence"* %2, %"struct.gpu::VulkanFenceHelper::TasksForFence"** %6, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt %"struct.gpu::VulkanFenceHelper::TasksForFence"* %1, %2
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %25

14:                                               ; preds = %3
  %15 = bitcast %"struct.gpu::VulkanFenceHelper::TasksForFence"** %5 to i8*
  %16 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN3gpu17VulkanFenceHelper13TasksForFenceEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %17 = bitcast %"struct.gpu::VulkanFenceHelper::TasksForFence"** %6 to i8*
  %18 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN3gpu17VulkanFenceHelper13TasksForFenceEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %20, i8** %10, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %7) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %26 = load %"struct.gpu::VulkanFenceHelper::TasksForFence"*, %"struct.gpu::VulkanFenceHelper::TasksForFence"** %5, align 8
  %27 = load %"struct.gpu::VulkanFenceHelper::TasksForFence"*, %"struct.gpu::VulkanFenceHelper::TasksForFence"** %6, align 8
  %28 = icmp eq %"struct.gpu::VulkanFenceHelper::TasksForFence"* %26, %27
  br i1 %28, label %58, label %29

29:                                               ; preds = %25, %53
  %30 = phi %"struct.gpu::VulkanFenceHelper::TasksForFence"* [ %54, %53 ], [ %27, %25 ]
  %31 = phi %"struct.gpu::VulkanFenceHelper::TasksForFence"* [ %56, %53 ], [ %26, %25 ]
  %32 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %31, i64 0, i32 2
  %33 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %33, align 8
  %35 = icmp eq %"class.base::OnceCallback"* %34, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = bitcast %"class.base::OnceCallback"* %34 to i8*
  %38 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %31, i64 0, i32 2, i32 0, i32 1
  %39 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %38, align 8
  %40 = icmp eq %"class.base::OnceCallback"* %39, %34
  br i1 %40, label %49, label %41

41:                                               ; preds = %36, %41
  %42 = phi %"class.base::OnceCallback"* [ %43, %41 ], [ %39, %36 ]
  %43 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %42, i64 -1
  %44 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %43, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %44) #13
  %45 = icmp eq %"class.base::OnceCallback"* %43, %34
  br i1 %45, label %46, label %41

46:                                               ; preds = %41
  %47 = bitcast %"class.std::__1::vector.4"* %32 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %36
  %50 = phi i8* [ %48, %46 ], [ %37, %36 ]
  store %"class.base::OnceCallback"* %34, %"class.base::OnceCallback"** %38, align 8
  call void @_ZdlPv(i8* %50) #14
  %51 = load %"struct.gpu::VulkanFenceHelper::TasksForFence"*, %"struct.gpu::VulkanFenceHelper::TasksForFence"** %5, align 8
  %52 = load %"struct.gpu::VulkanFenceHelper::TasksForFence"*, %"struct.gpu::VulkanFenceHelper::TasksForFence"** %6, align 8
  br label %53

53:                                               ; preds = %29, %49
  %54 = phi %"struct.gpu::VulkanFenceHelper::TasksForFence"* [ %30, %29 ], [ %52, %49 ]
  %55 = phi %"struct.gpu::VulkanFenceHelper::TasksForFence"* [ %31, %29 ], [ %51, %49 ]
  %56 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %55, i64 1
  store %"struct.gpu::VulkanFenceHelper::TasksForFence"* %56, %"struct.gpu::VulkanFenceHelper::TasksForFence"** %5, align 8
  %57 = icmp eq %"struct.gpu::VulkanFenceHelper::TasksForFence"* %56, %54
  br i1 %57, label %58, label %29

58:                                               ; preds = %53, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"struct.gpu::VulkanFenceHelper::TasksForFence"* @_ZN4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"struct.gpu::VulkanFenceHelper::TasksForFence"*, %"struct.gpu::VulkanFenceHelper::TasksForFence"** %23, align 8
  %25 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %24, i64 %1
  ret %"struct.gpu::VulkanFenceHelper::TasksForFence"* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPN3gpu17VulkanFenceHelper13TasksForFenceEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #6 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #13
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3gpu17VulkanFenceHelper13TasksForFenceEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #13
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 40) #13
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #13
  br i1 %37, label %38, label %39, !prof !36

38:                                               ; preds = %27
  tail call void @llvm.trap() #13
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #13
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIN3gpu17VulkanFenceHelper13TasksForFenceEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #13
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #13
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #13
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3gpu17VulkanFenceHelper13TasksForFenceEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #1 comdat align 2 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  store i64 0, i64* %4, align 8
  %12 = icmp ugt i64 %2, %1
  br i1 %12, label %13, label %65

13:                                               ; preds = %6
  %14 = tail call dereferenceable(40) %"struct.gpu::VulkanFenceHelper::TasksForFence"* @_ZN4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %15 = tail call dereferenceable(40) %"struct.gpu::VulkanFenceHelper::TasksForFence"* @_ZN4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %16 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %17 = load %"struct.gpu::VulkanFenceHelper::TasksForFence"*, %"struct.gpu::VulkanFenceHelper::TasksForFence"** %16, align 8
  %18 = ptrtoint %"struct.gpu::VulkanFenceHelper::TasksForFence"* %14 to i64
  %19 = icmp ult %"struct.gpu::VulkanFenceHelper::TasksForFence"* %17, %15
  br i1 %19, label %20, label %36

20:                                               ; preds = %13
  %21 = ptrtoint %"struct.gpu::VulkanFenceHelper::TasksForFence"* %17 to i64
  %22 = ptrtoint %"struct.gpu::VulkanFenceHelper::TasksForFence"* %15 to i64
  %23 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %22, i64 %18) #13
  %24 = extractvalue { i64, i1 } %23, 1
  %25 = extractvalue { i64, i1 } %23, 0
  %26 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %21, i64 %25) #13
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = or i1 %24, %27
  br i1 %28, label %29, label %30, !prof !36

29:                                               ; preds = %20
  tail call void @llvm.trap() #13
  unreachable

30:                                               ; preds = %20
  %31 = extractvalue { i64, i1 } %26, 0
  %32 = icmp ugt i64 %31, %18
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  %34 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0)) #13
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #13
  br label %36

36:                                               ; preds = %33, %30, %13
  %37 = icmp eq %"struct.gpu::VulkanFenceHelper::TasksForFence"* %14, %15
  br i1 %37, label %63, label %38

38:                                               ; preds = %36, %38
  %39 = phi %"struct.gpu::VulkanFenceHelper::TasksForFence"* [ %61, %38 ], [ %17, %36 ]
  %40 = phi %"struct.gpu::VulkanFenceHelper::TasksForFence"* [ %60, %38 ], [ %14, %36 ]
  %41 = bitcast %"struct.gpu::VulkanFenceHelper::TasksForFence"* %39 to i8*
  %42 = bitcast %"struct.gpu::VulkanFenceHelper::TasksForFence"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 16, i1 false) #13
  %43 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %39, i64 0, i32 2
  %44 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %40, i64 0, i32 2
  %45 = bitcast %"class.std::__1::vector.4"* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 24, i1 false) #13
  %46 = bitcast %"class.std::__1::vector.4"* %44 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.std::__1::vector.4"* %43 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %40, i64 0, i32 2, i32 0, i32 1
  %50 = bitcast %"class.base::OnceCallback"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %39, i64 0, i32 2, i32 0, i32 1
  %53 = bitcast %"class.base::OnceCallback"** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %40, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %55 = bitcast %"class.base::OnceCallback"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %39, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %58 = bitcast %"class.base::OnceCallback"** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = bitcast %"class.std::__1::vector.4"* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false) #13
  %60 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %40, i64 1
  %61 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %39, i64 1
  %62 = icmp eq %"struct.gpu::VulkanFenceHelper::TasksForFence"* %60, %15
  br i1 %62, label %63, label %38

63:                                               ; preds = %38, %36
  %64 = sub i64 %2, %1
  br label %169

65:                                               ; preds = %6
  %66 = icmp ult i64 %2, %1
  br i1 %66, label %67, label %169

67:                                               ; preds = %65
  %68 = tail call dereferenceable(40) %"struct.gpu::VulkanFenceHelper::TasksForFence"* @_ZN4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %69 = tail call dereferenceable(40) %"struct.gpu::VulkanFenceHelper::TasksForFence"* @_ZN4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %11)
  %70 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %71 = load %"struct.gpu::VulkanFenceHelper::TasksForFence"*, %"struct.gpu::VulkanFenceHelper::TasksForFence"** %70, align 8
  %72 = ptrtoint %"struct.gpu::VulkanFenceHelper::TasksForFence"* %68 to i64
  %73 = icmp ult %"struct.gpu::VulkanFenceHelper::TasksForFence"* %71, %69
  br i1 %73, label %74, label %90

74:                                               ; preds = %67
  %75 = ptrtoint %"struct.gpu::VulkanFenceHelper::TasksForFence"* %71 to i64
  %76 = ptrtoint %"struct.gpu::VulkanFenceHelper::TasksForFence"* %69 to i64
  %77 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %76, i64 %72) #13
  %78 = extractvalue { i64, i1 } %77, 1
  %79 = extractvalue { i64, i1 } %77, 0
  %80 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %75, i64 %79) #13
  %81 = extractvalue { i64, i1 } %80, 1
  %82 = or i1 %78, %81
  br i1 %82, label %83, label %84, !prof !36

83:                                               ; preds = %74
  tail call void @llvm.trap() #13
  unreachable

84:                                               ; preds = %74
  %85 = extractvalue { i64, i1 } %80, 0
  %86 = icmp ugt i64 %85, %72
  br i1 %86, label %87, label %90

87:                                               ; preds = %84
  %88 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0)) #13
  %89 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #13
  br label %90

90:                                               ; preds = %87, %84, %67
  %91 = icmp eq %"struct.gpu::VulkanFenceHelper::TasksForFence"* %68, %69
  br i1 %91, label %117, label %92

92:                                               ; preds = %90, %92
  %93 = phi %"struct.gpu::VulkanFenceHelper::TasksForFence"* [ %115, %92 ], [ %71, %90 ]
  %94 = phi %"struct.gpu::VulkanFenceHelper::TasksForFence"* [ %114, %92 ], [ %68, %90 ]
  %95 = bitcast %"struct.gpu::VulkanFenceHelper::TasksForFence"* %93 to i8*
  %96 = bitcast %"struct.gpu::VulkanFenceHelper::TasksForFence"* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 16, i1 false) #13
  %97 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %93, i64 0, i32 2
  %98 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %94, i64 0, i32 2
  %99 = bitcast %"class.std::__1::vector.4"* %97 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 24, i1 false) #13
  %100 = bitcast %"class.std::__1::vector.4"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.std::__1::vector.4"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %94, i64 0, i32 2, i32 0, i32 1
  %104 = bitcast %"class.base::OnceCallback"** %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %93, i64 0, i32 2, i32 0, i32 1
  %107 = bitcast %"class.base::OnceCallback"** %106 to i64*
  store i64 %105, i64* %107, align 8
  %108 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %94, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %109 = bitcast %"class.base::OnceCallback"** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %93, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %112 = bitcast %"class.base::OnceCallback"** %111 to i64*
  store i64 %110, i64* %112, align 8
  %113 = bitcast %"class.std::__1::vector.4"* %98 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 24, i1 false) #13
  %114 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %94, i64 1
  %115 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %93, i64 1
  %116 = icmp eq %"struct.gpu::VulkanFenceHelper::TasksForFence"* %114, %69
  br i1 %116, label %117, label %92

117:                                              ; preds = %92, %90
  %118 = sub i64 %11, %1
  %119 = call dereferenceable(40) %"struct.gpu::VulkanFenceHelper::TasksForFence"* @_ZN4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %120 = call dereferenceable(40) %"struct.gpu::VulkanFenceHelper::TasksForFence"* @_ZN4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %121 = call dereferenceable(40) %"struct.gpu::VulkanFenceHelper::TasksForFence"* @_ZN4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %118)
  %122 = ptrtoint %"struct.gpu::VulkanFenceHelper::TasksForFence"* %119 to i64
  %123 = icmp ult %"struct.gpu::VulkanFenceHelper::TasksForFence"* %121, %120
  br i1 %123, label %124, label %140

124:                                              ; preds = %117
  %125 = ptrtoint %"struct.gpu::VulkanFenceHelper::TasksForFence"* %121 to i64
  %126 = ptrtoint %"struct.gpu::VulkanFenceHelper::TasksForFence"* %120 to i64
  %127 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %126, i64 %122) #13
  %128 = extractvalue { i64, i1 } %127, 1
  %129 = extractvalue { i64, i1 } %127, 0
  %130 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %125, i64 %129) #13
  %131 = extractvalue { i64, i1 } %130, 1
  %132 = or i1 %128, %131
  br i1 %132, label %133, label %134, !prof !36

133:                                              ; preds = %124
  call void @llvm.trap() #13
  unreachable

134:                                              ; preds = %124
  %135 = extractvalue { i64, i1 } %130, 0
  %136 = icmp ugt i64 %135, %122
  br i1 %136, label %137, label %140

137:                                              ; preds = %134
  %138 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0)) #13
  %139 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #13
  br label %140

140:                                              ; preds = %137, %134, %117
  %141 = icmp eq %"struct.gpu::VulkanFenceHelper::TasksForFence"* %119, %120
  br i1 %141, label %167, label %142

142:                                              ; preds = %140, %142
  %143 = phi %"struct.gpu::VulkanFenceHelper::TasksForFence"* [ %165, %142 ], [ %121, %140 ]
  %144 = phi %"struct.gpu::VulkanFenceHelper::TasksForFence"* [ %164, %142 ], [ %119, %140 ]
  %145 = bitcast %"struct.gpu::VulkanFenceHelper::TasksForFence"* %143 to i8*
  %146 = bitcast %"struct.gpu::VulkanFenceHelper::TasksForFence"* %144 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %145, i8* align 8 %146, i64 16, i1 false) #13
  %147 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %143, i64 0, i32 2
  %148 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %144, i64 0, i32 2
  %149 = bitcast %"class.std::__1::vector.4"* %147 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %149, i8 0, i64 24, i1 false) #13
  %150 = bitcast %"class.std::__1::vector.4"* %148 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.std::__1::vector.4"* %147 to i64*
  store i64 %151, i64* %152, align 8
  %153 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %144, i64 0, i32 2, i32 0, i32 1
  %154 = bitcast %"class.base::OnceCallback"** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %143, i64 0, i32 2, i32 0, i32 1
  %157 = bitcast %"class.base::OnceCallback"** %156 to i64*
  store i64 %155, i64* %157, align 8
  %158 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %144, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %159 = bitcast %"class.base::OnceCallback"** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %143, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %162 = bitcast %"class.base::OnceCallback"** %161 to i64*
  store i64 %160, i64* %162, align 8
  %163 = bitcast %"class.std::__1::vector.4"* %148 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %163, i8 0, i64 24, i1 false) #13
  %164 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %144, i64 1
  %165 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %143, i64 1
  %166 = icmp eq %"struct.gpu::VulkanFenceHelper::TasksForFence"* %164, %120
  br i1 %166, label %167, label %142

167:                                              ; preds = %142, %140
  %168 = add i64 %118, %2
  br label %169

169:                                              ; preds = %65, %167, %63
  %170 = phi i64 [ %168, %167 ], [ %64, %63 ], [ 0, %65 ]
  store i64 %170, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #8

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base12OnceCallbackIFvPN3gpu17VulkanDeviceQueueEbEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.4"*, %"class.base::OnceCallback"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::OnceCallback"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.4"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.4"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::OnceCallback"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.base::OnceCallback"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.base::OnceCallback"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %36, i64 %9
  %38 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %36, i64 %35
  %39 = ptrtoint %"class.base::OnceCallback"* %38 to i64
  %40 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.base::OnceCallback"* %37 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %40, align 8
  %44 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %37, i64 1
  %45 = ptrtoint %"class.base::OnceCallback"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %46, align 8
  %48 = ptrtoint %"class.base::OnceCallback"* %47 to i64
  %49 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %3, align 8
  %50 = icmp eq %"class.base::OnceCallback"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.base::OnceCallback", %"class.base::OnceCallback"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.base::internal::BindStateBase"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.base::OnceCallback"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.base::OnceCallback"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %60, i64 -1
  %64 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %61, i64 -1
  %65 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.base::OnceCallback"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.base::OnceCallback"* %63 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %65, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !37

71:                                               ; preds = %59, %51
  %72 = phi %"class.base::OnceCallback"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.base::OnceCallback"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.base::OnceCallback"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.base::OnceCallback"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.base::OnceCallback"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %77, i64 -1
  %80 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %78, i64 -1
  %81 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.base::OnceCallback"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.base::OnceCallback"* %79 to i64*
  store i64 %83, i64* %84, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %81, align 8
  %85 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %77, i64 -2
  %86 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %78, i64 -2
  %87 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.base::OnceCallback"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.base::OnceCallback"* %85 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %87, align 8
  %91 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %77, i64 -3
  %92 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %78, i64 -3
  %93 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.base::OnceCallback"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.base::OnceCallback"* %91 to i64*
  store i64 %95, i64* %96, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %93, align 8
  %97 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %77, i64 -4
  %98 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %78, i64 -4
  %99 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.base::OnceCallback"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.base::OnceCallback"* %97 to i64*
  store i64 %101, i64* %102, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %99, align 8
  %103 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %77, i64 -5
  %104 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %78, i64 -5
  %105 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.base::OnceCallback"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.base::OnceCallback"* %103 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %105, align 8
  %109 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %77, i64 -6
  %110 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %78, i64 -6
  %111 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.base::OnceCallback"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.base::OnceCallback"* %109 to i64*
  store i64 %113, i64* %114, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %111, align 8
  %115 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %77, i64 -7
  %116 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %78, i64 -7
  %117 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.base::OnceCallback"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.base::OnceCallback"* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %117, align 8
  %121 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %77, i64 -8
  %122 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %78, i64 -8
  %123 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.base::OnceCallback"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.base::OnceCallback"* %121 to i64*
  store i64 %125, i64* %126, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %123, align 8
  %127 = icmp eq %"class.base::OnceCallback"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.base::OnceCallback"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.base::OnceCallback"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.base::OnceCallback"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.base::OnceCallback"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.base::OnceCallback"*
  %138 = icmp eq %"class.base::OnceCallback"* %133, %137
  br i1 %138, label %144, label %139

139:                                              ; preds = %132, %139
  %140 = phi %"class.base::OnceCallback"* [ %141, %139 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %140, i64 -1
  %142 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %141, i64 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %142) #13
  %143 = icmp eq %"class.base::OnceCallback"* %141, %137
  br i1 %143, label %144, label %139

144:                                              ; preds = %139, %132
  %145 = icmp eq i64 %135, 0
  br i1 %145, label %148, label %146

146:                                              ; preds = %144
  %147 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %147) #14
  br label %148

148:                                              ; preds = %144, %146
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"struct.gpu::VulkanFenceHelper::TasksForFence"* @_ZNK4base8internal12VectorBufferIN3gpu17VulkanFenceHelper13TasksForFenceEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"struct.gpu::VulkanFenceHelper::TasksForFence"*, %"struct.gpu::VulkanFenceHelper::TasksForFence"** %23, align 8
  %25 = getelementptr inbounds %"struct.gpu::VulkanFenceHelper::TasksForFence", %"struct.gpu::VulkanFenceHelper::TasksForFence"* %24, i64 %1
  ret %"struct.gpu::VulkanFenceHelper::TasksForFence"* %25
}

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3gpu17VulkanFenceHelper13TasksForFenceEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #13
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 40) #13
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #13
  br i1 %31, label %32, label %33, !prof !36

32:                                               ; preds = %27
  tail call void @llvm.trap() #13
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #13
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIN3gpu17VulkanFenceHelper13TasksForFenceEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #13
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #13
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #13
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN3gpu17VulkanFenceHelper22CreateExternalCallbackEvE3$_0JNS_7WeakPtrIS4_EEmEEEFvvEE7RunOnceEPNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #1 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = getelementptr inbounds void ()*, void ()** %5, i64 2
  %7 = bitcast void ()** %6 to i64*
  %8 = bitcast %"class.base::WeakPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #13
  %9 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0
  %10 = bitcast void ()** %5 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %9, %"class.base::internal::WeakReference"* dereferenceable(8) %10) #13
  %11 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %13 = bitcast void ()** %12 to i64*
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %11, align 8
  %15 = load i64, i64* %7, align 8
  %16 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %9) #13
  br i1 %16, label %17, label %42

17:                                               ; preds = %1
  %18 = bitcast i64* %11 to %"class.gpu::VulkanFenceHelper"**
  %19 = load %"class.gpu::VulkanFenceHelper"*, %"class.gpu::VulkanFenceHelper"** %18, align 8
  %20 = icmp eq %"class.gpu::VulkanFenceHelper"* %19, null
  br i1 %20, label %42, label %21

21:                                               ; preds = %17
  %22 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %9) #13
  br i1 %22, label %26, label %23

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #13
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  br label %26

26:                                               ; preds = %23, %21
  %27 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %9) #13
  %28 = load %"class.gpu::VulkanFenceHelper"*, %"class.gpu::VulkanFenceHelper"** %18, align 8
  %29 = select i1 %27, %"class.gpu::VulkanFenceHelper"* %28, %"class.gpu::VulkanFenceHelper"* null
  %30 = getelementptr inbounds %"class.gpu::VulkanFenceHelper", %"class.gpu::VulkanFenceHelper"* %29, i64 0, i32 3
  %31 = load i64, i64* %30, align 8
  %32 = icmp ult i64 %31, %15
  br i1 %32, label %33, label %42

33:                                               ; preds = %26
  %34 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %9) #13
  br i1 %34, label %38, label %35

35:                                               ; preds = %33
  %36 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %35, %33
  %39 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %9) #13
  %40 = load %"class.gpu::VulkanFenceHelper"*, %"class.gpu::VulkanFenceHelper"** %18, align 8
  %41 = select i1 %39, %"class.gpu::VulkanFenceHelper"* %40, %"class.gpu::VulkanFenceHelper"* null
  call void @_ZN3gpu17VulkanFenceHelper19ProcessCleanupTasksEm(%"class.gpu::VulkanFenceHelper"* %41, i64 %15) #13
  br label %42

42:                                               ; preds = %1, %17, %26, %38
  %43 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %43) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN3gpu17VulkanFenceHelper22CreateExternalCallbackEvE3$_0JNS_7WeakPtrIS3_EEmEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #1 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #13
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN3gpu17VulkanFenceHelper40EnqueueSemaphoresCleanupForSubmittedWorkENSt3__16vectorIP13VkSemaphore_TNS5_9allocatorIS8_EEEEE3$_1JSB_EEEFvPNS3_17VulkanDeviceQueueEbEE7RunOnceEPNS0_13BindStateBaseESF_b"(%"class.base::internal::BindStateBase"* nocapture, %"class.gpu::VulkanDeviceQueue"*, i1 zeroext) #1 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %struct.VkSemaphore_T***
  %6 = load %struct.VkSemaphore_T**, %struct.VkSemaphore_T*** %5, align 8
  %7 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %8 = bitcast void ()** %7 to %struct.VkSemaphore_T***
  %9 = load %struct.VkSemaphore_T**, %struct.VkSemaphore_T*** %8, align 8
  %10 = bitcast void ()** %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #13
  %11 = icmp eq %struct.VkSemaphore_T** %6, %9
  br i1 %11, label %23, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %1, i64 0, i32 5
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi %struct.VkSemaphore_T** [ %6, %12 ], [ %21, %14 ]
  %16 = load %struct.VkSemaphore_T*, %struct.VkSemaphore_T** %15, align 8
  %17 = load %struct.VkDevice_T*, %struct.VkDevice_T** %13, align 8
  %18 = tail call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #13
  %19 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %18, i64 0, i32 66, i32 0
  %20 = load void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)** %19, align 8
  tail call void %20(%struct.VkDevice_T* %17, %struct.VkSemaphore_T* %16, %struct.VkAllocationCallbacks* null) #13
  %21 = getelementptr inbounds %struct.VkSemaphore_T*, %struct.VkSemaphore_T** %15, i64 1
  %22 = icmp eq %struct.VkSemaphore_T** %21, %9
  br i1 %22, label %23, label %14

23:                                               ; preds = %14, %3
  %24 = icmp eq %struct.VkSemaphore_T** %6, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %23
  %26 = bitcast %struct.VkSemaphore_T** %6 to i8*
  tail call void @_ZdlPv(i8* %26) #14
  br label %27

27:                                               ; preds = %23, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN3gpu17VulkanFenceHelper40EnqueueSemaphoresCleanupForSubmittedWorkENSt3__16vectorIP13VkSemaphore_TNS4_9allocatorIS7_EEEEE3$_1JSA_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #1 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %15, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %struct.VkSemaphore_T***
  %6 = load %struct.VkSemaphore_T**, %struct.VkSemaphore_T*** %5, align 8
  %7 = icmp eq %struct.VkSemaphore_T** %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = ptrtoint %struct.VkSemaphore_T** %6 to i64
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = bitcast %struct.VkSemaphore_T** %6 to i8*
  tail call void @_ZdlPv(i8* %12) #14
  br label %13

13:                                               ; preds = %3, %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #14
  br label %15

15:                                               ; preds = %13, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN3gpu17VulkanFenceHelper35EnqueueImageCleanupForSubmittedWorkEP9VkImage_TP16VkDeviceMemory_TE3$_2JS6_S8_EEEFvPNS3_17VulkanDeviceQueueEbEE7RunOnceEPNS0_13BindStateBaseESC_b"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.gpu::VulkanDeviceQueue"*, i1 zeroext) #1 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %struct.VkImage_T**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to %struct.VkDeviceMemory_T**
  %8 = load %struct.VkImage_T*, %struct.VkImage_T** %5, align 8
  %9 = load %struct.VkDeviceMemory_T*, %struct.VkDeviceMemory_T** %7, align 8
  %10 = icmp eq %struct.VkImage_T* %8, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %1, i64 0, i32 5
  %13 = load %struct.VkDevice_T*, %struct.VkDevice_T** %12, align 8
  %14 = tail call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #13
  %15 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %14, i64 0, i32 62, i32 0
  %16 = load void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)** %15, align 8
  tail call void %16(%struct.VkDevice_T* %13, %struct.VkImage_T* nonnull %8, %struct.VkAllocationCallbacks* null) #13
  br label %17

17:                                               ; preds = %11, %3
  %18 = icmp eq %struct.VkDeviceMemory_T* %9, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %1, i64 0, i32 5
  %21 = load %struct.VkDevice_T*, %struct.VkDevice_T** %20, align 8
  %22 = tail call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #13
  %23 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %22, i64 0, i32 73, i32 0
  %24 = load void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)** %23, align 8
  tail call void %24(%struct.VkDevice_T* %21, %struct.VkDeviceMemory_T* nonnull %9, %struct.VkAllocationCallbacks* null) #13
  br label %25

25:                                               ; preds = %17, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN3gpu17VulkanFenceHelper35EnqueueImageCleanupForSubmittedWorkEP9VkImage_TP16VkDeviceMemory_TE3$_2JS5_S7_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #1 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN3gpu17VulkanFenceHelper36EnqueueBufferCleanupForSubmittedWorkEP10VkBuffer_TP15VmaAllocation_TE3$_3JS6_S8_EEEFvPNS3_17VulkanDeviceQueueEbEE7RunOnceEPNS0_13BindStateBaseESC_b"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.gpu::VulkanDeviceQueue"*, i1 zeroext) #1 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %struct.VkBuffer_T**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to %struct.VmaAllocation_T**
  %8 = load %struct.VkBuffer_T*, %struct.VkBuffer_T** %5, align 8
  %9 = load %struct.VmaAllocation_T*, %struct.VmaAllocation_T** %7, align 8
  %10 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %1, i64 0, i32 9
  %11 = load %struct.VmaAllocator_T*, %struct.VmaAllocator_T** %10, align 8
  tail call void @_ZN3gpu3vma13DestroyBufferEP14VmaAllocator_TP10VkBuffer_TP15VmaAllocation_T(%struct.VmaAllocator_T* %11, %struct.VkBuffer_T* %8, %struct.VmaAllocation_T* %9) #13
  ret void
}

declare void @_ZN3gpu3vma13DestroyBufferEP14VmaAllocator_TP10VkBuffer_TP15VmaAllocation_T(%struct.VmaAllocator_T*, %struct.VkBuffer_T*, %struct.VmaAllocation_T*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN3gpu17VulkanFenceHelper36EnqueueBufferCleanupForSubmittedWorkEP10VkBuffer_TP15VmaAllocation_TE3$_3JS5_S7_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #1 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !3}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK4base14WeakPtrFactoryIN3gpu17VulkanFenceHelperEE10GetWeakPtrEv: argument 0"}
!10 = distinct !{!10, !"_ZNK4base14WeakPtrFactoryIN3gpu17VulkanFenceHelperEE10GetWeakPtrEv"}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN3gpu17VulkanFenceHelper22CreateExternalCallbackEvE3$_0JNS_7WeakPtrIS4_EERmEEEDcOT0_DpOT1_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN3gpu17VulkanFenceHelper22CreateExternalCallbackEvE3$_0JNS_7WeakPtrIS4_EERmEEEDcOT0_DpOT1_"}
!14 = distinct !{!14, !15, !"_ZN4base8BindOnceIZN3gpu17VulkanFenceHelper22CreateExternalCallbackEvE3$_0JNS_7WeakPtrIS2_EERmEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8BindOnceIZN3gpu17VulkanFenceHelper22CreateExternalCallbackEvE3$_0JNS_7WeakPtrIS2_EERmEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!16 = !{!17, !19}
!17 = distinct !{!17, !18, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN3gpu17VulkanFenceHelper40EnqueueSemaphoresCleanupForSubmittedWorkENSt3__16vectorIP13VkSemaphore_TNS5_9allocatorIS8_EEEEE3$_1JSB_EEEDcOT0_DpOT1_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN3gpu17VulkanFenceHelper40EnqueueSemaphoresCleanupForSubmittedWorkENSt3__16vectorIP13VkSemaphore_TNS5_9allocatorIS8_EEEEE3$_1JSB_EEEDcOT0_DpOT1_"}
!19 = distinct !{!19, !20, !"_ZN4base8BindOnceIZN3gpu17VulkanFenceHelper40EnqueueSemaphoresCleanupForSubmittedWorkENSt3__16vectorIP13VkSemaphore_TNS3_9allocatorIS6_EEEEE3$_1JS9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8BindOnceIZN3gpu17VulkanFenceHelper40EnqueueSemaphoresCleanupForSubmittedWorkENSt3__16vectorIP13VkSemaphore_TNS3_9allocatorIS6_EEEEE3$_1JS9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!21 = !{!22, !24}
!22 = distinct !{!22, !23, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN3gpu17VulkanFenceHelper40EnqueueSemaphoresCleanupForSubmittedWorkENSt3__16vectorIP13VkSemaphore_TNS5_9allocatorIS8_EEEEE3$_1JSB_EEEDcOT0_DpOT1_: argument 0"}
!23 = distinct !{!23, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN3gpu17VulkanFenceHelper40EnqueueSemaphoresCleanupForSubmittedWorkENSt3__16vectorIP13VkSemaphore_TNS5_9allocatorIS8_EEEEE3$_1JSB_EEEDcOT0_DpOT1_"}
!24 = distinct !{!24, !25, !"_ZN4base8BindOnceIZN3gpu17VulkanFenceHelper40EnqueueSemaphoresCleanupForSubmittedWorkENSt3__16vectorIP13VkSemaphore_TNS3_9allocatorIS6_EEEEE3$_1JS9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!25 = distinct !{!25, !"_ZN4base8BindOnceIZN3gpu17VulkanFenceHelper40EnqueueSemaphoresCleanupForSubmittedWorkENSt3__16vectorIP13VkSemaphore_TNS3_9allocatorIS6_EEEEE3$_1JS9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!26 = !{!27, !29}
!27 = distinct !{!27, !28, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN3gpu17VulkanFenceHelper35EnqueueImageCleanupForSubmittedWorkEP9VkImage_TP16VkDeviceMemory_TE3$_2JRS6_RS8_EEEDcOT0_DpOT1_: argument 0"}
!28 = distinct !{!28, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN3gpu17VulkanFenceHelper35EnqueueImageCleanupForSubmittedWorkEP9VkImage_TP16VkDeviceMemory_TE3$_2JRS6_RS8_EEEDcOT0_DpOT1_"}
!29 = distinct !{!29, !30, !"_ZN4base8BindOnceIZN3gpu17VulkanFenceHelper35EnqueueImageCleanupForSubmittedWorkEP9VkImage_TP16VkDeviceMemory_TE3$_2JRS4_RS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!30 = distinct !{!30, !"_ZN4base8BindOnceIZN3gpu17VulkanFenceHelper35EnqueueImageCleanupForSubmittedWorkEP9VkImage_TP16VkDeviceMemory_TE3$_2JRS4_RS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!31 = !{!32, !34}
!32 = distinct !{!32, !33, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN3gpu17VulkanFenceHelper36EnqueueBufferCleanupForSubmittedWorkEP10VkBuffer_TP15VmaAllocation_TE3$_3JRS6_RS8_EEEDcOT0_DpOT1_: argument 0"}
!33 = distinct !{!33, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN3gpu17VulkanFenceHelper36EnqueueBufferCleanupForSubmittedWorkEP10VkBuffer_TP15VmaAllocation_TE3$_3JRS6_RS8_EEEDcOT0_DpOT1_"}
!34 = distinct !{!34, !35, !"_ZN4base8BindOnceIZN3gpu17VulkanFenceHelper36EnqueueBufferCleanupForSubmittedWorkEP10VkBuffer_TP15VmaAllocation_TE3$_3JRS4_RS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!35 = distinct !{!35, !"_ZN4base8BindOnceIZN3gpu17VulkanFenceHelper36EnqueueBufferCleanupForSubmittedWorkEP10VkBuffer_TP15VmaAllocation_TE3$_3JRS4_RS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!36 = !{!"branch_weights", i32 1, i32 2000}
!37 = distinct !{!37, !3}
