; ModuleID = '../../third_party/unrar/src/list.cpp'
source_filename = "../../third_party/unrar/src/list.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%class.CommandData = type { %class.RAROptions.base, i8, i8, i32, i8, [2064 x i32], [2048 x i32], %class.StringList, %class.StringList, %class.StringList, %class.StringList, %class.StringList }
%class.RAROptions.base = type <{ i32, i32, i8, i8, i8, [5 x i8], i64, [2048 x i32], [2048 x i32], i32, i8, [3 x i8], [2048 x i32], [2048 x i32], i32, i32, i32, i32, [2048 x i32], %class.SecPassword, i8, i8, [2 x i8], [2048 x i32], i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, [4 x i8], i64, %class.Array, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, [128 x i32], [128 x i32], i8, i8, i8, i8, i8, [3 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i8, i8, i8, [5 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i8, i8, i8, [5 x i8], i64, i64, i8, i8, i8, i8, [16 x %struct.FilterMode], [2048 x i32], i32, i32, i32, i32, i32, i32, i8, [3 x i8], [2048 x i32], i32 }>
%class.SecPassword = type <{ [128 x i32], i8, i8, [2 x i8] }>
%class.Array = type <{ i64*, i64, i64, i64, i8, [7 x i8] }>
%class.RarTime = type { i64 }
%struct.FilterMode = type { i32, i32, i32 }
%class.StringList = type { %class.Array.0, i64, i64, [16 x i64], i64 }
%class.Array.0 = type <{ i32*, i64, i64, i64, i8, [7 x i8] }>
%class.Archive = type <{ %class.File, %class.CryptData, %class.ComprDataIO, i8, [7 x i8], %class.RAROptions*, %class.RarTime, i32, i32, i8, [7 x i8], %class.QuickOpen, i8, [7 x i8], i64, %struct.BaseBlock, %struct.MarkHeader, %struct.MainHeader, %struct.CryptHeader, [4 x i8], %struct.FileHeader, %struct.EndArcHeader, %struct.SubBlockHeader, [4 x i8], %struct.FileHeader, %struct.CommentHeader, %struct.ProtectHeader, %struct.UnixOwnersHeader, %struct.EAHeader, %struct.StreamHeader, [4 x i8], i64, i64, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], i64, i8, i8, [16 x i8], i8, i8, i32, i64, i64, i64, i8, [3 x i8], [2048 x i32], [4 x i8] }>
%class.File = type { i32 (...)**, i64, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, [2048 x i32], i32, i64 }
%class.CryptData = type { [4 x %"struct.CryptData::KDF3CacheItem"], i32, [4 x %"struct.CryptData::KDF5CacheItem"], i32, i32, %class.Rijndael, [256 x i32], [256 x i8], [4 x i32], [3 x i8], [4 x i16] }
%"struct.CryptData::KDF3CacheItem" = type { %class.SecPassword, [8 x i8], [16 x i8], [16 x i8], i8, [3 x i8] }
%"struct.CryptData::KDF5CacheItem" = type { %class.SecPassword, [16 x i8], [32 x i8], i32, [32 x i8], [32 x i8] }
%class.Rijndael = type { i8, i32, [16 x i8], [15 x [4 x [4 x i8]]] }
%class.ComprDataIO = type <{ i8, [7 x i8], i64, i8*, i8, [7 x i8], i64, i8*, i64, i8*, i64, i8, i8, i8, i8, [4 x i8], %class.File*, %class.File*, %class.CmdAdd*, %struct.FileHeader*, i64*, %class.CryptData*, %class.CryptData*, i32, i32, i8, i8, i8, [5 x i8], i64, i64, i64, i64, i64, i64, i64, %class.DataHash, %class.DataHash, %class.DataHash, i8, i8, [6 x i8] }>
%class.CmdAdd = type opaque
%class.DataHash = type <{ i32, i32, %struct.blake2sp_state*, %class.ThreadPool*, i32, [4 x i8] }>
%struct.blake2sp_state = type <{ [8 x %struct.blake2s_state], %struct.blake2s_state, [512 x i8], i64, %class.ThreadPool*, i32, [4 x i8] }>
%struct.blake2s_state = type <{ [240 x i8], i8*, i32*, i32*, i32*, i64, i8, [7 x i8] }>
%class.ThreadPool = type { i32, [64 x i64], i32, i32, [64 x %"struct.ThreadPool::QueueEntry"], i32, i32, i8, i32, %union.pthread_cond_t, %union.pthread_mutex_t, i8, %union.pthread_cond_t, %union.pthread_mutex_t, %union.pthread_mutex_t }
%"struct.ThreadPool::QueueEntry" = type { void (i8*)*, i8* }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.5, %union.anon.6, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.5 = type { i64 }
%union.anon.6 = type { i64 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%class.RAROptions = type <{ i32, i32, i8, i8, i8, [5 x i8], i64, [2048 x i32], [2048 x i32], i32, i8, [3 x i8], [2048 x i32], [2048 x i32], i32, i32, i32, i32, [2048 x i32], %class.SecPassword, i8, i8, [2 x i8], [2048 x i32], i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, [4 x i8], i64, %class.Array, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, [128 x i32], [128 x i32], i8, i8, i8, i8, i8, [3 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i8, i8, i8, [5 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i8, i8, i8, [5 x i8], i64, i64, i8, i8, i8, i8, [16 x %struct.FilterMode], [2048 x i32], i32, i32, i32, i32, i32, i32, i8, [3 x i8], [2048 x i32], i32, [4 x i8] }>
%class.QuickOpen = type <{ %class.Archive*, i8, [7 x i8], %struct.QuickOpenItem*, %struct.QuickOpenItem*, i8*, i64, %class.CryptData, i8, [7 x i8], i64, i64, i64, i64, i64, i64, %class.Array.2, i64, i64, i8, [7 x i8] }>
%struct.QuickOpenItem = type { i8*, i64, i64, %struct.QuickOpenItem* }
%class.Array.2 = type <{ i8*, i64, i64, i64, i8, [7 x i8] }>
%struct.BaseBlock = type { i32, i32, i32, i32, i8 }
%struct.MarkHeader = type { [8 x i8], i32 }
%struct.MainHeader = type { %struct.BaseBlock, i16, i32, i8, i8, i8, i64, i64, i64, i64 }
%struct.CryptHeader = type { %struct.BaseBlock, i8, i32, [16 x i8], [8 x i8] }
%struct.EndArcHeader = type { %struct.BaseBlock, i32, i32, i8, i8, i8, i8 }
%struct.SubBlockHeader = type <{ %struct.BlockHeader, i16, i8, i8 }>
%struct.BlockHeader = type { %struct.BaseBlock, i32 }
%struct.FileHeader = type { %struct.BlockHeader, i8, i32, i8, %union.anon, [2048 x i32], %class.Array.2, %class.RarTime, %class.RarTime, %class.RarTime, i64, i64, i64, %struct.HashValue, i32, i8, i8, i8, i8, i32, i8, [16 x i8], [16 x i8], i8, [8 x i8], i8, [32 x i8], i32, i8, i8, i8, i8, i64, i8, i8, i8, i32, i32, [2048 x i32], i8, i8, i8, i8, [256 x i8], [256 x i8], i32, i32 }
%union.anon = type { i32 }
%struct.HashValue = type { i32, %union.anon.4 }
%union.anon.4 = type { i32, [28 x i8] }
%struct.CommentHeader = type <{ %struct.BaseBlock, i16, i8, i8, i16, [2 x i8] }>
%struct.ProtectHeader = type { %struct.BlockHeader, i8, i16, i32, [8 x i8] }
%struct.UnixOwnersHeader = type { %struct.SubBlockHeader.base, i16, i16, [256 x i8], [256 x i8] }
%struct.SubBlockHeader.base = type <{ %struct.BlockHeader, i16, i8 }>
%struct.EAHeader = type { %struct.SubBlockHeader.base, i32, i8, i8, i32 }
%struct.StreamHeader = type <{ %struct.SubBlockHeader.base, i8, i32, i8, i8, [2 x i8], i32, i16, [260 x i8], [2 x i8] }>

@.str.1 = private unnamed_addr constant [8 x i32] [i32 65, i32 114, i32 99, i32 104, i32 105, i32 118, i32 101, i32 0], align 4
@.str.3 = private unnamed_addr constant [8 x i32] [i32 68, i32 101, i32 116, i32 97, i32 105, i32 108, i32 115, i32 0], align 4
@.str.9 = private unnamed_addr constant [1 x i32] zeroinitializer, align 4
@.str.10 = private unnamed_addr constant [6 x i32] [i32 115, i32 111, i32 108, i32 105, i32 100, i32 0], align 4
@.str.11 = private unnamed_addr constant [4 x i32] [i32 83, i32 70, i32 88, i32 0], align 4
@.str.12 = private unnamed_addr constant [10 x i32] [i32 118, i32 111, i32 108, i32 117, i32 109, i32 101, i32 32, i32 37, i32 100, i32 0], align 4
@.str.13 = private unnamed_addr constant [7 x i32] [i32 118, i32 111, i32 108, i32 117, i32 109, i32 101, i32 0], align 4
@.str.14 = private unnamed_addr constant [16 x i32] [i32 114, i32 101, i32 99, i32 111, i32 118, i32 101, i32 114, i32 121, i32 32, i32 114, i32 101, i32 99, i32 111, i32 114, i32 100, i32 0], align 4
@.str.15 = private unnamed_addr constant [5 x i32] [i32 108, i32 111, i32 99, i32 107, i32 0], align 4
@.str.16 = private unnamed_addr constant [18 x i32] [i32 101, i32 110, i32 99, i32 114, i32 121, i32 112, i32 116, i32 101, i32 100, i32 32, i32 104, i32 101, i32 97, i32 100, i32 101, i32 114, i32 115, i32 0], align 4
@.str.18 = private unnamed_addr constant [10 x i32] [i32 37, i32 46, i32 49, i32 48, i32 108, i32 115, i32 32, i32 37, i32 117, i32 0], align 4
@.str.20 = private unnamed_addr constant [8 x i32] [i32 83, i32 101, i32 114, i32 118, i32 105, i32 99, i32 101, i32 0], align 4
@.str.22 = private unnamed_addr constant [6 x i32] [i32 70, i32 108, i32 97, i32 103, i32 115, i32 0], align 4
@.str.27 = private unnamed_addr constant [11 x i32] [i32 32, i32 32, i32 48, i32 32, i32 102, i32 105, i32 108, i32 101, i32 115, i32 10, i32 0], align 4
@.str.28 = private unnamed_addr constant [23 x i32] [i32 10, i32 37, i32 115, i32 32, i32 105, i32 115, i32 32, i32 110, i32 111, i32 116, i32 32, i32 82, i32 65, i32 82, i32 32, i32 97, i32 114, i32 99, i32 104, i32 105, i32 118, i32 101, i32 0], align 4
@.str.33 = private unnamed_addr constant [71 x i32] [i32 32, i32 65, i32 116, i32 116, i32 114, i32 105, i32 98, i32 117, i32 116, i32 101, i32 115, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 83, i32 105, i32 122, i32 101, i32 32, i32 32, i32 32, i32 32, i32 80, i32 97, i32 99, i32 107, i32 101, i32 100, i32 32, i32 82, i32 97, i32 116, i32 105, i32 111, i32 32, i32 32, i32 32, i32 32, i32 68, i32 97, i32 116, i32 101, i32 32, i32 32, i32 32, i32 32, i32 84, i32 105, i32 109, i32 101, i32 32, i32 32, i32 32, i32 67, i32 104, i32 101, i32 99, i32 107, i32 115, i32 117, i32 109, i32 32, i32 32, i32 78, i32 97, i32 109, i32 101, i32 0], align 4
@.str.34 = private unnamed_addr constant [46 x i32] [i32 32, i32 65, i32 116, i32 116, i32 114, i32 105, i32 98, i32 117, i32 116, i32 101, i32 115, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 83, i32 105, i32 122, i32 101, i32 32, i32 32, i32 32, i32 32, i32 32, i32 68, i32 97, i32 116, i32 101, i32 32, i32 32, i32 32, i32 32, i32 84, i32 105, i32 109, i32 101, i32 32, i32 32, i32 32, i32 78, i32 97, i32 109, i32 101, i32 0], align 4
@.str.35 = private unnamed_addr constant [2 x i32] [i32 63, i32 0], align 4
@.str.36 = private unnamed_addr constant [4 x i32] [i32 37, i32 99, i32 66, i32 0], align 4
@.str.37 = private unnamed_addr constant [4 x i32] [i32 60, i32 45, i32 62, i32 0], align 4
@.str.38 = private unnamed_addr constant [4 x i32] [i32 60, i32 45, i32 45, i32 0], align 4
@.str.39 = private unnamed_addr constant [4 x i32] [i32 45, i32 45, i32 62, i32 0], align 4
@.str.40 = private unnamed_addr constant [5 x i32] [i32 37, i32 100, i32 37, i32 37, i32 0], align 4
@.str.42 = private unnamed_addr constant [5 x i32] [i32 78, i32 97, i32 109, i32 101, i32 0], align 4
@.str.43 = private unnamed_addr constant [4 x i32] [i32 83, i32 84, i32 77, i32 0], align 4
@.str.44 = private unnamed_addr constant [5 x i32] [i32 84, i32 121, i32 112, i32 101, i32 0], align 4
@.str.45 = private unnamed_addr constant [27 x i32] [i32 78, i32 84, i32 70, i32 83, i32 32, i32 97, i32 108, i32 116, i32 101, i32 114, i32 110, i32 97, i32 116, i32 101, i32 32, i32 100, i32 97, i32 116, i32 97, i32 32, i32 115, i32 116, i32 114, i32 101, i32 97, i32 109, i32 0], align 4
@.str.46 = private unnamed_addr constant [7 x i32] [i32 84, i32 97, i32 114, i32 103, i32 101, i32 116, i32 0], align 4
@.str.47 = private unnamed_addr constant [10 x i32] [i32 68, i32 105, i32 114, i32 101, i32 99, i32 116, i32 111, i32 114, i32 121, i32 0], align 4
@.str.48 = private unnamed_addr constant [5 x i32] [i32 70, i32 105, i32 108, i32 101, i32 0], align 4
@.str.49 = private unnamed_addr constant [19 x i32] [i32 85, i32 110, i32 105, i32 120, i32 32, i32 115, i32 121, i32 109, i32 98, i32 111, i32 108, i32 105, i32 99, i32 32, i32 108, i32 105, i32 110, i32 107, i32 0], align 4
@.str.50 = private unnamed_addr constant [22 x i32] [i32 87, i32 105, i32 110, i32 100, i32 111, i32 119, i32 115, i32 32, i32 115, i32 121, i32 109, i32 98, i32 111, i32 108, i32 105, i32 99, i32 32, i32 108, i32 105, i32 110, i32 107, i32 0], align 4
@.str.51 = private unnamed_addr constant [20 x i32] [i32 78, i32 84, i32 70, i32 83, i32 32, i32 106, i32 117, i32 110, i32 99, i32 116, i32 105, i32 111, i32 110, i32 32, i32 112, i32 111, i32 105, i32 110, i32 116, i32 0], align 4
@.str.52 = private unnamed_addr constant [10 x i32] [i32 72, i32 97, i32 114, i32 100, i32 32, i32 108, i32 105, i32 110, i32 107, i32 0], align 4
@.str.53 = private unnamed_addr constant [15 x i32] [i32 70, i32 105, i32 108, i32 101, i32 32, i32 114, i32 101, i32 102, i32 101, i32 114, i32 101, i32 110, i32 99, i32 101, i32 0], align 4
@.str.54 = private unnamed_addr constant [7 x i8] c"*<-?->\00", align 1
@.str.55 = private unnamed_addr constant [5 x i32] [i32 83, i32 105, i32 122, i32 101, i32 0], align 4
@.str.56 = private unnamed_addr constant [12 x i32] [i32 80, i32 97, i32 99, i32 107, i32 101, i32 100, i32 32, i32 115, i32 105, i32 122, i32 101, i32 0], align 4
@.str.57 = private unnamed_addr constant [6 x i32] [i32 82, i32 97, i32 116, i32 105, i32 111, i32 0], align 4
@.str.58 = private unnamed_addr constant [6 x i32] [i32 109, i32 116, i32 105, i32 109, i32 101, i32 0], align 4
@.str.59 = private unnamed_addr constant [6 x i32] [i32 99, i32 116, i32 105, i32 109, i32 101, i32 0], align 4
@.str.60 = private unnamed_addr constant [6 x i32] [i32 97, i32 116, i32 105, i32 109, i32 101, i32 0], align 4
@.str.61 = private unnamed_addr constant [11 x i32] [i32 65, i32 116, i32 116, i32 114, i32 105, i32 98, i32 117, i32 116, i32 101, i32 115, i32 0], align 4
@.str.69 = private unnamed_addr constant [8 x i32] [i32 87, i32 105, i32 110, i32 100, i32 111, i32 119, i32 115, i32 0], align 4
@.str.70 = private unnamed_addr constant [5 x i32] [i32 85, i32 110, i32 105, i32 120, i32 0], align 4
@_ZZL14ListFileHeaderR7ArchiveR10FileHeaderRbbbbE5RarOS = internal unnamed_addr constant [10 x i32*] [i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.71, i32 0, i32 0), i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.72, i32 0, i32 0), i32* getelementptr inbounds ([8 x i32], [8 x i32]* @.str.69, i32 0, i32 0), i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.70, i32 0, i32 0), i32* getelementptr inbounds ([7 x i32], [7 x i32]* @.str.73, i32 0, i32 0), i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.74, i32 0, i32 0), i32* getelementptr inbounds ([6 x i32], [6 x i32]* @.str.75, i32 0, i32 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.9, i32 0, i32 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.9, i32 0, i32 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.9, i32 0, i32 0)], align 16
@.str.71 = private unnamed_addr constant [4 x i32] [i32 68, i32 79, i32 83, i32 0], align 4
@.str.72 = private unnamed_addr constant [5 x i32] [i32 79, i32 83, i32 47, i32 50, i32 0], align 4
@.str.73 = private unnamed_addr constant [7 x i32] [i32 77, i32 97, i32 99, i32 32, i32 79, i32 83, i32 0], align 4
@.str.74 = private unnamed_addr constant [5 x i32] [i32 66, i32 101, i32 79, i32 83, i32 0], align 4
@.str.75 = private unnamed_addr constant [6 x i32] [i32 87, i32 105, i32 110, i32 67, i32 69, i32 0], align 4
@.str.76 = private unnamed_addr constant [8 x i32] [i32 72, i32 111, i32 115, i32 116, i32 32, i32 79, i32 83, i32 0], align 4
@.str.78 = private unnamed_addr constant [12 x i32] [i32 67, i32 111, i32 109, i32 112, i32 114, i32 101, i32 115, i32 115, i32 105, i32 111, i32 110, i32 0], align 4
@.str.85 = private unnamed_addr constant [10 x i32] [i32 101, i32 110, i32 99, i32 114, i32 121, i32 112, i32 116, i32 101, i32 100, i32 0], align 4
@.str.87 = private unnamed_addr constant [13 x i32] [i32 70, i32 105, i32 108, i32 101, i32 32, i32 118, i32 101, i32 114, i32 115, i32 105, i32 111, i32 110, i32 0], align 4
@.str.99 = private unnamed_addr constant [15 x i32] [i32 37, i32 99, i32 37, i32 99, i32 37, i32 99, i32 37, i32 99, i32 37, i32 99, i32 37, i32 99, i32 37, i32 99, i32 0], align 4
@.str.100 = private unnamed_addr constant [19 x i32] [i32 37, i32 99, i32 37, i32 99, i32 37, i32 99, i32 37, i32 99, i32 37, i32 99, i32 37, i32 99, i32 37, i32 99, i32 37, i32 99, i32 37, i32 99, i32 0], align 4
@switch.table._ZL14ListFileHeaderR7ArchiveR10FileHeaderRbbbb = private unnamed_addr constant [5 x i32*] [i32* getelementptr inbounds ([19 x i32], [19 x i32]* @.str.49, i64 0, i64 0), i32* getelementptr inbounds ([22 x i32], [22 x i32]* @.str.50, i64 0, i64 0), i32* getelementptr inbounds ([20 x i32], [20 x i32]* @.str.51, i64 0, i64 0), i32* getelementptr inbounds ([10 x i32], [10 x i32]* @.str.52, i64 0, i64 0), i32* getelementptr inbounds ([15 x i32], [15 x i32]* @.str.53, i64 0, i64 0)], align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z11ListArchiveP11CommandData(%class.CommandData*) local_unnamed_addr #0 {
  %2 = alloca [2048 x i32], align 16
  %3 = alloca %class.Archive, align 8
  %4 = alloca i8, align 1
  %5 = alloca [50 x i32], align 16
  %6 = alloca [20 x i32], align 16
  %7 = alloca [20 x i32], align 16
  %8 = alloca [20 x i32], align 16
  %9 = alloca [20 x i32], align 16
  %10 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 5, i64 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 84
  br i1 %12, label %13, label %17

13:                                               ; preds = %1
  %14 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 5, i64 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 65
  br label %17

17:                                               ; preds = %13, %1
  %18 = phi i1 [ false, %1 ], [ %16, %13 ]
  %19 = icmp eq i32 %11, 66
  %20 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 5, i64 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 86
  %23 = bitcast [2048 x i32]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %23) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %23, i8 -86, i64 8192, i1 false)
  %24 = getelementptr inbounds [2048 x i32], [2048 x i32]* %2, i64 0, i64 0
  %25 = call zeroext i1 @_ZN11CommandData10GetArcNameEPwi(%class.CommandData* %0, i32* nonnull %24, i32 2048) #5
  %26 = bitcast %class.CommandData* %0 to %class.RAROptions*
  %27 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 21
  %28 = load i8, i8* %27, align 1, !range !2
  %29 = icmp ne i8 %28, 0
  br i1 %25, label %30, label %186

30:                                               ; preds = %17
  %31 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 19
  %32 = bitcast %class.Archive* %3 to i8*
  %33 = getelementptr inbounds %class.Archive, %class.Archive* %3, i64 0, i32 0
  %34 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 10, i32 2
  %35 = getelementptr inbounds %class.Archive, %class.Archive* %3, i64 0, i32 33
  %36 = getelementptr inbounds %class.Archive, %class.Archive* %3, i64 0, i32 34
  %37 = getelementptr inbounds %class.Archive, %class.Archive* %3, i64 0, i32 44
  %38 = getelementptr inbounds %class.Archive, %class.Archive* %3, i64 0, i32 35
  %39 = getelementptr inbounds %class.Archive, %class.Archive* %3, i64 0, i32 41
  %40 = getelementptr inbounds %class.Archive, %class.Archive* %3, i64 0, i32 37
  %41 = getelementptr inbounds %class.Archive, %class.Archive* %3, i64 0, i32 42
  %42 = bitcast [50 x i32]* %5 to i8*
  %43 = getelementptr inbounds [50 x i32], [50 x i32]* %5, i64 0, i64 0
  %44 = getelementptr inbounds %class.Archive, %class.Archive* %3, i64 0, i32 8
  %45 = getelementptr inbounds %class.Archive, %class.Archive* %3, i64 0, i32 24
  %46 = getelementptr inbounds %class.Archive, %class.Archive* %3, i64 0, i32 20
  %47 = getelementptr inbounds %class.Archive, %class.Archive* %3, i64 0, i32 20, i32 15
  %48 = getelementptr inbounds %class.Archive, %class.Archive* %3, i64 0, i32 20, i32 11
  %49 = getelementptr inbounds %class.Archive, %class.Archive* %3, i64 0, i32 20, i32 10
  %50 = getelementptr inbounds %class.Archive, %class.Archive* %3, i64 0, i32 21, i32 6
  %51 = getelementptr inbounds %class.Archive, %class.Archive* %3, i64 0, i32 50
  %52 = and i1 %12, %18
  %53 = bitcast [20 x i32]* %6 to i8*
  %54 = getelementptr inbounds [20 x i32], [20 x i32]* %6, i64 0, i64 0
  %55 = bitcast [20 x i32]* %7 to i8*
  %56 = getelementptr inbounds [20 x i32], [20 x i32]* %7, i64 0, i64 0
  %57 = xor i1 %12, true
  %58 = xor i1 %18, true
  br label %59

59:                                               ; preds = %30, %179
  %60 = phi i1 [ %29, %30 ], [ %185, %179 ]
  %61 = phi i32 [ 0, %30 ], [ %182, %179 ]
  %62 = phi i64 [ 0, %30 ], [ %181, %179 ]
  %63 = phi i64 [ 0, %30 ], [ %180, %179 ]
  br i1 %60, label %64, label %65

64:                                               ; preds = %59
  call void @_ZN11SecPassword5CleanEv(%class.SecPassword* %31) #5
  br label %65

65:                                               ; preds = %64, %59
  call void @llvm.lifetime.start.p0i8(i64 65336, i8* nonnull %32) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 65336, i1 false)
  call void @_ZN7ArchiveC1EP10RAROptions(%class.Archive* nonnull %3, %class.RAROptions* %26) #5
  %66 = call zeroext i1 @_ZN4File5WOpenEPKw(%class.File* nonnull %33, i32* nonnull %24) #5
  br i1 %66, label %67, label %179

67:                                               ; preds = %65
  %68 = call zeroext i1 @_ZN7Archive9IsArchiveEb(%class.Archive* nonnull %3, i1 zeroext true) #5
  br i1 %68, label %69, label %173

69:                                               ; preds = %67
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #5
  store i8 0, i8* %4, align 1
  br i1 %19, label %105, label %70

70:                                               ; preds = %69
  call void @_ZN7Archive11ViewCommentEv(%class.Archive* nonnull %3) #5
  %71 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([8 x i32], [8 x i32]* @.str.1, i64 0, i64 0)) #5
  %72 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([8 x i32], [8 x i32]* @.str.3, i64 0, i64 0)) #5
  %73 = load i8, i8* %36, align 4, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %70
  %76 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([6 x i32], [6 x i32]* @.str.10, i64 0, i64 0)) #5
  br label %77

77:                                               ; preds = %70, %75
  %78 = load i64, i64* %37, align 8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %77
  %81 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.11, i64 0, i64 0)) #5
  br label %82

82:                                               ; preds = %77, %80
  %83 = load i8, i8* %38, align 1, !range !2
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load i32, i32* %35, align 8
  %87 = icmp eq i32 %86, 3
  %88 = select i1 %87, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @.str.12, i64 0, i64 0), i32* getelementptr inbounds ([7 x i32], [7 x i32]* @.str.13, i64 0, i64 0)
  %89 = call i32* @_Z2StPKw(i32* %88) #5
  br label %90

90:                                               ; preds = %85, %82
  %91 = load i8, i8* %39, align 1, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %95, label %93

93:                                               ; preds = %90
  %94 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([16 x i32], [16 x i32]* @.str.14, i64 0, i64 0)) #5
  br label %95

95:                                               ; preds = %90, %93
  %96 = load i8, i8* %40, align 1, !range !2
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %100, label %98

98:                                               ; preds = %95
  %99 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.15, i64 0, i64 0)) #5
  br label %100

100:                                              ; preds = %95, %98
  %101 = load i8, i8* %41, align 4, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %100
  %104 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([18 x i32], [18 x i32]* @.str.16, i64 0, i64 0)) #5
  br label %105

105:                                              ; preds = %103, %100, %69
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %42) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %42, i8 -86, i64 200, i1 false)
  store i32 0, i32* %43, align 16
  %106 = call i64 @_ZN7Archive10ReadHeaderEv(%class.Archive* nonnull %3) #5
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %155, label %108

108:                                              ; preds = %105, %149
  %109 = phi i64 [ %152, %149 ], [ 0, %105 ]
  %110 = phi i64 [ %151, %149 ], [ 0, %105 ]
  %111 = phi i8 [ %150, %149 ], [ 1, %105 ]
  call void @_Z4Waitv() #5
  %112 = load i32, i32* %44, align 4
  switch i32 %112, label %149 [
    i32 5, label %113
    i32 2, label %131
    i32 3, label %142
  ]

113:                                              ; preds = %108
  %114 = load i8, i8* %50, align 1, !range !2
  %115 = icmp ne i8 %114, 0
  %116 = load i32, i32* %35, align 8
  %117 = icmp eq i32 %116, 2
  %118 = and i1 %115, %117
  br i1 %118, label %119, label %124

119:                                              ; preds = %113
  %120 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([7 x i32], [7 x i32]* @.str.13, i64 0, i64 0)) #5
  %121 = load i32, i32* %51, align 4
  %122 = add i32 %121, 1
  %123 = call i32 (i32*, i64, i32*, ...) @swprintf(i32* nonnull %43, i64 50, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @.str.18, i64 0, i64 0), i32* %120, i32 %122) #5
  br label %124

124:                                              ; preds = %113, %119
  br i1 %52, label %125, label %155

125:                                              ; preds = %124
  %126 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([8 x i32], [8 x i32]* @.str.20, i64 0, i64 0)) #5
  %127 = load i32, i32* %43, align 16
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %169, label %129

129:                                              ; preds = %125
  %130 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([6 x i32], [6 x i32]* @.str.22, i64 0, i64 0)) #5
  br label %169

131:                                              ; preds = %108
  %132 = call i32 @_ZN11CommandData13IsProcessFileER10FileHeaderPbibPwj(%class.CommandData* %0, %struct.FileHeader* dereferenceable(17192) %46, i8* null, i32 6, i1 zeroext false, i32* null, i32 0) #5
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %149, label %134

134:                                              ; preds = %131
  call fastcc void @_ZL14ListFileHeaderR7ArchiveR10FileHeaderRbbbb(%class.Archive* nonnull dereferenceable(65336) %3, %struct.FileHeader* dereferenceable(17192) %46, i8* nonnull dereferenceable(1) %4, i1 zeroext %22, i1 zeroext %12, i1 zeroext %19)
  %135 = load i8, i8* %47, align 8, !range !2
  %136 = icmp eq i8 %135, 0
  %137 = load i64, i64* %48, align 8
  %138 = select i1 %136, i64 %137, i64 0
  %139 = add nsw i64 %109, %138
  %140 = load i64, i64* %49, align 8
  %141 = add nsw i64 %140, %110
  br label %149

142:                                              ; preds = %108
  %143 = and i8 %111, 1
  %144 = icmp eq i8 %143, 0
  %145 = or i1 %144, %19
  %146 = or i1 %145, %57
  %147 = or i1 %146, %58
  br i1 %147, label %149, label %148

148:                                              ; preds = %142
  call fastcc void @_ZL14ListFileHeaderR7ArchiveR10FileHeaderRbbbb(%class.Archive* nonnull dereferenceable(65336) %3, %struct.FileHeader* dereferenceable(17192) %45, i8* nonnull dereferenceable(1) %4, i1 zeroext %22, i1 zeroext true, i1 zeroext false)
  br label %149

149:                                              ; preds = %142, %131, %134, %148, %108
  %150 = phi i8 [ %111, %148 ], [ %111, %142 ], [ 1, %134 ], [ 0, %131 ], [ %111, %108 ]
  %151 = phi i64 [ %110, %148 ], [ %110, %142 ], [ %141, %134 ], [ %110, %131 ], [ %110, %108 ]
  %152 = phi i64 [ %109, %148 ], [ %109, %142 ], [ %139, %134 ], [ %109, %131 ], [ %109, %108 ]
  call void @_ZN7Archive10SeekToNextEv(%class.Archive* nonnull %3) #5
  %153 = call i64 @_ZN7Archive10ReadHeaderEv(%class.Archive* nonnull %3) #5
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %108

155:                                              ; preds = %149, %105, %124
  %156 = phi i64 [ %110, %124 ], [ 0, %105 ], [ %151, %149 ]
  %157 = phi i64 [ %109, %124 ], [ 0, %105 ], [ %152, %149 ]
  switch i32 %11, label %158 [
    i32 84, label %169
    i32 66, label %169
  ]

158:                                              ; preds = %155
  %159 = load i8, i8* %4, align 1, !range !2
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %167, label %161

161:                                              ; preds = %158
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %53) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %53, i8 -86, i64 80, i1 false)
  call void @_Z4itoalPwm(i64 %157, i32* nonnull %54, i64 20) #5
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %55) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %55, i8 -86, i64 80, i1 false)
  call void @_Z4itoalPwm(i64 %156, i32* nonnull %56, i64 20) #5
  br i1 %22, label %162, label %164

162:                                              ; preds = %161
  %163 = call i32 @_Z14ToPercentUnlimll(i64 %156, i64 %157) #5
  br label %164

164:                                              ; preds = %161, %162
  %165 = add nsw i64 %157, %62
  %166 = add nsw i64 %156, %63
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %55) #5
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %53) #5
  br label %169

167:                                              ; preds = %158
  %168 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([11 x i32], [11 x i32]* @.str.27, i64 0, i64 0)) #5
  br label %169

169:                                              ; preds = %125, %129, %155, %155, %164, %167
  %170 = phi i64 [ %63, %155 ], [ %166, %164 ], [ %63, %167 ], [ %63, %155 ], [ %63, %129 ], [ %63, %125 ]
  %171 = phi i64 [ %62, %155 ], [ %165, %164 ], [ %62, %167 ], [ %62, %155 ], [ %62, %129 ], [ %62, %125 ]
  %172 = add i32 %61, 1
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %42) #5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #5
  br label %179

173:                                              ; preds = %67
  %174 = load i64, i64* %34, align 8
  %175 = icmp ugt i64 %174, 1
  %176 = or i1 %19, %175
  br i1 %176, label %179, label %177

177:                                              ; preds = %173
  %178 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([23 x i32], [23 x i32]* @.str.28, i64 0, i64 0)) #5
  br label %179

179:                                              ; preds = %169, %173, %177, %65
  %180 = phi i64 [ %63, %65 ], [ %170, %169 ], [ %63, %173 ], [ %63, %177 ]
  %181 = phi i64 [ %62, %65 ], [ %171, %169 ], [ %62, %173 ], [ %62, %177 ]
  %182 = phi i32 [ %61, %65 ], [ %172, %169 ], [ %61, %173 ], [ %61, %177 ]
  call void @_ZN7ArchiveD1Ev(%class.Archive* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 65336, i8* nonnull %32) #5
  %183 = call zeroext i1 @_ZN11CommandData10GetArcNameEPwi(%class.CommandData* %0, i32* nonnull %24, i32 2048) #5
  %184 = load i8, i8* %27, align 1, !range !2
  %185 = icmp ne i8 %184, 0
  br i1 %183, label %59, label %186

186:                                              ; preds = %179, %17
  %187 = phi i64 [ 0, %17 ], [ %180, %179 ]
  %188 = phi i64 [ 0, %17 ], [ %181, %179 ]
  %189 = phi i32 [ 0, %17 ], [ %182, %179 ]
  %190 = phi i1 [ %29, %17 ], [ %185, %179 ]
  br i1 %190, label %191, label %193

191:                                              ; preds = %186
  %192 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 19
  call void @_ZN11SecPassword5CleanEv(%class.SecPassword* %192) #5
  br label %193

193:                                              ; preds = %191, %186
  %194 = icmp ult i32 %189, 2
  br i1 %194, label %204, label %195

195:                                              ; preds = %193
  switch i32 %11, label %196 [
    i32 84, label %204
    i32 66, label %204
  ]

196:                                              ; preds = %195
  %197 = bitcast [20 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %197) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %197, i8 -86, i64 80, i1 false)
  %198 = bitcast [20 x i32]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %198) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %198, i8 -86, i64 80, i1 false)
  %199 = getelementptr inbounds [20 x i32], [20 x i32]* %8, i64 0, i64 0
  call void @_Z4itoalPwm(i64 %188, i32* nonnull %199, i64 20) #5
  %200 = getelementptr inbounds [20 x i32], [20 x i32]* %9, i64 0, i64 0
  call void @_Z4itoalPwm(i64 %187, i32* nonnull %200, i64 20) #5
  br i1 %22, label %201, label %203

201:                                              ; preds = %196
  %202 = call i32 @_Z14ToPercentUnlimll(i64 %187, i64 %188) #5
  br label %203

203:                                              ; preds = %196, %201
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %198) #5
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %197) #5
  br label %204

204:                                              ; preds = %195, %195, %193, %203
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %23) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN11CommandData10GetArcNameEPwi(%class.CommandData*, i32*, i32) local_unnamed_addr #2

declare void @_ZN11SecPassword5CleanEv(%class.SecPassword*) local_unnamed_addr #2

declare void @_ZN7ArchiveC1EP10RAROptions(%class.Archive*, %class.RAROptions*) unnamed_addr #2

declare zeroext i1 @_ZN4File5WOpenEPKw(%class.File*, i32*) local_unnamed_addr #2

declare zeroext i1 @_ZN7Archive9IsArchiveEb(%class.Archive*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN7Archive11ViewCommentEv(%class.Archive*) local_unnamed_addr #2

declare i32* @_Z2StPKw(i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @_ZN7Archive10ReadHeaderEv(%class.Archive*) local_unnamed_addr #2

declare void @_Z4Waitv() local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @swprintf(i32*, i64, i32*, ...) local_unnamed_addr #3

declare i32 @_ZN11CommandData13IsProcessFileER10FileHeaderPbibPwj(%class.CommandData*, %struct.FileHeader* dereferenceable(17192), i8*, i32, i1 zeroext, i32*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL14ListFileHeaderR7ArchiveR10FileHeaderRbbbb(%class.Archive* dereferenceable(65336), %struct.FileHeader* dereferenceable(17192), i8* nocapture dereferenceable(1), i1 zeroext, i1 zeroext, i1 zeroext) unnamed_addr #0 {
  %7 = alloca [30 x i32], align 16
  %8 = alloca [30 x i32], align 16
  %9 = alloca [30 x i32], align 16
  %10 = alloca [10 x i32], align 16
  %11 = alloca [50 x i32], align 16
  %12 = alloca [2048 x i32], align 16
  %13 = alloca [2048 x i8], align 16
  %14 = alloca [2048 x i32], align 16
  %15 = alloca [65 x i32], align 16
  %16 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 5, i64 0
  %17 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 33
  %18 = load i32, i32* %17, align 8
  br i1 %5, label %319, label %19

19:                                               ; preds = %6
  %20 = load i8, i8* %2, align 1, !range !2
  %21 = icmp ne i8 %20, 0
  %22 = or i1 %21, %4
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = select i1 %3, i32* getelementptr inbounds ([71 x i32], [71 x i32]* @.str.33, i64 0, i64 0), i32* getelementptr inbounds ([46 x i32], [46 x i32]* @.str.34, i64 0, i64 0)
  %25 = tail call i32* @_Z2StPKw(i32* %24) #5
  store i8 1, i8* %2, align 1
  br label %26

26:                                               ; preds = %19, %23
  %27 = bitcast [30 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %27) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %27, i8 -86, i64 120, i1 false)
  %28 = bitcast [30 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %28) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 120, i1 false)
  %29 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 11
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, 9223372034707292159
  %32 = getelementptr inbounds [30 x i32], [30 x i32]* %7, i64 0, i64 0
  br i1 %31, label %33, label %34

33:                                               ; preds = %26
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.str.35, i64 0, i64 0), i64 30) #5
  br label %35

34:                                               ; preds = %26
  call void @_Z4itoalPwm(i64 %30, i32* nonnull %32, i64 30) #5
  br label %35

35:                                               ; preds = %34, %33
  %36 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 10
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds [30 x i32], [30 x i32]* %8, i64 0, i64 0
  call void @_Z4itoalPwm(i64 %37, i32* nonnull %38, i64 30) #5
  %39 = bitcast [30 x i32]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %39) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %39, i8 -86, i64 120, i1 false)
  %40 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 3
  br i1 %42, label %43, label %50

43:                                               ; preds = %35
  %44 = getelementptr inbounds [30 x i32], [30 x i32]* %9, i64 0, i64 0
  %45 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 33
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  %48 = select i1 %47, i32 46, i32 73
  %49 = call i32 (i32*, i64, i32*, ...) @swprintf(i32* nonnull %44, i64 30, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.36, i64 0, i64 0), i32 %48) #5
  br label %129

50:                                               ; preds = %35
  %51 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 4, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 36
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds [30 x i32], [30 x i32]* %9, i64 0, i64 0
  switch i32 %54, label %129 [
    i32 0, label %56
    i32 1, label %79
    i32 2, label %128
  ]

56:                                               ; preds = %50
  %57 = and i32 %52, 8192
  %58 = icmp eq i32 %57, 0
  %59 = select i1 %58, i32 46, i32 73
  %60 = and i32 %52, 2048
  %61 = icmp eq i32 %60, 0
  %62 = select i1 %61, i32 46, i32 67
  %63 = and i32 %52, 32
  %64 = icmp eq i32 %63, 0
  %65 = select i1 %64, i32 46, i32 65
  %66 = and i32 %52, 16
  %67 = icmp eq i32 %66, 0
  %68 = select i1 %67, i32 46, i32 68
  %69 = and i32 %52, 4
  %70 = icmp eq i32 %69, 0
  %71 = select i1 %70, i32 46, i32 83
  %72 = and i32 %52, 2
  %73 = icmp eq i32 %72, 0
  %74 = select i1 %73, i32 46, i32 72
  %75 = and i32 %52, 1
  %76 = icmp eq i32 %75, 0
  %77 = select i1 %76, i32 46, i32 82
  %78 = call i32 (i32*, i64, i32*, ...) @swprintf(i32* nonnull %55, i64 30, i32* getelementptr inbounds ([15 x i32], [15 x i32]* @.str.99, i64 0, i64 0), i32 %59, i32 %62, i32 %65, i32 %68, i32 %71, i32 %74, i32 %77) #5
  br label %129

79:                                               ; preds = %50
  %80 = trunc i32 %52 to i16
  %81 = and i16 %80, -4096
  %82 = icmp eq i16 %81, -24576
  %83 = select i1 %82, i32 108, i32 45
  %84 = icmp eq i16 %81, 16384
  %85 = select i1 %84, i32 100, i32 %83
  store i32 %85, i32* %55, align 16
  %86 = getelementptr inbounds [30 x i32], [30 x i32]* %9, i64 0, i64 1
  %87 = and i32 %52, 256
  %88 = icmp eq i32 %87, 0
  %89 = select i1 %88, i32 45, i32 114
  %90 = trunc i32 %52 to i8
  %91 = icmp slt i8 %90, 0
  %92 = select i1 %91, i32 119, i32 45
  %93 = and i32 %52, 64
  %94 = icmp eq i32 %93, 0
  %95 = and i32 %52, 2048
  %96 = icmp ne i32 %95, 0
  %97 = select i1 %96, i32 115, i32 120
  %98 = select i1 %96, i32 83, i32 45
  %99 = select i1 %94, i32 %98, i32 %97
  %100 = and i32 %52, 32
  %101 = icmp eq i32 %100, 0
  %102 = select i1 %101, i32 45, i32 114
  %103 = and i32 %52, 16
  %104 = icmp eq i32 %103, 0
  %105 = select i1 %104, i32 45, i32 119
  %106 = and i32 %52, 8
  %107 = icmp eq i32 %106, 0
  %108 = and i32 %52, 1024
  %109 = icmp ne i32 %108, 0
  %110 = select i1 %109, i32 115, i32 120
  %111 = select i1 %109, i32 83, i32 45
  %112 = select i1 %107, i32 %111, i32 %110
  %113 = and i32 %52, 4
  %114 = icmp eq i32 %113, 0
  %115 = select i1 %114, i32 45, i32 114
  %116 = and i32 %52, 2
  %117 = icmp eq i32 %116, 0
  %118 = select i1 %117, i32 45, i32 119
  %119 = and i32 %52, 1
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %125, label %121

121:                                              ; preds = %79
  %122 = and i32 %52, 512
  %123 = icmp eq i32 %122, 0
  %124 = select i1 %123, i32 120, i32 116
  br label %125

125:                                              ; preds = %121, %79
  %126 = phi i32 [ %124, %121 ], [ 45, %79 ]
  %127 = call i32 (i32*, i64, i32*, ...) @swprintf(i32* %86, i64 29, i32* getelementptr inbounds ([19 x i32], [19 x i32]* @.str.100, i64 0, i64 0), i32 %89, i32 %92, i32 %99, i32 %102, i32 %105, i32 %112, i32 %115, i32 %118, i32 %126) #5
  br label %129

128:                                              ; preds = %50
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %55, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.str.35, i64 0, i64 0), i64 30) #5
  br label %129

129:                                              ; preds = %128, %125, %56, %50, %43
  %130 = bitcast [10 x i32]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %130) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %130, i8 -86, i64 40, i1 false)
  %131 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 15
  %132 = load i8, i8* %131, align 8, !range !2
  %133 = icmp eq i8 %132, 0
  %134 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 16
  %135 = load i8, i8* %134, align 1, !range !2
  %136 = icmp eq i8 %135, 0
  %137 = getelementptr inbounds [10 x i32], [10 x i32]* %10, i64 0, i64 0
  br i1 %133, label %141, label %138

138:                                              ; preds = %129
  br i1 %136, label %140, label %139

139:                                              ; preds = %138
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %137, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.37, i64 0, i64 0), i64 10) #5
  br label %148

140:                                              ; preds = %138
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %137, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.38, i64 0, i64 0), i64 10) #5
  br label %148

141:                                              ; preds = %129
  br i1 %136, label %143, label %142

142:                                              ; preds = %141
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %137, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.39, i64 0, i64 0), i64 10) #5
  br label %148

143:                                              ; preds = %141
  %144 = load i64, i64* %36, align 8
  %145 = load i64, i64* %29, align 8
  %146 = call i32 @_Z14ToPercentUnlimll(i64 %144, i64 %145) #5
  %147 = call i32 (i32*, i64, i32*, ...) @swprintf(i32* nonnull %137, i64 10, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.40, i64 0, i64 0), i32 %146) #5
  br label %148

148:                                              ; preds = %140, %143, %142, %139
  %149 = bitcast [50 x i32]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %149) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %149, i8 -86, i64 200, i1 false)
  %150 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 7
  %151 = getelementptr inbounds [50 x i32], [50 x i32]* %11, i64 0, i64 0
  call void @_ZN7RarTime7GetTextEPwmb(%class.RarTime* %150, i32* nonnull %151, i64 50, i1 zeroext %4) #5
  br i1 %4, label %152, label %318

152:                                              ; preds = %148
  %153 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.42, i64 0, i64 0)) #5
  %154 = load i32, i32* %40, align 4
  %155 = icmp eq i32 %154, 2
  br i1 %155, label %166, label %156

156:                                              ; preds = %152
  %157 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 5, i64 0
  %158 = call i32 @wcscmp(i32* %157, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.43, i64 0, i64 0)) #6
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %171

160:                                              ; preds = %156
  %161 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.44, i64 0, i64 0)) #5
  %162 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([27 x i32], [27 x i32]* @.str.45, i64 0, i64 0)) #5
  %163 = bitcast [2048 x i32]* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %163) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %163, i8 -86, i64 8192, i1 false)
  %164 = getelementptr inbounds [2048 x i32], [2048 x i32]* %12, i64 0, i64 0
  call void @_Z17GetStreamNameNTFSR7ArchivePwm(%class.Archive* dereferenceable(65336) %0, i32* nonnull %164, i64 2048) #5
  %165 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([7 x i32], [7 x i32]* @.str.46, i64 0, i64 0)) #5
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %163) #5
  br label %212

166:                                              ; preds = %152
  %167 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 29
  %168 = load i8, i8* %167, align 1, !range !2
  %169 = icmp eq i8 %168, 0
  %170 = select i1 %169, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.48, i64 0, i64 0), i32* getelementptr inbounds ([10 x i32], [10 x i32]* @.str.47, i64 0, i64 0)
  br label %171

171:                                              ; preds = %156, %166
  %172 = phi i32* [ %170, %166 ], [ getelementptr inbounds ([8 x i32], [8 x i32]* @.str.20, i64 0, i64 0), %156 ]
  %173 = call i32* @_Z2StPKw(i32* %172) #5
  %174 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 37
  %175 = load i32, i32* %174, align 8
  %176 = add i32 %175, -1
  %177 = icmp ult i32 %176, 5
  br i1 %177, label %178, label %183

178:                                              ; preds = %171
  %179 = sext i32 %176 to i64
  %180 = getelementptr inbounds [5 x i32*], [5 x i32*]* @switch.table._ZL14ListFileHeaderR7ArchiveR10FileHeaderRbbbb, i64 0, i64 %179
  %181 = load i32*, i32** %180, align 8
  %182 = call i32* @_Z2StPKw(i32* %181) #5
  br label %183

183:                                              ; preds = %171, %178
  %184 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.44, i64 0, i64 0)) #5
  %185 = load i32, i32* %174, align 8
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %212, label %187

187:                                              ; preds = %183
  %188 = icmp eq i32 %18, 2
  br i1 %188, label %189, label %210

189:                                              ; preds = %187
  %190 = getelementptr inbounds [2048 x i8], [2048 x i8]* %13, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %190) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %190, i8 -86, i64 2048, i1 false)
  %191 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 18
  %192 = load i8, i8* %191, align 1, !range !2
  %193 = icmp eq i8 %192, 0
  br i1 %193, label %195, label %194

194:                                              ; preds = %189
  call void @_Z8strncpyzPcPKcm(i8* nonnull %190, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.54, i64 0, i64 0), i64 2048) #5
  br label %205

195:                                              ; preds = %189
  %196 = load i64, i64* %36, align 8
  %197 = icmp ult i64 %196, 2047
  %198 = select i1 %197, i64 %196, i64 2047
  %199 = bitcast %class.Archive* %0 to i32 (%class.Archive*, i8*, i64)***
  %200 = load i32 (%class.Archive*, i8*, i64)**, i32 (%class.Archive*, i8*, i64)*** %199, align 8
  %201 = getelementptr inbounds i32 (%class.Archive*, i8*, i64)*, i32 (%class.Archive*, i8*, i64)** %200, i64 4
  %202 = load i32 (%class.Archive*, i8*, i64)*, i32 (%class.Archive*, i8*, i64)** %201, align 8
  %203 = call i32 %202(%class.Archive* %0, i8* nonnull %190, i64 %198) #5
  %204 = getelementptr inbounds [2048 x i8], [2048 x i8]* %13, i64 0, i64 %198
  store i8 0, i8* %204, align 1
  br label %205

205:                                              ; preds = %195, %194
  %206 = bitcast [2048 x i32]* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %206) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %206, i8 -86, i64 8192, i1 false)
  %207 = getelementptr inbounds [2048 x i32], [2048 x i32]* %14, i64 0, i64 0
  %208 = call zeroext i1 @_Z10CharToWidePKcPwm(i8* nonnull %190, i32* nonnull %207, i64 2048) #5
  %209 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([7 x i32], [7 x i32]* @.str.46, i64 0, i64 0)) #5
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %206) #5
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %190) #5
  br label %212

210:                                              ; preds = %187
  %211 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([7 x i32], [7 x i32]* @.str.46, i64 0, i64 0)) #5
  br label %212

212:                                              ; preds = %210, %205, %183, %160
  %213 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 29
  %214 = load i8, i8* %213, align 1, !range !2
  %215 = icmp eq i8 %214, 0
  br i1 %215, label %216, label %220

216:                                              ; preds = %212
  %217 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.55, i64 0, i64 0)) #5
  %218 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([12 x i32], [12 x i32]* @.str.56, i64 0, i64 0)) #5
  %219 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([6 x i32], [6 x i32]* @.str.57, i64 0, i64 0)) #5
  br label %220

220:                                              ; preds = %212, %216
  %221 = getelementptr inbounds %class.RarTime, %class.RarTime* %150, i64 0, i32 0
  %222 = load i64, i64* %221, align 8
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %226, label %224

224:                                              ; preds = %220
  %225 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([6 x i32], [6 x i32]* @.str.58, i64 0, i64 0)) #5
  br label %226

226:                                              ; preds = %220, %224
  %227 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 8
  %228 = getelementptr inbounds %class.RarTime, %class.RarTime* %227, i64 0, i32 0
  %229 = load i64, i64* %228, align 8
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %233, label %231

231:                                              ; preds = %226
  call void @_ZN7RarTime7GetTextEPwmb(%class.RarTime* %227, i32* nonnull %151, i64 50, i1 zeroext true) #5
  %232 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([6 x i32], [6 x i32]* @.str.59, i64 0, i64 0)) #5
  br label %233

233:                                              ; preds = %226, %231
  %234 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 9
  %235 = getelementptr inbounds %class.RarTime, %class.RarTime* %234, i64 0, i32 0
  %236 = load i64, i64* %235, align 8
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %240, label %238

238:                                              ; preds = %233
  call void @_ZN7RarTime7GetTextEPwmb(%class.RarTime* %234, i32* nonnull %151, i64 50, i1 zeroext true) #5
  %239 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([6 x i32], [6 x i32]* @.str.60, i64 0, i64 0)) #5
  br label %240

240:                                              ; preds = %233, %238
  %241 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([11 x i32], [11 x i32]* @.str.61, i64 0, i64 0)) #5
  %242 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 13, i32 0
  %243 = load i32, i32* %242, align 8
  %244 = icmp eq i32 %243, 3
  br i1 %244, label %245, label %250

245:                                              ; preds = %240
  %246 = bitcast [65 x i32]* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 260, i8* nonnull %246) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %246, i8 -86, i64 260, i1 false)
  %247 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 13, i32 1
  %248 = bitcast %union.anon.4* %247 to i8*
  %249 = getelementptr inbounds [65 x i32], [65 x i32]* %15, i64 0, i64 0
  call void @_Z8BinToHexPKhmPcPwm(i8* %248, i64 32, i8* null, i32* nonnull %249, i64 65) #5
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %246) #5
  br label %250

250:                                              ; preds = %240, %245
  switch i32 %18, label %266 [
    i32 3, label %251
    i32 2, label %258
  ]

251:                                              ; preds = %250
  %252 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 36
  %253 = load i32, i32* %252, align 4
  %254 = icmp eq i32 %253, 2
  %255 = icmp eq i32 %253, 0
  %256 = select i1 %255, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @.str.69, i64 0, i64 0), i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.70, i64 0, i64 0)
  %257 = select i1 %254, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.9, i64 0, i64 0), i32* %256
  br label %266

258:                                              ; preds = %250
  %259 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 1
  %260 = load i8, i8* %259, align 8
  %261 = icmp ult i8 %260, 10
  br i1 %261, label %262, label %266

262:                                              ; preds = %258
  %263 = zext i8 %260 to i64
  %264 = getelementptr inbounds [10 x i32*], [10 x i32*]* @_ZZL14ListFileHeaderR7ArchiveR10FileHeaderRbbbbE5RarOS, i64 0, i64 %263
  %265 = load i32*, i32** %264, align 8
  br label %266

266:                                              ; preds = %250, %251, %258, %262
  %267 = phi i32* [ %265, %262 ], [ getelementptr inbounds ([1 x i32], [1 x i32]* @.str.9, i64 0, i64 0), %258 ], [ %257, %251 ], [ getelementptr inbounds ([1 x i32], [1 x i32]* @.str.9, i64 0, i64 0), %250 ]
  %268 = load i32, i32* %267, align 4
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %272, label %270

270:                                              ; preds = %266
  %271 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([8 x i32], [8 x i32]* @.str.76, i64 0, i64 0)) #5
  br label %272

272:                                              ; preds = %266, %270
  %273 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([12 x i32], [12 x i32]* @.str.78, i64 0, i64 0)) #5
  %274 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 28
  %275 = load i8, i8* %274, align 8, !range !2
  %276 = icmp eq i8 %275, 0
  br i1 %276, label %277, label %281

277:                                              ; preds = %272
  %278 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 18
  %279 = load i8, i8* %278, align 1, !range !2
  %280 = icmp eq i8 %279, 0
  br i1 %280, label %293, label %281

281:                                              ; preds = %277, %272
  %282 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([6 x i32], [6 x i32]* @.str.22, i64 0, i64 0)) #5
  %283 = load i8, i8* %274, align 8, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %287, label %285

285:                                              ; preds = %281
  %286 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([6 x i32], [6 x i32]* @.str.10, i64 0, i64 0)) #5
  br label %287

287:                                              ; preds = %281, %285
  %288 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 18
  %289 = load i8, i8* %288, align 1, !range !2
  %290 = icmp eq i8 %289, 0
  br i1 %290, label %293, label %291

291:                                              ; preds = %287
  %292 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([10 x i32], [10 x i32]* @.str.85, i64 0, i64 0)) #5
  br label %293

293:                                              ; preds = %287, %277, %291
  %294 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 31
  %295 = load i8, i8* %294, align 1, !range !2
  %296 = icmp eq i8 %295, 0
  br i1 %296, label %302, label %297

297:                                              ; preds = %293
  %298 = call i32 @_Z20ParseVersionFileNamePwb(i32* %16, i1 zeroext false) #5
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %302, label %300

300:                                              ; preds = %297
  %301 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([13 x i32], [13 x i32]* @.str.87, i64 0, i64 0)) #5
  br label %302

302:                                              ; preds = %300, %297, %293
  %303 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 40
  %304 = load i8, i8* %303, align 1, !range !2
  %305 = icmp eq i8 %304, 0
  br i1 %305, label %318, label %306

306:                                              ; preds = %302
  %307 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 43, i64 0
  %308 = load i8, i8* %307, align 8
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %312, label %310

310:                                              ; preds = %306
  %311 = call i32* @_Z7GetWidePKc(i8* %307) #5
  br label %312

312:                                              ; preds = %306, %310
  %313 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 44, i64 0
  %314 = load i8, i8* %313, align 8
  %315 = icmp eq i8 %314, 0
  br i1 %315, label %318, label %316

316:                                              ; preds = %312
  %317 = call i32* @_Z7GetWidePKc(i8* %313) #5
  br label %318

318:                                              ; preds = %316, %312, %148, %302
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %149) #5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %130) #5
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %39) #5
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %28) #5
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %27) #5
  br label %319

319:                                              ; preds = %6, %318
  ret void
}

declare void @_ZN7Archive10SeekToNextEv(%class.Archive*) local_unnamed_addr #2

declare void @_Z4itoalPwm(i64, i32*, i64) local_unnamed_addr #2

declare i32 @_Z14ToPercentUnlimll(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7ArchiveD1Ev(%class.Archive*) unnamed_addr #3

declare void @_Z8wcsncpyzPwPKwm(i32*, i32*, i64) local_unnamed_addr #2

declare void @_ZN7RarTime7GetTextEPwmb(%class.RarTime*, i32*, i64, i1 zeroext) local_unnamed_addr #2

declare void @_Z17GetStreamNameNTFSR7ArchivePwm(%class.Archive* dereferenceable(65336), i32*, i64) local_unnamed_addr #2

declare void @_Z8strncpyzPcPKcm(i8*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_Z10CharToWidePKcPwm(i8*, i32*, i64) local_unnamed_addr #2

declare void @_Z8BinToHexPKhmPcPwm(i8*, i64, i8*, i32*, i64) local_unnamed_addr #2

declare i32 @_Z20ParseVersionFileNamePwb(i32*, i1 zeroext) local_unnamed_addr #2

declare i32* @_Z7GetWidePKc(i8*) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @wcscmp(i32*, i32*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
