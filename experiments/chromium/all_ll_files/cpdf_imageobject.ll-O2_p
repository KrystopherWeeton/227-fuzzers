; ModuleID = '../../third_party/pdfium/core/fpdfapi/page/cpdf_imageobject.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/page/cpdf_imageobject.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFX_FloatRect = type { float, float, float, float }
%class.CPDF_ImageObject = type { %class.CPDF_PageObject, %class.CFX_Matrix, %"class.fxcrt::RetainPtr.344" }
%class.CPDF_PageObject = type { %class.CPDF_GraphicStates, %class.CFX_FloatRect, %class.CPDF_ContentMarks, i8, i32 }
%class.CPDF_GraphicStates = type { i32 (...)**, %class.CPDF_ClipPath, %class.CFX_GraphState, %class.CPDF_ColorState, %class.CPDF_TextState, %class.CPDF_GeneralState }
%class.CPDF_ClipPath = type { %"class.fxcrt::SharedCopyOnWrite" }
%"class.fxcrt::SharedCopyOnWrite" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.CPDF_ClipPath::PathData"* }
%"class.CPDF_ClipPath::PathData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector", %"class.std::__1::vector.3" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.0" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::unique_ptr.5" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::unique_ptr.5"* }
%class.CFX_GraphState = type { %"class.fxcrt::SharedCopyOnWrite.12" }
%"class.fxcrt::SharedCopyOnWrite.12" = type { %"class.fxcrt::RetainPtr.13" }
%"class.fxcrt::RetainPtr.13" = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %class.CFX_RetainableGraphStateData* }
%class.CFX_RetainableGraphStateData = type { %"class.fxcrt::Retainable", %class.CFX_GraphStateData }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.17" }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { float*, float*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { float* }
%class.CPDF_ColorState = type { %"class.fxcrt::SharedCopyOnWrite.26" }
%"class.fxcrt::SharedCopyOnWrite.26" = type { %"class.fxcrt::RetainPtr.27" }
%"class.fxcrt::RetainPtr.27" = type { %"class.std::__1::unique_ptr.28" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.CPDF_ColorState::ColorData"* }
%"class.CPDF_ColorState::ColorData" = type { %"class.fxcrt::Retainable", i32, i32, %class.CPDF_Color, %class.CPDF_Color }
%class.CPDF_Color = type { %"class.std::__1::vector.17", %"class.std::__1::unique_ptr.31", %"class.fxcrt::RetainPtr.202" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %class.PatternValue* }
%class.PatternValue = type { %"class.fxcrt::RetainPtr.34", %"struct.std::__1::array" }
%"class.fxcrt::RetainPtr.34" = type { %"class.std::__1::unique_ptr.35" }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.CPDF_Pattern* }
%class.CPDF_Pattern = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr", %"class.fxcrt::RetainPtr.191", %class.CFX_Matrix, %class.CFX_Matrix }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { i64 }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%class.CPDF_Document = type { %"class.CPDF_Parser::ParsedObjectsHolder", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.61", %"class.fxcrt::RetainPtr.78", %"class.fxcrt::RetainPtr.78", %"class.std::__1::vector.145", i8, i8, i32, i32, %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.171", %"class.std::__1::vector.177", %"class.CPDF_Document::StockFontClearer", %"class.std::__1::unique_ptr.185" }
%"class.CPDF_Parser::ParsedObjectsHolder" = type { %class.CPDF_IndirectObjectHolder }
%class.CPDF_IndirectObjectHolder = type { i32 (...)**, i32, %"class.std::__1::map", %"class.fxcrt::WeakPtr" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.46" }
%"class.std::__1::__tree.46" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.55" }
%"class.fxcrt::RetainPtr.55" = type { %"class.std::__1::unique_ptr.56" }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.443" }
%"class.std::__1::unique_ptr.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.446", %"class.std::__1::__compressed_pair.454", %"class.std::__1::__compressed_pair.459", %"class.std::__1::__compressed_pair.461", [4 x i8] }>
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448", %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { float }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %class.CPDF_Parser* }
%class.CPDF_Parser = type <{ %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.68", %"class.fxcrt::UnownedPtr.74", i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.75", i64, %"class.fxcrt::RetainPtr.107", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.119", %"class.std::__1::map.125", %"class.std::__1::set.134", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %class.CPDF_SyntaxParser* }
%class.CPDF_SyntaxParser = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.fxcrt::UnownedPtr.74" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %class.CPDF_CrossRefTable* }
%class.CPDF_CrossRefTable = type { %"class.fxcrt::RetainPtr.78", %"class.std::__1::map.95" }
%"class.std::__1::map.95" = type { %"class.std::__1::__tree.96" }
%"class.std::__1::__tree.96" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.97", %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.fxcrt::RetainPtr.107" = type { %"class.std::__1::unique_ptr.108" }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %class.CPDF_SecurityHandler* }
%class.CPDF_SecurityHandler = type opaque
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.113" }
%"class.fxcrt::RetainPtr.113" = type { %"class.std::__1::unique_ptr.114" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %class.CPDF_LinearizedHeader* }
%class.CPDF_LinearizedHeader = type opaque
%"class.std::__1::map.125" = type { %"class.std::__1::__tree.126" }
%"class.std::__1::__tree.126" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.127", %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::set.134" = type { %"class.std::__1::__tree.135" }
%"class.std::__1::__tree.135" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.136", %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.fxcrt::RetainPtr.78" = type { %"class.std::__1::unique_ptr.79" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map.82" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.std::__1::map.82" = type { %"class.std::__1::__tree.83" }
%"class.std::__1::__tree.83" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::vector.145" = type { %"class.std::__1::__vector_base.146" }
%"class.std::__1::__vector_base.146" = type { %"struct.std::__1::pair.147"*, %"struct.std::__1::pair.147"*, %"class.std::__1::__compressed_pair.148" }
%"struct.std::__1::pair.147" = type opaque
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.std::__1::pair.147"* }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.CPDF_Document::RenderDataIface"* }
%"class.CPDF_Document::RenderDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.CPDF_Document::PageDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %class.JBig2_DocumentContext* }
%class.JBig2_DocumentContext = type opaque
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.CPDF_Document::LinkListIface"* }
%"class.CPDF_Document::LinkListIface" = type { i32 (...)** }
%"class.std::__1::vector.177" = type { %"class.std::__1::__vector_base.178" }
%"class.std::__1::__vector_base.178" = type { i32*, i32*, %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { i32* }
%"class.CPDF_Document::StockFontClearer" = type { %"class.fxcrt::UnownedPtr.184" }
%"class.fxcrt::UnownedPtr.184" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.CPDF_Document::Extension"* }
%"class.CPDF_Document::Extension" = type { i32 (...)** }
%"class.fxcrt::RetainPtr.191" = type { %"class.std::__1::unique_ptr.192" }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %class.CPDF_Object* }
%"struct.std::__1::array" = type { [16 x float] }
%"class.fxcrt::RetainPtr.202" = type { %"class.std::__1::unique_ptr.203" }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %class.CPDF_ColorSpace* }
%class.CPDF_ColorSpace = type <{ %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.206", %"class.fxcrt::RetainPtr.207", i32, i32, i32, [4 x i8] }>
%"class.fxcrt::UnownedPtr.206" = type { %class.CPDF_Document* }
%"class.fxcrt::RetainPtr.207" = type { %"class.std::__1::unique_ptr.208" }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %class.CPDF_Array* }
%class.CPDF_Array = type opaque
%class.CPDF_TextState = type { %"class.fxcrt::SharedCopyOnWrite.217" }
%"class.fxcrt::SharedCopyOnWrite.217" = type { %"class.fxcrt::RetainPtr.218" }
%"class.fxcrt::RetainPtr.218" = type { %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.CPDF_TextState::TextData"* }
%"class.CPDF_TextState::TextData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::RetainPtr.222", %"class.fxcrt::UnownedPtr.206", float, float, float, i32, [4 x float], [4 x float] }
%"class.fxcrt::RetainPtr.222" = type { %"class.std::__1::unique_ptr.223" }
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %class.CPDF_Font* }
%class.CPDF_Font = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr", %class.CFX_Font, %"class.std::__1::vector.275", %"class.fxcrt::RetainPtr.283", %"class.fxcrt::RetainPtr.78", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.301", i8, i32, i32, i32, i32, i32, %struct.FX_RECT }
%class.CFX_Font = type <{ %"class.fxcrt::RetainPtr.226", %"class.std::__1::unique_ptr.232", %"class.fxcrt::RetainPtr.238", %"class.fxcrt::RetainPtr.254", %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.266", %"class.std::__1::vector.270", %"class.pdfium::span", i8, i8, [6 x i8] }>
%"class.fxcrt::RetainPtr.226" = type { %"class.std::__1::unique_ptr.227" }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type { %class.IFX_StreamWithSize, %"class.fxcrt::Retainable" }
%class.IFX_StreamWithSize = type { i32 (...)** }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %struct.FT_StreamRec_* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%"class.fxcrt::RetainPtr.238" = type { %"class.std::__1::unique_ptr.239" }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %class.CFX_Face* }
%class.CFX_Face = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.242", %"class.fxcrt::RetainPtr.246" }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %struct.FT_FaceRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type opaque
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type opaque
%struct.FT_Slot_InternalRec_ = type opaque
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type opaque
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type opaque
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type opaque
%"class.fxcrt::RetainPtr.246" = type { %"class.std::__1::unique_ptr.247" }
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.fxcrt::Retainable"* }
%"class.fxcrt::RetainPtr.254" = type { %"class.std::__1::unique_ptr.255" }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %class.CFX_GlyphCache* }
%class.CFX_GlyphCache = type opaque
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %class.CFX_SubstFont* }
%class.CFX_SubstFont = type opaque
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { i8* }
%"class.std::__1::vector.270" = type { %"class.std::__1::__vector_base.271" }
%"class.std::__1::__vector_base.271" = type { i8*, i8*, %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.274", i64 }
%"class.fxcrt::UnownedPtr.274" = type { i8* }
%"class.std::__1::vector.275" = type { %"class.std::__1::__vector_base.276" }
%"class.std::__1::__vector_base.276" = type { %"class.std::__1::unique_ptr.277"*, %"class.std::__1::unique_ptr.277"*, %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::unique_ptr.277" = type opaque
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.std::__1::unique_ptr.277"* }
%"class.fxcrt::RetainPtr.283" = type { %"class.std::__1::unique_ptr.284" }
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %class.CPDF_StreamAcc* }
%class.CPDF_StreamAcc = type { %"class.fxcrt::Retainable", %"class.fxcrt::MaybeOwned", i32, %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.287", %"class.fxcrt::RetainPtr.293" }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.266", %"class.fxcrt::UnownedPtr.274" }
%"class.fxcrt::RetainPtr.287" = type { %"class.std::__1::unique_ptr.288" }
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %class.CPDF_Dictionary* }
%"class.fxcrt::RetainPtr.293" = type { %"class.std::__1::unique_ptr.294" }
%"class.std::__1::unique_ptr.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %class.CPDF_Stream* }
%class.CPDF_Stream = type { %class.CPDF_Object, i8, i32, %"class.fxcrt::RetainPtr.78", %"class.std::__1::unique_ptr.266", %"class.fxcrt::RetainPtr.226" }
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %class.CPDF_ToUnicodeMap* }
%class.CPDF_ToUnicodeMap = type opaque
%struct.FX_RECT = type { i32, i32, i32, i32 }
%class.CPDF_GeneralState = type { %"class.fxcrt::SharedCopyOnWrite.311" }
%"class.fxcrt::SharedCopyOnWrite.311" = type { %"class.fxcrt::RetainPtr.312" }
%"class.fxcrt::RetainPtr.312" = type { %"class.std::__1::unique_ptr.313" }
%"class.std::__1::unique_ptr.313" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.CPDF_GeneralState::StateData"* }
%"class.CPDF_GeneralState::StateData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::ByteString", i32, %"class.fxcrt::RetainPtr.191", %class.CFX_Matrix, float, float, %"class.fxcrt::RetainPtr.316", %"class.fxcrt::RetainPtr.322", %class.CFX_Matrix, i32, i8, i8, i8, i8, i8, i32, %"class.fxcrt::RetainPtr.316", %"class.fxcrt::RetainPtr.316", %"class.fxcrt::RetainPtr.316", float, float }
%"class.fxcrt::RetainPtr.322" = type { %"class.std::__1::unique_ptr.323" }
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %class.CPDF_TransferFunc* }
%class.CPDF_TransferFunc = type opaque
%"class.fxcrt::RetainPtr.316" = type { %"class.std::__1::unique_ptr.317" }
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %class.CPDF_Object* }
%class.CPDF_ContentMarks = type { %"class.fxcrt::RetainPtr.330" }
%"class.fxcrt::RetainPtr.330" = type { %"class.std::__1::unique_ptr.331" }
%"class.std::__1::unique_ptr.331" = type { %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"class.CPDF_ContentMarks::MarkData"* }
%"class.CPDF_ContentMarks::MarkData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector.334" }
%"class.std::__1::vector.334" = type { %"class.std::__1::__vector_base.335" }
%"class.std::__1::__vector_base.335" = type { %"class.fxcrt::RetainPtr.336"*, %"class.fxcrt::RetainPtr.336"*, %"class.std::__1::__compressed_pair.337" }
%"class.fxcrt::RetainPtr.336" = type opaque
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.fxcrt::RetainPtr.336"* }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%"class.fxcrt::RetainPtr.344" = type { %"class.std::__1::unique_ptr.345" }
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %class.CPDF_Image* }
%class.CPDF_Image = type { %"class.fxcrt::Retainable", i32, i32, i32, i8, i8, i8, %"class.fxcrt::UnownedPtr", %"class.fxcrt::RetainPtr.348", %"class.fxcrt::RetainPtr.348", %"class.fxcrt::RetainPtr.366", %"class.fxcrt::RetainPtr.287" }
%"class.fxcrt::RetainPtr.348" = type { %"class.std::__1::unique_ptr.349" }
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %class.CFX_DIBBase* }
%class.CFX_DIBBase = type { %"class.fxcrt::Retainable", i16, i32, i32, i32, %"class.fxcrt::RetainPtr.352", %"class.std::__1::vector.358" }
%"class.fxcrt::RetainPtr.352" = type { %"class.std::__1::unique_ptr.353" }
%"class.std::__1::unique_ptr.353" = type { %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type { %class.CFX_DIBBase, %"class.fxcrt::MaybeOwned" }
%"class.std::__1::vector.358" = type { %"class.std::__1::__vector_base.359" }
%"class.std::__1::__vector_base.359" = type { i32*, i32*, %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"class.fxcrt::RetainPtr.366" = type { %"class.std::__1::unique_ptr.367" }
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %class.CPDF_Stream* }
%class.CPDF_DocPageData = type { %"class.CPDF_Document::PageDataIface", %"class.CPDF_Font::FormFactoryIface", i8, %"class.std::__1::map.374", %"class.std::__1::map.383", %"class.std::__1::map.394", %"class.std::__1::map.405", %"class.std::__1::map.414", %"class.std::__1::map.423", %"class.std::__1::map.432" }
%"class.CPDF_Font::FormFactoryIface" = type { i32 (...)** }
%"class.std::__1::map.374" = type { %"class.std::__1::__tree.375" }
%"class.std::__1::__tree.375" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.376", %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::map.383" = type { %"class.std::__1::__tree.384" }
%"class.std::__1::__tree.384" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::map.394" = type { %"class.std::__1::__tree.395" }
%"class.std::__1::__tree.395" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.396", %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::map.405" = type { %"class.std::__1::__tree.406" }
%"class.std::__1::__tree.406" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.407", %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::map.414" = type { %"class.std::__1::__tree.415" }
%"class.std::__1::__tree.415" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.416", %"class.std::__1::__compressed_pair.420" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::map.423" = type { %"class.std::__1::__tree.424" }
%"class.std::__1::__tree.424" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.425", %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::map.432" = type { %"class.std::__1::__tree.433" }
%"class.std::__1::__tree.433" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.434", %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%class.CPDF_TextObject = type opaque
%class.CPDF_PathObject = type opaque
%class.CPDF_ShadingObject = type opaque
%class.CPDF_FormObject = type opaque

@_ZTV16CPDF_ImageObject = hidden unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_ImageObject*)* @_ZN16CPDF_ImageObjectD2Ev to i8*), i8* bitcast (void (%class.CPDF_ImageObject*)* @_ZN16CPDF_ImageObjectD0Ev to i8*), i8* bitcast (i32 (%class.CPDF_ImageObject*)* @_ZNK16CPDF_ImageObject7GetTypeEv to i8*), i8* bitcast (void (%class.CPDF_ImageObject*, %class.CFX_Matrix*)* @_ZN16CPDF_ImageObject9TransformERK10CFX_Matrix to i8*), i8* bitcast (i1 (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject6IsTextEv to i8*), i8* bitcast (i1 (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject6IsPathEv to i8*), i8* bitcast (i1 (%class.CPDF_ImageObject*)* @_ZNK16CPDF_ImageObject7IsImageEv to i8*), i8* bitcast (i1 (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject9IsShadingEv to i8*), i8* bitcast (i1 (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject6IsFormEv to i8*), i8* bitcast (%class.CPDF_TextObject* (%class.CPDF_PageObject*)* @_ZN15CPDF_PageObject6AsTextEv to i8*), i8* bitcast (%class.CPDF_TextObject* (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject6AsTextEv to i8*), i8* bitcast (%class.CPDF_PathObject* (%class.CPDF_PageObject*)* @_ZN15CPDF_PageObject6AsPathEv to i8*), i8* bitcast (%class.CPDF_PathObject* (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject6AsPathEv to i8*), i8* bitcast (%class.CPDF_ImageObject* (%class.CPDF_ImageObject*)* @_ZN16CPDF_ImageObject7AsImageEv to i8*), i8* bitcast (%class.CPDF_ImageObject* (%class.CPDF_ImageObject*)* @_ZNK16CPDF_ImageObject7AsImageEv to i8*), i8* bitcast (%class.CPDF_ShadingObject* (%class.CPDF_PageObject*)* @_ZN15CPDF_PageObject9AsShadingEv to i8*), i8* bitcast (%class.CPDF_ShadingObject* (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject9AsShadingEv to i8*), i8* bitcast (%class.CPDF_FormObject* (%class.CPDF_PageObject*)* @_ZN15CPDF_PageObject6AsFormEv to i8*), i8* bitcast (%class.CPDF_FormObject* (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject6AsFormEv to i8*)] }, align 8
@_ZZN16CPDF_ImageObject15CalcBoundingBoxEvE5kRect = internal constant %class.CFX_FloatRect { float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+00 }, align 4

@_ZN16CPDF_ImageObjectC1Ei = hidden unnamed_addr alias void (%class.CPDF_ImageObject*, i32), void (%class.CPDF_ImageObject*, i32)* @_ZN16CPDF_ImageObjectC2Ei
@_ZN16CPDF_ImageObjectC1Ev = hidden unnamed_addr alias void (%class.CPDF_ImageObject*), void (%class.CPDF_ImageObject*)* @_ZN16CPDF_ImageObjectC2Ev
@_ZN16CPDF_ImageObjectD1Ev = hidden unnamed_addr alias void (%class.CPDF_ImageObject*), void (%class.CPDF_ImageObject*)* @_ZN16CPDF_ImageObjectD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CPDF_ImageObjectC2Ei(%class.CPDF_ImageObject*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %0, i64 0, i32 0
  tail call void @_ZN15CPDF_PageObjectC2Ei(%class.CPDF_PageObject* %3, i32 %1) #7
  %4 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV16CPDF_ImageObject, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %0, i64 0, i32 1, i32 0
  %6 = bitcast float* %5 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %6, align 4
  %7 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %0, i64 0, i32 1, i32 4
  %8 = bitcast float* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 16, i1 false)
  ret void
}

declare void @_ZN15CPDF_PageObjectC2Ei(%class.CPDF_PageObject*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CPDF_ImageObjectC2Ev(%class.CPDF_ImageObject*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %0, i64 0, i32 0
  tail call void @_ZN15CPDF_PageObjectC2Ei(%class.CPDF_PageObject* %2, i32 -1) #7
  %3 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV16CPDF_ImageObject, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %0, i64 0, i32 1, i32 0
  %5 = bitcast float* %4 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %5, align 4
  %6 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %0, i64 0, i32 1, i32 4
  %7 = bitcast float* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 16, i1 false) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CPDF_ImageObjectD2Ev(%class.CPDF_ImageObject*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV16CPDF_ImageObject, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Image*, %class.CPDF_Image** %3, align 8
  %5 = icmp eq %class.CPDF_Image* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  store %class.CPDF_Image* null, %class.CPDF_Image** %3, align 8
  br label %51

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %4, i64 0, i32 7, i32 0
  %9 = load %class.CPDF_Document*, %class.CPDF_Document** %8, align 8
  %10 = tail call %class.CPDF_DocPageData* @_ZN16CPDF_DocPageData12FromDocumentEPK13CPDF_Document(%class.CPDF_Document* %9) #7
  %11 = icmp eq %class.CPDF_DocPageData* %10, null
  br i1 %11, label %35, label %12

12:                                               ; preds = %7
  %13 = load %class.CPDF_Image*, %class.CPDF_Image** %3, align 8
  %14 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %13, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %15 = load %class.CPDF_Stream*, %class.CPDF_Stream** %14, align 8
  %16 = icmp eq %class.CPDF_Stream* %15, null
  br i1 %16, label %37, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %15, i64 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %35, label %21

21:                                               ; preds = %17
  store %class.CPDF_Image* null, %class.CPDF_Image** %3, align 8
  %22 = icmp eq %class.CPDF_Image* %13, null
  br i1 %22, label %34, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %13, i64 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = add nsw i64 %25, -1
  store i64 %26, i64* %24, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %34

28:                                               ; preds = %23
  %29 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %13, i64 0, i32 0
  %30 = bitcast %class.CPDF_Image* %13 to void (%"class.fxcrt::Retainable"*)***
  %31 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %31, i64 1
  %33 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %32, align 8
  tail call void %33(%"class.fxcrt::Retainable"* nonnull %29) #7
  br label %34

34:                                               ; preds = %28, %23, %21
  tail call void @_ZN16CPDF_DocPageData15MaybePurgeImageEj(%class.CPDF_DocPageData* nonnull %10, i32 %19) #7
  br label %35

35:                                               ; preds = %34, %17, %7
  %36 = load %class.CPDF_Image*, %class.CPDF_Image** %3, align 8
  br label %37

37:                                               ; preds = %35, %12
  %38 = phi %class.CPDF_Image* [ %36, %35 ], [ %13, %12 ]
  store %class.CPDF_Image* null, %class.CPDF_Image** %3, align 8
  %39 = icmp eq %class.CPDF_Image* %38, null
  br i1 %39, label %51, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %38, i64 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = add nsw i64 %42, -1
  store i64 %43, i64* %41, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %40
  %46 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %38, i64 0, i32 0
  %47 = bitcast %class.CPDF_Image* %38 to void (%"class.fxcrt::Retainable"*)***
  %48 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %48, i64 1
  %50 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %49, align 8
  tail call void %50(%"class.fxcrt::Retainable"* nonnull %46) #7
  br label %51

51:                                               ; preds = %6, %37, %40, %45
  %52 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %0, i64 0, i32 0
  tail call void @_ZN15CPDF_PageObjectD2Ev(%class.CPDF_PageObject* %52) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CPDF_ImageObject15MaybePurgeCacheEv(%class.CPDF_ImageObject* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CPDF_Image*, %class.CPDF_Image** %2, align 8
  %4 = icmp eq %class.CPDF_Image* %3, null
  br i1 %4, label %33, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %3, i64 0, i32 7, i32 0
  %7 = load %class.CPDF_Document*, %class.CPDF_Document** %6, align 8
  %8 = tail call %class.CPDF_DocPageData* @_ZN16CPDF_DocPageData12FromDocumentEPK13CPDF_Document(%class.CPDF_Document* %7) #7
  %9 = icmp eq %class.CPDF_DocPageData* %8, null
  br i1 %9, label %33, label %10

10:                                               ; preds = %5
  %11 = load %class.CPDF_Image*, %class.CPDF_Image** %2, align 8
  %12 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %11, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %13 = load %class.CPDF_Stream*, %class.CPDF_Stream** %12, align 8
  %14 = icmp eq %class.CPDF_Stream* %13, null
  br i1 %14, label %33, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %13, i64 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %33, label %19

19:                                               ; preds = %15
  store %class.CPDF_Image* null, %class.CPDF_Image** %2, align 8
  %20 = icmp eq %class.CPDF_Image* %11, null
  br i1 %20, label %32, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %11, i64 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = add nsw i64 %23, -1
  store i64 %24, i64* %22, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %32

26:                                               ; preds = %21
  %27 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %11, i64 0, i32 0
  %28 = bitcast %class.CPDF_Image* %11 to void (%"class.fxcrt::Retainable"*)***
  %29 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %29, i64 1
  %31 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %30, align 8
  tail call void %31(%"class.fxcrt::Retainable"* nonnull %27) #7
  br label %32

32:                                               ; preds = %19, %21, %26
  tail call void @_ZN16CPDF_DocPageData15MaybePurgeImageEj(%class.CPDF_DocPageData* nonnull %8, i32 %17) #7
  br label %33

33:                                               ; preds = %1, %5, %32, %15, %10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN15CPDF_PageObjectD2Ev(%class.CPDF_PageObject*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CPDF_ImageObjectD0Ev(%class.CPDF_ImageObject*) unnamed_addr #0 align 2 {
  tail call void @_ZN16CPDF_ImageObjectD2Ev(%class.CPDF_ImageObject* %0) #7
  %2 = bitcast %class.CPDF_ImageObject* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK16CPDF_ImageObject7GetTypeEv(%class.CPDF_ImageObject* nocapture readnone) unnamed_addr #4 align 2 {
  ret i32 3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CPDF_ImageObject9TransformERK10CFX_Matrix(%class.CPDF_ImageObject*, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %3, i64 0, i32 0
  %5 = load float, float* %4, align 4, !noalias !2
  %6 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %0, i64 0, i32 1, i32 1
  %7 = load float, float* %6, align 4, !noalias !2
  %8 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %1, i64 0, i32 2
  %9 = bitcast %class.CFX_Matrix* %1 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4, !noalias !2
  %11 = shufflevector <2 x float> %10, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %12 = bitcast float* %8 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 4, !noalias !2
  %14 = shufflevector <2 x float> %13, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %15 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %0, i64 0, i32 1, i32 2
  %16 = load float, float* %15, align 4, !noalias !2
  %17 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %0, i64 0, i32 1, i32 3
  %18 = load float, float* %17, align 4, !noalias !2
  %19 = insertelement <4 x float> undef, float %5, i32 0
  %20 = shufflevector <4 x float> %19, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %21 = extractelement <2 x float> %10, i32 0
  %22 = extractelement <2 x float> %10, i32 1
  %23 = shufflevector <4 x float> %20, <4 x float> %11, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %24 = insertelement <4 x float> undef, float %21, i32 0
  %25 = insertelement <4 x float> %24, float %22, i32 1
  %26 = insertelement <4 x float> %25, float %16, i32 2
  %27 = insertelement <4 x float> %26, float %16, i32 3
  %28 = fmul <4 x float> %23, %27
  %29 = insertelement <4 x float> undef, float %7, i32 0
  %30 = shufflevector <4 x float> %29, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %31 = extractelement <2 x float> %13, i32 0
  %32 = extractelement <2 x float> %13, i32 1
  %33 = shufflevector <4 x float> %30, <4 x float> %14, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %34 = insertelement <4 x float> undef, float %31, i32 0
  %35 = insertelement <4 x float> %34, float %32, i32 1
  %36 = insertelement <4 x float> %35, float %18, i32 2
  %37 = insertelement <4 x float> %36, float %18, i32 3
  %38 = fmul <4 x float> %33, %37
  %39 = fadd <4 x float> %28, %38
  %40 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %0, i64 0, i32 1, i32 4
  %41 = load float, float* %40, align 4, !noalias !2
  %42 = fmul float %21, %41
  %43 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %0, i64 0, i32 1, i32 5
  %44 = load float, float* %43, align 4, !noalias !2
  %45 = fmul float %31, %44
  %46 = fadd float %42, %45
  %47 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %1, i64 0, i32 4
  %48 = load float, float* %47, align 4, !noalias !2
  %49 = fadd float %48, %46
  %50 = fmul float %22, %41
  %51 = fmul float %32, %44
  %52 = fadd float %50, %51
  %53 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %1, i64 0, i32 5
  %54 = load float, float* %53, align 4, !noalias !2
  %55 = fadd float %52, %54
  %56 = bitcast %class.CFX_Matrix* %3 to <4 x float>*
  store <4 x float> %39, <4 x float>* %56, align 4
  store float %49, float* %40, align 4
  store float %55, float* %43, align 4
  %57 = tail call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix* %3, %class.CFX_FloatRect* nonnull dereferenceable(16) @_ZZN16CPDF_ImageObject15CalcBoundingBoxEvE5kRect) #7
  %58 = extractvalue { <2 x float>, <2 x float> } %57, 0
  %59 = extractvalue { <2 x float>, <2 x float> } %57, 1
  %60 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %0, i64 0, i32 0, i32 1
  %61 = bitcast %class.CFX_FloatRect* %60 to <2 x float>*
  store <2 x float> %58, <2 x float>* %61, align 8
  %62 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %0, i64 0, i32 0, i32 1, i32 2
  %63 = bitcast float* %62 to <2 x float>*
  store <2 x float> %59, <2 x float>* %63, align 8
  %64 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %0, i64 0, i32 0, i32 3
  store i8 1, i8* %64, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CPDF_ImageObject15CalcBoundingBoxEv(%class.CPDF_ImageObject*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %0, i64 0, i32 1
  %3 = tail call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix* %2, %class.CFX_FloatRect* nonnull dereferenceable(16) @_ZZN16CPDF_ImageObject15CalcBoundingBoxEvE5kRect) #7
  %4 = extractvalue { <2 x float>, <2 x float> } %3, 0
  %5 = extractvalue { <2 x float>, <2 x float> } %3, 1
  %6 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %0, i64 0, i32 0, i32 1
  %7 = bitcast %class.CFX_FloatRect* %6 to <2 x float>*
  store <2 x float> %4, <2 x float>* %7, align 8
  %8 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %0, i64 0, i32 0, i32 1, i32 2
  %9 = bitcast float* %8 to <2 x float>*
  store <2 x float> %5, <2 x float>* %9, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK16CPDF_ImageObject7IsImageEv(%class.CPDF_ImageObject* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %class.CPDF_ImageObject* @_ZN16CPDF_ImageObject7AsImageEv(%class.CPDF_ImageObject* readnone returned) unnamed_addr #4 align 2 {
  ret %class.CPDF_ImageObject* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %class.CPDF_ImageObject* @_ZNK16CPDF_ImageObject7AsImageEv(%class.CPDF_ImageObject* readnone returned) unnamed_addr #4 align 2 {
  ret %class.CPDF_ImageObject* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CPDF_ImageObject8SetImageERKN5fxcrt9RetainPtrI10CPDF_ImageEE(%class.CPDF_ImageObject* nocapture, %"class.fxcrt::RetainPtr.344"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Image*, %class.CPDF_Image** %3, align 8
  %5 = icmp eq %class.CPDF_Image* %4, null
  br i1 %5, label %34, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %4, i64 0, i32 7, i32 0
  %8 = load %class.CPDF_Document*, %class.CPDF_Document** %7, align 8
  %9 = tail call %class.CPDF_DocPageData* @_ZN16CPDF_DocPageData12FromDocumentEPK13CPDF_Document(%class.CPDF_Document* %8) #7
  %10 = icmp eq %class.CPDF_DocPageData* %9, null
  br i1 %10, label %34, label %11

11:                                               ; preds = %6
  %12 = load %class.CPDF_Image*, %class.CPDF_Image** %3, align 8
  %13 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %12, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %14 = load %class.CPDF_Stream*, %class.CPDF_Stream** %13, align 8
  %15 = icmp eq %class.CPDF_Stream* %14, null
  br i1 %15, label %34, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %14, i64 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  store %class.CPDF_Image* null, %class.CPDF_Image** %3, align 8
  %21 = icmp eq %class.CPDF_Image* %12, null
  br i1 %21, label %33, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %12, i64 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = add nsw i64 %24, -1
  store i64 %25, i64* %23, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %33

27:                                               ; preds = %22
  %28 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %12, i64 0, i32 0
  %29 = bitcast %class.CPDF_Image* %12 to void (%"class.fxcrt::Retainable"*)***
  %30 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %30, i64 1
  %32 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %31, align 8
  tail call void %32(%"class.fxcrt::Retainable"* nonnull %28) #7
  br label %33

33:                                               ; preds = %27, %22, %20
  tail call void @_ZN16CPDF_DocPageData15MaybePurgeImageEj(%class.CPDF_DocPageData* nonnull %9, i32 %18) #7
  br label %34

34:                                               ; preds = %2, %6, %11, %16, %33
  %35 = load %class.CPDF_Image*, %class.CPDF_Image** %3, align 8
  %36 = getelementptr inbounds %"class.fxcrt::RetainPtr.344", %"class.fxcrt::RetainPtr.344"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %class.CPDF_Image*, %class.CPDF_Image** %36, align 8
  %38 = icmp eq %class.CPDF_Image* %35, %37
  br i1 %38, label %60, label %39

39:                                               ; preds = %34
  %40 = icmp eq %class.CPDF_Image* %37, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %37, i64 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = add nsw i64 %43, 1
  store i64 %44, i64* %42, align 8
  %45 = load %class.CPDF_Image*, %class.CPDF_Image** %3, align 8
  br label %46

46:                                               ; preds = %41, %39
  %47 = phi %class.CPDF_Image* [ %45, %41 ], [ %35, %39 ]
  store %class.CPDF_Image* %37, %class.CPDF_Image** %3, align 8
  %48 = icmp eq %class.CPDF_Image* %47, null
  br i1 %48, label %60, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %47, i64 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = add nsw i64 %51, -1
  store i64 %52, i64* %50, align 8
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %60

54:                                               ; preds = %49
  %55 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %47, i64 0, i32 0
  %56 = bitcast %class.CPDF_Image* %47 to void (%"class.fxcrt::Retainable"*)***
  %57 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %57, i64 1
  %59 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %58, align 8
  tail call void %59(%"class.fxcrt::Retainable"* nonnull %55) #7
  br label %60

60:                                               ; preds = %34, %46, %49, %54
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK16CPDF_ImageObject8GetImageEv(%"class.fxcrt::RetainPtr.344"* noalias nocapture sret, %class.CPDF_ImageObject* nocapture readonly) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Image*, %class.CPDF_Image** %3, align 8
  %5 = ptrtoint %class.CPDF_Image* %4 to i64
  %6 = bitcast %"class.fxcrt::RetainPtr.344"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = icmp eq %class.CPDF_Image* %4, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %4, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add nsw i64 %10, 1
  store i64 %11, i64* %9, align 8
  br label %12

12:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK16CPDF_ImageObject20GetIndependentBitmapEv(%"class.fxcrt::RetainPtr.352"* noalias sret, %class.CPDF_ImageObject* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::RetainPtr.348", align 8
  %4 = bitcast %"class.fxcrt::RetainPtr.348"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7
  %5 = getelementptr inbounds %"class.fxcrt::RetainPtr.348", %"class.fxcrt::RetainPtr.348"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_DIBBase* inttoptr (i64 -6148914691236517206 to %class.CFX_DIBBase*), %class.CFX_DIBBase** %5, align 8
  %6 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %7 = load %class.CPDF_Image*, %class.CPDF_Image** %6, align 8, !noalias !5
  %8 = icmp eq %class.CPDF_Image* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  call void @_ZNK10CPDF_Image11LoadDIBBaseEv(%"class.fxcrt::RetainPtr.348"* nonnull sret %3, %class.CPDF_Image* null) #7
  br label %23

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %7, i64 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8, !noalias !5
  %13 = add nsw i64 %12, 1
  store i64 %13, i64* %11, align 8, !noalias !5
  call void @_ZNK10CPDF_Image11LoadDIBBaseEv(%"class.fxcrt::RetainPtr.348"* nonnull sret %3, %class.CPDF_Image* nonnull %7) #7
  %14 = load i64, i64* %11, align 8
  %15 = add nsw i64 %14, -1
  store i64 %15, i64* %11, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %10
  %18 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %7, i64 0, i32 0
  %19 = bitcast %class.CPDF_Image* %7 to void (%"class.fxcrt::Retainable"*)***
  %20 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %20, i64 1
  %22 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %21, align 8
  call void %22(%"class.fxcrt::Retainable"* nonnull %18) #7
  br label %23

23:                                               ; preds = %9, %10, %17
  %24 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %5, align 8
  %25 = icmp eq %class.CFX_DIBBase* %24, null
  br i1 %25, label %26, label %28

26:                                               ; preds = %23
  %27 = bitcast %"class.fxcrt::RetainPtr.352"* %0 to i64*
  store i64 0, i64* %27, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %5, align 8
  br label %42

28:                                               ; preds = %23
  call void @_ZNK11CFX_DIBBase5CloneEPK7FX_RECT(%"class.fxcrt::RetainPtr.352"* sret %0, %class.CFX_DIBBase* nonnull %24, %struct.FX_RECT* null) #7
  %29 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %5, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %5, align 8
  %30 = icmp eq %class.CFX_DIBBase* %29, null
  br i1 %30, label %42, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %29, i64 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = add nsw i64 %33, -1
  store i64 %34, i64* %32, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %42

36:                                               ; preds = %31
  %37 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %29, i64 0, i32 0
  %38 = bitcast %class.CFX_DIBBase* %29 to void (%"class.fxcrt::Retainable"*)***
  %39 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %39, i64 1
  %41 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %40, align 8
  call void %41(%"class.fxcrt::Retainable"* nonnull %37) #7
  br label %42

42:                                               ; preds = %26, %28, %31, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7
  ret void
}

declare void @_ZNK10CPDF_Image11LoadDIBBaseEv(%"class.fxcrt::RetainPtr.348"* sret, %class.CPDF_Image*) local_unnamed_addr #1

declare void @_ZNK11CFX_DIBBase5CloneEPK7FX_RECT(%"class.fxcrt::RetainPtr.352"* sret, %class.CFX_DIBBase*, %struct.FX_RECT*) local_unnamed_addr #1

declare %class.CPDF_DocPageData* @_ZN16CPDF_DocPageData12FromDocumentEPK13CPDF_Document(%class.CPDF_Document*) local_unnamed_addr #1

declare void @_ZN16CPDF_DocPageData15MaybePurgeImageEj(%class.CPDF_DocPageData*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK15CPDF_PageObject6IsTextEv(%class.CPDF_PageObject*) unnamed_addr #1

declare zeroext i1 @_ZNK15CPDF_PageObject6IsPathEv(%class.CPDF_PageObject*) unnamed_addr #1

declare zeroext i1 @_ZNK15CPDF_PageObject9IsShadingEv(%class.CPDF_PageObject*) unnamed_addr #1

declare zeroext i1 @_ZNK15CPDF_PageObject6IsFormEv(%class.CPDF_PageObject*) unnamed_addr #1

declare %class.CPDF_TextObject* @_ZN15CPDF_PageObject6AsTextEv(%class.CPDF_PageObject*) unnamed_addr #1

declare %class.CPDF_TextObject* @_ZNK15CPDF_PageObject6AsTextEv(%class.CPDF_PageObject*) unnamed_addr #1

declare %class.CPDF_PathObject* @_ZN15CPDF_PageObject6AsPathEv(%class.CPDF_PageObject*) unnamed_addr #1

declare %class.CPDF_PathObject* @_ZNK15CPDF_PageObject6AsPathEv(%class.CPDF_PageObject*) unnamed_addr #1

declare %class.CPDF_ShadingObject* @_ZN15CPDF_PageObject9AsShadingEv(%class.CPDF_PageObject*) unnamed_addr #1

declare %class.CPDF_ShadingObject* @_ZNK15CPDF_PageObject9AsShadingEv(%class.CPDF_PageObject*) unnamed_addr #1

declare %class.CPDF_FormObject* @_ZN15CPDF_PageObject6AsFormEv(%class.CPDF_PageObject*) unnamed_addr #1

declare %class.CPDF_FormObject* @_ZNK15CPDF_PageObject6AsFormEv(%class.CPDF_PageObject*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!4 = distinct !{!4, !"_ZNK10CFX_MatrixmlERKS_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK16CPDF_ImageObject8GetImageEv: argument 0"}
!7 = distinct !{!7, !"_ZNK16CPDF_ImageObject8GetImageEv"}
