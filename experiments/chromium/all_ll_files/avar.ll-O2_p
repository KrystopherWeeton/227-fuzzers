; ModuleID = '../../third_party/ots/src/src/avar.cc'
source_filename = "../../third_party/ots/src/src/avar.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.ots::OpenTypeAVAR" = type { %"class.ots::Table.base", i16, i16, i16, i16, %"class.std::__1::vector" }
%"class.ots::Table.base" = type <{ i32 (...)**, i32, i32, %"struct.ots::Font"*, i8 }>
%"struct.ots::Font" = type { %"struct.ots::FontFile"*, i32, i16, i16, i16, i16, %"class.std::__1::map.15" }
%"struct.ots::FontFile" = type { %"class.ots::OTSContext"*, %"class.std::__1::map", %"class.std::__1::map.4" }
%"class.ots::OTSContext" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::map.4" = type { %"class.std::__1::__tree.5" }
%"class.std::__1::__tree.5" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.15" = type { %"class.std::__1::__tree.16" }
%"class.std::__1::__tree.16" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::vector.24"*, %"class.std::__1::vector.24"*, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"struct.ots::OpenTypeAVAR::AxisValueMap"*, %"struct.ots::OpenTypeAVAR::AxisValueMap"*, %"class.std::__1::__compressed_pair.26" }
%"struct.ots::OpenTypeAVAR::AxisValueMap" = type { i16, i16 }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.ots::OpenTypeAVAR::AxisValueMap"* }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.std::__1::vector.24"* }
%"class.ots::Table" = type <{ i32 (...)**, i32, i32, %"struct.ots::Font"*, i8, [7 x i8] }>
%"class.ots::OpenTypeFVAR" = type <{ %"class.ots::Table.base", i8, i16, i16, i16, i16, i16, i16, i16, i16, [6 x i8], %"class.std::__1::vector.36", %"class.std::__1::vector.43", i8, [7 x i8] }>
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"struct.ots::OpenTypeFVAR::VariationAxisRecord"*, %"struct.ots::OpenTypeFVAR::VariationAxisRecord"*, %"class.std::__1::__compressed_pair.38" }
%"struct.ots::OpenTypeFVAR::VariationAxisRecord" = type { i32, i32, i32, i32, i16, i16 }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* }
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { %"struct.ots::OpenTypeFVAR::InstanceRecord"*, %"struct.ots::OpenTypeFVAR::InstanceRecord"*, %"class.std::__1::__compressed_pair.52" }
%"struct.ots::OpenTypeFVAR::InstanceRecord" = type <{ i16, i16, [4 x i8], %"class.std::__1::vector.45", i16, [6 x i8] }>
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { i32*, i32*, %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { i32* }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.ots::OpenTypeFVAR::InstanceRecord"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.ots::OTSStream" = type <{ i32 (...)**, i32, [4 x i8] }>

$_ZN3ots12OpenTypeAVARD2Ev = comdat any

$_ZN3ots12OpenTypeAVARD0Ev = comdat any

$_ZNSt3__16vectorINS0_IN3ots12OpenTypeAVAR12AxisValueMapENS_9allocatorIS3_EEEENS4_IS6_EEE24__emplace_back_slow_pathIJEEEvDpOT_ = comdat any

@.str = private unnamed_addr constant [28 x i8] c"Failed to read table header\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"Unknown table version\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"Downgrading minor version to 0\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"Expected reserved=0\00", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"Required fvar table is missing\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"Axis count mismatch\00", align 1
@.str.6 = private unnamed_addr constant [34 x i8] c"Failed to read position map count\00", align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"Failed to read axis value map\00", align 1
@.str.8 = private unnamed_addr constant [39 x i8] c"Axis value map coordinate out of range\00", align 1
@.str.9 = private unnamed_addr constant [28 x i8] c"Axis value map out of order\00", align 1
@.str.10 = private unnamed_addr constant [47 x i8] c"A required mapping (for -1, 0 or 1) is missing\00", align 1
@.str.11 = private unnamed_addr constant [22 x i8] c"Failed to write table\00", align 1
@_ZTVN3ots12OpenTypeAVARE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ots::OpenTypeAVAR"*)* @_ZN3ots12OpenTypeAVARD2Ev to i8*), i8* bitcast (void (%"class.ots::OpenTypeAVAR"*)* @_ZN3ots12OpenTypeAVARD0Ev to i8*), i8* bitcast (i1 (%"class.ots::OpenTypeAVAR"*, i8*, i64)* @_ZN3ots12OpenTypeAVAR5ParseEPKhm to i8*), i8* bitcast (i1 (%"class.ots::OpenTypeAVAR"*, %"class.ots::OTSStream"*)* @_ZN3ots12OpenTypeAVAR9SerializeEPNS_9OTSStreamE to i8*), i8* bitcast (i1 (%"class.ots::Table"*)* @_ZN3ots5Table15ShouldSerializeEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeAVAR5ParseEPKhm(%"class.ots::OpenTypeAVAR"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = icmp ult i64 %2, 2
  br i1 %4, label %26, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.ots::OpenTypeAVAR", %"class.ots::OpenTypeAVAR"* %0, i64 0, i32 1
  %7 = bitcast i8* %1 to i16*
  %8 = load i16, i16* %7, align 1
  %9 = tail call i16 @llvm.bswap.i16(i16 %8) #9
  store i16 %9, i16* %6, align 2
  %10 = getelementptr inbounds %"class.ots::OpenTypeAVAR", %"class.ots::OpenTypeAVAR"* %0, i64 0, i32 2
  %11 = icmp ult i64 %2, 4
  br i1 %11, label %26, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds i8, i8* %1, i64 2
  %14 = bitcast i8* %13 to i16*
  %15 = load i16, i16* %14, align 1
  %16 = tail call i16 @llvm.bswap.i16(i16 %15) #9
  store i16 %16, i16* %10, align 2
  %17 = getelementptr inbounds %"class.ots::OpenTypeAVAR", %"class.ots::OpenTypeAVAR"* %0, i64 0, i32 3
  %18 = icmp ult i64 %2, 6
  br i1 %18, label %26, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds i8, i8* %1, i64 4
  %21 = bitcast i8* %20 to i16*
  %22 = load i16, i16* %21, align 1
  %23 = tail call i16 @llvm.bswap.i16(i16 %22) #9
  store i16 %23, i16* %17, align 2
  %24 = getelementptr inbounds %"class.ots::OpenTypeAVAR", %"class.ots::OpenTypeAVAR"* %0, i64 0, i32 4
  %25 = icmp ult i64 %2, 8
  br i1 %25, label %26, label %29

26:                                               ; preds = %19, %12, %5, %3
  %27 = bitcast %"class.ots::OpenTypeAVAR"* %0 to %"class.ots::Table"*
  %28 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %27, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0)) #9
  br label %246

29:                                               ; preds = %19
  %30 = getelementptr inbounds i8, i8* %1, i64 6
  %31 = bitcast i8* %30 to i16*
  %32 = load i16, i16* %31, align 1
  %33 = tail call i16 @llvm.bswap.i16(i16 %32) #9
  store i16 %33, i16* %24, align 2
  %34 = icmp eq i16 %8, 256
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.ots::OpenTypeAVAR"* %0 to %"class.ots::Table"*
  %37 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %36, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0)) #9
  br label %246

38:                                               ; preds = %29
  %39 = icmp eq i16 %15, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %38
  %41 = bitcast %"class.ots::OpenTypeAVAR"* %0 to %"class.ots::Table"*
  %42 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %41, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0)) #9
  store i16 0, i16* %10, align 4
  %43 = load i16, i16* %17, align 2
  br label %44

44:                                               ; preds = %38, %40
  %45 = phi i16 [ %23, %38 ], [ %43, %40 ]
  %46 = icmp eq i16 %45, 0
  %47 = bitcast %"class.ots::OpenTypeAVAR"* %0 to %"class.ots::Table"*
  br i1 %46, label %50, label %48

48:                                               ; preds = %44
  %49 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %47, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0)) #9
  store i16 0, i16* %17, align 2
  br label %50

50:                                               ; preds = %44, %48
  %51 = getelementptr inbounds %"class.ots::OpenTypeAVAR", %"class.ots::OpenTypeAVAR"* %0, i64 0, i32 0, i32 3
  %52 = load %"struct.ots::Font"*, %"struct.ots::Font"** %51, align 8
  %53 = tail call %"class.ots::Table"* @_ZNK3ots4Font13GetTypedTableEj(%"struct.ots::Font"* %52, i32 1719034226) #9
  %54 = icmp eq %"class.ots::Table"* %53, null
  br i1 %54, label %55, label %57

55:                                               ; preds = %50
  %56 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table14DropVariationsEPKcz(%"class.ots::Table"* %47, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i64 0, i64 0)) #9
  br label %246

57:                                               ; preds = %50
  %58 = bitcast %"class.ots::Table"* %53 to %"class.ots::OpenTypeFVAR"*
  %59 = load i16, i16* %24, align 8
  %60 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %58, i64 0, i32 6
  %61 = load i16, i16* %60, align 2
  %62 = icmp eq i16 %59, %61
  br i1 %62, label %63, label %71

63:                                               ; preds = %57
  %64 = icmp eq i16 %59, 0
  br i1 %64, label %246, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.ots::OpenTypeAVAR", %"class.ots::OpenTypeAVAR"* %0, i64 0, i32 5
  %67 = getelementptr inbounds %"class.ots::OpenTypeAVAR", %"class.ots::OpenTypeAVAR"* %0, i64 0, i32 5, i32 0, i32 1
  %68 = getelementptr inbounds %"class.ots::OpenTypeAVAR", %"class.ots::OpenTypeAVAR"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %69 = bitcast %"class.std::__1::vector.24"** %67 to i64*
  %70 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %66, i64 0, i32 0, i32 0
  br label %79

71:                                               ; preds = %57
  %72 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %47, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0)) #9
  br label %246

73:                                               ; preds = %93, %240
  %74 = phi i64 [ %113, %240 ], [ %91, %93 ]
  %75 = add nuw nsw i64 %80, 1
  %76 = load i16, i16* %24, align 8
  %77 = zext i16 %76 to i64
  %78 = icmp ult i64 %75, %77
  br i1 %78, label %79, label %246

79:                                               ; preds = %65, %73
  %80 = phi i64 [ 0, %65 ], [ %75, %73 ]
  %81 = phi i64 [ 8, %65 ], [ %74, %73 ]
  %82 = load %"class.std::__1::vector.24"*, %"class.std::__1::vector.24"** %67, align 8
  %83 = load %"class.std::__1::vector.24"*, %"class.std::__1::vector.24"** %68, align 8
  %84 = icmp ult %"class.std::__1::vector.24"* %82, %83
  br i1 %84, label %85, label %89

85:                                               ; preds = %79
  %86 = bitcast %"class.std::__1::vector.24"* %82 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 24, i1 false) #9
  %87 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %82, i64 1
  %88 = ptrtoint %"class.std::__1::vector.24"* %87 to i64
  store i64 %88, i64* %69, align 8
  br label %90

89:                                               ; preds = %79
  tail call void @_ZNSt3__16vectorINS0_IN3ots12OpenTypeAVAR12AxisValueMapENS_9allocatorIS3_EEEENS4_IS6_EEE24__emplace_back_slow_pathIJEEEvDpOT_(%"class.std::__1::vector"* %66) #9
  br label %90

90:                                               ; preds = %85, %89
  %91 = add i64 %81, 2
  %92 = icmp ugt i64 %91, %2
  br i1 %92, label %100, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds i8, i8* %1, i64 %81
  %95 = bitcast i8* %94 to i16*
  %96 = load i16, i16* %95, align 1
  %97 = tail call i16 @llvm.bswap.i16(i16 %96) #9
  %98 = zext i16 %97 to i64
  %99 = icmp eq i16 %96, 0
  br i1 %99, label %73, label %102

100:                                              ; preds = %90
  %101 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %47, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0)) #9
  br label %246

102:                                              ; preds = %93, %237
  %103 = phi i64 [ %238, %237 ], [ 0, %93 ]
  %104 = phi i32 [ %158, %237 ], [ 0, %93 ]
  %105 = phi i64 [ %113, %237 ], [ %91, %93 ]
  %106 = add i64 %105, 2
  %107 = icmp ugt i64 %106, %2
  br i1 %107, label %115, label %108

108:                                              ; preds = %102
  %109 = getelementptr inbounds i8, i8* %1, i64 %105
  %110 = bitcast i8* %109 to i16*
  %111 = load i16, i16* %110, align 1
  %112 = tail call i16 @llvm.bswap.i16(i16 %111) #9
  %113 = add i64 %105, 4
  %114 = icmp ugt i64 %113, %2
  br i1 %114, label %115, label %117

115:                                              ; preds = %108, %102
  %116 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %47, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i64 0, i64 0)) #9
  br label %246

117:                                              ; preds = %108
  %118 = getelementptr inbounds i8, i8* %1, i64 %106
  %119 = bitcast i8* %118 to i16*
  %120 = load i16, i16* %119, align 1
  %121 = tail call i16 @llvm.bswap.i16(i16 %120) #9
  %122 = add i16 %112, 16384
  %123 = icmp ugt i16 %122, -32768
  %124 = add i16 %121, 16384
  %125 = icmp ugt i16 %124, -32768
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %129

127:                                              ; preds = %117
  %128 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %47, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i64 0, i64 0)) #9
  br label %246

129:                                              ; preds = %117
  %130 = icmp eq i64 %103, 0
  br i1 %130, label %144, label %131

131:                                              ; preds = %129
  %132 = load %"class.std::__1::vector.24"*, %"class.std::__1::vector.24"** %70, align 8
  %133 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %132, i64 %80, i32 0, i32 1
  %134 = load %"struct.ots::OpenTypeAVAR::AxisValueMap"*, %"struct.ots::OpenTypeAVAR::AxisValueMap"** %133, align 8
  %135 = getelementptr inbounds %"struct.ots::OpenTypeAVAR::AxisValueMap", %"struct.ots::OpenTypeAVAR::AxisValueMap"* %134, i64 -1, i32 0
  %136 = load i16, i16* %135, align 2
  %137 = icmp sgt i16 %112, %136
  br i1 %137, label %138, label %142

138:                                              ; preds = %131
  %139 = getelementptr inbounds %"struct.ots::OpenTypeAVAR::AxisValueMap", %"struct.ots::OpenTypeAVAR::AxisValueMap"* %134, i64 -1, i32 1
  %140 = load i16, i16* %139, align 2
  %141 = icmp slt i16 %121, %140
  br i1 %141, label %142, label %144

142:                                              ; preds = %131, %138
  %143 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %47, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.9, i64 0, i64 0)) #9
  br label %246

144:                                              ; preds = %129, %138
  %145 = icmp eq i16 %111, 192
  %146 = icmp eq i16 %120, 192
  %147 = and i1 %145, %146
  %148 = or i16 %120, %111
  %149 = icmp eq i16 %148, 0
  %150 = or i1 %147, %149
  br i1 %150, label %155, label %151

151:                                              ; preds = %144
  %152 = icmp eq i16 %111, 64
  %153 = icmp eq i16 %120, 64
  %154 = and i1 %152, %153
  br i1 %154, label %155, label %157

155:                                              ; preds = %151, %144
  %156 = add nsw i32 %104, 1
  br label %157

157:                                              ; preds = %155, %151
  %158 = phi i32 [ %156, %155 ], [ %104, %151 ]
  %159 = load %"class.std::__1::vector.24"*, %"class.std::__1::vector.24"** %70, align 8
  %160 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %159, i64 %80
  %161 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %159, i64 %80, i32 0, i32 1
  %162 = load %"struct.ots::OpenTypeAVAR::AxisValueMap"*, %"struct.ots::OpenTypeAVAR::AxisValueMap"** %161, align 8
  %163 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %159, i64 %80, i32 0, i32 2, i32 0, i32 0
  %164 = load %"struct.ots::OpenTypeAVAR::AxisValueMap"*, %"struct.ots::OpenTypeAVAR::AxisValueMap"** %163, align 8
  %165 = icmp eq %"struct.ots::OpenTypeAVAR::AxisValueMap"* %162, %164
  %166 = ptrtoint %"struct.ots::OpenTypeAVAR::AxisValueMap"* %164 to i64
  br i1 %165, label %176, label %167

167:                                              ; preds = %157
  %168 = bitcast %"struct.ots::OpenTypeAVAR::AxisValueMap"* %162 to i32*
  %169 = zext i16 %121 to i32
  %170 = shl nuw i32 %169, 16
  %171 = zext i16 %112 to i32
  %172 = or i32 %170, %171
  store i32 %172, i32* %168, align 2
  %173 = getelementptr inbounds %"struct.ots::OpenTypeAVAR::AxisValueMap", %"struct.ots::OpenTypeAVAR::AxisValueMap"* %162, i64 1
  %174 = ptrtoint %"struct.ots::OpenTypeAVAR::AxisValueMap"* %173 to i64
  %175 = bitcast %"struct.ots::OpenTypeAVAR::AxisValueMap"** %161 to i64*
  store i64 %174, i64* %175, align 8
  br label %237

176:                                              ; preds = %157
  %177 = ptrtoint %"struct.ots::OpenTypeAVAR::AxisValueMap"* %162 to i64
  %178 = bitcast %"struct.ots::OpenTypeAVAR::AxisValueMap"** %161 to i64*
  %179 = bitcast %"class.std::__1::vector.24"* %160 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = sub i64 %177, %180
  %182 = ashr exact i64 %181, 2
  %183 = add nsw i64 %182, 1
  %184 = icmp ugt i64 %183, 4611686018427387903
  br i1 %184, label %185, label %187

185:                                              ; preds = %176
  %186 = bitcast %"class.std::__1::vector.24"* %160 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %186) #10
  unreachable

187:                                              ; preds = %176
  %188 = bitcast %"struct.ots::OpenTypeAVAR::AxisValueMap"** %163 to i64*
  %189 = sub i64 %166, %180
  %190 = ashr exact i64 %189, 2
  %191 = icmp ult i64 %190, 2305843009213693951
  br i1 %191, label %192, label %200

192:                                              ; preds = %187
  %193 = ashr exact i64 %189, 1
  %194 = icmp ult i64 %193, %183
  %195 = select i1 %194, i64 %183, i64 %193
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %205, label %197

197:                                              ; preds = %192
  %198 = icmp ugt i64 %195, 4611686018427387903
  br i1 %198, label %199, label %200

199:                                              ; preds = %197
  tail call void @abort() #10
  unreachable

200:                                              ; preds = %197, %187
  %201 = phi i64 [ %195, %197 ], [ 4611686018427387903, %187 ]
  %202 = shl i64 %201, 2
  %203 = tail call i8* @_Znwm(i64 %202) #11
  %204 = bitcast i8* %203 to %"struct.ots::OpenTypeAVAR::AxisValueMap"*
  br label %205

205:                                              ; preds = %200, %192
  %206 = phi i64 [ %201, %200 ], [ 0, %192 ]
  %207 = phi %"struct.ots::OpenTypeAVAR::AxisValueMap"* [ %204, %200 ], [ null, %192 ]
  %208 = getelementptr inbounds %"struct.ots::OpenTypeAVAR::AxisValueMap", %"struct.ots::OpenTypeAVAR::AxisValueMap"* %207, i64 %182
  %209 = getelementptr inbounds %"struct.ots::OpenTypeAVAR::AxisValueMap", %"struct.ots::OpenTypeAVAR::AxisValueMap"* %207, i64 %206
  %210 = ptrtoint %"struct.ots::OpenTypeAVAR::AxisValueMap"* %209 to i64
  %211 = bitcast %"struct.ots::OpenTypeAVAR::AxisValueMap"* %208 to i32*
  %212 = zext i16 %121 to i32
  %213 = shl nuw i32 %212, 16
  %214 = zext i16 %112 to i32
  %215 = or i32 %213, %214
  store i32 %215, i32* %211, align 2
  %216 = getelementptr inbounds %"struct.ots::OpenTypeAVAR::AxisValueMap", %"struct.ots::OpenTypeAVAR::AxisValueMap"* %208, i64 1
  %217 = ptrtoint %"struct.ots::OpenTypeAVAR::AxisValueMap"* %216 to i64
  %218 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %160, i64 0, i32 0, i32 0
  %219 = load %"struct.ots::OpenTypeAVAR::AxisValueMap"*, %"struct.ots::OpenTypeAVAR::AxisValueMap"** %218, align 8
  %220 = load i64, i64* %178, align 8
  %221 = ptrtoint %"struct.ots::OpenTypeAVAR::AxisValueMap"* %219 to i64
  %222 = sub i64 %220, %221
  %223 = ashr exact i64 %222, 2
  %224 = sub nsw i64 0, %223
  %225 = getelementptr inbounds %"struct.ots::OpenTypeAVAR::AxisValueMap", %"struct.ots::OpenTypeAVAR::AxisValueMap"* %208, i64 %224
  %226 = ptrtoint %"struct.ots::OpenTypeAVAR::AxisValueMap"* %225 to i64
  %227 = icmp sgt i64 %222, 0
  br i1 %227, label %228, label %232

228:                                              ; preds = %205
  %229 = bitcast %"struct.ots::OpenTypeAVAR::AxisValueMap"* %225 to i8*
  %230 = bitcast %"struct.ots::OpenTypeAVAR::AxisValueMap"* %219 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %229, i8* align 2 %230, i64 %222, i1 false) #9
  %231 = load %"struct.ots::OpenTypeAVAR::AxisValueMap"*, %"struct.ots::OpenTypeAVAR::AxisValueMap"** %218, align 8
  br label %232

232:                                              ; preds = %228, %205
  %233 = phi %"struct.ots::OpenTypeAVAR::AxisValueMap"* [ %219, %205 ], [ %231, %228 ]
  store i64 %226, i64* %179, align 8
  store i64 %217, i64* %178, align 8
  store i64 %210, i64* %188, align 8
  %234 = icmp eq %"struct.ots::OpenTypeAVAR::AxisValueMap"* %233, null
  br i1 %234, label %237, label %235

235:                                              ; preds = %232
  %236 = bitcast %"struct.ots::OpenTypeAVAR::AxisValueMap"* %233 to i8*
  tail call void @_ZdlPv(i8* %236) #11
  br label %237

237:                                              ; preds = %167, %232, %235
  %238 = add nuw nsw i64 %103, 1
  %239 = icmp ult i64 %238, %98
  br i1 %239, label %102, label %240

240:                                              ; preds = %237
  %241 = icmp ne i16 %96, 0
  %242 = icmp ne i32 %158, 3
  %243 = and i1 %241, %242
  br i1 %243, label %244, label %73

244:                                              ; preds = %240
  %245 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %47, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.10, i64 0, i64 0)) #9
  br label %246

246:                                              ; preds = %73, %63, %115, %142, %127, %100, %244, %55, %71, %35, %26
  %247 = phi i1 [ %37, %35 ], [ %28, %26 ], [ %72, %71 ], [ %56, %55 ], [ %245, %244 ], [ %101, %100 ], [ %116, %115 ], [ %143, %142 ], [ %128, %127 ], [ true, %63 ], [ true, %73 ]
  ret i1 %247
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

declare zeroext i1 @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

declare %"class.ots::Table"* @_ZNK3ots4Font13GetTypedTableEj(%"struct.ots::Font"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN3ots5Table14DropVariationsEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeAVAR9SerializeEPNS_9OTSStreamE(%"class.ots::OpenTypeAVAR"*, %"class.ots::OTSStream"*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i16, align 2
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i16, align 2
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i16, align 2
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i16, align 2
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i16, align 2
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i16, align 2
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i16, align 2
  %24 = getelementptr inbounds %"class.ots::OpenTypeAVAR", %"class.ots::OpenTypeAVAR"* %0, i64 0, i32 1
  %25 = load i16, i16* %24, align 2
  %26 = bitcast i16* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %26)
  %27 = tail call i16 @llvm.bswap.i16(i16 %25) #9
  store i16 %27, i16* %23, align 2
  %28 = bitcast %"class.ots::OTSStream"* %1 to i64 (%"class.ots::OTSStream"*)***
  %29 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %28, align 8
  %30 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %29, i64 4
  %31 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %30, align 8
  %32 = tail call i64 %31(%"class.ots::OTSStream"* %1) #9
  %33 = and i64 %32, 3
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  br label %50

38:                                               ; preds = %2
  %39 = sub nuw nsw i64 4, %33
  %40 = icmp ult i64 %39, 2
  %41 = select i1 %40, i64 %39, i64 2
  %42 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #9
  store i32 0, i32* %21, align 4
  %43 = getelementptr inbounds i8, i8* %42, i64 %33
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %43, i8* nonnull align 2 %26, i64 %41, i1 false) #9
  %44 = load i32, i32* %21, align 4
  %45 = tail call i32 @llvm.bswap.i32(i32 %44) #9
  %46 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = add i32 %47, %45
  store i32 %48, i32* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #9
  %49 = icmp eq i64 %33, 3
  br i1 %49, label %50, label %60

50:                                               ; preds = %38, %35
  %51 = phi i32 [ %48, %38 ], [ %37, %35 ]
  %52 = phi i64 [ %41, %38 ], [ 0, %35 ]
  %53 = phi i64 [ 1, %38 ], [ 2, %35 ]
  %54 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54)
  store i32 0, i32* %22, align 4
  %55 = getelementptr inbounds i8, i8* %26, i64 %52
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %54, i8* align 1 %55, i64 %53, i1 false) #9
  %56 = load i32, i32* %22, align 4
  %57 = tail call i32 @llvm.bswap.i32(i32 %56) #9
  %58 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %59 = add i32 %57, %51
  store i32 %59, i32* %58, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54)
  br label %60

60:                                               ; preds = %38, %50
  %61 = bitcast %"class.ots::OTSStream"* %1 to i1 (%"class.ots::OTSStream"*, i8*, i64)***
  %62 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %61, align 8
  %63 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %62, i64 2
  %64 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %63, align 8
  %65 = call zeroext i1 %64(%"class.ots::OTSStream"* %1, i8* nonnull %26, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %26)
  br i1 %65, label %66, label %204

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.ots::OpenTypeAVAR", %"class.ots::OpenTypeAVAR"* %0, i64 0, i32 2
  %68 = load i16, i16* %67, align 4
  %69 = bitcast i16* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %69)
  %70 = call i16 @llvm.bswap.i16(i16 %68) #9
  store i16 %70, i16* %20, align 2
  %71 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %28, align 8
  %72 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %71, i64 4
  %73 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %72, align 8
  %74 = call i64 %73(%"class.ots::OTSStream"* %1) #9
  %75 = and i64 %74, 3
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %66
  %78 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %79 = load i32, i32* %78, align 8
  br label %92

80:                                               ; preds = %66
  %81 = sub nuw nsw i64 4, %75
  %82 = icmp ult i64 %81, 2
  %83 = select i1 %82, i64 %81, i64 2
  %84 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %84) #9
  store i32 0, i32* %18, align 4
  %85 = getelementptr inbounds i8, i8* %84, i64 %75
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %85, i8* nonnull align 2 %69, i64 %83, i1 false) #9
  %86 = load i32, i32* %18, align 4
  %87 = call i32 @llvm.bswap.i32(i32 %86) #9
  %88 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = add i32 %89, %87
  store i32 %90, i32* %88, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84) #9
  %91 = icmp eq i64 %75, 3
  br i1 %91, label %92, label %102

92:                                               ; preds = %80, %77
  %93 = phi i32 [ %90, %80 ], [ %79, %77 ]
  %94 = phi i64 [ %83, %80 ], [ 0, %77 ]
  %95 = phi i64 [ 1, %80 ], [ 2, %77 ]
  %96 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96)
  store i32 0, i32* %19, align 4
  %97 = getelementptr inbounds i8, i8* %69, i64 %94
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %96, i8* align 1 %97, i64 %95, i1 false) #9
  %98 = load i32, i32* %19, align 4
  %99 = call i32 @llvm.bswap.i32(i32 %98) #9
  %100 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %101 = add i32 %99, %93
  store i32 %101, i32* %100, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96)
  br label %102

102:                                              ; preds = %80, %92
  %103 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %61, align 8
  %104 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %103, i64 2
  %105 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %104, align 8
  %106 = call zeroext i1 %105(%"class.ots::OTSStream"* %1, i8* nonnull %69, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %69)
  br i1 %106, label %107, label %204

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.ots::OpenTypeAVAR", %"class.ots::OpenTypeAVAR"* %0, i64 0, i32 3
  %109 = load i16, i16* %108, align 2
  %110 = bitcast i16* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %110)
  %111 = call i16 @llvm.bswap.i16(i16 %109) #9
  store i16 %111, i16* %17, align 2
  %112 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %28, align 8
  %113 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %112, i64 4
  %114 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %113, align 8
  %115 = call i64 %114(%"class.ots::OTSStream"* %1) #9
  %116 = and i64 %115, 3
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %121

118:                                              ; preds = %107
  %119 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %120 = load i32, i32* %119, align 8
  br label %133

121:                                              ; preds = %107
  %122 = sub nuw nsw i64 4, %116
  %123 = icmp ult i64 %122, 2
  %124 = select i1 %123, i64 %122, i64 2
  %125 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %125) #9
  store i32 0, i32* %15, align 4
  %126 = getelementptr inbounds i8, i8* %125, i64 %116
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %126, i8* nonnull align 2 %110, i64 %124, i1 false) #9
  %127 = load i32, i32* %15, align 4
  %128 = call i32 @llvm.bswap.i32(i32 %127) #9
  %129 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %130 = load i32, i32* %129, align 8
  %131 = add i32 %130, %128
  store i32 %131, i32* %129, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %125) #9
  %132 = icmp eq i64 %116, 3
  br i1 %132, label %133, label %143

133:                                              ; preds = %121, %118
  %134 = phi i32 [ %131, %121 ], [ %120, %118 ]
  %135 = phi i64 [ %124, %121 ], [ 0, %118 ]
  %136 = phi i64 [ 1, %121 ], [ 2, %118 ]
  %137 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %137)
  store i32 0, i32* %16, align 4
  %138 = getelementptr inbounds i8, i8* %110, i64 %135
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %137, i8* align 1 %138, i64 %136, i1 false) #9
  %139 = load i32, i32* %16, align 4
  %140 = call i32 @llvm.bswap.i32(i32 %139) #9
  %141 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %142 = add i32 %140, %134
  store i32 %142, i32* %141, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %137)
  br label %143

143:                                              ; preds = %121, %133
  %144 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %61, align 8
  %145 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %144, i64 2
  %146 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %145, align 8
  %147 = call zeroext i1 %146(%"class.ots::OTSStream"* %1, i8* nonnull %110, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %110)
  br i1 %147, label %148, label %204

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.ots::OpenTypeAVAR", %"class.ots::OpenTypeAVAR"* %0, i64 0, i32 4
  %150 = load i16, i16* %149, align 8
  %151 = bitcast i16* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %151)
  %152 = call i16 @llvm.bswap.i16(i16 %150) #9
  store i16 %152, i16* %14, align 2
  %153 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %28, align 8
  %154 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %153, i64 4
  %155 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %154, align 8
  %156 = call i64 %155(%"class.ots::OTSStream"* %1) #9
  %157 = and i64 %156, 3
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %162

159:                                              ; preds = %148
  %160 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %161 = load i32, i32* %160, align 8
  br label %174

162:                                              ; preds = %148
  %163 = sub nuw nsw i64 4, %157
  %164 = icmp ult i64 %163, 2
  %165 = select i1 %164, i64 %163, i64 2
  %166 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %166) #9
  store i32 0, i32* %12, align 4
  %167 = getelementptr inbounds i8, i8* %166, i64 %157
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %167, i8* nonnull align 2 %151, i64 %165, i1 false) #9
  %168 = load i32, i32* %12, align 4
  %169 = call i32 @llvm.bswap.i32(i32 %168) #9
  %170 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %171 = load i32, i32* %170, align 8
  %172 = add i32 %171, %169
  store i32 %172, i32* %170, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %166) #9
  %173 = icmp eq i64 %157, 3
  br i1 %173, label %174, label %184

174:                                              ; preds = %162, %159
  %175 = phi i32 [ %172, %162 ], [ %161, %159 ]
  %176 = phi i64 [ %165, %162 ], [ 0, %159 ]
  %177 = phi i64 [ 1, %162 ], [ 2, %159 ]
  %178 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %178)
  store i32 0, i32* %13, align 4
  %179 = getelementptr inbounds i8, i8* %151, i64 %176
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %178, i8* align 1 %179, i64 %177, i1 false) #9
  %180 = load i32, i32* %13, align 4
  %181 = call i32 @llvm.bswap.i32(i32 %180) #9
  %182 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %183 = add i32 %181, %175
  store i32 %183, i32* %182, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %178)
  br label %184

184:                                              ; preds = %162, %174
  %185 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %61, align 8
  %186 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %185, i64 2
  %187 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %186, align 8
  %188 = call zeroext i1 %187(%"class.ots::OTSStream"* %1, i8* nonnull %151, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %151)
  br i1 %188, label %189, label %204

189:                                              ; preds = %184
  %190 = load i16, i16* %149, align 8
  %191 = icmp eq i16 %190, 0
  br i1 %191, label %349, label %192

192:                                              ; preds = %189
  %193 = getelementptr inbounds %"class.ots::OpenTypeAVAR", %"class.ots::OpenTypeAVAR"* %0, i64 0, i32 5, i32 0, i32 0
  %194 = bitcast i16* %11 to i8*
  %195 = bitcast i32* %9 to i8*
  %196 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %197 = bitcast i32* %10 to i8*
  %198 = bitcast i16* %8 to i8*
  %199 = bitcast i32* %6 to i8*
  %200 = bitcast i32* %7 to i8*
  %201 = bitcast i16* %5 to i8*
  %202 = bitcast i32* %3 to i8*
  %203 = bitcast i32* %4 to i8*
  br label %207

204:                                              ; preds = %184, %143, %102, %60
  %205 = bitcast %"class.ots::OpenTypeAVAR"* %0 to %"class.ots::Table"*
  %206 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %205, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11, i64 0, i64 0)) #9
  ret i1 %206

207:                                              ; preds = %192, %344
  %208 = phi i64 [ 0, %192 ], [ %345, %344 ]
  %209 = load %"class.std::__1::vector.24"*, %"class.std::__1::vector.24"** %193, align 8
  %210 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %209, i64 %208
  %211 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %209, i64 %208, i32 0, i32 1
  %212 = bitcast %"struct.ots::OpenTypeAVAR::AxisValueMap"** %211 to i64*
  %213 = load i64, i64* %212, align 8
  %214 = bitcast %"class.std::__1::vector.24"* %210 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = sub i64 %213, %215
  %217 = lshr exact i64 %216, 2
  %218 = trunc i64 %217 to i16
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %194)
  %219 = call i16 @llvm.bswap.i16(i16 %218) #9
  store i16 %219, i16* %11, align 2
  %220 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %28, align 8
  %221 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %220, i64 4
  %222 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %221, align 8
  %223 = call i64 %222(%"class.ots::OTSStream"* %1) #9
  %224 = and i64 %223, 3
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %228

226:                                              ; preds = %207
  %227 = load i32, i32* %196, align 8
  br label %238

228:                                              ; preds = %207
  %229 = sub nuw nsw i64 4, %224
  %230 = icmp ult i64 %229, 2
  %231 = select i1 %230, i64 %229, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %195) #9
  store i32 0, i32* %9, align 4
  %232 = getelementptr inbounds i8, i8* %195, i64 %224
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %232, i8* nonnull align 2 %194, i64 %231, i1 false) #9
  %233 = load i32, i32* %9, align 4
  %234 = call i32 @llvm.bswap.i32(i32 %233) #9
  %235 = load i32, i32* %196, align 8
  %236 = add i32 %235, %234
  store i32 %236, i32* %196, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %195) #9
  %237 = icmp eq i64 %224, 3
  br i1 %237, label %238, label %246

238:                                              ; preds = %228, %226
  %239 = phi i32 [ %236, %228 ], [ %227, %226 ]
  %240 = phi i64 [ %231, %228 ], [ 0, %226 ]
  %241 = phi i64 [ 1, %228 ], [ 2, %226 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %197)
  store i32 0, i32* %10, align 4
  %242 = getelementptr inbounds i8, i8* %194, i64 %240
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %197, i8* align 1 %242, i64 %241, i1 false) #9
  %243 = load i32, i32* %10, align 4
  %244 = call i32 @llvm.bswap.i32(i32 %243) #9
  %245 = add i32 %244, %239
  store i32 %245, i32* %196, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %197)
  br label %246

246:                                              ; preds = %228, %238
  %247 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %61, align 8
  %248 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %247, i64 2
  %249 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %248, align 8
  %250 = call zeroext i1 %249(%"class.ots::OTSStream"* %1, i8* nonnull %194, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %194)
  br i1 %250, label %251, label %257

251:                                              ; preds = %246
  %252 = load i64, i64* %212, align 8
  %253 = load i64, i64* %214, align 8
  %254 = icmp eq i64 %252, %253
  br i1 %254, label %344, label %255

255:                                              ; preds = %251
  %256 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %210, i64 0, i32 0, i32 0
  br label %266

257:                                              ; preds = %246
  %258 = bitcast %"class.ots::OpenTypeAVAR"* %0 to %"class.ots::Table"*
  %259 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %258, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11, i64 0, i64 0)) #9
  br label %349

260:                                              ; preds = %335
  %261 = load i64, i64* %212, align 8
  %262 = load i64, i64* %214, align 8
  %263 = sub i64 %261, %262
  %264 = ashr exact i64 %263, 2
  %265 = icmp ult i64 %340, %264
  br i1 %265, label %266, label %344

266:                                              ; preds = %255, %260
  %267 = phi i64 [ %253, %255 ], [ %262, %260 ]
  %268 = phi i64 [ 0, %255 ], [ %340, %260 ]
  %269 = inttoptr i64 %267 to %"struct.ots::OpenTypeAVAR::AxisValueMap"*
  %270 = getelementptr inbounds %"struct.ots::OpenTypeAVAR::AxisValueMap", %"struct.ots::OpenTypeAVAR::AxisValueMap"* %269, i64 %268, i32 0
  %271 = load i16, i16* %270, align 2
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %198)
  %272 = call i16 @llvm.bswap.i16(i16 %271) #9
  store i16 %272, i16* %8, align 2
  %273 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %28, align 8
  %274 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %273, i64 4
  %275 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %274, align 8
  %276 = call i64 %275(%"class.ots::OTSStream"* %1) #9
  %277 = and i64 %276, 3
  %278 = icmp eq i64 %277, 0
  br i1 %278, label %279, label %281

279:                                              ; preds = %266
  %280 = load i32, i32* %196, align 8
  br label %291

281:                                              ; preds = %266
  %282 = sub nuw nsw i64 4, %277
  %283 = icmp ult i64 %282, 2
  %284 = select i1 %283, i64 %282, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %199) #9
  store i32 0, i32* %6, align 4
  %285 = getelementptr inbounds i8, i8* %199, i64 %277
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %285, i8* nonnull align 2 %198, i64 %284, i1 false) #9
  %286 = load i32, i32* %6, align 4
  %287 = call i32 @llvm.bswap.i32(i32 %286) #9
  %288 = load i32, i32* %196, align 8
  %289 = add i32 %288, %287
  store i32 %289, i32* %196, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %199) #9
  %290 = icmp eq i64 %277, 3
  br i1 %290, label %291, label %299

291:                                              ; preds = %281, %279
  %292 = phi i32 [ %289, %281 ], [ %280, %279 ]
  %293 = phi i64 [ %284, %281 ], [ 0, %279 ]
  %294 = phi i64 [ 1, %281 ], [ 2, %279 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %200)
  store i32 0, i32* %7, align 4
  %295 = getelementptr inbounds i8, i8* %198, i64 %293
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %200, i8* align 1 %295, i64 %294, i1 false) #9
  %296 = load i32, i32* %7, align 4
  %297 = call i32 @llvm.bswap.i32(i32 %296) #9
  %298 = add i32 %297, %292
  store i32 %298, i32* %196, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %200)
  br label %299

299:                                              ; preds = %281, %291
  %300 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %61, align 8
  %301 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %300, i64 2
  %302 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %301, align 8
  %303 = call zeroext i1 %302(%"class.ots::OTSStream"* %1, i8* nonnull %198, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %198)
  br i1 %303, label %304, label %341

304:                                              ; preds = %299
  %305 = load %"struct.ots::OpenTypeAVAR::AxisValueMap"*, %"struct.ots::OpenTypeAVAR::AxisValueMap"** %256, align 8
  %306 = getelementptr inbounds %"struct.ots::OpenTypeAVAR::AxisValueMap", %"struct.ots::OpenTypeAVAR::AxisValueMap"* %305, i64 %268, i32 1
  %307 = load i16, i16* %306, align 2
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %201)
  %308 = call i16 @llvm.bswap.i16(i16 %307) #9
  store i16 %308, i16* %5, align 2
  %309 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %28, align 8
  %310 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %309, i64 4
  %311 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %310, align 8
  %312 = call i64 %311(%"class.ots::OTSStream"* %1) #9
  %313 = and i64 %312, 3
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %315, label %317

315:                                              ; preds = %304
  %316 = load i32, i32* %196, align 8
  br label %327

317:                                              ; preds = %304
  %318 = sub nuw nsw i64 4, %313
  %319 = icmp ult i64 %318, 2
  %320 = select i1 %319, i64 %318, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %202) #9
  store i32 0, i32* %3, align 4
  %321 = getelementptr inbounds i8, i8* %202, i64 %313
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %321, i8* nonnull align 2 %201, i64 %320, i1 false) #9
  %322 = load i32, i32* %3, align 4
  %323 = call i32 @llvm.bswap.i32(i32 %322) #9
  %324 = load i32, i32* %196, align 8
  %325 = add i32 %324, %323
  store i32 %325, i32* %196, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %202) #9
  %326 = icmp eq i64 %313, 3
  br i1 %326, label %327, label %335

327:                                              ; preds = %317, %315
  %328 = phi i32 [ %325, %317 ], [ %316, %315 ]
  %329 = phi i64 [ %320, %317 ], [ 0, %315 ]
  %330 = phi i64 [ 1, %317 ], [ 2, %315 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %203)
  store i32 0, i32* %4, align 4
  %331 = getelementptr inbounds i8, i8* %201, i64 %329
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %203, i8* align 1 %331, i64 %330, i1 false) #9
  %332 = load i32, i32* %4, align 4
  %333 = call i32 @llvm.bswap.i32(i32 %332) #9
  %334 = add i32 %333, %328
  store i32 %334, i32* %196, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %203)
  br label %335

335:                                              ; preds = %317, %327
  %336 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %61, align 8
  %337 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %336, i64 2
  %338 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %337, align 8
  %339 = call zeroext i1 %338(%"class.ots::OTSStream"* %1, i8* nonnull %201, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %201)
  %340 = add nuw i64 %268, 1
  br i1 %339, label %260, label %341

341:                                              ; preds = %299, %335
  %342 = bitcast %"class.ots::OpenTypeAVAR"* %0 to %"class.ots::Table"*
  %343 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %342, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11, i64 0, i64 0)) #9
  br label %349

344:                                              ; preds = %260, %251
  %345 = add nuw nsw i64 %208, 1
  %346 = load i16, i16* %149, align 8
  %347 = zext i16 %346 to i64
  %348 = icmp ult i64 %345, %347
  br i1 %348, label %207, label %349

349:                                              ; preds = %344, %189, %341, %257
  %350 = phi i1 [ %343, %341 ], [ %259, %257 ], [ true, %189 ], [ true, %344 ]
  ret i1 %350
}

declare zeroext i1 @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ots12OpenTypeAVARD2Ev(%"class.ots::OpenTypeAVAR"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.ots::OpenTypeAVAR", %"class.ots::OpenTypeAVAR"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3ots12OpenTypeAVARE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ots::OpenTypeAVAR", %"class.ots::OpenTypeAVAR"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::vector.24"*, %"class.std::__1::vector.24"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.24"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::vector.24"* %5 to i8*
  %9 = getelementptr inbounds %"class.ots::OpenTypeAVAR", %"class.ots::OpenTypeAVAR"* %0, i64 0, i32 5, i32 0, i32 1
  %10 = load %"class.std::__1::vector.24"*, %"class.std::__1::vector.24"** %9, align 8
  %11 = icmp eq %"class.std::__1::vector.24"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::vector.24"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %14, i64 0, i32 0, i32 0
  %16 = load %"struct.ots::OpenTypeAVAR::AxisValueMap"*, %"struct.ots::OpenTypeAVAR::AxisValueMap"** %15, align 8
  %17 = icmp eq %"struct.ots::OpenTypeAVAR::AxisValueMap"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = ptrtoint %"struct.ots::OpenTypeAVAR::AxisValueMap"* %16 to i64
  %20 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %13, i64 -1, i32 0, i32 1
  %21 = bitcast %"struct.ots::OpenTypeAVAR::AxisValueMap"** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast %"struct.ots::OpenTypeAVAR::AxisValueMap"* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #11
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::vector.24"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::vector.24"* %5, %"class.std::__1::vector.24"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %1, %28
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ots12OpenTypeAVARD0Ev(%"class.ots::OpenTypeAVAR"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.ots::OpenTypeAVAR", %"class.ots::OpenTypeAVAR"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3ots12OpenTypeAVARE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ots::OpenTypeAVAR", %"class.ots::OpenTypeAVAR"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::vector.24"*, %"class.std::__1::vector.24"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.24"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::vector.24"* %5 to i8*
  %9 = getelementptr inbounds %"class.ots::OpenTypeAVAR", %"class.ots::OpenTypeAVAR"* %0, i64 0, i32 5, i32 0, i32 1
  %10 = load %"class.std::__1::vector.24"*, %"class.std::__1::vector.24"** %9, align 8
  %11 = icmp eq %"class.std::__1::vector.24"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::vector.24"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %14, i64 0, i32 0, i32 0
  %16 = load %"struct.ots::OpenTypeAVAR::AxisValueMap"*, %"struct.ots::OpenTypeAVAR::AxisValueMap"** %15, align 8
  %17 = icmp eq %"struct.ots::OpenTypeAVAR::AxisValueMap"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = ptrtoint %"struct.ots::OpenTypeAVAR::AxisValueMap"* %16 to i64
  %20 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %13, i64 -1, i32 0, i32 1
  %21 = bitcast %"struct.ots::OpenTypeAVAR::AxisValueMap"** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast %"struct.ots::OpenTypeAVAR::AxisValueMap"* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #11
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::vector.24"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::vector.24"* %5, %"class.std::__1::vector.24"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %1, %28
  %31 = bitcast %"class.ots::OpenTypeAVAR"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #11
  ret void
}

declare zeroext i1 @_ZN3ots5Table15ShouldSerializeEv(%"class.ots::Table"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_IN3ots12OpenTypeAVAR12AxisValueMapENS_9allocatorIS3_EEEENS4_IS6_EEE24__emplace_back_slow_pathIJEEEvDpOT_(%"class.std::__1::vector"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %3 = bitcast %"class.std::__1::vector.24"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.std::__1::vector"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = sdiv exact i64 %7, 24
  %9 = add nsw i64 %8, 1
  %10 = icmp ugt i64 %9, 768614336404564650
  br i1 %10, label %11, label %13

11:                                               ; preds = %1
  %12 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %12) #10
  unreachable

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.std::__1::vector.24"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %6
  %18 = sdiv exact i64 %17, 24
  %19 = icmp ult i64 %18, 384307168202282325
  br i1 %19, label %20, label %25

20:                                               ; preds = %13
  %21 = shl nsw i64 %18, 1
  %22 = icmp ult i64 %21, %9
  %23 = select i1 %22, i64 %9, i64 %21
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %13, %20
  %26 = phi i64 [ %23, %20 ], [ 768614336404564650, %13 ]
  %27 = mul i64 %26, 24
  %28 = tail call i8* @_Znwm(i64 %27) #11
  %29 = bitcast i8* %28 to %"class.std::__1::vector.24"*
  br label %30

30:                                               ; preds = %20, %25
  %31 = phi i64 [ %26, %25 ], [ 0, %20 ]
  %32 = phi %"class.std::__1::vector.24"* [ %29, %25 ], [ null, %20 ]
  %33 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %32, i64 %8
  %34 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %32, i64 %31
  %35 = ptrtoint %"class.std::__1::vector.24"* %34 to i64
  %36 = bitcast %"class.std::__1::vector.24"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #9
  %37 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %33, i64 1
  %38 = ptrtoint %"class.std::__1::vector.24"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::vector.24"*, %"class.std::__1::vector.24"** %39, align 8
  %41 = load %"class.std::__1::vector.24"*, %"class.std::__1::vector.24"** %2, align 8
  %42 = icmp eq %"class.std::__1::vector.24"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %30
  %44 = ptrtoint %"class.std::__1::vector.24"* %40 to i64
  br label %69

45:                                               ; preds = %30, %45
  %46 = phi %"class.std::__1::vector.24"* [ %48, %45 ], [ %33, %30 ]
  %47 = phi %"class.std::__1::vector.24"* [ %49, %45 ], [ %41, %30 ]
  %48 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %46, i64 -1
  %49 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %47, i64 -1
  %50 = bitcast %"class.std::__1::vector.24"* %48 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #9
  %51 = bitcast %"class.std::__1::vector.24"* %49 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.std::__1::vector.24"* %48 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %47, i64 -1, i32 0, i32 1
  %55 = bitcast %"struct.ots::OpenTypeAVAR::AxisValueMap"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %46, i64 -1, i32 0, i32 1
  %58 = bitcast %"struct.ots::OpenTypeAVAR::AxisValueMap"** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %47, i64 -1, i32 0, i32 2, i32 0, i32 0
  %60 = bitcast %"struct.ots::OpenTypeAVAR::AxisValueMap"** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %46, i64 -1, i32 0, i32 2, i32 0, i32 0
  %63 = bitcast %"struct.ots::OpenTypeAVAR::AxisValueMap"** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast %"class.std::__1::vector.24"* %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #9
  %65 = icmp eq %"class.std::__1::vector.24"* %49, %40
  br i1 %65, label %66, label %45

66:                                               ; preds = %45
  %67 = load i64, i64* %5, align 8
  %68 = load %"class.std::__1::vector.24"*, %"class.std::__1::vector.24"** %2, align 8
  br label %69

69:                                               ; preds = %43, %66
  %70 = phi %"class.std::__1::vector.24"* [ %40, %43 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::vector.24"* [ %33, %43 ], [ %48, %66 ]
  %72 = phi i64 [ %44, %43 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::vector.24"* %71 to i64
  store i64 %73, i64* %5, align 8
  store i64 %38, i64* %3, align 8
  store i64 %35, i64* %15, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::vector.24"*
  %75 = icmp eq %"class.std::__1::vector.24"* %70, %74
  br i1 %75, label %89, label %76

76:                                               ; preds = %69, %87
  %77 = phi %"class.std::__1::vector.24"* [ %78, %87 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %77, i64 -1
  %79 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %78, i64 0, i32 0, i32 0
  %80 = load %"struct.ots::OpenTypeAVAR::AxisValueMap"*, %"struct.ots::OpenTypeAVAR::AxisValueMap"** %79, align 8
  %81 = icmp eq %"struct.ots::OpenTypeAVAR::AxisValueMap"* %80, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %76
  %83 = ptrtoint %"struct.ots::OpenTypeAVAR::AxisValueMap"* %80 to i64
  %84 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %77, i64 -1, i32 0, i32 1
  %85 = bitcast %"struct.ots::OpenTypeAVAR::AxisValueMap"** %84 to i64*
  store i64 %83, i64* %85, align 8
  %86 = bitcast %"struct.ots::OpenTypeAVAR::AxisValueMap"* %80 to i8*
  tail call void @_ZdlPv(i8* %86) #11
  br label %87

87:                                               ; preds = %82, %76
  %88 = icmp eq %"class.std::__1::vector.24"* %78, %74
  br i1 %88, label %89, label %76

89:                                               ; preds = %87, %69
  %90 = icmp eq i64 %72, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %89
  %92 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %92) #11
  br label %93

93:                                               ; preds = %89, %91
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #8

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
