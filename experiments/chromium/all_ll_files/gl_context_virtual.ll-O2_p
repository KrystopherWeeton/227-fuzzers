; ModuleID = '../../gpu/command_buffer/service/gl_context_virtual.cc'
source_filename = "../../gpu/command_buffer/service/gl_context_virtual.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.gpu::GLContextVirtual" = type { %"class.gl::GLContext.base", %class.scoped_refptr.67, %"class.base::WeakPtr" }
%"class.gl::GLContext.base" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.base::SupportsWeakPtr", %"struct.gl::GLWorkarounds", [6 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.34", %"class.gl::RealGLApi"*, %class.scoped_refptr.51, %"class.gl::GLContext"*, i8, [7 x i8], %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.45", i8 }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"struct.gl::GLWorkarounds" = type { i8, i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.gl::DriverGL"* }
%"struct.gl::DriverGL" = type <{ %"struct.gl::ProcsGL", %"struct.gl::ExtensionsGL", i8 }>
%"struct.gl::ProcsGL" = type { void (i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i8, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i8*)*, void (i32)*, void (i32, i32, i64, i32)*, void ()*, void (float, float, float, float)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, i32 (i32)*, void (i32)*, void (i32, i32, float, i32)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (float, float, float, float)*, void (double)*, void (float)*, void (i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, i32 (%struct.__GLsync*, i32, i64)*, i32 (%struct.__GLsync*, i32, i64)*, void (i8, i8, i8, i8)*, void (i32, i8, i8, i8, i8)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32*)*, i32 ()*, i32 (i32)*, i32 (i32, i32, i8**)*, void (i32)*, void (void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (%struct.__GLsync*)*, void (%struct.__GLsync*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i8)*, void (double, double)*, void (float, float)*, void (i32, i32)*, void (i32)*, void (i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i64)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void (i32, i32)*, void (i32)*, void (i32)*, void (i32)*, void ()*, %struct.__GLsync* (i32, i32)*, %struct.__GLsync* (i32, i32)*, void ()*, void (i32)*, void (i32)*, void ()*, void (i32, i64, i64)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, i32 (i32)*, i32 (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*, i32, i32*)*, void (i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8**)*, i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, i32 ()*, void (i32, i32, i32*)*, void (i32, float*)*, void (i32, i32, i32*, float*)*, i32 (i32, i8*)*, i32 (i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 ()*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i64*)*, void (i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i8*, i32, i32*, i8*)*, void (i32, i8**)*, void (i32, i32, i32*, i8**)*, void (i32, i32, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i32, i32*, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, i8* (i32)*, i8* (i32, i32)*, void (%struct.__GLsync*, i32, i32, i32*, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, i32 (i32, i8*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i8**)*, void (i32, i32, i32, i32*, i8**)*, void (i32, i32)*, void (i32, i64, i32, i32)*, void (i32, i64, i32, i8*)*, void (i32, i64, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32, i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (%struct.__GLsync*)*, i8 (%struct.__GLsync*)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, void (float)*, void (i32)*, i8* (i32, i32)*, i8* (i32, i64, i64, i32)*, void (i32, float*)*, void (i32)*, void (i32)*, void (i32)*, void (i32)*, void (i32, i32, i32*)*, void (float)*, void (i32, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32*, i32)*, void (i32, i32*, i32, i8**, i32)*, void (i32, i32*, i32, i8**, i32*, i32)*, void (i32, i32*, i32, i8**, i32*, i32*, i32*, i32)*, void (i32, i32, i32, i8*)*, void (i8*, i32, i8*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void ()*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (float, float)*, void ()*, void ()*, void (i32)*, void (i32, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, float*)*, void (i32, i32, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void ()*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i8*)*, void ()*, void (float, i8)*, void (i32, i32)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32*, i32, i8*, i32)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, i8 (i32)*, i8 (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i64, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i8**, i32)*, void (i32, float)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, i8 (i32)*, void (i32)*, void (i32, i32, i32)*, void (i32)*, void (i32)*, void (i32, float)*, void (i32, float*)*, void (i32, float, float)*, void (i32, float*)*, void (i32, float, float, float)*, void (i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (%struct.__GLsync*, i32, i64)*, void (%struct.__GLsync*, i32, i64)*, void (i32, i32, i32*)* }
%struct.__GLsync = type opaque
%"struct.gl::ExtensionsGL" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.gl::GLImplementationWrapper"* }
%"class.gl::GLImplementationWrapper" = type { %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.gl::TraceGLApi"* }
%"class.gl::TraceGLApi" = type { %"class.gl::GLApi", %"class.gl::GLApi"* }
%"class.gl::GLApi" = type { i32 (...)** }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.gl::LogGLApi"* }
%"class.gl::LogGLApi" = type { %"class.gl::GLApi", %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.gl::CurrentGL"* }
%"struct.gl::CurrentGL" = type { %"class.gl::GLApi"*, %"struct.gl::DriverGL"*, %"struct.gl::GLVersionInfo"* }
%"struct.gl::GLVersionInfo" = type opaque
%"class.gl::RealGLApi" = type { %"class.gl::GLApiBase", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::basic_string", %"struct.gl::GLWorkarounds", %"class.std::__1::unique_ptr.45" }
%"class.gl::GLApiBase" = type { %"class.gl::GLApi", %"struct.gl::DriverGL"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::basic_string"* }
%class.scoped_refptr.51 = type { %"class.gl::GLShareGroup"* }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.gl::GLStateRestorer"* }
%"class.gl::GLStateRestorer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.gl::GLVersionInfo"* }
%class.scoped_refptr.67 = type { %"class.gl::GLContext"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.68 }
%class.scoped_refptr.68 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.gl::GLShareGroup" = type { %"class.base::RefCounted.52", %"class.std::__1::set", %"class.gl::GLContext"* }
%"class.base::RefCounted.52" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.53", %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { i64 }
%"class.gl::GLContext" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.base::SupportsWeakPtr", %"struct.gl::GLWorkarounds", [6 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.34", %"class.gl::RealGLApi"*, %class.scoped_refptr.51, %"class.gl::GLContext"*, i8, [7 x i8], %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.45", i8, [7 x i8] }>
%"class.gl::GLSurface" = type { i32 (...)**, %"class.base::RefCounted.69", %"class.base::SupportsWeakPtr.70" }
%"class.base::RefCounted.69" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::SupportsWeakPtr.70" = type { %"class.base::internal::WeakReferenceOwner" }
%"struct.gl::GLContextAttribs" = type { i32, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i32 }
%"class.gpu::GLStateRestorerImpl" = type { %"class.gl::GLStateRestorer", %"class.base::WeakPtr" }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.gpu::GLContextVirtualDelegate" = type { i32 (...)** }
%"class.gl::GPUTimingClient" = type { i32 (...)**, %"class.base::RefCounted.72", %"class.gl::GPUTimingImpl"*, i32, i32 }
%"class.base::RefCounted.72" = type { %"class.base::subtle::RefCountedBase" }
%"class.gl::GPUTimingImpl" = type opaque
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.73" }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.75" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.base::BasicStringPiece"* }
%"class.gl::YUVToRGBConverter" = type opaque
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN2gl9GLContext13SetVisibilityEb = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZTVN3gpu16GLContextVirtualE = hidden unnamed_addr constant { [23 x i8*] } { [23 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.gpu::GLContextVirtual"*, %"class.gl::GLSurface"*, %"struct.gl::GLContextAttribs"*)* @_ZN3gpu16GLContextVirtual10InitializeEPN2gl9GLSurfaceERKNS1_16GLContextAttribsE to i8*), i8* bitcast (void (%"class.gpu::GLContextVirtual"*, %"class.gl::GLSurface"*)* @_ZN3gpu16GLContextVirtual14ReleaseCurrentEPN2gl9GLSurfaceE to i8*), i8* bitcast (i1 (%"class.gpu::GLContextVirtual"*, %"class.gl::GLSurface"*)* @_ZN3gpu16GLContextVirtual9IsCurrentEPN2gl9GLSurfaceE to i8*), i8* bitcast (i8* (%"class.gpu::GLContextVirtual"*)* @_ZN3gpu16GLContextVirtual9GetHandleEv to i8*), i8* bitcast (%"class.gl::GPUTimingClient"* (%"class.gpu::GLContextVirtual"*)* @_ZN3gpu16GLContextVirtual21CreateGPUTimingClientEv to i8*), i8* bitcast (%"class.base::internal::flat_tree"* (%"class.gpu::GLContextVirtual"*)* @_ZN3gpu16GLContextVirtual13GetExtensionsEv to i8*), i8* bitcast (void (%"class.gpu::GLContextVirtual"*)* @_ZN3gpu16GLContextVirtual23SetSafeToForceGpuSwitchEv to i8*), i8* bitcast (i1 (%"class.gl::GLContext"*)* @_ZN2gl9GLContext22ForceGpuSwitchIfNeededEv to i8*), i8* bitcast (void (%"class.gpu::GLContextVirtual"*)* @_ZN3gpu16GLContextVirtual25SetUnbindFboOnMakeCurrentEv to i8*), i8* bitcast (void (%"class.gl::GLContext"*, i1)* @_ZN2gl9GLContext13SetVisibilityEb to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.gpu::GLContextVirtual"*)* @_ZN3gpu16GLContextVirtual12GetGLVersionEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.gpu::GLContextVirtual"*)* @_ZN3gpu16GLContextVirtual13GetGLRendererEv to i8*), i8* bitcast (%"class.gl::YUVToRGBConverter"* (%"class.gpu::GLContextVirtual"*, %"class.gfx::ColorSpace"*)* @_ZN3gpu16GLContextVirtual20GetYUVToRGBConverterERKN3gfx10ColorSpaceE to i8*), i8* bitcast (void (%"class.gpu::GLContextVirtual"*)* @_ZN3gpu16GLContextVirtual28ForceReleaseVirtuallyCurrentEv to i8*), i8* bitcast (void (%"class.gpu::GLContextVirtual"*)* @_ZN3gpu16GLContextVirtualD2Ev to i8*), i8* bitcast (void (%"class.gpu::GLContextVirtual"*)* @_ZN3gpu16GLContextVirtualD0Ev to i8*), i8* bitcast (%"class.gl::GLApi"* (%"class.gl::GLContext"*, %"struct.gl::DriverGL"*)* @_ZN2gl9GLContext11CreateGLApiEPNS_8DriverGLE to i8*), i8* bitcast (void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)* @_ZN2gl9GLContext10SetCurrentEPNS_9GLSurfaceE to i8*), i8* bitcast (i1 (%"class.gpu::GLContextVirtual"*, %"class.gl::GLSurface"*)* @_ZN3gpu16GLContextVirtual15MakeCurrentImplEPN2gl9GLSurfaceE to i8*), i8* bitcast (i32 (%"class.gpu::GLContextVirtual"*)* @_ZN3gpu16GLContextVirtual34CheckStickyGraphicsResetStatusImplEv to i8*), i8* bitcast (void (%"class.gpu::GLContextVirtual"*)* @_ZN3gpu16GLContextVirtual15ResetExtensionsEv to i8*)] }, align 8
@.str = private unnamed_addr constant [55 x i8] c"../../gpu/command_buffer/service/gl_context_virtual.cc\00", align 1
@.str.1 = private unnamed_addr constant [56 x i8] c"Trying to make virtual context current without decoder.\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN3gpu16GLContextVirtualC1EPN2gl12GLShareGroupEPNS1_9GLContextEN4base7WeakPtrINS_24GLContextVirtualDelegateEEE = hidden unnamed_addr alias void (%"class.gpu::GLContextVirtual"*, %"class.gl::GLShareGroup"*, %"class.gl::GLContext"*, %"class.base::WeakPtr"*), void (%"class.gpu::GLContextVirtual"*, %"class.gl::GLShareGroup"*, %"class.gl::GLContext"*, %"class.base::WeakPtr"*)* @_ZN3gpu16GLContextVirtualC2EPN2gl12GLShareGroupEPNS1_9GLContextEN4base7WeakPtrINS_24GLContextVirtualDelegateEEE
@_ZN3gpu16GLContextVirtualD1Ev = hidden unnamed_addr alias void (%"class.gpu::GLContextVirtual"*), void (%"class.gpu::GLContextVirtual"*)* @_ZN3gpu16GLContextVirtualD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu16GLContextVirtualC2EPN2gl12GLShareGroupEPNS1_9GLContextEN4base7WeakPtrINS_24GLContextVirtualDelegateEEE(%"class.gpu::GLContextVirtual"*, %"class.gl::GLShareGroup"*, %"class.gl::GLContext"*, %"class.base::WeakPtr"*) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.gpu::GLContextVirtual"* %0 to %"class.gl::GLContext"*
  tail call void @_ZN2gl9GLContextC2EPNS_12GLShareGroupE(%"class.gl::GLContext"* %5, %"class.gl::GLShareGroup"* %1) #6
  %6 = getelementptr inbounds %"class.gpu::GLContextVirtual", %"class.gpu::GLContextVirtual"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTVN3gpu16GLContextVirtualE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.gpu::GLContextVirtual", %"class.gpu::GLContextVirtual"* %0, i64 0, i32 1, i32 0
  store %"class.gl::GLContext"* %2, %"class.gl::GLContext"** %7, align 8
  %8 = icmp eq %"class.gl::GLContext"* %2, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %2, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %10) #6
  br label %11

11:                                               ; preds = %4, %9
  %12 = getelementptr inbounds %"class.gpu::GLContextVirtual", %"class.gpu::GLContextVirtual"* %0, i64 0, i32 2, i32 0, i32 0
  %13 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* %12, %"class.base::internal::WeakReference"* dereferenceable(8) %13) #6
  %14 = getelementptr inbounds %"class.gpu::GLContextVirtual", %"class.gpu::GLContextVirtual"* %0, i64 0, i32 2, i32 0, i32 1
  %15 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %14, align 8
  ret void
}

declare void @_ZN2gl9GLContextC2EPNS_12GLShareGroupE(%"class.gl::GLContext"*, %"class.gl::GLShareGroup"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu16GLContextVirtual10InitializeEPN2gl9GLSurfaceERKNS1_16GLContextAttribsE(%"class.gpu::GLContextVirtual"*, %"class.gl::GLSurface"*, %"struct.gl::GLContextAttribs"* nocapture readnone dereferenceable(28)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = bitcast %"class.gpu::GLContextVirtual"* %0 to %"class.gl::GLContext"*
  %6 = tail call i8* @_Znwm(i64 24) #7
  %7 = bitcast i8* %6 to %"class.gpu::GLStateRestorerImpl"*
  %8 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.gpu::GLContextVirtual", %"class.gpu::GLContextVirtual"* %0, i64 0, i32 2, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %8, %"class.base::internal::WeakReference"* dereferenceable(8) %9) #6
  %10 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.gpu::GLContextVirtual", %"class.gpu::GLContextVirtual"* %0, i64 0, i32 2, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %10, align 8
  call void @_ZN3gpu19GLStateRestorerImplC1EN4base7WeakPtrINS_24GLContextVirtualDelegateEEE(%"class.gpu::GLStateRestorerImpl"* nonnull %7, %"class.base::WeakPtr"* nonnull %4) #6
  %13 = bitcast i8* %6 to %"class.gl::GLStateRestorer"*
  call void @_ZN2gl9GLContext18SetGLStateRestorerEPNS_15GLStateRestorerE(%"class.gl::GLContext"* %5, %"class.gl::GLStateRestorer"* nonnull %13) #6
  %14 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %14) #6
  %15 = getelementptr inbounds %"class.gpu::GLContextVirtual", %"class.gpu::GLContextVirtual"* %0, i64 0, i32 1, i32 0
  %16 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %15, align 8
  %17 = call zeroext i1 @_ZN2gl9GLContext20MakeVirtuallyCurrentEPS0_PNS_9GLSurfaceE(%"class.gl::GLContext"* %16, %"class.gl::GLContext"* %5, %"class.gl::GLSurface"* %1) #6
  ret i1 %17
}

declare void @_ZN2gl9GLContext18SetGLStateRestorerEPNS_15GLStateRestorerE(%"class.gl::GLContext"*, %"class.gl::GLStateRestorer"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN3gpu19GLStateRestorerImplC1EN4base7WeakPtrINS_24GLContextVirtualDelegateEEE(%"class.gpu::GLStateRestorerImpl"*, %"class.base::WeakPtr"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

declare zeroext i1 @_ZN2gl9GLContext20MakeVirtuallyCurrentEPS0_PNS_9GLSurfaceE(%"class.gl::GLContext"*, %"class.gl::GLContext"*, %"class.gl::GLSurface"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu16GLContextVirtual7DestroyEv(%"class.gpu::GLContextVirtual"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GLContextVirtual", %"class.gpu::GLContextVirtual"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %class.scoped_refptr.67, %class.scoped_refptr.67* %2, i64 0, i32 0
  %4 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %3, align 8
  %5 = bitcast %"class.gpu::GLContextVirtual"* %0 to %"class.gl::GLContext"*
  tail call void @_ZN2gl9GLContext25OnReleaseVirtuallyCurrentEPS0_(%"class.gl::GLContext"* %4, %"class.gl::GLContext"* %5) #6
  %6 = bitcast %class.scoped_refptr.67* %2 to i64*
  %7 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %3, align 8
  store i64 0, i64* %6, align 8
  %8 = icmp eq %"class.gl::GLContext"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %7, i64 0, i32 1
  %11 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %10, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %11) #6
  %12 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %10, i64 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %22

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %10, i64 -2
  %17 = bitcast %"class.base::RefCounted"* %16 to %"class.gl::GLContext"*
  %18 = bitcast %"class.base::RefCounted"* %16 to void (%"class.gl::GLContext"*)***
  %19 = load void (%"class.gl::GLContext"*)**, void (%"class.gl::GLContext"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.gl::GLContext"*)*, void (%"class.gl::GLContext"*)** %19, i64 15
  %21 = load void (%"class.gl::GLContext"*)*, void (%"class.gl::GLContext"*)** %20, align 8
  tail call void %21(%"class.gl::GLContext"* nonnull %17) #6
  br label %22

22:                                               ; preds = %1, %9, %15
  ret void
}

declare void @_ZN2gl9GLContext25OnReleaseVirtuallyCurrentEPS0_(%"class.gl::GLContext"*, %"class.gl::GLContext"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu16GLContextVirtual15MakeCurrentImplEPN2gl9GLSurfaceE(%"class.gpu::GLContextVirtual"*, %"class.gl::GLSurface"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = getelementptr inbounds %"class.gpu::GLContextVirtual", %"class.gpu::GLContextVirtual"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %4) #6
  br i1 %5, label %6, label %16

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gpu::GLContextVirtual", %"class.gpu::GLContextVirtual"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast i64* %7 to %"class.gpu::GLContextVirtualDelegate"**
  %9 = load %"class.gpu::GLContextVirtualDelegate"*, %"class.gpu::GLContextVirtualDelegate"** %8, align 8
  %10 = icmp eq %"class.gpu::GLContextVirtualDelegate"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.gpu::GLContextVirtual", %"class.gpu::GLContextVirtual"* %0, i64 0, i32 1, i32 0
  %13 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %12, align 8
  %14 = bitcast %"class.gpu::GLContextVirtual"* %0 to %"class.gl::GLContext"*
  %15 = tail call zeroext i1 @_ZN2gl9GLContext20MakeVirtuallyCurrentEPS0_PNS_9GLSurfaceE(%"class.gl::GLContext"* %13, %"class.gl::GLContext"* %14, %"class.gl::GLSurface"* %1) #6
  br label %23

16:                                               ; preds = %2, %6
  %17 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #6
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %19) #6
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 41, i32 2) #6
  %20 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %21 = bitcast %"class.std::__1::basic_ostringstream"* %20 to %"class.std::__1::basic_ostream"*
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %21, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.1, i64 0, i64 0), i64 55) #6
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %19) #6
  br label %23

23:                                               ; preds = %18, %16, %11
  %24 = phi i1 [ %15, %11 ], [ false, %16 ], [ false, %18 ]
  ret i1 %24
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu16GLContextVirtual14ReleaseCurrentEPN2gl9GLSurfaceE(%"class.gpu::GLContextVirtual"*, %"class.gl::GLSurface"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.gpu::GLContextVirtual"* %0 to i1 (%"class.gpu::GLContextVirtual"*, %"class.gl::GLSurface"*)***
  %4 = load i1 (%"class.gpu::GLContextVirtual"*, %"class.gl::GLSurface"*)**, i1 (%"class.gpu::GLContextVirtual"*, %"class.gl::GLSurface"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.gpu::GLContextVirtual"*, %"class.gl::GLSurface"*)*, i1 (%"class.gpu::GLContextVirtual"*, %"class.gl::GLSurface"*)** %4, i64 2
  %6 = load i1 (%"class.gpu::GLContextVirtual"*, %"class.gl::GLSurface"*)*, i1 (%"class.gpu::GLContextVirtual"*, %"class.gl::GLSurface"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.gpu::GLContextVirtual"* %0, %"class.gl::GLSurface"* %1) #6
  br i1 %7, label %8, label %17

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gpu::GLContextVirtual", %"class.gpu::GLContextVirtual"* %0, i64 0, i32 1, i32 0
  %10 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %9, align 8
  %11 = bitcast %"class.gpu::GLContextVirtual"* %0 to %"class.gl::GLContext"*
  tail call void @_ZN2gl9GLContext25OnReleaseVirtuallyCurrentEPS0_(%"class.gl::GLContext"* %10, %"class.gl::GLContext"* %11) #6
  %12 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %9, align 8
  %13 = bitcast %"class.gl::GLContext"* %12 to void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)***
  %14 = load void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)**, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %14, i64 1
  %16 = load void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %15, align 8
  tail call void %16(%"class.gl::GLContext"* %12, %"class.gl::GLSurface"* %1) #6
  br label %17

17:                                               ; preds = %8, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu16GLContextVirtual9IsCurrentEPN2gl9GLSurfaceE(%"class.gpu::GLContextVirtual"* nocapture readonly, %"class.gl::GLSurface"*) unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.gl::GLSurface"* %1, null
  br i1 %3, label %18, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.gl::GLSurface"* %1 to i1 (%"class.gl::GLSurface"*)***
  %6 = load i1 (%"class.gl::GLSurface"*)**, i1 (%"class.gl::GLSurface"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.gl::GLSurface"*)*, i1 (%"class.gl::GLSurface"*)** %6, i64 6
  %8 = load i1 (%"class.gl::GLSurface"*)*, i1 (%"class.gl::GLSurface"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.gl::GLSurface"* nonnull %1) #6
  br i1 %9, label %18, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.gpu::GLContextVirtual", %"class.gpu::GLContextVirtual"* %0, i64 0, i32 1, i32 0
  %12 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %11, align 8
  %13 = bitcast %"class.gl::GLContext"* %12 to i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)***
  %14 = load i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)**, i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %14, i64 2
  %16 = load i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.gl::GLContext"* %12, %"class.gl::GLSurface"* nonnull %1) #6
  br label %26

18:                                               ; preds = %2, %4
  %19 = getelementptr inbounds %"class.gpu::GLContextVirtual", %"class.gpu::GLContextVirtual"* %0, i64 0, i32 1, i32 0
  %20 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %19, align 8
  %21 = bitcast %"class.gl::GLContext"* %20 to i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)***
  %22 = load i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)**, i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*** %21, align 8
  %23 = getelementptr inbounds i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %22, i64 2
  %24 = load i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.gl::GLContext"* %20, %"class.gl::GLSurface"* null) #6
  br label %26

26:                                               ; preds = %18, %10
  %27 = phi i1 [ %25, %18 ], [ %17, %10 ]
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN3gpu16GLContextVirtual9GetHandleEv(%"class.gpu::GLContextVirtual"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GLContextVirtual", %"class.gpu::GLContextVirtual"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %2, align 8
  %4 = bitcast %"class.gl::GLContext"* %3 to i8* (%"class.gl::GLContext"*)***
  %5 = load i8* (%"class.gl::GLContext"*)**, i8* (%"class.gl::GLContext"*)*** %4, align 8
  %6 = getelementptr inbounds i8* (%"class.gl::GLContext"*)*, i8* (%"class.gl::GLContext"*)** %5, i64 3
  %7 = load i8* (%"class.gl::GLContext"*)*, i8* (%"class.gl::GLContext"*)** %6, align 8
  %8 = tail call i8* %7(%"class.gl::GLContext"* %3) #6
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::GPUTimingClient"* @_ZN3gpu16GLContextVirtual21CreateGPUTimingClientEv(%"class.gpu::GLContextVirtual"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GLContextVirtual", %"class.gpu::GLContextVirtual"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %2, align 8
  %4 = bitcast %"class.gl::GLContext"* %3 to %"class.gl::GPUTimingClient"* (%"class.gl::GLContext"*)***
  %5 = load %"class.gl::GPUTimingClient"* (%"class.gl::GLContext"*)**, %"class.gl::GPUTimingClient"* (%"class.gl::GLContext"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.gl::GPUTimingClient"* (%"class.gl::GLContext"*)*, %"class.gl::GPUTimingClient"* (%"class.gl::GLContext"*)** %5, i64 4
  %7 = load %"class.gl::GPUTimingClient"* (%"class.gl::GLContext"*)*, %"class.gl::GPUTimingClient"* (%"class.gl::GLContext"*)** %6, align 8
  %8 = tail call %"class.gl::GPUTimingClient"* %7(%"class.gl::GLContext"* %3) #6
  ret %"class.gl::GPUTimingClient"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu16GLContextVirtual12GetGLVersionEv(%"class.std::__1::basic_string"* noalias sret, %"class.gpu::GLContextVirtual"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::GLContextVirtual", %"class.gpu::GLContextVirtual"* %1, i64 0, i32 1, i32 0
  %4 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %3, align 8
  %5 = bitcast %"class.gl::GLContext"* %4 to void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)***
  %6 = load void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)**, void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)*, void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)** %6, i64 10
  %8 = load void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)*, void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)** %7, align 8
  tail call void %8(%"class.std::__1::basic_string"* sret %0, %"class.gl::GLContext"* %4) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu16GLContextVirtual13GetGLRendererEv(%"class.std::__1::basic_string"* noalias sret, %"class.gpu::GLContextVirtual"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::GLContextVirtual", %"class.gpu::GLContextVirtual"* %1, i64 0, i32 1, i32 0
  %4 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %3, align 8
  %5 = bitcast %"class.gl::GLContext"* %4 to void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)***
  %6 = load void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)**, void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)*, void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)** %6, i64 11
  %8 = load void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)*, void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)** %7, align 8
  tail call void %8(%"class.std::__1::basic_string"* sret %0, %"class.gl::GLContext"* %4) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.base::internal::flat_tree"* @_ZN3gpu16GLContextVirtual13GetExtensionsEv(%"class.gpu::GLContextVirtual"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GLContextVirtual", %"class.gpu::GLContextVirtual"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %2, align 8
  %4 = bitcast %"class.gl::GLContext"* %3 to %"class.base::internal::flat_tree"* (%"class.gl::GLContext"*)***
  %5 = load %"class.base::internal::flat_tree"* (%"class.gl::GLContext"*)**, %"class.base::internal::flat_tree"* (%"class.gl::GLContext"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::flat_tree"* (%"class.gl::GLContext"*)*, %"class.base::internal::flat_tree"* (%"class.gl::GLContext"*)** %5, i64 5
  %7 = load %"class.base::internal::flat_tree"* (%"class.gl::GLContext"*)*, %"class.base::internal::flat_tree"* (%"class.gl::GLContext"*)** %6, align 8
  %8 = tail call dereferenceable(24) %"class.base::internal::flat_tree"* %7(%"class.gl::GLContext"* %3) #6
  ret %"class.base::internal::flat_tree"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu16GLContextVirtual23SetSafeToForceGpuSwitchEv(%"class.gpu::GLContextVirtual"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GLContextVirtual", %"class.gpu::GLContextVirtual"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %2, align 8
  %4 = bitcast %"class.gl::GLContext"* %3 to void (%"class.gl::GLContext"*)***
  %5 = load void (%"class.gl::GLContext"*)**, void (%"class.gl::GLContext"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.gl::GLContext"*)*, void (%"class.gl::GLContext"*)** %5, i64 6
  %7 = load void (%"class.gl::GLContext"*)*, void (%"class.gl::GLContext"*)** %6, align 8
  tail call void %7(%"class.gl::GLContext"* %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu16GLContextVirtual34CheckStickyGraphicsResetStatusImplEv(%"class.gpu::GLContextVirtual"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GLContextVirtual", %"class.gpu::GLContextVirtual"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %2, align 8
  %4 = tail call i32 @_ZN2gl9GLContext30CheckStickyGraphicsResetStatusEv(%"class.gl::GLContext"* %3) #6
  %5 = icmp eq i32 %4, 0
  %6 = select i1 %5, i32 0, i32 33365
  ret i32 %6
}

declare i32 @_ZN2gl9GLContext30CheckStickyGraphicsResetStatusEv(%"class.gl::GLContext"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu16GLContextVirtual25SetUnbindFboOnMakeCurrentEv(%"class.gpu::GLContextVirtual"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GLContextVirtual", %"class.gpu::GLContextVirtual"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %2, align 8
  %4 = bitcast %"class.gl::GLContext"* %3 to void (%"class.gl::GLContext"*)***
  %5 = load void (%"class.gl::GLContext"*)**, void (%"class.gl::GLContext"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.gl::GLContext"*)*, void (%"class.gl::GLContext"*)** %5, i64 8
  %7 = load void (%"class.gl::GLContext"*)*, void (%"class.gl::GLContext"*)** %6, align 8
  tail call void %7(%"class.gl::GLContext"* %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::YUVToRGBConverter"* @_ZN3gpu16GLContextVirtual20GetYUVToRGBConverterERKN3gfx10ColorSpaceE(%"class.gpu::GLContextVirtual"* nocapture readonly, %"class.gfx::ColorSpace"* dereferenceable(68)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::GLContextVirtual", %"class.gpu::GLContextVirtual"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %3, align 8
  %5 = bitcast %"class.gl::GLContext"* %4 to %"class.gl::YUVToRGBConverter"* (%"class.gl::GLContext"*, %"class.gfx::ColorSpace"*)***
  %6 = load %"class.gl::YUVToRGBConverter"* (%"class.gl::GLContext"*, %"class.gfx::ColorSpace"*)**, %"class.gl::YUVToRGBConverter"* (%"class.gl::GLContext"*, %"class.gfx::ColorSpace"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.gl::YUVToRGBConverter"* (%"class.gl::GLContext"*, %"class.gfx::ColorSpace"*)*, %"class.gl::YUVToRGBConverter"* (%"class.gl::GLContext"*, %"class.gfx::ColorSpace"*)** %6, i64 12
  %8 = load %"class.gl::YUVToRGBConverter"* (%"class.gl::GLContext"*, %"class.gfx::ColorSpace"*)*, %"class.gl::YUVToRGBConverter"* (%"class.gl::GLContext"*, %"class.gfx::ColorSpace"*)** %7, align 8
  %9 = tail call %"class.gl::YUVToRGBConverter"* %8(%"class.gl::GLContext"* %4, %"class.gfx::ColorSpace"* dereferenceable(68) %1) #6
  ret %"class.gl::YUVToRGBConverter"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu16GLContextVirtual28ForceReleaseVirtuallyCurrentEv(%"class.gpu::GLContextVirtual"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GLContextVirtual", %"class.gpu::GLContextVirtual"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %2, align 8
  %4 = bitcast %"class.gpu::GLContextVirtual"* %0 to %"class.gl::GLContext"*
  tail call void @_ZN2gl9GLContext25OnReleaseVirtuallyCurrentEPS0_(%"class.gl::GLContext"* %3, %"class.gl::GLContext"* %4) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu16GLContextVirtualD2Ev(%"class.gpu::GLContextVirtual"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GLContextVirtual", %"class.gpu::GLContextVirtual"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTVN3gpu16GLContextVirtualE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::GLContextVirtual", %"class.gpu::GLContextVirtual"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.scoped_refptr.67, %class.scoped_refptr.67* %3, i64 0, i32 0
  %5 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %4, align 8
  %6 = bitcast %"class.gpu::GLContextVirtual"* %0 to %"class.gl::GLContext"*
  tail call void @_ZN2gl9GLContext25OnReleaseVirtuallyCurrentEPS0_(%"class.gl::GLContext"* %5, %"class.gl::GLContext"* %6) #6
  %7 = bitcast %class.scoped_refptr.67* %3 to i64*
  %8 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %4, align 8
  store i64 0, i64* %7, align 8
  %9 = icmp eq %"class.gl::GLContext"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %8, i64 0, i32 1
  %12 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %11, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %12) #6
  %13 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %11, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %11, i64 -2
  %18 = bitcast %"class.base::RefCounted"* %17 to %"class.gl::GLContext"*
  %19 = bitcast %"class.base::RefCounted"* %17 to void (%"class.gl::GLContext"*)***
  %20 = load void (%"class.gl::GLContext"*)**, void (%"class.gl::GLContext"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.gl::GLContext"*)*, void (%"class.gl::GLContext"*)** %20, i64 15
  %22 = load void (%"class.gl::GLContext"*)*, void (%"class.gl::GLContext"*)** %21, align 8
  tail call void %22(%"class.gl::GLContext"* nonnull %18) #6
  br label %23

23:                                               ; preds = %1, %10, %16
  %24 = getelementptr inbounds %"class.gpu::GLContextVirtual", %"class.gpu::GLContextVirtual"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %24) #6
  %25 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %4, align 8
  %26 = icmp eq %"class.gl::GLContext"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %25, i64 0, i32 1
  %29 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %28, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %29) #6
  %30 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %28, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %40

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %28, i64 -2
  %35 = bitcast %"class.base::RefCounted"* %34 to %"class.gl::GLContext"*
  %36 = bitcast %"class.base::RefCounted"* %34 to void (%"class.gl::GLContext"*)***
  %37 = load void (%"class.gl::GLContext"*)**, void (%"class.gl::GLContext"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.gl::GLContext"*)*, void (%"class.gl::GLContext"*)** %37, i64 15
  %39 = load void (%"class.gl::GLContext"*)*, void (%"class.gl::GLContext"*)** %38, align 8
  tail call void %39(%"class.gl::GLContext"* nonnull %35) #6
  br label %40

40:                                               ; preds = %23, %27, %33
  tail call void @_ZN2gl9GLContextD2Ev(%"class.gl::GLContext"* %6) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2gl9GLContextD2Ev(%"class.gl::GLContext"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu16GLContextVirtualD0Ev(%"class.gpu::GLContextVirtual"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3gpu16GLContextVirtualD2Ev(%"class.gpu::GLContextVirtual"* %0) #6
  %2 = bitcast %"class.gpu::GLContextVirtual"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu16GLContextVirtual15ResetExtensionsEv(%"class.gpu::GLContextVirtual"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GLContextVirtual", %"class.gpu::GLContextVirtual"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %2, align 8
  %4 = bitcast %"class.gl::GLContext"* %3 to void (%"class.gl::GLContext"*)***
  %5 = load void (%"class.gl::GLContext"*)**, void (%"class.gl::GLContext"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.gl::GLContext"*)*, void (%"class.gl::GLContext"*)** %5, i64 20
  %7 = load void (%"class.gl::GLContext"*)*, void (%"class.gl::GLContext"*)** %6, align 8
  tail call void %7(%"class.gl::GLContext"* %3) #6
  ret void
}

declare zeroext i1 @_ZN2gl9GLContext22ForceGpuSwitchIfNeededEv(%"class.gl::GLContext"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl9GLContext13SetVisibilityEb(%"class.gl::GLContext"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

declare %"class.gl::GLApi"* @_ZN2gl9GLContext11CreateGLApiEPNS_8DriverGLE(%"class.gl::GLContext"*, %"struct.gl::DriverGL"*) unnamed_addr #1

declare void @_ZN2gl9GLContext10SetCurrentEPNS_9GLSurfaceE(%"class.gl::GLContext"*, %"class.gl::GLSurface"*) unnamed_addr #1

declare void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #6
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #6
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #6
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #6
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #6
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #6
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #6
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #6
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #6
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #6
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #7
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #6
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #6
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #7
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #6
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #6
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
