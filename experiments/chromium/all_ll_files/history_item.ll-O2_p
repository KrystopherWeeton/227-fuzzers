; ModuleID = '../../third_party/blink/renderer/core/loader/history_item.cc'
source_filename = "../../third_party/blink/renderer/core/loader/history_item.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.15" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i32 }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector", %"class.blink::Member", %"class.absl::optional", i64, i64, i32, %class.scoped_refptr.14, %class.scoped_refptr.82, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.14 }
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type <{ %"class.blink::Member.3", %"class.blink::HeapVector", i8, [7 x i8] }>
%"class.blink::Member.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.7" }
%"class.WTF::Vector.7" = type { %"class.WTF::VectorBuffer.8" }
%"class.WTF::VectorBuffer.8" = type { %"class.WTF::VectorBufferBase.9", [512 x i8] }
%"class.WTF::VectorBufferBase.9" = type { %"class.blink::Member.10"*, i32, i32 }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::ListedElement"* }
%"class.blink::ListedElement" = type opaque
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"class.blink::FloatSize" = type { float, float }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.gfx::PointF" = type { float, float }
%class.scoped_refptr.82 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type <{ %"class.WTF::RefCounted.83", [4 x i8], %"class.WTF::Vector.85", i64, %"class.WTF::Vector.88", i8, [7 x i8] }>
%"class.WTF::RefCounted.83" = type { %"class.base::RefCounted.84" }
%"class.base::RefCounted.84" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.85" = type { %"class.WTF::VectorBuffer.86" }
%"class.WTF::VectorBuffer.86" = type { %"class.WTF::VectorBufferBase.87" }
%"class.WTF::VectorBufferBase.87" = type { %"class.blink::FormDataElement"*, i32, i32 }
%"class.blink::FormDataElement" = type { i32, %"class.WTF::Vector.88", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.93, i64, i64, %"class.absl::optional.94", %class.scoped_refptr.99 }
%class.scoped_refptr.93 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type opaque
%"class.absl::optional.94" = type { %"class.absl::optional_internal::optional_data.95" }
%"class.absl::optional_internal::optional_data.95" = type { %"class.absl::optional_internal::optional_data_base.96" }
%"class.absl::optional_internal::optional_data_base.96" = type { %"class.absl::optional_internal::optional_data_dtor_base.97" }
%"class.absl::optional_internal::optional_data_dtor_base.97" = type { i8, %union.anon.98 }
%union.anon.98 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.99 = type { %"class.blink::WrappedDataPipeGetter"* }
%"class.blink::WrappedDataPipeGetter" = type opaque
%"class.WTF::Vector.88" = type { %"class.WTF::VectorBuffer.89" }
%"class.WTF::VectorBuffer.89" = type { %"class.WTF::VectorBufferBase.90" }
%"class.WTF::VectorBufferBase.90" = type { i8*, i32, i32 }
%class.scoped_refptr.14 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr", i64, %"class.WTF::Vector.21", %"class.WTF::Vector.26", %"class.WTF::Vector.32", %"class.WTF::Vector.48", %class.scoped_refptr.58, %"class.WTF::HashMap", %"class.WTF::Vector.67", %"class.WTF::Vector.21", %"class.WTF::Vector.72", %"class.WTF::HashMap.77", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.15" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.WTF::Vector.26" = type { %"class.WTF::VectorBuffer.27" }
%"class.WTF::VectorBuffer.27" = type { %"class.WTF::VectorBufferBase.28", [8 x i8] }
%"class.WTF::VectorBufferBase.28" = type { %class.scoped_refptr.29*, i32, i32 }
%class.scoped_refptr.29 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34" }
%"class.WTF::VectorBufferBase.34" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.40" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.35 }
%class.scoped_refptr.35 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.48" = type { %"class.WTF::VectorBuffer.49" }
%"class.WTF::VectorBuffer.49" = type { %"class.WTF::VectorBufferBase.50" }
%"class.WTF::VectorBufferBase.50" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.51", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.51" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.54 }
%union.anon.54 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.scoped_refptr.58 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.59", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.64 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.59" = type { %"class.absl::optional_internal::optional_data.60" }
%"class.absl::optional_internal::optional_data.60" = type { %"class.absl::optional_internal::optional_data_base.61" }
%"class.absl::optional_internal::optional_data_base.61" = type { %"class.absl::optional_internal::optional_data_dtor_base.62" }
%"class.absl::optional_internal::optional_data_dtor_base.62" = type { i8, %union.anon.63 }
%union.anon.63 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.64 = type { %"class.blink::SecurityOrigin"* }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::Vector.67" = type { %"class.WTF::VectorBuffer.68" }
%"class.WTF::VectorBuffer.68" = type { %"class.WTF::VectorBufferBase.69" }
%"class.WTF::VectorBufferBase.69" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.21" = type { %"class.WTF::VectorBuffer.22" }
%"class.WTF::VectorBuffer.22" = type { %"class.WTF::VectorBufferBase.23", [16 x i8] }
%"class.WTF::VectorBufferBase.23" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.72" = type { %"class.WTF::VectorBuffer.73" }
%"class.WTF::VectorBuffer.73" = type { %"class.WTF::VectorBufferBase.74" }
%"class.WTF::VectorBufferBase.74" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.77" = type { %"class.WTF::HashTable.78" }
%"class.WTF::HashTable.78" = type <{ %"struct.WTF::KeyValuePair.81"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.81" = type { i8**, %"class.std::__1::unique_ptr.353" }
%"class.std::__1::unique_ptr.353" = type { %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.102" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.blink::KURL"* }
%"class.blink::ResourceRequest" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceRequestBody" }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.64, %class.scoped_refptr.64, %class.scoped_refptr.64, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.113, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.123", %"class.absl::optional.128", %"class.absl::optional.138", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.148", %"class.absl::optional.138", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.138", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.148", %"class.absl::optional.153", i8, %class.scoped_refptr.160 }
%"class.base::TimeDelta" = type { i64 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.59" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.108" }
%"class.WTF::HashMap.108" = type { %"class.WTF::HashTable.109" }
%"class.WTF::HashTable.109" = type <{ %"struct.WTF::KeyValuePair.112"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.112" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.113 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.114", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.121, i8, %"class.url::Origin" }
%"class.base::RefCounted.114" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"*, %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.359" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::unique_ptr.115"* }
%class.scoped_refptr.121 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.122", [4 x i8] }>
%"class.base::RefCountedThreadSafe.122" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.123" = type { %"class.absl::optional_internal::optional_data.124" }
%"class.absl::optional_internal::optional_data.124" = type { %"class.absl::optional_internal::optional_data_base.125" }
%"class.absl::optional_internal::optional_data_base.125" = type { %"class.absl::optional_internal::optional_data_dtor_base.126" }
%"class.absl::optional_internal::optional_data_dtor_base.126" = type { i8, %union.anon.127 }
%union.anon.127 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.128" = type { %"class.absl::optional_internal::optional_data.129" }
%"class.absl::optional_internal::optional_data.129" = type { %"class.absl::optional_internal::optional_data_base.130" }
%"class.absl::optional_internal::optional_data_base.130" = type { %"class.absl::optional_internal::optional_data_dtor_base.131" }
%"class.absl::optional_internal::optional_data_dtor_base.131" = type { i8, %union.anon.132 }
%union.anon.132 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.133", %"class.WTF::Vector", %"class.WTF::String" }
%"class.WTF::Vector.133" = type { %"class.WTF::VectorBuffer.134" }
%"class.WTF::VectorBuffer.134" = type { %"class.WTF::VectorBufferBase.135" }
%"class.WTF::VectorBufferBase.135" = type { %class.scoped_refptr.64*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.143", %"class.absl::optional.143" }
%"class.absl::optional.143" = type { %"class.absl::optional_internal::optional_data.144" }
%"class.absl::optional_internal::optional_data.144" = type { %"class.absl::optional_internal::optional_data_base.145" }
%"class.absl::optional_internal::optional_data_base.145" = type { %"class.absl::optional_internal::optional_data_dtor_base.146" }
%"class.absl::optional_internal::optional_data_dtor_base.146" = type { i8, %union.anon.147 }
%union.anon.147 = type { %"class.base::TimeDelta" }
%"class.absl::optional.138" = type { %"class.absl::optional_internal::optional_data.139" }
%"class.absl::optional_internal::optional_data.139" = type { %"class.absl::optional_internal::optional_data_base.140" }
%"class.absl::optional_internal::optional_data_base.140" = type { %"class.absl::optional_internal::optional_data_dtor_base.141" }
%"class.absl::optional_internal::optional_data_dtor_base.141" = type { i8, %union.anon.142 }
%union.anon.142 = type { %"class.WTF::String" }
%"class.absl::optional.148" = type { %"class.absl::optional_internal::optional_data.149" }
%"class.absl::optional_internal::optional_data.149" = type { %"class.absl::optional_internal::optional_data_base.150" }
%"class.absl::optional_internal::optional_data_base.150" = type { %"class.absl::optional_internal::optional_data_dtor_base.151" }
%"class.absl::optional_internal::optional_data_dtor_base.151" = type { i8, %union.anon.152 }
%union.anon.152 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.153" = type { %"class.absl::optional_internal::optional_data.154" }
%"class.absl::optional_internal::optional_data.154" = type { %"class.absl::optional_internal::optional_data_base.155" }
%"class.absl::optional_internal::optional_data_base.155" = type { %"class.absl::optional_internal::optional_data_dtor_base.156" }
%"class.absl::optional_internal::optional_data_dtor_base.156" = type { i8, %union.anon.157 }
%union.anon.157 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote.158" }
%"class.mojo::PendingRemote.158" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase.159", i32 }
%"class.mojo::ScopedHandleBase.159" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.160 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.364", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.364" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.365" }
%"class.std::__1::vector.365" = type { %"class.std::__1::__vector_base.366" }
%"class.std::__1::__vector_base.366" = type { i32*, i32*, %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { i32* }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.82, %"class.mojo::PendingRemote.161" }
%"class.mojo::PendingRemote.161" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.162", i32, [4 x i8], %"class.std::__1::unique_ptr.300", %"class.std::__1::unique_ptr.300", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.316", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.328", %"class.std::__1::unique_ptr.334", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.341", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.177", %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.189", %"class.std::__1::unique_ptr.195", %"class.std::__1::unique_ptr.206", %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.234", %"class.std::__1::unique_ptr.234", %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.255", %"class.std::__1::unique_ptr.280", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.198" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.198" = type { %"struct.std::__1::__atomic_base.199" }
%"struct.std::__1::__atomic_base.199" = type { %"struct.std::__1::__atomic_base.200" }
%"struct.std::__1::__atomic_base.200" = type { %"struct.std::__1::__cxx_atomic_impl.201" }
%"struct.std::__1::__cxx_atomic_impl.201" = type { %"struct.std::__1::__cxx_atomic_base_impl.202" }
%"struct.std::__1::__cxx_atomic_base_impl.202" = type { i64 }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::Worklist.209"* }
%"class.blink::Worklist.209" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.198" }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::Worklist.216"* }
%"class.blink::Worklist.216" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.198" }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.blink::Worklist.223"* }
%"class.blink::Worklist.223" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.198" }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::Worklist.230"* }
%"class.blink::Worklist.230" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.198" }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.blink::Worklist.237"* }
%"class.blink::Worklist.237" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.198" }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.blink::Worklist.244"* }
%"class.blink::Worklist.244" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.198" }
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.blink::Worklist.251"* }
%"class.blink::Worklist.251" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.198" }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.267", %"class.std::__1::__compressed_pair.272", %"class.std::__1::__compressed_pair.274", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { i64 }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { float }
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.283", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.292" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.308" }
%"class.WTF::VectorBuffer.308" = type { %"class.WTF::VectorBufferBase.309" }
%"class.WTF::VectorBufferBase.309" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.322" }
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.209"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.216"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.223"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.230"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.237"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.346", i64 }
%"class.std::__1::vector.346" = type { %"class.std::__1::__vector_base.347" }
%"class.std::__1::__vector_base.347" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.348" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.328" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.340 }
%class.scoped_refptr.340 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.341" = type { %"struct.std::__1::__atomic_base.342" }
%"struct.std::__1::__atomic_base.342" = type { %"struct.std::__1::__cxx_atomic_impl.343" }
%"struct.std::__1::__cxx_atomic_impl.343" = type { %"struct.std::__1::__cxx_atomic_base_impl.344" }
%"struct.std::__1::__cxx_atomic_base_impl.344" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.345" }
%"class.base::time_internal::TimeBase.345" = type { i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN5blink10TraceTraitINS_13DocumentStateEE5TraceEPNS_7VisitorEPKv = comdat any

@_ZN5blink10http_names5kPOSTE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZZN5blinkL22GenerateSequenceNumberEvE4next = internal unnamed_addr global i64 0, align 8
@_ZGVZN5blinkL22GenerateSequenceNumberEvE4next = internal global i64 0, align 8
@_ZN5blink10http_names12kContentTypeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4

@_ZN5blink11HistoryItemC1Ev = hidden unnamed_addr alias void (%"class.blink::HistoryItem"*), void (%"class.blink::HistoryItem"*)* @_ZN5blink11HistoryItemC2Ev
@_ZN5blink11HistoryItemD1Ev = hidden unnamed_addr alias void (%"class.blink::HistoryItem"*), void (%"class.blink::HistoryItem"*)* @_ZN5blink11HistoryItemD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HistoryItemC2Ev(%"class.blink::HistoryItem"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Time", align 8
  %3 = alloca %"class.base::Time", align 8
  %4 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 1, i32 1
  %5 = bitcast %"class.blink::HistoryItem"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false)
  store i32 1, i32* %4, align 8
  %6 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %union.anon* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #9
  %9 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 5
  %10 = bitcast %"class.WTF::Vector"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 25, i1 false)
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22GenerateSequenceNumberEvE4next to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %23, !prof !2

13:                                               ; preds = %1
  %14 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22GenerateSequenceNumberEvE4next) #9
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %13
  %17 = bitcast %"class.base::Time"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  %18 = tail call i64 @_ZN4base4Time3NowEv() #9
  %19 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %2, i64 0, i32 0, i32 0
  store i64 %18, i64* %19, align 8
  %20 = call double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"* nonnull %2) #9
  %21 = fmul double %20, 1.000000e+06
  %22 = fptosi double %21 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  store i64 %22, i64* @_ZZN5blinkL22GenerateSequenceNumberEvE4next, align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22GenerateSequenceNumberEvE4next) #9
  br label %23

23:                                               ; preds = %1, %13, %16
  %24 = load i64, i64* @_ZZN5blinkL22GenerateSequenceNumberEvE4next, align 8
  %25 = add nsw i64 %24, 1
  store i64 %25, i64* @_ZZN5blinkL22GenerateSequenceNumberEvE4next, align 8
  store i64 %25, i64* %9, align 8
  %26 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 6
  %27 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22GenerateSequenceNumberEvE4next to i8*) acquire, align 8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %39, !prof !2

29:                                               ; preds = %23
  %30 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22GenerateSequenceNumberEvE4next) #9
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %29
  %33 = bitcast %"class.base::Time"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  %34 = call i64 @_ZN4base4Time3NowEv() #9
  %35 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %3, i64 0, i32 0, i32 0
  store i64 %34, i64* %35, align 8
  %36 = call double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"* nonnull %3) #9
  %37 = fmul double %36, 1.000000e+06
  %38 = fptosi double %37 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  store i64 %38, i64* @_ZZN5blinkL22GenerateSequenceNumberEvE4next, align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22GenerateSequenceNumberEvE4next) #9
  br label %39

39:                                               ; preds = %23, %29, %32
  %40 = load i64, i64* @_ZZN5blinkL22GenerateSequenceNumberEvE4next, align 8
  %41 = add nsw i64 %40, 1
  store i64 %41, i64* @_ZZN5blinkL22GenerateSequenceNumberEvE4next, align 8
  store i64 %41, i64* %26, align 8
  %42 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 7
  store i32 0, i32* %42, align 8
  %43 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 8, i32 0
  %44 = bitcast %"class.blink::SerializedScriptValue"** %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false)
  %45 = call %"class.WTF::StringImpl"* @_ZN3WTF25CreateCanonicalUUIDStringEv() #9
  %46 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 11, i32 0, i32 0
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %46, align 8
  %47 = call %"class.WTF::StringImpl"* @_ZN3WTF25CreateCanonicalUUIDStringEv() #9
  %48 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 12, i32 0, i32 0
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %48, align 8
  %49 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 13, i32 0
  store %"class.blink::SerializedScriptValue"* null, %"class.blink::SerializedScriptValue"** %49, align 8
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF25CreateCanonicalUUIDStringEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HistoryItemD2Ev(%"class.blink::HistoryItem"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %2, align 8
  %4 = icmp eq %"class.blink::SerializedScriptValue"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  tail call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %3) #9
  %10 = bitcast %"class.blink::SerializedScriptValue"* %3 to i8*
  tail call void @free(i8* %10) #9
  br label %11

11:                                               ; preds = %1, %5, %9
  %12 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 12, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #9
  br label %28

28:                                               ; preds = %11, %24, %27
  %29 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 11, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #9
  br label %45

45:                                               ; preds = %28, %41, %44
  %46 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #9
  br label %62

62:                                               ; preds = %45, %58, %61
  %63 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 9, i32 0
  %64 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %63, align 8
  %65 = icmp eq %"class.blink::EncodedFormData"* %64, null
  br i1 %65, label %73, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %64, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %67) #9
  %68 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %66
  tail call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %64) #9
  %72 = bitcast %"class.blink::EncodedFormData"* %64 to i8*
  tail call void @free(i8* %72) #9
  br label %73

73:                                               ; preds = %62, %66, %71
  %74 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 8, i32 0
  %75 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %74, align 8
  %76 = icmp eq %"class.blink::SerializedScriptValue"* %75, null
  br i1 %76, label %83, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw sub i32* %78, i32 1 acq_rel
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %83

81:                                               ; preds = %77
  tail call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %75) #9
  %82 = bitcast %"class.blink::SerializedScriptValue"* %75 to i8*
  tail call void @free(i8* %82) #9
  br label %83

83:                                               ; preds = %73, %77, %81
  %84 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %85 = load i8, i8* %84, align 8, !range !3
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %88) #9
  store i8 0, i8* %84, align 8
  br label %89

89:                                               ; preds = %83, %87
  %90 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 2
  %91 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %90, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::String"*, %"class.WTF::String"** %91, align 8
  %93 = icmp eq %"class.WTF::String"* %92, null
  br i1 %93, label %128, label %94, !prof !4

94:                                               ; preds = %89
  %95 = bitcast %"class.WTF::String"* %92 to i8*
  %96 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %126, label %99, !prof !5

99:                                               ; preds = %94
  %100 = zext i32 %97 to i64
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %92, i64 %100
  br label %102

102:                                              ; preds = %120, %99
  %103 = phi %"class.WTF::String"* [ %121, %120 ], [ %92, %99 ]
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %103, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #9
  br label %120

120:                                              ; preds = %119, %116, %102
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %103, i64 1
  %122 = icmp eq %"class.WTF::String"* %121, %101
  br i1 %122, label %123, label %102

123:                                              ; preds = %120
  store i32 0, i32* %96, align 4
  %124 = bitcast %"class.WTF::Vector"* %90 to i8**
  %125 = load i8*, i8** %124, align 8
  br label %126

126:                                              ; preds = %123, %94
  %127 = phi i8* [ %125, %123 ], [ %95, %94 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %127) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %91, align 8
  br label %128

128:                                              ; preds = %89, %126
  %129 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %145, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  br i1 %136, label %139, label %141

139:                                              ; preds = %132
  %140 = add i32 %138, -1
  store i32 %140, i32* %137, align 4
  br label %141

141:                                              ; preds = %139, %132
  %142 = phi i32 [ %140, %139 ], [ %138, %132 ]
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %141
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %130) #9
  br label %145

145:                                              ; preds = %128, %141, %144
  %146 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 0, i32 0, i32 0
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %148, label %162, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  br i1 %153, label %156, label %158

156:                                              ; preds = %149
  %157 = add i32 %155, -1
  store i32 %157, i32* %154, align 4
  br label %158

158:                                              ; preds = %156, %149
  %159 = phi i32 [ %157, %156 ], [ %155, %149 ]
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %158
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %147) #9
  br label %162

162:                                              ; preds = %145, %158, %161
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.WTF::String"* @_ZNK5blink11HistoryItem9UrlStringEv(%"class.blink::HistoryItem"* readnone) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 0
  ret %"class.WTF::String"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11HistoryItem3UrlEv(%"class.blink::KURL"* noalias sret, %"class.blink::HistoryItem"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %1, i64 0, i32 0
  tail call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* %0, %"class.WTF::String"* dereferenceable(8) %3) #9
  ret void
}

declare void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(16) %"struct.blink::Referrer"* @_ZNK5blink11HistoryItem11GetReferrerEv(%"class.blink::HistoryItem"* readnone) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 1
  ret %"struct.blink::Referrer"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HistoryItem12SetURLStringERKN3WTF6StringE(%"class.blink::HistoryItem"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %4, %"class.WTF::StringImpl"* %6) #9
  br i1 %7, label %46, label %8

8:                                                ; preds = %2
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #9
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !5

25:                                               ; preds = %16
  tail call void @llvm.trap() #9
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %8
  %29 = ptrtoint %"class.WTF::StringImpl"* %9 to i64
  %30 = bitcast %"class.blink::HistoryItem"* %0 to i64*
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  store i64 %29, i64* %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #9
  br label %46

46:                                               ; preds = %2, %45, %42, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HistoryItem6SetURLERKNS_4KURLE(%"class.blink::HistoryItem"* nocapture, %"class.blink::KURL"* nocapture readonly dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %1, i64 0, i32 4, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %4, %"class.WTF::StringImpl"* %6) #9
  br i1 %7, label %46, label %8

8:                                                ; preds = %2
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #9
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !5

25:                                               ; preds = %16
  tail call void @llvm.trap() #9
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %8
  %29 = ptrtoint %"class.WTF::StringImpl"* %9 to i64
  %30 = bitcast %"class.blink::HistoryItem"* %0 to i64*
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  store i64 %29, i64* %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #9
  br label %46

46:                                               ; preds = %2, %28, %42, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HistoryItem11SetReferrerERKNS_8ReferrerE(%"class.blink::HistoryItem"*, %"struct.blink::Referrer"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = getelementptr inbounds %"struct.blink::Referrer", %"struct.blink::Referrer"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %3, %"class.WTF::String"* dereferenceable(8) %7) #9
  %8 = getelementptr inbounds %"struct.blink::Referrer", %"struct.blink::Referrer"* %1, i64 0, i32 0, i32 0
  %9 = call { %"class.WTF::StringImpl"*, i32 } @_ZN5blink14SecurityPolicy16GenerateReferrerEN7network5mojom14ReferrerPolicyERKNS_4KURLERKN3WTF6StringE(i32 %5, %"class.blink::KURL"* nonnull dereferenceable(112) %3, %"class.WTF::String"* dereferenceable(8) %8) #9
  %10 = extractvalue { %"class.WTF::StringImpl"*, i32 } %9, 0
  %11 = ptrtoint %"class.WTF::StringImpl"* %10 to i64
  %12 = extractvalue { %"class.WTF::StringImpl"*, i32 } %9, 1
  %13 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 1
  %14 = bitcast %"struct.blink::Referrer"* %13 to i64*
  %15 = getelementptr inbounds %"struct.blink::Referrer", %"struct.blink::Referrer"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  store i64 %11, i64* %14, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #9
  br label %31

31:                                               ; preds = %30, %27, %2
  %32 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 1, i32 1
  store i32 %12, i32* %32, align 8
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %6) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare { %"class.WTF::StringImpl"*, i32 } @_ZN5blink14SecurityPolicy16GenerateReferrerEN7network5mojom14ReferrerPolicyERKNS_4KURLERKN3WTF6StringE(i32, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HistoryItem29SetVisualViewportScrollOffsetERKNS_9FloatSizeE(%"class.blink::HistoryItem"*, %"class.blink::FloatSize"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::ScrollAnchorData", align 8
  %4 = alloca %"class.blink::WebString", align 8
  %5 = alloca %"class.absl::optional", align 8
  %6 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %52

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10) #9
  store i8 1, i8* %10, align 8, !alias.scope !6
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = bitcast %"struct.blink::ScrollAnchorData"* %3 to i8*
  %13 = bitcast %"class.blink::HistoryItem::ViewState"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 48, i1 false) #9, !alias.scope !6
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #9, !noalias !6
  %14 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %14) #9
  %15 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 1, i32 0
  store float 0.000000e+00, float* %15, align 8, !alias.scope !6
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 1, i32 1
  store float 0.000000e+00, float* %16, align 4, !alias.scope !6
  %17 = bitcast %"class.blink::WebString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9, !noalias !6
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* nonnull %4) #9
  %18 = getelementptr inbounds %"struct.blink::ScrollAnchorData", %"struct.blink::ScrollAnchorData"* %3, i64 0, i32 0
  call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* nonnull %18, %"class.blink::WebString"* nonnull dereferenceable(8) %4) #9
  %19 = getelementptr inbounds %"struct.blink::ScrollAnchorData", %"struct.blink::ScrollAnchorData"* %3, i64 0, i32 1
  %20 = bitcast %"class.gfx::PointF"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9, !noalias !6
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %18) #9
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9, !noalias !6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #9, !noalias !6
  %21 = load i8, i8* %10, align 8, !range !3
  %22 = icmp eq i8 %21, 0
  %23 = load i8, i8* %6, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %22, label %40, label %25

25:                                               ; preds = %9
  %26 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %27 = bitcast %"class.blink::HistoryItem::ViewState"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %13, i64 20, i1 false) #9
  %28 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0
  br i1 %24, label %35, label %29

29:                                               ; preds = %25
  %30 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKS0_(%"class.blink::WebString"* %28, %"class.blink::WebString"* dereferenceable(8) %14) #9
  %31 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 1
  %32 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 1
  %33 = bitcast %"class.gfx::PointF"* %31 to i8*
  %34 = bitcast %"class.gfx::PointF"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 16, i1 false) #9
  br label %44

35:                                               ; preds = %25
  call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %28, %"class.blink::WebString"* dereferenceable(8) %14) #9
  %36 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 1
  %37 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 1
  %38 = bitcast %"class.gfx::PointF"* %36 to i8*
  %39 = bitcast %"class.gfx::PointF"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 16, i1 false) #9
  store i8 1, i8* %6, align 8
  br label %44

40:                                               ; preds = %9
  br i1 %24, label %41, label %42

41:                                               ; preds = %40
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #9
  br label %51

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %43) #9
  store i8 0, i8* %6, align 8
  br label %44

44:                                               ; preds = %29, %35, %42
  %45 = load i8, i8* %10, align 8
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %48, label %47

47:                                               ; preds = %44
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %14) #9
  store i8 0, i8* %10, align 8
  br label %48

48:                                               ; preds = %47, %44
  %49 = load i8, i8* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #9
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %52, !prof !5

51:                                               ; preds = %41, %48
  call void @llvm.trap() #9
  unreachable

52:                                               ; preds = %2, %48
  %53 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %54 = bitcast %"class.blink::FloatSize"* %1 to i64*
  %55 = bitcast %"class.blink::HistoryItem::ViewState"* %53 to i64*
  %56 = load i64, i64* %54, align 4
  store i64 %56, i64* %55, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HistoryItem15SetScrollOffsetERKNS_9FloatSizeE(%"class.blink::HistoryItem"*, %"class.blink::FloatSize"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::ScrollAnchorData", align 8
  %4 = alloca %"class.blink::WebString", align 8
  %5 = alloca %"class.absl::optional", align 8
  %6 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %52

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10) #9
  store i8 1, i8* %10, align 8, !alias.scope !9
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = bitcast %"struct.blink::ScrollAnchorData"* %3 to i8*
  %13 = bitcast %"class.blink::HistoryItem::ViewState"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 48, i1 false) #9, !alias.scope !9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #9, !noalias !9
  %14 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %14) #9
  %15 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 1, i32 0
  store float 0.000000e+00, float* %15, align 8, !alias.scope !9
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 1, i32 1
  store float 0.000000e+00, float* %16, align 4, !alias.scope !9
  %17 = bitcast %"class.blink::WebString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9, !noalias !9
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* nonnull %4) #9
  %18 = getelementptr inbounds %"struct.blink::ScrollAnchorData", %"struct.blink::ScrollAnchorData"* %3, i64 0, i32 0
  call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* nonnull %18, %"class.blink::WebString"* nonnull dereferenceable(8) %4) #9
  %19 = getelementptr inbounds %"struct.blink::ScrollAnchorData", %"struct.blink::ScrollAnchorData"* %3, i64 0, i32 1
  %20 = bitcast %"class.gfx::PointF"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9, !noalias !9
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %18) #9
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9, !noalias !9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #9, !noalias !9
  %21 = load i8, i8* %10, align 8, !range !3
  %22 = icmp eq i8 %21, 0
  %23 = load i8, i8* %6, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %22, label %40, label %25

25:                                               ; preds = %9
  %26 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %27 = bitcast %"class.blink::HistoryItem::ViewState"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %13, i64 20, i1 false) #9
  %28 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0
  br i1 %24, label %35, label %29

29:                                               ; preds = %25
  %30 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKS0_(%"class.blink::WebString"* %28, %"class.blink::WebString"* dereferenceable(8) %14) #9
  %31 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 1
  %32 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 1
  %33 = bitcast %"class.gfx::PointF"* %31 to i8*
  %34 = bitcast %"class.gfx::PointF"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 16, i1 false) #9
  br label %44

35:                                               ; preds = %25
  call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %28, %"class.blink::WebString"* dereferenceable(8) %14) #9
  %36 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 1
  %37 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 1
  %38 = bitcast %"class.gfx::PointF"* %36 to i8*
  %39 = bitcast %"class.gfx::PointF"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 16, i1 false) #9
  store i8 1, i8* %6, align 8
  br label %44

40:                                               ; preds = %9
  br i1 %24, label %41, label %42

41:                                               ; preds = %40
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #9
  br label %51

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %43) #9
  store i8 0, i8* %6, align 8
  br label %44

44:                                               ; preds = %29, %35, %42
  %45 = load i8, i8* %10, align 8
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %48, label %47

47:                                               ; preds = %44
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %14) #9
  store i8 0, i8* %10, align 8
  br label %48

48:                                               ; preds = %47, %44
  %49 = load i8, i8* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #9
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %52, !prof !5

51:                                               ; preds = %41, %48
  call void @llvm.trap() #9
  unreachable

52:                                               ; preds = %2, %48
  %53 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %54 = bitcast %"class.blink::FloatSize"* %1 to i64*
  %55 = bitcast %"class.blink::FloatSize"* %53 to i64*
  %56 = load i64, i64* %54, align 4
  store i64 %56, i64* %55, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HistoryItem18SetPageScaleFactorEf(%"class.blink::HistoryItem"*, float) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::ScrollAnchorData", align 8
  %4 = alloca %"class.blink::WebString", align 8
  %5 = alloca %"class.absl::optional", align 8
  %6 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %52

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10) #9
  store i8 1, i8* %10, align 8, !alias.scope !12
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = bitcast %"struct.blink::ScrollAnchorData"* %3 to i8*
  %13 = bitcast %"class.blink::HistoryItem::ViewState"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 48, i1 false) #9, !alias.scope !12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #9, !noalias !12
  %14 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %14) #9
  %15 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 1, i32 0
  store float 0.000000e+00, float* %15, align 8, !alias.scope !12
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 1, i32 1
  store float 0.000000e+00, float* %16, align 4, !alias.scope !12
  %17 = bitcast %"class.blink::WebString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9, !noalias !12
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* nonnull %4) #9
  %18 = getelementptr inbounds %"struct.blink::ScrollAnchorData", %"struct.blink::ScrollAnchorData"* %3, i64 0, i32 0
  call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* nonnull %18, %"class.blink::WebString"* nonnull dereferenceable(8) %4) #9
  %19 = getelementptr inbounds %"struct.blink::ScrollAnchorData", %"struct.blink::ScrollAnchorData"* %3, i64 0, i32 1
  %20 = bitcast %"class.gfx::PointF"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9, !noalias !12
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %18) #9
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #9, !noalias !12
  %21 = load i8, i8* %10, align 8, !range !3
  %22 = icmp eq i8 %21, 0
  %23 = load i8, i8* %6, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %22, label %40, label %25

25:                                               ; preds = %9
  %26 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %27 = bitcast %"class.blink::HistoryItem::ViewState"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %13, i64 20, i1 false) #9
  %28 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0
  br i1 %24, label %35, label %29

29:                                               ; preds = %25
  %30 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKS0_(%"class.blink::WebString"* %28, %"class.blink::WebString"* dereferenceable(8) %14) #9
  %31 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 1
  %32 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 1
  %33 = bitcast %"class.gfx::PointF"* %31 to i8*
  %34 = bitcast %"class.gfx::PointF"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 16, i1 false) #9
  br label %44

35:                                               ; preds = %25
  call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %28, %"class.blink::WebString"* dereferenceable(8) %14) #9
  %36 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 1
  %37 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 1
  %38 = bitcast %"class.gfx::PointF"* %36 to i8*
  %39 = bitcast %"class.gfx::PointF"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 16, i1 false) #9
  store i8 1, i8* %6, align 8
  br label %44

40:                                               ; preds = %9
  br i1 %24, label %41, label %42

41:                                               ; preds = %40
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #9
  br label %51

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %43) #9
  store i8 0, i8* %6, align 8
  br label %44

44:                                               ; preds = %29, %35, %42
  %45 = load i8, i8* %10, align 8
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %48, label %47

47:                                               ; preds = %44
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %14) #9
  store i8 0, i8* %10, align 8
  br label %48

48:                                               ; preds = %47, %44
  %49 = load i8, i8* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #9
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %52, !prof !5

51:                                               ; preds = %41, %48
  call void @llvm.trap() #9
  unreachable

52:                                               ; preds = %2, %48
  %53 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  store float %1, float* %53, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HistoryItem19SetScrollAnchorDataERKNS_16ScrollAnchorDataE(%"class.blink::HistoryItem"*, %"struct.blink::ScrollAnchorData"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::ScrollAnchorData", align 8
  %4 = alloca %"class.blink::WebString", align 8
  %5 = alloca %"class.absl::optional", align 8
  %6 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %52

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10) #9
  store i8 1, i8* %10, align 8, !alias.scope !15
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = bitcast %"struct.blink::ScrollAnchorData"* %3 to i8*
  %13 = bitcast %"class.blink::HistoryItem::ViewState"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 48, i1 false) #9, !alias.scope !15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #9, !noalias !15
  %14 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %14) #9
  %15 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 1, i32 0
  store float 0.000000e+00, float* %15, align 8, !alias.scope !15
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 1, i32 1
  store float 0.000000e+00, float* %16, align 4, !alias.scope !15
  %17 = bitcast %"class.blink::WebString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9, !noalias !15
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* nonnull %4) #9
  %18 = getelementptr inbounds %"struct.blink::ScrollAnchorData", %"struct.blink::ScrollAnchorData"* %3, i64 0, i32 0
  call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* nonnull %18, %"class.blink::WebString"* nonnull dereferenceable(8) %4) #9
  %19 = getelementptr inbounds %"struct.blink::ScrollAnchorData", %"struct.blink::ScrollAnchorData"* %3, i64 0, i32 1
  %20 = bitcast %"class.gfx::PointF"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9, !noalias !15
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %18) #9
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #9, !noalias !15
  %21 = load i8, i8* %10, align 8, !range !3
  %22 = icmp eq i8 %21, 0
  %23 = load i8, i8* %6, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %22, label %40, label %25

25:                                               ; preds = %9
  %26 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %27 = bitcast %"class.blink::HistoryItem::ViewState"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %13, i64 20, i1 false) #9
  %28 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0
  br i1 %24, label %35, label %29

29:                                               ; preds = %25
  %30 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKS0_(%"class.blink::WebString"* %28, %"class.blink::WebString"* dereferenceable(8) %14) #9
  %31 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 1
  %32 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 1
  %33 = bitcast %"class.gfx::PointF"* %31 to i8*
  %34 = bitcast %"class.gfx::PointF"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 16, i1 false) #9
  br label %44

35:                                               ; preds = %25
  call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %28, %"class.blink::WebString"* dereferenceable(8) %14) #9
  %36 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 1
  %37 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 1
  %38 = bitcast %"class.gfx::PointF"* %36 to i8*
  %39 = bitcast %"class.gfx::PointF"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 16, i1 false) #9
  store i8 1, i8* %6, align 8
  br label %44

40:                                               ; preds = %9
  br i1 %24, label %41, label %42

41:                                               ; preds = %40
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #9
  br label %51

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %43) #9
  store i8 0, i8* %6, align 8
  br label %44

44:                                               ; preds = %29, %35, %42
  %45 = load i8, i8* %10, align 8
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %48, label %47

47:                                               ; preds = %44
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %14) #9
  store i8 0, i8* %10, align 8
  br label %48

48:                                               ; preds = %47, %44
  %49 = load i8, i8* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #9
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %52, !prof !5

51:                                               ; preds = %41, %48
  call void @llvm.trap() #9
  unreachable

52:                                               ; preds = %2, %48
  %53 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0
  %54 = getelementptr inbounds %"struct.blink::ScrollAnchorData", %"struct.blink::ScrollAnchorData"* %1, i64 0, i32 0
  %55 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKS0_(%"class.blink::WebString"* %53, %"class.blink::WebString"* dereferenceable(8) %54) #9
  %56 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 1
  %57 = getelementptr inbounds %"struct.blink::ScrollAnchorData", %"struct.blink::ScrollAnchorData"* %1, i64 0, i32 1
  %58 = bitcast %"class.gfx::PointF"* %56 to i8*
  %59 = bitcast %"class.gfx::PointF"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 16, i1 false) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HistoryItem16SetDocumentStateERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::HistoryItem"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 2
  %4 = tail call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector"* %3, %"class.WTF::Vector"* dereferenceable(16) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector"* %1, %0
  br i1 %3, label %219, label %4, !prof !5

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %39

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %15
  br label %17

17:                                               ; preds = %35, %10
  %18 = phi %"class.WTF::String"* [ %36, %35 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #9
  br label %35

35:                                               ; preds = %34, %31, %17
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 1
  %37 = icmp eq %"class.WTF::String"* %36, %14
  br i1 %37, label %38, label %17

38:                                               ; preds = %35
  store i32 %8, i32* %5, align 4
  br label %116

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp ugt i32 %8, %41
  br i1 %42, label %43, label %114

43:                                               ; preds = %39
  %44 = icmp eq i32 %41, 0
  br i1 %44, label %80, label %45

45:                                               ; preds = %43
  %46 = icmp eq i32 %6, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = zext i32 %6 to i64
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %50
  br label %52

52:                                               ; preds = %70, %47
  %53 = phi %"class.WTF::String"* [ %71, %70 ], [ %49, %47 ]
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #9
  br label %70

70:                                               ; preds = %69, %66, %52
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 1
  %72 = icmp eq %"class.WTF::String"* %71, %51
  br i1 %72, label %73, label %52

73:                                               ; preds = %70
  store i32 0, i32* %5, align 4
  br label %74

74:                                               ; preds = %73, %45
  %75 = bitcast %"class.WTF::Vector"* %0 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %77 monotonic, align 8
  store i32 0, i32* %40, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #9
  %78 = load i32, i32* %7, align 4
  %79 = load i32, i32* %40, align 8
  br label %80

80:                                               ; preds = %43, %74
  %81 = phi i32 [ 0, %43 ], [ %79, %74 ]
  %82 = phi i32 [ %8, %43 ], [ %78, %74 ]
  %83 = icmp ult i32 %81, %82
  br i1 %83, label %84, label %114, !prof !4

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %87 = icmp eq %"class.WTF::String"* %86, null
  %88 = zext i32 %82 to i64
  %89 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %88) #9
  %90 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %89, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #9
  br i1 %87, label %91, label %96

91:                                               ; preds = %84
  %92 = ptrtoint i8* %90 to i64
  %93 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %92, i64* %93 monotonic, align 8
  %94 = lshr i64 %89, 3
  %95 = trunc i64 %94 to i32
  store i32 %95, i32* %40, align 8
  br label %114

96:                                               ; preds = %84
  %97 = lshr i64 %89, 3
  %98 = ptrtoint i8* %90 to i64
  %99 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %100 = icmp ne i8* %90, null
  %101 = icmp ne %"class.WTF::String"* %99, null
  %102 = and i1 %100, %101
  %103 = bitcast %"class.WTF::String"* %99 to i8*
  br i1 %102, label %104, label %110, !prof !4

104:                                              ; preds = %96
  %105 = load i32, i32* %5, align 4
  %106 = zext i32 %105 to i64
  %107 = shl nuw nsw i64 %106, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* nonnull align 8 %103, i64 %107, i1 false) #9
  %108 = bitcast %"class.WTF::Vector"* %0 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %110

110:                                              ; preds = %104, %96
  %111 = phi i8* [ %109, %104 ], [ %103, %96 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %111) #9
  %112 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %98, i64* %112 monotonic, align 8
  %113 = trunc i64 %97 to i32
  store i32 %113, i32* %40, align 8
  br label %114

114:                                              ; preds = %39, %80, %91, %110
  %115 = load i32, i32* %5, align 4
  br label %116

116:                                              ; preds = %114, %38
  %117 = phi i32 [ %115, %114 ], [ %8, %38 ]
  %118 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::String"*, %"class.WTF::String"** %118, align 8
  %120 = zext i32 %117 to i64
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 %120
  %122 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  %124 = icmp eq i32 %117, 0
  br i1 %124, label %175, label %125

125:                                              ; preds = %116, %167
  %126 = phi %"class.WTF::String"* [ %169, %167 ], [ %123, %116 ]
  %127 = phi %"class.WTF::String"* [ %168, %167 ], [ %119, %116 ]
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %148, label %131

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %148

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = zext i32 %138 to i33
  %140 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %139, i33 1) #9
  %141 = extractvalue { i33, i1 } %140, 1
  %142 = extractvalue { i33, i1 } %140, 0
  %143 = icmp slt i33 %142, 0
  %144 = or i1 %141, %143
  br i1 %144, label %145, label %146, !prof !5

145:                                              ; preds = %136
  tail call void @llvm.trap() #9
  unreachable

146:                                              ; preds = %136
  %147 = trunc i33 %142 to i32
  store i32 %147, i32* %137, align 4
  br label %148

148:                                              ; preds = %146, %131, %125
  %149 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %150 = bitcast %"class.WTF::String"* %126 to i64*
  %151 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 0, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  store i64 %149, i64* %150, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #9
  br label %167

167:                                              ; preds = %166, %163, %148
  %168 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 1
  %169 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 1
  %170 = icmp eq %"class.WTF::String"* %168, %121
  br i1 %170, label %171, label %125

171:                                              ; preds = %167
  %172 = load %"class.WTF::String"*, %"class.WTF::String"** %118, align 8
  %173 = load i32, i32* %5, align 4
  %174 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  br label %175

175:                                              ; preds = %171, %116
  %176 = phi %"class.WTF::String"* [ %174, %171 ], [ %123, %116 ]
  %177 = phi i32 [ %173, %171 ], [ 0, %116 ]
  %178 = phi %"class.WTF::String"* [ %172, %171 ], [ %119, %116 ]
  %179 = zext i32 %177 to i64
  %180 = load i32, i32* %7, align 4
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %181
  %183 = icmp eq i32 %177, %180
  br i1 %183, label %217, label %184

184:                                              ; preds = %175
  %185 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %176, i64 %179
  %186 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %179
  br label %187

187:                                              ; preds = %184, %211
  %188 = phi %"class.WTF::String"* [ %212, %211 ], [ %185, %184 ]
  %189 = phi %"class.WTF::String"* [ %213, %211 ], [ %186, %184 ]
  %190 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 0, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %191, %"class.WTF::StringImpl"** %192, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %193, label %211, label %194

194:                                              ; preds = %187
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %211

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i33
  %203 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %202, i33 1) #9
  %204 = extractvalue { i33, i1 } %203, 1
  %205 = extractvalue { i33, i1 } %203, 0
  %206 = icmp slt i33 %205, 0
  %207 = or i1 %204, %206
  br i1 %207, label %208, label %209, !prof !5

208:                                              ; preds = %199
  tail call void @llvm.trap() #9
  unreachable

209:                                              ; preds = %199
  %210 = trunc i33 %205 to i32
  store i32 %210, i32* %200, align 4
  br label %211

211:                                              ; preds = %209, %194, %187
  %212 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 1
  %213 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 1
  %214 = icmp eq %"class.WTF::String"* %213, %182
  br i1 %214, label %215, label %187

215:                                              ; preds = %211
  %216 = load i32, i32* %7, align 4
  br label %217

217:                                              ; preds = %215, %175
  %218 = phi i32 [ %216, %215 ], [ %177, %175 ]
  store i32 %218, i32* %5, align 4
  br label %219

219:                                              ; preds = %2, %217
  ret %"class.WTF::Vector"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HistoryItem16SetDocumentStateEPNS_13DocumentStateE(%"class.blink::HistoryItem"* nocapture, %"class.blink::DocumentState"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 3
  %4 = ptrtoint %"class.blink::DocumentState"* %1 to i64
  %5 = bitcast %"class.blink::Member"* %3 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::DocumentState"* %1 to i8*
  %10 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #9
  br label %11

11:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.WTF::Vector"* @_ZN5blink11HistoryItem16GetDocumentStateEv(%"class.blink::HistoryItem"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::Vector", align 8
  %3 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::DocumentState"*, %"class.blink::DocumentState"** %3, align 8
  %5 = icmp eq %"class.blink::DocumentState"* %4, null
  br i1 %5, label %57, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.WTF::Vector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  call void @_ZN5blink13DocumentState13ToStateVectorEv(%"class.WTF::Vector"* nonnull sret %2, %"class.blink::DocumentState"* nonnull %4) #9
  %8 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 2
  %9 = bitcast %"class.WTF::Vector"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.WTF::Vector"* %8 to i64*
  %12 = load i64, i64* %11, align 8
  store atomic i64 %12, i64* %9 monotonic, align 8
  store atomic i64 %10, i64* %11 monotonic, align 8
  %13 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %13, align 4
  %16 = load i32, i32* %14, align 8
  store i32 %16, i32* %13, align 4
  store i32 %15, i32* %14, align 8
  %17 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %17, align 4
  %20 = load i32, i32* %18, align 4
  store i32 %20, i32* %17, align 4
  store i32 %19, i32* %18, align 4
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 0
  %22 = inttoptr i64 %12 to %"class.WTF::String"*
  %23 = icmp eq i64 %12, 0
  br i1 %23, label %56, label %24, !prof !4

24:                                               ; preds = %6
  %25 = inttoptr i64 %12 to i8*
  %26 = icmp eq i32 %19, 0
  br i1 %26, label %54, label %27, !prof !5

27:                                               ; preds = %24
  %28 = zext i32 %19 to i64
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 %28
  br label %30

30:                                               ; preds = %48, %27
  %31 = phi %"class.WTF::String"* [ %49, %48 ], [ %22, %27 ]
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #9
  br label %48

48:                                               ; preds = %47, %44, %30
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 1
  %50 = icmp eq %"class.WTF::String"* %49, %29
  br i1 %50, label %51, label %30

51:                                               ; preds = %48
  store i32 0, i32* %18, align 4
  %52 = bitcast %"class.WTF::Vector"* %2 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %51, %24
  %55 = phi i8* [ %53, %51 ], [ %25, %24 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %55) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %21, align 8
  br label %56

56:                                               ; preds = %6, %54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  br label %57

57:                                               ; preds = %1, %56
  %58 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 2
  ret %"class.WTF::Vector"* %58
}

declare void @_ZN5blink13DocumentState13ToStateVectorEv(%"class.WTF::Vector"* sret, %"class.blink::DocumentState"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HistoryItem22GetReferencedFilePathsEv(%"class.WTF::Vector"* noalias sret, %"class.blink::HistoryItem"*) local_unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(16) %"class.WTF::Vector"* @_ZN5blink11HistoryItem16GetDocumentStateEv(%"class.blink::HistoryItem"* %1)
  tail call void @_ZN5blink14FormController22GetReferencedFilePathsERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.WTF::Vector"* sret %0, %"class.WTF::Vector"* dereferenceable(16) %3) #9
  ret void
}

declare void @_ZN5blink14FormController22GetReferencedFilePathsERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.WTF::Vector"* sret, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HistoryItem18ClearDocumentStateEv(%"class.blink::HistoryItem"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 3, i32 0
  %3 = bitcast %"class.blink::MemberBase"* %2 to i64*
  store atomic i64 0, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %43, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %39, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::String"*, %"class.WTF::String"** %13, align 8
  %15 = zext i32 %10 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 %15
  br label %17

17:                                               ; preds = %35, %12
  %18 = phi %"class.WTF::String"* [ %36, %35 ], [ %14, %12 ]
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #9
  br label %35

35:                                               ; preds = %34, %31, %17
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 1
  %37 = icmp eq %"class.WTF::String"* %36, %16
  br i1 %37, label %38, label %17

38:                                               ; preds = %35
  store i32 0, i32* %9, align 4
  br label %39

39:                                               ; preds = %38, %8
  %40 = bitcast %"class.WTF::Vector"* %4 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = bitcast %"class.WTF::Vector"* %4 to i64*
  store atomic i64 0, i64* %42 monotonic, align 8
  store i32 0, i32* %5, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %41) #9
  br label %43

43:                                               ; preds = %1, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HistoryItem14SetStateObjectE13scoped_refptrINS_21SerializedScriptValueEE(%"class.blink::HistoryItem"* nocapture, %"class.blink::SerializedScriptValue"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::SerializedScriptValue"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 8
  %5 = bitcast %class.scoped_refptr.14* %4 to i64*
  %6 = getelementptr inbounds %class.scoped_refptr.14, %class.scoped_refptr.14* %4, i64 0, i32 0
  %7 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %6, align 8
  store i64 %3, i64* %5, align 8
  %8 = icmp eq %"class.blink::SerializedScriptValue"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  tail call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %7) #9
  %14 = bitcast %"class.blink::SerializedScriptValue"* %7 to i8*
  tail call void @free(i8* %14) #9
  br label %15

15:                                               ; preds = %13, %9, %2
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink11HistoryItem15FormContentTypeEv(%"class.blink::HistoryItem"* readnone) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 10
  ret %"class.WTF::AtomicString"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HistoryItem11SetFormDataE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::HistoryItem"* nocapture, %"class.blink::EncodedFormData"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::EncodedFormData"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 9
  %5 = bitcast %class.scoped_refptr.82* %4 to i64*
  %6 = getelementptr inbounds %class.scoped_refptr.82, %class.scoped_refptr.82* %4, i64 0, i32 0
  %7 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %6, align 8
  store i64 %3, i64* %5, align 8
  %8 = icmp eq %"class.blink::EncodedFormData"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %7, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %10) #9
  %11 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %9
  tail call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %7) #9
  %15 = bitcast %"class.blink::EncodedFormData"* %7 to i8*
  tail call void @free(i8* %15) #9
  br label %16

16:                                               ; preds = %14, %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HistoryItem18SetFormContentTypeERKN3WTF12AtomicStringE(%"class.blink::HistoryItem"* nocapture, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 10
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #9
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !5

21:                                               ; preds = %12
  tail call void @llvm.trap() #9
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %2
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  %27 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #9
  br label %43

43:                                               ; preds = %24, %39, %42
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::EncodedFormData"* @_ZN5blink11HistoryItem8FormDataEv(%"class.blink::HistoryItem"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 9, i32 0
  %3 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %2, align 8
  ret %"class.blink::EncodedFormData"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HistoryItem18SetAppHistoryStateE13scoped_refptrINS_21SerializedScriptValueEE(%"class.blink::HistoryItem"* nocapture, %"class.blink::SerializedScriptValue"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::SerializedScriptValue"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 13
  %5 = bitcast %class.scoped_refptr.14* %4 to i64*
  %6 = getelementptr inbounds %class.scoped_refptr.14, %class.scoped_refptr.14* %4, i64 0, i32 0
  %7 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %6, align 8
  store i64 %3, i64* %5, align 8
  %8 = icmp eq %"class.blink::SerializedScriptValue"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  tail call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %7) #9
  %14 = bitcast %"class.blink::SerializedScriptValue"* %7 to i8*
  tail call void @free(i8* %14) #9
  br label %15

15:                                               ; preds = %13, %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HistoryItem23GenerateResourceRequestENS_5mojom14FetchCacheModeE(%"class.blink::ResourceRequest"* noalias sret, %"class.blink::HistoryItem"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 1032, i1 false)
  %5 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %1, i64 0, i32 0
  tail call void @_ZN5blink15ResourceRequestC1ERKN3WTF6StringE(%"class.blink::ResourceRequest"* %0, %"class.WTF::String"* dereferenceable(8) %5) #9
  %6 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %0, i64 0, i32 0, i32 22
  %8 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #9
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !5

25:                                               ; preds = %16
  tail call void @llvm.trap() #9
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = ptrtoint %"class.WTF::StringImpl"* %9 to i64
  %30 = bitcast %"class.WTF::String"* %7 to i64*
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %29, i64* %30, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #9
  br label %47

47:                                               ; preds = %28, %43, %46
  %48 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %1, i64 0, i32 1, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %0, i64 0, i32 0, i32 23
  store i32 %49, i32* %50, align 8
  tail call void @_ZN5blink19ResourceRequestHead12SetCacheModeENS_5mojom14FetchCacheModeE(%"class.blink::ResourceRequestHead"* %6, i32 %2) #9
  %51 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %1, i64 0, i32 9, i32 0
  %52 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %51, align 8
  %53 = icmp eq %"class.blink::EncodedFormData"* %52, null
  br i1 %53, label %63, label %54

54:                                               ; preds = %47
  %55 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names5kPOSTE, align 8
  tail call void @_ZN5blink19ResourceRequestHead13SetHttpMethodERKN3WTF12AtomicStringE(%"class.blink::ResourceRequestHead"* %6, %"class.WTF::AtomicString"* dereferenceable(8) %55) #9
  %56 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %51, align 8
  %57 = icmp eq %"class.blink::EncodedFormData"* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %56, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %59) #9
  br label %60

60:                                               ; preds = %54, %58
  tail call void @_ZN5blink15ResourceRequest11SetHttpBodyE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::ResourceRequest"* %0, %"class.blink::EncodedFormData"* %56) #9
  %61 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %1, i64 0, i32 10
  %62 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names12kContentTypeE, align 8
  tail call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* %6, %"class.WTF::AtomicString"* dereferenceable(8) %62, %"class.WTF::AtomicString"* dereferenceable(8) %61) #9
  tail call void @_ZN5blink19ResourceRequestHead36SetHTTPOriginToMatchReferrerIfNeededEv(%"class.blink::ResourceRequestHead"* %6) #9
  br label %63

63:                                               ; preds = %47, %60
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN5blink15ResourceRequestC1ERKN3WTF6StringE(%"class.blink::ResourceRequest"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink19ResourceRequestHead12SetCacheModeENS_5mojom14FetchCacheModeE(%"class.blink::ResourceRequestHead"*, i32) local_unnamed_addr #1

declare void @_ZN5blink19ResourceRequestHead13SetHttpMethodERKN3WTF12AtomicStringE(%"class.blink::ResourceRequestHead"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink15ResourceRequest11SetHttpBodyE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::ResourceRequest"*, %"class.blink::EncodedFormData"*) local_unnamed_addr #1

declare void @_ZN5blink19ResourceRequestHead36SetHTTPOriginToMatchReferrerIfNeededEv(%"class.blink::ResourceRequestHead"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11HistoryItem5TraceEPNS_7VisitorE(%"class.blink::HistoryItem"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13DocumentStateEE5TraceEPNS_7VisitorEPKv) #9
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #6

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #1

declare double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"*) unnamed_addr #1

declare void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"*, %"class.blink::WebString"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKS0_(%"class.blink::WebString"*, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"*) unnamed_addr #4

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13DocumentStateEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DocumentState"*
  tail call void @_ZNK5blink13DocumentState5TraceEPNS_7VisitorE(%"class.blink::DocumentState"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink13DocumentState5TraceEPNS_7VisitorE(%"class.blink::DocumentState"*, %"class.blink::Visitor"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN4absl13make_optionalIN5blink11HistoryItem9ViewStateEJEEENS_8optionalIT_EEDpOT0_: argument 0"}
!8 = distinct !{!8, !"_ZN4absl13make_optionalIN5blink11HistoryItem9ViewStateEJEEENS_8optionalIT_EEDpOT0_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN4absl13make_optionalIN5blink11HistoryItem9ViewStateEJEEENS_8optionalIT_EEDpOT0_: argument 0"}
!11 = distinct !{!11, !"_ZN4absl13make_optionalIN5blink11HistoryItem9ViewStateEJEEENS_8optionalIT_EEDpOT0_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN4absl13make_optionalIN5blink11HistoryItem9ViewStateEJEEENS_8optionalIT_EEDpOT0_: argument 0"}
!14 = distinct !{!14, !"_ZN4absl13make_optionalIN5blink11HistoryItem9ViewStateEJEEENS_8optionalIT_EEDpOT0_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN4absl13make_optionalIN5blink11HistoryItem9ViewStateEJEEENS_8optionalIT_EEDpOT0_: argument 0"}
!17 = distinct !{!17, !"_ZN4absl13make_optionalIN5blink11HistoryItem9ViewStateEJEEENS_8optionalIT_EEDpOT0_"}
