; ModuleID = '../../ui/wm/core/default_screen_position_client.cc'
source_filename = "../../ui/wm/core/default_screen_position_client.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.wm::DefaultScreenPositionClient" = type { %"class.aura::client::ScreenPositionClient", %"class.aura::Window"* }
%"class.aura::client::ScreenPositionClient" = type { i32 (...)** }
%"class.aura::Window" = type { %"class.ui::LayerDelegate", %"class.ui::LayerOwner", %"class.ui::EventTarget", %"class.ui::GestureConsumer", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", %"class.viz::HostFrameSinkClient", %"class.gfx::Rect", %"class.aura::WindowTreeHost"*, i32, i8, i8, %"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.std::__1::vector.85", i8, i32, %class.SkRegion, i32, i8, i8, %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.98", %"class.std::__1::vector.104", i32, i32, i32, [4 x i8], %"class.base::ObserverList.111", i32, %"class.viz::SubtreeCaptureId", float, %"class.viz::FrameSinkId", i8, i8, i8, %"class.std::__1::unique_ptr.123", %"class.base::WeakPtr.129" }
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.ui::Layer"*, %"class.base::ObserverList" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.1" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.4", %"class.std::__1::vector.20", %"class.ui::EventHandler"* }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.27" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type { i32 (...)**, %"class.ui::EventDispatcherDelegate"*, %"class.ui::Event"*, %"class.std::__1::vector.20" }
%"class.ui::EventDispatcherDelegate" = type { i32 (...)**, %"class.ui::EventDispatcher"* }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.13" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.6" }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.8" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.base::flat_map.16"* }
%"class.base::flat_map.16" = type opaque
%"class.ui::GestureConsumer" = type { i32 (...)** }
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { i64 }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.40" }
%"class.std::__1::map.40" = type { %"class.std::__1::__tree.41" }
%"class.std::__1::__tree.41" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.viz::HostFrameSinkClient" = type { i32 (...)** }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.aura::WindowTreeHost" = type { %"class.ui::internal::InputMethodDelegate", %"class.ui::EventSource", %"class.display::DisplayObserver", %"class.ui::CompositorObserver", %"class.aura::Window"*, i32, [4 x i8], %"class.base::ObserverList.59", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.69", float, %"class.ui::Cursor", %"class.gfx::Point", %"class.std::__1::unique_ptr.78", %"class.ui::InputMethod"*, i8, i8, i8, %"class.base::WeakPtrFactory.84" }
%"class.ui::internal::InputMethodDelegate" = type { i32 (...)** }
%"class.ui::EventSource" = type { i32 (...)**, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.49" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.display::DisplayObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.54" }
%"struct.std::__1::atomic.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__cxx_atomic_impl.57" }
%"struct.std::__1::__cxx_atomic_impl.57" = type { %"struct.std::__1::__cxx_atomic_base_impl.58" }
%"struct.std::__1::__cxx_atomic_base_impl.58" = type { i8 }
%"class.ui::CompositorObserver" = type { i32 (...)** }
%"class.base::ObserverList.59" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.60", i64, i32, [4 x i8] }>
%"class.base::LinkedList.60" = type { %"class.base::LinkNode.61" }
%"class.base::LinkNode.61" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.aura::WindowEventDispatcher"* }
%"class.aura::WindowEventDispatcher" = type opaque
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.ui::Compositor"* }
%"class.ui::Compositor" = type opaque
%"class.ui::Cursor" = type { i32, %class.scoped_refptr.75, float, %"class.gfx::Point", %class.SkBitmap }
%class.scoped_refptr.75 = type { %"class.ui::PlatformCursor"* }
%"class.ui::PlatformCursor" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.77 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.76, i32, i32 }
%class.sk_sp.76 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.54" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.77 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.ui::ViewProp"* }
%"class.ui::ViewProp" = type opaque
%"class.ui::InputMethod" = type opaque
%"class.base::WeakPtrFactory.84" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.aura::WindowDelegate" = type opaque
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { %"class.aura::Window"**, %"class.aura::Window"**, %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.aura::Window"** }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.aura::LayoutManager"* }
%"class.aura::LayoutManager" = type opaque
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.aura::WindowTargeter"* }
%"class.aura::WindowTargeter" = type opaque
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.gfx::Rect"* }
%"class.base::ObserverList.111" = type <{ %"class.std::__1::vector.112", %"class.base::LinkedList.120", i64, i32, [4 x i8] }>
%"class.std::__1::vector.112" = type { %"class.std::__1::__vector_base.113" }
%"class.std::__1::__vector_base.113" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.115" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.114 }
%class.scoped_refptr.114 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.120" = type { %"class.base::LinkNode.121" }
%"class.base::LinkNode.121" = type { %"class.base::internal::LinkNodeBase" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.viz::ParentLocalSurfaceIdAllocator"* }
%"class.viz::ParentLocalSurfaceIdAllocator" = type opaque
%"class.base::WeakPtr.129" = type { %"class.base::internal::WeakPtrBase" }
%"class.gfx::PointF" = type { float, float }
%"class.display::Display" = type { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, %"class.absl::optional", i32, i32, %"class.gfx::Size", %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.130" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.130" = type { %"class.absl::optional_internal::optional_data.131" }
%"class.absl::optional_internal::optional_data.131" = type { %"class.absl::optional_internal::optional_data_base.132" }
%"class.absl::optional_internal::optional_data_base.132" = type { %"class.absl::optional_internal::optional_data_dtor_base.133" }
%"class.absl::optional_internal::optional_data_dtor_base.133" = type { i8, %union.anon.134 }
%union.anon.134 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.display::Screen" = type { i32 (...)**, i64, i64 }

@_ZTVN2wm27DefaultScreenPositionClientE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.wm::DefaultScreenPositionClient"*)* @_ZN2wm27DefaultScreenPositionClientD2Ev to i8*), i8* bitcast (void (%"class.wm::DefaultScreenPositionClient"*)* @_ZN2wm27DefaultScreenPositionClientD0Ev to i8*), i8* bitcast (void (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*, %"class.gfx::PointF"*)* @_ZN2wm27DefaultScreenPositionClient20ConvertPointToScreenEPKN4aura6WindowEPN3gfx6PointFE to i8*), i8* bitcast (void (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*, %"class.gfx::PointF"*)* @_ZN2wm27DefaultScreenPositionClient22ConvertPointFromScreenEPKN4aura6WindowEPN3gfx6PointFE to i8*), i8* bitcast (void (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*, %"class.gfx::Point"*)* @_ZN2wm27DefaultScreenPositionClient24ConvertHostPointToScreenEPN4aura6WindowEPN3gfx5PointE to i8*), i8* bitcast (void (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*, %"class.gfx::Rect"*, %"class.display::Display"*)* @_ZN2wm27DefaultScreenPositionClient9SetBoundsEPN4aura6WindowERKN3gfx4RectERKN7display7DisplayE to i8*), i8* bitcast (i64 (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*)* @_ZN2wm27DefaultScreenPositionClient27GetRootWindowOriginInScreenEPKN4aura6WindowE to i8*)] }, align 8

@_ZN2wm27DefaultScreenPositionClientC1EPN4aura6WindowE = hidden unnamed_addr alias void (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*), void (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*)* @_ZN2wm27DefaultScreenPositionClientC2EPN4aura6WindowE
@_ZN2wm27DefaultScreenPositionClientD1Ev = hidden unnamed_addr alias void (%"class.wm::DefaultScreenPositionClient"*), void (%"class.wm::DefaultScreenPositionClient"*)* @_ZN2wm27DefaultScreenPositionClientD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm27DefaultScreenPositionClientC2EPN4aura6WindowE(%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::DefaultScreenPositionClient", %"class.wm::DefaultScreenPositionClient"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.wm::DefaultScreenPositionClient", %"class.wm::DefaultScreenPositionClient"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN2wm27DefaultScreenPositionClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.wm::DefaultScreenPositionClient", %"class.wm::DefaultScreenPositionClient"* %0, i64 0, i32 1
  store %"class.aura::Window"* %1, %"class.aura::Window"** %5, align 8
  tail call void @_ZN4aura6client23SetScreenPositionClientEPNS_6WindowEPNS0_20ScreenPositionClientE(%"class.aura::Window"* %1, %"class.aura::client::ScreenPositionClient"* %3) #4
  ret void
}

declare void @_ZN4aura6client23SetScreenPositionClientEPNS_6WindowEPNS0_20ScreenPositionClientE(%"class.aura::Window"*, %"class.aura::client::ScreenPositionClient"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm27DefaultScreenPositionClientD2Ev(%"class.wm::DefaultScreenPositionClient"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.wm::DefaultScreenPositionClient", %"class.wm::DefaultScreenPositionClient"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN2wm27DefaultScreenPositionClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.wm::DefaultScreenPositionClient", %"class.wm::DefaultScreenPositionClient"* %0, i64 0, i32 1
  %4 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  tail call void @_ZN4aura6client23SetScreenPositionClientEPNS_6WindowEPNS0_20ScreenPositionClientE(%"class.aura::Window"* %4, %"class.aura::client::ScreenPositionClient"* null) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm27DefaultScreenPositionClientD0Ev(%"class.wm::DefaultScreenPositionClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.wm::DefaultScreenPositionClient", %"class.wm::DefaultScreenPositionClient"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN2wm27DefaultScreenPositionClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.wm::DefaultScreenPositionClient", %"class.wm::DefaultScreenPositionClient"* %0, i64 0, i32 1
  %4 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  tail call void @_ZN4aura6client23SetScreenPositionClientEPNS_6WindowEPNS0_20ScreenPositionClientE(%"class.aura::Window"* %4, %"class.aura::client::ScreenPositionClient"* null) #4
  %5 = bitcast %"class.wm::DefaultScreenPositionClient"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm27DefaultScreenPositionClient20ConvertPointToScreenEPKN4aura6WindowEPN3gfx6PointFE(%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*, %"class.gfx::PointF"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.aura::Window"* @_ZNK4aura6Window13GetRootWindowEv(%"class.aura::Window"* %1) #4
  tail call void @_ZN4aura6Window20ConvertPointToTargetEPKS0_S2_PN3gfx6PointFE(%"class.aura::Window"* %1, %"class.aura::Window"* %4, %"class.gfx::PointF"* %2) #4
  %5 = bitcast %"class.wm::DefaultScreenPositionClient"* %0 to i64 (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*)***
  %6 = load i64 (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*)**, i64 (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*)*, i64 (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*)** %6, i64 6
  %8 = load i64 (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*)*, i64 (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*)** %7, align 8
  %9 = tail call i64 %8(%"class.wm::DefaultScreenPositionClient"* %0, %"class.aura::Window"* %4) #4
  %10 = trunc i64 %9 to i32
  %11 = lshr i64 %9, 32
  %12 = trunc i64 %11 to i32
  %13 = sitofp i32 %10 to float
  %14 = sitofp i32 %12 to float
  %15 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %2, i64 0, i32 0
  %16 = load float, float* %15, align 4
  %17 = fadd float %16, %13
  store float %17, float* %15, align 4
  %18 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %2, i64 0, i32 1
  %19 = load float, float* %18, align 4
  %20 = fadd float %19, %14
  store float %20, float* %18, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.aura::Window"* @_ZNK4aura6Window13GetRootWindowEv(%"class.aura::Window"*) local_unnamed_addr #1

declare void @_ZN4aura6Window20ConvertPointToTargetEPKS0_S2_PN3gfx6PointFE(%"class.aura::Window"*, %"class.aura::Window"*, %"class.gfx::PointF"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm27DefaultScreenPositionClient22ConvertPointFromScreenEPKN4aura6WindowEPN3gfx6PointFE(%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*, %"class.gfx::PointF"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.aura::Window"* @_ZNK4aura6Window13GetRootWindowEv(%"class.aura::Window"* %1) #4
  %5 = bitcast %"class.wm::DefaultScreenPositionClient"* %0 to i64 (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*)***
  %6 = load i64 (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*)**, i64 (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*)*, i64 (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*)** %6, i64 6
  %8 = load i64 (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*)*, i64 (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*)** %7, align 8
  %9 = tail call i64 %8(%"class.wm::DefaultScreenPositionClient"* %0, %"class.aura::Window"* %4) #4
  %10 = trunc i64 %9 to i32
  %11 = lshr i64 %9, 32
  %12 = trunc i64 %11 to i32
  %13 = sub nsw i32 0, %10
  %14 = sitofp i32 %13 to float
  %15 = sub nsw i32 0, %12
  %16 = sitofp i32 %15 to float
  %17 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %2, i64 0, i32 0
  %18 = load float, float* %17, align 4
  %19 = fadd float %18, %14
  store float %19, float* %17, align 4
  %20 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %2, i64 0, i32 1
  %21 = load float, float* %20, align 4
  %22 = fadd float %21, %16
  store float %22, float* %20, align 4
  tail call void @_ZN4aura6Window20ConvertPointToTargetEPKS0_S2_PN3gfx6PointFE(%"class.aura::Window"* %4, %"class.aura::Window"* %1, %"class.gfx::PointF"* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm27DefaultScreenPositionClient24ConvertHostPointToScreenEPN4aura6WindowEPN3gfx5PointE(%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*, %"class.gfx::Point"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %1) #4
  %5 = getelementptr inbounds %"class.wm::DefaultScreenPositionClient", %"class.wm::DefaultScreenPositionClient"* %0, i64 0, i32 0
  tail call void @_ZN4aura6client20ScreenPositionClient20ConvertPointToScreenEPKNS_6WindowEPN3gfx5PointE(%"class.aura::client::ScreenPositionClient"* %5, %"class.aura::Window"* %4, %"class.gfx::Point"* %2) #4
  ret void
}

declare %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"*) local_unnamed_addr #1

declare void @_ZN4aura6client20ScreenPositionClient20ConvertPointToScreenEPKNS_6WindowEPN3gfx5PointE(%"class.aura::client::ScreenPositionClient"*, %"class.aura::Window"*, %"class.gfx::Point"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm27DefaultScreenPositionClient9SetBoundsEPN4aura6WindowERKN3gfx4RectERKN7display7DisplayE(%"class.wm::DefaultScreenPositionClient"* nocapture readnone, %"class.aura::Window"*, %"class.gfx::Rect"* dereferenceable(16), %"class.display::Display"* nocapture readnone dereferenceable(568)) unnamed_addr #0 align 2 {
  tail call void @_ZN4aura6Window9SetBoundsERKN3gfx4RectE(%"class.aura::Window"* %1, %"class.gfx::Rect"* dereferenceable(16) %2) #4
  ret void
}

declare void @_ZN4aura6Window9SetBoundsERKN3gfx4RectE(%"class.aura::Window"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2wm27DefaultScreenPositionClient27GetRootWindowOriginInScreenEPKN4aura6WindowE(%"class.wm::DefaultScreenPositionClient"* nocapture readnone, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"class.gfx::Rect"*
  %5 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #4
  %6 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #4
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %8 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = tail call %"class.aura::WindowTreeHost"* @_ZNK4aura6Window7GetHostEv(%"class.aura::Window"* %1) #4
  %10 = bitcast %"class.aura::WindowTreeHost"* %9 to { i64, i64 } (%"class.aura::WindowTreeHost"*)***
  %11 = load { i64, i64 } (%"class.aura::WindowTreeHost"*)**, { i64, i64 } (%"class.aura::WindowTreeHost"*)*** %10, align 8
  %12 = getelementptr inbounds { i64, i64 } (%"class.aura::WindowTreeHost"*)*, { i64, i64 } (%"class.aura::WindowTreeHost"*)** %11, i64 15
  %13 = load { i64, i64 } (%"class.aura::WindowTreeHost"*)*, { i64, i64 } (%"class.aura::WindowTreeHost"*)** %12, align 8
  %14 = tail call { i64, i64 } %13(%"class.aura::WindowTreeHost"* %9) #4
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %16 = extractvalue { i64, i64 } %14, 0
  store i64 %16, i64* %15, align 8
  %17 = extractvalue { i64, i64 } %14, 1
  store i64 %17, i64* %7, align 8
  %18 = bitcast %"class.display::Screen"* %5 to { i64, i64 } (%"class.display::Screen"*, %"class.aura::Window"*, %"class.gfx::Rect"*)***
  %19 = load { i64, i64 } (%"class.display::Screen"*, %"class.aura::Window"*, %"class.gfx::Rect"*)**, { i64, i64 } (%"class.display::Screen"*, %"class.aura::Window"*, %"class.gfx::Rect"*)*** %18, align 8
  %20 = getelementptr inbounds { i64, i64 } (%"class.display::Screen"*, %"class.aura::Window"*, %"class.gfx::Rect"*)*, { i64, i64 } (%"class.display::Screen"*, %"class.aura::Window"*, %"class.gfx::Rect"*)** %19, i64 18
  %21 = load { i64, i64 } (%"class.display::Screen"*, %"class.aura::Window"*, %"class.gfx::Rect"*)*, { i64, i64 } (%"class.display::Screen"*, %"class.aura::Window"*, %"class.gfx::Rect"*)** %20, align 8
  %22 = call { i64, i64 } %21(%"class.display::Screen"* %5, %"class.aura::Window"* %1, %"class.gfx::Rect"* nonnull dereferenceable(16) %4) #4
  %23 = extractvalue { i64, i64 } %22, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #4
  ret i64 %23
}

declare %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() local_unnamed_addr #1

declare %"class.aura::WindowTreeHost"* @_ZNK4aura6Window7GetHostEv(%"class.aura::Window"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
